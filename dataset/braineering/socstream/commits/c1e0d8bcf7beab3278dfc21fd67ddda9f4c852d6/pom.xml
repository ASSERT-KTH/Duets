<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
<modelVersion>4.0.0</modelVersion>

  <groupId>com.acmutv</groupId>
  <artifactId>socstream</artifactId>
  <version>1.0</version>
  <packaging>jar</packaging>

  <name>Socstream</name>
  <description>
    Soccer analytics leveraging Flink. Solution to DEBS 2013 Grand Challenge.
    Coursework in Systems and Architectures for Big Data 2016/2017
  </description>
  <url>http://gitlab.com/acm-utv/socstream</url>
  <inceptionYear>2017</inceptionYear>

  <licenses>
    <license>
      <name>The MIT License (MIT)</name>
      <url>https://opensource.org/licenses/MIT</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <organization>
    <name>ACM Rome Tor Vergata</name>
    <url>https://acm.uniroma2.it</url>
  </organization>

  <developers>
    <developer>
      <name>Giacomo Marciani</name>
      <id>gmarciani</id>
      <email>gmarciani@acm.org</email>
      <url>http://gmarciani.com</url>
      <organization>ACM Rome Tor Vergata</organization>
      <organizationUrl>http://acm.uniroma2.it</organizationUrl>
      <roles>
        <role>Java Developer</role>
      </roles>
      <timezone>Europe/Rome</timezone>
      <properties>
        <picUrl>http://gmarciani.com/media/photos/giacomo-marciani-profile</picUrl>
      </properties>
    </developer>
    <developer>
      <name>Michele Porretta</name>
      <id>mporretta</id>
      <email>mporretta@acm.org</email>
      <url>http://micheleporretta.com</url>
      <organization>ACM Rome Tor Vergata</organization>
      <organizationUrl>http://acm.uniroma2.it</organizationUrl>
      <roles>
        <role>Java Developer</role>
      </roles>
      <timezone>Europe/Rome</timezone>
      <properties>
        <picUrl></picUrl>
      </properties>
    </developer>
  </developers>

  <issueManagement>
    <system>Gitlab Issues</system>
    <url>https://gitlab.com/acm-utv/socstream/issues</url>
  </issueManagement>

  <scm>
    <url>https://gitlab.com/acm-utv/socstream</url>
    <connection>scm:git:git://gitlab.com/acm-utv/socstream.git</connection>
    <developerConnection>scm:git:git@gitlab.com:acm-utv/socstream.git</developerConnection>
  </scm>

  <repositories>
    <repository>
      <id>mvn.repository.central</id>
      <name>Maven Central Repository</name>
      <url>https://repo1.maven.org/maven2</url>
      <layout>default</layout>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
        <checksumPolicy>warn</checksumPolicy>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
        <checksumPolicy>warn</checksumPolicy>
      </snapshots>
    </repository>
    <repository>
      <id>apache.snapshots</id>
      <name>Apache Development Snapshot Repository</name>
      <url>https://repository.apache.org/content/repositories/snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>

  <properties>
    <!-- General -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <project.main>com.acmutv.socstream.Driver</project.main>

    <!-- Core  -->
    <flink.version>1.3.1</flink.version>
    <kafka.version>0.10.2.0</kafka.version>

    <!-- GUI/CLI -->
    <apache.cli.version>1.3.1</apache.cli.version>

    <!-- Data Structures -->
    <apache.lang.version>3.5</apache.lang.version>

    <!-- I/O -->
    <apache.io.version>2.5</apache.io.version>
    <fasterxml.jackson.version>2.8.5</fasterxml.jackson.version>
    <fasterxml.jackson.yaml.version>2.8.3</fasterxml.jackson.yaml.version>

    <!-- Utilities -->
    <apache.math>3.6.1</apache.math>

    <!-- Log -->
    <slf4j.version>1.7.25</slf4j.version>
    <log4j.version>1.2.17</log4j.version>

    <!-- Test -->
    <junit.version>4.12</junit.version>

    <!-- Compilation -->
    <lombok.version>1.16.10</lombok.version>

    <!-- MAVEN PLUGINS -->
    <!-- Compiler -->
    <compiler.version>3.6.1</compiler.version>
    <compiler.java.version>1.8</compiler.java.version>
    <compiler.java.memory.initial>128m</compiler.java.memory.initial>
    <compiler.java.memory.maximum>512m</compiler.java.memory.maximum>
    <compiler.arguments/>

    <!-- Shade -->
    <shade.version>3.0.0</shade.version>

    <!-- JAR -->
    <jar.version>3.0.2</jar.version>

    <!-- Assembly -->
    <assembly.version>3.0.0</assembly.version>

    <!-- Exec -->
    <exec.version>1.5.0</exec.version>

    <!-- Surefire -->
    <surefire.version>2.19.1</surefire.version>
    <surefire.skipTests>false</surefire.skipTests>

    <!-- Javadoc -->
    <javadoc.version>2.10.4</javadoc.version>

    <!-- Clean -->
    <clean.version>3.0.0</clean.version>

  </properties>

  <dependencies>
    <!-- Core -->
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-java</artifactId>
      <version>${flink.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-streaming-java_2.10</artifactId>
      <version>${flink.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-clients_2.10</artifactId>
      <version>${flink.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-connector-kafka-0.10_2.10</artifactId>
      <version>${flink.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-clients</artifactId>
      <version>${kafka.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-connector-elasticsearch5_2.11</artifactId>
      <version>${flink.version}</version>
    </dependency>

    <!-- GUI/CLI -->
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>${apache.cli.version}</version>
      <scope>compile</scope>
    </dependency>

    <!-- Data Structures -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${apache.lang.version}</version>
      <scope>compile</scope>
    </dependency>

    <!-- I/O -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${apache.io.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${fasterxml.jackson.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${fasterxml.jackson.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
      <version>${fasterxml.jackson.yaml.version}</version>
      <scope>compile</scope>
    </dependency>

    <!-- Utilities -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-math3</artifactId>
      <version>${apache.math}</version>
    </dependency>

    <!-- Log -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>${log4j.version}</version>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Compilation -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <profiles>

    <!-- PROFILE: driver -->
    <profile>
      <id>driver</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <project.main>com.acmutv.socstream.Driver</project.main>
      </properties>
    </profile>

    <!-- PROFILE: query-1 -->
    <profile>
      <id>query-1</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <project.main>com.acmutv.socstream.query1.TopologyQuery1</project.main>
      </properties>
    </profile>

    <!-- PROFILE: query-2 -->
    <profile>
      <id>query-2</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <project.main>com.acmutv.socstream.query2.TopologyQuery2</project.main>
      </properties>
    </profile>

    <!-- PROFILE: query-3 -->
    <profile>
      <id>query-3</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <project.main>com.acmutv.socstream.query3.TopologyQuery3</project.main>
      </properties>
    </profile>

    <!-- PROFILE: skip-tests -->
    <profile>
      <id>skip-tests</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <surefire.skipTests>true</surefire.skipTests>
      </properties>
    </profile>

    <!-- PROFILE: build-jar (for Flink) -->
    <profile>
      <id>build-jar</id>

      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>

      <dependencies>
        <dependency>
          <groupId>org.apache.flink</groupId>
          <artifactId>flink-java</artifactId>
          <version>${flink.version}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.flink</groupId>
          <artifactId>flink-streaming-java_2.10</artifactId>
          <version>${flink.version}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.flink</groupId>
          <artifactId>flink-clients_2.10</artifactId>
          <version>${flink.version}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
          <version>${slf4j.version}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
          <version>${log4j.version}</version>
          <scope>provided</scope>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <!-- disable the exclusion rules -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <version>${shade.version}</version>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>shade</goal>
                </goals>
                <configuration>
                  <artifactSet>
                    <excludes combine.self="override"></excludes>
                  </artifactSet>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <pluginManagement>
      <plugins>

        <!-- Shade -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${shade.version}</version>
        </plugin>

        <!-- Compiler -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${compiler.version}</version>
        </plugin>

        <!-- JAR -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${jar.version}</version>
        </plugin>

        <!-- Assembly -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${assembly.version}</version>
        </plugin>

        <!-- Exec -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>${exec.version}</version>
        </plugin>

        <!-- Surefire -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${surefire.version}</version>
        </plugin>

        <!-- Proguard -->
        <plugin>
          <groupId>com.github.wvengen</groupId>
          <artifactId>proguard-maven-plugin</artifactId>
          <version>${proguard.version}</version>
        </plugin>

        <!-- Javadoc -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${javadoc.version}</version>
        </plugin>

        <!-- Clean -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${clean.version}</version>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>

      <!-- Compiler -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler.version}</version>
        <configuration>
          <source>${compiler.java.version}</source>
          <target>${compiler.java.version}</target>
          <fork>true</fork>
          <meminitial>${compiler.java.memory.initial}</meminitial>
          <maxmem>${compiler.java.memory.maximum}</maxmem>
          <compilerArgs>
            <arg>${compiler.arguments}</arg>
          </compilerArgs>
        </configuration>
      </plugin>

      <!-- Shade -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>${shade.version}</version>
        <executions>
          <!-- Run shade goal on package phase -->
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <artifactSet>
                <excludes>
                  <!-- This list contains all dependencies of fltotalDistancedist
                  Everything else will be packaged into the fat-jar
                  -->
                  <exclude>org.apache.flink:flink-annotations</exclude>
                  <exclude>org.apache.flink:flink-shaded-hadoop2</exclude>
                  <exclude>org.apache.flink:flink-shaded-curator-recipes</exclude>
                  <exclude>org.apache.flink:flink-core</exclude>
                  <exclude>org.apache.flink:flink-java</exclude>
                  <exclude>org.apache.flink:flink-scala_2.10</exclude>
                  <exclude>org.apache.flink:flink-runtime_2.10</exclude>
                  <exclude>org.apache.flink:flink-optimizer_2.10</exclude>
                  <exclude>org.apache.flink:flink-clients_2.10</exclude>
                  <exclude>org.apache.flink:flink-avro_2.10</exclude>
                  <exclude>org.apache.flink:flink-examples-batch_2.10</exclude>
                  <exclude>org.apache.flink:flink-examples-streaming_2.10</exclude>
                  <exclude>org.apache.flink:flink-streaming-java_2.10</exclude>
                  <exclude>org.apache.flink:flink-streaming-scala_2.10</exclude>
                  <exclude>org.apache.flink:flink-scala-shell_2.10</exclude>
                  <exclude>org.apache.flink:flink-python</exclude>
                  <exclude>org.apache.flink:flink-metrics-core</exclude>
                  <exclude>org.apache.flink:flink-metrics-jmx</exclude>
                  <exclude>org.apache.flink:flink-statebackend-rocksdb_2.10</exclude>

                  <!-- Also exclude very big transitive dependencies of Flink

                  WARNING: You have to remove these excludes if your code relies on other
                  versions of these dependencies.
                  -->

                  <!--<exclude>log4j:log4j</exclude>-->
                  <exclude>org.scala-lang:scala-library</exclude>
                  <exclude>org.scala-lang:scala-compiler</exclude>
                  <exclude>org.scala-lang:scala-reflect</exclude>
                  <exclude>com.data-artisans:flakka-actor_*</exclude>
                  <exclude>com.data-artisans:flakka-remote_*</exclude>
                  <exclude>com.data-artisans:flakka-slf4j_*</exclude>
                  <exclude>io.netty:netty-all</exclude>
                  <exclude>io.netty:netty</exclude>
                  <exclude>commons-fileupload:commons-fileupload</exclude>
                  <exclude>org.apache.avro:avro</exclude>
                  <exclude>commons-collections:commons-collections</exclude>
                  <exclude>org.codehaus.jackson:jackson-core-asl</exclude>
                  <exclude>org.codehaus.jackson:jackson-mapper-asl</exclude>
                  <exclude>com.thoughtworks.paranamer:paranamer</exclude>
                  <exclude>org.xerial.snappy:snappy-java</exclude>
                  <exclude>org.apache.commons:commons-compress</exclude>
                  <exclude>org.tukaani:xz</exclude>
                  <exclude>com.esotericsoftware.kryo:kryo</exclude>
                  <exclude>com.esotericsoftware.minlog:minlog</exclude>
                  <exclude>org.objenesis:objenesis</exclude>
                  <exclude>com.twitter:chill_*</exclude>
                  <exclude>com.twitter:chill-java</exclude>
                  <exclude>commons-lang:commons-lang</exclude>
                  <exclude>junit:junit</exclude>
                  <exclude>org.apache.commons:commons-lang3</exclude>
                  <!--<exclude>org.slf4j:slf4j-api</exclude>-->
                  <!--<exclude>log4j:log4j</exclude>-->
                  <!--<exclude>org.slf4j:slf4j-log4j12</exclude>-->
                  <exclude>org.apache.commons:commons-math</exclude>
                  <exclude>org.apache.sling:org.apache.sling.commons.json</exclude>
                  <exclude>commons-logging:commons-logging</exclude>
                  <exclude>commons-codec:commons-codec</exclude>
                  <exclude>com.fasterxml.jackson.core:jackson-core</exclude>
                  <exclude>com.fasterxml.jackson.core:jackson-databind</exclude>
                  <exclude>com.fasterxml.jackson.core:jackson-annotations</exclude>
                  <exclude>stax:stax-api</exclude>
                  <exclude>com.typesafe:config</exclude>
                  <exclude>org.uncommons.maths:uncommons-maths</exclude>
                  <exclude>com.github.scopt:scopt_*</exclude>
                  <exclude>commons-io:commons-io</exclude>
                  <exclude>commons-cli:commons-cli</exclude>
                </excludes>
              </artifactSet>
              <filters>
                <filter>
                  <artifact>org.apache.flink:*</artifact>
                  <excludes>
                    <!-- exclude shaded google but include shaded curator -->
                    <exclude>org/apache/flink/shaded/com/**</exclude>
                    <exclude>web-docs/**</exclude>
                  </excludes>
                </filter>
                <filter>
                  <!-- Do not copy the signatures in the META-INF folder.
                  Otherwise, this might cause SecurityExceptions when using the JAR. -->
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>${project.main}</mainClass>
                </transformer>
              </transformers>
              <createDependencyReducedPom>false</createDependencyReducedPom>
            </configuration>
          </execution>
        </executions>
      </plugin>


      <!-- JAR -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${jar.version}</version>
        <configuration>
          <archive>
            <manifestEntries>
              <Main-Class>${project.main}</Main-Class>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <!-- Assembly -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${assembly.version}</version>
        <configuration>
          <archive>
            <manifest>
              <mainClass>${project.main}</mainClass>
            </manifest>
          </archive>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Exec -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${exec.version}</version>
        <configuration>
          <mainClass>${project.main}</mainClass>
          <arguments>
            <argument/>
          </arguments>
          <systemProperties>
            <systemProperty>
              <key/>
              <value/>
            </systemProperty>
          </systemProperties>
        </configuration>
      </plugin>

      <!-- Surefire -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire.version}</version>
        <configuration>
          <skipTests>${surefire.skipTests}</skipTests>
          <parallel>methods</parallel>
          <threadCount>10</threadCount>
        </configuration>
      </plugin>

      <!-- Javadoc -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${javadoc.version}</version>
        <configuration>
          <show>private</show>
          <nohelp>true</nohelp>
        </configuration>
      </plugin>

      <!-- Clean -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${clean.version}</version>
      </plugin>
    </plugins>
  </build>
</project>
