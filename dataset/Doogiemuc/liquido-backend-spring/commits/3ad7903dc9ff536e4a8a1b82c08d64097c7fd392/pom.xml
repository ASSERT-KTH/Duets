<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.doogie.liquido</groupId>
	<artifactId>liquido-backend-spring</artifactId>
	<version>0.15.0</version>
	<packaging>jar</packaging>

	<name>liquido-backend-spring</name>
	<description>RESTfull backend for my Liquid Democracy web app "Liquido"</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.2.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>

		<!-- Prefix for docker image in docker repository. ArtifactId will be appended to this. -->
		<docker.image.prefix>org.doogie</docker.image.prefix>
	</properties>

	<dependencies>
    <!-- Spring Web MVC -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Spring data JPA: Java Persistence API with hibernate -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Spring Data REST: expose repositories as REST endpoint -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>

		<!-- Springfox Swagger2 - for autogenerated API documentation https://mvnrepository.com/artifact/io.springfox/springfox-swagger2 -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.7.0</version>
		</dependency>

		<!-- Springfox support for autogenerating /v2/api-docs from spring-sata-rest java sources (still in incubation -->
		<dependency>
		  <groupId>io.springfox</groupId>
		  <artifactId>springfox-data-rest</artifactId>
		  <version>2.7.0</version>
		</dependency>

		<!-- Springfox Swagger UI - See http://www.baeldung.com/swagger-2-documentation-for-spring-rest-api -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.7.0</version>
		</dependency>

		<!-- Apache Http Client for PATCH requests  https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.2</version>
		</dependency>

		<!-- Spring Security -->
		<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- Spring Developer Tools https://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-devtools.html  provide /h2-console for H2 DB  -->
		<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-devtools</artifactId>
				<optional>true</optional>
		</dependency>

		<!-- H2 Database that is automatically embedded in memory when the server starts. -->
		<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
		</dependency>

    <!-- spring-boot-starter-test: JUnit test case support -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- spring-security-test for testing with logged in users -->
		<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-test</artifactId>
				<scope>test</scope>
		</dependency>


		<!-- Google GSON for JSON (de)serializing - https://mvnrepository.com/artifact/com.google.code.gson/gson
		<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>2.7</version>
		</dependency>
		-->

		<!-- Project Lombok - https://projectlombok.org/ -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.16</version>
		</dependency>

		<!-- JUnit for testing -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
			<version>4.12</version>
      <scope>test</scope>
    </dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>1.3.7</version>
				<configuration>
					<repository>${docker.image.prefix}/${project.artifactId}</repository>
					<buildArgs>
						<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
					</buildArgs>
				</configuration>
			</plugin>
		</plugins>
	</build>


</project>
