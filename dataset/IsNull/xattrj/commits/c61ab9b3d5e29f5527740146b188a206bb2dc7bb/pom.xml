
<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ch.securityvision</groupId>
	<artifactId>xattrj</artifactId>
	<packaging>jar</packaging>
	<version>1.2</version>
	<name>xattrj</name>
    <description>Provides native extended attribute access for Java.</description>
	<url>http://securityvision.ch</url>
	
	<licenses>
	    <license>
	      <name>The Apache Software License, Version 2.0</name>
	      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
	      <distribution>repo</distribution>
	    </license>
  	</licenses>

    <scm>
        <url>https://github.com/IsNull/xattrj</url>
        <connection>https://github.com/IsNull/xattrj.git</connection>
    </scm>

    <!-- Deployment info  -->
    <distributionManagement>
        <repository>
            <id>securityvision-repository</id>
            <url>sftp://securityvision.ch//var/www/vhosts/lvps83-169-20-121.dedicated.hosteurope.de/dl.securityvision.ch/maven</url>
            <!-- Credentials are specified in private /.m2/settings.xml  -->
        </repository>
    </distributionManagement>
	
	<build>
	    <plugins>
	      <plugin>
	        <artifactId>maven-compiler-plugin</artifactId>
	        <version>2.3.2</version>
	        <configuration>
	          <source>1.7</source>
	          <target>1.7</target>
	        </configuration>
	      </plugin>
	    </plugins>

        <extensions>
            <!-- Enabling the use of SSH / SFTP -->
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh</artifactId>
                <version>2.6</version>
            </extension>
        </extensions>
	</build>
	
	
	
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>


	<profiles>
		<profile>
			<id>compile-jni</id>
            <activation>
		      <os>
		        <family>unix</family>
		      </os>
		    </activation>



	<build>
			<plugins>
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.7</version>
					<executions>
						<execution>
							<phase>process-classes</phase>
							<configuration>
								<target
									name="jni"
									description="Generate headers and compile the native code">
									<echo>Generating JNI headers</echo>
									<!-- -->
									<exec executable="javah" >
										<arg value="-d" />
										<arg value="${project.basedir}/src/main/c++" />
										<arg value="-classpath" />
										<arg value="${project.build.outputDirectory}" />
										<arg value="-force" />
										<arg value="ch.securityvision.xattrj.Xattrj" />
									</exec>
									
									<exec executable="make"></exec>
								</target>
							</configuration>
							<goals>
								<goal>run</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>

			<pluginManagement>
				<plugins>
					<!-- This plugin's configuration is used to store Eclipse m2e settings only.
					 It has no influence on the Maven build itself. -->
					<plugin>
						<groupId>org.eclipse.m2e</groupId>
						<artifactId>lifecycle-mapping</artifactId>
						<version>1.0.0</version>
						<configuration>
							<lifecycleMappingMetadata>
								<pluginExecutions>
									<pluginExecution>
										<pluginExecutionFilter>
											<groupId>
												org.apache.maven.plugins
											</groupId>
											<artifactId>
												maven-antrun-plugin
											</artifactId>
											<versionRange>
												[1.7,)
											</versionRange>
											<goals>
												<goal>run</goal>
											</goals>
										</pluginExecutionFilter>
										<action>
											<ignore></ignore>
										</action>
									</pluginExecution>
								</pluginExecutions>
							</lifecycleMappingMetadata>
						</configuration>
					</plugin>
				</plugins>
			</pluginManagement>
	</build>

		</profile>
	</profiles>


</project>
