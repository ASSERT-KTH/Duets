<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0.002" tests="50" errors="0" skipped="25" failures="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/local/openjdk-8/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.262-b10"/>
    <property name="animal.sniffer.skip" value="true"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/tmp/tmpypgsgq1e/assertj-core"/>
    <property name="maven.javadoc.skip" value="true"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="source.skip" value="true"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/tmp/tmpypgsgq1e/assertj-core"/>
    <property name="java.runtime.version" value="1.8.0_262-b10"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/local/openjdk-8/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="maven.test.error.ignore" value="true"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="license.skip" value="true"/>
    <property name="maven.conf" value="/usr/share/maven/conf"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="maven.test.failure.ignore" value="true"/>
    <property name="os.version" value="4.15.0-109-generic"/>
    <property name="library.jansi.path" value="/usr/share/maven/lib/jansi-native"/>
    <property name="user.home" value="/home/jdbl"/>
    <property name="user.timezone" value="Etc/UTC"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="jdbl"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.6.0.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/local/openjdk-8/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher package -e --fail-never -ntp -Dmaven.test.error.ignore=true -Dmaven.test.failure.ignore=true -B -Dmaven.javadoc.skip=true -Drat.skip=true -Danimal.sniffer.skip=true -Dmaven.javadoc.skip=true -Dlicense.skip=true -Dsource.skip=true"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_262"/>
    <property name="java.ext.dirs" value="/usr/local/openjdk-8/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/local/openjdk-8/jre/lib/resources.jar:/usr/local/openjdk-8/jre/lib/rt.jar:/usr/local/openjdk-8/jre/lib/sunrsasign.jar:/usr/local/openjdk-8/jre/lib/jsse.jar:/usr/local/openjdk-8/jre/lib/jce.jar:/usr/local/openjdk-8/jre/lib/charsets.jar:/usr/local/openjdk-8/jre/lib/jfr.jar:/usr/local/openjdk-8/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="rat.skip" value="true"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="should_run_test_when_assumption_passes[0]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0"/>
  <testcase name="should_ignore_test_when_assumption_fails[0]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: expected:&lt;&quot;[other]&quot;&gt; but was:&lt;&quot;[test]&quot;&gt;"/>
  </testcase>
  <testcase name="should_run_test_when_assumption_passes[1]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0"/>
  <testcase name="should_ignore_test_when_assumption_fails[1]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: expected:&lt;&quot;[other]&quot;&gt; but was:&lt;&quot;[test]&quot;&gt;"/>
  </testcase>
  <testcase name="should_run_test_when_assumption_passes[2]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0"/>
  <testcase name="should_ignore_test_when_assumption_fails[2]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: expected:&lt;[fals]e&gt; but was:&lt;[tru]e&gt;"/>
  </testcase>
  <testcase name="should_run_test_when_assumption_passes[3]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0"/>
  <testcase name="should_ignore_test_when_assumption_fails[3]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: expected:&lt;[fals]e&gt; but was:&lt;[tru]e&gt;"/>
  </testcase>
  <testcase name="should_run_test_when_assumption_passes[4]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0"/>
  <testcase name="should_ignore_test_when_assumption_fails[4]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: &#10;Expecting:&#10; &lt;[true, false, true]&gt;&#10;to contain only once:&#10; &lt;[true]&gt;&#10;but some elements were found more than once:&#10; &lt;[true]&gt;&#10;"/>
  </testcase>
  <testcase name="should_run_test_when_assumption_passes[5]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0"/>
  <testcase name="should_ignore_test_when_assumption_fails[5]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: expected:&lt;&apos;[b]&apos;&gt; but was:&lt;&apos;[a]&apos;&gt;"/>
  </testcase>
  <testcase name="should_run_test_when_assumption_passes[6]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0"/>
  <testcase name="should_ignore_test_when_assumption_fails[6]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: expected:&lt;&apos;[b]&apos;&gt; but was:&lt;&apos;[a]&apos;&gt;"/>
  </testcase>
  <testcase name="should_run_test_when_assumption_passes[7]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0"/>
  <testcase name="should_ignore_test_when_assumption_fails[7]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: &#10;Expecting:&#10; &lt;[&apos;2&apos;, &apos;4&apos;, &apos;2&apos;]&gt;&#10;to contain only once:&#10; &lt;[&apos;2&apos;]&gt;&#10;but some elements were found more than once:&#10; &lt;[&apos;2&apos;]&gt;&#10;"/>
  </testcase>
  <testcase name="should_run_test_when_assumption_passes[8]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0"/>
  <testcase name="should_ignore_test_when_assumption_fails[8]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: &#10;Expecting&#10;  &lt;java.lang.Comparable&gt;&#10; not to be an interface"/>
  </testcase>
  <testcase name="should_run_test_when_assumption_passes[9]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0"/>
  <testcase name="should_ignore_test_when_assumption_fails[9]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: [isBefore(&quot;2011-01-01&quot;)] &#10;Expecting:&#10;  &lt;2020-07-30T18:44:06.867&gt;&#10;to be strictly before:&#10;  &lt;2011-01-01T00:00:00.000&gt;"/>
  </testcase>
  <testcase name="should_run_test_when_assumption_passes[10]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0"/>
  <testcase name="should_ignore_test_when_assumption_fails[10]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: &#10;Expecting&#10;  &lt;/tmp/tmpypgsgq1e/assertj-core/test&gt;&#10;to have name:&#10;  &lt;&quot;other&quot;&gt;&#10;but had:&#10;  &lt;&quot;test&quot;&gt;"/>
  </testcase>
  <testcase name="should_run_test_when_assumption_passes[11]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0"/>
  <testcase name="should_ignore_test_when_assumption_fails[11]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: expected:&lt;null&gt; but was:&lt;test&gt;"/>
  </testcase>
  <testcase name="should_run_test_when_assumption_passes[12]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0"/>
  <testcase name="should_ignore_test_when_assumption_fails[12]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: &#10;Expecting:&#10;  &lt;java.io.ByteArrayInputStream@24efdd16&gt;&#10;to be an instance of:&#10;  &lt;java.lang.String&gt;&#10;but was instance of:&#10;  &lt;java.io.ByteArrayInputStream&gt;"/>
  </testcase>
  <testcase name="should_run_test_when_assumption_passes[13]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0"/>
  <testcase name="should_ignore_test_when_assumption_fails[13]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: &#10;Expecting:&#10; &lt;[2, 4, 2]&gt;&#10;to contain only once:&#10; &lt;[2]&gt;&#10;but some elements were found more than once:&#10; &lt;[2]&gt;&#10;"/>
  </testcase>
  <testcase name="should_run_test_when_assumption_passes[14]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0"/>
  <testcase name="should_ignore_test_when_assumption_fails[14]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: &#10;Expecting:&#10;  &lt;java.lang.IllegalArgumentException&gt;&#10;to be an instance of:&#10;  &lt;java.lang.NullPointerException&gt;&#10;but was:&#10;  &lt;&quot;java.lang.IllegalArgumentException&#10;	at org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test.provideAssumptionsRunners(Assumptions_assumeThat_with_various_types_Test.java:203)&#10;	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#10;	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#10;	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#10;	at java.lang.reflect.Method.invoke(Method.java:498)&#10;	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#10;	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#10;	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#10;	at org.junit.runners.Parameterized.allParameters(Parameterized.java:280)&#10;	at org.junit.runners.Parameterized.&lt;init&gt;(Parameterized.java:248)&#10;	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#10;	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&#10;	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#10;	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)&#10;	at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:104)&#10;	at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:86)&#10;	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)&#10;	at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)&#10;	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)&#10;	at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:33)&#10;	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:362)&#10;	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:272)&#10;	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)&#10;	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)&#10;	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)&#10;	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)&#10;	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)&#10;&quot;&gt;"/>
  </testcase>
  <testcase name="should_run_test_when_assumption_passes[15]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0"/>
  <testcase name="should_ignore_test_when_assumption_fails[15]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: &#10;Expecting:&#10;  &lt;java.lang.IllegalArgumentException&gt;&#10;to be an instance of:&#10;  &lt;java.lang.NullPointerException&gt;&#10;but was:&#10;  &lt;&quot;java.lang.IllegalArgumentException&#10;	at org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test$16.call(Assumptions_assumeThat_with_various_types_Test.java:228)&#10;	at org.assertj.core.api.ThrowableAssert.catchThrowable(ThrowableAssert.java:62)&#10;	at org.assertj.core.api.AssertionsForClassTypes.catchThrowable(AssertionsForClassTypes.java:779)&#10;	at org.assertj.core.api.Assertions.catchThrowable(Assertions.java:1198)&#10;	at org.assertj.core.api.Assumptions.assumeThatThrownBy(Assumptions.java:815)&#10;	at org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test$17.runFailingAssumption(Assumptions_assumeThat_with_various_types_Test.java:233)&#10;	at org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test.should_ignore_test_when_assumption_fails(Assumptions_assumeThat_with_various_types_Test.java:358)&#10;	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#10;	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#10;	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#10;	at java.lang.reflect.Method.invoke(Method.java:498)&#10;	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#10;	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#10;	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#10;	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#10;	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#10;	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#10;	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#10;	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#10;	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#10;	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#10;	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#10;	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#10;	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#10;	at org.junit.runners.Suite.runChild(Suite.java:128)&#10;	at org.junit.runners.Suite.runChild(Suite.java:27)&#10;	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#10;	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#10;	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#10;	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#10;	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#10;	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#10;	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#10;	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)&#10;	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:272)&#10;	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:236)&#10;	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)&#10;	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)&#10;	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)&#10;	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)&#10;&quot;&gt;"/>
  </testcase>
  <testcase name="should_run_test_when_assumption_passes[16]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0"/>
  <testcase name="should_ignore_test_when_assumption_fails[16]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: &#10;Expecting:&#10;  &lt;http://example.com/pages/&gt;&#10;to have parameter:&#10;  &lt;&quot;test&quot;&gt;&#10;but was missing"/>
  </testcase>
  <testcase name="should_run_test_when_assumption_passes[17]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0"/>
  <testcase name="should_ignore_test_when_assumption_fails[17]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: &#10;Expecting port of&#10;  &lt;example.com/pages/&gt;&#10;to be:&#10;  &lt;9090&gt;&#10;but was:&#10;  &lt;-1&gt;"/>
  </testcase>
  <testcase name="should_run_test_when_assumption_passes[18]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0.001"/>
  <testcase name="should_ignore_test_when_assumption_fails[18]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: &#10;Expecting&#10;  &lt;Mock for Future, hashCode: 2105880970&gt;&#10;to be done.&#10;Be aware that the state of the future in this message might not reflect the one at the time when the assertion was performed as it is evaluated later on"/>
  </testcase>
  <testcase name="should_run_test_when_assumption_passes[19]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0"/>
  <testcase name="should_ignore_test_when_assumption_fails[19]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: &#10;Expecting:&#10; &lt;[2, 4, 2]&gt;&#10;to contain only once:&#10; &lt;[2]&gt;&#10;but some elements were found more than once:&#10; &lt;[2]&gt;&#10;"/>
  </testcase>
  <testcase name="should_run_test_when_assumption_passes[20]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0"/>
  <testcase name="should_ignore_test_when_assumption_fails[20]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: &#10;Expecting:&#10; &lt;[]&gt;&#10;to contain only once:&#10; &lt;[2]&gt;&#10;but some elements were not found:&#10; &lt;[2]&gt;&#10;"/>
  </testcase>
  <testcase name="should_run_test_when_assumption_passes[21]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0"/>
  <testcase name="should_ignore_test_when_assumption_fails[21]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: &#10;Expecting:&#10; &lt;[2, 4, 2]&gt;&#10;to contain only once:&#10; &lt;[2]&gt;&#10;but some elements were found more than once:&#10; &lt;[2]&gt;&#10;"/>
  </testcase>
  <testcase name="should_run_test_when_assumption_passes[22]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0"/>
  <testcase name="should_ignore_test_when_assumption_fails[22]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: [test 2 isNull] expected:&lt;null&gt; but was:&lt;2&gt;"/>
  </testcase>
  <testcase name="should_run_test_when_assumption_passes[23]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0"/>
  <testcase name="should_ignore_test_when_assumption_fails[23]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: &#10;Expecting:&#10; &lt;{2=4}&gt;&#10;to contain key:&#10; &lt;4&gt;"/>
  </testcase>
  <testcase name="should_run_test_when_assumption_passes[24]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0"/>
  <testcase name="should_ignore_test_when_assumption_fails[24]" classname="org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test" time="0">
    <skipped message="assumption was not met due to: &#10;Expecting:&#10; &lt;org.assertj.core.api.test.ComparableExample@b7a9093&gt;&#10;to be less than:&#10; &lt;org.assertj.core.api.test.ComparableExample@7beba1a8&gt; "/>
  </testcase>
</testsuite>