<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.nameapi.client</groupId>
    <artifactId>nameapi-client</artifactId>
    <name>nameapi-client</name>
    <version>0.2-SNAPSHOT</version>

    <url>https://github.com/optimaize/nameapi-client-java</url>
    <description>
        Java Client for the NameAPI Web Service.
    </description>
    <organization>
        <name>Optimaize GmbH, Switzerland</name>
        <url>http://www.optimaize.com/</url>
    </organization>
    <developers>
        <developer>
            <name>Fabian Kessler</name>
        </developer>
        <developer>
            <name>Alexei Arshavin</name>
        </developer>
    </developers>
    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://opensource.org/licenses/MIT</url>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git://github.com/optimaize/nameapi-client-java.git</connection>
        <developerConnection>scm:git:git@github.com:optimaize/nameapi-client-java.git</developerConnection>
        <url>http://github.com/optimaize/nameapi-client-java</url>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.7</java.version>
        <soapworks.version>0.2</soapworks.version>
        <ontology.version>4.2</ontology.version>
    </properties>

    <build>
        <resources>
            <resource><!-- this is default, but because we tamper with the resources, we need to explicitly mention it. -->
                <directory>src/main/resources</directory>
            </resource>
            <resource><!-- Include the README and LICENSE files: -->
                <directory>${project.basedir}</directory>
                <includes>
                    <include>README*</include>
                    <include>LICENSE*</include>
                </includes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Required: javadoc JAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9.1</version>
                <executions>
                    <execution>
                        <id>attach-javadoc</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.4.1</version>
                <configuration>
                    <!-- Automated passphrase entry: -->

                    <!-- To pass your passphrase to the build automatically, so avoiding
                    manual interaction, you'll need to put the passphrase into settings.xml.
                    You don't really want that to be in plain text, so you'll want to follow:
                    http://maven.apache.org/guides/mini/guide-encryption.html -->
                    <!-- <arguments>-Dgpg.passphrase=${gpg.passphrase}</arguments> -->

                    <!-- Manual passphrase entry: -->

                    <!-- This is the simplest secure solution, but requires you to type
                    your key passphrase in manually when performing a release. No biggie unless
                    you want your CI server to decide when to release for you. -->
                    <mavenExecutorId>forked-path</mavenExecutorId>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>1.4</version>
            </plugin>
        </plugins>
    </build>

    <distributionManagement>
        <snapshotRepository>
            <id>sonatype-nexus-snapshots</id>
            <name>Sonatype Nexus snapshot repository</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>sonatype-nexus-staging</id>
            <name>Sonatype Nexus release repository</name>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <profiles>
        <profile>
            <id>release-sign-artifacts</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.4</version>
                        <!--<configuration>-->
                        <!--<passphrase>${gpg.passphrase}</passphrase>-->
                        <!--</configuration>-->
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <!--
     This lets Maven see the jars in the lib folder when building.
     Once the Ontology jar is in Maven Central, we won't need this anymore.
     See for an overview http://stackoverflow.com/questions/5692256/maven-best-way-of-linking-custom-external-jar-to-my-project
     and for detail here http://charlie.cu.cc/2012/06/how-add-external-libraries-maven/ -->
    <repositories>
        <repository>
            <id>in-project</id>
            <name>In Project Repo</name>
            <url>file://${project.basedir}/lib</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>com.optimaize.soapworks.client</groupId>
            <artifactId>soapworks-client</artifactId>
            <version>${soapworks.version}</version>
        </dependency>

        <!-- this dependency is in our internal artifactory repository.
        and maven finds it through the repository definition in the lib folder. -->
        <dependency>
            <groupId>ontology</groupId> <!-- with group id "org.nameapi.ontology" it does not work -->
            <artifactId>nameapi-ontology4</artifactId>
            <version>${ontology.version}</version>
        </dependency>

        <dependency>
            <groupId>com.intellij</groupId>
            <artifactId>annotations</artifactId>
            <version>12.0</version>
        </dependency>


        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>6.8.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.0.6</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
