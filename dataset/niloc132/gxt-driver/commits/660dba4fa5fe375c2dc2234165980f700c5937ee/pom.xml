<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.senchalabs.gwt</groupId>
	<artifactId>gxt-driver</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Sencha GXT classes for gwt-driver</name>
	<inceptionYear>2012</inceptionYear>
	<organization>
		<name>Sencha Labs</name>
		<url>http://senchalabs.org/</url>
	</organization>
	<properties>
		<selenium.version>2.35.0</selenium.version>
		<gwt.version>2.5.1</gwt.version>
		<gxt.version>3.0.1</gxt.version>

		<java.version>1.6</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>
	<dependencies>
		<dependency>
			<groupId>org.senchalabs.gwt</groupId>
			<artifactId>gwt-driver</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.sencha.gxt</groupId>
			<artifactId>gxt</artifactId>
			<version>${gxt.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sencha.gxt</groupId>
			<artifactId>gxt-chart</artifactId>
			<version>${gxt.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/client/**</include>
					<include>**/*.gwt.xml</include>
				</includes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/java</directory>
				<includes>
					<include>**/client/**</include>
					<include>**/*.gwt.xml</include>
				</includes>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>${gwt.version}</version>
				<executions>
					<execution>
						<id>gwt-unit-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
					<!-- Doesnt work, since gwt:compile won't use test scope -->
					<!-- <execution> <id>compiled-js-for-tests</id> <phase>process-test-classes</phase> 
						<goals> <goal>compile</goal> </goals> <configuration> <warSourceDirectory>${basedir}/src/test/webapp</warSourceDirectory> 
						<webappDirectory>${project.build.directory}/www</webappDirectory> <modules> 
						<module>com.colinalworth.gwtdriver.models.SimpleWidgets</module> </modules> 
						</configuration> </execution> -->
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.google.gwt</groupId>
						<artifactId>gwt-user</artifactId>
						<version>${gwt.version}</version>
					</dependency>
					<dependency>
						<groupId>com.google.gwt</groupId>
						<artifactId>gwt-dev</artifactId>
						<version>${gwt.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<!-- <plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<id>compiled-js-for-tests</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>java</executable>
							<classpathScope>test</classpathScope>
							<arguments>
								<argument>-classpath</argument>
								<classpath />
								<argument>com.google.gwt.dev.Compiler</argument>
								<argument>-war</argument>
								<argument>${project.build.directory}/www</argument>
								<argument>com.colinalworth.gwtdriver.models.SimpleWidgets</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin> -->
			<!-- 			<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-war-plugin</artifactId>
							<version>2.2</version>
							<executions>
								<execution>
									<phase>process-test-resources</phase>
									<goals>
										<goal>exploded</goal>
									</goals>
									<configuration>
										<warSourceDirectory>${basedir}/src/test/webapp</warSourceDirectory>
										<webappDirectory>${project.build.directory}/www</webappDirectory>
									</configuration>
								</execution>

							</executions>
						</plugin> -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<id>license-update</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>update-file-header</goal>
							<goal>add-third-party</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<licenseName>apache_v2</licenseName>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9</version>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<quiet>true</quiet>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<excludes>
						<!-- exclude the integration tests below -->
						<exclude>**/*Test.java
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.3</version>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											gwt-maven-plugin
										</artifactId>
										<versionRange>
											[2.4.0,)
										</versionRange>
										<goals>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-war-plugin
										</artifactId>
										<versionRange>
											[2.2,)
										</versionRange>
										<goals>
											<goal>exploded</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											exec-maven-plugin
										</artifactId>
										<versionRange>
											[1.2.1,)
										</versionRange>
										<goals>
											<goal>exec</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>integration-test</id>
			<dependencies>
				<!-- TODO should be test scoped, but gwt:compile only works with
				  compile scope -->
				<dependency>
					<groupId>org.senchalabs.gwt</groupId>
					<artifactId>gwt-driver</artifactId>
					<version>${project.version}</version>
				</dependency>

				<dependency>
					<groupId>com.google.gwt</groupId>
					<artifactId>gwt-dev</artifactId>
					<version>${gwt.version}</version>
				</dependency>
				<dependency>
					<groupId>com.google.gwt</groupId>
					<artifactId>gwt-user</artifactId>
					<version>${gwt.version}</version>
				</dependency>
			</dependencies>
			<build>
				<defaultGoal>verify</defaultGoal>
				<plugins>
					<!-- Copy war details to another directory -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<executions>
							<execution>
								<id>war-for-test</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>war</goal>
								</goals>
								<configuration>
									<warSourceDirectory>src/test/webapp</warSourceDirectory>
									<webappDirectory>target/www-test</webappDirectory>
									<warName>www-test</warName>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- Compile the app to the alt dir -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>compiled-js-for-tests</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>java</executable>
									<classpathScope>test</classpathScope>
									<arguments>
										<argument>-classpath</argument>
										<classpath/>
										<argument>com.google.gwt.dev.Compiler</argument>
										<argument>-war</argument>
										<argument>${project.build.directory}/www-test</argument>
										<argument>-draftCompile</argument>
										<argument>org.senchalabs.gwt.gwtdriver.gxt.models.TestApp</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- Start/Stop jetty -->
					<plugin>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>maven-jetty-plugin</artifactId>
						<configuration>
							<scanIntervalSeconds>5</scanIntervalSeconds>
							<stopPort>9966</stopPort>
							<stopKey>foo</stopKey>
							<connectors>
								<connector
										implementation="org.mortbay.jetty.nio.SelectChannelConnector">
									<port>9080</port>
									<maxIdleTime>60000</maxIdleTime>
								</connector>
							</connectors>
							<contextPath>app</contextPath>
							<webAppSourceDirectory>target/www-test</webAppSourceDirectory>
						</configuration>
						<executions>
							<execution>
								<id>start-jetty</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<daemon>true</daemon>
								</configuration>
							</execution>
							<execution>
								<id>stop-jetty</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- Run the tests -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<executions>
							<execution>
								<id>integration-tests</id>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<skip>false</skip>
									<excludes>
										<exclude>none</exclude>
									</excludes>
									<includes>
										<include>**/*Test.java
										</include>
									</includes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
