<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.camunda.consulting.demo.springboot</groupId>
	<artifactId>camunda-spring-boot-amqp-microservice-cloud-example</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<java.version>1.8</java.version>
		
		<camunda.version>7.12.0</camunda.version>
		<!-- 
		Adjust if you want to use Enterprise Edition of Camunda:
		<camunda.version>7.12.5-ee</camunda.version>
		Make sure you also switch to the ee webapp dependency below
		-->
		<springBoot.version>2.2.5.RELEASE</springBoot.version>
		<camundaSpringBoot.version>3.4.1</camundaSpringBoot.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<!-- Import dependency management from camunda -->
				<groupId>org.camunda.bpm</groupId>
				<artifactId>camunda-bom</artifactId>
				<version>${camunda.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${springBoot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.camunda.bpm.springboot</groupId>
			<artifactId>camunda-bpm-spring-boot-starter-webapp</artifactId>
			<!-- <artifactId>camunda-bpm-spring-boot-starter-webapp-ee</artifactId> -->
			<version>${camundaSpringBoot.version}</version>
		</dependency>

		<dependency>
			<groupId>org.camunda.bpm.springboot</groupId>
			<artifactId>camunda-bpm-spring-boot-starter-rest</artifactId>
			<version>${camundaSpringBoot.version}</version>
		</dependency>

	    <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-jdbc</artifactId>
	    </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cloud-connectors</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.uuid</groupId>
			<artifactId>java-uuid-generator</artifactId>
		</dependency>

		<!-- testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
    <dependency>
      <groupId>org.camunda.bpm.extension</groupId>
      <artifactId>camunda-bpm-assert</artifactId>
      <version>2.0-alpha1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- version 1.7.0 currently required by camunda-bpm-assert -->
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>1.7.0</version>
      <scope>test</scope>
</dependency>

		<dependency>
			<groupId>org.camunda.bpm.extension</groupId>
			<artifactId>camunda-bpm-assert-scenario</artifactId>
			<version>0.2</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>compile</scope> <!-- use compile, as we also use H2 locally to run it -->
		</dependency>
		<dependency>
			<!-- For the demo I used ElephantSQL as cloud version of PostgreSQL -->
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<!-- <version>9.4-1201-jdbc4</version> -->
		</dependency>

		<!-- API, java.xml.bind module -->
		<dependency>
		    <groupId>jakarta.xml.bind</groupId>
		    <artifactId>jakarta.xml.bind-api</artifactId>
		    <version>2.3.2</version>
		</dependency>

		<!-- Runtime, com.sun.xml.bind module -->
		<dependency>
		    <groupId>org.glassfish.jaxb</groupId>
		    <artifactId>jaxb-runtime</artifactId>
		    <version>2.3.2</version>
		</dependency>		

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${springBoot.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>camunda-bpm-nexus</id>
			<name>camunda-bpm-nexus</name>
			<url>
      https://app.camunda.com/nexus/content/repositories/camunda-bpm-ee
    </url>
		</repository>
		<repository>
			<id>camunda-bpm-nexus-public</id>
			<name>camunda-bpm-nexus-public</name>
			<url>
      https://app.camunda.com/nexus/content/groups/public
    </url>
		</repository>

	</repositories>
</project>
