<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.github.rhkiswani</groupId>
    <artifactId>javaff</artifactId>
    <version>0.0.2-SNAPSHOT</version>
    <name>JavaFF: Java Facade/Factories</name>
    <description>
        We all know the Golden Object Oriented rule **Don't talk to strangers**

        We all know that the API/frameworks defects or magic or limitations is not showing at the begging of the development.

        So imagine that you using an API in all your projects and after spending months or years that API you got a production issue becuase of it ,
        changing the that API would be soo hard and costy !!!


        Main Features
        --------------
        - This project offers a standard/clear API for the most used API's in the Java Applications like : Exceptions, Locale, Beans, Formatter's, Json Handlers, Loggers, ReflectionHelpers ...etc
        - **you can control the implementation's through the class path without changing line of code**
        - Smart Exception handling mechanism
        - Default Implementations
        - Many Utilises
    </description>
    <url>https://github.com/rhkiswani/JavaFF</url>

    <scm>
        <connection>scm:git:https://github.com/rhkiswani/JavaFF.git</connection>
        <developerConnection>scm:git:https://github.com/rhkiswani/JavaFF.git</developerConnection>
        <url>https://github.com/rhkiswani/JavaFF</url>
        <tag>javaff-1.3</tag>
    </scm>

    <properties>
        <!-- config -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.7</java.version>

        <gson.version>2.8.0</gson.version>
        <jackson.version>2.8.5</jackson.version>
        <commons.lang.version>3.0</commons.lang.version>
        <slf4.version>1.7.21</slf4.version>
        <javax.persistenc.api.version>1.0.2</javax.persistenc.api.version>

        <!-- test -->
        <assertj.version>3.1.0</assertj.version>
        <junit.version>4.12</junit.version>
        <mock.version>1.10.19</mock.version>
        <powermock.version>1.6.6</powermock.version>

        <!-- plugins -->
        <mvn.plugin.java.compiler.version>3.6.0</mvn.plugin.java.compiler.version>
        <mvn.plugin.sources.version>2.2.1</mvn.plugin.sources.version>
        <mvn.plugin.release.version>2.5</mvn.plugin.release.version>
        <mvn.plugin.javadoc.version>2.9.1</mvn.plugin.javadoc.version>
        <mvn.plugin.gpg.version>1.5</mvn.plugin.gpg.version>
    </properties>

    <issueManagement>
        <url>https://github.com/rhkiswani/commons/issues</url>
    </issueManagement>

    <licenses>
        <license>
            <name>The MIT License (MIT)</name>
            <url>http://opensource.org/licenses/MIT</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Mohamed Kiswani</name>
            <email>rhkiswani@gmail.com</email>
            <organization>rhkiswani</organization>
            <organizationUrl>https://pl.linkedin.com/in/rhkiswani</organizationUrl>
        </developer>
    </developers>

    <dependencies>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons.lang.version}</version>
        </dependency>

        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>${javax.persistenc.api.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.21</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mock.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>

        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${mvn.plugin.java.compiler.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${mvn.plugin.sources.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${mvn.plugin.javadoc.version}</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>${mvn.plugin.gpg.version}</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${mvn.plugin.release.version}</version>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <useReleaseProfile>false</useReleaseProfile>
                    <releaseProfiles>release</releaseProfiles>
                    <goals>deploy</goals>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>