<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2011 Michael R. Lange <michael.r.lange@langmi.de>.
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>de.langmi.spring.batch.examples.writers</groupId>
    <artifactId>basics</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>basics</name>
    <url>https://github.com/langmi/spring-batch-examples</url>
    
    <description>
        Spring Batch Example: Basics
        
        This project contains examples to show the various basics for Spring Batch.
        
        This projects needs:
        
        * Java 1.6+
        * Maven 3+
        
        see maven-enforcer-plugin configuration.
    </description>

    <licenses>
        <license>
            <name>Apache 2</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>manual</distribution>
            <comments>
                Declared 'manual' distribution, because there are no plans 
                to upload the project to a maven repository.
            </comments>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>michael</id>
            <name>Michael Lange</name>
            <email>michael.r.lange@langmi.de</email>
            <roles>
                <role>architect</role>
                <role>developer</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
    </developers>

    <properties>
        <!-- general project settings -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.java.version>1.6</project.java.version>
        <!-- development settings for maven-compiler-plugin -->
        <maven.compiler.debug>true</maven.compiler.debug>
        <maven.compiler.optimize>false</maven.compiler.optimize>
        <!-- maven-surefire-plugin forkmode set to always, because
             the tests use Spring Framework, i want clean test setups,
             Spring provides a "dirty" mechanism for this too, but
             i do not trust this -->
        <maven.surefire.forkmode>always</maven.surefire.forkmode>
        <log4j.configuration>log4j/log4j.properties</log4j.configuration>
        <!-- often used dependency version data -->
        <spring.batch.version>2.1.8.RELEASE</spring.batch.version>
        <spring.framework.version>3.1.0.RELEASE</spring.framework.version>
        <slf4j.version>1.6.4</slf4j.version>
    </properties>

    <build>
        <plugins>
            <plugin>
                <!-- maven-compiler-plugin configured to:
                        * use specific Java Version
                        * use specific target Java Version
                        * use UTF-8 for java sources
                        * use debug compiler settings
                        * do not use optimize compiler settings
                        * show deprecated informations (will build anyhow)
                -->
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>${project.java.version}</source>
                    <target>${project.java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <debug>${maven.compiler.debug}</debug>
                    <optimize>${maven.compiler.optimize}</optimize>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>    
            <plugin>
                <!-- maven-resources-plugin configured to treat
                     all resources as UTF-8 format
                -->
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <!-- maven-surefire-plugin configured to set
                        * system property for log4j file place
                        * forkMode for clean context per test
                        * some java arguments to prevent OutOfMemory problems
                          while running some tests
                -->
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <systemPropertyVariables>
                        <log4j.configuration>${log4j.configuration}</log4j.configuration>
                    </systemPropertyVariables>
                    <forkMode>${maven.surefire.forkmode}</forkMode>
                    <argLine>-Xmx512m -XX:MaxPermSize=512m</argLine>
                </configuration>
            </plugin>
            <plugin>
                <!-- 
                    With the maven-enforcer-plugin i want to make sure
                    the project is built with maven 3+ and Java 1.6+.
                    
                    right now the plugin reads the version as lowest allowed, 
                    so there is no need to use fancy formats like: [3.0,)
                    see http://maven.apache.org/plugins/maven-enforcer-plugin/rules/versionRanges.html
                -->
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.0.1</version>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>${project.java.version}</version>
                                </requireJavaVersion>
                                <requireMavenVersion>
                                    <version>3.0.0</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- HSQLDB -->
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>2.2.6</version>
        </dependency>
        <!-- commons -->
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2.1</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.1</version>
        </dependency>
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.4</version>
        </dependency>
        <dependency>
            <groupId>commons-pool</groupId>
            <artifactId>commons-pool</artifactId>
            <version>1.6</version>
        </dependency>
        <!-- slf4j logging facade -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.16</version>
        </dependency>
        <!-- Spring (core) Framework dependencies -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.framework.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.framework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.framework.version}</version>
        </dependency>
        <!-- Spring Batch dependencies -->
        <dependency>
            <groupId>org.springframework.batch</groupId>
            <artifactId>spring-batch-core</artifactId>
            <version>${spring.batch.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.batch</groupId>
            <artifactId>spring-batch-infrastructure</artifactId>
            <version>${spring.batch.version}</version>
        </dependency>
        <!-- test scoped dependencies -->
        <dependency>
            <groupId>org.springframework.batch</groupId>
            <artifactId>spring-batch-test</artifactId>
            <version>${spring.batch.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.framework.version}</version>
            <scope>test</scope>            
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

</project>
