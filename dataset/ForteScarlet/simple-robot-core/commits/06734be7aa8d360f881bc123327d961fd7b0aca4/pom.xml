<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.sonatype.oss</groupId>
        <artifactId>oss-parent</artifactId>
        <version>7</version>
    </parent>

    <groupId>io.github.ForteScarlet</groupId>
    <artifactId>simple-robot-core</artifactId>

    <!-- 版本号 -->
    <!-- 下次部署需要大于1.16.3-BETA
          DEBUG用的部署版本
    2020/8/6 记得修改CoreSystem的版本号 -->
    <version>1.16.3-BETA</version>

    <packaging>jar</packaging>
    <name>simple-robot</name>
    <url>https://github.com/ForteScarlet/simple-robot-core</url>
    <!--  An SDK for robot, like QQRobot  -->
    <description>An SDK for robot, like QQRobot</description>

    <scm>
        <url>https://github.com/ForteScarlet/simple-robot-core</url>
    </scm>

    <properties>
        <kotlin.version>1.3.70</kotlin.version>
        <fastjson.version>1.2.54</fastjson.version>
        <quartz.version>2.3.2</quartz.version>
        <hutool.versin>5.3.8</hutool.versin>
        <simple-plusutils.version>1.3.1</simple-plusutils.version>
        <httpcomponents.version>4.5</httpcomponents.version>
        <console-plus.version>1.2.1</console-plus.version>

        <mod-cqcodeutils.version>1.6.1</mod-cqcodeutils.version>

    </properties>

    <!-- 依赖 -->
    <dependencies>
        <!-- fastjson -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>
        <!-- 定时任务框架 quartz -->
        <!-- https://mvnrepository.com/artifact/org.quartz-scheduler/quartz -->
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>${quartz.version}</version>
        </dependency>
        <!-- hutool-core -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-core</artifactId>
            <version>${hutool.versin}</version>
        </dependency>
        <!--
         增加个人工具扩展
         抽空删了
         -->
        <dependency>
            <groupId>io.github.ForteScarlet.plusutils</groupId>
            <artifactId>simple-plusutils</artifactId>
            <version>${simple-plusutils.version}</version>
        </dependency>
        <!-- 导入httpclient所需包 -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpcomponents.version}</version>
        </dependency>
        <!-- 彩色控制台 -->
        <!-- https://mvnrepository.com/artifact/io.gitee.ForteScarlet.plusutils/console-plus -->
        <dependency>
            <groupId>io.gitee.ForteScarlet.plusutils</groupId>
            <artifactId>console-plus</artifactId>
            <version>${console-plus.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.ForteScarlet.simple-robot-module</groupId>
            <artifactId>mod-cqcodeutils</artifactId>
            <version>${mod-cqcodeutils.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>RELEASE</version>
            <scope>test</scope>
        </dependency>


        <!-- 测试用 -->
        <dependency>
            <groupId>love.forte.simple-robot-module</groupId>
            <artifactId>simple-robot-module-debugger-common</artifactId>
            <version>1.1-1.15</version>
            <scope>test</scope>
            <optional>true</optional>
        </dependency>

    </dependencies>


    <dependencyManagement>
        <dependencies>
            <!-- hutool utils -->
            <!-- hutool all -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.versin}</version>
            </dependency>

            <!-- crypto hutool 加密 -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-crypto</artifactId>
                <version>${hutool.versin}</version>
            </dependency>

            <!-- cache hutool 简单缓存实现 -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-cache</artifactId>
                <version>${hutool.versin}</version>
            </dependency>
            <!-- cron hutool 定时任务模块 -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-cron</artifactId>
                <version>${hutool.versin}</version>
            </dependency>

            <!-- cron hutool json json工具 -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-json</artifactId>
                <version>${hutool.versin}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>


    <build>
        <plugins>
            <!-- package plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals> <goal>single</goal> </goals>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- maven仓库相关插件 -->
            <!-- (1) deploy插件 -->
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <executions>
                    <execution>
                        <id>default-deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- （2）sonatype的staging插件, 应该是自动发布插件 -->
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.7</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>oss</serverId>
                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                </configuration>
            </plugin>

            <!-- （3）SCM插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-scm-plugin</artifactId>
                <version>1.8.1</version>
            </plugin>

            <!-- （4）release插件，下面checkModificationExcludes是排除一些目录文件不要发布。 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
                <configuration>
                    <mavenExecutorId>forked-path</mavenExecutorId>
                    <useReleaseProfile>false</useReleaseProfile>
                    <arguments>-Psonatype-oss-release</arguments>
                    <pushChanges>false</pushChanges>
                    <localCheckout>false</localCheckout>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <checkModificationExcludes>
                        <checkModificationExclude>.idea/</checkModificationExclude>
                        <checkModificationExclude>lib</checkModificationExclude>
                        <checkModificationExclude>lib/*</checkModificationExclude>
                        <checkModificationExclude>.idea/*</checkModificationExclude>
                        <checkModificationExclude>test/</checkModificationExclude>
                        <checkModificationExclude>test/*</checkModificationExclude>
                        <checkModificationExclude>.idea/libraries/*</checkModificationExclude>
                        <checkModificationExclude>pom.xml</checkModificationExclude>
                        <checkModificationExclude>release-pom.xml</checkModificationExclude>

                        <checkModificationExclude>jdonframework.iml</checkModificationExclude>
                        <checkModificationExclude>JdonAccessory/jdon-hibernate3x/jdon-hibernate3x.iml</checkModificationExclude>
                        <checkModificationExclude>JdonAccessory/jdon-jdbc/jdon-jdbc.iml</checkModificationExclude>
                        <checkModificationExclude>JdonAccessory/jdon-remote/jdon-remote.iml</checkModificationExclude>
                        <checkModificationExclude>JdonAccessory/jdon-struts1x/jdon-struts1x.iml</checkModificationExclude>
                    </checkModificationExcludes>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-scm-plugin</artifactId>
                        <version>1.8.1</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!--
            第2步：生成Javadoc和Source jar文件，您必须配置javadoc和源Maven插件。
            在pom.xml的build一级目录下的plugins里面加入下面：
            -->
            <!-- java 版本 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <!-- java源码 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- javadoc -->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-javadoc-plugin</artifactId>-->
<!--                <version>3.0.0</version>-->
<!--                <configuration>-->
<!--                    <encoding>UTF-8</encoding>-->
<!--&lt;!&ndash;                    <aggregate>true</aggregate>&ndash;&gt;-->
<!--                    <charset>UTF-8</charset>-->
<!--                    <docencoding>UTF-8</docencoding>-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>attach-javadocs</id>-->
<!--                        <goals>-->
<!--                            <goal>jar</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--&lt;!&ndash;                            <additionalparam>-Xdoclint:none</additionalparam>&ndash;&gt;-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <charset>UTF-8</charset>
                    <encoding>UTF-8</encoding>
                    <additionalJOptions>
                        <additionalJOption>-Xdoclint:none</additionalJOption>
                        <additionalJOption>--allow-script-in-comments</additionalJOption>
                    </additionalJOptions>
                    <doclint>none</doclint>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
<!--                        <configuration>-->
<!--                            <charset>UTF-8</charset>-->
<!--                            <encoding>UTF-8</encoding>-->
<!--                            <additionalJOptions>-->
<!--                                <additionalJOption>-Xdoclint:none</additionalJOption>-->
<!--                            </additionalJOptions>-->
<!--                            <additionalJOption>-Xdoclint:none</additionalJOption>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
            </plugin>


            <!--
            第3步：进行GPG签名加密，
            这是对生成的jar包，javadoc包等进行签名加密，
            保证你的文件上传到服务器过程中不会被拦截和破解安全，服务器那边使用你提供的密钥对进行解密。
            在pom.xml的build一级目录下的plugins里面加入下面：
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>1.5</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <!-- maven相关配置 -->
    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <!-- 开发者信息 -->
    <developers>
        <developer>
            <roles>
                <role>a single programmer</role>
            </roles>
            <!-- 项目开发者的全名 -->
            <name>ForteScarlet</name>
            <!-- 项目开发者的email -->
            <email>ForteScarlet@163.com</email>
        </developer>
    </developers>

    <distributionManagement>
        <snapshotRepository>
            <id>oss</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>oss</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.7</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>oss</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>





</project>