<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.semanticweb.hermit</groupId>
  <artifactId>HermiT</artifactId>
  <version>1.3.7.3-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>HermiT</name>
  <url>http://hermit-reasoner.com/</url>
  <description>HermiT is reasoner for ontologies written using the Web
  Ontology Language (OWL). Given an OWL file, HermiT can determine whether or
  not the ontology is consistent, identify subsumption relationships between
  classes, and much more.

  This is the maven build of HermiT and is designed for people who wish to use
  HermiT from within the OWL API. It is not officially supported by the HermiT
  development team, but was built initially for use with the Clojure-OWL
  library. It is built using the HermiT source tree without modification.
  There have been some additions to the test source tree to account for
  differences between the maven and ant environment; these are small and
  (hopefully) maintainable.

  The version number of this package is a composite of the HermiT version and
  an value representing releases of this packaged version. So, 1.3.7.1 is the
  first release of the mavenized version of HermiT based on the 1.3.7 release
  of HermiT.

  This package includes the Jautomata library
  (http://jautomata.sourceforge.net/), and builds with it directly. This
  library appears to be no longer under active development, and so a "fork"
  seems appropriate. No development is intended or anticipated on this code
  base.
  </description>

  <licenses>
    <license>
      <name>LGPL</name>
    </license>

    <license>
      <name>BSD</name>
    </license>

  </licenses>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <build>
    <plugins>
       <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-compiler-plugin</artifactId>
           <version>2.3.1</version>
           <configuration>
               <source>1.6</source>
               <target>1.6</target>
               <excludes>
                 <!-- exclude the protege dependency and the command line 
                 because we don't built a command line capable jar -->
                 <exclude>**/Protege*.java</exclude>
                 <exclude>**/CommandLine.java</exclude>
               </excludes>
           </configuration>
       </plugin>

       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-surefire-plugin</artifactId>
         <version>2.6</version>
         <configuration>
           <excludes>
             <!-- structural tests don't work and it's known -->
             <!-- currently there are two tests failing, and I am trying to fix them -->
             <exclude>**/structural/*java</exclude>
             <exclude>**/BlockingValidatorTest.java</exclude> 

             <!-- This skips
             the tests for the rationals library which is a fork and we do not
             expect to change. There are 67 tests in total - so the maven
             build should have these many more tests than the ant build
             -->
             <exclude>rationals/**</exclude>
           </excludes>
           
         </configuration>
       </plugin>
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-jar-plugin</artifactId>
         <version>2.4</version>
         <executions>
           <execution>
             <goals>
               <goal>test-jar</goal>
             </goals>
           </execution>
         </executions>
       </plugin>
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-source-plugin</artifactId>
         <version>2.2</version>
         <executions>
           <execution>
             <id>attach-source</id>
             <goals>
               <goal>jar</goal>
             </goals>
           </execution>
           <execution>
             <id>attach-test-sources</id>
             <goals>
               <goal>test-jar</goal>
             </goals>
           </execution>
         </executions>
       </plugin>
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-javadoc-plugin</artifactId>
         <version>2.9</version>
         <executions>
           <execution>
             <id>attach-javadocs</id>
             <goals>
               <goal>jar</goal>
             </goals>
           </execution>
       </executions> 
       </plugin>
    </plugins>
  </build>


  <dependencies>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.1.2</version>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.owlapi</groupId>
      <artifactId>owlapi-api</artifactId>
      <version>3.4.3</version>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.owlapi</groupId>
      <artifactId>owlapi-distribution</artifactId>
      <version>3.4.3</version>
    </dependency>
    
    <dependency>
        <groupId>org.apache.ws.commons.axiom</groupId>
      <artifactId>axiom-api</artifactId>
      <version>1.2.14</version>
    </dependency>
    <dependency>
      <groupId>org.apache.ws.commons.axiom</groupId>
      <artifactId>axiom-c14n</artifactId>
      <version>1.2.14</version>
    </dependency>
    <dependency>
      <groupId>org.apache.ws.commons.axiom</groupId>
      <artifactId>axiom-impl</artifactId>
      <version>1.2.14</version>
    </dependency>
    <dependency>
      <groupId>org.apache.ws.commons.axiom</groupId>
      <artifactId>axiom-dom</artifactId>
      <version>1.2.14</version>
    </dependency>
    <dependency>
      <groupId>dk.brics.automaton</groupId>
      <artifactId>automaton</artifactId>
      <version>1.11-8</version>
    </dependency>
    <!--dependency>
      <groupId>oqube</groupId>
      <artifactId>jautomata-core</artifactId>
      <version>2.0-alpha-1</version>
    </dependency-->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>


  
  <distributionManagement>
    <repository>
      <id>phillords-personal</id>
      <url>scpexe://linux.cs.ncl.ac.uk/ncl/homepages.cs/phillip.lord/maven</url>
    </repository>
  </distributionManagement>
</project>
