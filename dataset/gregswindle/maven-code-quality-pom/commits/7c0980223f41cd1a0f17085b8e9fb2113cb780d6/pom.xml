<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>net.swindle</groupId>
	<artifactId>spring-qa-dependencies</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>spring-qa-dependencies</name>
	<url>https://github.com/gregswindle/spring-qa-dependencies</url>
	<description>A spike Spring solution for providing Maven POMs with quality assurance features.</description>
	<scm>
		<url>https://github.com/gregswindle/spring-qa-dependencies.git</url>
		<tag>HEAD</tag>
	</scm>
	<licenses>
		<license>
			<name>MIT</name>
			<url>LICENSE</url>
		</license>
	</licenses>
	<issueManagement>
		<system>GitHub Issues</system>
		<url>${project.url}/issues</url>
	</issueManagement>
	<ciManagement>
		<system>travis-ci</system>
		<url>https://travis-ci.org/gregswindle/spring-qa-dependencies</url>
	</ciManagement>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.checkstyle.plugin.version>2.17</maven.checkstyle.plugin.version>
		<maven.surefire.plugin.version>2.19.1</maven.surefire.plugin.version>
		<checkstyle.version>8.4</checkstyle.version>
		<maven.pmd.plugin.version>3.8</maven.pmd.plugin.version>
		<jdk.version>1.8</jdk.version>
		<!-- <junit.jupiter.version>5.0.1</junit.jupiter.version> <junit.platform.version>1.0.1</junit.platform.version> 
			<junit.vintage.version>4.12.1</junit.vintage.version> <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> -->
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<versioneye.apiKey>${env.VERSIONEYE_API_KEY}</versioneye.apiKey>
		<versioneye.organization>gregswindle_orga</versioneye.organization>
		<sonar.property.organization>${env.SONAR_ORGANIZATION}</sonar.property.organization>
		<sonar.property.login>${env.SONAR_TOKEN}</sonar.property.login>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>5.0.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>5.0.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>5.0.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.9.1</version>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-surefire-provider</artifactId>
			<version>1.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
			<version>1.5.8.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.0.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>4.12.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<version>1.0.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-runner</artifactId>
			<version>1.0.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>5.0.1.RELEASE</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-test</artifactId>
			<version>1.5.8.RELEASE</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-junit</artifactId>
			<version>2.0.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apiguardian</groupId>
			<artifactId>apiguardian-api</artifactId>
			<version>1.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.skins</groupId>
			<artifactId>maven-fluido-skin</artifactId>
			<version>1.6</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.sonarsource.scanner.maven/sonar-maven-plugin -->
		<dependency>
			<groupId>org.sonarsource.scanner.maven</groupId>
			<artifactId>sonar-maven-plugin</artifactId>
			<version>3.3.0.603</version>
		</dependency>
	</dependencies>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<sourceDirectory>src/main/java</sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.4</version>
			</plugin>
			<!-- JaCoCo code coverage configuration -->
			<!-- Order of execution is (1) prepare agent is run to configure the property, 
				then (2) unit tests are run, then (3) the check goal of jacoco is run to 
				check code coverage -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<configuration>
					<!-- (2) setup the argLine and run the unit tests. **NOTE the "jacocArgLine" 
						property was configured the "prepare-agent" goal of Jacoco (see below). If 
						you want to resolve the property value as late as possible (i.e. your dynamically 
						alter this property value before reaching this phase), Maven gives you option 
						to use @{jacocoArgLine} instead -->
					<argLine>${jacocoArgLine} -Xmx256m</argLine>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.junit.platform</groupId>
						<artifactId>junit-platform-surefire-provider</artifactId>
						<version>1.0.1</version>
					</dependency>
					<dependency>
						<groupId>org.junit.jupiter</groupId>
						<artifactId>junit-jupiter-engine</artifactId>
						<version>5.0.1</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>default-test</id>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven.checkstyle.plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.9</version>
				<executions>
					<!-- (1) Prepare agent runs in the init phase, it setups the jacocoProperty, 
						so we can insert this to the maven sure fire argLine and get to run jacoco 
						as agent. -->
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<propertyName>jacocoArgLine</propertyName>
							<includes>
								<include>${project.groupId}.springdemo.*</include>
							</includes>
						</configuration>
					</execution>
					<!-- (3) The check goal by default runs in the verify phase, we want 
						to fail the build if minimum code coverage checks aren't met. -->
					<execution>
						<id>check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<!-- All classes must have 90% line and branch coverage. Note we 
									use 2 d.p so that we get can any check failure messages reported to 2 d.p. -->
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>COMPLEXITY</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.20</minimum>
										</limit>
									</limits>
								</rule>
								<rule>
									<element>CLASS</element>
									<limits>
										<limit>
											<counter>COMPLEXITY</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.20</minimum>
										</limit>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.90</minimum>
										</limit>
										<limit>
											<counter>BRANCH</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.90</minimum>
										</limit>
										<limit>
											<counter>METHOD</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.90</minimum>
										</limit>

									</limits>
									<!-- <excludes> <exclude>com.choudhury.codecoverage.Bye</exclude> 
										</excludes> -->
								</rule>
							</rules>
						</configuration>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.0.0-M1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${maven.pmd.plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>1.5.8.RELEASE</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.6</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.skins</groupId>
						<artifactId>maven-fluido-skin</artifactId>
						<version>1.6</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>
					maven-project-info-reports-plugin
				</artifactId>
				<version>2.9</version>
			</plugin>
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-changes-plugin</artifactId> 
				<version>2.12.1</version> </plugin> -->
			<plugin>
				<groupId>com.versioneye</groupId>
				<artifactId>versioneye-maven-plugin</artifactId>
				<version>3.11.4</version>
				<configuration>
					<apiKey>${versioneye.apiKey}</apiKey>
					<organisation>${versioneye.organziation}</organisation>
					<team>Owners</team>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>sonar</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- Optional URL to server. Default value is http://localhost:9000 -->
				<sonar.host.url>
					https://sonarcloud.io
				</sonar.host.url>
				<sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
				<sonar.projectKey>gregswindle-github</sonar.projectKey>
				<sonar.projectName>${project.artifactId}</sonar.projectName>
				<sonar.projectVersion>${project.version}</sonar.projectVersion>
				<sonar.links.homepage>${project.url}</sonar.links.homepage>
				<sonar.links.ci>${project.ciManagement.url}</sonar.links.ci>
				<sonar.links.scm>${project.scm.url}</sonar.links.scm>
				<sonar.links.issue>${project.issueManagement.url}</sonar.links.issue>
				<sonar.organization>${sonar.property.organization}</sonar.organization>
				<sonar.login>${sonar.property.login}</sonar.login>
			</properties>
		</profile>
	</profiles>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>
					maven-project-info-reports-plugin
				</artifactId>
				<version>2.9</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>2.12.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven.checkstyle.plugin.version}</version>
				<configuration>
					<configLocation>google_checks.xml</configLocation>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${maven.pmd.plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.9</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.5</version>
			</plugin>
		</plugins>
	</reporting>
	<organization>
		<name>gregswindle</name>
		<url>https://github.com/gregswindle</url>
	</organization>
</project>
