<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<!-- The Super POM. @see https://maven.apache.org/pom.html -->

	<!-- The Basics @see https://maven.apache.org/pom.html#The_Basics -->

	<!-- Recommended Order -->
	<!-- groupId version description url inceptionYear organization licenses 
		developers contributors mailingLists scm issueManagement ciManagement properties 
		dependencyManagement dependencies repositories pluginRepositories build plugin 
		executions with matching ids plugin configuration etc. reporting profiles -->

	<modelVersion>4.0.0</modelVersion>
	<groupId>net.swindle</groupId>
	<artifactId>maven-code-quality-pom</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>maven-code-quality-pom</name>
	<description><![CDATA[<h2>Code quality enforcement and reporting</h3><p><strong>Enforce and report code quality with JUnit, JaCoCo, Hamcrest, FindBugs, PMD, CodeNarc, Checkstyle (Google), Enforcer, Duplicate-Finder, JDepend, and more with this Maven POM.</strong></p><p><code>maven-code-quality-pom</code> is a spike Spring solution for providing Maven POMs with quality assurance features.</p><h3>Purpose</h3><p>The purpose of the project is to use the Maven Site Plugin to:</p><ol><li> Use the Maven Site Plugin to generate meaningful test and quality reporting artifacts</li><li> Enforce test coverage thresholds and code standards</li><li> Prevent source code that does not conform to standards from being merged into <code>master</code>.</li></ol>]]></description>
	<url>https://github.com/gregswindle/maven-code-quality-pom</url>
	<inceptionYear>2017</inceptionYear>
	<organization>
		<name>gregswindle</name>
		<url>https://github.com/gregswindle</url>
	</organization>
	<licenses>
		<license>
			<name>MIT</name>
			<url>LICENSE</url>
		</license>
	</licenses>
	<developers>
		<developer>
			<name>Greg Swindle</name>
			<url>https://github.com/gregswindle</url>
			<id>gregswindle</id>
			<email>greg@swindle.net</email>
			<timezone>UTC-05:00</timezone>
		</developer>
	</developers>

	
	<scm>
		<url>https://github.com/gregswindle/maven-code-quality-pom</url>
		<connection>scm:git:https://github.com/gregswindle/maven-code-quality-pom</connection>
		<developerConnection>scm:git:https://github.com/gregswindle/maven-code-quality-pom</developerConnection>
		<tag>HEAD</tag>
	</scm>
	
	
	
	
	<issueManagement>
		<system>GitHub</system>
		<url>${project.url}/issues</url>
	</issueManagement><ciManagement>
		<system>travis-ci</system>
		<url>https://travis-ci.org/gregswindle/maven-code-quality-pom</url>
	</ciManagement>
	
	<repositories>
        <repository>
          <id>central</id>
          <url>https://repo1.maven.org/maven2</url>
          <releases>
            <enabled>true</enabled>
          </releases>
        </repository>
      </repositories>
      <pluginRepositories>
        <pluginRepository>
          <id>central</id>
          <url>https://repo1.maven.org/maven2</url>
          <releases>
            <enabled>true</enabled>
          </releases>
        </pluginRepository>
      </pluginRepositories>
	
	<properties>
		<checkstyle.version>8.4</checkstyle.version>
		<coveralls.token>${env.COVERALLS_MAVEN_CODE_QUALITY_POM_TOKEN}</coveralls.token>
		<jdk.version>1.8</jdk.version>
		<license.maven.plugin.version>1.14</license.maven.plugin.version>
		<maven.checkstyle.plugin.version>2.17</maven.checkstyle.plugin.version>
		<maven.compiler.plugin.version>3.1</maven.compiler.plugin.version>
		<maven.dependency.plugin.version>2.10</maven.dependency.plugin.version>
		<maven.pmd.plugin.version>3.8</maven.pmd.plugin.version>
		<maven.resources.plugin.version>2.6</maven.resources.plugin.version>
		<maven.surefire.plugin.version>2.19.1</maven.surefire.plugin.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<sonar.property.login>${env.SONAR_TOKEN}</sonar.property.login>
		<sonar.property.organization>${env.SONAR_ORGANIZATION}</sonar.property.organization>
		<spring.boot.maven.plugin.version>1.5.4.RELEASE</spring.boot.maven.plugin.version>
		<spring.boot.version>1.5.4.RELEASE</spring.boot.version>
		<spring.mobile.version>1.1.5.RELEASE</spring.mobile.version>
		<spring.security.version>4.2.3.RELEASE</spring.security.version>
		<spring.version>4.3.12.RELEASE</spring.version>
		<versioneye.apiKey>${env.VERSIONEYE_API_KEY}</versioneye.apiKey>
		<versioneye.organization>gregswindle_orga</versioneye.organization>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.9.1</version>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-surefire-provider</artifactId>
			<version>1.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
			<version>${spring.boot.version}</version>
			<exclusions>
			<exclusion>
         <groupId>org.springframework</groupId>
         <artifactId>spring-context</artifactId>
       </exclusion>
			 <exclusion>
			   <groupId>org.springframework</groupId>
			   <artifactId>spring-core</artifactId>
			 </exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.0.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>4.12.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<version>1.0.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-runner</artifactId>
			<version>1.0.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-test</artifactId>
			<version>${spring.boot.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-junit</artifactId>
			<version>2.0.0.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apiguardian</groupId>
			<artifactId>apiguardian-api</artifactId>
			<version>1.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.skins</groupId>
			<artifactId>maven-fluido-skin</artifactId>
			<version>1.6</version>
		</dependency>
		<dependency>
			<groupId>com.google.googlejavaformat</groupId>
			<artifactId>google-java-format</artifactId>
			<version>1.5</version>
		</dependency>
	</dependencies>
	<build>
	  <directory>${project.basedir}/target</directory>
	  <finalName>${project.artifactId}-${project.version}</finalName>
		<sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
		<testSourceDirectory>${project.basedir}/src/test/java</testSourceDirectory>
		<scriptSourceDirectory>src/main/scripts</scriptSourceDirectory>
		<resources>
		  <resource>
		    <directory>${project.basedir}/src/main/resources</directory>
		  </resource>
		  <resource>
        <directory>${project.basedir}/src/qa/resources</directory>
      </resource>
		</resources>
		<testResources>
		  <testResource>
		    <directory>${project.basedir}/src/test/resources</directory>
		  </testResource>
		</testResources>
		
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
			</plugins>
		</pluginManagement>
		
		
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.4</version>
			</plugin>
			<!-- JaCoCo (0) Code coverage configuration. Order of execution is: (1) 
				Prepare agent is run to configure the property, then (2) Unit tests are run, 
				then (3) Run jacoco's check goal to determine code coverage. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<configuration>
					<!-- JaCoCo (2) Setup the argLine and run the unit tests. **NOTE the 
						"jacocArgLine" property was configured the "prepare-agent" goal of Jacoco 
						(see below). If you want to resolve the property value as late as possible 
						(i.e. your dynamically alter this property value before reaching this phase), 
						Maven gives you option to use @{jacocoArgLine} instead -->
					<argLine>${jacocoArgLine} -Xmx256m</argLine>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.junit.platform</groupId>
						<artifactId>junit-platform-surefire-provider</artifactId>
						<version>1.0.1</version>
					</dependency>
					<dependency>
						<groupId>org.junit.jupiter</groupId>
						<artifactId>junit-jupiter-engine</artifactId>
						<version>5.0.1</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>default-test</id>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven.checkstyle.plugin.version}</version>
				<configuration>
					<configLocation>google_checks.xml</configLocation>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.9</version>
				<executions>
					<!-- JaCoCo (1) Prepare agent runs in the init phase, it setups the 
						jacocoProperty, so we can insert this to the maven sure fire argLine and 
						get to run jacoco as agent. -->
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<propertyName>jacocoArgLine</propertyName>
							<includes>
								<include>${project.groupId}.springdemo.*</include>
							</includes>
						</configuration>
					</execution>
					<!-- JaCoCo (3) The check goal by default runs in the verify phase, 
						we want to fail the build if minimum code coverage checks aren't met. -->
					<execution>
						<id>check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<!-- All classes must have 90% line and branch coverage. Note we 
									use 2 d.p so that we get can any check failure messages reported to 2 d.p. -->
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>COMPLEXITY</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.20</minimum>
										</limit>
									</limits>
								</rule>
								<rule>
									<element>CLASS</element>
									<limits>
										<limit>
											<counter>COMPLEXITY</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.20</minimum>
										</limit>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.90</minimum>
										</limit>
										<limit>
											<counter>BRANCH</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.90</minimum>
										</limit>
										<limit>
											<counter>METHOD</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.90</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${maven.pmd.plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring.boot.maven.plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.6</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.skins</groupId>
						<artifactId>maven-fluido-skin</artifactId>
						<version>1.6</version>
					</dependency>
					<dependency>
						<groupId>org.apache.maven.doxia</groupId>
						<artifactId>doxia-module-markdown</artifactId>
						<version>1.7</version>
					</dependency>
				</dependencies>
				<configuration>
					<inputEncoding>UTF-8</inputEncoding>
					<outputEncoding>UTF-8</outputEncoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>
          maven-project-info-reports-plugin
        </artifactId>
				<version>2.9</version>
			</plugin>
			<plugin>
				<groupId>com.versioneye</groupId>
				<artifactId>versioneye-maven-plugin</artifactId>
				<version>3.11.4</version>
				<configuration>
					<apiKey>${versioneye.apiKey}</apiKey>
					<organisation>${versioneye.organziation}</organisation>
					<team>Owners</team>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.0.0-M1</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.plexus</groupId>
				<artifactId>plexus-component-metadata</artifactId>
				<version>1.7.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven.dependency.plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changelog-plugin</artifactId>
				<version>2.3</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>codenarc-maven-plugin</artifactId>
				<version>0.22-1</version>
			</plugin>
			<plugin>
				<groupId>org.basepom.maven</groupId>
				<artifactId>duplicate-finder-maven-plugin</artifactId>
				<version>1.2.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0-M1</version>
			</plugin>
			<plugin>
				<groupId>org.eluder.coveralls</groupId>
				<artifactId>coveralls-maven-plugin</artifactId>
				<version>4.3.0</version>
				<configuration>
					<repoToken>${coveralls.token}</repoToken>
				</configuration>
			</plugin>
			
			<plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>${license.maven.plugin.version}</version>
        <configuration>
          <useMissingFile>true</useMissingFile>
          <sortArtifactByName>true</sortArtifactByName>
          <excludedScopes>test</excludedScopes>
        </configuration>
        <executions>
          <execution>
              <id>add-licenses</id>
              <goals>
                <goal>add-third-party</goal>
                <goal>download-licenses</goal>
              </goals>
            </execution>
          <execution>
            <id>download-licenses</id>
            <goals>
              <goal>download-licenses</goal>
            </goals>
          </execution>
          <execution>
            <id>aggregate-download-licenses</id>
            <goals>
              <goal>aggregate-download-licenses</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.9</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
							<report>cim</report>
							<report>dependencies</report>
							<report>dependency-convergence</report>
							<report>dependency-info</report>
							<report>dependency-management</report>
							<report>distribution-management</report>
							<report>help</report>
							<report>issue-tracking</report>
							<report>license</report>
							<report>mailing-list</report>
							<report>modules</report>
							<report>plugin-management</report>
							<report>plugins</report>
							<report>project-team</report>
							<report>scm</report>
							<report>summary</report>
						</reports>
					</reportSet>
				</reportSets>
				<!-- <configuration> <dependencyLocationsEnabled>true</dependencyLocationsEnabled> 
					</configuration> -->
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<configuration>

				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.9</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>codenarc-maven-plugin</artifactId>
				<version>0.22-1</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven.checkstyle.plugin.version}</version>
				<configuration>
					<configLocation>google_checks.xml</configLocation>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${maven.pmd.plugin.version}</version>
				<configuration>
					<linkXref>true</linkXref>
					<sourceEncoding>utf-8</sourceEncoding>
					<minimumTokens>100</minimumTokens>
					<targetJdk>${jdk.version}</targetJdk>
					<excludes>
						<exclude>**/*Test.java</exclude>
						<exclude>**/generated/*.java</exclude>
					</excludes>
					<excludeRoots>
						<excludeRoot>target/generated-sources/stubs</excludeRoot>
					</excludeRoots>
					<skipEmptyReport>false</skipEmptyReport>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
				<version>2.0</version>
			</plugin>
			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>3.0.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven.dependency.plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
				<version>3.5</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.5</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>dependency-updates-report</report>
							<report>plugin-updates-report</report>
							<report>property-updates-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.0.0-M1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changelog-plugin</artifactId>
				<version>2.3</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.plexus</groupId>
				<artifactId>plexus-component-metadata</artifactId>
				<version>1.7.1</version>
			</plugin>
			<plugin>
				<groupId>org.basepom.maven</groupId>
				<artifactId>duplicate-finder-maven-plugin</artifactId>
				<version>1.2.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0-M1</version>
			</plugin>


      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
      </plugin>


		</plugins>
	</reporting><profiles>
		<profile>
			<id>sonar</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- Optional URL to server. Default value is http://localhost:9000 -->
				<sonar.host.url>
					https://sonarcloud.io
				</sonar.host.url>
				<sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
				<sonar.projectKey>gregswindle-github</sonar.projectKey>
				<sonar.projectName>${project.artifactId}</sonar.projectName>
				<sonar.projectVersion>${project.version}</sonar.projectVersion>
				<sonar.links.homepage>${project.url}</sonar.links.homepage>
				<sonar.links.ci>${project.ciManagement.url}</sonar.links.ci>
				<sonar.links.scm>${project.scm.url}</sonar.links.scm>
				<sonar.links.issue>${project.issueManagement.url}</sonar.links.issue>
				<sonar.organization>${sonar.property.organization}</sonar.organization>
				<sonar.login>${sonar.property.login}</sonar.login>
			</properties>
		</profile>
	</profiles>
	
</project>
