<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.itextpdf</groupId>
    <artifactId>root</artifactId>
    <version>7.1.9-SNAPSHOT</version>
    <relativePath/>
  </parent>
  <artifactId>cleanup</artifactId>
  <version>2.0.5-SNAPSHOT</version>
  <name>pdfSweep</name>
  <url>https://itextpdf.com/products/itext-7/pdfsweep</url>
  <description>
    Redact PDF documents. If you have to share PDFs with different departments or send them out of house, but they
    include some confidential, sensitive information which should not be shared, pdfSweep is your solution. Redact a PDF
    containing sensitive, confidential information, such as personal medical information, account numbers, national
    identification numbers, personal details or social security numbers in a reliable and secure way. Data redaction
    with pdfSweep removes such data including any underlying information, making it impossible for such information to
    be recovered. With pdfSweep you can also redact drawings or parts of drawings you do not want your competition to
    see. PDF Data redaction with pdfSweep gives you the piece of mind that your companies confidential information
    remains just that, confidential.
  </description>
  <scm>
    <connection>scm:git:ssh://git@git.itextsupport.com:7999/i7j/cleanup.git</connection>
    <url>https://git.itextsupport.com/projects/I7J/repos/cleanup</url>
  </scm>
  <properties>
    <itext.version>${project.parent.version}</itext.version>
  </properties>
  <repositories>
    <repository>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>apache.snapshots</id>
      <name>Apache Development Snapshot Repository</name>
      <url>https://repository.apache.org/content/repositories/snapshots/</url>
    </repository>
    <repository>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>itext-snapshot</id>
      <name>iText Repository - snapshots</name>
      <url>https://repo.itextsupport.com/snapshot</url>
    </repository>
    <repository>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>itext-releases</id>
      <name>iText Repository - releases</name>
      <url>https://repo.itextsupport.com/releases</url>
    </repository>
  </repositories>
  <dependencies>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>io</artifactId>
      <version>${itext.version}</version>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>kernel</artifactId>
      <version>${itext.version}</version>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>layout</artifactId>
      <version>${itext.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-imaging</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>pdftest</artifactId>
      <version>${itext.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${failsafe.version}</version>
        <configuration>
          <includes>
            <include>**/*Test.java</include>
          </includes>
          <groups>${integrationtests}</groups>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${javadoc.version}</version>
        <configuration>
          <subpackages>com.itextpdf.pdfcleanup</subpackages>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire.version}</version>
        <configuration>
          <includes>
            <include>**/*Test.java</include>
          </includes>
          <groups>${unittests}</groups>
        </configuration>
      </plugin>
      <!-- Compute test coverage for Sonar BEWARE: Sonar
                              doesn't run the verify phase, it has to be forced by setting -Dsonar.phase=verify -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <executions>
          <execution>
            <id>agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>site</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <propertyName>jacoco.agent.argLine</propertyName>
          <!-- default: argLine -->
          <includes>
            <include>com/itextpdf/**</include>
          </includes>
          <destFile>${project.build.directory}/jacoco-integration.exec</destFile>
          <!-- agent -->
          <dataFile>${project.build.directory}/jacoco-integration.exec</dataFile>
          <!-- report -->
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
