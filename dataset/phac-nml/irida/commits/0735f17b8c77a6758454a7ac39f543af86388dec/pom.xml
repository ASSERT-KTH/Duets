<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ca.corefacility.bioinformatics</groupId>
	<artifactId>irida-api</artifactId>
	<packaging>jar</packaging>
	<version>2.0.0-SNAPSHOT</version>
	<name>irida-api</name>
	<url>http://gitlab.corefacility.ca/irida/irida-api</url>

	<issueManagement>
		<system>GitLab</system>
		<url>http://gitlab.corefacility.ca/irida/irida-api/issues</url>
	</issueManagement>

	<scm>
		<connection>scm:git:http://gitlab.corefacility.ca/irida/irida-api.git</connection>
		<developerConnection>scm:git:ssh://git@gitlab.corefacility.ca/irida/irida-api.git</developerConnection>
		<url>http://gitlab.corefacility.ca/irida/irida-api</url>
	</scm>

	<inceptionYear>2013</inceptionYear>

	<developers>
		<developer>
			<id>aaron</id>
			<name>Aaron Petkau</name>
			<email>aaron.petkau@phac-aspc.gc.ca</email>
			<organization>Public Health Agency of Canada</organization>
			<organizationUrl>http://www.phac-aspc.gc.ca/</organizationUrl>
		</developer>
		<developer>
			<id>josh</id>
			<name>Josh Adam</name>
			<email>josh.adam@phac-aspc.gc.ca</email>
			<organization>Public Health Agency of Canada</organization>
			<organizationUrl>http://www.phac-aspc.gc.ca/</organizationUrl>
		</developer>
		<developer>
			<id>tom</id>
			<name>Thomas Matthews</name>
			<email>thomas.matthews@phac-aspc.gc.ca</email>
			<organization>Public Health Agency of Canada</organization>
			<organizationUrl>http://www.phac-aspc.gc.ca/</organizationUrl>
		</developer>
		<developer>
			<id>franklin</id>
			<name>Franklin Bristow</name>
			<email>franklin.bristow@phac-aspc.gc.ca</email>
			<organization>Public Health Agency of Canada</organization>
			<organizationUrl>http://www.phac-aspc.gc.ca/</organizationUrl>
		</developer>
	</developers>

	<repositories>
		<!-- Use maven central over HTTPS instead of HTTP -->
		<repository>
			<id>central</id>
			<url>https://repo1.maven.org/maven2</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<url>https://repo.spring.io/libs-milestone/</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<!-- Use maven central over HTTPS instead of HTTP -->
		<pluginRepository>
			<id>central</id>
			<url>https://repo1.maven.org/maven2</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>
		<!-- JUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit-dep</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<!-- Google Guava -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring.version}</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>${spring.data.jpa.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-envers</artifactId>
			<version>${spring.data.envers.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.ws</groupId>
			<artifactId>spring-ws-test</artifactId>
			<version>${spring.ws.test.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security.oauth</groupId>
			<artifactId>spring-security-oauth2</artifactId>
			<version>${spring.security.oauth.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.codehaus.jackson</groupId>
					<artifactId>jackson-mapper-asl</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<version>${spring.security.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Validation API -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate.validator.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.jboss.logging</groupId>
					<artifactId>jboss-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>el-api</artifactId>
			<version>${javax.el-api.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.el</groupId>
			<artifactId>el-ri</artifactId>
			<version>${el-ri.version}</version>
		</dependency>

		<!-- mockito -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- database -->
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
			<version>${liquibase.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.connector.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-envers</artifactId>
			<version>${hibernate.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.jboss.logging</groupId>
					<artifactId>jboss-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>xml-apis</artifactId>
					<groupId>xml-apis</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
			<version>${jsr250.api.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.springtestdbunit</groupId>
			<artifactId>spring-test-dbunit</artifactId>
			<version>${spring.test.dbunit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>${dbunit.version}</version>
			<type>jar</type>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>${commons.dbcp.version}</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>${commons.cli.version}</version>
		</dependency>

		<!-- fastqc -->
		<dependency>
			<groupId>uk.ac.babraham</groupId>
			<artifactId>fastqc</artifactId>
			<version>${fastqc.version}</version>
		</dependency>

		<!-- aspectj -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectj.version}</version>
		</dependency>

		<!-- Apache Jena -->
		<dependency>
			<groupId>org.apache.jena</groupId>
			<artifactId>jena-tdb</artifactId>
			<version>${apache.jena.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>xml-apis</artifactId>
					<groupId>xml-apis</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.jena</groupId>
			<artifactId>jena-text</artifactId>
			<version>${apache.jena.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>xml-apis</artifactId>
					<groupId>xml-apis</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- BioJava -->
		<dependency>
			<groupId>org.biojava</groupId>
			<artifactId>biojava3-core</artifactId>
			<version>${biojava.version}</version>
		</dependency>

		<!-- This dependency is brought in by hibernate and jena with conflicting 
			versions. Solution was to exclude it from both of their imports and import 
			it explicitly. -->
		<dependency>
			<groupId>xml-apis</groupId>
			<artifactId>xml-apis</artifactId>
			<version>${xml.apis.version}</version>
		</dependency>

		<!-- EhCache caching -->
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>${ehcache.version}</version>
		</dependency>

		<!-- Galaxy blend4j/testing -->
		<dependency>
			<groupId>com.github.jmchilton.blend4j</groupId>
			<artifactId>blend4j</artifactId>
			<version>${com.github.jmchilton.blend4j.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.jmchilton.galaxybootstrap</groupId>
			<artifactId>galaxybootstrap</artifactId>
			<version>${com.github.jmchilton.galaxybootstrap.version}</version>
		</dependency>
	</dependencies>
	<build>
		<finalName>irida-api</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven.failsafe.plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<!-- Uncomment below to disable Galaxy integration tests -->
							<!-- 
							<excludes>
								<exclude>/ca/corefacility/bioinformatics/irida/**/galaxy/**</exclude>
								<exclude>ca/corefacility/bioinformatics/irida/service/impl/integration/AnalysisExecutionScheduledTaskImplIT.java</exclude>
							</excludes>
							 -->
							<argLine>${failsafeArgLine}</argLine>
							<systemPropertyVariables>
								<test.galaxy.repository.url>${test.galaxy.repository.url}</test.galaxy.repository.url>
								<test.galaxy.branch>${test.galaxy.branch}</test.galaxy.branch>
								<test.galaxy.revision>${test.galaxy.revision}</test.galaxy.revision>
								<test.galaxy.database>${test.galaxy.database}</test.galaxy.database>
							</systemPropertyVariables>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<configuration>
					<argLine>${surefireArgLine}</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven.javadoc.plugin.version}</version>
				<executions>
					<execution>
						<id>generate-doc</id>
						<phase>site</phase>
						<goals>
							<goal>javadoc</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${maven.jacoco.plugin.version}</version>
				<configuration>
					<excludes>
						<exclude>**/model/**</exclude>
						<exclude>**/config/**</exclude>
						<exclude>**/exceptions/**</exclude>
						<exclude>**/util/**</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut/</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${jacoco.it.execution.data.file}</destFile>
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${jacoco.it.execution.data.file}</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<version>${maven.liquibase.plugin.version}</version>
				<configuration>
					<propertyFile>${liquibase.config.file}</propertyFile>
					<promptOnNonLocalDatabase>${liquibase.config.prompt}</promptOnNonLocalDatabase>
					<driver>${liquibase.config.driver}</driver>
					<url>${liquibase.config.url}</url>
					<username>${liquibase.config.username}</username>
					<password>${liquibase.config.password}</password>
					<changeLogFile>${liquibase.config.changeLogFile}</changeLogFile>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven.jar.plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<properties>
		<java.version>1.8</java.version>

		<!-- Dependencies -->
		<commons.cli.version>1.2</commons.cli.version>
		<junit.version>4.11</junit.version>
		<slf4j.version>1.7.7</slf4j.version>
		<guava.version>17.0</guava.version>
		<spring.version>4.0.6.RELEASE</spring.version>
		<spring.security.version>4.0.0.M1</spring.security.version>
		<spring.data.jpa.version>1.7.0.RELEASE</spring.data.jpa.version>
		<spring.security.oauth.version>1.0.5.RELEASE</spring.security.oauth.version>
		<spring.data.envers.version>0.2.0.RELEASE</spring.data.envers.version>
		<spring.ws.test.version>2.2.0.RELEASE</spring.ws.test.version>
		<mockito.version>1.9.5</mockito.version>
		<mysql.connector.version>5.1.31</mysql.connector.version>
		<hibernate.version>4.3.6.Final</hibernate.version>
		<h2.version>1.4.180</h2.version>
		<jsr250.api.version>1.0</jsr250.api.version>
		<spring.test.dbunit.version>1.1.0</spring.test.dbunit.version>
		<dbunit.version>2.4.9</dbunit.version>
		<commons.dbcp.version>2.0.1</commons.dbcp.version>
		<fastqc.version>0.10.1-nml-custom</fastqc.version>
		<aspectj.version>1.8.1</aspectj.version>
		<hibernate.validator.version>5.1.1.Final</hibernate.validator.version>
		<javax.el-api.version>2.2</javax.el-api.version>
		<el-ri.version>1.0</el-ri.version>
		<com.github.jmchilton.galaxybootstrap.version>0.3.0</com.github.jmchilton.galaxybootstrap.version>
		<com.github.jmchilton.blend4j.version>0.2.0-SNAPSHOT</com.github.jmchilton.blend4j.version>
		<com.github.jmchilton.galaxybootstrap.version>0.4.0</com.github.jmchilton.galaxybootstrap.version>
		<apache.jena.version>1.1.0</apache.jena.version>
		<xml.apis.version>1.4.01</xml.apis.version>
		<liquibase.version>3.2.2</liquibase.version>
		<biojava.version>3.0</biojava.version>
		<ehcache.version>2.9.0</ehcache.version>

		<!-- plugins -->
		<maven.failsafe.plugin.version>2.17</maven.failsafe.plugin.version>
		<maven.surefire.plugin.version>2.17</maven.surefire.plugin.version>
		<maven.javadoc.plugin.version>2.9.1</maven.javadoc.plugin.version>
		<maven.jacoco.plugin.version>0.7.1.201405082137</maven.jacoco.plugin.version>
		<maven.compiler.plugin.version>3.1</maven.compiler.plugin.version>
		<maven.liquibase.plugin.version>${liquibase.version}</maven.liquibase.plugin.version>
		<maven.jar.plugin.version>2.5</maven.jar.plugin.version>

		<!-- project configuration -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- liquibase configuration -->
		<liquibase.config.file>src/main/resources/liquibase.properties</liquibase.config.file>
		<liquibase.config.prompt>true</liquibase.config.prompt>
		<liquibase.config.driver>com.mysql.jdbc.Driver</liquibase.config.driver>
		<liquibase.config.url>jdbc:mysql://localhost:3306/irida_test</liquibase.config.url>
		<liquibase.config.username>test</liquibase.config.username>
		<liquibase.config.password>test</liquibase.config.password>
		<liquibase.config.changeLogFile>ca/corefacility/bioinformatics/irida/database/all-changes.xml</liquibase.config.changeLogFile>

		<!-- URL to the Galaxy repository to test against by default -->
		<test.galaxy.repository.url>https://bitbucket.org/galaxy/galaxy-dist</test.galaxy.repository.url>

		<!-- Branch name within the Galaxy repository to test against -->
		<test.galaxy.branch>stable</test.galaxy.branch>

		<!-- Galaxy Testing Revision: either 'latest' or a revision from the branch 
			in the defined repository -->
		<test.galaxy.revision>7e4d21621ce12e13ebbdf9fd3259df58c3ef124c</test.galaxy.revision>

		<!-- URL to a pre-populated SQLite database for Galaxy -->
		<!-- Set to 'local' to use the local version stored in irida-api, or set 
			this to a URL -->
		<test.galaxy.database>local</test.galaxy.database>
	</properties>
</project>
