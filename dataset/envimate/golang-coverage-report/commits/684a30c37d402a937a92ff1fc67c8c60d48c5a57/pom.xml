<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.jenkins-ci.plugins</groupId>
    <artifactId>plugin</artifactId>
    <version>2.3</version>
    <relativePath/>
  </parent>
  <groupId>com.envimate.jenkins-plugins</groupId>
  <artifactId>golang-coverage-report</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>hpi</packaging>

  <properties>
    <!-- Baseline Jenkins version you use to build the plugin. Users must have this version or newer to run. -->
    <jenkins.version>1.625.3</jenkins.version>
    <!-- Java Level to use. Java 7 required when using core >= 1.612 -->
    <java.level>7</java.level>
    <!-- Jenkins Test Harness version you use to test the plugin. -->
    <!-- For Jenkins version >= 1.580.1 use JTH 2.x or higher. -->
    <jenkins-test-harness.version>2.1</jenkins-test-harness.version>
    <!-- Other properties you may want to use:
         ~ hpi-plugin.version: The HPI Maven Plugin version used by the plugin..
         ~ stapler-plugin.version: The Stapler Maven plugin version required by the plugin.
    -->
  </properties>

  <name>Golang code coverage plugin</name>
  <description>Makes the golang code coverage reports available in the build view</description>
  <url>https://wiki.jenkins-ci.org/display/JENKINS/TODO+Plugin</url>


  <!-- The default licence for Jenkins OSS Plugins is MIT. Substitute for the applicable one if needed. -->

  <licenses>
    <license>
      <name>MIT License</name>
      <url>http://opensource.org/licenses/MIT</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>golang-coverage-report</id>
      <name>Nune Isabekyan</name>
      <email>nisabek@envimate.com</email>
    </developer>
  </developers>
  <!-- Assuming you want to host on @jenkinsci:
  <scm>
    <connection>scm:git:git://github.com/jenkinsci/${project.artifactId}-plugin.git</connection>
    <developerConnection>scm:git:git@github.com:jenkinsci/${project.artifactId}-plugin.git</developerConnection>
    <url>http://github.com/jenkinsci/${project.artifactId}-plugin</url>
  </scm>
   -->
  <repositories>
    <repository>
      <id>repo.jenkins-ci.org</id>
      <url>http://repo.jenkins-ci.org/public/</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>repo.jenkins-ci.org</id>
      <url>http://repo.jenkins-ci.org/public/</url>
    </pluginRepository>
  </pluginRepositories>
  <dependencies>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>golang</artifactId>
      <version>1.1</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <!--  release with
      mvn clean release:prepare release:perform
      - add -Dusername=... -Dpassword=... when above does not authorize correctly
      - add -Darguments="-DskipTests" only when tests locally don't pass
      once the release is completed, new version should be present here:
      http://repo.jenkins-ci.org/releases/net/masterthought/jenkins/cucumber-reports/
      and then later after synchronization also here:
      http://updates.jenkins-ci.org/update-center.json
       -->
      <plugin>
        <groupId>org.eclipse.hudson.tools</groupId>
        <artifactId>maven-hpi-plugin</artifactId>
        <!-- explicitly specifying the latest version here because one we get from
             the parent POM tends to lag behind a bit -->
        <version>3.0.3</version>
      </plugin>
    </plugins>
    <!--<pluginManagement>-->
      <!--<plugins>-->
        <!--<plugin>-->
          <!--<groupId>org.apache.maven.plugins</groupId>-->
          <!--<artifactId>maven-release-plugin</artifactId>-->
          <!--<version>2.5.3</version>-->
        <!--</plugin>-->
      <!--</plugins>-->
    <!--</pluginManagement>-->
  </build>


</project>
