<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.scijava</groupId>
    <artifactId>pom-scijava</artifactId>
    <version>22.2.0</version>
    <relativePath />
  </parent>

  <groupId>uk.ac.sussex.gdsc</groupId>
  <artifactId>gdsc_</artifactId>
  <version>1.3.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>GDSC plugins for ImageJ</name>
  <url>http:///github.com/aherbert/gdsc</url>
  <organization>
    <name>Genome Damage and Stability Centre</name>
    <url>http://www.sussex.ac.uk/gdsc/</url>
  </organization>
  <description>Genome Damage and Stability Centre ImageJ Plugins

Software for microscopy image analysis
</description>

  <licenses>
    <license>
      <name>GNU General Public License (GPL) version 3.0</name>
      <url>http://www.gnu.org/licenses/gpl.txt</url>
      <distribution>manual</distribution>
    </license>
  </licenses>

  <inceptionYear>2011</inceptionYear>
  <scm>
    <connection>scm:git:git://github.com/aherbert/gdsc.git</connection>
    <developerConnection>scm:git:ssh://github.com/aherbert/gdsc.git</developerConnection>
    <url>https://github.com/aherbert/gdsc</url>
  </scm>
  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/aherbert/gdsc/issues</url>
  </issueManagement>
  <ciManagement>
    <system>Travis CI</system>
    <url>https://travis-ci.com/aherbert/gdsc</url>
  </ciManagement>
  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
    <site>
      <id>${project.artifactId}-site</id>
      <url>file://${parent.dir}/mvn-repo</url>
    </site>
  </distributionManagement>
  <mailingLists>
    <mailingList>
      <name>ImageJ Forum</name>
      <archive>http://forum.imagej.net/</archive>
    </mailingList>
  </mailingLists>

  <developers>
    <developer>
      <id>aherbert</id>
      <name>Alex Herbert</name>
      <email>a.herbert@sussex.ac.uk</email>
      <organization>GDSC</organization>
      <organizationUrl>http://www.sussex.ac.uk/gdsc/</organizationUrl>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
  </developers>
  <contributors>
    <contributor>
      <name>Alex Herbert</name>
    </contributor>
  </contributors>

  <properties>
    <maven.build.timestamp.format>yyyy/MM/dd HH:mm</maven.build.timestamp.format>
    <build.date>${maven.build.timestamp}</build.date>
    <license.licenseName>gpl_v3</license.licenseName>
    <license.copyrightOwners>Alex Herbert</license.copyrightOwners>
    <!-- Versions -->
    <gdsc.analytics.version>1.0.1</gdsc.analytics.version>
    <gdsc.test.version>1.0-SNAPSHOT</gdsc.test.version>
    <gdsc.core.version>2.0-SNAPSHOT</gdsc.core.version>
    <org.junit.jupiter.version>5.2.0</org.junit.jupiter.version>
    <org.junit.platform.version>1.2.0</org.junit.platform.version>
    <org.opentest4j.version>1.1.0</org.opentest4j.version>
    <commons.rng.version>1.1</commons.rng.version>
    <org.jacoco.version>0.8.1</org.jacoco.version>
    <nexus-staging-maven-plugin.version>1.6.8</nexus-staging-maven-plugin.version>
    <coveralls-maven-plugin.version>4.3.0</coveralls-maven-plugin.version>
    <spotbugs.version>3.1.6</spotbugs.version>
    <checkstyle.version>8.13</checkstyle.version>
    <pmd.version>6.7.0</pmd.version>
    <beansbinding.version>1.2.1</beansbinding.version>
    <imagescience.version>3.0.0</imagescience.version>
    <!-- Maven -->
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
    <maven-changes-plugin.version>2.12.1</maven-changes-plugin.version>
    <maven-site-plugin.version>3.7.1</maven-site-plugin.version>
    <maven-project-info-reports-plugin.version>3.0.0</maven-project-info-reports-plugin.version>
    <maven-checkstyle-plugin.version>3.0.0</maven-checkstyle-plugin.version>
    <maven-pmd-plugin.version>3.10.0</maven-pmd-plugin.version>
    <maven-jxr-plugin.version>2.5</maven-jxr-plugin.version>
    <maven-surefire-plugin.version>2.22.0</maven-surefire-plugin.version>
    <nexus-staging-maven-plugin.version>1.6.7</nexus-staging-maven-plugin.version>
    <build-helper-maven-plugin.version>3.0.0</build-helper-maven-plugin.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>uk.ac.sussex.gdsc</groupId>
      <artifactId>gdsc-core</artifactId>
      <version>${gdsc.core.version}</version>
    </dependency>
    <dependency>
      <groupId>net.imagej</groupId>
      <artifactId>ij</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-math3</artifactId>
    </dependency>
    <dependency>
      <groupId>net.java.dev.beansbinding</groupId>
      <artifactId>beansbinding</artifactId>
      <version>${beansbinding.version}</version>
    </dependency>
    <dependency>
      <groupId>sc.fiji</groupId>
      <artifactId>imagescience</artifactId>
      <version>${imagescience.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.trove4j</groupId>
      <artifactId>trove4j</artifactId>
    </dependency>
    <!-- TESTING -->
    <dependency>
      <groupId>uk.ac.sussex.gdsc</groupId>
      <artifactId>gdsc-test-api</artifactId>
      <version>${gdsc.test.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>uk.ac.sussex.gdsc</groupId>
      <artifactId>gdsc-test-utils</artifactId>
      <version>${gdsc.test.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>uk.ac.sussex.gdsc</groupId>
      <artifactId>gdsc-test-junit5</artifactId>
      <version>${gdsc.test.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>uk.ac.sussex.gdsc</groupId>
      <artifactId>gdsc-test-rng</artifactId>
      <version>${gdsc.test.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${org.junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-rng-sampling</artifactId>
      <version>${commons.rng.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <id>imagej.releases</id>
      <url>http://maven.imagej.net/content/repositories/releases</url>
    </repository>
    <repository>
      <id>snapshots-repo</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>${maven-project-info-reports-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <configuration>
            <excludes>Gdsc_PlugIn*</excludes>
            <archive>
              <manifest>
                <addClasspath>true</addClasspath>
                <mainClass>uk.ac.sussex.gdsc.Version</mainClass>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <configuration>
            <getRevisionOnlyOnce>false</getRevisionOnlyOnce>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${maven-checkstyle-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>${checkstyle.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>${maven-pmd-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-core</artifactId>
              <version>${pmd.version}</version>
            </dependency>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-java</artifactId>
              <version>${pmd.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <version>${nexus-staging-maven-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <configuration>
          <excludes>Gdsc_PlugIn*</excludes>
        </configuration>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <!-- Set JUL Formatting -->
            <java.util.logging.SimpleFormatter.format><![CDATA[%4$-7s %2$s %5$s%6$s%n]]></java.util.logging.SimpleFormatter.format>
          </systemPropertyVariables>
          <!-- Ensure the JaCoCo settings are preserved in argLine when ImageJ settings are added -->
          <argLine>@{argLine} -Xms512m -Dapple.awt.UIElement="true"</argLine>
          <!-- Fix for OpenJDK 8 now validating class-path attributes in Jar manifests. See https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=912333#63 -->
          <useSystemClassLoader>false</useSystemClassLoader>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-surefire-provider</artifactId>
            <version>${org.junit.platform.version}</version>
          </dependency>
          <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${org.junit.jupiter.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/dependencies</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>true</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <excludeTransitive>false</excludeTransitive>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <configLocation>${basedir}/src/main/resources/checkstyle/checkstyle.xml</configLocation>
          <encoding>UTF-8</encoding>
          <consoleOutput>false</consoleOutput>
          <failsOnError>true</failsOnError>
          <linkXRef>true</linkXRef>
          <includeTestSourceDirectory>false</includeTestSourceDirectory>
        </configuration>
        <executions>
          <execution>
            <id>verify</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
        <configuration>
          <targetJdk>${maven.compiler.target}</targetJdk>
          <!-- Ignore lower levels for now -->
          <minimumPriority>3</minimumPriority>
          <skipEmptyReport>false</skipEmptyReport>
          <analysisCache>true</analysisCache>
          <rulesets>
            <ruleset>${basedir}/src/main/resources/pmd/pmd-ruleset.xml</ruleset>
          </rulesets>
          <failOnViolation>false</failOnViolation>
          <printFailingErrors>false</printFailingErrors>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${spotbugs.version}</version>
        <configuration>
          <failOnError>false</failOnError>
          <threshold>Normal</threshold>
          <effort>Default</effort>
          <excludeFilterFile>${basedir}/src/main/resources/spotbugs/spotbugs-exclude-filter.xml</excludeFilterFile>
        </configuration>
      </plugin>
      <!-- use of mvn release:prepeare release perform should use the nexus release profile -->
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <useReleaseProfile>false</useReleaseProfile>
          <releaseProfiles>release</releaseProfiles>
          <goals>deploy</goals>
          <!-- <goals>deploy nexus-staging:release</goals> -->
        </configuration>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
  </build>

  <profiles>
    <profile>
      <id>snapshot-release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>${build-helper-maven-plugin.version}</version>
            <executions>
              <execution>
                <!-- Fail if not a SNAPSHOT -->
                <id>is-snapshot</id>
                <phase>validate</phase>
                <goals>
                  <goal>regex-property</goal>
                </goals>
                <configuration>
                  <name>is.snapshot.version</name>
                  <value>${project.version}</value>
                  <regex>^.*-SNAPSHOT$</regex>
                  <failIfNoMatch>true</failIfNoMatch>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>true</autoReleaseAfterClose>
              <!-- Not required for snapshot -->
              <skipStaging>true</skipStaging>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>release</id>
      <properties>
        <gpg.executable>gpg</gpg.executable>
        <gpg.keyname>${env.GPG_KEYNAME}</gpg.keyname>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>${maven-gpg-plugin.version}</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.6.2</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <!-- The staged repo must be inspected and then released -->
              <autoReleaseAfterClose>false</autoReleaseAfterClose>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>eclipse</id>
      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${org.junit.jupiter.version}</version>
          </dependency>
          <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <version>${org.junit.platform.version}</version>
            <scope>test</scope>
          </dependency>
        </dependencies>
      </dependencyManagement>
      <dependencies>
        <dependency>
          <groupId>org.junit.platform</groupId>
          <artifactId>junit-platform-launcher</artifactId>
        </dependency>
        <dependency>
          <groupId>org.junit.jupiter</groupId>
          <artifactId>junit-jupiter-engine</artifactId>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>coveralls</id>
      <build>
        <plugins>
          <!-- Submit coverage -->
          <plugin>
            <groupId>org.eluder.coveralls</groupId>
            <artifactId>coveralls-maven-plugin</artifactId>
            <version>${coveralls-maven-plugin.version}</version>
            <configuration>
              <!-- The buildhelper.maven.plugin sets the property 'timestamp' to an epochSeconds -->
              <!-- format. This is used by coveralls to parse the maven timestamp. -->
              <timestampFormat>EpochMillis</timestampFormat>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>jacoco</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${org.jacoco.version}</version>
            <executions>
              <execution>
                <id>default-prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>default-report</id>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
              <execution>
                <id>default-check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <rules>
                    <!-- implementation is needed only for Maven 2 -->
                    <rule implementation="org.jacoco.maven.RuleConfiguration">
                      <element>BUNDLE</element>
                      <limits>
                        <!-- implementation is needed only for Maven 2 -->
                        <limit implementation="org.jacoco.report.check.Limit">
                          <counter>COMPLEXITY</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>0.60</minimum>
                        </limit>
                      </limits>
                    </rule>
                  </rules>
                  <haltOnFailure>false</haltOnFailure>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>fast</id>
      <properties>
        <skipTests>true</skipTests>
        <maven.javadoc.skip>true</maven.javadoc.skip>
      </properties>
    </profile>
  </profiles>

</project>