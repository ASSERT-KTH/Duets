<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.kno10.osm</groupId>
	<artifactId>reversegeocode</artifactId>
	<version>0.0.2-SNAPSHOT</version>
	<name>Simple but fast reverse geocoding up to city granularitiy level</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jmh.version>1.11.2</jmh.version>
		<javac.target>1.8</javac.target>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<uberjar.name>benchmarks</uberjar.name>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<compilerVersion>${javac.target}</compilerVersion>
					<source>${javac.target}</source>
					<target>${javac.target}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${outputDir}</outputDirectory>
							<excludeArtifactIds>junit:*,org.hamcrest:*</excludeArtifactIds>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<!-- Indexing profile. -->
			<id>indexer</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.9</version>
						<executions>
							<execution>
								<id>add-indexer</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>add-source</goal>
								</goals>
								<configuration>
									<sources>
										<source>src/indexer/java</source>
									</sources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<!-- This does not appear to be available on mvncentral. Use "aptitude 
						install libosmpbf-java" -->
					<groupId>crosby.binary</groupId>
					<artifactId>osmpbf</artifactId>
					<version>1.3.3</version>
					<scope>system</scope>
					<systemPath>/usr/share/maven-repo/crosby/binary/osmpbf/1.3.3/osmpbf-1.3.3.jar</systemPath>
				</dependency>
				<dependency>
					<groupId>com.google.protobuf</groupId>
					<artifactId>protobuf-java</artifactId>
					<version>2.6.1</version>
					<scope>system</scope>
					<systemPath>/usr/share/maven-repo/com/google/protobuf/protobuf-java/2.6.1/protobuf-java-2.6.1.jar</systemPath>
				</dependency>
				<dependency>
					<groupId>it.unimi.dsi</groupId>
					<artifactId>fastutil</artifactId>
					<version>7.0.8</version>
				</dependency>
				<dependency>
					<groupId>javafx</groupId>
					<artifactId>jfxrt</artifactId>
					<version>${java.version}</version>
					<scope>system</scope>
					<systemPath>${java.home}/lib/ext/jfxrt.jar</systemPath>
				</dependency>
				<dependency>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
					<version>1.7.7</version>
				</dependency>
				<dependency>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
					<version>1.1.2</version>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<!-- Microbenchmarking profile. -->
			<id>jmh</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.9</version>
						<executions>
							<execution>
								<id>add-jmh</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>add-source</goal>
								</goals>
								<configuration>
									<sources>
										<source>src/bench/java</source>
									</sources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-shade-plugin</artifactId>
						<version>2.2</version>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>shade</goal>
								</goals>
								<configuration>
									<finalName>${uberjar.name}</finalName>
									<transformers>
										<transformer
											implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
											<mainClass>org.openjdk.jmh.Main</mainClass>
										</transformer>
									</transformers>
									<filters>
										<filter>
											<!-- Shading signed JARs will fail without this. http://stackoverflow.com/questions/999489/invalid-signature-file-when-attempting-to-run-a-jar -->
											<artifact>*:*</artifact>
											<excludes>
												<exclude>META-INF/*.SF</exclude>
												<exclude>META-INF/*.DSA</exclude>
												<exclude>META-INF/*.RSA</exclude>
											</excludes>
										</filter>
									</filters>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>org.openjdk.jmh</groupId>
					<artifactId>jmh-core</artifactId>
					<version>${jmh.version}</version>
				</dependency>
				<dependency>
					<groupId>org.openjdk.jmh</groupId>
					<artifactId>jmh-generator-annprocess</artifactId>
					<version>${jmh.version}</version>
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
</project>