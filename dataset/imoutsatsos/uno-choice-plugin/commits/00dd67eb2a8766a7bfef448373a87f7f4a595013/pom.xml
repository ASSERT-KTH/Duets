<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.jenkins-ci.plugins</groupId>
		<artifactId>plugin</artifactId>
		<version>1.580.1</version><!-- which version of Jenkins is this plugin built 
			against? -->
	</parent>

	<groupId>org.biouno</groupId>
	<artifactId>uno-choice</artifactId>
	<version>0.23-SNAPSHOT</version>
	<packaging>hpi</packaging>
	<name>Uno-Choice Plug-in</name>
	<description>This plug-in provides additional parameter types for jobs, that allow you to cascade changes and render images or other HTML elements instead of the traditional parameter.</description>

	<organization>
		<name>BioUno</name>
		<url>http://www.biouno.org</url>
	</organization>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<phantomjs.executable>/opt/phantomjs-1.9.7-linux-x86_64/bin/phantomjs</phantomjs.executable>
	</properties>

	<scm>
		<connection>scm:git:git://github.com/biouno/uno-choice-plugin.git</connection>
		<developerConnection>scm:git:git@github.com:biouno/uno-choice-plugin.git</developerConnection>
		<url>http://github.com/biouno/uno-choice-plugin</url>
	  <tag>HEAD</tag>
  </scm>

	<!-- get every artifact through repo.jenkins-ci.org, which proxies all the 
		artifacts that we need -->
	<repositories>
		<repository>
			<id>repo.jenkins-ci.org</id>
			<url>http://repo.jenkins-ci.org/public/</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>repo.jenkins-ci.org</id>
			<url>http://repo.jenkins-ci.org/public/</url>
		</pluginRepository>
	</pluginRepositories>

	<distributionManagement>
		<repository>
			<id>jenkins.repo.release</id>
			<name>Repository for Releases</name>
			<url>${jenkins.repo.path}/releases</url>
		</repository>
		<snapshotRepository>
			<id>jenkins.repo.snapshot</id>
			<name>Repository for Snapshots</name>
			<url>${jenkins.repo.path}/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<dependencies>
		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>scriptler</artifactId>
			<version>2.7</version>
		</dependency>
		<dependency>
			<groupId>org.kohsuke.stapler</groupId>
			<artifactId>stapler-adjunct-jquery</artifactId>
			<version>1.8.3-0</version>
		</dependency>
	    <dependency>
	        <groupId>org.mockito</groupId>
	        <artifactId>mockito-core</artifactId>
	        <version>1.9.5</version>
	        <scope>test</scope>
	    </dependency>
	    <dependency>
	        <groupId>org.powermock</groupId>
	        <artifactId>powermock-module-junit4</artifactId>
	        <version>1.5.1</version>
	        <scope>test</scope>
	    </dependency>
	    <dependency>
	        <groupId>org.powermock</groupId>
	        <artifactId>powermock-api-mockito</artifactId>
	        <version>1.5.1</version>
	        <scope>test</scope>
	    </dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>InjectedTest.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>PhantomJS Unit Testing</id>
						<phase>test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<executable>${phantomjs.executable}</executable>
					<arguments>
						<argument>${basedir}/src/test/js/lib/runner.js</argument>
						<argument>${basedir}/src/test/js/lib/tests.html</argument>
					</arguments>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
