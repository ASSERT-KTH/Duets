<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>activityinfo-server</artifactId>
  <packaging>war</packaging>
  <name>ActivityInfo Server</name>

  <parent>
    <groupId>org.activityinfo</groupId>
    <artifactId>activityinfo-parent</artifactId>
    <version>2.7.0-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>


  <properties>
    <gwt.output.directory>${basedir}/war</gwt.output.directory>

    <!-- Allow the build to continue even if there are test failures -->
    <maven.test.failure.ignore>true</maven.test.failure.ignore>

    <display.version>${project.version}</display.version>

    <gwtVersion>2.5.1</gwtVersion>
    <rebarVersion>2.4.1</rebarVersion>
    <gae.version>1.8.8</gae.version>
    <jersey.version>1.17</jersey.version>
    <appengine.export.version>0.1.1</appengine.export.version>
    <testDatabaseUrl>jdbc:mysql://localhost/activityinfo2?useUnicode=true&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull</testDatabaseUrl>
    <testDatabaseUsername>root</testDatabaseUsername>
    <testDatabasePassword>root</testDatabasePassword>
  </properties>

  <dependencies>
    <!-- GWT deps (f rom central repo) -->
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-servlet</artifactId>
      <version>${gwtVersion}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <version>${gwtVersion}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.google.code.gaxb</groupId>
      <artifactId>gaxb</artifactId>
      <version>1.0</version>
      <scope>provided</scope>
    </dependency>
 
    <dependency>
      <groupId>com.teklabs.gwt-i18n-server</groupId>
      <artifactId>gwt-i18n-server</artifactId>
      <version>0.7-bedatadriven2</version>
    </dependency>

    <dependency>
      <groupId>org.xerial</groupId>
      <artifactId>sqlite-jdbc</artifactId>
      <version>3.6.17</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.google.gwt.inject</groupId>
      <artifactId>gin</artifactId>
      <version>1.5.0</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <version>4.4.10</version>
    </dependency>

    <dependency>
      <groupId>org.mindrot.bcrypt</groupId>
      <artifactId>bcrypt</artifactId>
      <version>0.3</version>
    </dependency>

    <dependency>
      <groupId>com.bedatadriven.appengine.export</groupId>
      <artifactId>appengine-itext</artifactId>
      <version>${appengine.export.version}</version>
    </dependency>
    <dependency>
      <groupId>com.bedatadriven.appengine.export</groupId>
      <artifactId>appengine-awt</artifactId>
      <version>${appengine.export.version}</version>
    </dependency>
    <dependency>
      <groupId>com.bedatadriven.appengine.export</groupId>
      <artifactId>appengine-ppt</artifactId>
      <version>${appengine.export.version}</version>
    </dependency>
    <dependency>
      <groupId>com.bedatadriven.appengine.export</groupId>
      <artifactId>appengine-jcharts</artifactId>
      <version>${appengine.export.version}</version>
    </dependency>
    <dependency>
      <groupId>com.bedatadriven.appengine.export</groupId>
      <artifactId>appengine-emf</artifactId>
      <version>${appengine.export.version}</version>
    </dependency>

    <!-- Database dependencies -->

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <exclusions>
        <exclusion>
          <groupId>javax.transaction</groupId>
          <artifactId>jta</artifactId>
        </exclusion>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
      </exclusions>
      <version>4.2.8.Final</version>
    </dependency>
    <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-spatial</artifactId>
        <version>4.0</version>
        <exclusions>
        	<exclusion>
        		<groupId>postgresql</groupId>
        		<artifactId>postgresql</artifactId>
        	</exclusion>
        	<exclusion>
        		<groupId>org.postgis</groupId>
        		<artifactId>postgis-jdbc</artifactId>
        	</exclusion>
        </exclusions>
    </dependency>
    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
      <version>2.0.2-bdd</version>
    </dependency>

    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.27</version>
    </dependency>

    <!-- Bean Mapping and XML -->

    <dependency>
      <groupId>net.sf.dozer</groupId>
      <artifactId>dozer</artifactId>
      <version>5.1</version>
    </dependency>

    <dependency>
      <groupId>com.vividsolutions</groupId>
      <artifactId>jts</artifactId>
      <version>1.12</version>
      <exclusions>
        <!-- interferes with gwt-dev -->
        <exclusion>
          <groupId>xerces</groupId>
          <artifactId>xercesImpl</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker-gae</artifactId>
      <version>2.3.20</version>
    </dependency>

    <!-- Other clientside APIs -->
    <dependency>
      <groupId>com.extjs</groupId>
      <artifactId>gxt</artifactId>
      <version>2.2.5</version>
      <classifier>gwt22</classifier>
    </dependency>
    <dependency>
      <groupId>org.discotools.gwt.leaflet</groupId>
      <artifactId>gwtl-core</artifactId>
      <version>0.3-SNAPSHOT</version>
    </dependency>    
    <dependency>
      <groupId>com.google.gwt.google-apis</groupId>
      <artifactId>gwt-gears</artifactId>
      <version>1.2.1</version>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava-gwt</artifactId>
      <version>12.0.1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>12.0.1</version>
    </dependency>

    <!-- Rebar- client persistence -->
    <dependency>
      <groupId>com.bedatadriven.rebar</groupId>
      <artifactId>rebar-appcache</artifactId>
      <version>${rebarVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.bedatadriven.rebar</groupId>
      <artifactId>rebar-time</artifactId>
      <version>${rebarVersion}</version>
    </dependency>
    <dependency>	
      <groupId>com.bedatadriven.rebar</groupId>
      <artifactId>rebar-sql</artifactId>
      <version>${rebarVersion}</version>
      <exclusions>
      	<exclusion>
      		<groupId>javax.persistence</groupId>
      		<artifactId>persistence-api</artifactId>
      	</exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.bedatadriven.rebar</groupId>
      <artifactId>rebar-sync</artifactId>
      <version>${rebarVersion}</version>
      <exclusions>
      	<exclusion>
      		<groupId>javax.persistence</groupId>
      		<artifactId>persistence-api</artifactId>
      	</exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.bedatadriven.rebar</groupId>
      <artifactId>rebar-asyncfun</artifactId>
      <version>${rebarVersion}</version>
      <exclusions>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
      </exclusions>
    </dependency>


    <!-- Dependency Injection Framework -->
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <version>3.0</version>
    </dependency>

    <dependency>
      <groupId>com.google.inject.extensions</groupId>
      <artifactId>guice-servlet</artifactId>
      <version>3.0</version>
    </dependency>

    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>1.6</version>
    </dependency>


    <!-- Random library for BASE64 decoding (KmlDataServlet) -->
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.7</version>
    </dependency>

    <dependency>
      <groupId>gson-gwt</groupId>
      <artifactId>gson-gwt</artifactId>
      <version>1.0</version>
      <scope>provided</scope>
    </dependency>

    <!-- testing framework -->
    <dependency>
      <groupId>org.dbunit</groupId>
      <artifactId>dbunit</artifactId>
      <version>2.4.8</version>
      <scope>test</scope>
    </dependency>
        <!-- Apache Commons File Upload -->
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.2.2</version>
    </dependency>

    <!-- Required for DiskFileFactory but declared optional in commons-upload 
         so needs to be redeclared here -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.3.2</version>
    </dependency>

    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm</artifactId>
      <version>4.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey.contribs</groupId>
      <artifactId>jersey-guice</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-json</artifactId>
      <version>${jersey.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.sun.xml.bind</groupId>
          <artifactId>jaxb-impl</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey.contribs</groupId>
      <artifactId>jersey-multipart</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
       <groupId>org.ocpsoft.prettytime</groupId>
       <artifactId>prettytime</artifactId>
       <version>2.1.2.Final</version>
    </dependency>
    <dependency>
      <groupId>com.bedatadriven</groupId>
      <artifactId>jackson-geojson</artifactId>
      <version>0.7</version>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <id>OSGEO GeoTools repo</id>
      <url>http://download.osgeo.org/webdav/geotools</url>
    </repository>
    <repository>
      <id>Hibernate Spatial repo</id>
      <url>http://www.hibernatespatial.org/repository</url>
    </repository>
    <!-- add JBOSS repository for easy access to Hibernate libraries -->
    <repository>
      <id>JBOSS</id>
      <url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
    </repository>
  </repositories>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.properties</include>
        </includes>
      </resource>
    </resources>
    
    <!-- Compile classes into the war directory for hosted mode live 
        editing -->
    <outputDirectory>${gwt.output.directory}/WEB-INF/classes</outputDirectory>
    <testSourceDirectory>src/test/java</testSourceDirectory>
    <plugins>
      <!-- configure the Java Compiler Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>

          <source>1.7</source>
          <target>1.7</target>
          <encoding>UTF-8</encoding>
          <excludes>
            <exclude>**/emul/**/*.java</exclude>
          </excludes>
          <compilerArgs>
            <arg>-implicit:none</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>9.4.14.v20181114</version>
      </plugin>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>revision</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <prefix>git</prefix>
          <dotGitDirectory>${project.basedir}/../.git</dotGitDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-maven-plugin</artifactId>
        <version>2.0.2-bdd</version>
        <configuration>
          <driver>com.mysql.jdbc.Driver</driver>
          <changeLogFile>org/activityinfo/database/changelog/db.changelog-master.xml</changeLogFile>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.4</version>

        <!-- set encoding to something not platform dependent -->
        <configuration>
          <encoding>UTF-8</encoding>

          <!-- Change the delimiters used for filtering to avoid 
              colliding with FTL template syntaxt -->
          <delimiters>
            <delimeter>$[*]</delimeter>
          </delimiters>
          <useDefaultDelimiters>false</useDefaultDelimiters>
        </configuration>
      </plugin>
      
      <!--<plugin>-->
        <!--<groupId>org.apache.maven.plugins</groupId>-->
        <!--<artifactId>maven-checkstyle-plugin</artifactId>-->
        <!--<version>2.9.1</version>-->
        <!--<configuration>-->
          <!--<configLocation>checkstyle.xml</configLocation>-->
        <!--</configuration>-->
        <!--<executions>-->
          <!--<execution>-->
            <!--<id>checkstyle</id>-->
            <!--<goals>-->
              <!--<goal>check</goal>-->
            <!--</goals>-->
            <!--<phase>verify</phase>-->
          <!--</execution>-->
        <!--</executions>-->
      <!--</plugin>-->

      <!-- configure the GWT-Maven plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>${gwtVersion}</version>
        <configuration>
          <runTarget>/</runTarget>
          <logLevel>TRACE</logLevel>
          <inplace>false</inplace>
          <gwtVersion>${gwtVersion}</gwtVersion>
          <port>9090</port>
          <webappDirectory>${basedir}/war</webappDirectory>
          <warSourceDirectory>${basedir}/war</warSourceDirectory>
          <extraJvmArgs>-Xmx512M -Xss1M</extraJvmArgs>
          <hostedWebapp>war</hostedWebapp>
        </configuration>

        <executions>
          <execution>
            <id>i18n</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>i18n</goal>
            </goals>
            <configuration>
              <logLevel>ALL</logLevel>
              <i18nConstantsBundle>org.activityinfo.client.i18n.UIConstants</i18nConstantsBundle>
            </configuration>
          </execution>

          <execution>
            <id>activityinfo-compile</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
              <logLevel>INFO</logLevel>
              <compileReport>true</compileReport>
              <modules>
                <module>org.activityinfo.ActivityInfoProduction</module>
                <module>org.activityinfo.embed.Embed</module>
              </modules>
            </configuration>
          </execution>

          <execution>
            <id>gwt-clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>


      <!-- Make sure we remove GWT-generated stuff in the war/ folder -->
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>tomcat</directory>
            </fileset>
            <fileset>
              <directory>war/WEB-INF/lib</directory>
            </fileset>
            <fileset>
              <directory>war/WEB-INF/deploy</directory>
            </fileset>
            <fileset>
              <directory>war/temp</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

      <!-- Exclude GWT integration tests from the test phase -->
      <!-- we want to run them during the integration-test phase with 
          the gwt-maven plugin -->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.9</version>
        <configuration>
          <excludes>
            <exclude>**/*GwtTest.java</exclude>
          </excludes>
          <failIfNoTests>false</failIfNoTests>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
          <systemPropertyVariables>
            <testDatabaseUrl>${testDatabaseUrl}</testDatabaseUrl>
            <testDatabaseUsername>${testDatabaseUsername}</testDatabaseUsername>
            <testDatabasePassword>${testDatabasePassword}</testDatabasePassword>
          </systemPropertyVariables>
        </configuration>
      </plugin>
    
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1.1</version>

        <!-- Include GWT compiler output in the war -->

        <configuration>
          <warSourceDirectory>${basedir}/war</warSourceDirectory>
          <warSourceExcludes>ActivityInfo/compile-report,*.log,**/*.symbolMap</warSourceExcludes>
        </configuration>
      </plugin>


      <!-- Embedded web server for testing -->
      <!-- You can start by invoking mvn jetty:run -->
      <!-- The server was also be started for the integration testing 
          phase -->
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
        <version>6.1.22</version>
        <configuration>
          <webAppSourceDirectory>${basedir}/war</webAppSourceDirectory>
          <scanIntervalSeconds>0</scanIntervalSeconds>
          <scanTargets>
                        <!--<scanTarget>${basedir}/war/WEB-INF/classes</scanTarget> -->
            <scanTarget>${basedir}/war/WEB-INF/web.xml</scanTarget>
          </scanTargets>
          <connectors>
            <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
              <port>8888</port>
              <integralPort>9095</integralPort>
            </connector>
          </connectors>
          <contextPath>/</contextPath>
          <stopPort>9095</stopPort>
          <stopKey>STOP</stopKey>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.0-beta-3</version>
        <configuration>
          <reportPlugins>
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>gwt-maven-plugin</artifactId>
              <configuration>
                <modules>
                  <module>org.activityinfo.ActivityInfoProduction</module>
                </modules>
              </configuration>
              <reportSets>
                <reportSet>
                  <reports>                       `
                    <report>compile-report</report>
                  </reports>
                </reportSet>
              </reportSets>
            </plugin>
          </reportPlugins>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse 
            m2e settings only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <versionRange>[2.3,)</versionRange>
                    <goals>
                      <goal>resources</goal>
                      <goal>testResources</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <versionRange>[1.5,)</versionRange>
                    <goals>
                      <goal>revision</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>gwt-maven-plugin</artifactId>
                    <versionRange>[2.3.0-1,)</versionRange>
                    <goals>
                      <goal>i18n</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.liquibase</groupId>
                    <artifactId>
                      liquibase-maven-plugin
                    </artifactId>
                    <versionRange>
                      [2.0.1,)
                    </versionRange>
                    <goals>
                      <goal>update</goal>
                      <goal>dropAll</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>ci</id>
      <properties>
        <display.version>2.7 Build ${BUILD_NUMBER}</display.version>
      </properties>
    </profile>


    <profile>
      <id>reset-test-db</id>

      <build>
        <plugins>
          <plugin>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>prep-test-database</id>
                <goals>
                  <goal>dropAll</goal>
                  <goal>update</goal>
                </goals>
                <phase>test-compile</phase>
                <configuration>
                  <dropFirst>true</dropFirst>
                  <url>${testDatabaseUrl}</url>
                  <username>${testDatabaseUsername}</username>
                  <password>${testDatabasePassword}</password>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
