<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.ge.predix.solsvc</groupId>
	<artifactId>asset-bootstrap-client</artifactId>
	<version>2.0.35</version>
	<packaging>jar</packaging>

	<properties>
		<predix-rest-client.version>2.3.8</predix-rest-client.version>
		<ext-model.version>2.3.8</ext-model.version>
		<ext-util.version>2.3.8</ext-util.version>

		<spring.version>4.1.6.RELEASE</spring.version>
		<jettison.version>1.1</jettison.version>

		<mockito.version>1.9.5</mockito.version>
		<slf4j.version>1.7.7</slf4j.version>
		<logback.version>1.1.3</logback.version>
		<groovy.version>2.3.5</groovy.version>

		<junit.version>4.12</junit.version>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven-jar-plugin.version>2.5</maven-jar-plugin.version>
		<maven-failsafe-plugin.version>2.17</maven-failsafe-plugin.version>
		<maven-surefire-plugin.version>2.16</maven-surefire-plugin.version>
		<jsonschema2pojo-maven-plugin.version>0.4.10</jsonschema2pojo-maven-plugin.version>
		<maven-bundle-plugin.version>2.3.5</maven-bundle-plugin.version>
		<maven-compiler-plugin.version>2.5.1</maven-compiler-plugin.version>
		<maven-antrun-plugin.version>1.7</maven-antrun-plugin.version>

	</properties>

	<dependencies>
		<dependency>
			<groupId>com.ge.predix.solsvc</groupId>
			<artifactId>predix-rest-client</artifactId>
			<version>${predix-rest-client.version}</version>
		</dependency>
		<dependency>
			<groupId>com.ge.predix.solsvc</groupId>
			<artifactId>ext-model</artifactId>
			<version>${ext-model.version}</version>
		</dependency>
		<dependency>
			<groupId>com.ge.predix.solsvc</groupId>
			<artifactId>ext-util</artifactId>
			<version>${ext-util.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Test Artifacts -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<artifactId>logback-classic</artifactId>
			<groupId>ch.qos.logback</groupId>
			<version>${logback.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy</artifactId>
			<version>${groovy.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
	
		<plugins>
			<plugin>
			
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				
				<configuration>
				<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>
			<plugin>
                		<groupId>org.codehaus.mojo</groupId>
                		<artifactId>versions-maven-plugin</artifactId>
                		<version>2.2</version>
            		</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven-jar-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit4</artifactId>
						<version>${maven-surefire-plugin.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<argLine>-Xmx1024m -XX:MaxPermSize=256m</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-failsafe-plugin.version}</version>
				<configuration>
					<systemProperties>
					</systemProperties>
				</configuration>
				<executions>
					<execution>
						<id>run-tests</id>
						<phase>integration-test</phase>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.jsonschema2pojo</groupId>
					<artifactId>jsonschema2pojo-maven-plugin</artifactId>
					<version>${jsonschema2pojo-maven-plugin.version}</version>
					<configuration>
						<sourceDirectory>src/main/resources/schema/json</sourceDirectory>
						<targetPackage>com.ge.predix.solsvc.bootstrap.ams.dto</targetPackage>
						<outputDirectory>src/main/java</outputDirectory>
						<removeOldOutput>false</removeOldOutput>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>generate</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>${maven-bundle-plugin.version}</version>
					<extensions>true</extensions>
					<executions>
						<execution>
							<id>bundle-manifest</id>
							<phase>process-classes</phase>
							<goals>
								<goal>manifest</goal>
							</goals>
						</execution>
						<execution>
							<id>bundle</id>
							<phase>package</phase>
							<goals>
								<goal>bundle</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<archive>
							<forced>true</forced>
						</archive>
						<unpackBundle>true</unpackBundle>
						<excludeDependencies>
							true
						</excludeDependencies>
						<instructions>
							<Bundle-Name>SOLSVC ASSET ${project.artifactId}</Bundle-Name>
							<Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>
							<_removeheaders>Built-By,Build-Jdk,Bnd-LastModified,Embed-Directory,Include-Resource</_removeheaders>
							<!-- <Bundle-Activator>com.ge.waterrmd.bundle.Activator</Bundle-Activator> -->
							<Include-Resource>
								{maven-resources}
							</Include-Resource>
							<Bundle-Classpath>.
							</Bundle-Classpath>
							<Export-Package>
								*
							</Export-Package>
							<_exportcontents>
								<!-- META-INF;-split-package:=merge-first, org.hibernate* -->
								<!-- org.hibernate*;version=${hibernate-core.version}, javax.persistence*;version=1.0.0.Final, -->
								!*
							</_exportcontents>
							<Embed-Dependency>
								*;scope=compile|provided;optional=false;inline=false,
							</Embed-Dependency>
							<Embed-Directory>lib</Embed-Directory>
							<Embed-Transitive>true</Embed-Transitive>
							<Import-Package>
								*
							</Import-Package>
							<Private-Package>
							</Private-Package>
							<!-- <Bundle-ClassPath>.,{maven-dependencies}</Bundle-ClassPath> -->
							<!-- <Bundle-ClassPath>.</Bundle-ClassPath> -->
						</instructions>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven-antrun-plugin.version}</version>
					<executions>
						<execution>
							<id>asset-bootstrap-process-classes</id>
							<!-- some people find this annoying because the file can change with 
								the build if felix is not tuned properly. But that means the Manifest.MF 
								is changing and may fail when dropped in container or a new transitive dependency 
								has emerged that may fail OSSCAR or Security scans. Thus, this is is a Canary 
								and provides an historical record of the changes. Tune the _removeheaders 
								in the maven-bundle-plugin to avoid benign changes -->
							<phase>process-classes</phase>
							<configuration>
								<target>
									<copy todir="${basedir}/scripts/deployment">
										<fileset dir="${basedir}/target/classes/META-INF"
											includes="**/MANIFEST.MF" />
									</copy>
								</target>
							</configuration>
							<goals>
								<goal>run</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>testharness</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${maven-failsafe-plugin.version}</version>
						<executions>
							<execution>
								<id>run-tests</id>
								<phase>integration-test</phase>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<systemProperties>
								<property>
									<name>httpUrl</name>
									<value>https://localhost:9093</value>
								</property>
							</systemProperties>
							<includes>
								<include>**/*IT.java</include>
								<include>**/*TestHarness.java</include>
							</includes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>datagenerator</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${maven-failsafe-plugin.version}</version>
						<executions>
							<execution>
								<id>run-tests</id>
								<phase>integration-test</phase>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<includes>
								<include>**/*Generator.java</include>
							</includes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>dataeraser</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${maven-failsafe-plugin.version}</version>
						<executions>
							<execution>
								<id>run-tests</id>
								<phase>integration-test</phase>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<includes>
								<include>**/*Eraser.java</include>
							</includes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
