<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>jensoft-core</artifactId>
	<version>2.0.2</version>
	<name>JenSoft API Core</name>

	<url>https://www.jensoftapi.com</url>

	<parent>
		<groupId>com.jensoft</groupId>
		<artifactId>jensoft-root</artifactId>
		<version>1.0.0</version>
	</parent>

	<scm>
		<connection>scm:svn:http://svn.jensoft.org/tags/jensoft-core-2.0.2</connection>
		<developerConnection>scm:svn:http://svn.jensoft.org/tags/jensoft-core-2.0.2</developerConnection>
		<url>http://svn.jensoft.org/tags/jensoft-core-2.0.2</url>
	</scm>


	<licenses>
		<license>
			<name>GNU Affero General Public License, Version 3.0</name>
			<url>http://www.gnu.org/licenses/agpl-3.0.html</url>
			<distribution>repo</distribution>
			<comments>Ideal if you are creating an open source application under a license compatible with the Affero GPL license.</comments>
		</license>
	</licenses>


	<dependencies>

		<!-- you need to install system lib jnlp.jar in local repository , can 
			be found in java jdk sample pack, download separately -->
		<!-- mvn install:install-file -Dfile=C:\usr\Java\jdk1.6.0_38\sample\jnlp\servlet\jnlp.jar 
			-DgroupId=javax.jnlp -DartifactId=jnlp-api -Dversion=6.0 -Dpackaging=jar 
			-DlocalRepositoryPath=C:\Users\sebastien\.m2\repository -->
		<dependency>
			<groupId>javax.jnlp</groupId>
			<artifactId>jnlp-api</artifactId>
			<version>6.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<build>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/pom.*</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**/pom.*</exclude>
				</excludes>
				<filtering>false</filtering>
			</resource>
		</resources>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.github.goldin</groupId>
				<artifactId>timestamp-maven-plugin</artifactId>
				<version>0.2.5</version>
				<executions>
					<execution>
						<id>set-build-timestamp</id>
						<goals>
							<goal>timestamp</goal>
						</goals>
						<phase>validate</phase>
						<configuration>
							<timestamp>
								<property>build.timestamp</property>
								<pattern>EEE MMM dd HH:mm:ss zzz yyyy</pattern>
								<timezone>UTC</timezone>
								<locale>en_US</locale>
							</timestamp>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<pomFile>target/classes/META-INF/maven/com.jensoft/jensoft-core/pom.xml</pomFile>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<pomFile>target/classes/META-INF/maven/com.jensoft/jensoft-core/pom.xml</pomFile>
				</configuration>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.github.goldin
										</groupId>
										<artifactId>
											timestamp-maven-plugin
										</artifactId>
										<versionRange>
											[0.2.5,)
										</versionRange>
										<goals>
											<goal>timestamp</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>


	<profiles>

		<profile>

			<id>licensed</id>

			<properties>
				<java.class.to.modify.package>com/jensoft/core/projection</java.class.to.modify.package>
				<java.class.to.modify.name>Projection.java</java.class.to.modify.name>
				<java.class.to.modify.full.path>${java.class.to.modify.package}/${java.class.to.modify.name}</java.class.to.modify.full.path>
			</properties>

			<distributionManagement>
				<repository>
					<id>jensoft-releases-commercial</id>
					<name>Releases repository for Jensoft artifacts for commercial purpose</name>
					<url>http://nexus.jensoft.org/content/repositories/releases-commercial</url>
				</repository>
				<snapshotRepository>
					<id>jensoft-snapshots-commercial</id>
					<name>Snapshots repository for Jensoft artifacts for commercial purpose</name>
					<url>http://nexus.jensoft.org/content/repositories/snapshots-commercial</url>
				</snapshotRepository>
			</distributionManagement>

			<build>

				<plugins>

					<plugin>
						<artifactId>maven-jar-plugin</artifactId>
						<configuration>
							<classifier>commercial</classifier>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
						<version>2.5</version>
						<configuration>
							<filesets>
								<fileset>
									<directory>src/main/generated</directory>
								</fileset>
							</filesets>
						</configuration>
					</plugin>

					<plugin>
						<groupId>com.google.code.maven-replacer-plugin</groupId>
						<artifactId>replacer</artifactId>
						<version>1.5.3</version>
						<executions>
							<execution>
								<phase>generate-sources</phase>
								<goals>
									<goal>replace</goal>
								</goals>
								<configuration>
									<basedir>src/main/java</basedir>
									<file>${java.class.to.modify.full.path}</file>
									<outputBasedir>src/main/generated</outputBasedir>
									<outputDir>${java.class.to.modify.package}</outputDir>
									<outputFile>${java.class.to.modify.name}</outputFile>
									<replacements>
										<replacement>
											<token>registerPlugin\(new CopyrightPlugin\(\)\)\;</token>
											<value />
										</replacement>
									</replacements>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.4</version>
						<executions>
							<execution>
								<id>replace-source-file</id>
								<phase>process-sources</phase>
								<configuration>
									<tasks>
										<mkdir dir="src/main/generated" />
										<move file="src/main/java/${java.class.to.modify.full.path}" tofile="src/main/generated/${java.class.to.modify.full.path}.bak" />
										<copy file="src/main/generated/${java.class.to.modify.full.path}" todir="src/main/java/${java.class.to.modify.package}/" />
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>restore-source-file</id>
								<phase>package</phase>
								<configuration>
									<tasks>
										<move file="src/main/generated/${java.class.to.modify.full.path}.bak" tofile="src/main/java/${java.class.to.modify.full.path}" />
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>

		</profile>
	</profiles>

</project>
