
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.biosimilarity.reflection</groupId>
  <artifactId>rlambda</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>rlambda</name>
  <inceptionYear>2007</inceptionYear>
  <properties>
    <scala.version>2.7.3</scala.version>
  </properties>

  <repositories>
    <repository>
      <id>scala-tools.org</id>
      <name>Scala-Tools Maven2 Repository</name>
      <url>http://scala-tools.org/repo-releases</url>
    </repository>
    <repository>
      <id>biosim</id>
      <url>http://biosimrepomirror.googlecode.com/svn/trunk/</url>
    </repository>     
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>scala-tools.org</id>
      <name>Scala-Tools Maven2 Repository</name>
      <url>http://scala-tools.org/repo-releases</url>
    </pluginRepository>
    <pluginRepository>
      <id>jvnet.org</id>
      <name>JVNet</name>
      <url>http://download.java.net/maven/2/org/jvnet/</url>
    </pluginRepository>
  </pluginRepositories>

  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
    </dependency>
    <dependency>
      <groupId>net.liftweb</groupId>
      <artifactId>lift-core</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derby</artifactId>
      <version>10.4.2.0</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>jetty</artifactId>
      <version>[6.1.6,)</version>
      <scope>test</scope>
    </dependency>
    <!-- for LiftConsole -->
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-compiler</artifactId>
      <version>${scala.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>jlex</groupId>
      <artifactId>JLex-local</artifactId>
      <version>local</version>
    </dependency>
    <dependency>
      <groupId>cup</groupId>
      <artifactId>java-cup-11a</artifactId>
      <version>local</version>
    </dependency>
    <dependency>
      <groupId>cup</groupId>
      <artifactId>java-cup-11a-runtime</artifactId>
      <version>local</version>
    </dependency>
    <dependency>
      <groupId>jgrapht</groupId>
      <artifactId>jgrapht-jdk1.5</artifactId>
      <version>local</version>
    </dependency>
    <dependency>
      <groupId>antlr</groupId>
      <artifactId>antlr</artifactId>
      <version>local</version>
    </dependency>
    <dependency>
      <groupId>asm</groupId>
      <artifactId>asm-all-3.0</artifactId>
      <version>local</version>
    </dependency>
    <dependency>
      <groupId>icu4j</groupId>
      <artifactId>icu4j</artifactId>
      <version>local</version>
    </dependency> 
  </dependencies>

  <build>
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <scalaVersion>${scala.version}</scalaVersion>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
        <configuration>
          <contextPath>/</contextPath>
          <scanIntervalSeconds>5</scanIntervalSeconds>
        </configuration>
      </plugin>
      <plugin>
        <groupId>net.sf.alchim</groupId>
        <artifactId>yuicompressor-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>compress</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <nosuffix>true</nosuffix>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
          <downloadSources>true</downloadSources>
          <excludes>
            <exclude>org.scala-lang:scala-library</exclude>
          </excludes>
          <classpathContainers>
            <classpathContainer>ch.epfl.lamp.sdt.launching.SCALA_CONTAINER</classpathContainer>
          </classpathContainers>
          <projectnatures>
            <java.lang.String>ch.epfl.lamp.sdt.core.scalanature</java.lang.String>
            <java.lang.String>org.eclipse.jdt.core.javanature</java.lang.String>
          </projectnatures>
          <buildcommands>
            <java.lang.String>ch.epfl.lamp.sdt.core.scalabuilder</java.lang.String>
          </buildcommands>
        </configuration>
      </plugin>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<!-- groupId>org.jvnet.maven-antrun-extended-plugin</groupId -->
	<artifactId>maven-antrun-plugin</artifactId>
	<!-- artifactId>maven-antrun-extended-plugin</artifactId -->
	<!-- version>1.8</version -->
	<executions>
	  <execution>
	    <id>bnfc-generation</id>
	    <phase>generate-sources</phase>
	    <configuration>
	      <tasks>
		<property name="target.dir" value="${basedir}/target"/>
		<property name="scala.dir" value="${basedir}/src/main/scala"/>
		<property name="bnfc.dir" value="${basedir}/src/main/bnfc"/>
		<property name="bnfc.package" value="${groupId}"/>
		<property name="bnfc.artifact" value="${artifactId}"/>
		<!-- This is a little heavy handed. If the project has
		a lot of dependencies it is conceivable to introduce a
		conflict in the parser compilation using this
		approach. i don't understand how to just grab the
		necessary dependencies. -->
		<property name="compile_classpath"
			  refid="maven.compile.classpath"/>

                <ant antfile="${basedir}/src/main/bnfc/build.xml">
                  <target name="bnfc-generate"/>
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
	  <execution>
	    <id>bnfc-processing</id>
	    <phase>process-sources</phase>
	    <configuration>
	      <tasks>
		<property name="target.dir" value="${basedir}/target"/>
		<property name="scala.dir" value="${basedir}/src/main/scala"/>
		<property name="bnfc.dir" value="${basedir}/src/main/bnfc"/>
		<property name="bnfc.package" value="${groupId}"/>
		<property name="bnfc.artifact" value="${artifactId}"/>
                <ant antfile="${basedir}/src/main/bnfc/build.xml">
                  <target name="bnfc-process"/>
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
	  <execution>
	    <id>bnfc-cleansing</id>
	    <phase>clean</phase>
	    <configuration>
	      <tasks>
		<property name="bnfc.dir" value="${basedir}/src/main/bnfc"/>
		<property name="bnfc.package" value="${groupId}"/>
		<property name="bnfc.artifact" value="${artifactId}"/>
                <ant antfile="${basedir}/src/main/bnfc/build.xml">
                  <target name="bnfc-clean"/>
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <configuration>
          <scalaVersion>${scala.version}</scalaVersion>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
</project>
