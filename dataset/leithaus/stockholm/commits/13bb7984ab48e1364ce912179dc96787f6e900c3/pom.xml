
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.biosimilarity.reflection</groupId>
  <artifactId>rlambda</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>rlambda</name>
  <inceptionYear>2007</inceptionYear>
  <properties>
    <scala.version>2.7.4</scala.version>
  </properties>

  <repositories>
    <repository>
      <id>scala-tools.org</id>
      <name>Scala-Tools Maven2 Repository</name>
      <url>http://scala-tools.org/repo-releases</url>
    </repository>
    <repository>
      <id>maven2-repository.dev.java.net</id>
      <name>Java.net Repository for Maven</name>
      <url>http://download.java.net/maven/2</url>
      <layout>default</layout>
    </repository>
    <repository>
      <id>repository.codehaus.org</id>
      <name>Codehaus</name>
      <url>http://repository.codehaus.org/com/thoughtworks</url>
    </repository>
    <repository>
      <id>mojo.codehaus.org</id>
      <name>Codehaus-Mojo</name>
      <url>http://repository.codehaus.org/org/codehaus/mojo</url>
    </repository>
    <repository>
      <releases>
	<enabled>true</enabled>
	<updatePolicy>daily</updatePolicy>
	<checksumPolicy>warn</checksumPolicy>
      </releases>
      <snapshots>
	<enabled>true</enabled>
	<updatePolicy>daily</updatePolicy>
	<checksumPolicy>warn</checksumPolicy>
      </snapshots>
      <id>com.eaio</id>
      <name>eaio.com repository</name>
      <url>http://eaio.com/maven2</url>
    </repository>    
    <repository>
      <id>biosim</id>
      <url>http://biosimrepomirror.googlecode.com/svn/trunk/</url>
    </repository>     
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>scala-tools.org</id>
      <name>Scala-Tools Maven2 Repository</name>
      <url>http://scala-tools.org/repo-releases</url>
    </pluginRepository>
    <pluginRepository>
      <id>jvnet.org</id>
      <name>JVNet</name>
      <url>http://download.java.net/maven/2/org/jvnet/</url>
    </pluginRepository>
    <pluginRepository>
      <id>grumblesmurf</id>
      <name>Grumblesmurf</name>
      <url>http://maven.grumblesmurf.org/</url>
    </pluginRepository>
    <pluginRepository>
    <id>Codehaus Snapshots</id>
    <url>http://snapshots.repository.codehaus.org/</url>
    <snapshots>
      <enabled>true</enabled>
    </snapshots>
    <releases>
      <enabled>false</enabled>
    </releases>
  </pluginRepository>
  </pluginRepositories>

  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
    </dependency>
    <dependency>
      <groupId>net.liftweb</groupId>
      <artifactId>lift-core</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derby</artifactId>
      <version>10.4.2.0</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>jetty</artifactId>
      <version>[6.1.6,)</version>
      <scope>test</scope>
    </dependency>
    <!-- for LiftConsole -->
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-compiler</artifactId>
      <version>${scala.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>jlex</groupId>
      <artifactId>JLex-local</artifactId>
      <version>local</version>
    </dependency>
    <dependency>
      <groupId>cup</groupId>
      <artifactId>java-cup-11a</artifactId>
      <version>local</version>
    </dependency>
    <dependency>
      <groupId>cup</groupId>
      <artifactId>java-cup-11a-runtime</artifactId>
      <version>local</version>
    </dependency>
    <dependency>
      <groupId>jgrapht</groupId>
      <artifactId>jgrapht-jdk1.5</artifactId>
      <version>local</version>
    </dependency>
<!--     <dependency> -->
<!--       <groupId>antlr</groupId> -->
<!--       <artifactId>antlr</artifactId> -->
<!--       <version>local</version> -->
<!--     </dependency> -->
<!--     <dependency> -->
<!--       <groupId>asm</groupId> -->
<!--       <artifactId>asm-all-3.0</artifactId> -->
<!--       <version>local</version> -->
<!--     </dependency> -->
    <dependency>
      <groupId>icu4j</groupId>
      <artifactId>icu4j</artifactId>
      <version>local</version>
    </dependency> 
    <!-- Needed for schemagen -->
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-xjc</artifactId>
      <version>2.0.2</version>
    </dependency>
    <!-- Needed for schemagen -->
    <dependency>
      <groupId>javax.activation</groupId>
      <artifactId>activation</artifactId>
      <version>1.1</version>
    </dependency>
    <!-- Needed for schemagen -->
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jsr173_api</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>com.sun.xml</groupId>
      <artifactId>jaxb-xjc</artifactId>
      <version>2.0EA3</version>
    </dependency> 
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>3.3.1.GA</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-annotations</artifactId>
      <version>3.4.0.GA</version>
    </dependency>
    <dependency>
      <groupId>javassist</groupId>
      <artifactId>javassist</artifactId>
      <version>3.4.GA</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <version>1.5.2</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <version>3.4.0.GA</version>
      <exclusions>
	<exclusion>
	  <groupId>javax.transaction</groupId>
	  <artifactId>jta</artifactId>
	</exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>geronimo-spec</groupId>
      <artifactId>geronimo-spec-jta</artifactId>
      <version>1.0.1B-rc4</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.6</version>
    </dependency> 
    <dependency>
      <groupId>com.sdicons.jsontools</groupId>
      <artifactId>jsontools-core</artifactId>
      <version>1.7</version>
    </dependency> 
    <dependency>
      <groupId>com.rabbitmq</groupId>
      <artifactId>rabbitmq-client</artifactId>
      <version>1.3.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jettison</groupId>
      <artifactId>jettison</artifactId>
      <version>1.1</version>
    </dependency> 
    <dependency>
      <groupId>xpp3</groupId>
      <artifactId>xpp3_min</artifactId>
      <version>1.1.4c</version>
    </dependency> 
    <dependency>
      <groupId>xstream</groupId>
      <artifactId>xstream</artifactId>
      <version>1.3.1</version>
    </dependency> 
    <dependency>
      <groupId>com.eaio.uuid</groupId>
      <artifactId>uuid</artifactId>
      <version>3.1</version>
    </dependency>
  </dependencies>

  <build>
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <scalaVersion>${scala.version}</scalaVersion>
	  <displayCmd>true</displayCmd>
	  <launchers>
	    <!-- launcher>
	      <id>Desdemona</id>
	      <mainClass>com.biosimilarity.reflection.lib.othello.theDesdemona</mainClass -->
	      <!-- args are optional -->
	      <!-- args -->
	        <!-- replace _ with - when uncommenting  -->
		<!-- arg>__projectName</arg -->
		<!-- arg>${artifactId}</arg -->
		<!-- arg>__groupId</arg -->
		<!-- arg>${groupId}</arg -->
		<!-- arg>__storeName</arg -->
		<!-- arg>${artifactId}_development</arg -->
		<!-- arg>__srcLocation</arg -->
		<!-- arg>${basedir}/target/generated-sources</arg -->
	      <!-- /args -->
	      <!-- jvmArgs are optional -->
	      <!-- <jvmArgs> -->
<!-- 		<jvmArg>-Xmx128m</jvmArg> -->
<!-- 		<jvmArg>-Djava.library.path=...</jvmArg> -->
<!-- 	      </jvmArgs> -->
	    <!-- /launcher -->
	    <launcher>
	      <id>Bianca</id>
	      <mainClass>com.biosimilarity.reflection.lib.othello.theBianca</mainClass>
	      <!-- args are optional -->
	      <args>
		<arg>--projectName</arg>
		<arg>${artifactId}</arg>
		<arg>--groupId</arg>
		<arg>${groupId}</arg>
		<arg>--storeName</arg>
		<arg>${artifactId}_development</arg>
		<arg>--srcLocation</arg>
		<arg>${basedir}/target/generated-sources</arg>
	      </args>
	      <!-- jvmArgs are optional -->
	      <!-- <jvmArgs> -->
<!-- 		<jvmArg>-Xmx128m</jvmArg> -->
<!-- 		<jvmArg>-Djava.library.path=...</jvmArg> -->
<!-- 	      </jvmArgs> -->
	    </launcher>
	    <!-- you could define other launcher -->
	  </launchers>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
        <configuration>
          <contextPath>/</contextPath>
          <scanIntervalSeconds>5</scanIntervalSeconds>
        </configuration>
      </plugin>
      <plugin>
        <groupId>net.sf.alchim</groupId>
        <artifactId>yuicompressor-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>compress</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <nosuffix>true</nosuffix>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
          <downloadSources>true</downloadSources>
          <excludes>
            <exclude>org.scala-lang:scala-library</exclude>
          </excludes>
          <classpathContainers>
            <classpathContainer>ch.epfl.lamp.sdt.launching.SCALA_CONTAINER</classpathContainer>
          </classpathContainers>
          <projectnatures>
            <java.lang.String>ch.epfl.lamp.sdt.core.scalanature</java.lang.String>
            <java.lang.String>org.eclipse.jdt.core.javanature</java.lang.String>
          </projectnatures>
          <buildcommands>
            <java.lang.String>ch.epfl.lamp.sdt.core.scalabuilder</java.lang.String>
          </buildcommands>
        </configuration>
      </plugin>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-antrun-plugin</artifactId>
	<executions>
	  <execution>
	    <id>bnfc-generation</id>
	    <phase>generate-sources</phase>
	    <configuration>
	      <tasks>
		<property name="target.dir" value="${basedir}/target"/>
		<property name="scala.dir" value="${basedir}/src/main/scala"/>
		<property name="bnfc.dir" value="${basedir}/src/main/bnfc"/>
		<property name="bnfc.package" value="${groupId}"/>
		<property name="bnfc.artifact" value="${artifactId}"/>
		<!-- This is a little heavy handed. If the project has
		a lot of dependencies it is conceivable to introduce a
		conflict in the parser compilation using this
		approach. i don't understand how to just grab the
		necessary dependencies. -->
		<property name="compile_classpath"
			  refid="maven.compile.classpath"/>

                <ant antfile="${basedir}/src/main/bnfc/build.xml">
                  <target name="bnfc-generate"/>
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
	  <execution>
	    <id>bnfc-processing</id>
	    <phase>process-sources</phase>
	    <configuration>
	      <tasks>
		<property name="base.dir" value="${basedir}"/>
		<property name="target.dir" value="${basedir}/target"/>
		<property name="scala.dir" value="${basedir}/src/main/scala"/>
		<property name="bnfc.dir" value="${basedir}/src/main/bnfc"/>
		<property name="bnfc.package" value="${groupId}"/>
		<property name="bnfc.artifact" value="${artifactId}"/>
                <ant antfile="${basedir}/src/main/bnfc/build.xml">
                  <target name="bnfc-process"/>
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
	  <execution>
	    <id>bnfc-persistence</id>
	    <phase>process-classes</phase>
	    <configuration>
	      <tasks>
		<property name="base.dir" value="${basedir}"/>
		<property name="target.dir" value="${basedir}/target"/>
		<property name="scala.dir" value="${basedir}/src/main/scala"/>
		<property name="bnfc.dir" value="${basedir}/src/main/bnfc"/>
		<property name="bnfc.package" value="${groupId}"/>
		<property name="bnfc.artifact" value="${artifactId}"/>
		<property name="compile_classpath"
			  refid="maven.compile.classpath"/>
                <ant antfile="${basedir}/src/main/bnfc/build.xml">
                  <target name="bnfc-generate-persistence"/>
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
	  <execution>
	    <id>bnfc-doc</id>
	    <phase>generate-resources</phase>
	    <configuration>
	      <tasks>
		<property name="base.dir" value="${basedir}"/>
		<property name="target.dir" value="${basedir}/target"/>
		<property name="scala.dir" value="${basedir}/src/main/scala"/>
		<property name="bnfc.dir" value="${basedir}/src/main/bnfc"/>
		<property name="bnfc.package" value="${groupId}"/>
		<property name="bnfc.artifact" value="${artifactId}"/>
		<property name="compile_classpath"
			  refid="maven.compile.classpath"/>
                <ant antfile="${basedir}/src/main/bnfc/build.xml">
                  <target name="bnfc-generate-doc-xhtml"/>
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
	  <execution>
	    <id>bnfc-deploy-doc</id>
	    <phase>process-resources</phase>
	    <configuration>
	      <tasks>
		<property name="base.dir"
			  value="${basedir}"/>
		<property name="target.dir"
			  value="${basedir}/target"/>
		<property name="scala.dir"
			  value="${basedir}/src/main/scala"/>
		<property name="scala.dir"
			  value="${basedir}/src/main/webapp"/>
		<property name="bnfc.dir"
			  value="${basedir}/src/main/bnfc"/>
		<property name="bnfc.package"
			  value="${groupId}"/>
		<property name="bnfc.artifact"
			  value="${artifactId}"/>
		<property name="compile_classpath"
			  refid="maven.compile.classpath"/>
                <ant antfile="${basedir}/src/main/bnfc/build.xml">
                  <target name="bnfc-deploy-doc-xhtml"/>
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
	  <!-- <execution> -->
<!-- 	    <id>bnfc-xsd-processing</id> -->
<!-- 	    <phase>process-sources</phase> -->
<!-- 	    <configuration> -->
<!-- 	      <tasks> -->
<!-- 		<property name="target.dir" value="${basedir}/target"/> -->
<!-- 		<property name="scala.dir" value="${basedir}/src/main/scala"/> -->
<!-- 		<property name="bnfc.dir" value="${basedir}/src/main/bnfc"/> -->
<!-- 		<property name="bnfc.package" value="${groupId}"/> -->
<!-- 		<property name="bnfc.artifact" value="${artifactId}"/> -->
<!--                 <ant antfile="${basedir}/src/main/bnfc/build.xml"> -->
<!--                   <target name="bnfc-generate-xsd"/> -->
<!--                 </ant> -->
<!--               </tasks> -->
<!--             </configuration> -->
<!--             <goals> -->
<!--               <goal>run</goal> -->
<!--             </goals> -->
<!--           </execution> -->
	  <execution>
	    <id>bnfc-cleansing</id>
	    <phase>clean</phase>
	    <configuration>
	      <tasks>
		<property name="bnfc.dir" value="${basedir}/src/main/bnfc"/>
		<property name="bnfc.package" value="${groupId}"/>
		<property name="bnfc.artifact" value="${artifactId}"/>
                <ant antfile="${basedir}/src/main/bnfc/build.xml">
                  <target name="bnfc-clean"/>
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>hibernate3-maven-plugin</artifactId>
      <!-- version>2.0-alpha-2</version -->
      <version>2.2</version>
      <executions>
        <execution>
          <phase>process-classes</phase>
          <goals>
            <goal>hbm2ddl</goal>
          </goals>
        </execution>
      </executions>
      <configuration>
	<configurationfile>hibernate.cfg.xml</configurationfile>
	<persistenceunit>stockholm</persistenceunit>
	<propertyfile>stockholm.db.properties</propertyfile>
        <components>
          <component>
            <name>hbm2ddl</name>
            <implementation>annotationconfiguration</implementation>
          </component>
        </components>
        <componentProperties>
          <implementation>jpaconfiguration</implementation>
          <persistenceunit>stockholm</persistenceunit>
          <outputfilename>schema.ddl</outputfilename>
          <drop>false</drop>
          <create>true</create>
          <export>false</export>
          <format>true</format>
        </componentProperties>
      </configuration>
    </plugin>
    <plugin>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>sql-maven-plugin</artifactId>
      <version>1.1</version>

      <dependencies>
	<!-- specify the dependent jdbc driver here -->
	<dependency>
	  <groupId>mysql</groupId>
	  <artifactId>mysql-connector-java</artifactId>
	  <version>5.1.6</version>
	</dependency>
      </dependencies>

      <!-- common configuration shared by all executions -->
      <configuration>
	<driver>com.mysql.jdbc.Driver</driver>
	<url>jdbc:mysql://localhost/stockholm_bootstrap</url>
	<username>root</username>
	<password>phr3dnj0rg3</password>
      </configuration>

      <executions>
	<execution>
	  <id>mysql-drop-db</id>
	  <phase>package</phase>
	  <goals>
	    <goal>execute</goal>
	  </goals>
	  <configuration>
	    <autocommit>true</autocommit>
	    <sqlCommand>drop database ${artifactId}_production</sqlCommand>
	    <onError>continue</onError>
	  </configuration>
	</execution>
	<execution>
	  <id>mysql-create-db</id>
	  <phase>package</phase>
	  <goals>
	    <goal>execute</goal>
	  </goals>
	  <configuration>
	    <autocommit>true</autocommit>
	    <sqlCommand>create database ${artifactId}_production</sqlCommand>
	  </configuration>
	</execution>
	<execution>
	  <id>mysql-create-schema</id>
	  <phase>package</phase>
	  <goals>
	    <goal>execute</goal>
	  </goals>
	  <configuration>
	    <autocommit>true</autocommit>
	    <srcFiles>
	      <srcFile>${basedir}/target/hibernate3/sql/schema.ddl</srcFile>
	    </srcFiles>
	  </configuration>
	</execution>
      </executions> 
    </plugin>
    
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <configuration>
          <scalaVersion>${scala.version}</scalaVersion>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
</project>
