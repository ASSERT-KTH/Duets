<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>es.uvigo.esei.daa</groupId>
	<artifactId>example</artifactId>
	<packaging>war</packaging>
	<version>0.1.16</version>
	<name>DAA Example</name>

	<licenses>
		<license>
			<name>GNU GENERAL PUBLIC LICENSE, Version 3</name>
			<url>http://www.gnu.org/licenses/gpl.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<properties>
		<!-- General configuration -->
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<project.servers.directory>${project.basedir}/servers</project.servers.directory>
		<cargo.tomcat.start.skip>false</cargo.tomcat.start.skip>
		<cargo.tomcat.run.skip>true</cargo.tomcat.run.skip>
		<tomcat.version>8.5.27</tomcat.version>
		<jacoco.port>6300</jacoco.port>

		<!-- General dependencies -->
		<java.servlet.version>3.1.0</java.servlet.version>
		<jersey.version>2.25</jersey.version>
		<commons-dbcp2.version>2.2.0</commons-dbcp2.version>
		<slf4j-jdk14.version>1.7.21</slf4j-jdk14.version>

		<!-- Tests dependencies -->
		<junit.version>4.12</junit.version>
		<java-hamcrest.version>2.0.0.0</java-hamcrest.version>
		<easymock.version>3.5.1</easymock.version>
		<selenium-java.version>3.141.59</selenium-java.version>
		<spring-test.version>4.3.14.RELEASE</spring-test.version>
		<dbunit.version>2.5.1</dbunit.version>
		<spring-test-dbunit.version>1.3.0</spring-test-dbunit.version>
		<hsqldb.version>2.3.3</hsqldb.version>
		<mysql.version>5.1.45</mysql.version>
		<equalsverifier.version>2.4.2</equalsverifier.version>

		<!-- Plugins -->
		<maven-failsafe-plugin.version>2.20.1</maven-failsafe-plugin.version>
		<maven-surefire-plugin.version>2.20.1</maven-surefire-plugin.version>
		<maven-surefire-report-plugin.version>2.20.1</maven-surefire-report-plugin.version>
		<maven-war-plugin.version>3.2.0</maven-war-plugin.version>
		<jacoco-maven-plugin.version>0.8.0</jacoco-maven-plugin.version>
		<cargo-maven2-plugin.version>1.6.6</cargo-maven2-plugin.version>
		<hsqldb-maven-plugin.version>1.0.0</hsqldb-maven-plugin.version>
		<maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
		<fizzed-watcher-maven-plugin.version>1.0.6</fizzed-watcher-maven-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${java.servlet.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>${slf4j-jdk14.version}</version>
		</dependency>

		<!-- Test Scope -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>java-hamcrest</artifactId>
			<version>${java-hamcrest.version}</version>
		</dependency>

		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>${easymock.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.test-framework.providers</groupId>
			<artifactId>jersey-test-framework-provider-grizzly2</artifactId>
			<version>${jersey.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>${commons-dbcp2.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${selenium-java.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring-test.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring-test.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring-test.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>${dbunit.version}</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.github.springtestdbunit</groupId>
			<artifactId>spring-test-dbunit</artifactId>
			<version>${spring-test-dbunit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>${hsqldb.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>nl.jqno.equalsverifier</groupId>
			<artifactId>equalsverifier</artifactId>
			<version>${equalsverifier.version}</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>DAAExample</finalName>

		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<groupId>org.apache.maven.plugins</groupId>
				<version>${maven-war-plugin.version}</version>
				<configuration>
					<warName>${project.finalName}</warName>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<includes>
						<includes>**/UnitTestSuite.java</includes>
					</includes>
					<systemPropertyVariables>
						<webdriver.gecko.driver>${geckodriver.uncompressed.path}</webdriver.gecko.driver>
					</systemPropertyVariables>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-failsafe-plugin.version}</version>
				<configuration>
					<includes>
						<includes>**/IntegrationTestSuite.java</includes>
					</includes>
				</configuration>
				<executions>
					<execution>
						<id>default-integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven-surefire-report-plugin.version}</version>

				<executions>
					<execution>
						<id>test-report</id>
						<phase>test</phase>
						<goals>
							<goal>report-only</goal>
						</goals>
					</execution>
					<execution>
						<id>integration-test-report</id>
						<phase>integration-test</phase>
						<goals>
							<goal>report-only</goal>
							<goal>failsafe-report-only</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<configuration>
					<rules />
					<port>${jacoco.port}</port>
				</configuration>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>coverage-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-report</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.8,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>run</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>

			<build>
				<plugins>
					<plugin>
						<groupId>com.fizzed</groupId>
						<artifactId>fizzed-watcher-maven-plugin</artifactId>
						<version>${fizzed-watcher-maven-plugin.version}</version>
						<configuration>
							<skipTouch>true</skipTouch>
							<watches>
								<watch>
									<directory>src/main</directory>
								</watch>
							</watches>
							<goals>
								<goal>package</goal>
								<goal>cargo:redeploy</goal>
							</goals>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<version>${cargo-maven2-plugin.version}</version>
						<configuration>
							<container>
								<containerId>tomcat8x</containerId>
								<zipUrlInstaller>
									<url>https://repo1.maven.org/maven2/org/apache/tomcat/tomcat/${tomcat.version}/tomcat-${tomcat.version}.zip</url>
									<downloadDir>${project.servers.directory}/downloads</downloadDir>
									<extractDir>${project.servers.directory}/extracts</extractDir>
								</zipUrlInstaller>
								<dependencies>
									<dependency>
										<groupId>mysql</groupId>
										<artifactId>mysql-connector-java</artifactId>
									</dependency>
								</dependencies>
							</container>

							<configuration>
								<home>${project.build.directory}/catalina-base</home>
								<files>
									<copy>
										<file>tomcat/server.mysql.xml</file>
										<tofile>conf/server.xml</tofile>
									</copy>
								</files>
								<properties>
									<cargo.servlet.port>9080</cargo.servlet.port>
									<cargo.datasource.datasource.h2>
										cargo.datasource.jndi=jdbc/daaexample|
										cargo.datasource.driver=com.mysql.jdbc.Driver|
										cargo.datasource.url=jdbc:mysql://localhost/daaexample|
										cargo.datasource.username=daa|
										cargo.datasource.password=daa|
										cargo.datasource.maxActive=8|
										cargo.datasource.maxIdle=4|
										cargo.datasource.maxWait=10000
									</cargo.datasource.datasource.h2>
								</properties>
							</configuration>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
