<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>es.uvigo.esei.daa</groupId>
	<artifactId>example</artifactId>
	<packaging>war</packaging>
	<version>0.1.0-SNAPSHOT</version>
	<name>DAA Example</name>

	<licenses>
		<license>
			<name>GNU GENERAL PUBLIC LICENSE, Version 3</name>
			<url>http://www.gnu.org/licenses/gpl.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<properties>
		<!-- General configuration -->
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<project.servers.directory>${project.basedir}/servers</project.servers.directory>
		<cargo.tomcat.start.skip>false</cargo.tomcat.start.skip>
		<cargo.tomcat.run.skip>true</cargo.tomcat.run.skip>
		
		<!-- General dependencies -->
		<jersey.version>2.22.1</jersey.version>
		<java.servlet.version>3.1.0</java.servlet.version>
		<commons.dbcp.version>2.1.1</commons.dbcp.version>
		<slf4j-jdk14.version>1.7.16</slf4j-jdk14.version>
		
		<!-- Tests dependencies -->
		<junit.version>4.12</junit.version>
		<easymock.version>3.4</easymock.version>
		<selenium.java.version>2.49.1</selenium.java.version>
		<spring.test.version>4.2.4.RELEASE</spring.test.version>
		<dbunit.version>2.5.1</dbunit.version>
		<spring-test-dbunit.version>1.2.1</spring-test-dbunit.version>
		<hsqldb.version>2.3.3</hsqldb.version>
		<mysql.version>5.1.38</mysql.version>
		
		<!-- Plugins -->
		<surefire.version>2.19.1</surefire.version>
		<failsafe.version>2.19.1</failsafe.version>
		<maven.war.plugin.version>2.6</maven.war.plugin.version>
		<tomcat.maven.plugin.version>2.2</tomcat.maven.plugin.version>
		<jacoco.version>0.7.5.201505241946</jacoco.version>
		<cargo-maven2-plugin.version>1.4.18</cargo-maven2-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${java.servlet.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>${slf4j-jdk14.version}</version>
		</dependency>

		<!-- Test Scope -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>${easymock.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.glassfish.jersey.test-framework.providers</groupId>
			<artifactId>jersey-test-framework-provider-grizzly2</artifactId>
			<version>${jersey.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>${commons.dbcp.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${selenium.java.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.test.version}</version>
			<scope>test</scope>
		</dependency>
		
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.test.version}</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.test.version}</version>
            <scope>test</scope>
        </dependency>
        
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>${dbunit.version}</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>com.github.springtestdbunit</groupId>
			<artifactId>spring-test-dbunit</artifactId>
			<version>${spring-test-dbunit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>${hsqldb.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>DAAExample</finalName>
		
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<groupId>org.apache.maven.plugins</groupId>
				<version>${maven.war.plugin.version}</version>
				<configuration>
					<warName>${project.finalName}</warName>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire.version}</version>
				<configuration>
					<includes>
						<includes>**/UnitTestSuite.java</includes>
					</includes>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${failsafe.version}</version>
				<configuration>
					<includes>
						<includes>**/IntegrationTestSuite.java</includes>
					</includes>
				</configuration>
				<executions>
					<execution>
						<id>default-integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
				
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${surefire.version}</version>
				
				<executions>
					<execution>
						<id>test-report</id>
						<phase>test</phase>
						<goals>
							<goal>report-only</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<configuration>
					<rules/>
				</configuration>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>coverage-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	
	<profiles>
		<profile>
			<id>acceptance-tests-cargo</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${failsafe.version}</version>
						<configuration>
							<includes>
								<includes>**/IntegrationTestSuite.java</includes>
								<includes>**/AcceptanceTestSuite.java</includes>
							</includes>
						</configuration>
						<executions>
							<execution>
								<id>default-integration-tests</id>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-report-plugin</artifactId>
						<version>${surefire.version}</version>
						
						<executions>
							<execution>
								<id>integration-test-report</id>
								<phase>integration-test</phase>
								<goals>
									<goal>report-only</goal>
									<goal>failsafe-report-only</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.version}</version>
						<executions>
							<execution>
								<id>jacoco-agent</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<propertyName>jacoco.agent.itArgLine</propertyName>
								</configuration>
							</execution>
							<execution>
								<id>jacoco-report</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>dump</goal>
									<goal>report</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					
					<plugin>
					    <!-- current version -->
					    <groupId>fr.avianey.mojo</groupId>
					    <artifactId>hsqldb-maven-plugin</artifactId>
					    <version>1.0.0</version>
					
					    <!-- 
					        default value for in memory jdbc:hsqldb:hsql://localhost/xdb
					        override only values you want to change
					    -->
					    <configuration>
					        <driver>org.hsqldb.jdbc.JDBCDriver</driver>
					        <path>mem:daatestdb</path>
					        <address>localhost</address>
					        <name>daatestdb</name>
					        <username>sa</username>
					        <password></password>
					    </configuration>
					
					    <!-- call start and stop -->
					    <executions>
					        <execution>
					            <id>start-hsqldb</id>
					            <phase>pre-integration-test</phase>
					            <goals>
					                <goal>start</goal>
					            </goals>
					        </execution>
					        <execution>
					            <id>stop-hsqldb</id>
					            <phase>post-integration-test</phase>
					            <goals>
					                <goal>stop</goal>
					            </goals>
					        </execution>
					    </executions>
					</plugin>
					
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<version>${cargo-maven2-plugin.version}</version>
						<configuration>
							<container>
								<containerId>tomcat8x</containerId>
								<zipUrlInstaller>
									<url>http://ftp.cixug.es/apache/tomcat/tomcat-8/v8.0.32/bin/apache-tomcat-8.0.32.zip</url>
									<downloadDir>${project.servers.directory}/downloads</downloadDir>
									<extractDir>${project.servers.directory}/extracts</extractDir>
								</zipUrlInstaller>
								<dependencies>
									<dependency>
										<groupId>org.hsqldb</groupId>
										<artifactId>hsqldb</artifactId>
									</dependency>
								</dependencies>
							</container>
							
							<configuration>
								<home>${project.build.directory}/catalina-base</home>
								<properties>
									<cargo.jvmargs>${jacoco.agent.itArgLine},output=tcpserver,port=6300 -Drunmode=TEST</cargo.jvmargs>
									<cargo.servlet.port>9080</cargo.servlet.port>
									<cargo.datasource.datasource.h2>
						                cargo.datasource.jndi=jdbc/daaexample|
										cargo.datasource.driver=org.hsqldb.jdbc.JDBCDriver|
						                cargo.datasource.url=jdbc:hsqldb:hsql://localhost/daatestdb|
						                cargo.datasource.username=sa|
						                cargo.datasource.password=|
						                cargo.datasource.maxActive=8|
						                cargo.datasource.maxIdle=4|
						                cargo.datasource.maxWait=10000
									</cargo.datasource.datasource.h2>
								</properties>
							</configuration>
						</configuration>
						<executions>
							<execution>
								<id>start-tomcat</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
								<configuration>
									<skip>${cargo.tomcat.start.skip}</skip>
								</configuration>
							</execution>
							<execution>
								<id>run-tomcat</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<skip>${cargo.tomcat.run.skip}</skip>
								</configuration>
							</execution>
							
							<execution>
								<id>stop-tomcat</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>run-tomcat-mysql</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<version>${cargo-maven2-plugin.version}</version>
						<configuration>
							<container>
								<containerId>tomcat8x</containerId>
								<zipUrlInstaller>
									<url>http://ftp.cixug.es/apache/tomcat/tomcat-8/v8.0.32/bin/apache-tomcat-8.0.32.zip</url>
									<downloadDir>${project.servers.directory}/downloads</downloadDir>
									<extractDir>${project.servers.directory}/extracts</extractDir>
								</zipUrlInstaller>
								<dependencies>
									<dependency>
										<groupId>mysql</groupId>
										<artifactId>mysql-connector-java</artifactId>
									</dependency>
								</dependencies>
							</container>
							
							<configuration>
								<home>${project.build.directory}/catalina-base</home>
								<properties>
									<cargo.servlet.port>9080</cargo.servlet.port>
									<cargo.datasource.datasource.h2>
						                cargo.datasource.jndi=jdbc/daaexample|
										cargo.datasource.driver=com.mysql.jdbc.Driver|
						                cargo.datasource.url=jdbc:mysql://localhost/daaexample|
						                cargo.datasource.username=daa|
						                cargo.datasource.password=daa|
						                cargo.datasource.maxActive=8|
						                cargo.datasource.maxIdle=4|
						                cargo.datasource.maxWait=10000
									</cargo.datasource.datasource.h2>
								</properties>
							</configuration>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
