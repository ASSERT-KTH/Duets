<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.mikesamuel</groupId>
  <artifactId>json-sanitizer</artifactId>
  <packaging>jar</packaging>

  <version>1.0-SNAPSHOT</version>
  <name>json-sanitizer</name>
  <url>https://code.google.com/p/json-sanitizer</url>
  <description>
Given JSON-like content, converts it to valid JSON.

This can be attached at either end of a data-pipeline to help satisfy
Postel's principle:

    be conservative in what you do, be liberal in what you accept from
    others

Applied to JSON-like content from others, it will produce well-formed
JSON that should satisfy any parser you use.

Applied to your output before you send, it will coerce minor mistakes in
encoding and make it easier to embed your JSON in HTML and XML.
  </description>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <url>https://code.google.com/p/json-sanitizer/</url>
    <connection>scm:git:https://code.google.com/p/json-sanitizer/</connection>
  </scm>

  <developers>
    <developer>
      <id>mikesamuel</id>
      <name>Mike Samuel</name>
      <email>mikesamuel@gmail.com</email>
    </developer>
  </developers>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>[3.8.1,)</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>[2.0.1,)</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
</project>
