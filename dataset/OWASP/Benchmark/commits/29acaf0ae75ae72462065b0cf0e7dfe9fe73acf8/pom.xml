<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.owasp</groupId>
	<artifactId>benchmark</artifactId>
	<version>1.2</version>
	<packaging>war</packaging>
	<name>OWASP Benchmark Project</name>
	<url>https://www.owasp.org/index.php/Benchmark</url>
	<profiles>
		<profile>
			<id>crawler</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${version.exec.maven}</version>
						<executions>
							<execution>
								<phase>compile</phase>
								<goals>
									<goal>java</goal>
								</goals>
								<configuration>
									<mainClass>org.owasp.benchmark.tools.BenchmarkCrawler</mainClass>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>benchmarkscore</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${version.exec.maven}</version>
						<executions>
							<execution>
								<phase>validate</phase>
								<goals>
									<goal>java</goal>
								</goals>
								<configuration>
									<mainClass>org.owasp.benchmark.score.BenchmarkScore</mainClass>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>findsecbugs</id>
			<properties>
				<skipTests>true</skipTests>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>findbugs-maven-plugin</artifactId>
						<version>${version.findbugs.maven}</version>
						<executions>
							<execution>
								<phase>compile</phase>
								<goals>
									<goal>findbugs</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<effort>Max</effort>
							<threshold>Low</threshold>
							<failOnError>true</failOnError>
							<includeFilterFile>${basedir}/src/main/resources/findbugs-security-include.xml</includeFilterFile>
							<excludeFilterFile>${basedir}/src/main/resources/findbugs-security-exclude.xml</excludeFilterFile>
							<plugins>
								<plugin>
									<groupId>com.h3xstream.findsecbugs</groupId>
									<artifactId>findsecbugs-plugin</artifactId>
									<version>1.8.0</version>
								</plugin>
							</plugins>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>deploy</id>
			<properties>
				<skipTests>true</skipTests>
				<maven.war.webxml>${basedir}/src/config/web.xml</maven.war.webxml>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>ldap-server</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<ant target="run" antfile="${basedir}/src/config/build.xml">
											<reference torefid="maven.compile.classpath" refid="maven.compile.classpath" />
										</ant>
									</target>
								</configuration>
							</execution>
							<execution>
								<id>database-server</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<ant target="databaseServer" antfile="${basedir}/src/config/build.xml">
											<reference torefid="maven.compile.classpath" refid="maven.compile.classpath" />
										</ant>
									</target>
								</configuration>
							</execution>
							<execution>
								<id>database-init</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<ant target="databaseInit" antfile="${basedir}/src/config/build.xml">
											<reference torefid="maven.compile.classpath" refid="maven.compile.classpath" />
										</ant>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<configuration>
							<container>
								<timeout>300000</timeout>
								<containerId>tomcat${tomcat.major.version}x</containerId>
								<zipUrlInstaller>
									<url>${tomcat.url}</url>
								</zipUrlInstaller>
							</container>
							<properties>
								<cargo.jvmargs>-XX:MaxPermSize=6G -Xms1G –Xmx8G</cargo.jvmargs>
							</properties>
							<configuration>
								<configfiles>
									<configfile>
										<file>${basedir}/src/config/${runenv}/server.xml</file>
										<todir>conf</todir>
										<overwrite>true</overwrite>
									</configfile>
									<configfile>
										<file>${basedir}/src/config/${runenv}/context.xml</file>
										<todir>conf</todir>
										<overwrite>true</overwrite>
									</configfile>
								</configfiles>
								<properties>
									<cargo.servlet.port>8443</cargo.servlet.port>
									<cargo.protocol>https</cargo.protocol>
									<cargo.tomcat.connector.clientAuth>false</cargo.tomcat.connector.clientAuth>
									<cargo.tomcat.connector.sslProtocol>TLS</cargo.tomcat.connector.sslProtocol>
									<cargo.tomcat.connector.keystoreFile>../../../../.keystore</cargo.tomcat.connector.keystoreFile>
									<cargo.tomcat.connector.keystorePass>changeit</cargo.tomcat.connector.keystorePass>
									<cargo.tomcat.connector.keyAlias>tomcat</cargo.tomcat.connector.keyAlias>
									<cargo.tomcat.httpSecure>true</cargo.tomcat.httpSecure>
								</properties>
							</configuration>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>deploywcontrast</id>
			<properties>
				<skipTests>true</skipTests>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>ldap-server</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<ant target="run" antfile="${basedir}/src/config/build.xml">
											<reference torefid="maven.compile.classpath" refid="maven.compile.classpath" />
										</ant>
									</target>
								</configuration>
							</execution>
							<execution>
								<id>database-server</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<ant target="databaseServer" antfile="${basedir}/src/config/build.xml">
											<reference torefid="maven.compile.classpath" refid="maven.compile.classpath" />
										</ant>
									</target>
								</configuration>
							</execution>
							<execution>
								<id>database-init</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<ant target="databaseInit" antfile="${basedir}/src/config/build.xml">
											<reference torefid="maven.compile.classpath" refid="maven.compile.classpath" />
										</ant>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<configuration>
							<container>
								<timeout>300000</timeout>
								<containerId>tomcat${tomcat.major.version}x</containerId>
								<zipUrlInstaller>
									<url>${tomcat.url}</url>
								</zipUrlInstaller>
							</container>
							<properties>
								<cargo.jvmargs>-XX:MaxPermSize=6G -Xms1G –Xmx8G</cargo.jvmargs>
							</properties>
							<configuration>
								<configfiles>
									<configfile>
										<file>${basedir}/src/config/local/server.xml</file>
										<todir>conf</todir>
										<overwrite>true</overwrite>
									</configfile>
									<configfile>
										<file>${basedir}/src/config/local/context.xml</file>
										<todir>conf</todir>
										<overwrite>true</overwrite>
									</configfile>
								</configfiles>
								<properties>
									<cargo.jvmargs>
										-Xmx4G
										-javaagent:${basedir}/tools/Contrast/contrast.jar
										-Dcontrast.dir=${basedir}/tools/Contrast/working
										-Dcontrast.log.daily=true
										-Dcontrast.level=debug
										-Dcontrast.noteamserver.enable=true
										-Dcontrast.teamserver.suppress=true
										-Dcontrast.assess.threshold.entries=100000
									</cargo.jvmargs>
									<cargo.servlet.port>8443</cargo.servlet.port>
									<cargo.protocol>https</cargo.protocol>
									<cargo.tomcat.connector.clientAuth>false</cargo.tomcat.connector.clientAuth>
									<cargo.tomcat.connector.sslProtocol>TLS</cargo.tomcat.connector.sslProtocol>
									<cargo.tomcat.connector.keystoreFile>../../../../.keystore</cargo.tomcat.connector.keystoreFile>
									<cargo.tomcat.connector.keystorePass>changeit</cargo.tomcat.connector.keystorePass>
									<cargo.tomcat.connector.keyAlias>tomcat</cargo.tomcat.connector.keyAlias>
									<cargo.tomcat.httpSecure>true</cargo.tomcat.httpSecure>
								</properties>
							</configuration>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>time</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${version.exec.maven}</version>
						<executions>
							<execution>
								<phase>validate</phase>
								<goals>
									<goal>java</goal>
								</goals>
								<configuration>
									<mainClass>org.owasp.benchmark.score.WriteTime</mainClass>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

	<dependencies>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>7.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.6</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${version.slf4j}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${version.slf4j}</version>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>

<!--
		TODO: Need to add this to eliminate this error:
[WARNING] [talledLocalContainer] ERROR StatusLogger Log4j2 could not find a logging implementation. Please add log4j-core to the classpath. Using SimpleLogger to log to the console...

But it requires getting all the Log4j2 stuff configured right, and haven't done that yet.
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.11.0</version>
		</dependency>
-->

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.11</version>
		</dependency>

		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>

		<dependency>
			<groupId>org.apache.geronimo.ext.tomcat</groupId>
			<artifactId>jasper</artifactId>
			<version>7.0.39.2</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jdt.core.compiler</groupId>
			<artifactId>ecj</artifactId>
			<version>4.6.1</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>el-impl</artifactId>
			<version>2.2</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.2</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.7</version>
		</dependency>

	<!-- Kevin's fix for jar version conflicts. For future Benchmark 1.3
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${version.hibernate}</version>
			<exclusions>
				<exclusion>
					<groupId>asm</groupId>
					<artifactId>asm</artifactId>
				</exclusion>
				<exclusion>
					<groupId>asm</groupId>
					<artifactId>asm-attrs</artifactId>
				</exclusion>
				<exclusion>
					<groupId>cglib</groupId>
					<artifactId>cglib</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>asm</groupId>
			<artifactId>asm</artifactId>
			<version>3.3.1</version>
		</dependency>

		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>3.2.7</version>
		</dependency>
	 - END Kevin's fix for jar version conflicts -

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${version.hibernate}</version>
		</dependency>
-->
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<!-- <version>2.4.1</version> This is latest version, but requires Java 8 -->
			<!-- 2.3.2 seems to be the latest version downloadable from Central, even though it says 2.3.6 is available. -->
			<version>2.3.2</version>
		</dependency>

		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>1.1</version>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.10.19</version>
		</dependency>

		<dependency>
			<groupId>net.sourceforge.nekohtml</groupId>
			<artifactId>nekohtml</artifactId>
			<version>1.9.22</version>
		</dependency>

		<dependency>
			<groupId>org.apache.ant</groupId>
			<artifactId>ant-apache-regexp</artifactId>
			<version>1.10.5</version>
		</dependency>

		<dependency>
			<groupId>org.w3c.css</groupId>
			<artifactId>sac</artifactId>
			<version>1.3</version>
		</dependency>

		<dependency>
			<groupId>org.apache.sling</groupId>
			<artifactId>org.apache.sling.scripting.jsp</artifactId>
			<version>2.3.4</version>
		</dependency>

		<dependency>
			<groupId>xalan</groupId>
			<artifactId>xalan</artifactId>
			<version>2.7.2</version>
		</dependency>

		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
			<version>2.12.0</version>
		</dependency>

		<dependency>
			<groupId>xml-apis</groupId>
			<artifactId>xml-apis</artifactId>
			<version>1.4.01</version>
		</dependency>

		<dependency>
			<groupId>xom</groupId>
			<artifactId>xom</artifactId>
			<version>1.2.5</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${version.springframework}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${version.springframework}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${version.springframework}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${version.springframework}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${version.springframework}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${version.springframework}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${version.springframework}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${version.springframework}</version>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.5</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${version.jackson}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${version.jackson}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${version.jackson}</version>
		</dependency>

		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>jsr311-api</artifactId>
			<version>1.1.1</version>
		</dependency>

		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${version.jersey}</version>
		</dependency>

		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${version.jersey}</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>6.0.11.Final</version>
		</dependency>

		<dependency>
			<groupId>org.owasp.encoder</groupId>
			<artifactId>encoder</artifactId>
			<version>1.2.1</version>
		</dependency>

		<dependency>
			<groupId>org.owasp.esapi</groupId>
			<artifactId>esapi</artifactId>
			<version>2.1.0.1</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>25.1-jre</version>
		</dependency>

		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-core</artifactId>
			<version>2.5.18</version>
		</dependency>

		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.2</version>
		</dependency>

		<dependency>
			<groupId>org.jfree</groupId>
			<artifactId>jfreechart</artifactId>
			<!-- <version>1.5.0</version> This is latest version, but is an API breaking change. -->
			<version>1.0.19</version>
		</dependency>

		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20180130</version>
		</dependency>

		<dependency>
			<groupId>org.apache.directory.server</groupId>
			<artifactId>apacheds-all</artifactId>
<!-- Upgrading to 2.0.0-M24 is an API breaking change.

But it might be needed for Java 10, because I get this error, that I don't get with Java 8:

     [java] 	at org.apache.directory.server.core.DefaultDirectoryService.initialize(DefaultDirectoryService.java:1426)
     [java] 	at org.apache.directory.server.core.DefaultDirectoryService.startup(DefaultDirectoryService.java:907)
     [java] 	at org.owasp.benchmark.helpers.LDAPServer.initDirectoryService(LDAPServer.java:148)
     [java] 	at org.owasp.benchmark.helpers.LDAPServer.<init>(LDAPServer.java:42)
     [java] 	at org.owasp.benchmark.helpers.LDAPServer.main(LDAPServer.java:320)
     [java] Caused by: java.lang.NumberFormatException: multiple points
     [java] 	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1914)
-->
			<version>1.5.7</version>
			<exclusions>
				<!-- shared-ldap-schema module needs to be excluded to avoid multiple 
					schema resources on the classpath -->
				<exclusion>
					<groupId>org.apache.directory.shared</groupId>
					<artifactId>shared-ldap-schema</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.4</version>
        </dependency>

    </dependencies>

	<build>
		<finalName>benchmark</finalName>

		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>1.6.8</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<fork>true</fork>
					<meminitial>1000m</meminitial>
					<maxmem>2000m</maxmem>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.0</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<!-- Would like to upgrade to latest version but breaks the Servlet mapping and I don't know how to fifix it. Returns this error:
	Description: The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.
				<version>3.2.2</version> -->
				<version>2.6</version>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.5.0.1254</version>
			</plugin>

			<!-- FindBugs Static Analysis -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>${version.findbugs.maven}</version>
				<configuration>
					<effort>Max</effort>
					<threshold>Low</threshold>
					<failOnError>true</failOnError>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>${version.findbugs.maven}</version>
				<configuration>
					<argLine>-debug -maxHeap 2048 -include findbugsfilter.xml</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.11.0</version>
				<configuration>
					<linkXref>true</linkXref>
					<targetJdk>1.7</targetJdk>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<properties>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
		<failOnMissingWebXml>false</failOnMissingWebXml>
		<skipTests>false</skipTests>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.war.webxml>${basedir}/src/config/web.xml</maven.war.webxml>
		<runenv>local</runenv>
		<version.exec.maven>1.6.0</version.exec.maven>
		<version.findbugs.maven>3.0.5</version.findbugs.maven>
		<version.hibernate>3.6.10.Final</version.hibernate>
		<version.jackson>2.9.6</version.jackson>
		<version.jersey>1.19.4</version.jersey>
		<version.slf4j>1.7.25</version.slf4j>
		<!-- Spring Framework 4.2x is an API breaking change. Would like to upgrade to 4.3x actually -->
		<version.springframework>4.1.9.RELEASE</version.springframework>
		<!-- tomcat 8.5 is last version to support Java 7. Tomcat 9+ requires Java 8. -->
		<tomcat.major.version>8</tomcat.major.version>
		<version.tomcat>8.5.32</version.tomcat>
		<tomcat.url>http://archive.apache.org/dist/tomcat/tomcat-${tomcat.major.version}/v${version.tomcat}/bin/apache-tomcat-${version.tomcat}.zip</tomcat.url>
	</properties>
</project>
