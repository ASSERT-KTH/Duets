<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="com.googlecode.cqengine.ConcurrentIndexedCollectionTest" time="2.168" tests="450" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/local/openjdk-8/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.262-b10"/>
    <property name="animal.sniffer.skip" value="true"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/tmp/tmp787qfcbj/cqengine/code"/>
    <property name="maven.javadoc.skip" value="true"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="source.skip" value="true"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/tmp/tmp787qfcbj/cqengine/code"/>
    <property name="java.runtime.version" value="1.8.0_262-b10"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/local/openjdk-8/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="license.skip" value="true"/>
    <property name="maven.conf" value="/usr/share/maven/conf"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="maven.test.failure.ignore" value="true"/>
    <property name="os.version" value="4.15.0-109-generic"/>
    <property name="library.jansi.path" value="/usr/share/maven/lib/jansi-native"/>
    <property name="user.home" value="/home/jdbl"/>
    <property name="user.timezone" value="Etc/UTC"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="jdbl"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.6.0.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/local/openjdk-8/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher test -e --fail-never -ntp -Dmaven.test.failure.ignore=true -B -Dmaven.javadoc.skip=true -Drat.skip=true -Danimal.sniffer.skip=true -Dmaven.javadoc.skip=true -Dlicense.skip=true -Dsource.skip=true"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_262"/>
    <property name="java.ext.dirs" value="/usr/local/openjdk-8/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/local/openjdk-8/jre/lib/resources.jar:/usr/local/openjdk-8/jre/lib/rt.jar:/usr/local/openjdk-8/jre/lib/sunrsasign.jar:/usr/local/openjdk-8/jre/lib/jsse.jar:/usr/local/openjdk-8/jre/lib/jce.jar:/usr/local/openjdk-8/jre/lib/charsets.jar:/usr/local/openjdk-8/jre/lib/jfr.jar:/usr/local/openjdk-8/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="rat.skip" value="true"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="testAddAll_supportedNothing[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0"/>
  <testcase name="testAddAll_supportedNonePresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0"/>
  <testcase name="testAddAll_nullUnsupported[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0.001"/>
  <testcase name="testAddAll_nullCollectionReference[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0"/>
  <testcase name="testAdd_nullUnsupported[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionAddTester" time="0"/>
  <testcase name="testAdd_supportedNotPresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionAddTester" time="0"/>
  <testcase name="testClear[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionClearTester" time="0.001"/>
  <testcase name="testContainsAll_disjoint[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0"/>
  <testcase name="testContainsAll_nullNotAllowed[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0"/>
  <testcase name="testContainsAll_self[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0"/>
  <testcase name="testContainsAll_wrongType[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0"/>
  <testcase name="testContainsAll_empty[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0"/>
  <testcase name="testContainsAll_sameElements[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0"/>
  <testcase name="testContainsAll_partialOverlap[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0"/>
  <testcase name="testContains_no[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionContainsTester" time="0"/>
  <testcase name="testContains_nullNotContainedAndUnsupported[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionContainsTester" time="0"/>
  <testcase name="testContains_wrongType[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionContainsTester" time="0"/>
  <testcase name="testEquals_null[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionEqualsTester" time="0"/>
  <testcase name="testEquals_self[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionEqualsTester" time="0"/>
  <testcase name="testEquals_notACollection[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionEqualsTester" time="0"/>
  <testcase name="testForEachUnknownOrder[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionForEachTester" time="0"/>
  <testcase name="testIsEmpty_yes[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionIsEmptyTester" time="0"/>
  <testcase name="testIteratorNoSuchElementException[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionIteratorTester" time="0"/>
  <testcase name="testIterator[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionIteratorTester" time="0"/>
  <testcase name="testIterator_unknownOrderRemoveSupported[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionIteratorTester" time="0.01"/>
  <testcase name="testRemoveAll_containsWrongType[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0"/>
  <testcase name="testRemoveAll_nullCollectionReferenceEmptySubject[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0"/>
  <testcase name="testRemoveAll_emptyCollection[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0"/>
  <testcase name="testRemoveAll_containsNullNo[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0"/>
  <testcase name="testRemoveAll_nonePresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0"/>
  <testcase name="testRemoveIf_alwaysFalse[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRemoveIfTester" time="0"/>
  <testcase name="testRemove_wrongType[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRemoveTester" time="0.001"/>
  <testcase name="testRemove_nullNotSupported[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRemoveTester" time="0"/>
  <testcase name="testRemove_notPresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRemoveTester" time="0"/>
  <testcase name="testRetainAll_emptyPreviouslyEmpty[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0"/>
  <testcase name="testRetainAll_nullCollectionReferenceEmptySubject[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0"/>
  <testcase name="testRetainAll_nullSingletonPreviouslyEmpty[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0"/>
  <testcase name="testRetainAll_disjointPreviouslyEmpty[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0"/>
  <testcase name="testRetainAll_superset[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0"/>
  <testcase name="testRetainAll_sameElements[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0"/>
  <testcase name="testSize[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionSizeTester" time="0"/>
  <testcase name="testSpliteratorNotImmutable_CollectionAllowsRemove[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionSpliteratorTester" time="0"/>
  <testcase name="testSpliteratorUnknownOrder[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionSpliteratorTester" time="0"/>
  <testcase name="testSpliteratorNotImmutable_CollectionAllowsAdd[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionSpliteratorTester" time="0"/>
  <testcase name="testStreamToArrayUnknownOrder[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionStreamTester" time="0"/>
  <testcase name="testStreamCount[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionStreamTester" time="0.001"/>
  <testcase name="testToArray_emptyArray[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0"/>
  <testcase name="testToArray_emptyArrayOfWrongTypeForEmptyCollection[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0"/>
  <testcase name="testToArray_oversizedArray[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0"/>
  <testcase name="testToArray_emptyArrayOfObject[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0"/>
  <testcase name="testToArray_noArgs[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0"/>
  <testcase name="testToArray_isPlainObjectArray[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0"/>
  <testcase name="testToArray_rightSizedArrayOfObject[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0"/>
  <testcase name="testToArray_rightSizedArray[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0"/>
  <testcase name="testToString_size0[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionToStringTester" time="0"/>
  <testcase name="testToString_minimal[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionToStringTester" time="0"/>
  <testcase name="testAddAll_withDuplicates[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.SetAddAllTester" time="0"/>
  <testcase name="testHashCode[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.SetHashCodeTester" time="0"/>
  <testcase name="testEquals_list[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0"/>
  <testcase name="testEquals_otherSetWithSameElements[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0"/>
  <testcase name="testEquals_largerSet[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0"/>
  <testcase name="testAddAll_supportedNothing[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0"/>
  <testcase name="testAddAll_supportedNonePresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0.001"/>
  <testcase name="testAddAll_supportedSomePresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0"/>
  <testcase name="testAddAll_nullUnsupported[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0.002"/>
  <testcase name="testAddAll_nullCollectionReference[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0"/>
  <testcase name="testAdd_nullUnsupported[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionAddTester" time="0"/>
  <testcase name="testAdd_supportedNotPresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionAddTester" time="0"/>
  <testcase name="testClear[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionClearTester" time="0"/>
  <testcase name="testContainsAll_subset[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0"/>
  <testcase name="testContainsAll_disjoint[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0"/>
  <testcase name="testContainsAll_nullNotAllowed[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0"/>
  <testcase name="testContainsAll_self[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0"/>
  <testcase name="testContainsAll_wrongType[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0"/>
  <testcase name="testContainsAll_empty[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0"/>
  <testcase name="testContainsAll_sameElements[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0"/>
  <testcase name="testContainsAll_partialOverlap[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0"/>
  <testcase name="testContains_yes[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionContainsTester" time="0"/>
  <testcase name="testContains_no[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionContainsTester" time="0"/>
  <testcase name="testContains_nullNotContainedAndUnsupported[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionContainsTester" time="0"/>
  <testcase name="testContains_wrongType[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionContainsTester" time="0"/>
  <testcase name="testCreateWithNull_unsupported[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionCreationTester" time="0"/>
  <testcase name="testEquals_null[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionEqualsTester" time="0"/>
  <testcase name="testEquals_self[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionEqualsTester" time="0"/>
  <testcase name="testEquals_notACollection[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionEqualsTester" time="0"/>
  <testcase name="testForEachUnknownOrder[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionForEachTester" time="0"/>
  <testcase name="testIsEmpty_no[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionIsEmptyTester" time="0"/>
  <testcase name="testIteratorNoSuchElementException[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionIteratorTester" time="0"/>
  <testcase name="testIterator_removeAffectsBackingCollection[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionIteratorTester" time="0"/>
  <testcase name="testIterator[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionIteratorTester" time="0"/>
  <testcase name="testIterator_unknownOrderRemoveSupported[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionIteratorTester" time="0.005"/>
  <testcase name="testRemoveAll_containsWrongType[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0"/>
  <testcase name="testRemoveAll_allPresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0"/>
  <testcase name="testRemoveAll_somePresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0"/>
  <testcase name="testRemoveAll_nullCollectionReferenceNonEmptySubject[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0.001"/>
  <testcase name="testRemoveAll_emptyCollection[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0"/>
  <testcase name="testRemoveAll_containsNullNo[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0"/>
  <testcase name="testRemoveAll_nonePresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0"/>
  <testcase name="testRemoveAll_somePresentLargeCollectionToRemove[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0"/>
  <testcase name="testRemoveIf_alwaysFalse[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveIfTester" time="0"/>
  <testcase name="testRemoveIf_allPresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveIfTester" time="0"/>
  <testcase name="testRemoveIf_sometimesTrue[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveIfTester" time="0"/>
  <testcase name="testRemove_present[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveTester" time="0"/>
  <testcase name="testRemove_wrongType[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveTester" time="0"/>
  <testcase name="testRemove_nullNotSupported[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveTester" time="0"/>
  <testcase name="testRemove_notPresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveTester" time="0"/>
  <testcase name="testRetainAll_nullSingletonPreviouslyNonEmpty[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0"/>
  <testcase name="testRetainAll_disjointPreviouslyNonEmpty[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0"/>
  <testcase name="testRetainAll_nullCollectionReferenceNonEmptySubject[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0.001"/>
  <testcase name="testRetainAll_superset[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0"/>
  <testcase name="testRetainAll_containsDuplicatesSizeOne[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0"/>
  <testcase name="testRetainAll_emptyPreviouslyNonEmpty[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0"/>
  <testcase name="testRetainAll_sameElements[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0"/>
  <testcase name="testSize[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionSizeTester" time="0"/>
  <testcase name="testSpliteratorNotImmutable_CollectionAllowsRemove[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionSpliteratorTester" time="0"/>
  <testcase name="testSpliteratorUnknownOrder[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionSpliteratorTester" time="0"/>
  <testcase name="testSpliteratorNotImmutable_CollectionAllowsAdd[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionSpliteratorTester" time="0"/>
  <testcase name="testStreamToArrayUnknownOrder[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionStreamTester" time="0"/>
  <testcase name="testStreamCount[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionStreamTester" time="0"/>
  <testcase name="testToArray_emptyArray[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0"/>
  <testcase name="testToArray_oversizedArray[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.001"/>
  <testcase name="testToArray_emptyArrayOfObject[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0"/>
  <testcase name="testToArray_emptyArrayOfWrongTypeForNonEmptyCollection[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0"/>
  <testcase name="testToArray_noArgs[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0"/>
  <testcase name="testToArray_isPlainObjectArray[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0"/>
  <testcase name="testToArray_rightSizedArrayOfObject[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0"/>
  <testcase name="testToArray_rightSizedArray[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0"/>
  <testcase name="testToString_size1[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionToStringTester" time="0"/>
  <testcase name="testToString_minimal[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionToStringTester" time="0"/>
  <testcase name="testAddAll_supportedAllPresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.SetAddAllTester" time="0"/>
  <testcase name="testAddAll_withDuplicates[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.SetAddAllTester" time="0"/>
  <testcase name="testAddAll_supportedSomePresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.SetAddAllTester" time="0"/>
  <testcase name="testAdd_supportedPresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.SetAddTester" time="0"/>
  <testcase name="testHashCode[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.SetHashCodeTester" time="0"/>
  <testcase name="testEquals_list[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0.001"/>
  <testcase name="testEquals_otherSetWithSameElements[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0"/>
  <testcase name="testEquals_largerSet[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0"/>
  <testcase name="testEquals_otherContainsNull[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0"/>
  <testcase name="testEquals_smallerSet[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0"/>
  <testcase name="testEquals_otherSetWithDifferentElements[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0"/>
  <testcase name="testRemove_present[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.SetRemoveTester" time="0"/>
  <testcase name="testAddAll_supportedNothing[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0"/>
  <testcase name="testAddAll_supportedNonePresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0"/>
  <testcase name="testAddAll_supportedSomePresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0"/>
  <testcase name="testAddAll_nullUnsupported[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0"/>
  <testcase name="testAddAll_nullCollectionReference[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0"/>
  <testcase name="testAdd_nullUnsupported[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionAddTester" time="0"/>
  <testcase name="testAdd_supportedNotPresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionAddTester" time="0"/>
  <testcase name="testClear[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionClearTester" time="0"/>
  <testcase name="testContainsAll_subset[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0"/>
  <testcase name="testContainsAll_disjoint[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0"/>
  <testcase name="testContainsAll_nullNotAllowed[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0"/>
  <testcase name="testContainsAll_self[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0"/>
  <testcase name="testContainsAll_wrongType[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0"/>
  <testcase name="testContainsAll_empty[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0"/>
  <testcase name="testContainsAll_sameElements[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0"/>
  <testcase name="testContainsAll_partialOverlap[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0"/>
  <testcase name="testContains_yes[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionContainsTester" time="0"/>
  <testcase name="testContains_no[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionContainsTester" time="0"/>
  <testcase name="testContains_nullNotContainedAndUnsupported[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionContainsTester" time="0"/>
  <testcase name="testContains_wrongType[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionContainsTester" time="0.001"/>
  <testcase name="testCreateWithNull_unsupported[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionCreationTester" time="0"/>
  <testcase name="testEquals_null[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionEqualsTester" time="0"/>
  <testcase name="testEquals_self[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionEqualsTester" time="0"/>
  <testcase name="testEquals_notACollection[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionEqualsTester" time="0"/>
  <testcase name="testForEachUnknownOrder[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionForEachTester" time="0"/>
  <testcase name="testIsEmpty_no[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionIsEmptyTester" time="0"/>
  <testcase name="testIteratorNoSuchElementException[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionIteratorTester" time="0"/>
  <testcase name="testIterator_removeAffectsBackingCollection[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionIteratorTester" time="0"/>
  <testcase name="testIterator[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionIteratorTester" time="0"/>
  <testcase name="testIterator_unknownOrderRemoveSupported[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionIteratorTester" time="0.004"/>
  <testcase name="testRemoveAll_containsWrongType[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0"/>
  <testcase name="testRemoveAll_allPresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0"/>
  <testcase name="testRemoveAll_somePresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0"/>
  <testcase name="testRemoveAll_nullCollectionReferenceNonEmptySubject[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0"/>
  <testcase name="testRemoveAll_emptyCollection[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0"/>
  <testcase name="testRemoveAll_containsNullNo[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0"/>
  <testcase name="testRemoveAll_nonePresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0"/>
  <testcase name="testRemoveAll_somePresentLargeCollectionToRemove[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0"/>
  <testcase name="testRemoveIf_alwaysFalse[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveIfTester" time="0"/>
  <testcase name="testRemoveIf_allPresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveIfTester" time="0"/>
  <testcase name="testRemoveIf_sometimesTrue[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveIfTester" time="0"/>
  <testcase name="testRemove_present[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveTester" time="0"/>
  <testcase name="testRemove_wrongType[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveTester" time="0"/>
  <testcase name="testRemove_nullNotSupported[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveTester" time="0.001"/>
  <testcase name="testRemove_notPresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveTester" time="0"/>
  <testcase name="testRetainAll_nullSingletonPreviouslyNonEmpty[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0"/>
  <testcase name="testRetainAll_disjointPreviouslyNonEmpty[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0"/>
  <testcase name="testRetainAll_nullCollectionReferenceNonEmptySubject[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0"/>
  <testcase name="testRetainAll_superset[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0"/>
  <testcase name="testRetainAll_containsDuplicatesSizeSeveral[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0"/>
  <testcase name="testRetainAll_subset[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0"/>
  <testcase name="testRetainAll_emptyPreviouslyNonEmpty[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0"/>
  <testcase name="testRetainAll_sameElements[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0"/>
  <testcase name="testRetainAll_partialOverlap[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0"/>
  <testcase name="testSize[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionSizeTester" time="0"/>
  <testcase name="testSpliteratorNotImmutable_CollectionAllowsRemove[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionSpliteratorTester" time="0"/>
  <testcase name="testSpliteratorUnknownOrder[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionSpliteratorTester" time="0.001"/>
  <testcase name="testSpliteratorNotImmutable_CollectionAllowsAdd[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionSpliteratorTester" time="0.007"/>
  <testcase name="testStreamToArrayUnknownOrder[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionStreamTester" time="0"/>
  <testcase name="testStreamCount[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionStreamTester" time="0"/>
  <testcase name="testToArray_emptyArray[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0"/>
  <testcase name="testToArray_oversizedArray[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0"/>
  <testcase name="testToArray_emptyArrayOfObject[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0"/>
  <testcase name="testToArray_emptyArrayOfWrongTypeForNonEmptyCollection[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0"/>
  <testcase name="testToArray_noArgs[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0"/>
  <testcase name="testToArray_isPlainObjectArray[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0"/>
  <testcase name="testToArray_rightSizedArrayOfObject[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0"/>
  <testcase name="testToArray_rightSizedArray[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.001"/>
  <testcase name="testToString_minimal[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionToStringTester" time="0"/>
  <testcase name="testAddAll_supportedAllPresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetAddAllTester" time="0"/>
  <testcase name="testAddAll_withDuplicates[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetAddAllTester" time="0"/>
  <testcase name="testAddAll_supportedSomePresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetAddAllTester" time="0"/>
  <testcase name="testAdd_supportedPresent[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetAddTester" time="0"/>
  <testcase name="testCreateWithDuplicates_nonNullDuplicatesNotRejected[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetCreationTester" time="0"/>
  <testcase name="testHashCode[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetHashCodeTester" time="0"/>
  <testcase name="testEquals_list[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0"/>
  <testcase name="testEquals_otherSetWithSameElements[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0"/>
  <testcase name="testEquals_largerSet[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0"/>
  <testcase name="testEquals_otherContainsNull[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0"/>
  <testcase name="testEquals_smallerSet[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0"/>
  <testcase name="testEquals_otherSetWithDifferentElements[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0"/>
  <testcase name="testRemove_present[OnHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetRemoveTester" time="0"/>
  <testcase name="testAddAll_supportedNothing[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0.002"/>
  <testcase name="testAddAll_supportedNonePresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0.002"/>
  <testcase name="testAddAll_nullUnsupported[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0.002"/>
  <testcase name="testAddAll_nullCollectionReference[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0.002"/>
  <testcase name="testAdd_nullUnsupported[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionAddTester" time="0.002"/>
  <testcase name="testAdd_supportedNotPresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionAddTester" time="0.002"/>
  <testcase name="testClear[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionClearTester" time="0.002"/>
  <testcase name="testContainsAll_disjoint[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0.001"/>
  <testcase name="testContainsAll_nullNotAllowed[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0.001"/>
  <testcase name="testContainsAll_self[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0.002"/>
  <testcase name="testContainsAll_wrongType[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0.001"/>
  <testcase name="testContainsAll_empty[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0.001"/>
  <testcase name="testContainsAll_sameElements[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0.001"/>
  <testcase name="testContainsAll_partialOverlap[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0.002"/>
  <testcase name="testContains_no[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionContainsTester" time="0.001"/>
  <testcase name="testContains_nullNotContainedAndUnsupported[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionContainsTester" time="0.002"/>
  <testcase name="testContains_wrongType[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionContainsTester" time="0.001"/>
  <testcase name="testEquals_null[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionEqualsTester" time="0.001"/>
  <testcase name="testEquals_self[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionEqualsTester" time="0.008"/>
  <testcase name="testEquals_notACollection[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionEqualsTester" time="0.001"/>
  <testcase name="testForEachUnknownOrder[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionForEachTester" time="0.001"/>
  <testcase name="testIsEmpty_yes[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionIsEmptyTester" time="0.01"/>
  <testcase name="testIteratorNoSuchElementException[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionIteratorTester" time="0.001"/>
  <testcase name="testIterator[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionIteratorTester" time="0.001"/>
  <testcase name="testIterator_unknownOrderRemoveSupported[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionIteratorTester" time="0.466"/>
  <testcase name="testRemoveAll_containsWrongType[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0.002"/>
  <testcase name="testRemoveAll_nullCollectionReferenceEmptySubject[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0.002"/>
  <testcase name="testRemoveAll_emptyCollection[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0.001"/>
  <testcase name="testRemoveAll_containsNullNo[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0.002"/>
  <testcase name="testRemoveAll_nonePresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0.002"/>
  <testcase name="testRemoveIf_alwaysFalse[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRemoveIfTester" time="0.001"/>
  <testcase name="testRemove_wrongType[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRemoveTester" time="0.002"/>
  <testcase name="testRemove_nullNotSupported[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRemoveTester" time="0.001"/>
  <testcase name="testRemove_notPresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRemoveTester" time="0.002"/>
  <testcase name="testRetainAll_emptyPreviouslyEmpty[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0.001"/>
  <testcase name="testRetainAll_nullCollectionReferenceEmptySubject[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0.002"/>
  <testcase name="testRetainAll_nullSingletonPreviouslyEmpty[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0.001"/>
  <testcase name="testRetainAll_disjointPreviouslyEmpty[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0.002"/>
  <testcase name="testRetainAll_superset[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0.001"/>
  <testcase name="testRetainAll_sameElements[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0.002"/>
  <testcase name="testSize[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionSizeTester" time="0.001"/>
  <testcase name="testSpliteratorNotImmutable_CollectionAllowsRemove[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionSpliteratorTester" time="0.002"/>
  <testcase name="testSpliteratorUnknownOrder[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionSpliteratorTester" time="0.003"/>
  <testcase name="testSpliteratorNotImmutable_CollectionAllowsAdd[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionSpliteratorTester" time="0.004"/>
  <testcase name="testStreamToArrayUnknownOrder[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionStreamTester" time="0.003"/>
  <testcase name="testStreamCount[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionStreamTester" time="0"/>
  <testcase name="testToArray_emptyArray[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.002"/>
  <testcase name="testToArray_emptyArrayOfWrongTypeForEmptyCollection[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.001"/>
  <testcase name="testToArray_oversizedArray[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.002"/>
  <testcase name="testToArray_emptyArrayOfObject[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.001"/>
  <testcase name="testToArray_noArgs[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.001"/>
  <testcase name="testToArray_isPlainObjectArray[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.002"/>
  <testcase name="testToArray_rightSizedArrayOfObject[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.001"/>
  <testcase name="testToArray_rightSizedArray[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.002"/>
  <testcase name="testToString_size0[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionToStringTester" time="0.001"/>
  <testcase name="testToString_minimal[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.CollectionToStringTester" time="0"/>
  <testcase name="testAddAll_withDuplicates[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.SetAddAllTester" time="0.001"/>
  <testcase name="testHashCode[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.SetHashCodeTester" time="0.002"/>
  <testcase name="testEquals_list[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0.001"/>
  <testcase name="testEquals_otherSetWithSameElements[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0.002"/>
  <testcase name="testEquals_largerSet[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: zero]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0.001"/>
  <testcase name="testAddAll_supportedNothing[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0.002"/>
  <testcase name="testAddAll_supportedNonePresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0.002"/>
  <testcase name="testAddAll_supportedSomePresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0.002"/>
  <testcase name="testAddAll_nullUnsupported[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0.002"/>
  <testcase name="testAddAll_nullCollectionReference[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0.002"/>
  <testcase name="testAdd_nullUnsupported[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionAddTester" time="0.002"/>
  <testcase name="testAdd_supportedNotPresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionAddTester" time="0.002"/>
  <testcase name="testClear[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionClearTester" time="0.002"/>
  <testcase name="testContainsAll_subset[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0.002"/>
  <testcase name="testContainsAll_disjoint[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0.001"/>
  <testcase name="testContainsAll_nullNotAllowed[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0.002"/>
  <testcase name="testContainsAll_self[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0.002"/>
  <testcase name="testContainsAll_wrongType[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0.001"/>
  <testcase name="testContainsAll_empty[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0.002"/>
  <testcase name="testContainsAll_sameElements[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0.002"/>
  <testcase name="testContainsAll_partialOverlap[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0.001"/>
  <testcase name="testContains_yes[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionContainsTester" time="0.002"/>
  <testcase name="testContains_no[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionContainsTester" time="0.002"/>
  <testcase name="testContains_nullNotContainedAndUnsupported[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionContainsTester" time="0.001"/>
  <testcase name="testContains_wrongType[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionContainsTester" time="0.002"/>
  <testcase name="testCreateWithNull_unsupported[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionCreationTester" time="0.002"/>
  <testcase name="testEquals_null[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionEqualsTester" time="0.003"/>
  <testcase name="testEquals_self[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionEqualsTester" time="0.004"/>
  <testcase name="testEquals_notACollection[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionEqualsTester" time="0"/>
  <testcase name="testForEachUnknownOrder[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionForEachTester" time="0"/>
  <testcase name="testIsEmpty_no[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionIsEmptyTester" time="0"/>
  <testcase name="testIteratorNoSuchElementException[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionIteratorTester" time="0.004"/>
  <testcase name="testIterator_removeAffectsBackingCollection[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionIteratorTester" time="0"/>
  <testcase name="testIterator[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionIteratorTester" time="0.001"/>
  <testcase name="testIterator_unknownOrderRemoveSupported[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionIteratorTester" time="0.632"/>
  <testcase name="testRemoveAll_containsWrongType[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0.002"/>
  <testcase name="testRemoveAll_allPresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0.002"/>
  <testcase name="testRemoveAll_somePresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0.002"/>
  <testcase name="testRemoveAll_nullCollectionReferenceNonEmptySubject[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0.003"/>
  <testcase name="testRemoveAll_emptyCollection[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0.002"/>
  <testcase name="testRemoveAll_containsNullNo[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0"/>
  <testcase name="testRemoveAll_nonePresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0.002"/>
  <testcase name="testRemoveAll_somePresentLargeCollectionToRemove[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0.002"/>
  <testcase name="testRemoveIf_alwaysFalse[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveIfTester" time="0.005"/>
  <testcase name="testRemoveIf_allPresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveIfTester" time="0.002"/>
  <testcase name="testRemoveIf_sometimesTrue[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveIfTester" time="0.002"/>
  <testcase name="testRemove_present[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveTester" time="0.003"/>
  <testcase name="testRemove_wrongType[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveTester" time="0.002"/>
  <testcase name="testRemove_nullNotSupported[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveTester" time="0.001"/>
  <testcase name="testRemove_notPresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRemoveTester" time="0.001"/>
  <testcase name="testRetainAll_nullSingletonPreviouslyNonEmpty[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0.002"/>
  <testcase name="testRetainAll_disjointPreviouslyNonEmpty[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0.003"/>
  <testcase name="testRetainAll_nullCollectionReferenceNonEmptySubject[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0.001"/>
  <testcase name="testRetainAll_superset[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0.002"/>
  <testcase name="testRetainAll_containsDuplicatesSizeOne[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0.002"/>
  <testcase name="testRetainAll_emptyPreviouslyNonEmpty[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0.002"/>
  <testcase name="testRetainAll_sameElements[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0.002"/>
  <testcase name="testSize[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionSizeTester" time="0.001"/>
  <testcase name="testSpliteratorNotImmutable_CollectionAllowsRemove[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionSpliteratorTester" time="0.001"/>
  <testcase name="testSpliteratorUnknownOrder[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionSpliteratorTester" time="0.003"/>
  <testcase name="testSpliteratorNotImmutable_CollectionAllowsAdd[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionSpliteratorTester" time="0.001"/>
  <testcase name="testStreamToArrayUnknownOrder[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionStreamTester" time="0.001"/>
  <testcase name="testStreamCount[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionStreamTester" time="0.002"/>
  <testcase name="testToArray_emptyArray[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.002"/>
  <testcase name="testToArray_oversizedArray[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.001"/>
  <testcase name="testToArray_emptyArrayOfObject[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.002"/>
  <testcase name="testToArray_emptyArrayOfWrongTypeForNonEmptyCollection[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.002"/>
  <testcase name="testToArray_noArgs[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.001"/>
  <testcase name="testToArray_isPlainObjectArray[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.001"/>
  <testcase name="testToArray_rightSizedArrayOfObject[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.002"/>
  <testcase name="testToArray_rightSizedArray[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.002"/>
  <testcase name="testToString_size1[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionToStringTester" time="0.001"/>
  <testcase name="testToString_minimal[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.CollectionToStringTester" time="0.002"/>
  <testcase name="testAddAll_supportedAllPresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.SetAddAllTester" time="0.001"/>
  <testcase name="testAddAll_withDuplicates[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.SetAddAllTester" time="0.002"/>
  <testcase name="testAddAll_supportedSomePresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.SetAddAllTester" time="0.002"/>
  <testcase name="testAdd_supportedPresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.SetAddTester" time="0.002"/>
  <testcase name="testHashCode[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.SetHashCodeTester" time="0.005"/>
  <testcase name="testEquals_list[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0"/>
  <testcase name="testEquals_otherSetWithSameElements[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0.001"/>
  <testcase name="testEquals_largerSet[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0"/>
  <testcase name="testEquals_otherContainsNull[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0.002"/>
  <testcase name="testEquals_smallerSet[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0.002"/>
  <testcase name="testEquals_otherSetWithDifferentElements[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0.001"/>
  <testcase name="testRemove_present[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: one]]" classname="com.google.common.collect.testing.testers.SetRemoveTester" time="0.002"/>
  <testcase name="testAddAll_supportedNothing[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0.002"/>
  <testcase name="testAddAll_supportedNonePresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0.001"/>
  <testcase name="testAddAll_supportedSomePresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0.001"/>
  <testcase name="testAddAll_nullUnsupported[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0.002"/>
  <testcase name="testAddAll_nullCollectionReference[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionAddAllTester" time="0.002"/>
  <testcase name="testAdd_nullUnsupported[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionAddTester" time="0.002"/>
  <testcase name="testAdd_supportedNotPresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionAddTester" time="0.001"/>
  <testcase name="testClear[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionClearTester" time="0.002"/>
  <testcase name="testContainsAll_subset[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0.001"/>
  <testcase name="testContainsAll_disjoint[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0.002"/>
  <testcase name="testContainsAll_nullNotAllowed[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0.001"/>
  <testcase name="testContainsAll_self[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0.002"/>
  <testcase name="testContainsAll_wrongType[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0.002"/>
  <testcase name="testContainsAll_empty[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0.001"/>
  <testcase name="testContainsAll_sameElements[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0.002"/>
  <testcase name="testContainsAll_partialOverlap[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionContainsAllTester" time="0.002"/>
  <testcase name="testContains_yes[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionContainsTester" time="0.001"/>
  <testcase name="testContains_no[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionContainsTester" time="0.002"/>
  <testcase name="testContains_nullNotContainedAndUnsupported[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionContainsTester" time="0.004"/>
  <testcase name="testContains_wrongType[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionContainsTester" time="0"/>
  <testcase name="testCreateWithNull_unsupported[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionCreationTester" time="0.001"/>
  <testcase name="testEquals_null[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionEqualsTester" time="0.001"/>
  <testcase name="testEquals_self[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionEqualsTester" time="0.002"/>
  <testcase name="testEquals_notACollection[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionEqualsTester" time="0.001"/>
  <testcase name="testForEachUnknownOrder[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionForEachTester" time="0.002"/>
  <testcase name="testIsEmpty_no[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionIsEmptyTester" time="0.001"/>
  <testcase name="testIteratorNoSuchElementException[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionIteratorTester" time="0.001"/>
  <testcase name="testIterator_removeAffectsBackingCollection[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionIteratorTester" time="0.003"/>
  <testcase name="testIterator[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionIteratorTester" time="0.002"/>
  <testcase name="testIterator_unknownOrderRemoveSupported[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionIteratorTester" time="0.483"/>
  <testcase name="testRemoveAll_containsWrongType[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0.002"/>
  <testcase name="testRemoveAll_allPresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0.002"/>
  <testcase name="testRemoveAll_somePresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0.002"/>
  <testcase name="testRemoveAll_nullCollectionReferenceNonEmptySubject[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0.002"/>
  <testcase name="testRemoveAll_emptyCollection[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0.002"/>
  <testcase name="testRemoveAll_containsNullNo[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0.004"/>
  <testcase name="testRemoveAll_nonePresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0.001"/>
  <testcase name="testRemoveAll_somePresentLargeCollectionToRemove[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveAllTester" time="0.003"/>
  <testcase name="testRemoveIf_alwaysFalse[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveIfTester" time="0.002"/>
  <testcase name="testRemoveIf_allPresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveIfTester" time="0.002"/>
  <testcase name="testRemoveIf_sometimesTrue[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveIfTester" time="0.007"/>
  <testcase name="testRemove_present[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveTester" time="0"/>
  <testcase name="testRemove_wrongType[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveTester" time="0"/>
  <testcase name="testRemove_nullNotSupported[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveTester" time="0.001"/>
  <testcase name="testRemove_notPresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRemoveTester" time="0.003"/>
  <testcase name="testRetainAll_nullSingletonPreviouslyNonEmpty[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0.016"/>
  <testcase name="testRetainAll_disjointPreviouslyNonEmpty[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0.003"/>
  <testcase name="testRetainAll_nullCollectionReferenceNonEmptySubject[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0.002"/>
  <testcase name="testRetainAll_superset[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0.002"/>
  <testcase name="testRetainAll_containsDuplicatesSizeSeveral[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0.005"/>
  <testcase name="testRetainAll_subset[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0.003"/>
  <testcase name="testRetainAll_emptyPreviouslyNonEmpty[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0.003"/>
  <testcase name="testRetainAll_sameElements[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0.003"/>
  <testcase name="testRetainAll_partialOverlap[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionRetainAllTester" time="0.002"/>
  <testcase name="testSize[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionSizeTester" time="0.002"/>
  <testcase name="testSpliteratorNotImmutable_CollectionAllowsRemove[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionSpliteratorTester" time="0.002"/>
  <testcase name="testSpliteratorUnknownOrder[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionSpliteratorTester" time="0.003"/>
  <testcase name="testSpliteratorNotImmutable_CollectionAllowsAdd[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionSpliteratorTester" time="0.002"/>
  <testcase name="testStreamToArrayUnknownOrder[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionStreamTester" time="0.018"/>
  <testcase name="testStreamCount[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionStreamTester" time="0.002"/>
  <testcase name="testToArray_emptyArray[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.002"/>
  <testcase name="testToArray_oversizedArray[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.002"/>
  <testcase name="testToArray_emptyArrayOfObject[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.003"/>
  <testcase name="testToArray_emptyArrayOfWrongTypeForNonEmptyCollection[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0"/>
  <testcase name="testToArray_noArgs[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.003"/>
  <testcase name="testToArray_isPlainObjectArray[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.006"/>
  <testcase name="testToArray_rightSizedArrayOfObject[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.002"/>
  <testcase name="testToArray_rightSizedArray[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionToArrayTester" time="0.005"/>
  <testcase name="testToString_minimal[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.CollectionToStringTester" time="0"/>
  <testcase name="testAddAll_supportedAllPresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetAddAllTester" time="0.002"/>
  <testcase name="testAddAll_withDuplicates[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetAddAllTester" time="0"/>
  <testcase name="testAddAll_supportedSomePresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetAddAllTester" time="0.01"/>
  <testcase name="testAdd_supportedPresent[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetAddTester" time="0.003"/>
  <testcase name="testCreateWithDuplicates_nonNullDuplicatesNotRejected[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetCreationTester" time="0.003"/>
  <testcase name="testHashCode[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetHashCodeTester" time="0.002"/>
  <testcase name="testEquals_list[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0.002"/>
  <testcase name="testEquals_otherSetWithSameElements[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0.002"/>
  <testcase name="testEquals_largerSet[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0.002"/>
  <testcase name="testEquals_otherContainsNull[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0.002"/>
  <testcase name="testEquals_smallerSet[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0.002"/>
  <testcase name="testEquals_otherSetWithDifferentElements[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetEqualsTester" time="0.004"/>
  <testcase name="testRemove_present[OffHeap_ConcurrentIndexedCollectionAPICompliance [collection size: several]]" classname="com.google.common.collect.testing.testers.SetRemoveTester" time="0"/>
  <testcase name="testGetIndexes" classname="com.googlecode.cqengine.ConcurrentIndexedCollectionTest" time="0"/>
  <testcase name="testUpdate_IterableArguments" classname="com.googlecode.cqengine.ConcurrentIndexedCollectionTest" time="0.004"/>
  <testcase name="testRemoveIndex" classname="com.googlecode.cqengine.ConcurrentIndexedCollectionTest" time="0"/>
  <testcase name="testUpdate" classname="com.googlecode.cqengine.ConcurrentIndexedCollectionTest" time="0"/>
</testsuite>