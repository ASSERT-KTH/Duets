<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="JaCoCo Coverage Report"><sessioninfo id="70fed07379de-6ee1f35" start="1596129759735" dump="1596129760031"/><package name="org/joda/convert"><class name="org/joda/convert/EnumStringConverterFactory$EnumStringConverter" sourcefilename="EnumStringConverterFactory.java"><method name="&lt;init&gt;" desc="(Lorg/joda/convert/EnumStringConverterFactory;Ljava/lang/Class;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="(Ljava/lang/Enum;)Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="83"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$9" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="122"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="125"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="129"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$8" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="113"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="116"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/OptionalDoubleStringConverter" sourcefilename="OptionalDoubleStringConverter.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="53"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="62"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="75"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="6" covered="37"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="57" covered="42"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="10"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/ToStringConverter" sourcefilename="ToStringConverter.java"/><class name="org/joda/convert/JDKStringConverter$1" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$3" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$2" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="59"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$5" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="86"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$4" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="77"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$7" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="103"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="106"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$6" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="93"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="96"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$31" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="397"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="400"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="411"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="142"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$30" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="373"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="376"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="382"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/StringConvert$2" sourcefilename="StringConvert.java"><method name="&lt;init&gt;" desc="(Lorg/joda/convert/StringConvert;Lorg/joda/convert/ToStringConverter;Lorg/joda/convert/FromStringConverter;Ljava/lang/Class;)V" line="625"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="628"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="632"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="636"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="26"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/EnumStringConverterFactory" sourcefilename="EnumStringConverterFactory.java"><method name="findConverter" desc="(Ljava/lang/Class;)Lorg/joda/convert/StringConverter;" line="48"><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="60"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="25"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/StringConvert$1" sourcefilename="StringConvert.java"><method name="&lt;init&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="58"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="62"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="66"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/MethodsStringConverter" sourcefilename="MethodsStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;)V" line="50"><counter type="INSTRUCTION" missed="12" covered="77"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="78"><counter type="INSTRUCTION" missed="18" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="92"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="30" covered="106"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="4" covered="17"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/MethodConstructorStringConverter" sourcefilename="MethodConstructorStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/reflect/Constructor;)V" line="48"><counter type="INSTRUCTION" missed="24" covered="25"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="45" covered="10"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="84"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="69" covered="39"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="10" covered="7"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$24" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="303"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="306"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="310"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$25" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="316"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="319"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/ReflectionStringConverter" sourcefilename="ReflectionStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/reflect/Method;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="64"><counter type="INSTRUCTION" missed="18" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="78"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="75"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="3" covered="13"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$22" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="281"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="284"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="288"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$23" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="294"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="297"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/StringConvert" sourcefilename="StringConvert.java"><method name="create" desc="()Lorg/joda/convert/StringConvert;" line="103"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="122"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Z[Lorg/joda/convert/StringConverterFactory;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="313"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="72"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryRegisterGuava" desc="()V" line="225"><counter type="INSTRUCTION" missed="1" covered="36"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryRegisterJava8Optionals" desc="()V" line="248"><counter type="INSTRUCTION" missed="1" covered="51"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryRegisterTimeZone" desc="()V" line="278"><counter type="INSTRUCTION" missed="3" covered="29"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryRegister" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="306"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="324"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/String;" line="344"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="363"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isConvertible" desc="(Ljava/lang/Class;)Z" line="385"><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findConverter" desc="(Ljava/lang/Class;)Lorg/joda/convert/StringConverter;" line="408"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findConverterNoGenerics" desc="(Ljava/lang/Class;)Lorg/joda/convert/StringConverter;" line="430"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findTypedConverter" desc="(Ljava/lang/Class;)Lorg/joda/convert/TypedStringConverter;" line="458"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findTypedConverterNoGenerics" desc="(Ljava/lang/Class;)Lorg/joda/convert/TypedStringConverter;" line="492"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findConverterQuiet" desc="(Ljava/lang/Class;)Lorg/joda/convert/TypedStringConverter;" line="509"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAnyConverter" desc="(Ljava/lang/Class;)Lorg/joda/convert/TypedStringConverter;" line="543"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerFactory" desc="(Lorg/joda/convert/StringConverterFactory;)V" line="565"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="register" desc="(Ljava/lang/Class;Lorg/joda/convert/StringConverter;)V" line="589"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="register" desc="(Ljava/lang/Class;Lorg/joda/convert/ToStringConverter;Lorg/joda/convert/FromStringConverter;)V" line="622"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerMethods" desc="(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V" line="661"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerMethodConstructor" desc="(Ljava/lang/Class;Ljava/lang/String;)V" line="695"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findToStringMethod" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Method;" line="720"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findFromStringMethod" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Method;" line="740"><counter type="INSTRUCTION" missed="12" covered="36"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findFromStringConstructorByType" desc="(Ljava/lang/Class;)Ljava/lang/reflect/Constructor;" line="763"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="781"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="924"/><counter type="BRANCH" missed="2" covered="70"/><counter type="LINE" missed="8" covered="225"/><counter type="COMPLEXITY" missed="2" covered="61"/><counter type="METHOD" missed="0" covered="27"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/TypeStringConverter" sourcefilename="TypeStringConverter.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="(Ljava/lang/reflect/Type;)Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Type;" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="50"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="5"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$28" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="347"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="350"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="355"><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="14"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/OptionalIntStringConverter" sourcefilename="OptionalIntStringConverter.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="53"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="62"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="75"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="6" covered="37"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="57" covered="42"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="10"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$29" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="364"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="367"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/TypedStringConverter" sourcefilename="TypedStringConverter.java"/><class name="org/joda/convert/JDKStringConverter$26" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="325"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="329"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$27" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="338"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="341"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/RenameHandler" sourcefilename="RenameHandler.java"><method name="create" desc="()Lorg/joda/convert/RenameHandler;" line="75"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renamedType" desc="(Ljava/lang/String;Ljava/lang/Class;)V" line="95"><counter type="INSTRUCTION" missed="15" covered="25"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeRenames" desc="()Ljava/util/Map;" line="116"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lookupType" desc="(Ljava/lang/String;)Ljava/lang/Class;" line="127"><counter type="INSTRUCTION" missed="5" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadType" desc="(Ljava/lang/String;)Ljava/lang/Class;" line="146"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadPrimitiveType" desc="(Ljava/lang/String;Ljava/lang/ClassNotFoundException;)Ljava/lang/Class;" line="155"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renamedEnum" desc="(Ljava/lang/String;Ljava/lang/Enum;)V" line="187"><counter type="INSTRUCTION" missed="10" covered="40"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnumTypesWithRenames" desc="()Ljava/util/Set;" line="211"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEnumRenames" desc="(Ljava/lang/Class;)Ljava/util/Map;" line="223"><counter type="INSTRUCTION" missed="5" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lookupEnum" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;" line="243"><counter type="INSTRUCTION" missed="10" covered="24"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lock" desc="()V" line="265"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkNotLocked" desc="()V" line="271"><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="279"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="90" covered="224"/><counter type="BRANCH" missed="14" covered="38"/><counter type="LINE" missed="17" covered="63"/><counter type="COMPLEXITY" missed="19" covered="22"/><counter type="METHOD" missed="5" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$20" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="246"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="249"><counter type="INSTRUCTION" missed="12" covered="38"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="45"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$21" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="264"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="267"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="272"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/AnnotationStringConverterFactory" sourcefilename="AnnotationStringConverterFactory.java"><method name="findConverter" desc="(Ljava/lang/Class;)Lorg/joda/convert/StringConverter;" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAnnotatedConverter" desc="(Ljava/lang/Class;)Lorg/joda/convert/StringConverter;" line="63"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findToStringMethod" desc="(Ljava/lang/Class;)Ljava/lang/reflect/Method;" line="86"><counter type="INSTRUCTION" missed="13" covered="108"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="1" covered="21"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findFromStringConstructor" desc="(Ljava/lang/Class;Ljava/lang/reflect/Method;)Lorg/joda/convert/MethodConstructorStringConverter;" line="132"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findFromStringMethod" desc="(Ljava/lang/Class;Ljava/lang/reflect/Method;Z)Lorg/joda/convert/MethodsStringConverter;" line="158"><counter type="INSTRUCTION" missed="13" covered="66"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="2" covered="17"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findFromString" desc="(Ljava/lang/Class;)Ljava/lang/reflect/Method;" line="196"><counter type="INSTRUCTION" missed="13" covered="106"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eliminateEnumSubclass" desc="(Ljava/lang/Class;)Ljava/lang/Class;" line="232"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="242"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="45" covered="403"/><counter type="BRANCH" missed="7" covered="65"/><counter type="LINE" missed="6" covered="84"/><counter type="COMPLEXITY" missed="8" covered="37"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/StringConverter" sourcefilename="StringConverter.java"/><class name="org/joda/convert/OptionalLongStringConverter" sourcefilename="OptionalLongStringConverter.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="53"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="62"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="75"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="6" covered="37"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="57" covered="42"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="10"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$19" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="231"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="234"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$13" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="175"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="178"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$14" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="184"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="187"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$11" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="147"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="150"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="154"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$12" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="160"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="163"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$17" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="211"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="214"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$18" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="221"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="224"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$15" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="193"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="196"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter$16" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="202"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="205"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/FromStringFactory" sourcefilename="FromStringFactory.java"/><class name="org/joda/convert/JDKStringConverter$10" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="135"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="138"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/FromStringConverter" sourcefilename="FromStringConverter.java"/><class name="org/joda/convert/TypeTokenStringConverter" sourcefilename="TypeTokenStringConverter.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="(Lcom/google/common/reflect/TypeToken;)Ljava/lang/String;" line="38"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Lcom/google/common/reflect/TypeToken;" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="48"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="5"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/TypedAdapter" sourcefilename="TypedAdapter.java"><method name="adapt" desc="(Ljava/lang/Class;Lorg/joda/convert/StringConverter;)Lorg/joda/convert/TypedStringConverter;" line="30"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/joda/convert/StringConverter;Ljava/lang/Class;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="44"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" line="48"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="56"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/StringConverterFactory" sourcefilename="StringConverterFactory.java"/><class name="org/joda/convert/ToString" sourcefilename="ToString.java"/><class name="org/joda/convert/FromString" sourcefilename="FromString.java"/><class name="org/joda/convert/AbstractTypeStringConverter" sourcefilename="AbstractTypeStringConverter.java"><method name="&lt;init&gt;" desc="()V" line="78"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/lang/reflect/Type;" line="90"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doParse" desc="(Ljava/lang/String;)Ljava/lang/reflect/Type;" line="100"><counter type="INSTRUCTION" missed="157" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="split" desc="(Ljava/lang/String;)Ljava/util/List;" line="142"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wildExtendsType" desc="(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;" line="161"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wildSuperType" desc="(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;" line="166"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newParameterizedType" desc="(Ljava/lang/Class;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;" line="171"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="6" covered="82"/><counter type="LINE" missed="2" covered="22"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="270" covered="85"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="57" covered="24"/><counter type="COMPLEXITY" missed="20" covered="2"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/JDKStringConverter" sourcefilename="JDKStringConverter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Class;)V" line="438"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/lang/Class;" line="447"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="456"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="462"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printBase64Binary" desc="([B)Ljava/lang/String;" line="472"><counter type="INSTRUCTION" missed="0" covered="202"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseBase64Binary" desc="(Ljava/lang/String;)[B" line="502"><counter type="INSTRUCTION" missed="5" covered="137"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="23"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="350"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="706"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="87"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ToString.java"/><sourcefile name="MethodsStringConverter.java"><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="1" cb="1"/><line nr="52" mi="12" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="2"/><line nr="55" mi="0" ci="12" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="4"/><line nr="59" mi="0" ci="12" mb="0" cb="0"/><line nr="61" mi="0" ci="10" mb="0" cb="4"/><line nr="62" mi="0" ci="12" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="13" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="13" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="1" cb="1"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="8" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="106"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="4" covered="17"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EnumStringConverterFactory.java"><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="2"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="1" cb="3"/><line nr="52" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="45"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="TypeTokenStringConverter.java"><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="5"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OptionalDoubleStringConverter.java"><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="0"/><line nr="38" mi="0" ci="10" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="13" ci="0" mb="2" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="2" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="11" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="57" covered="42"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="10"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ToStringConverter.java"/><sourcefile name="FromStringConverter.java"/><sourcefile name="FromStringFactory.java"/><sourcefile name="AnnotationStringConverterFactory.java"><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="2"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="10" mb="0" cb="2"/><line nr="69" mi="0" ci="4" mb="0" cb="4"/><line nr="70" mi="0" ci="13" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="4"/><line nr="73" mi="0" ci="13" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="2"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="4"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="16" mb="0" cb="2"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="2"/><line nr="94" mi="0" ci="2" mb="0" cb="2"/><line nr="95" mi="0" ci="13" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="2"/><line nr="104" mi="0" ci="19" mb="0" cb="2"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="16" mb="0" cb="2"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="2"/><line nr="109" mi="0" ci="2" mb="1" cb="1"/><line nr="110" mi="13" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="9" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="9" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="2"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="7" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="2"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="2"/><line nr="162" mi="0" ci="8" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="2"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="2"/><line nr="172" mi="0" ci="19" mb="0" cb="2"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="1" cb="1"/><line nr="175" mi="0" ci="2" mb="1" cb="1"/><line nr="176" mi="8" ci="0" mb="0" cb="0"/><line nr="177" mi="5" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="8" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="16" mb="0" cb="2"/><line nr="199" mi="0" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="2"/><line nr="201" mi="0" ci="2" mb="0" cb="2"/><line nr="202" mi="0" ci="13" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="2"/><line nr="210" mi="0" ci="2" mb="1" cb="1"/><line nr="211" mi="13" ci="0" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="16" mb="0" cb="2"/><line nr="216" mi="0" ci="5" mb="1" cb="1"/><line nr="217" mi="0" ci="5" mb="0" cb="0"/><line nr="218" mi="0" ci="2" mb="1" cb="1"/><line nr="219" mi="0" ci="2" mb="0" cb="2"/><line nr="220" mi="0" ci="14" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="6" mb="1" cb="3"/><line nr="234" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="403"/><counter type="BRANCH" missed="7" covered="65"/><counter type="LINE" missed="6" covered="84"/><counter type="COMPLEXITY" missed="8" covered="37"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OptionalIntStringConverter.java"><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="0"/><line nr="38" mi="0" ci="10" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="13" ci="0" mb="2" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="2" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="11" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="57" covered="42"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="10"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MethodConstructorStringConverter.java"><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="13" mb="4" cb="4"/><line nr="50" mi="12" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="1" cb="1"/><line nr="53" mi="12" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="10" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="13" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="13" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="2" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="69" covered="39"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="10" covered="7"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypedAdapter.java"><line nr="30" mi="0" ci="3" mb="0" cb="2"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FromString.java"/><sourcefile name="StringConverterFactory.java"/><sourcefile name="RenameHandler.java"><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="8" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="1" cb="1"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="1" cb="1"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="12" mb="3" cb="3"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="6" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="1" cb="1"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="2"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="2" ci="7" mb="1" cb="1"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="2"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="2"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="2"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="2"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="2"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="2"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="2"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="2"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="2"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="1" cb="1"/><line nr="188" mi="5" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="1" cb="1"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="6" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="1" cb="1"/><line nr="197" mi="0" ci="11" mb="0" cb="0"/><line nr="198" mi="0" ci="6" mb="0" cb="0"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="211" mi="7" ci="0" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="1" cb="1"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><line nr="226" mi="0" ci="6" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="2"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="1" cb="1"/><line nr="244" mi="5" ci="0" mb="0" cb="0"/><line nr="246" mi="0" ci="2" mb="1" cb="1"/><line nr="247" mi="5" ci="0" mb="0" cb="0"/><line nr="249" mi="0" ci="4" mb="0" cb="0"/><line nr="250" mi="0" ci="5" mb="0" cb="0"/><line nr="251" mi="0" ci="2" mb="0" cb="2"/><line nr="252" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="3" ci="0" mb="0" cb="0"/><line nr="267" mi="1" ci="0" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="1" cb="1"/><line nr="272" mi="5" ci="0" mb="0" cb="0"/><line nr="274" mi="0" ci="1" mb="0" cb="0"/><line nr="279" mi="15" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="90" covered="224"/><counter type="BRANCH" missed="14" covered="38"/><counter type="LINE" missed="17" covered="63"/><counter type="COMPLEXITY" missed="19" covered="22"/><counter type="METHOD" missed="5" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypeStringConverter.java"><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="5"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypedStringConverter.java"/><sourcefile name="ReflectionStringConverter.java"><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="2"/><line nr="46" mi="0" ci="12" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="2"/><line nr="49" mi="0" ci="12" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="13" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="1" cb="1"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="75"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="3" covered="13"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringConverter.java"/><sourcefile name="OptionalLongStringConverter.java"><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="0"/><line nr="38" mi="0" ci="10" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="13" ci="0" mb="2" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="2" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="11" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="57" covered="42"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="10"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringConvert.java"><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="31" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="2"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="8" mb="0" cb="2"/><line nr="143" mi="0" ci="4" mb="0" cb="2"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="2"/><line nr="148" mi="0" ci="16" mb="0" cb="2"/><line nr="149" mi="0" ci="7" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="6" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="2"/><line nr="212" mi="0" ci="6" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="0" cb="2"/><line nr="216" mi="0" ci="5" mb="0" cb="0"/><line nr="218" mi="0" ci="1" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="7" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="7" mb="0" cb="0"/><line nr="238" mi="1" ci="0" mb="0" cb="0"/><line nr="240" mi="0" ci="1" mb="0" cb="0"/><line nr="241" mi="0" ci="1" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="250" mi="0" ci="2" mb="0" cb="0"/><line nr="251" mi="0" ci="2" mb="0" cb="0"/><line nr="252" mi="0" ci="4" mb="0" cb="0"/><line nr="253" mi="0" ci="7" mb="0" cb="0"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="2" mb="0" cb="0"/><line nr="258" mi="0" ci="4" mb="0" cb="0"/><line nr="259" mi="0" ci="7" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="7" mb="0" cb="0"/><line nr="267" mi="1" ci="0" mb="0" cb="0"/><line nr="269" mi="0" ci="1" mb="0" cb="0"/><line nr="270" mi="0" ci="1" mb="0" cb="0"/><line nr="278" mi="0" ci="6" mb="0" cb="0"/><line nr="280" mi="1" ci="0" mb="0" cb="0"/><line nr="282" mi="0" ci="1" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="7" mb="0" cb="0"/><line nr="287" mi="1" ci="0" mb="0" cb="0"/><line nr="289" mi="0" ci="1" mb="0" cb="0"/><line nr="291" mi="0" ci="3" mb="0" cb="0"/><line nr="292" mi="0" ci="7" mb="0" cb="0"/><line nr="294" mi="1" ci="0" mb="0" cb="0"/><line nr="296" mi="0" ci="1" mb="0" cb="0"/><line nr="297" mi="0" ci="1" mb="0" cb="0"/><line nr="306" mi="0" ci="4" mb="0" cb="0"/><line nr="307" mi="0" ci="5" mb="0" cb="0"/><line nr="308" mi="0" ci="1" mb="0" cb="0"/><line nr="310" mi="0" ci="1" mb="0" cb="0"/><line nr="311" mi="0" ci="1" mb="0" cb="0"/><line nr="324" mi="0" ci="2" mb="0" cb="2"/><line nr="325" mi="0" ci="2" mb="0" cb="0"/><line nr="327" mi="0" ci="3" mb="0" cb="0"/><line nr="328" mi="0" ci="4" mb="0" cb="0"/><line nr="329" mi="0" ci="4" mb="0" cb="0"/><line nr="344" mi="0" ci="2" mb="0" cb="2"/><line nr="345" mi="0" ci="2" mb="0" cb="0"/><line nr="347" mi="0" ci="4" mb="0" cb="0"/><line nr="348" mi="0" ci="4" mb="0" cb="0"/><line nr="363" mi="0" ci="2" mb="0" cb="2"/><line nr="364" mi="0" ci="2" mb="0" cb="0"/><line nr="366" mi="0" ci="4" mb="0" cb="0"/><line nr="367" mi="0" ci="5" mb="0" cb="0"/><line nr="385" mi="0" ci="10" mb="1" cb="3"/><line nr="386" mi="1" ci="0" mb="0" cb="0"/><line nr="387" mi="2" ci="0" mb="0" cb="0"/><line nr="408" mi="0" ci="4" mb="0" cb="0"/><line nr="430" mi="0" ci="4" mb="0" cb="0"/><line nr="458" mi="0" ci="4" mb="0" cb="0"/><line nr="459" mi="0" ci="2" mb="0" cb="2"/><line nr="460" mi="0" ci="12" mb="0" cb="0"/><line nr="462" mi="0" ci="2" mb="0" cb="0"/><line nr="492" mi="0" ci="4" mb="0" cb="0"/><line nr="493" mi="0" ci="2" mb="0" cb="2"/><line nr="494" mi="0" ci="12" mb="0" cb="0"/><line nr="496" mi="0" ci="2" mb="0" cb="0"/><line nr="509" mi="0" ci="2" mb="0" cb="2"/><line nr="510" mi="0" ci="5" mb="0" cb="0"/><line nr="512" mi="0" ci="6" mb="0" cb="0"/><line nr="513" mi="0" ci="3" mb="0" cb="2"/><line nr="514" mi="0" ci="2" mb="0" cb="0"/><line nr="516" mi="0" ci="2" mb="0" cb="2"/><line nr="518" mi="0" ci="4" mb="0" cb="0"/><line nr="519" mi="0" ci="1" mb="0" cb="0"/><line nr="520" mi="0" ci="6" mb="0" cb="0"/><line nr="521" mi="0" ci="2" mb="0" cb="0"/><line nr="522" mi="0" ci="1" mb="0" cb="0"/><line nr="523" mi="0" ci="2" mb="0" cb="2"/><line nr="524" mi="0" ci="6" mb="0" cb="0"/><line nr="525" mi="0" ci="2" mb="0" cb="0"/><line nr="527" mi="0" ci="6" mb="0" cb="0"/><line nr="529" mi="0" ci="2" mb="0" cb="0"/><line nr="543" mi="0" ci="11" mb="0" cb="2"/><line nr="544" mi="0" ci="4" mb="0" cb="0"/><line nr="545" mi="0" ci="2" mb="0" cb="2"/><line nr="546" mi="0" ci="4" mb="0" cb="0"/><line nr="548" mi="0" ci="1" mb="0" cb="0"/><line nr="549" mi="0" ci="2" mb="0" cb="0"/><line nr="565" mi="0" ci="2" mb="0" cb="2"/><line nr="566" mi="0" ci="5" mb="0" cb="0"/><line nr="568" mi="0" ci="3" mb="0" cb="2"/><line nr="569" mi="0" ci="5" mb="0" cb="0"/><line nr="571" mi="0" ci="5" mb="0" cb="0"/><line nr="572" mi="0" ci="1" mb="0" cb="0"/><line nr="589" mi="0" ci="2" mb="0" cb="2"/><line nr="590" mi="0" ci="5" mb="0" cb="0"/><line nr="592" mi="0" ci="2" mb="0" cb="2"/><line nr="593" mi="0" ci="5" mb="0" cb="0"/><line nr="595" mi="0" ci="3" mb="0" cb="2"/><line nr="596" mi="0" ci="5" mb="0" cb="0"/><line nr="598" mi="0" ci="8" mb="0" cb="0"/><line nr="599" mi="0" ci="1" mb="0" cb="0"/><line nr="622" mi="0" ci="4" mb="0" cb="4"/><line nr="623" mi="0" ci="5" mb="0" cb="0"/><line nr="625" mi="0" ci="25" mb="0" cb="0"/><line nr="628" mi="0" ci="5" mb="0" cb="0"/><line nr="632" mi="0" ci="6" mb="0" cb="0"/><line nr="636" mi="3" ci="0" mb="0" cb="0"/><line nr="639" mi="0" ci="1" mb="0" cb="0"/><line nr="661" mi="0" ci="2" mb="0" cb="2"/><line nr="662" mi="0" ci="5" mb="0" cb="0"/><line nr="664" mi="0" ci="4" mb="0" cb="4"/><line nr="665" mi="0" ci="5" mb="0" cb="0"/><line nr="667" mi="0" ci="3" mb="0" cb="2"/><line nr="668" mi="0" ci="5" mb="0" cb="0"/><line nr="670" mi="0" ci="5" mb="0" cb="0"/><line nr="671" mi="0" ci="5" mb="0" cb="0"/><line nr="672" mi="0" ci="8" mb="0" cb="0"/><line nr="673" mi="0" ci="6" mb="0" cb="0"/><line nr="674" mi="0" ci="1" mb="0" cb="0"/><line nr="695" mi="0" ci="2" mb="0" cb="2"/><line nr="696" mi="0" ci="5" mb="0" cb="0"/><line nr="698" mi="0" ci="2" mb="0" cb="2"/><line nr="699" mi="0" ci="5" mb="0" cb="0"/><line nr="701" mi="0" ci="3" mb="0" cb="2"/><line nr="702" mi="0" ci="5" mb="0" cb="0"/><line nr="704" mi="0" ci="5" mb="0" cb="0"/><line nr="705" mi="0" ci="4" mb="0" cb="0"/><line nr="706" mi="0" ci="7" mb="0" cb="0"/><line nr="707" mi="0" ci="6" mb="0" cb="0"/><line nr="708" mi="0" ci="1" mb="0" cb="0"/><line nr="720" mi="0" ci="6" mb="0" cb="0"/><line nr="721" mi="0" ci="1" mb="0" cb="0"/><line nr="722" mi="0" ci="5" mb="0" cb="0"/><line nr="723" mi="0" ci="1" mb="0" cb="0"/><line nr="724" mi="0" ci="4" mb="0" cb="2"/><line nr="725" mi="0" ci="12" mb="0" cb="0"/><line nr="727" mi="0" ci="2" mb="0" cb="0"/><line nr="740" mi="0" ci="10" mb="0" cb="0"/><line nr="741" mi="0" ci="1" mb="0" cb="0"/><line nr="743" mi="0" ci="10" mb="0" cb="0"/><line nr="744" mi="0" ci="1" mb="0" cb="0"/><line nr="745" mi="0" ci="6" mb="0" cb="0"/><line nr="746" mi="0" ci="1" mb="0" cb="0"/><line nr="747" mi="0" ci="1" mb="0" cb="0"/><line nr="748" mi="0" ci="4" mb="1" cb="1"/><line nr="749" mi="12" ci="0" mb="0" cb="0"/><line nr="751" mi="0" ci="2" mb="0" cb="0"/><line nr="763" mi="0" ci="9" mb="0" cb="0"/><line nr="764" mi="0" ci="1" mb="0" cb="0"/><line nr="766" mi="0" ci="9" mb="0" cb="0"/><line nr="767" mi="0" ci="1" mb="0" cb="0"/><line nr="768" mi="0" ci="6" mb="0" cb="0"/><line nr="781" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="953"/><counter type="BRANCH" missed="2" covered="70"/><counter type="LINE" missed="12" covered="227"/><counter type="COMPLEXITY" missed="6" covered="65"/><counter type="METHOD" missed="4" covered="31"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="JDKStringConverter.java"><line nr="42" mi="0" ci="127" mb="0" cb="0"/><line nr="47" mi="0" ci="14" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="14" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="14" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="14" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="14" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="14" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="14" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="14" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="14" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="14" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="2"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="7" mb="0" cb="0"/><line nr="147" mi="0" ci="14" mb="0" cb="0"/><line nr="150" mi="0" ci="7" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="14" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="2"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="2"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="14" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="14" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="14" mb="0" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="14" mb="0" cb="0"/><line nr="205" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="14" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="5" mb="0" cb="0"/><line nr="221" mi="0" ci="14" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="14" mb="0" cb="0"/><line nr="234" mi="0" ci="4" mb="0" cb="2"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="0" cb="2"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="5" mb="0" cb="0"/><line nr="246" mi="0" ci="14" mb="0" cb="0"/><line nr="249" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="1" cb="3"/><line nr="252" mi="0" ci="7" mb="0" cb="0"/><line nr="254" mi="0" ci="10" mb="0" cb="0"/><line nr="256" mi="0" ci="13" mb="0" cb="0"/><line nr="258" mi="12" ci="0" mb="0" cb="0"/><line nr="264" mi="0" ci="14" mb="0" cb="0"/><line nr="267" mi="0" ci="4" mb="0" cb="0"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><line nr="273" mi="0" ci="1" mb="0" cb="0"/><line nr="274" mi="0" ci="13" mb="0" cb="0"/><line nr="281" mi="0" ci="14" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="0"/><line nr="288" mi="0" ci="3" mb="0" cb="0"/><line nr="294" mi="0" ci="14" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="303" mi="0" ci="14" mb="0" cb="0"/><line nr="306" mi="0" ci="4" mb="0" cb="0"/><line nr="310" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="14" mb="0" cb="0"/><line nr="319" mi="0" ci="3" mb="0" cb="0"/><line nr="325" mi="0" ci="14" mb="0" cb="0"/><line nr="329" mi="0" ci="5" mb="0" cb="0"/><line nr="330" mi="0" ci="1" mb="0" cb="0"/><line nr="331" mi="0" ci="7" mb="0" cb="0"/><line nr="338" mi="0" ci="14" mb="0" cb="0"/><line nr="341" mi="0" ci="3" mb="0" cb="0"/><line nr="347" mi="0" ci="14" mb="0" cb="0"/><line nr="350" mi="0" ci="4" mb="0" cb="0"/><line nr="355" mi="0" ci="3" mb="0" cb="0"/><line nr="356" mi="1" ci="0" mb="0" cb="0"/><line nr="357" mi="5" ci="0" mb="0" cb="0"/><line nr="364" mi="0" ci="14" mb="0" cb="0"/><line nr="367" mi="0" ci="5" mb="0" cb="0"/><line nr="373" mi="0" ci="14" mb="0" cb="0"/><line nr="376" mi="0" ci="5" mb="0" cb="0"/><line nr="377" mi="0" ci="4" mb="0" cb="0"/><line nr="378" mi="0" ci="16" mb="0" cb="0"/><line nr="382" mi="0" ci="4" mb="0" cb="2"/><line nr="383" mi="0" ci="12" mb="0" cb="0"/><line nr="385" mi="0" ci="14" mb="0" cb="0"/><line nr="386" mi="0" ci="5" mb="0" cb="0"/><line nr="388" mi="0" ci="4" mb="0" cb="0"/><line nr="389" mi="0" ci="1" mb="0" cb="0"/><line nr="390" mi="0" ci="5" mb="0" cb="0"/><line nr="397" mi="0" ci="14" mb="0" cb="0"/><line nr="400" mi="0" ci="3" mb="0" cb="2"/><line nr="401" mi="0" ci="5" mb="0" cb="0"/><line nr="403" mi="0" ci="3" mb="0" cb="0"/><line nr="404" mi="0" ci="5" mb="0" cb="0"/><line nr="405" mi="0" ci="3" mb="0" cb="0"/><line nr="406" mi="0" ci="5" mb="0" cb="0"/><line nr="407" mi="0" ci="24" mb="0" cb="0"/><line nr="411" mi="0" ci="11" mb="1" cb="3"/><line nr="412" mi="0" ci="11" mb="2" cb="2"/><line nr="413" mi="0" ci="12" mb="0" cb="0"/><line nr="415" mi="0" ci="9" mb="0" cb="0"/><line nr="416" mi="0" ci="15" mb="0" cb="0"/><line nr="417" mi="0" ci="5" mb="0" cb="0"/><line nr="418" mi="0" ci="5" mb="0" cb="0"/><line nr="419" mi="0" ci="3" mb="0" cb="0"/><line nr="420" mi="0" ci="3" mb="0" cb="0"/><line nr="422" mi="0" ci="4" mb="0" cb="0"/><line nr="423" mi="0" ci="3" mb="0" cb="0"/><line nr="424" mi="0" ci="1" mb="0" cb="0"/><line nr="425" mi="0" ci="5" mb="0" cb="0"/><line nr="438" mi="0" ci="4" mb="0" cb="0"/><line nr="439" mi="0" ci="3" mb="0" cb="0"/><line nr="440" mi="0" ci="1" mb="0" cb="0"/><line nr="447" mi="0" ci="3" mb="0" cb="0"/><line nr="456" mi="0" ci="3" mb="0" cb="0"/><line nr="462" mi="0" ci="3" mb="0" cb="0"/><line nr="466" mi="0" ci="2" mb="0" cb="0"/><line nr="467" mi="0" ci="4" mb="0" cb="0"/><line nr="472" mi="0" ci="3" mb="0" cb="0"/><line nr="473" mi="0" ci="9" mb="0" cb="0"/><line nr="474" mi="0" ci="2" mb="0" cb="0"/><line nr="475" mi="0" ci="7" mb="0" cb="2"/><line nr="476" mi="0" ci="4" mb="0" cb="0"/><line nr="477" mi="0" ci="3" mb="0" cb="2"/><line nr="478" mi="0" ci="26" mb="0" cb="0"/><line nr="479" mi="0" ci="11" mb="0" cb="0"/><line nr="480" mi="0" ci="11" mb="0" cb="0"/><line nr="481" mi="0" ci="11" mb="0" cb="0"/><line nr="482" mi="0" ci="9" mb="0" cb="0"/><line nr="483" mi="0" ci="4" mb="0" cb="2"/><line nr="484" mi="0" ci="18" mb="0" cb="0"/><line nr="485" mi="0" ci="11" mb="0" cb="0"/><line nr="486" mi="0" ci="11" mb="0" cb="0"/><line nr="487" mi="0" ci="11" mb="0" cb="0"/><line nr="488" mi="0" ci="5" mb="0" cb="0"/><line nr="489" mi="0" ci="1" mb="0" cb="0"/><line nr="490" mi="0" ci="8" mb="0" cb="0"/><line nr="491" mi="0" ci="11" mb="0" cb="0"/><line nr="492" mi="0" ci="11" mb="0" cb="0"/><line nr="493" mi="0" ci="5" mb="0" cb="0"/><line nr="494" mi="0" ci="5" mb="0" cb="0"/><line nr="497" mi="0" ci="5" mb="0" cb="0"/><line nr="502" mi="0" ci="5" mb="1" cb="1"/><line nr="503" mi="5" ci="0" mb="0" cb="0"/><line nr="506" mi="0" ci="7" mb="0" cb="0"/><line nr="507" mi="0" ci="3" mb="0" cb="0"/><line nr="508" mi="0" ci="3" mb="0" cb="0"/><line nr="509" mi="0" ci="2" mb="0" cb="0"/><line nr="510" mi="0" ci="6" mb="0" cb="2"/><line nr="511" mi="0" ci="15" mb="0" cb="0"/><line nr="512" mi="0" ci="11" mb="0" cb="0"/><line nr="513" mi="0" ci="11" mb="0" cb="0"/><line nr="514" mi="0" ci="5" mb="0" cb="0"/><line nr="515" mi="0" ci="10" mb="0" cb="0"/><line nr="516" mi="0" ci="10" mb="0" cb="0"/><line nr="517" mi="0" ci="8" mb="0" cb="0"/><line nr="518" mi="0" ci="1" mb="0" cb="0"/><line nr="520" mi="0" ci="4" mb="0" cb="2"/><line nr="521" mi="0" ci="5" mb="0" cb="0"/><line nr="522" mi="0" ci="8" mb="0" cb="0"/><line nr="523" mi="0" ci="2" mb="0" cb="0"/><line nr="524" mi="0" ci="4" mb="0" cb="2"/><line nr="525" mi="0" ci="5" mb="0" cb="0"/><line nr="526" mi="0" ci="8" mb="0" cb="0"/><line nr="527" mi="0" ci="2" mb="0" cb="0"/><line nr="529" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="1380"/><counter type="BRANCH" missed="5" covered="35"/><counter type="LINE" missed="4" covered="172"/><counter type="COMPLEXITY" missed="5" covered="93"/><counter type="METHOD" missed="0" covered="77"/><counter type="CLASS" missed="0" covered="32"/></sourcefile><sourcefile name="AbstractTypeStringConverter.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="14" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="10" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="10" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="2" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="2" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="7" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="10" ci="0" mb="2" cb="0"/><line nr="116" mi="4" ci="0" mb="2" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="2" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="5" ci="0" mb="2" cb="0"/><line nr="123" mi="4" ci="0" mb="0" cb="0"/><line nr="124" mi="4" ci="0" mb="2" cb="0"/><line nr="125" mi="8" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="128" mi="9" ci="0" mb="4" cb="0"/><line nr="129" mi="8" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="137" mi="9" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="8" ci="0" mb="2" cb="0"/><line nr="146" mi="7" ci="0" mb="4" cb="0"/><line nr="147" mi="8" ci="0" mb="0" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="5" ci="0" mb="2" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="2" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="7" ci="0" mb="0" cb="0"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="11" ci="0" mb="0" cb="0"/><line nr="166" mi="11" ci="0" mb="0" cb="0"/><line nr="171" mi="15" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="270" covered="85"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="57" covered="24"/><counter type="COMPLEXITY" missed="20" covered="2"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="780" covered="3481"/><counter type="BRANCH" missed="79" covered="237"/><counter type="LINE" missed="156" covered="665"/><counter type="COMPLEXITY" missed="86" covered="262"/><counter type="METHOD" missed="28" covered="161"/><counter type="CLASS" missed="0" covered="49"/></package><package name="org/joda/convert/factory"><class name="org/joda/convert/factory/ByteObjectArrayStringConverterFactory" sourcefilename="ByteObjectArrayStringConverterFactory.java"><method name="findConverter" desc="(Ljava/lang/Class;)Lorg/joda/convert/StringConverter;" line="57"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="66"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/ByteObjectArrayStringConverterFactory$ByteArrayStringConverter" sourcefilename="ByteObjectArrayStringConverterFactory.java"><method name="&lt;clinit&gt;" desc="()V" line="70"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/NumericArrayStringConverterFactory$FloatArrayStringConverter$1" sourcefilename="NumericArrayStringConverterFactory.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="229"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="([F)Ljava/lang/String;" line="232"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)[F" line="244"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="256"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="74"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/BooleanObjectArrayStringConverterFactory" sourcefilename="BooleanObjectArrayStringConverterFactory.java"><method name="findConverter" desc="(Ljava/lang/Class;)Lorg/joda/convert/StringConverter;" line="57"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="66"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/NumericObjectArrayStringConverterFactory$IntArrayStringConverter$1" sourcefilename="NumericObjectArrayStringConverterFactory.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="126"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="([Ljava/lang/Integer;)Ljava/lang/String;" line="129"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)[Ljava/lang/Integer;" line="141"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="155"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="93"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/NumericArrayStringConverterFactory$DoubleArrayStringConverter" sourcefilename="NumericArrayStringConverterFactory.java"><method name="&lt;clinit&gt;" desc="()V" line="193"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/BooleanObjectArrayStringConverterFactory$BooleanArrayStringConverter$1" sourcefilename="BooleanObjectArrayStringConverterFactory.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="71"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="([Ljava/lang/Boolean;)Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)[Ljava/lang/Boolean;" line="85"><counter type="INSTRUCTION" missed="5" covered="47"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="105"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="92"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/NumericArrayStringConverterFactory$IntArrayStringConverter$1" sourcefilename="NumericArrayStringConverterFactory.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="124"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="([I)Ljava/lang/String;" line="127"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)[I" line="139"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="151"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="74"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/BooleanObjectArrayStringConverterFactory$BooleanArrayStringConverter" sourcefilename="BooleanObjectArrayStringConverterFactory.java"><method name="&lt;clinit&gt;" desc="()V" line="70"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/NumericArrayStringConverterFactory$DoubleArrayStringConverter$1" sourcefilename="NumericArrayStringConverterFactory.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="194"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="([D)Ljava/lang/String;" line="197"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)[D" line="209"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="221"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="74"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/ByteObjectArrayStringConverterFactory$ByteArrayStringConverter$1" sourcefilename="ByteObjectArrayStringConverterFactory.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="71"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="([Ljava/lang/Byte;)Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)[Ljava/lang/Byte;" line="90"><counter type="INSTRUCTION" missed="5" covered="55"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="109"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="115"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="2" covered="20"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/NumericArrayStringConverterFactory$IntArrayStringConverter" sourcefilename="NumericArrayStringConverterFactory.java"><method name="&lt;clinit&gt;" desc="()V" line="123"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/NumericObjectArrayStringConverterFactory$ShortArrayStringConverter$1" sourcefilename="NumericObjectArrayStringConverterFactory.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="163"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="([Ljava/lang/Short;)Ljava/lang/String;" line="166"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)[Ljava/lang/Short;" line="178"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="192"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="93"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/NumericObjectArrayStringConverterFactory" sourcefilename="NumericObjectArrayStringConverterFactory.java"><method name="findConverter" desc="(Ljava/lang/Class;)Lorg/joda/convert/StringConverter;" line="61"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="84"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="38"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/NumericArrayStringConverterFactory$LongArrayStringConverter" sourcefilename="NumericArrayStringConverterFactory.java"><method name="&lt;clinit&gt;" desc="()V" line="88"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/NumericObjectArrayStringConverterFactory$DoubleArrayStringConverter$1" sourcefilename="NumericObjectArrayStringConverterFactory.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="200"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="([Ljava/lang/Double;)Ljava/lang/String;" line="203"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)[Ljava/lang/Double;" line="215"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="229"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="93"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/BooleanArrayStringConverterFactory$BooleanArrayStringConverter$1" sourcefilename="BooleanArrayStringConverterFactory.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="71"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="([Z)Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)[Z" line="85"><counter type="INSTRUCTION" missed="5" covered="39"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="103"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="77"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="2" covered="17"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/NumericObjectArrayStringConverterFactory$FloatArrayStringConverter$1" sourcefilename="NumericObjectArrayStringConverterFactory.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="237"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="([Ljava/lang/Float;)Ljava/lang/String;" line="240"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)[Ljava/lang/Float;" line="252"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="266"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="93"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/NumericObjectArrayStringConverterFactory$IntArrayStringConverter" sourcefilename="NumericObjectArrayStringConverterFactory.java"><method name="&lt;clinit&gt;" desc="()V" line="125"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/NumericObjectArrayStringConverterFactory$LongArrayStringConverter" sourcefilename="NumericObjectArrayStringConverterFactory.java"><method name="&lt;clinit&gt;" desc="()V" line="88"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/NumericObjectArrayStringConverterFactory$LongArrayStringConverter$1" sourcefilename="NumericObjectArrayStringConverterFactory.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="89"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="([Ljava/lang/Long;)Ljava/lang/String;" line="92"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)[Ljava/lang/Long;" line="104"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="118"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="93"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/CharObjectArrayStringConverterFactory$CharecterArrayStringConverter$1" sourcefilename="CharObjectArrayStringConverterFactory.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="79"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="([Ljava/lang/Character;)Ljava/lang/String;" line="82"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)[Ljava/lang/Character;" line="102"><counter type="INSTRUCTION" missed="5" covered="89"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="129"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="145"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="2" covered="28"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/NumericObjectArrayStringConverterFactory$FloatArrayStringConverter" sourcefilename="NumericObjectArrayStringConverterFactory.java"><method name="&lt;clinit&gt;" desc="()V" line="236"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/BooleanArrayStringConverterFactory" sourcefilename="BooleanArrayStringConverterFactory.java"><method name="findConverter" desc="(Ljava/lang/Class;)Lorg/joda/convert/StringConverter;" line="57"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="66"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/CharObjectArrayStringConverterFactory$CharecterArrayStringConverter" sourcefilename="CharObjectArrayStringConverterFactory.java"><method name="&lt;clinit&gt;" desc="()V" line="78"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/NumericArrayStringConverterFactory$FloatArrayStringConverter" sourcefilename="NumericArrayStringConverterFactory.java"><method name="&lt;clinit&gt;" desc="()V" line="228"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/NumericArrayStringConverterFactory$LongArrayStringConverter$1" sourcefilename="NumericArrayStringConverterFactory.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="89"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="([J)Ljava/lang/String;" line="92"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)[J" line="104"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="116"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="74"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/NumericObjectArrayStringConverterFactory$DoubleArrayStringConverter" sourcefilename="NumericObjectArrayStringConverterFactory.java"><method name="&lt;clinit&gt;" desc="()V" line="199"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/NumericObjectArrayStringConverterFactory$ShortArrayStringConverter" sourcefilename="NumericObjectArrayStringConverterFactory.java"><method name="&lt;clinit&gt;" desc="()V" line="162"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/BooleanArrayStringConverterFactory$BooleanArrayStringConverter" sourcefilename="BooleanArrayStringConverterFactory.java"><method name="&lt;clinit&gt;" desc="()V" line="70"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/NumericArrayStringConverterFactory$ShortArrayStringConverter$1" sourcefilename="NumericArrayStringConverterFactory.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="159"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToString" desc="([S)Ljava/lang/String;" line="162"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromString" desc="(Ljava/lang/Class;Ljava/lang/String;)[S" line="174"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEffectiveType" desc="()Ljava/lang/Class;" line="186"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="74"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/NumericArrayStringConverterFactory$ShortArrayStringConverter" sourcefilename="NumericArrayStringConverterFactory.java"><method name="&lt;clinit&gt;" desc="()V" line="158"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/NumericArrayStringConverterFactory" sourcefilename="NumericArrayStringConverterFactory.java"><method name="findConverter" desc="(Ljava/lang/Class;)Lorg/joda/convert/StringConverter;" line="61"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="84"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="42"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/joda/convert/factory/CharObjectArrayStringConverterFactory" sourcefilename="CharObjectArrayStringConverterFactory.java"><method name="findConverter" desc="(Ljava/lang/Class;)Lorg/joda/convert/StringConverter;" line="65"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ByteObjectArrayStringConverterFactory.java"><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="12" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="2"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="2"/><line nr="79" mi="0" ci="4" mb="0" cb="2"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="16" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="2"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="1" cb="1"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="8" mb="0" cb="2"/><line nr="98" mi="0" ci="11" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="2"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="144"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="3" covered="26"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="NumericObjectArrayStringConverterFactory.java"><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="2"/><line nr="62" mi="0" ci="3" mb="0" cb="2"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="2"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="2"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="2"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="1" cb="1"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="12" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="2"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="8" mb="0" cb="0"/><line nr="96" mi="0" ci="12" mb="0" cb="2"/><line nr="97" mi="0" ci="8" mb="0" cb="2"/><line nr="98" mi="0" ci="14" mb="0" cb="2"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="2"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="2"/><line nr="110" mi="0" ci="6" mb="0" cb="2"/><line nr="111" mi="0" ci="8" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="7" mb="0" cb="0"/><line nr="126" mi="0" ci="12" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="2"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="8" mb="0" cb="0"/><line nr="133" mi="0" ci="12" mb="0" cb="2"/><line nr="134" mi="0" ci="8" mb="0" cb="2"/><line nr="135" mi="0" ci="14" mb="0" cb="2"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="2"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="8" mb="0" cb="2"/><line nr="147" mi="0" ci="6" mb="0" cb="2"/><line nr="148" mi="0" ci="8" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="7" mb="0" cb="0"/><line nr="163" mi="0" ci="12" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="2"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="8" mb="0" cb="0"/><line nr="170" mi="0" ci="12" mb="0" cb="2"/><line nr="171" mi="0" ci="8" mb="0" cb="2"/><line nr="172" mi="0" ci="14" mb="0" cb="2"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="2"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="8" mb="0" cb="2"/><line nr="184" mi="0" ci="6" mb="0" cb="2"/><line nr="185" mi="0" ci="8" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="7" mb="0" cb="0"/><line nr="200" mi="0" ci="12" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="2"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="8" mb="0" cb="0"/><line nr="207" mi="0" ci="12" mb="0" cb="2"/><line nr="208" mi="0" ci="8" mb="0" cb="2"/><line nr="209" mi="0" ci="14" mb="0" cb="2"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="2"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="0" cb="0"/><line nr="220" mi="0" ci="8" mb="0" cb="2"/><line nr="221" mi="0" ci="6" mb="0" cb="2"/><line nr="222" mi="0" ci="8" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="2" ci="0" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="7" mb="0" cb="0"/><line nr="237" mi="0" ci="12" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="2"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="8" mb="0" cb="0"/><line nr="244" mi="0" ci="12" mb="0" cb="2"/><line nr="245" mi="0" ci="8" mb="0" cb="2"/><line nr="246" mi="0" ci="14" mb="0" cb="2"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="2"/><line nr="253" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="257" mi="0" ci="8" mb="0" cb="2"/><line nr="258" mi="0" ci="6" mb="0" cb="2"/><line nr="259" mi="0" ci="8" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><line nr="269" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="588"/><counter type="BRANCH" missed="1" covered="81"/><counter type="LINE" missed="6" covered="104"/><counter type="COMPLEXITY" missed="7" covered="62"/><counter type="METHOD" missed="6" covered="22"/><counter type="CLASS" missed="0" covered="11"/></sourcefile><sourcefile name="BooleanObjectArrayStringConverterFactory.java"><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="12" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="2"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="2"/><line nr="79" mi="0" ci="17" mb="0" cb="4"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="2"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="8" mb="0" cb="2"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="2"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="1" cb="1"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="121"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="3" covered="25"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="BooleanArrayStringConverterFactory.java"><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="12" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="2"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="2"/><line nr="79" mi="0" ci="10" mb="0" cb="2"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="2"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="8" mb="0" cb="2"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="1" cb="1"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="106"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="3" covered="23"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="NumericArrayStringConverterFactory.java"><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="1" cb="3"/><line nr="62" mi="0" ci="3" mb="0" cb="2"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="2"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="2"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="2"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="1" cb="1"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="12" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="2"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="8" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="8" mb="0" cb="2"/><line nr="98" mi="0" ci="8" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="2"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="2"/><line nr="110" mi="0" ci="7" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="7" mb="0" cb="0"/><line nr="124" mi="0" ci="12" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="2"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="8" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="8" mb="0" cb="2"/><line nr="133" mi="0" ci="8" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="2"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="8" mb="0" cb="2"/><line nr="145" mi="0" ci="7" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="7" mb="0" cb="0"/><line nr="159" mi="0" ci="12" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="2"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="8" mb="0" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="0"/><line nr="167" mi="0" ci="8" mb="0" cb="2"/><line nr="168" mi="0" ci="8" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="2"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="8" mb="0" cb="2"/><line nr="180" mi="0" ci="7" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="7" mb="0" cb="0"/><line nr="194" mi="0" ci="12" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="2"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="8" mb="0" cb="0"/><line nr="201" mi="0" ci="6" mb="0" cb="0"/><line nr="202" mi="0" ci="8" mb="0" cb="2"/><line nr="203" mi="0" ci="8" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="2"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="8" mb="0" cb="2"/><line nr="215" mi="0" ci="7" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="2" ci="0" mb="0" cb="0"/><line nr="224" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="7" mb="0" cb="0"/><line nr="229" mi="0" ci="12" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="0" cb="2"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="8" mb="0" cb="0"/><line nr="236" mi="0" ci="6" mb="0" cb="0"/><line nr="237" mi="0" ci="8" mb="0" cb="2"/><line nr="238" mi="0" ci="8" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="3" mb="0" cb="2"/><line nr="245" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="0" ci="8" mb="0" cb="2"/><line nr="250" mi="0" ci="7" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="2" ci="0" mb="0" cb="0"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="497"/><counter type="BRANCH" missed="2" covered="52"/><counter type="LINE" missed="6" covered="99"/><counter type="COMPLEXITY" missed="8" covered="47"/><counter type="METHOD" missed="6" covered="22"/><counter type="CLASS" missed="0" covered="11"/></sourcefile><sourcefile name="CharObjectArrayStringConverterFactory.java"><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="2"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="12" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="2"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="8" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="2"/><line nr="87" mi="0" ci="4" mb="0" cb="2"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="2"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="2"/><line nr="110" mi="0" ci="7" mb="0" cb="2"/><line nr="111" mi="0" ci="8" mb="0" cb="0"/><line nr="113" mi="0" ci="7" mb="0" cb="2"/><line nr="114" mi="0" ci="7" mb="0" cb="0"/><line nr="115" mi="0" ci="7" mb="1" cb="1"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="0"/><line nr="122" mi="0" ci="8" mb="0" cb="2"/><line nr="123" mi="0" ci="8" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="177"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="3" covered="35"/><counter type="COMPLEXITY" missed="3" covered="16"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><counter type="INSTRUCTION" missed="72" covered="1633"/><counter type="BRANCH" missed="7" covered="203"/><counter type="LINE" missed="24" covered="312"/><counter type="COMPLEXITY" missed="27" covered="166"/><counter type="METHOD" missed="20" covered="68"/><counter type="CLASS" missed="0" covered="34"/></package><counter type="INSTRUCTION" missed="852" covered="5114"/><counter type="BRANCH" missed="86" covered="440"/><counter type="LINE" missed="180" covered="977"/><counter type="COMPLEXITY" missed="113" covered="428"/><counter type="METHOD" missed="48" covered="229"/><counter type="CLASS" missed="0" covered="83"/></report>