<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.versionone</groupId>
	<artifactId>VersionOne.SDK.Java.APIClient</artifactId>
	<version>13.0.2</version>
	<packaging>jar</packaging>

	<name>VersionOne.SDK.Java.APIClient</name>
	<description>A library for custom Java development against the VersionOne Development Platform's REST API.</description>
	<url>https://github.com/versionone/VersionOne.SDK.Java.APIClient</url>
	<organization>
		<name>VersionOne, Inc.</name>
		<url>http://www.versionone.com/</url>
	</organization>
	<licenses>
		<license>
			<name>Modified BSD (3-clause)</name>
			<url>https://raw.github.com/versionone/VersionOne.SDK.Java.APIClient/master/LICENSE.md</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>
	<issueManagement>
		<system>GitHub Issues</system>
		<url>https://github.com/versionone/VersionOne.SDK.Java.APIClient/issues</url>
	</issueManagement>
	<scm>
		<url>https://github.com/versionone/VersionOne.SDK.Java.APIClient</url>
		<connection>scm:git:git@github.com:versionone/VersionOne.SDK.Java.APIClient.git</connection>
		<developerConnection>scm:git:git@github.com:versionone/VersionOne.SDK.Java.APIClient.git</developerConnection>
	</scm>
	<developers>
		<developer>
			<name>Ian Buchanan</name>
			<email>ian.buchanan@versionone.com</email>
		</developer>
		<developer>
			<name>Greg Johnson</name>
			<email>greg.johnson@versionone.com</email>
		</developer>
		<developer>
			<name>Acey Bunch</name>
			<email>acey.bunch@versionone.com</email>
		</developer>
		<developer>
			<name>Valentin Plechuc</name>
			<email>vplechuc@velocitypartners.net</email>
		</developer>
	</developers>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<github.global.server>github</github.global.server>
		<VERSION_NUMBER>${project.version}</VERSION_NUMBER>
	</properties>

<!--
	<distributionManagement>
		<repository>
			<id>versionone</id>
			<name>versionone-releases</name>
			<url>http://versionone.artifactoryonline.com/versionone/libs-releases-local</url>
		</repository>
		<snapshotRepository>
			<id>versionone</id>
			<name>libs-snapshots-local</name>
			<url>http://versionone.artifactoryonline.com/versionone/libs-snapshots-local</url>
		</snapshotRepository>
	</distributionManagement>
-->

	<build>
		<plugins>
			<!-- Write manifest properties -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<!-- adds dependecies to the final jar -->
			<!-- <plugin> -->
			<!-- <artifactId>maven-assembly-plugin</artifactId> -->
			<!-- <configuration> -->
			<!-- <descriptorRefs> -->
			<!-- <descriptorRef>jar-with-dependencies</descriptorRef> -->
			<!-- </descriptorRefs> -->
			<!-- </configuration> -->
			<!-- <executions> -->
			<!-- <execution> -->
			<!-- <phase>package</phase> -->
			<!-- <goals> -->
			<!-- <goal>single</goal> -->
			<!-- </goals> -->
			<!-- </execution> -->
			<!-- </executions> -->
			<!-- </plugin> -->

			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<finalName>VersionOne.JavaSDK-${project.version}</finalName>
					<descriptors>
						<descriptor>${basedir}/assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			
			<!-- 
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.7</version>
			</plugin>
			-->
			
			<!-- Add javadoc jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.1</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<!-- Add sources jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		
			<!-- Unit test suite -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18</version>
				<configuration>
					<skipTests>false</skipTests>
					<includes>
						<include>**/*TestSuite.java</include>
					</includes>
				</configuration>
			</plugin>
			
			<!-- integration test suite -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.17</version>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<!-- Cobertura test coverage -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<formats>
						<format>xml</format>
					</formats>
					<check/>
				</configuration>
			</plugin>

			<!-- Documentation site builder plugin -->
			<!-- 
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.4</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.doxia</groupId>
						<artifactId>doxia-module-markdown</artifactId>
						<version>1.4</version>
					</dependency>
				</dependencies>
			</plugin>
			-->

			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.9</version>
				<configuration>
					<message>Creating site for ${project.artifactId} ${project.version}</message>
					<dryRun>false</dryRun>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>site</phase>
					</execution>
				</executions>
			</plugin>

			<!-- Write out maven properties so they can be used by Jenkins -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>write-project-properties</goal>
						</goals>
						<configuration>
							<outputFile>
								${project.build.directory}/maven.properties
							</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											properties-maven-plugin
										</artifactId>
										<versionRange>
											[1.0-alpha-2,)
										</versionRange>
										<goals>
											<goal>
												write-project-properties
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
			</plugin>
			<!-- <plugin> -->
			<!-- <groupId>org.apache.maven.plugins</groupId> -->
			<!-- <artifactId>maven-javadoc-plugin</artifactId> -->
			<!-- </plugin> -->
			<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>cobertura-maven-plugin</artifactId> 
				<configuration> <check></check> <instrumentation> <includes> <include>**/*Test*.class</include> 
				</includes> </instrumentation> <formats> <format>html</format> <format>xml</format> 
				</formats> </configuration> </plugin> -->
		</plugins>
	</reporting>

	<dependencies>
		<dependency>
			<groupId>org.fitnesse</groupId>
			<artifactId>fitnesse</artifactId>
			<version>20111025</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-junit4</artifactId>
			<version>2.6.0-RC2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-legacy</artifactId>
			<version>2.6.0-RC2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>
