<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.github.kaiwaehner.kafka.streams.machinelearning</groupId>
	<artifactId>kafka-streams-h2o-docker-microservice</artifactId>
	<version>1.0-SNAPSHOT</version>

	<repositories>
		<repository>
			<id>confluent</id>
			<url>http://packages.confluent.io/maven/</url>
		</repository>
	</repositories>

	<properties>
		<java.version>1.8</java.version>
		<kafka.version>0.10.2.1-cp1</kafka.version>
		<kafka.scala.version>2.11</kafka.scala.version>
		<scala.version>${kafka.scala.version}.8</scala.version>
		<confluent.version>3.2.1</confluent.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>

		<!-- Kafka Streams API is the only dependency you need for building Streams 
			applications. The only other thing is the specific Machine Learning dependencies 
			for the models you want to build and / or deploy -->

		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-streams</artifactId>
			<version>${kafka.version}</version>
		</dependency>



		<!-- https://mvnrepository.com/artifact/ai.h2o/h2o-genmodel -->
		<dependency>
			<groupId>ai.h2o</groupId>
			<artifactId>h2o-genmodel</artifactId>
			<version>3.14.0.1</version>
		</dependency>


		<!-- Test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.3.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka_${kafka.scala.version}</artifactId>
			<version>${kafka.version}</version>
			<classifier>test</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
			<version>${kafka.version}</version>
			<classifier>test</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-streams</artifactId>
			<version>${kafka.version}</version>
			<classifier>test</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.curator</groupId>
			<artifactId>curator-test</artifactId>
			<version>2.9.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.confluent</groupId>
			<artifactId>kafka-schema-registry</artifactId>
			<version>${confluent.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.confluent</groupId>
			<artifactId>kafka-schema-registry</artifactId>
			<version>${confluent.version}</version>
			<!-- Required for e.g. schema registry's RestApp -->
			<classifier>tests</classifier>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!--force java 8 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<!-- <classpathPrefix>opt/</classpathPrefix> -->
							<mainClass>com.github.megachucky.kafka.streams.machinelearning.Kafka_Streams_MachineLearning_H2O_GBM_Example</mainClass>
						</manifest>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>assemble-all</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>




			<!--package as one fat jar -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.10</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<imageName>kaiwaehner/${project.artifactId}</imageName>
					<baseImage>java:8</baseImage>
					<maintainer>Kai Waehner (kontakt@kai-waehner.de, @KaiWaehner)</maintainer>
					
					<entryPoint>
						["java", "-jar", "/opt/kafka-streams-h2o-docker-microservice-1.0-SNAPSHOT-jar-with-dependencies.jar"] 
					</entryPoint>
					
					<!-- <serverId>docker-hub</serverId> <registryUrl>https://index.docker.io/v1/</registryUrl> -->

					<!-- <pushImage>false</pushImage> -->
					
					<resources>        <!-- Dockerfile building resources -->
						<resource>
							<targetPath>/opt/</targetPath>
							<directory>${project.build.directory}</directory>
							<excludes>
								<exclude>target/**/*</exclude>
								<exclude>pom.xml</exclude>
								<exclude>*.iml</exclude>
							</excludes>
							<!-- <include>${project.build.finalName}.jar</include> -->
							<include>kafka-streams-h2o-docker-microservice-1.0-SNAPSHOT-jar-with-dependencies.jar</include>

						</resource>
					</resources>
				</configuration>
			</plugin>




		</plugins>
	</build>
</project>
