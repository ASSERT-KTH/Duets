[INFO] Error stacktraces are turned on.
[INFO] Scanning for projects...
[INFO] 
[INFO] ---------------< com.mandrillapp.wrapper.lutung:lutung >----------------
[INFO] Building lutung 0.0.9-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-enforcer-plugin:1.0:enforce (enforce-maven) @ lutung ---
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.5:prepare-agent (default) @ lutung ---
[INFO] argLine set to -javaagent:/home/jdbl/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/tmp/tmpi0_cv7vr/lutung/target/jacoco.exec
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ lutung ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /tmp/tmpi0_cv7vr/lutung/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:2.3.2:compile (default-compile) @ lutung ---
[INFO] Compiling 52 source files to /tmp/tmpi0_cv7vr/lutung/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ lutung ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:2.3.2:testCompile (default-testCompile) @ lutung ---
[INFO] Compiling 12 source files to /tmp/tmpi0_cv7vr/lutung/target/test-classes
[INFO] 
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ lutung ---
[INFO] Surefire report directory: /tmp/tmpi0_cv7vr/lutung/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running com.microtripit.mandrillapp.lutung.MandrillApiTest
2020-07-30 21:42:55,682 ERROR [main] (MandrillApiTest.getMandrillApiKey) No Mandrill API key defined - please provide your Mandrill API key!
java.io.FileNotFoundException: Please change com.microtripit.mandrillapp.lutung.MandrillTestCase.getMandrillApiKey() to just return your Mandrill api key. The file being loaded in that method is just a security measure ... I didn't want my own api key in a public git repo ;-)
	at com.microtripit.mandrillapp.lutung.MandrillTestCase.getMandrillApiKey(MandrillTestCase.java:45)
	at com.microtripit.mandrillapp.lutung.MandrillTestCase.runBeforeClass(MandrillTestCase.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
Tests run: 14, Failures: 0, Errors: 0, Skipped: 14, Time elapsed: 0.206 sec - in com.microtripit.mandrillapp.lutung.MandrillApiTest
Running com.microtripit.mandrillapp.lutung.controller.MandrillTagsApiTest
2020-07-30 21:42:55,700 ERROR [main] (MandrillApiTest.getMandrillApiKey) No Mandrill API key defined - please provide your Mandrill API key!
java.io.FileNotFoundException: Please change com.microtripit.mandrillapp.lutung.MandrillTestCase.getMandrillApiKey() to just return your Mandrill api key. The file being loaded in that method is just a security measure ... I didn't want my own api key in a public git repo ;-)
	at com.microtripit.mandrillapp.lutung.MandrillTestCase.getMandrillApiKey(MandrillTestCase.java:45)
	at com.microtripit.mandrillapp.lutung.MandrillTestCase.runBeforeClass(MandrillTestCase.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
Tests run: 7, Failures: 0, Errors: 0, Skipped: 7, Time elapsed: 0.004 sec - in com.microtripit.mandrillapp.lutung.controller.MandrillTagsApiTest
Running com.microtripit.mandrillapp.lutung.controller.MandrillInboundApiTest
2020-07-30 21:42:55,704 ERROR [main] (MandrillApiTest.getMandrillApiKey) No Mandrill API key defined - please provide your Mandrill API key!
java.io.FileNotFoundException: Please change com.microtripit.mandrillapp.lutung.MandrillTestCase.getMandrillApiKey() to just return your Mandrill api key. The file being loaded in that method is just a security measure ... I didn't want my own api key in a public git repo ;-)
	at com.microtripit.mandrillapp.lutung.MandrillTestCase.getMandrillApiKey(MandrillTestCase.java:45)
	at com.microtripit.mandrillapp.lutung.MandrillTestCase.runBeforeClass(MandrillTestCase.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
Tests run: 3, Failures: 0, Errors: 0, Skipped: 3, Time elapsed: 0.004 sec - in com.microtripit.mandrillapp.lutung.controller.MandrillInboundApiTest
Running com.microtripit.mandrillapp.lutung.controller.MandrillSendersApiTest
2020-07-30 21:42:55,707 ERROR [main] (MandrillApiTest.getMandrillApiKey) No Mandrill API key defined - please provide your Mandrill API key!
java.io.FileNotFoundException: Please change com.microtripit.mandrillapp.lutung.MandrillTestCase.getMandrillApiKey() to just return your Mandrill api key. The file being loaded in that method is just a security measure ... I didn't want my own api key in a public git repo ;-)
	at com.microtripit.mandrillapp.lutung.MandrillTestCase.getMandrillApiKey(MandrillTestCase.java:45)
	at com.microtripit.mandrillapp.lutung.MandrillTestCase.runBeforeClass(MandrillTestCase.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
Tests run: 7, Failures: 0, Errors: 0, Skipped: 7, Time elapsed: 0.004 sec - in com.microtripit.mandrillapp.lutung.controller.MandrillSendersApiTest
Running com.microtripit.mandrillapp.lutung.controller.MandrillWhitelistsApiTest
2020-07-30 21:42:55,710 ERROR [main] (MandrillApiTest.getMandrillApiKey) No Mandrill API key defined - please provide your Mandrill API key!
java.io.FileNotFoundException: Please change com.microtripit.mandrillapp.lutung.MandrillTestCase.getMandrillApiKey() to just return your Mandrill api key. The file being loaded in that method is just a security measure ... I didn't want my own api key in a public git repo ;-)
	at com.microtripit.mandrillapp.lutung.MandrillTestCase.getMandrillApiKey(MandrillTestCase.java:45)
	at com.microtripit.mandrillapp.lutung.MandrillTestCase.runBeforeClass(MandrillTestCase.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
Tests run: 3, Failures: 0, Errors: 0, Skipped: 3, Time elapsed: 0.003 sec - in com.microtripit.mandrillapp.lutung.controller.MandrillWhitelistsApiTest
Running com.microtripit.mandrillapp.lutung.controller.MandrillTemplatesApiTest
2020-07-30 21:42:55,715 ERROR [main] (MandrillApiTest.getMandrillApiKey) No Mandrill API key defined - please provide your Mandrill API key!
java.io.FileNotFoundException: Please change com.microtripit.mandrillapp.lutung.MandrillTestCase.getMandrillApiKey() to just return your Mandrill api key. The file being loaded in that method is just a security measure ... I didn't want my own api key in a public git repo ;-)
	at com.microtripit.mandrillapp.lutung.MandrillTestCase.getMandrillApiKey(MandrillTestCase.java:45)
	at com.microtripit.mandrillapp.lutung.MandrillTestCase.runBeforeClass(MandrillTestCase.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
Tests run: 20, Failures: 0, Errors: 0, Skipped: 20, Time elapsed: 0.003 sec - in com.microtripit.mandrillapp.lutung.controller.MandrillTemplatesApiTest
Running com.microtripit.mandrillapp.lutung.controller.MandrillRejectsApiTest
2020-07-30 21:42:55,721 ERROR [main] (MandrillApiTest.getMandrillApiKey) No Mandrill API key defined - please provide your Mandrill API key!
java.io.FileNotFoundException: Please change com.microtripit.mandrillapp.lutung.MandrillTestCase.getMandrillApiKey() to just return your Mandrill api key. The file being loaded in that method is just a security measure ... I didn't want my own api key in a public git repo ;-)
	at com.microtripit.mandrillapp.lutung.MandrillTestCase.getMandrillApiKey(MandrillTestCase.java:45)
	at com.microtripit.mandrillapp.lutung.MandrillTestCase.runBeforeClass(MandrillTestCase.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
Tests run: 3, Failures: 0, Errors: 0, Skipped: 3, Time elapsed: 0.003 sec - in com.microtripit.mandrillapp.lutung.controller.MandrillRejectsApiTest
Running com.microtripit.mandrillapp.lutung.controller.MandrillWebhooksApiTest
2020-07-30 21:42:55,723 ERROR [main] (MandrillApiTest.getMandrillApiKey) No Mandrill API key defined - please provide your Mandrill API key!
java.io.FileNotFoundException: Please change com.microtripit.mandrillapp.lutung.MandrillTestCase.getMandrillApiKey() to just return your Mandrill api key. The file being loaded in that method is just a security measure ... I didn't want my own api key in a public git repo ;-)
	at com.microtripit.mandrillapp.lutung.MandrillTestCase.getMandrillApiKey(MandrillTestCase.java:45)
	at com.microtripit.mandrillapp.lutung.MandrillTestCase.runBeforeClass(MandrillTestCase.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
Tests run: 3, Failures: 0, Errors: 0, Skipped: 3, Time elapsed: 0.003 sec - in com.microtripit.mandrillapp.lutung.controller.MandrillWebhooksApiTest
Running com.microtripit.mandrillapp.lutung.controller.MandrillUsersApiTest
2020-07-30 21:42:55,725 ERROR [main] (MandrillApiTest.getMandrillApiKey) No Mandrill API key defined - please provide your Mandrill API key!
java.io.FileNotFoundException: Please change com.microtripit.mandrillapp.lutung.MandrillTestCase.getMandrillApiKey() to just return your Mandrill api key. The file being loaded in that method is just a security measure ... I didn't want my own api key in a public git repo ;-)
	at com.microtripit.mandrillapp.lutung.MandrillTestCase.getMandrillApiKey(MandrillTestCase.java:45)
	at com.microtripit.mandrillapp.lutung.MandrillTestCase.runBeforeClass(MandrillTestCase.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
Tests run: 3, Failures: 0, Errors: 0, Skipped: 3, Time elapsed: 0.002 sec - in com.microtripit.mandrillapp.lutung.controller.MandrillUsersApiTest
Running com.microtripit.mandrillapp.lutung.controller.MandrillUrlsApiTest
2020-07-30 21:42:55,728 ERROR [main] (MandrillApiTest.getMandrillApiKey) No Mandrill API key defined - please provide your Mandrill API key!
java.io.FileNotFoundException: Please change com.microtripit.mandrillapp.lutung.MandrillTestCase.getMandrillApiKey() to just return your Mandrill api key. The file being loaded in that method is just a security measure ... I didn't want my own api key in a public git repo ;-)
	at com.microtripit.mandrillapp.lutung.MandrillTestCase.getMandrillApiKey(MandrillTestCase.java:45)
	at com.microtripit.mandrillapp.lutung.MandrillTestCase.runBeforeClass(MandrillTestCase.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
Tests run: 5, Failures: 0, Errors: 0, Skipped: 5, Time elapsed: 0.003 sec - in com.microtripit.mandrillapp.lutung.controller.MandrillUrlsApiTest
Running com.microtripit.mandrillapp.lutung.controller.MandrillMessagesApiTest
2020-07-30 21:42:55,732 ERROR [main] (MandrillApiTest.getMandrillApiKey) No Mandrill API key defined - please provide your Mandrill API key!
java.io.FileNotFoundException: Please change com.microtripit.mandrillapp.lutung.MandrillTestCase.getMandrillApiKey() to just return your Mandrill api key. The file being loaded in that method is just a security measure ... I didn't want my own api key in a public git repo ;-)
	at com.microtripit.mandrillapp.lutung.MandrillTestCase.getMandrillApiKey(MandrillTestCase.java:45)
	at com.microtripit.mandrillapp.lutung.MandrillTestCase.runBeforeClass(MandrillTestCase.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
Tests run: 12, Failures: 0, Errors: 0, Skipped: 12, Time elapsed: 0.003 sec - in com.microtripit.mandrillapp.lutung.controller.MandrillMessagesApiTest

Results :

Tests run: 80, Failures: 0, Errors: 0, Skipped: 80

[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.5:report (report) @ lutung ---
[INFO] Loading execution data file /tmp/tmpi0_cv7vr/lutung/target/jacoco.exec
[INFO] Analyzed bundle 'lutung' with 197 classes
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  7.609 s
[INFO] Finished at: 2020-07-30T21:42:56Z
[INFO] ------------------------------------------------------------------------
