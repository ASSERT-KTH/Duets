<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>uk.ac.gla</groupId>
  <artifactId>MScIT2019Project</artifactId>
  <version>1.0</version>
  <name>Top Trumps Application Project</name>
  <description>This is the template java project for the Top Trumps Assessed Excercise for IT Software Development at Glasgow 2019. </description>
  
  <!-- Specify which version of Dropwizard we are going to use for histing the REST API and Website -->
  <properties>
    <dropwizard.version>1.2.2</dropwizard.version>
	<maven.compiler.target>1.8</maven.compiler.target>
	<maven.compiler.source>1.8</maven.compiler.source>
  </properties>
  
  <!-- These are the other software libruaries developed by third parties that we need -->
  <dependencies>
  
  	<!-- Dropwizard is a bundle of REST API hosting tools -->
    <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-core</artifactId>
        <version>${dropwizard.version}</version>
    </dependency>
    
    <!-- When hosting a website with dropwizard, we need to specify a language for writing views,
         In this case, we are using freemarker https://freemarker.apache.org/ -->
	<dependency>
    	<groupId>io.dropwizard</groupId>
    	<artifactId>dropwizard-views-freemarker</artifactId>
    	<version>${dropwizard.version}</version>
	</dependency>
	
	<!-- One of the requirements is to save results in a (mysql) database, so lets import the
	     database connection driver libruary for that as well -->
	<dependency>
    	<groupId>mysql</groupId>
    	<artifactId>mysql-connector-java</artifactId>
    	<version>5.1.38</version>
	</dependency>
    
  </dependencies>
  
  <build>
  
  	<!-- Where do our Java sources come from? -->
    <sourceDirectory>src</sourceDirectory>
	
	<resources>
		<resource>
			<directory>resources</directory>
		</resource>
	</resources>
    
    <!-- Plugin Management for users working with the Eclipse IDE. org.eclipse.m2e:lifecycle-mapping
         instructs eclipse how to build the maven project -->
    <pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>

								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>build-helper-maven-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>parse-version</goal>
											<goal>add-source</goal>
											<goal>maven-version</goal>
											<goal>add-resource</goal>
											<goal>add-test-resource</goal>
											<goal>add-test-source</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnConfiguration>true</runOnConfiguration>
											<runOnIncremental>true</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>

								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-resources-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>resources</goal>
											<goal>testResources</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnConfiguration>true</runOnConfiguration>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>

								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-compiler-plugin</artifactId>
										<versionRange>2.3.2</versionRange>
										<goals>
											<goal>testCompile</goal>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>

								<!-- copy-dependency plugin -->
								<!-- http://stackoverflow.com/questions/26482070/using-maven-assembly-plugin-with-local-dependencies -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>2.6</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>

							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
    
    <!-- Plugins, these do things like compiling the java sources and packaging into a jar -->
    <plugins>
    
      <!-- Compiles your java sources -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source/>
          <target/>
        </configuration>
      </plugin>
      
      <!-- Packages those sources in a Jar file -->
      <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <version>1.4</version>
            <executions>
                <execution>
                    <phase>package</phase>
                    <goals>
                        <goal>shade</goal>
                    </goals>
                    <configuration>
                        <filters>
			  				<filter>
			    				<artifact>*:*</artifact>
			    				<excludes>
			      					<exclude>META-INF/*.SF</exclude>
			      					<exclude>META-INF/*.DSA</exclude>
			      					<exclude>META-INF/*.RSA</exclude>
			    				</excludes>
			  				</filter>
			 			</filters>
                         <transformers>
                            <transformer
                                implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                <!-- Main class for the Jar file -->
                                <mainClass>TopTrumps</mainClass>
                            </transformer>
                            <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                     </transformers>
                    </configuration>
                </execution>
            </executions>
        </plugin>
    </plugins>
  </build>
</project>