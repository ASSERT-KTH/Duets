<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>evercookie</groupId>
  <artifactId>evercookie-applet</artifactId>
  <version>1.2-SNAPSHOT</version>
  <name>Evercookie Applet</name>
  <description>A storage mechanism for Evercookie that uses the JNLP PersistenceService.</description>
  <developers>
    <developer>
      <name>Gabriel Bauman</name>
      <email>gabe@codehaus.org</email>
      <url>http://gabrielbauman.com</url>
    </developer>
  </developers>
  <licenses>
    <license>
      <name>The BSD 2-Clause License</name>
      <distribution>manual</distribution>
      <url>http://opensource.org/licenses/BSD-2-Clause</url>
      <comments>See the file LICENSE included in this project.</comments>
    </license>
  </licenses>
  <scm>
    <connection>scm:git:git://github.com/gabrielbauman/evercookie-applet.git</connection>
    <developerConnection>scm:git:git@github.com:gabrielbauman/evercookie-applet.git</developerConnection>
    <url>https://github.com/gabrielbauman/evercookie-applet</url>
  </scm>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  <build>
    <resources>
      <!-- Move the JNLP and HTML into the target dir and don't include them in the .jar -->
      <resource>
        <includes>
          <include>*.html</include>
          <include>*.jnlp</include>
        </includes>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
        <targetPath>../</targetPath>
      </resource>
    </resources>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.3.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.3.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
          <!-- Suppress compiler warnings about proprietary APIs -->
          <compilerArgument>-XDignore.symbol.file</compilerArgument>
          <!-- Don't include debug information in compiled binaries -->
          <debug>true</debug>
          <debuglevel>none</debuglevel>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestFile>src/main/resources/META-INF/MANIFEST.MF</manifestFile>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <filters>
            <filter>src/assembly/filter.properties</filter>
          </filters>
          <descriptors>
            <descriptor>src/assembly/distribution.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>attached</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <localCheckout>true</localCheckout>
          <pushChanges>false</pushChanges>
          <!-- Space separated list of goals to apply on release:perform. -->
          <goals>validate</goals>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-maven-plugin</artifactId>
        <version>1.9</version>
        <configuration>
          <signature>
            <groupId>org.codehaus.mojo.signature</groupId>
            <artifactId>java15</artifactId>
            <version>1.0</version>
          </signature>
        </configuration>
        <executions>
          <execution>
            <phase>process-classes</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <!-- If JAVA_HOME doesn't point to an Oracle JDK, build with netx JNLP. -->
    <profile>
      <id>jnlp-netx</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <file>
          <missing>${env.JAVA_HOME}/jre/lib/javaws.jar</missing>
        </file>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.jvnet.hudson</groupId>
          <artifactId>netx</artifactId>
          <version>0.5-hudson-2</version>
          <scope>provided</scope>
        </dependency>
      </dependencies>
    </profile>
    <!-- If JAVA_HOME does point to an Oracle JDK, build with Oracle JNLP. -->
    <profile>
      <id>jnlp-oracle</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <file>
          <exists>${env.JAVA_HOME}/jre/lib/javaws.jar</exists>
        </file>
      </activation>
      <dependencies>
        <dependency>
          <groupId>javax.jnlp</groupId>
          <artifactId>jnlp</artifactId>
          <version>1.7</version>
          <scope>system</scope>
          <systemPath>${env.JAVA_HOME}/jre/lib/javaws.jar</systemPath>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
  <dependencies>
    <dependency>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>animal-sniffer-annotations</artifactId>
      <version>1.9</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>
</project>