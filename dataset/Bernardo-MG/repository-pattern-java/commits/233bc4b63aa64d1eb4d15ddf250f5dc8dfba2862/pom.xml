<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <!-- ********************************************** -->
    <!-- ****************** BASE POM ****************** -->
    <!-- ********************************************** -->

    <parent>
        <groupId>com.wandrell.maven</groupId>
        <artifactId>base-pom</artifactId>
        <version>0.1.0</version>
    </parent>

    <!-- ********************************************** -->
    <!-- **************** PROJECT INFO **************** -->
    <!-- ********************************************** -->

    <groupId>com.wandrell</groupId>
    <artifactId>persistence-utils</artifactId>
    <version>0.1.8-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Java Persistence Utils</name>
    <description>Repositories and helper classes for making use of persistence on Java.</description>
    <url>https://github.com/bernardo-mg/persistence-utils-java</url>
    <inceptionYear>2015</inceptionYear>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <!-- ********************************************** -->
    <!-- ********* INFRASTRUCTURE AND SERVICES ******** -->
    <!-- ********************************************** -->

    <scm>
        <connection>scm:git:https://github.com/Bernardo-MG/persistence-utils-java.git</connection>
        <developerConnection>scm:git:https://github.com/Bernardo-MG/persistence-utils-java.git</developerConnection>
        <tag>head</tag>
        <url>https://www.github.com/Bernardo-MG/persistence-utils-java</url>
    </scm>

    <issueManagement>
        <system>GitHub</system>
        <url>https://www.github.com/Bernardo-MG/persistence-utils-java/issues</url>
    </issueManagement>

    <ciManagement>
        <system>Travis CI</system>
        <url>https://travis-ci.org/Bernardo-MG/persistence-utils-java</url>
        <notifiers />
    </ciManagement>

    <distributionManagement>
        <repository>
            <uniqueVersion>false</uniqueVersion>
            <id>releases</id>
            <name>Releases Repository</name>
            <url>https://api.bintray.com/maven/bernardo-mg/maven/persistence-utils</url>
        </repository>
        <snapshotRepository>
            <uniqueVersion>false</uniqueVersion>
            <id>snapshots</id>
            <name>Snapshots Repository</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <!-- ********************************************** -->
    <!-- ****************** PROFILES ****************** -->
    <!-- ********************************************** -->

    <profiles>
        <profile>
            <!-- Profile for the Eclipse Maven plugin -->
            <!-- Sets the POM so this plugin does not give the usual unregistered
                goals errors -->
            <!-- It will be activated automatically on Eclipse if this has the m2e
                plugin, by detecting the version property -->
            <id>eclipse-maven</id>
            <activation>
                <property>
                    <name>m2e.version</name>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <!-- m2e lifecycle mapping -->
                            <!-- This is used to configure the Maven plugin for Eclipse. -->
                            <!-- Among other things, it allows registering goals,
                                which Eclipse would otherwise reject. -->
                            <!-- It has no real effect on Maven. -->
                            <groupId>org.eclipse.m2e</groupId>
                            <artifactId>lifecycle-mapping</artifactId>
                            <version>${plugin.lifecycle.version}</version>
                            <configuration>
                                <lifecycleMappingMetadata>
                                    <pluginExecutions>
                                        <pluginExecution>
                                            <!-- jacoco plugin configuration -->
                                            <!-- Fixes the errors with Eclipse not
                                                recognizing the plugin configuration -->
                                            <pluginExecutionFilter>
                                                <groupId>org.jacoco</groupId>
                                                <artifactId>jacoco-maven-plugin</artifactId>
                                                <versionRange>[0.5,)</versionRange>
                                                <goals>
                                                    <!-- The 'prepare-agent' goal
                                                        is registered to m2e. -->
                                                    <goal>prepare-agent</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <!-- As m2e doesn't know what to
                                                    do with jacoco, it is ignored to avoid error warnings. -->
                                                <ignore />
                                            </action>
                                        </pluginExecution>
                                    </pluginExecutions>
                                </lifecycleMappingMetadata>
                                <downloadSources>true</downloadSources>
                                <downloadJavadocs>true</downloadJavadocs>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <!-- Release site deployment profile -->
            <!-- Sets the site repository to point to the releases repo -->
            <id>deploy-site-release</id>
            <activation>
                <!-- Active by default so the repository appears in the reports -->
                <activeByDefault>true</activeByDefault>
            </activation>
            <distributionManagement>
                <site>
                    <id>site</id>
                    <name>Project Documentation Site</name>
                    <url>ftp://docs.wandrell.com/persistence-utils</url>
                </site>
            </distributionManagement>
        </profile>
        <profile>
            <!-- Development site deployment profile -->
            <!-- Sets the site repository to point to the development repo -->
            <id>deploy-site-development</id>
            <distributionManagement>
                <site>
                    <id>site-development</id>
                    <name>Project Development Documentation Site</name>
                    <url>ftp://docs.wandrell.com/persistence-utils</url>
                </site>
            </distributionManagement>
        </profile>
        <profile>
            <!-- Deployment profile -->
            <!-- Sets ups the environment for deployment -->
            <id>deployment</id>
            <properties>
                <!-- Tests are skipped -->
                <maven.test.skip>true</maven.test.skip>
            </properties>
        </profile>
    </profiles>

    <!-- ********************************************** -->
    <!-- *********** ORGANIZATION AND MEMBERS ********* -->
    <!-- ********************************************** -->

    <organization>
        <name>Bernardo Martínez Garrido</name>
        <url>https://github.com/Bernardo-MG</url>
    </organization>

    <developers>
        <developer>
            <id>bmg</id>
            <name>Bernardo Martínez Garrido</name>
            <email>programming@wandrell.com</email>
            <url>https://github.com/Bernardo-MG</url>
            <organization>Bernardo Martínez Garrido</organization>
            <organizationUrl>https://github.com/Bernardo-MG</organizationUrl>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>+1</timezone>
            <properties />
        </developer>
    </developers>

    <!-- ********************************************** -->
    <!-- **************** PROPERTIES ****************** -->
    <!-- ********************************************** -->

    <properties>
        <!-- Manifest data -->
        <manifest.name>com/wandrell/jpa/utils</manifest.name>
        <!-- Dependencies versions -->
        <guava.version>18.0</guava.version>
        <h2.version>1.4.190</h2.version>
        <javaee.api.version>7.0</javaee.api.version>
        <hibernate.version>5.0.2.Final</hibernate.version>
        <hikari.version>2.3.12</hikari.version>
        <log4j.version>2.4.1</log4j.version>
        <spring.version>4.2.2.RELEASE</spring.version>
        <sqlite.version>3.8.11.2</sqlite.version>
        <testng.version>6.9.8</testng.version>
        <wandrell.patterns.version>0.5.0</wandrell.patterns.version>
        <!-- Plugins versions -->
        <plugin.changes.version>2.11</plugin.changes.version>
        <plugin.site.velocity.version>1.7</plugin.site.velocity.version>
        <!-- Maven Site -->
        <site.skin.version>0.2.1</site.skin.version>
        <bintrayURL>https://bintray.com/bernardo-mg/maven/persistence-utils/view</bintrayURL>
        <mavenURL>http://mvnrepository.com/artifact/com.wandrell/persistence-utils</mavenURL>
    </properties>

    <!-- ********************************************** -->
    <!-- *************** DEPENDENCIES ***************** -->
    <!-- ********************************************** -->

    <dependencies>
        <dependency>
            <!-- Guava -->
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <dependency>
            <!-- Java Patterns -->
            <groupId>com.wandrell</groupId>
            <artifactId>java-patterns</artifactId>
            <version>${wandrell.patterns.version}</version>
        </dependency>
        <dependency>
            <!-- Spring Beans -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <!-- Spring JDBC -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <!-- Spring Transactions -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- ============================================== -->
        <!-- =========== PROVIDED DEPENDENCIES ============ -->
        <!-- ============================================== -->
        <dependency>
            <!-- JavaEE API -->
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>${javaee.api.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- ============================================== -->
        <!-- ======= TEST ENVIRONMENT DEPENDENCIES ======== -->
        <!-- ============================================== -->
        <dependency>
            <!-- H2 Database -->
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Hibernate Ehcache -->
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-ehcache</artifactId>
            <version>${hibernate.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Hibernate Entity Manager -->
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Hikari CP -->
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP-java6</artifactId>
            <version>${hikari.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Log4j core -->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Log4j SLF4J Bridge -->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Log4j Commons Logging Bridge -->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jcl</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <!-- Spring Framework Context -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Spring ORM -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Spring Test -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- SQLite -->
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>${sqlite.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- TestNG -->
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!-- ********************************************** -->
    <!-- ******************* BUILD ******************** -->
    <!-- ********************************************** -->

    <build>
        <defaultGoal>clean package install</defaultGoal>
        <extensions>
            <extension>
                <!-- Wagon -->
                <!-- Enables the use of FTP. -->
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ftp</artifactId>
                <version>${extension.wagon.version}</version>
            </extension>
        </extensions>
        <pluginManagement>
            <plugins>
                <!-- The following plugins always appear on the plugins list, even
                    when they have not been added to the project. -->
                <!-- This configuration block allows keeping them always updated. -->
                <plugin>
                    <!-- Dependency -->
                    <!-- Takes care of dependencies, both copying and showing their
                        info. -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${plugin.dependency.version}</version>
                </plugin>
                <plugin>
                    <!-- Assembly -->
                    <!-- Builds a distributable file from all the project components. -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${plugin.assembly.version}</version>
                </plugin>
                <plugin>
                    <!-- Release -->
                    <!-- Generates releases and updates the project. -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${plugin.release.version}</version>
                </plugin>
                <plugin>
                    <!-- Ant Run -->
                    <!-- Capable of handling Ant scripts. -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${plugin.ant.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <!-- Clean -->
                <!-- Cleans the output folder. -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${plugin.clean.version}</version>
            </plugin>
            <plugin>
                <!-- Resources -->
                <!-- Handles the project resources. -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${plugin.resources.version}</version>
            </plugin>
            <plugin>
                <!-- Compiler -->
                <!-- Handles the source code. -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${plugin.compiler.version}</version>
            </plugin>
            <plugin>
                <!-- Install -->
                <!-- Installs the project into the local Maven repository. -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>${plugin.install.version}</version>
            </plugin>
            <plugin>
                <!-- Enforcer -->
                <!-- Stops the project from being built if it does not comply with
                    a set of rules. -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${plugin.enforcer.version}</version>
                <executions>
                    <execution>
                        <id>enforce</id>
                        <configuration>
                            <rules>
                                <!-- Dependencies convergence. -->
                                <!-- This variant of the rule requires less configuration,
                                    making use of Maven's dependency resolver. -->
                                <requireUpperBoundDeps />
                                <!-- Not obsolete JDK. -->
                                <requireJavaVersion>
                                    <version>[1.7,)</version>
                                </requireJavaVersion>
                                <!-- No plugin without version. -->
                                <requirePluginVersions>
                                    <message>Best Practice is to always
                                        define
                                        plugin versions!</message>
                                    <banLatest>true</banLatest>
                                    <banRelease>true</banRelease>
                                    <banSnapshots>true</banSnapshots>
                                    <phases>clean,deploy,site,test,verify</phases>
                                </requirePluginVersions>
                                <!-- Source encoding should be set. -->
                                <requireProperty>
                                    <property>project.build.sourceEncoding</property>
                                    <message>Indicate the source
                                        encoding for the
                                        project.</message>
                                    <regex>.*</regex>
                                    <regexMessage>It should be a valid
                                        text
                                        encoding format.</regexMessage>
                                </requireProperty>
                                <!-- Report output encoding should be set. -->
                                <requireProperty>
                                    <property>project.reporting.outputEncoding</property>
                                    <message>Indicate the encoding for
                                        the
                                        reporting output.</message>
                                    <regex>.*</regex>
                                    <regexMessage>It should be a valid
                                        text
                                        encoding format.</regexMessage>
                                </requireProperty>
                                <!-- Source JDK should be set. -->
                                <requireProperty>
                                    <property>maven.compiler.source</property>
                                    <message>Indicate the source JDK.</message>
                                    <regex>\d+\.\d+[\.\d+]?.*</regex>
                                    <regexMessage>It should be a valid
                                        JDK
                                        version.</regexMessage>
                                </requireProperty>
                                <!-- Target JDK should be set. -->
                                <requireProperty>
                                    <property>maven.compiler.target</property>
                                    <message>Indicate the target JDK.</message>
                                    <regex>\d+\.\d+[\.\d+]?.*</regex>
                                    <regexMessage>It should be a valid
                                        JDK
                                        version.</regexMessage>
                                </requireProperty>
                                <!-- Manifest name should be given. -->
                                <requireProperty>
                                    <property>manifest.name</property>
                                    <message>Give a name for the
                                        manifest.</message>
                                    <regex>.*</regex>
                                    <regexMessage>It should be a valid
                                        name.</regexMessage>
                                </requireProperty>
                            </rules>
                        </configuration>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Failsafe -->
                <!-- Runs integration tests -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${plugin.failsafe.version}</version>
                <configuration>
                    <properties>
                        <property>
                            <name>usedefaultlisteners</name>
                            <key>false</key>
                        </property>
                        <property>
                            <name>suitename</name>
                            <value>${project.artifactId}_(${project.groupId})_Integration_Suite</value>
                        </property>
                    </properties>
                    <suiteXmlFiles>
                        <!-- Path to the integration tests suite file -->
                        <suiteXmlFile>${project.build.testOutputDirectory}/tests_maven_integration_suite.xml</suiteXmlFile>
                    </suiteXmlFiles>
                </configuration>
                <executions>
                    <execution>
                        <id>failsafe-integration-tests</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>failsafe-verify</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- JaCoCo -->
                <!-- Generates coverage reports from Surefire and Failsafe -->
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${plugin.jacoco.version}</version>
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-test-report</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Jar -->
                <!-- Generates the jar file -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${plugin.jar.version}</version>
                <configuration>
                    <archive>
                        <index>true</index>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <packageName>${project.groupId}</packageName>
                        </manifest>
                        <manifestEntries>
                            <name>${manifest.name}</name>
                            <url>${project.url}</url>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <!-- Site -->
                <!-- Generates the Maven Site -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${plugin.site.version}</version>
                <dependencies>
                    <dependency>
                        <!-- Docs Maven Skin -->
                        <groupId>com.wandrell.maven.skins</groupId>
                        <artifactId>docs-maven-skin</artifactId>
                        <version>${site.skin.version}</version>
                    </dependency>
                    <dependency>
                        <!-- Velocity -->
                        <groupId>org.apache.velocity</groupId>
                        <artifactId>velocity</artifactId>
                        <version>${plugin.site.velocity.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <!-- Relativizing the links has a tendency to end breaking them -->
                    <relativizeDecorationLinks>false</relativizeDecorationLinks>
                </configuration>
            </plugin>
            <plugin>
                <!-- Source -->
                <!-- Bundles the source into a jar -->
                <artifactId>maven-source-plugin</artifactId>
                <version>${plugin.source.version}</version>
                <executions>
                    <execution>
                        <!-- Generates the jar for the deployment -->
                        <id>attach-sources</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Javadoc -->
                <!-- Generates javadocs -->
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${plugin.javadoc.version}</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Deploy -->
                <!-- Takes care of the deployment phase -->
                <!-- It is set to generate and deploy a POM file along the artifact -->
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${plugin.deploy.version}</version>
                <executions>
                    <execution>
                        <id>deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                        <configuration>
                            <generatePom>true</generatePom>
                            <url>${project.distributionManagement.repository.url}</url>
                            <file>${project.build.directory}/${project.build.finalName}.jar</file>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Changes -->
                <!-- Takes care of the changes log -->
                <!-- It is set to also validate the changes log file -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-changes-plugin</artifactId>
                <version>${plugin.changes.version}</version>
                <executions>
                    <execution>
                        <id>check-changes</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>changes-check</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>validate-changes</id>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>changes-validate</goal>
                        </goals>
                        <configuration>
                            <failOnError>true</failOnError>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Surefire -->
                <!-- Runs unit tests -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${plugin.surefire.version}</version>
                <configuration>
                    <properties>
                        <property>
                            <!-- Default listeners disabled to avoid conflicts with
                                TestNG -->
                            <name>usedefaultlisteners</name>
                            <key>false</key>
                        </property>
                        <property>
                            <name>suitename</name>
                            <value>${project.artifactId}_(${project.groupId})_Unit_Suite</value>
                        </property>
                    </properties>
                    <suiteXmlFiles>
                        <!-- Path to the unit tests suite file -->
                        <suiteXmlFile>${project.build.testOutputDirectory}/tests_maven_unit_suite.xml</suiteXmlFile>
                    </suiteXmlFiles>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- ********************************************** -->
    <!-- ****************** REPORTS ******************* -->
    <!-- ********************************************** -->

    <reporting>
        <plugins>
            <plugin>
                <!-- Project Info -->
                <!-- Generates general information reports -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${plugin.reports.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>summary</report>
                            <report>license</report>
                            <report>modules</report>
                            <report>project-team</report>
                            <report>dependencies</report>
                            <report>dependency-info</report>
                            <report>dependency-management</report>
                            <report>plugins</report>
                            <report>plugin-management</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <!-- JXR -->
                <!-- Generates references to the source files, used by other reports -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>${plugin.jxr.version}</version>
            </plugin>
            <plugin>
                <!-- Site -->
                <!-- Generates the Maven Site -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${plugin.site.version}</version>
            </plugin>
            <plugin>
                <!-- Javadoc -->
                <!-- Generates the javadocs -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${plugin.javadoc.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>javadoc</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <!-- Changes -->
                <!-- Generates the changes report from the changes log -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-changes-plugin</artifactId>
                <version>${plugin.changes.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>changes-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <!-- Taglist -->
                <!-- Generates a report of all the temporal tags still on the code -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>taglist-maven-plugin</artifactId>
                <version>${plugin.taglist.version}</version>
                <configuration>
                    <tagListOptions>
                        <tagClasses>
                            <tagClass>
                                <displayName>Deprecation</displayName>
                                <tags>
                                    <tag>
                                        <matchString>deprecated</matchString>
                                        <matchType>ignoreCase</matchType>
                                    </tag>
                                </tags>
                            </tagClass>
                            <tagClass>
                                <displayName>Todo Work</displayName>
                                <tags>
                                    <tag>
                                        <matchString>todo</matchString>
                                        <matchType>ignoreCase</matchType>
                                    </tag>
                                    <tag>
                                        <matchString>FIXME</matchString>
                                        <matchType>exact</matchType>
                                    </tag>
                                </tags>
                            </tagClass>
                        </tagClasses>
                    </tagListOptions>
                </configuration>
            </plugin>
            <plugin>
                <!-- Checkstyle -->
                <!-- Checks that the source files comply with style standards -->
                <!-- It is using a customized rules file -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${plugin.checkstyle.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle</report>
                        </reports>
                    </reportSet>
                </reportSets>
                <configuration>
                    <!-- The customized rules file -->
                    <configLocation>${project.basedir}/src/config/checkstyle/checkstyle-rules.xml</configLocation>
                </configuration>
            </plugin>
            <plugin>
                <!-- FindBugs -->
                <!-- Checks for patterns which are prone to errors -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${plugin.findbugs.version}</version>
                <configuration>
                    <effort>Max</effort>
                    <threshold>Low</threshold>
                </configuration>
            </plugin>
            <plugin>
                <!-- PMD -->
                <!-- Checks that the code complies with a series of code quality
                    rules -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${plugin.pmd.version}</version>
                <configuration>
                    <linkXref>true</linkXref>
                    <!-- This will generate always the report, even if empty -->
                    <skipEmptyReport>false</skipEmptyReport>
                    <excludes>
                        <exclude>**/*Bean.java</exclude>
                        <exclude>**/generated/*.java</exclude>
                    </excludes>
                    <excludeRoots>
                        <excludeRoot>target/generated-sources/stubs</excludeRoot>
                    </excludeRoots>
                    <rulesets>
                        <ruleset>${project.basedir}/src/config/pmd/pmd-rules.xml</ruleset>
                    </rulesets>
                </configuration>
            </plugin>
            <plugin>
                <!-- Surefire -->
                <!-- Generates the unit tests report -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${plugin.surefire.version}</version>
            </plugin>
            <plugin>
                <!-- JaCoCo -->
                <!-- Generates the coverage report -->
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${plugin.jacoco.version}</version>
            </plugin>
            <plugin>
                <!-- JDepend -->
                <!-- Generates the dependencies report -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jdepend-maven-plugin</artifactId>
                <version>${plugin.jdepend.version}</version>
            </plugin>
        </plugins>
    </reporting>

</project>
