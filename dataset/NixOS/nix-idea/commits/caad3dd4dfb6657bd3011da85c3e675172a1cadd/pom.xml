<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.nixos.idea</groupId>
    <artifactId>nix-idea</artifactId>
    <version>0.2.0.1</version>
    <name>NixIDEA</name>
    <description>A Nix(nixpkgs/NixOS/nixops) language plugin for Intellij IDEA.</description>
    <packaging>jar</packaging>

    <properties>
        <vendor.url>http://nixos.org</vendor.url>
        <vendor.email>ed@cflags.cc</vendor.email>
        <vendor.name>NixOS</vendor.name>
        <idea.group>org.jetbrains</idea.group>
        <idea.artifact>idea-IC</idea.artifact>
        <idea.version>2017.1.4</idea.version>
        <jdk.home>${env.JDK_HOME}</jdk.home>
        <idea.lib>${project.build.directory}/vendor/${idea.artifact}/lib/</idea.lib>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${idea.group}</groupId>
            <artifactId>${idea.artifact}</artifactId>
            <version>${idea.version}</version>
            <type>zip</type>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <!-- HELPER: install fetched intellij-idea as artifact locally -->
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
                <goals>
                    <goal>install-file</goal>
                </goals>
                <configuration>
                    <packaging>zip</packaging>
                    <generatePom>true</generatePom>
                    <groupId>${idea.group}</groupId>
                    <artifactId>${idea.artifact}</artifactId>
                    <version>${idea.version}</version>
                    <file>${project.basedir}/vendor/${idea.artifact}.zip</file>
                </configuration>
            </plugin>

            <!-- HELPER: unpack stored artifact intellij-idea into target directory -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <configuration>
                    <artifactItems>
                        <artifactItem>
                            <groupId>${idea.group}</groupId>
                            <artifactId>${idea.artifact}</artifactId>
                            <version>${idea.version}</version>
                            <type>zip</type>
                            <outputDirectory>${project.build.directory}/vendor/</outputDirectory>
                            <includes>**/*.jar</includes>
                        </artifactItem>
                    </artifactItems>
                </configuration>
            </plugin>

            <!-- Tell the compile about the languge version and extra libraries -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <compilerArguments>
                        <extdirs>${idea.lib}</extdirs>
                    </compilerArguments>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!-- Add all source folders.. why maven-compiler-plugin cannot do this is beyond me -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.9.1</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/main/java</source>
                                <source>src/gen/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Run the actual plugin build as an ant task, since it is.. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>compile-forms</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <path id="maven.plugin.complete.classpath">
                                    <path refid="maven.plugin.classpath"/>
                                    <fileset dir="${idea.lib}">
                                        <include name="**/*.jar"/>
                                    </fileset>
                                </path>
                                <taskdef name="instrumentIdeaExtensions"
                                         classname="com.intellij.ant.InstrumentIdeaExtensions"
                                         classpathref="maven.plugin.complete.classpath"/>
                                <path id="sourcepath">
                                    <dirset dir="${project.basedir}">
                                        <include name="src/main/java"/>
                                        <include name="src/gen/java"/>
                                        <include name="src/main/resources"/>
                                    </dirset>
                                </path>
                                <instrumentIdeaExtensions destdir="${project.build.outputDirectory}"
                                                          extdirs="${idea.lib}">
                                    <classpath refid="maven.compile.classpath"/>
                                    <src refid="sourcepath"/>
                                </instrumentIdeaExtensions>
                            </target>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.openjdk</groupId>
                        <artifactId>tools</artifactId>
                        <version>1.7.0</version>
                        <scope>system</scope>
                        <systemPath>${jdk.home}/lib/tools.jar</systemPath>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- HELPER: Actually assemble the plugin -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <descriptors>
                        <descriptor>src/main/assembly/nix-idea.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>${project.name}-plugin</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <appendAssemblyId>false</appendAssemblyId>
                            <finalName>${project.name}-v${project.version}</finalName>
                            <attach>true</attach>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- HELPER: Use ProGuard to minmize plugin -->
            <plugin>
                <groupId>com.github.wvengen</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                <version>2.0.8</version>
                <executions>
                    <execution>
                        <phase>none</phase>
                        <goals>
                            <goal>proguard</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <injar>${project.name}-v${project.version}.zip</injar>
                    <outjar>${project.name}-v${project.version}-dist.zip</outjar>
                    <outputDirectory>${project.build.directory}</outputDirectory>
                    <options>
                        <option>-dontoptimize</option>
                        <option>-keep,includedescriptorclasses public class * { public protected *; }</option>
                    </options>
                    <libs>
                        <lib>${jdk.home}/jre/lib/rt.jar</lib>
                        <lib>${jdk.home}/jre/lib/jsse.jar</lib>
                        <lib>${idea.lib}</lib>
                    </libs>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
