<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.codehaus.sonar-plugins</groupId>
		<artifactId>parent</artifactId>
		<version>17</version>
	</parent>

	<groupId>org.sonar.plugins.coverity</groupId>
	<artifactId>coverity-sonar-plugin</artifactId>
	<packaging>sonar-plugin</packaging>
	<version>1.5.0</version>

	<name>Coverity</name>
	<description>Imports Coverity defects into SonarQube</description>
	<url>http://docs.codehaus.org/display/SONAR/Coverity+Plugin</url>
	<inceptionYear>2014</inceptionYear>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<sonar.version>5.1</sonar.version>
		<jdk.min.version>1.6</jdk.min.version>
		<cxf.version>2.6.1</cxf.version>
		<license.title>Coverity Sonar Plugin</license.title>
		<license.mailto>support@coverity.com</license.mailto>
	</properties>

	<organization>
		<name>Coverity, Inc.</name>
		<url>http://www.coverity.com</url>
	</organization>

	<developers>
		<developer>
			<id>frossi</id>
			<name>Franco Rossi</name>
			<timezone>-8</timezone>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:git://github.com/coverity/coverity-sonar-plugin.git</connection>
		<developerConnection>scm:git:git@github.com:coverity/coverity-sonar-plugin.git</developerConnection>
		<url>https://github.com/coverity/coverity-sonar-plugin</url>
		<tag>HEAD</tag>
	</scm>

	<dependencies>
		<dependency>
			<groupId>org.codehaus.sonar</groupId>
			<artifactId>sonar-plugin-api</artifactId>
			<version>${sonar.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- unit tests -->
		<dependency>
			<groupId>org.codehaus.sonar</groupId>
			<artifactId>sonar-testing-harness</artifactId>
			<version>${sonar.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easytesting</groupId>
			<artifactId>fest-assert</artifactId>
			<version>1.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-project</artifactId>
			<version>2.2.1</version>
			<scope>test</scope>
		</dependency>

		<!-- added-->
		<dependency>
			<groupId>com.sun.xml.wss</groupId>
			<artifactId>xws-security</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.messaging.saaj</groupId>
			<artifactId>saaj-impl</artifactId>
			<version>1.3.23</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.soap</groupId>
			<artifactId>saaj-api</artifactId>
			<version>1.3.5</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
        </dependency>
        <dependency>
            <groupId>javax.xml</groupId>
            <artifactId>xmldsig</artifactId>
            <version>1.0</version>
        </dependency>
		<dependency>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>sonar-maven-plugin</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.12</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.sonar</groupId>
			<artifactId>sonar-maven-plugin</artifactId>
			<version>5.1</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1.1</version>
		</dependency>
    </dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<id>test</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.basedir}/target/generated-sources</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.sonar</groupId>
				<artifactId>sonar-packaging-maven-plugin</artifactId>
				<version>1.9</version>
				<extensions>true</extensions>
				<configuration>
					<pluginClass>org.sonar.plugins.coverity.CoverityPlugin</pluginClass>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${jdk.min.version}</source>
					<target>${jdk.min.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<!-- UTF-8 bundles are not supported by Java, so they must be converted during build -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>native2ascii-maven-plugin</artifactId>
				<version>1.0-beta-1</version>
				<executions>
					<execution>
						<goals>
							<goal>native2ascii</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

            <plugin>

                <groupId>com.mycila.maven-license-plugin</groupId>
                <artifactId>maven-license-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>2.6</version>
			</plugin>

		</plugins>
	</build>

	<profiles>
		<profile>
			<id>jacoco</id>
			<activation>
				<property>
					<name>ENABLE_JACOCO</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.7.9</version>
						<executions>
							<execution>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!--
                        Using JaCoCo through Ant due to limitations in jacoco-maven-plugin:
                        https://github.com/jacoco/jacoco/issues/271
                        https://github.com/jacoco/jacoco/issues/430
                        https://github.com/jacoco/jacoco/issues/493
                    -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<dependencies>
							<dependency>
								<groupId>org.jacoco</groupId>
								<artifactId>org.jacoco.ant</artifactId>
								<version>0.7.9</version>
							</dependency>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>20020829</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>jacoco-report</id>
								<phase>verify</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<taskdef name="jacoco-report" classname="org.jacoco.ant.ReportTask"
												 classpathref="maven.plugin.classpath"/>
										<taskdef classpathref="maven.runtime.classpath"
												 resource="net/sf/antcontrib/antcontrib.properties"/>
										<available file="${project.build.directory}/jacoco.exec"
												   property="jacoco.exec.file.exists"/>
										<echo message="${project.build.directory}/jacoco.exec"/>
										<if>
											<equals arg1="${jacoco.exec.file.exists}" arg2="true"/>
											<then>
												<echo message="Executing jacoco report"/>
												<trycatch>
													<try>
														<jacoco-report>
															<executiondata>
																<file file="${project.build.directory}/jacoco.exec"/>
															</executiondata>
															<structure name="Coverity">
																<classfiles>
																	<fileset dir="${project.build.outputDirectory}"/>
																	<fileset
																			dir="${project.build.testOutputDirectory}"/>
																</classfiles>
																<sourcefiles encoding="${project.build.sourceEncoding}">
																	<fileset dir="${project.build.sourceDirectory}"/>
																	<fileset
																			dir="${project.build.testSourceDirectory}"/>
																</sourcefiles>
															</structure>
															<html
																	destdir="${project.reporting.outputDirectory}/jacoco"/>
															<xml
																	destfile="${project.reporting.outputDirectory}/jacoco/jacoco.xml"/>
														</jacoco-report>
													</try>
													<catch>
														<echo>skipping</echo>
													</catch>
												</trycatch>
											</then>
											<else>
												<echo message="No jacoco.exec file found."/>
											</else>
										</if>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<repositories>
        <repository>
            <id>sonar-plugin-local</id>
            <name>sonar-plugin-local</name>
            <url>http://artifactory.internal.synopsys.com:8081/artifactory/simple/sonar-plugin-local</url>
        </repository>
		<repository>
			<id>sonar</id>
			<name>SonarSource</name>
			<url>http://repository.sonarsource.org/content/repositories/sonar</url>
        </repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>sonar</id>
			<name>SonarSource</name>
			<url>http://repository.sonarsource.org/content/repositories/sonar</url>
		</pluginRepository>
	</pluginRepositories>
</project>
