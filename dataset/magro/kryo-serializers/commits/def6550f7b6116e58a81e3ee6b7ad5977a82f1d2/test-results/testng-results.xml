<testng-results>
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite">
    <groups>
    </groups>
    <test name="Surefire test">
      <class name="de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest">
        <test-method status="PASS" signature="testCGLibProxy()" name="testCGLibProxy" duration-ms="38" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCGLibProxyForExistingFormat()" name="testCGLibProxyForExistingFormat" duration-ms="15" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testContainerWithCGLibProxy()" name="testContainerWithCGLibProxy" duration-ms="6" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testProxiesFromFileRead()" name="testProxiesFromFileRead" duration-ms="3" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
      </class>
      <class name="de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializerTest">
        <test-method status="PASS" signature="testCopyEmpty()" name="testCopyEmpty" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testCopyRegular()" name="testCopyRegular" duration-ms="1" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testEmpty()" name="testEmpty" duration-ms="1" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testCopySingleton()" name="testCopySingleton" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testImmutableListSerializerAlreadyRegistered()" name="testImmutableListSerializerAlreadyRegistered" duration-ms="1" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testImmutableMapSerializerAlreadyRegistered()" name="testImmutableMapSerializerAlreadyRegistered" duration-ms="1" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testRegular()" name="testRegular" duration-ms="2" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testRegularMultipleElementsPerKey()" name="testRegularMultipleElementsPerKey" duration-ms="2" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testSingleton()" name="testSingleton" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
      </class>
      <class name="de.javakaffee.kryoserializers.jodatime.JodaLocalDateSerializerTest">
        <test-method status="PASS" signature="testCopyJodaLocalDate()" name="testCopyJodaLocalDate" duration-ms="1" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testJodaLocalDate()" name="testJodaLocalDate" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
      </class>
      <class name="de.javakaffee.kryoserializers.protobuf.ProtobufSerializerTest">
        <test-method status="PASS" signature="testNull()" name="testNull" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testGetAcceptsNull()" name="testGetAcceptsNull" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testSerializerWithMultipleInstances()" name="testSerializerWithMultipleInstances" duration-ms="16" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testSerializerWithMultipleInstancesDifferentTypes()" name="testSerializerWithMultipleInstancesDifferentTypes" duration-ms="2" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testSerializerWithProtoA()" name="testSerializerWithProtoA" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
      </class>
      <class name="de.javakaffee.kryoserializers.jodatime.JodaIntervalSerializerTest">
        <test-method status="PASS" signature="testCopyJodaDateTime()" name="testCopyJodaDateTime" duration-ms="11" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testJodaInterval()" name="testJodaInterval" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
      </class>
      <class name="de.javakaffee.kryoserializers.guava.ImmutableMapSerializerTest">
        <test-method status="PASS" signature="testCopyEmpty()" name="testCopyEmpty" duration-ms="2" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testCopyRegular()" name="testCopyRegular" duration-ms="1" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testEmpty()" name="testEmpty" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testCopySingleton()" name="testCopySingleton" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testEnum()" name="testEnum" duration-ms="1" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testRegular()" name="testRegular" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testSingleton()" name="testSingleton" duration-ms="1" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
      </class>
      <class name="de.javakaffee.kryoserializers.SubListSerializersTest">
        <test-method status="PASS" signature="testArrayListSubList()" name="testArrayListSubList" duration-ms="2" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testArrayListSubListSubList()" name="testArrayListSubListSubList" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testArrayListSubListWithSharedItems()" name="testArrayListSubListWithSharedItems" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopyArrayListSubList()" name="testCopyArrayListSubList" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopyArrayListSubListSubList()" name="testCopyArrayListSubListSubList" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopySubListSubList()" name="testCopySubListSubList" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopySubList()" name="testCopySubList" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testNestedArrayListSubListWithSharedItems_1()" name="testNestedArrayListSubListWithSharedItems_1" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testNestedArrayListSubListWithSharedItems_2()" name="testNestedArrayListSubListWithSharedItems_2" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testSubList()" name="testSubList" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testSubListSubList()" name="testSubListSubList" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
      </class>
      <class name="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest">
        <test-method status="PASS" signature="testCopyEmpty()" name="testCopyEmpty" duration-ms="1" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testCopyRegular()" name="testCopyRegular" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testCopyReverse()" name="testCopyReverse" duration-ms="1" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testCopyStringAsImmutableList()" name="testCopyStringAsImmutableList" duration-ms="1" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testCopySingleton()" name="testCopySingleton" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testCopyValues()" name="testCopyValues" duration-ms="1" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testCopySubList()" name="testCopySubList" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testRegular()" name="testRegular" duration-ms="1" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testEmpty()" name="testEmpty" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testReverse()" name="testReverse" duration-ms="1" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testSingleton()" name="testSingleton" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testStringAsImmutableList()" name="testStringAsImmutableList" duration-ms="1" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testValues()" name="testValues" duration-ms="1" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testSubList()" name="testSubList" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
      </class>
      <class name="de.javakaffee.kryoserializers.wicket.MiniMapSerializerTest">
        <test-method status="PASS" signature="testMiniMapAddEntriesAfterDeserialization()" name="testMiniMapAddEntriesAfterDeserialization" duration-ms="1" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testMiniMapEmpty()" name="testMiniMapEmpty" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testMiniMapExactNumberOfEntries()" name="testMiniMapExactNumberOfEntries" duration-ms="1" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testMiniMapLessThanMaxEntries()" name="testMiniMapLessThanMaxEntries" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
      </class>
      <class name="de.javakaffee.kryoserializers.FieldAnnotationAwareSerializerTest">
        <test-method status="PASS" signature="testExcludeFields()" name="testExcludeFields" duration-ms="20" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testIncludeFields()" name="testIncludeFields" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
      </class>
      <class name="de.javakaffee.kryoserializers.jodatime.JodaDateTimeSerializerTest">
        <test-method status="PASS" signature="testCopyJodaDateTime()" name="testCopyJodaDateTime" duration-ms="48" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testJodaDateTime()" name="testJodaDateTime" duration-ms="11" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
      </class>
      <class name="de.javakaffee.kryoserializers.guava.ImmutableSetSerializerTest">
        <test-method status="PASS" signature="testCopyRegular()" name="testCopyRegular" duration-ms="1" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testCopyEmpty()" name="testCopyEmpty" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testRegular()" name="testRegular" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testCopySingleton()" name="testCopySingleton" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testEmpty()" name="testEmpty" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testSingleton()" name="testSingleton" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testStringAsImmutableSet()" name="testStringAsImmutableSet" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
      </class>
      <class name="de.javakaffee.kryoserializers.wicket.WicketTest">
        <test-method status="PASS" signature="testFeedbackPanel()" name="testFeedbackPanel" duration-ms="20" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testMarkupContainerChildList()" name="testMarkupContainerChildList" duration-ms="7" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="afterTest()" name="afterTest" is-config="true" duration-ms="107" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
      </class>
      <class name="de.javakaffee.kryoserializers.EnumMapSerializerTest">
        <test-method status="PASS" signature="beforeTest()" name="beforeTest" is-config="true" duration-ms="26" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="beforeTest()" name="beforeTest" is-config="true" duration-ms="7" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="beforeTest()" name="beforeTest" is-config="true" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="setUp()" name="setUp" is-config="true" duration-ms="31" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="setUp()" name="setUp" is-config="true" duration-ms="3" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="setUp()" name="setUp" is-config="true" duration-ms="16" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="setUp()" name="setUp" is-config="true" duration-ms="4" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="beforeTest()" name="beforeTest" is-config="true" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="beforeTest()" name="beforeTest" is-config="true" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="beforeTest()" name="beforeTest" is-config="true" duration-ms="2" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="beforeTest()" name="beforeTest" is-config="true" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="setUp()" name="setUp" is-config="true" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="beforeTest()" name="beforeTest" is-config="true" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="beforeTest()" name="beforeTest" is-config="true" duration-ms="97" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopyEmpty()" name="testCopyEmpty" duration-ms="2" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <exception class="java.lang.ClassCastException">
            <message>
              <![CDATA[class de.javakaffee.kryoserializers.EnumMapSerializerTest$Colors != class de.javakaffee.kryoserializers.EnumMapSerializerTest$Vipers]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ClassCastException: class de.javakaffee.kryoserializers.EnumMapSerializerTest$Colors != class de.javakaffee.kryoserializers.EnumMapSerializerTest$Vipers
	at java.util.EnumMap.typeCheck(EnumMap.java:745)
	at java.util.EnumMap.put(EnumMap.java:267)
	at de.javakaffee.kryoserializers.EnumMapSerializerTest.testCopyEmpty(EnumMapSerializerTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:609)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:532)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:686)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1018)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:128)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.runWorkers(TestRunner.java:759)
	at org.testng.TestRunner.privateRun(TestRunner.java:592)
	at org.testng.TestRunner.run(TestRunner.java:486)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:332)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:327)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:299)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:912)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:876)
	at org.testng.TestNG.run(TestNG.java:784)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:136)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:145)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testDeepCopy()" name="testDeepCopy" duration-ms="11" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
      </class>
      <class name="de.javakaffee.kryoserializers.jodatime.JodaLocalDateTimeSerializerTest">
        <test-method status="PASS" signature="testCopyJodaLocalDateTime()" name="testCopyJodaLocalDateTime" duration-ms="2" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testJodaLocalDateTime()" name="testJodaLocalDateTime" duration-ms="0" started-at="2020-07-30T18:49:31Z" finished-at="2020-07-30T18:49:31Z">
        </test-method>
      </class>
      <class name="de.javakaffee.kryoserializers.KryoTest">
        <test-method status="PASS" signature="testBitSet()" name="testBitSet" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testClassSerializer()" name="testClassSerializer" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testClassWithoutDefaultConstructor()" name="testClassWithoutDefaultConstructor" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCollections()" name="testCollections" duration-ms="2" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopyEnumMap()" name="testCopyEnumMap" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopyBitSet()" name="testCopyBitSet" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopyEnumSet()" name="testCopyEnumSet" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopyForIterateMapSerializer()" name="testCopyForIterateMapSerializer" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopyGregorianCalendar()" name="testCopyGregorianCalendar" duration-ms="11" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopyJavaSqlDate()" name="testCopyJavaSqlDate" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopyJavaSqlTime()" name="testCopyJavaSqlTime" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopyJavaUtilArraysAsList()" name="testCopyJavaUtilArraysAsList" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopyJavaSqlTimestamp()" name="testCopyJavaSqlTimestamp" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopyJavaUtilCollectionsEmptySet()" name="testCopyJavaUtilCollectionsEmptySet" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopyJavaUtilCollectionsEmptyList()" name="testCopyJavaUtilCollectionsEmptyList" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopyJavaUtilCollectionsEmptyMap()" name="testCopyJavaUtilCollectionsEmptyMap" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopyJavaUtilDate()" name="testCopyJavaUtilDate" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopyJdkProxy()" name="testCopyJdkProxy" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopySingletonMap()" name="testCopySingletonMap" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopySingletonList()" name="testCopySingletonList" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopySingletonSet()" name="testCopySingletonSet" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopyRegex()" name="testCopyRegex" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopySynchronizedCollections(java.lang.Object)" name="testCopySynchronizedCollections" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[foo, bar]]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testCopySynchronizedCollections(java.lang.Object)" name="testCopySynchronizedCollections" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[bar, foo]]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testCopySynchronizedCollections(java.lang.Object)" name="testCopySynchronizedCollections" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{foo=bar}]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testCopyURI()" name="testCopyURI" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopyUUID()" name="testCopyUUID" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCopyUnmodifiableCollections(java.lang.Object)" name="testCopyUnmodifiableCollections" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[foo, bar]]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testCopyUnmodifiableCollections(java.lang.Object)" name="testCopyUnmodifiableCollections" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{foo=bar}]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testCopyUnmodifiableCollections(java.lang.Object)" name="testCopyUnmodifiableCollections" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[bar, foo]]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testCurrency()" name="testCurrency" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testCyclicDependencies()" name="testCyclicDependencies" duration-ms="2" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testEnumSet()" name="testEnumSet" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testEnumMap()" name="testEnumMap" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testGregorianCalendar()" name="testGregorianCalendar" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testInnerClass()" name="testInnerClass" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testJavaSqlDate()" name="testJavaSqlDate" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testJavaSqlTimestamp()" name="testJavaSqlTimestamp" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testJavaSqlTime()" name="testJavaSqlTime" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testJavaUtilArraysAsListBoxedPrimitives()" name="testJavaUtilArraysAsListBoxedPrimitives" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testJavaUtilArraysAsListEmail()" name="testJavaUtilArraysAsListEmail" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testJavaUtilArraysAsListEmpty()" name="testJavaUtilArraysAsListEmpty" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testJavaUtilArraysAsListPrimitiveArrayElement()" name="testJavaUtilArraysAsListPrimitiveArrayElement" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testJavaUtilCollectionsEmptyList()" name="testJavaUtilCollectionsEmptyList" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testJavaUtilCollectionsEmptySet()" name="testJavaUtilCollectionsEmptySet" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testJavaUtilArraysAsListString()" name="testJavaUtilArraysAsListString" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testJavaUtilCollectionsEmptyMap()" name="testJavaUtilCollectionsEmptyMap" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testJavaUtilDate()" name="testJavaUtilDate" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testJdkProxy()" name="testJdkProxy" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testPrivateClass()" name="testPrivateClass" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testMapWithIntConstructorOnly()" name="testMapWithIntConstructorOnly" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testRegex()" name="testRegex" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testSharedObjectIdentity(java.lang.String, java.lang.Object)" name="testSharedObjectIdentity" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[AtomicInteger]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[42]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testSharedObjectIdentity(java.lang.String, java.lang.Object)" name="testSharedObjectIdentity" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Email]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Email [_email=foo.bar@example.com, _name=foo bar]]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testSharedObjectIdentityWithArray(java.lang.String, java.lang.Object)" name="testSharedObjectIdentityWithArray" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[AtomicInteger]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[42]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testSharedObjectIdentityWithArray(java.lang.String, java.lang.Object)" name="testSharedObjectIdentityWithArray" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Email]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Email [_email=foo.bar@example.com, _name=foo bar]]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testSharedObjectIdentity_CounterHolder()" name="testSharedObjectIdentity_CounterHolder" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testSingletonList()" name="testSingletonList" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testSingletonMap()" name="testSingletonMap" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testStringBuilder()" name="testStringBuilder" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testSingletonSet()" name="testSingletonSet" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testStringBuffer()" name="testStringBuffer" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testSynchronizedCollections(java.lang.Object)" name="testSynchronizedCollections" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[foo, bar]]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testSynchronizedCollections(java.lang.Object)" name="testSynchronizedCollections" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[bar, foo]]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testSynchronizedCollections(java.lang.Object)" name="testSynchronizedCollections" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{foo=bar}]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class java.lang.Boolean]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class java.lang.StringBuilder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[42]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[42]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class java.lang.StringBuffer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[42]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class java.lang.Long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[42]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class java.lang.Integer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[42]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class java.lang.Character]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[c]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class java.lang.Class]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class java.lang.String]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class java.lang.Short]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[42]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class java.util.concurrent.atomic.AtomicLong]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[42]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class java.lang.Byte]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[98]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class java.math.BigDecimal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[42]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class java.lang.Double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[42.0]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class java.lang.Float]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[42.0]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class java.util.concurrent.atomic.AtomicInteger]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[42]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class [Ljava.lang.Integer;]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Integer;@550dbc7a]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.apache.commons.lang.mutable.MutableInt]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[42]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="2" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class java.util.Date]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Thu Jul 30 18:49:20 UTC 2020]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class [I]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[I@53fe15ff]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class java.util.ArrayList]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[foo]]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class java.util.Calendar]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[java.util.GregorianCalendar[time=1596134970916,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Etc/UTC",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2020,MONTH=6,WEEK_OF_YEAR=31,WEEK_OF_MONTH=5,DAY_OF_MONTH=30,DAY_OF_YEAR=212,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=6,HOUR_OF_DAY=18,MINUTE=49,SECOND=30,MILLISECOND=916,ZONE_OFFSET=0,DST_OFFSET=0]]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class java.util.Currency]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EUR]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class [J]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[J@5b1669c0]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class [F]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[F@8f2ef19]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class [S]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[S@7d0b7e3c]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class [D]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[D@69e153c5]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class [B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[B@2af004b]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class [I]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[I@17f62e33]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class [C]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[C@3e8c3cb]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class [Ljava.lang.String;]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@54422e18]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesAsSessionAttributes(java.lang.Class, java.lang.Object)" name="testTypesAsSessionAttributes" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class [Lde.javakaffee.kryoserializers.TestClasses$Person;]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lde.javakaffee.kryoserializers.TestClasses$Person;@3b0fe47a]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testTypesInContainerClass()" name="testTypesInContainerClass" duration-ms="3" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testURI()" name="testURI" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testUnmodifiableCollections(java.lang.Object)" name="testUnmodifiableCollections" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[foo, bar]]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testUnmodifiableCollections(java.lang.Object)" name="testUnmodifiableCollections" duration-ms="1" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[bar, foo]]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testUUID()" name="testUUID" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testUnmodifiableCollections(java.lang.Object)" name="testUnmodifiableCollections" duration-ms="0" started-at="2020-07-30T18:49:30Z" finished-at="2020-07-30T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{foo=bar}]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
    </test>
  </suite>
</testng-results>
