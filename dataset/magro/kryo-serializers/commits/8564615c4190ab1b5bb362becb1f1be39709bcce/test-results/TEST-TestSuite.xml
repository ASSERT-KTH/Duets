<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="TestSuite" time="1.07" tests="330" errors="0" skipped="0" failures="0">
  <properties>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="maven.test.error.ignore" value="true"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="sun.cpu.isalist" value=""/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/tmp/tmp9yp0bfhv/kryo-serializers/target/test-classes:/tmp/tmp9yp0bfhv/kryo-serializers/target/classes:/home/jdbl/.m2/repository/com/esotericsoftware/kryo/4.0.2/kryo-4.0.2.jar:/home/jdbl/.m2/repository/com/esotericsoftware/reflectasm/1.11.3/reflectasm-1.11.3.jar:/home/jdbl/.m2/repository/com/esotericsoftware/minlog/1.3.0/minlog-1.3.0.jar:/home/jdbl/.m2/repository/org/objenesis/objenesis/2.5.1/objenesis-2.5.1.jar:/home/jdbl/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/jdbl/.m2/repository/joda-time/joda-time/1.6.2/joda-time-1.6.2.jar:/home/jdbl/.m2/repository/cglib/cglib/3.1/cglib-3.1.jar:/home/jdbl/.m2/repository/org/ow2/asm/asm/4.2/asm-4.2.jar:/home/jdbl/.m2/repository/org/apache/wicket/wicket/1.4.17/wicket-1.4.17.jar:/home/jdbl/.m2/repository/org/slf4j/slf4j-api/1.5.8/slf4j-api-1.5.8.jar:/home/jdbl/.m2/repository/com/google/guava/guava/17.0/guava-17.0.jar:/home/jdbl/.m2/repository/com/github/andrewoma/dexx/collection/0.6/collection-0.6.jar:/home/jdbl/.m2/repository/org/testng/testng/6.8.21/testng-6.8.21.jar:/home/jdbl/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/home/jdbl/.m2/repository/com/beust/jcommander/1.27/jcommander-1.27.jar:/home/jdbl/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/jdbl/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/jdbl/.m2/repository/org/slf4j/slf4j-simple/1.5.8/slf4j-simple-1.5.8.jar:/home/jdbl/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.javadoc.skip" value="true"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value="Etc/UTC"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="os.name" value="Linux"/>
    <property name="rat.skip" value="true"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="/usr/local/openjdk-8/jre/lib/amd64"/>
    <property name="sun.java.command" value="/tmp/tmp9yp0bfhv/kryo-serializers/target/surefire/surefirebooter5122281256421609625.jar /tmp/tmp9yp0bfhv/kryo-serializers/target/surefire 2020-07-30T18-53-51_894-jvmRun1 surefire8478942359601318076tmp surefire_05058260252249487857tmp"/>
    <property name="surefire.test.class.path" value="/tmp/tmp9yp0bfhv/kryo-serializers/target/test-classes:/tmp/tmp9yp0bfhv/kryo-serializers/target/classes:/home/jdbl/.m2/repository/com/esotericsoftware/kryo/4.0.2/kryo-4.0.2.jar:/home/jdbl/.m2/repository/com/esotericsoftware/reflectasm/1.11.3/reflectasm-1.11.3.jar:/home/jdbl/.m2/repository/com/esotericsoftware/minlog/1.3.0/minlog-1.3.0.jar:/home/jdbl/.m2/repository/org/objenesis/objenesis/2.5.1/objenesis-2.5.1.jar:/home/jdbl/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/jdbl/.m2/repository/joda-time/joda-time/1.6.2/joda-time-1.6.2.jar:/home/jdbl/.m2/repository/cglib/cglib/3.1/cglib-3.1.jar:/home/jdbl/.m2/repository/org/ow2/asm/asm/4.2/asm-4.2.jar:/home/jdbl/.m2/repository/org/apache/wicket/wicket/1.4.17/wicket-1.4.17.jar:/home/jdbl/.m2/repository/org/slf4j/slf4j-api/1.5.8/slf4j-api-1.5.8.jar:/home/jdbl/.m2/repository/com/google/guava/guava/17.0/guava-17.0.jar:/home/jdbl/.m2/repository/com/github/andrewoma/dexx/collection/0.6/collection-0.6.jar:/home/jdbl/.m2/repository/org/testng/testng/6.8.21/testng-6.8.21.jar:/home/jdbl/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar:/home/jdbl/.m2/repository/com/beust/jcommander/1.27/jcommander-1.27.jar:/home/jdbl/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/jdbl/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/jdbl/.m2/repository/org/slf4j/slf4j-simple/1.5.8/slf4j-simple-1.5.8.jar:/home/jdbl/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/jdbl"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.home" value="/usr/local/openjdk-8/jre"/>
    <property name="basedir" value="/tmp/tmp9yp0bfhv/kryo-serializers"/>
    <property name="file.separator" value="/"/>
    <property name="line.separator" value="&#10;"/>
    <property name="source.skip" value="true"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="surefire.real.class.path" value="/tmp/tmp9yp0bfhv/kryo-serializers/target/surefire/surefirebooter5122281256421609625.jar"/>
    <property name="sun.boot.class.path" value="/usr/local/openjdk-8/jre/lib/resources.jar:/usr/local/openjdk-8/jre/lib/rt.jar:/usr/local/openjdk-8/jre/lib/sunrsasign.jar:/usr/local/openjdk-8/jre/lib/jsse.jar:/usr/local/openjdk-8/jre/lib/jce.jar:/usr/local/openjdk-8/jre/lib/charsets.jar:/usr/local/openjdk-8/jre/lib/jfr.jar:/usr/local/openjdk-8/jre/classes"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="1.8.0_262-b10"/>
    <property name="user.name" value="jdbl"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="4.15.0-109-generic"/>
    <property name="java.endorsed.dirs" value="/usr/local/openjdk-8/jre/lib/endorsed"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="/home/jdbl/.m2/repository"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="java.version" value="1.8.0_262"/>
    <property name="user.dir" value="/tmp/tmp9yp0bfhv/kryo-serializers"/>
    <property name="os.arch" value="amd64"/>
    <property name="license.skip" value="true"/>
    <property name="animal.sniffer.skip" value="true"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="25.262-b10"/>
    <property name="java.ext.dirs" value="/usr/local/openjdk-8/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="52.0"/>
    <property name="maven.test.failure.ignore" value="true"/>
  </properties>
  <testcase name="testCopyEmpty" classname="de.javakaffee.kryoserializers.dexx.SetSerializerTest" time="0.001">
    <system-out><![CDATA[Configuring TestNG with: TestNG60Configurator
]]></system-out>
    <system-err><![CDATA[53 [main] INFO org.apache.wicket.Application - [WicketTest$2] init: Wicket core library initializer
54 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=IBehaviorListener, method=public abstract void org.apache.wicket.behavior.IBehaviorListener.onRequest()]
54 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=IBehaviorListener, method=public abstract void org.apache.wicket.behavior.IBehaviorListener.onRequest()]
54 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=IFormSubmitListener, method=public abstract void org.apache.wicket.markup.html.form.IFormSubmitListener.onFormSubmitted()]
54 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=IFormSubmitListener, method=public abstract void org.apache.wicket.markup.html.form.IFormSubmitListener.onFormSubmitted()]
54 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=ILinkListener, method=public abstract void org.apache.wicket.markup.html.link.ILinkListener.onLinkClicked()]
54 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=ILinkListener, method=public abstract void org.apache.wicket.markup.html.link.ILinkListener.onLinkClicked()]
54 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=IOnChangeListener, method=public abstract void org.apache.wicket.markup.html.form.IOnChangeListener.onSelectionChanged()]
54 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=IOnChangeListener, method=public abstract void org.apache.wicket.markup.html.form.IOnChangeListener.onSelectionChanged()]
54 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=IRedirectListener, method=public abstract void org.apache.wicket.IRedirectListener.onRedirect()]
54 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=IRedirectListener, method=public abstract void org.apache.wicket.IRedirectListener.onRedirect()]
55 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=IResourceListener, method=public abstract void org.apache.wicket.IResourceListener.onResourceRequested()]
55 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=IResourceListener, method=public abstract void org.apache.wicket.IResourceListener.onResourceRequested()]
55 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=IActivePageBehaviorListener, method=public abstract void org.apache.wicket.behavior.IBehaviorListener.onRequest()]
55 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=IActivePageBehaviorListener, method=public abstract void org.apache.wicket.behavior.IBehaviorListener.onRequest()]
55 [main] INFO org.apache.wicket.protocol.http.WebApplication - [WicketTest$2] Started Wicket version 1.4.17 in development mode
********************************************************************
*** WARNING: Wicket is running in DEVELOPMENT mode.              ***
***                               ^^^^^^^^^^^                    ***
*** Do NOT deploy to your live server(s) without changing this.  ***
*** See Application#getConfigurationType() for more information. ***
********************************************************************
]]></system-err>
  </testcase>
  <testcase name="testCopyRegular" classname="de.javakaffee.kryoserializers.dexx.SetSerializerTest" time="0"/>
  <testcase name="testEmpty" classname="de.javakaffee.kryoserializers.dexx.SetSerializerTest" time="0"/>
  <testcase name="testRegular" classname="de.javakaffee.kryoserializers.dexx.SetSerializerTest" time="0"/>
  <testcase name="testArrayListSubList" classname="de.javakaffee.kryoserializers.SubListSerializersTest" time="0"/>
  <testcase name="testArrayListSubListSubList" classname="de.javakaffee.kryoserializers.SubListSerializersTest" time="0"/>
  <testcase name="testArrayListSubListWithSharedItems" classname="de.javakaffee.kryoserializers.SubListSerializersTest" time="0"/>
  <testcase name="testCopyArrayListSubList" classname="de.javakaffee.kryoserializers.SubListSerializersTest" time="0"/>
  <testcase name="testCopyArrayListSubListSubList" classname="de.javakaffee.kryoserializers.SubListSerializersTest" time="0"/>
  <testcase name="testCopySubList" classname="de.javakaffee.kryoserializers.SubListSerializersTest" time="0"/>
  <testcase name="testCopySubListSubList" classname="de.javakaffee.kryoserializers.SubListSerializersTest" time="0"/>
  <testcase name="testNestedArrayListSubListWithSharedItems_1" classname="de.javakaffee.kryoserializers.SubListSerializersTest" time="0"/>
  <testcase name="testNestedArrayListSubListWithSharedItems_2" classname="de.javakaffee.kryoserializers.SubListSerializersTest" time="0"/>
  <testcase name="testSubList" classname="de.javakaffee.kryoserializers.SubListSerializersTest" time="0"/>
  <testcase name="testSubListSubList" classname="de.javakaffee.kryoserializers.SubListSerializersTest" time="0"/>
  <testcase name="testCopyEmpty" classname="de.javakaffee.kryoserializers.dexx.MapSerializerTest" time="0"/>
  <testcase name="testCopyRegular" classname="de.javakaffee.kryoserializers.dexx.MapSerializerTest" time="0"/>
  <testcase name="testEmpty" classname="de.javakaffee.kryoserializers.dexx.MapSerializerTest" time="0.006"/>
  <testcase name="testRegular" classname="de.javakaffee.kryoserializers.dexx.MapSerializerTest" time="0"/>
  <testcase name="testCopyCopyOfIterable" classname="de.javakaffee.kryoserializers.dexx.ListSerializerTest" time="0.001"/>
  <testcase name="testCopyEmpty" classname="de.javakaffee.kryoserializers.dexx.ListSerializerTest" time="0"/>
  <testcase name="testCopyOfIterable" classname="de.javakaffee.kryoserializers.dexx.ListSerializerTest" time="0"/>
  <testcase name="testCopyRegular" classname="de.javakaffee.kryoserializers.dexx.ListSerializerTest" time="0.001"/>
  <testcase name="testEmpty" classname="de.javakaffee.kryoserializers.dexx.ListSerializerTest" time="0"/>
  <testcase name="testRegular" classname="de.javakaffee.kryoserializers.dexx.ListSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@53fdffa1](1)" classname="de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializerTest" time="0.001"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@7fee8714](2)" classname="de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializerTest" time="0.001"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@3f6b0be5](3)" classname="de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@48f278eb](4)" classname="de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializerTest" time="0.001"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@1a18644](5)" classname="de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@6cd28fa7](6)" classname="de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@58695725](7)" classname="de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializerTest" time="0.001"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@25fb8912](8)" classname="de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@7bd4937b](9)" classname="de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializerTest" time="0.001"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@58d75e99](1)" classname="de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@306e95ec](2)" classname="de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializerTest" time="0.001"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@4f2b503c](3)" classname="de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@e15b7e8](4)" classname="de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@2ed2d9cb](5)" classname="de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializerTest" time="0.002"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@342c38f8](6)" classname="de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@485966cc](7)" classname="de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@57cf54e1](8)" classname="de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@17497425](9)" classname="de.javakaffee.kryoserializers.guava.LinkedListMultimapSerializerTest" time="0"/>
  <testcase name="testCopyEmpty" classname="de.javakaffee.kryoserializers.guava.ImmutableSetSerializerTest" time="0"/>
  <testcase name="testCopyRegular" classname="de.javakaffee.kryoserializers.guava.ImmutableSetSerializerTest" time="0"/>
  <testcase name="testCopySingleton" classname="de.javakaffee.kryoserializers.guava.ImmutableSetSerializerTest" time="0"/>
  <testcase name="testEmpty" classname="de.javakaffee.kryoserializers.guava.ImmutableSetSerializerTest" time="0.001"/>
  <testcase name="testRegular" classname="de.javakaffee.kryoserializers.guava.ImmutableSetSerializerTest" time="0"/>
  <testcase name="testSingleton" classname="de.javakaffee.kryoserializers.guava.ImmutableSetSerializerTest" time="0"/>
  <testcase name="testStringAsImmutableSet" classname="de.javakaffee.kryoserializers.guava.ImmutableSetSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@290222c1](1)" classname="de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializerTest" time="0.001"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@54a7079e](2)" classname="de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializerTest" time="0.001"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@4b8ee4de](3)" classname="de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@1151e434](4)" classname="de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@55634720](5)" classname="de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@428640fa](6)" classname="de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializerTest" time="0.001"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@29215f06](7)" classname="de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@6bd61f98](8)" classname="de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@b9b00e0](9)" classname="de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@72e5a8e](1)" classname="de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@52b1beb6](2)" classname="de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@783a467b](3)" classname="de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@771a660](4)" classname="de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@3f6f6701](5)" classname="de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@1ed6388a](6)" classname="de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@4f80542f](7)" classname="de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@5e600dd5](8)" classname="de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializerTest" time="0.001"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@2e3967ea](9)" classname="de.javakaffee.kryoserializers.guava.ArrayListMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@4a883b15](1)" classname="de.javakaffee.kryoserializers.guava.HashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@5677323c](2)" classname="de.javakaffee.kryoserializers.guava.HashMultimapSerializerTest" time="0.001"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@4d154ccd](3)" classname="de.javakaffee.kryoserializers.guava.HashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@1e0b4072](4)" classname="de.javakaffee.kryoserializers.guava.HashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@4b45a2f5](5)" classname="de.javakaffee.kryoserializers.guava.HashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@41a0aa7d](6)" classname="de.javakaffee.kryoserializers.guava.HashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@45099dd3](7)" classname="de.javakaffee.kryoserializers.guava.HashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@6574a52c](8)" classname="de.javakaffee.kryoserializers.guava.HashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@60099951](9)" classname="de.javakaffee.kryoserializers.guava.HashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@368247b9](1)" classname="de.javakaffee.kryoserializers.guava.HashMultimapSerializerTest" time="0.001"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@55a147cc](2)" classname="de.javakaffee.kryoserializers.guava.HashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@3c77d488](3)" classname="de.javakaffee.kryoserializers.guava.HashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@d86a6f](4)" classname="de.javakaffee.kryoserializers.guava.HashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@3646a422](5)" classname="de.javakaffee.kryoserializers.guava.HashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@2e385cce](6)" classname="de.javakaffee.kryoserializers.guava.HashMultimapSerializerTest" time="0.001"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@2a7f1f10](7)" classname="de.javakaffee.kryoserializers.guava.HashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@26d9b808](8)" classname="de.javakaffee.kryoserializers.guava.HashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@7526515b](9)" classname="de.javakaffee.kryoserializers.guava.HashMultimapSerializerTest" time="0"/>
  <testcase name="testCopyEmpty" classname="de.javakaffee.kryoserializers.guava.ImmutableSortedMapSerializerTest" time="0"/>
  <testcase name="testCopyRegular" classname="de.javakaffee.kryoserializers.guava.ImmutableSortedMapSerializerTest" time="0"/>
  <testcase name="testCopySingleton" classname="de.javakaffee.kryoserializers.guava.ImmutableSortedMapSerializerTest" time="0"/>
  <testcase name="testDescending" classname="de.javakaffee.kryoserializers.guava.ImmutableSortedMapSerializerTest" time="0.007"/>
  <testcase name="testEmpty" classname="de.javakaffee.kryoserializers.guava.ImmutableSortedMapSerializerTest" time="0.001"/>
  <testcase name="testEnum" classname="de.javakaffee.kryoserializers.guava.ImmutableSortedMapSerializerTest" time="0.001"/>
  <testcase name="testRegular" classname="de.javakaffee.kryoserializers.guava.ImmutableSortedMapSerializerTest" time="0"/>
  <testcase name="testSingleton" classname="de.javakaffee.kryoserializers.guava.ImmutableSortedMapSerializerTest" time="0"/>
  <testcase name="testCopyEmpty" classname="de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializerTest" time="0"/>
  <testcase name="testCopyImmutableListMultimap" classname="de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializerTest" time="0"/>
  <testcase name="testCopyImmutableListMultimapEmpty" classname="de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializerTest" time="0"/>
  <testcase name="testCopyImmutableSetMultimap" classname="de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializerTest" time="0"/>
  <testcase name="testCopyImmutableSetMultimapEmpty" classname="de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializerTest" time="0"/>
  <testcase name="testCopyRegular" classname="de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializerTest" time="0"/>
  <testcase name="testCopySingleton" classname="de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializerTest" time="0"/>
  <testcase name="testImmutableListMultimap" classname="de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializerTest" time="0.002"/>
  <testcase name="testImmutableListMultimapEmpty" classname="de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializerTest" time="0"/>
  <testcase name="testImmutableListMultimapMultipleElementsPerKey" classname="de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializerTest" time="0"/>
  <testcase name="testImmutableListMultimapSingleton" classname="de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializerTest" time="0"/>
  <testcase name="testImmutableListSerializerAlreadyRegistered" classname="de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializerTest" time="0.001"/>
  <testcase name="testImmutableMapSerializerAlreadyRegistered" classname="de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializerTest" time="0"/>
  <testcase name="testImmutableSetMultimap" classname="de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializerTest" time="0"/>
  <testcase name="testImmutableSetMultimapEmpty" classname="de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializerTest" time="0"/>
  <testcase name="testImmutableSetMultimapMultipleElementsPerKey" classname="de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializerTest" time="0"/>
  <testcase name="testImmutableSetMultimapSingleton" classname="de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializerTest" time="0"/>
  <testcase name="testImmutableSetSerializerAlreadyRegistered" classname="de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializerTest" time="0"/>
  <testcase name="testRegular" classname="de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializerTest" time="0.001"/>
  <testcase name="testRegularEmpty" classname="de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializerTest" time="0"/>
  <testcase name="testRegularMultipleElementsPerKey" classname="de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializerTest" time="0.001"/>
  <testcase name="testRegularSingleton" classname="de.javakaffee.kryoserializers.guava.ImmutableMultimapSerializerTest" time="0"/>
  <testcase name="testCopyEmptySkipList" classname="de.javakaffee.kryoserializers.guava.UnmodifiableNavigableSetSerializerTest" time="0.002"/>
  <testcase name="testCopyEmptyTreeSet" classname="de.javakaffee.kryoserializers.guava.UnmodifiableNavigableSetSerializerTest" time="0"/>
  <testcase name="testCopyPopulatedSkipList" classname="de.javakaffee.kryoserializers.guava.UnmodifiableNavigableSetSerializerTest" time="0.001"/>
  <testcase name="testCopyPopulatedTreeSet" classname="de.javakaffee.kryoserializers.guava.UnmodifiableNavigableSetSerializerTest" time="0"/>
  <testcase name="testEmptySkipList" classname="de.javakaffee.kryoserializers.guava.UnmodifiableNavigableSetSerializerTest" time="0.001"/>
  <testcase name="testEmptyTreeSet" classname="de.javakaffee.kryoserializers.guava.UnmodifiableNavigableSetSerializerTest" time="0"/>
  <testcase name="testPopulatedSkipList" classname="de.javakaffee.kryoserializers.guava.UnmodifiableNavigableSetSerializerTest" time="0"/>
  <testcase name="testPopulatedTreeSet" classname="de.javakaffee.kryoserializers.guava.UnmodifiableNavigableSetSerializerTest" time="0"/>
  <testcase name="testDifferentKeyComparator" classname="de.javakaffee.kryoserializers.guava.TreeMultimapSerializerTest" time="0.008"/>
  <testcase name="testDifferentValueComparator" classname="de.javakaffee.kryoserializers.guava.TreeMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@55de24cc](1)" classname="de.javakaffee.kryoserializers.guava.TreeMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@69c81773](2)" classname="de.javakaffee.kryoserializers.guava.TreeMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@c05fddc](3)" classname="de.javakaffee.kryoserializers.guava.TreeMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@7b4c50bc](4)" classname="de.javakaffee.kryoserializers.guava.TreeMultimapSerializerTest" time="0.001"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@60f00693](5)" classname="de.javakaffee.kryoserializers.guava.TreeMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@1a4927d6](1)" classname="de.javakaffee.kryoserializers.guava.TreeMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@97e93f1](2)" classname="de.javakaffee.kryoserializers.guava.TreeMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@16150369](3)" classname="de.javakaffee.kryoserializers.guava.TreeMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@3932c79a](4)" classname="de.javakaffee.kryoserializers.guava.TreeMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@34bde49d](5)" classname="de.javakaffee.kryoserializers.guava.TreeMultimapSerializerTest" time="0"/>
  <testcase name="testCopyEmpty" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0"/>
  <testcase name="testCopyRegular" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0"/>
  <testcase name="testCopyReverse" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0"/>
  <testcase name="testCopySingleton" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0"/>
  <testcase name="testCopyStringAsImmutableList" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0"/>
  <testcase name="testCopySubList" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0"/>
  <testcase name="testCopyValues" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0"/>
  <testcase name="testEmpty" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0.001"/>
  <testcase name="testRegular" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0"/>
  <testcase name="testReverse" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0"/>
  <testcase name="testSingleton" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0"/>
  <testcase name="testStringAsImmutableList" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0.001"/>
  <testcase name="testSubList" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0"/>
  <testcase name="testValues" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0.001"/>
  <testcase name="testCopyEmptyRandomAccessReverseList" classname="de.javakaffee.kryoserializers.guava.ReverseListSerializerTest" time="0.001"/>
  <testcase name="testCopyEmptyReverseList" classname="de.javakaffee.kryoserializers.guava.ReverseListSerializerTest" time="0.001"/>
  <testcase name="testCopyRegularRandomAccessReverseList" classname="de.javakaffee.kryoserializers.guava.ReverseListSerializerTest" time="0.001"/>
  <testcase name="testCopyRegularReverseList" classname="de.javakaffee.kryoserializers.guava.ReverseListSerializerTest" time="0.002"/>
  <testcase name="testCopySingletonRandomAccessReverseList" classname="de.javakaffee.kryoserializers.guava.ReverseListSerializerTest" time="0"/>
  <testcase name="testCopySingletonReverseList" classname="de.javakaffee.kryoserializers.guava.ReverseListSerializerTest" time="0"/>
  <testcase name="testEmptyRandomAccessReverseList" classname="de.javakaffee.kryoserializers.guava.ReverseListSerializerTest" time="0"/>
  <testcase name="testEmptyReverseList" classname="de.javakaffee.kryoserializers.guava.ReverseListSerializerTest" time="0"/>
  <testcase name="testRegularRandomAccessReverseList" classname="de.javakaffee.kryoserializers.guava.ReverseListSerializerTest" time="0.001"/>
  <testcase name="testRegularReverseList" classname="de.javakaffee.kryoserializers.guava.ReverseListSerializerTest" time="0"/>
  <testcase name="testSingletonRandomAccessReverseList" classname="de.javakaffee.kryoserializers.guava.ReverseListSerializerTest" time="0"/>
  <testcase name="testSingletonReverseList" classname="de.javakaffee.kryoserializers.guava.ReverseListSerializerTest" time="0"/>
  <testcase name="testCopyEmpty" classname="de.javakaffee.kryoserializers.guava.ImmutableMapSerializerTest" time="0"/>
  <testcase name="testCopyRegular" classname="de.javakaffee.kryoserializers.guava.ImmutableMapSerializerTest" time="0"/>
  <testcase name="testCopySingleton" classname="de.javakaffee.kryoserializers.guava.ImmutableMapSerializerTest" time="0"/>
  <testcase name="testEmpty" classname="de.javakaffee.kryoserializers.guava.ImmutableMapSerializerTest" time="0"/>
  <testcase name="testEnum" classname="de.javakaffee.kryoserializers.guava.ImmutableMapSerializerTest" time="0.001"/>
  <testcase name="testRegular" classname="de.javakaffee.kryoserializers.guava.ImmutableMapSerializerTest" time="0"/>
  <testcase name="testSingleton" classname="de.javakaffee.kryoserializers.guava.ImmutableMapSerializerTest" time="0"/>
  <testcase name="testCopyDescending" classname="de.javakaffee.kryoserializers.guava.ImmutableSortedSetSerializerTest" time="0"/>
  <testcase name="testCopyEmpty" classname="de.javakaffee.kryoserializers.guava.ImmutableSortedSetSerializerTest" time="0"/>
  <testcase name="testCopyRegular" classname="de.javakaffee.kryoserializers.guava.ImmutableSortedSetSerializerTest" time="0"/>
  <testcase name="testCopySingleton" classname="de.javakaffee.kryoserializers.guava.ImmutableSortedSetSerializerTest" time="0"/>
  <testcase name="testDescending" classname="de.javakaffee.kryoserializers.guava.ImmutableSortedSetSerializerTest" time="0.001"/>
  <testcase name="testEmpty" classname="de.javakaffee.kryoserializers.guava.ImmutableSortedSetSerializerTest" time="0.001"/>
  <testcase name="testRegular" classname="de.javakaffee.kryoserializers.guava.ImmutableSortedSetSerializerTest" time="0"/>
  <testcase name="testSingleton" classname="de.javakaffee.kryoserializers.guava.ImmutableSortedSetSerializerTest" time="0"/>
  <testcase name="testStringAsImmutableSortedSet" classname="de.javakaffee.kryoserializers.guava.ImmutableSortedSetSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@13526e59](1)" classname="de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializerTest" time="0.001"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@10289886](2)" classname="de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializerTest" time="0.001"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@3e78b6a5](3)" classname="de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@7975d1d8](4)" classname="de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@5167f57d](5)" classname="de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializerTest" time="0.001"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@3e2055d6](6)" classname="de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@50f6ac94](7)" classname="de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@7f2cfe3f](8)" classname="de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializerTest" time="0.001"/>
  <testcase name="testMultimap[[Ljava.lang.Object;@32115b28](9)" classname="de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@7d9f158f](1)" classname="de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@61710c6](2)" classname="de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@4a07d605](3)" classname="de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializerTest" time="0.001"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@2bdd8394](4)" classname="de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@2f01783a](5)" classname="de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@a8ef162](6)" classname="de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@7fd7a283](7)" classname="de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@54e041a4](8)" classname="de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializerTest" time="0"/>
  <testcase name="testMultimapCopy[[Ljava.lang.Object;@18317edc](9)" classname="de.javakaffee.kryoserializers.guava.LinkedHashMultimapSerializerTest" time="0"/>
  <testcase name="testGetAcceptsNull" classname="de.javakaffee.kryoserializers.protobuf.ProtobufSerializerTest" time="0.001"/>
  <testcase name="testNull" classname="de.javakaffee.kryoserializers.protobuf.ProtobufSerializerTest" time="0"/>
  <testcase name="testSerializerWithMultipleInstances" classname="de.javakaffee.kryoserializers.protobuf.ProtobufSerializerTest" time="0.028"/>
  <testcase name="testSerializerWithMultipleInstancesDifferentTypes" classname="de.javakaffee.kryoserializers.protobuf.ProtobufSerializerTest" time="0.001"/>
  <testcase name="testSerializerWithProtoA" classname="de.javakaffee.kryoserializers.protobuf.ProtobufSerializerTest" time="0"/>
  <testcase name="testExcludeFields" classname="de.javakaffee.kryoserializers.FieldAnnotationAwareSerializerTest" time="0.003"/>
  <testcase name="testIncludeFields" classname="de.javakaffee.kryoserializers.FieldAnnotationAwareSerializerTest" time="0"/>
  <testcase name="testBasicRoundTrip" classname="de.javakaffee.kryoserializers.UnicodeBlockSerializerTest" time="0"/>
  <testcase name="testCopyContainingObject" classname="de.javakaffee.kryoserializers.UnicodeBlockSerializerTest" time="0.002"/>
  <testcase name="testDeserializingUnknownInstanceReturnsNull" classname="de.javakaffee.kryoserializers.UnicodeBlockSerializerTest" time="0"/>
  <testcase name="testFeedbackPanel" classname="de.javakaffee.kryoserializers.wicket.WicketTest" time="0.011"/>
  <testcase name="testMarkupContainerChildList" classname="de.javakaffee.kryoserializers.wicket.WicketTest" time="0.003"/>
  <testcase name="testMiniMapAddEntriesAfterDeserialization" classname="de.javakaffee.kryoserializers.wicket.MiniMapSerializerTest" time="0.001"/>
  <testcase name="testMiniMapEmpty" classname="de.javakaffee.kryoserializers.wicket.MiniMapSerializerTest" time="0"/>
  <testcase name="testMiniMapExactNumberOfEntries" classname="de.javakaffee.kryoserializers.wicket.MiniMapSerializerTest" time="0"/>
  <testcase name="testMiniMapLessThanMaxEntries" classname="de.javakaffee.kryoserializers.wicket.MiniMapSerializerTest" time="0"/>
  <testcase name="testBitSet" classname="de.javakaffee.kryoserializers.KryoTest" time="0.001"/>
  <testcase name="testClassSerializer" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testClassWithoutDefaultConstructor" classname="de.javakaffee.kryoserializers.KryoTest" time="0.001"/>
  <testcase name="testCollections" classname="de.javakaffee.kryoserializers.KryoTest" time="0.001"/>
  <testcase name="testCopyBitSet" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyEnumMap" classname="de.javakaffee.kryoserializers.KryoTest" time="0.001"/>
  <testcase name="testCopyEnumSet" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyForIterateMapSerializer" classname="de.javakaffee.kryoserializers.KryoTest" time="0.001"/>
  <testcase name="testCopyGregorianCalendar" classname="de.javakaffee.kryoserializers.KryoTest" time="0.009"/>
  <testcase name="testCopyJavaSqlDate" classname="de.javakaffee.kryoserializers.KryoTest" time="0.001"/>
  <testcase name="testCopyJavaSqlTime" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyJavaSqlTimestamp" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyJavaUtilArraysAsList" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyJavaUtilCollectionsEmptyList" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyJavaUtilCollectionsEmptyMap" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyJavaUtilCollectionsEmptySet" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyJavaUtilDate" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyJdkProxy" classname="de.javakaffee.kryoserializers.KryoTest" time="0.001"/>
  <testcase name="testCopyRegex" classname="de.javakaffee.kryoserializers.KryoTest" time="0.001"/>
  <testcase name="testCopySingletonList" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopySingletonMap" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopySingletonSet" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopySynchronizedCollections[[foo, bar]](1)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopySynchronizedCollections[[bar, foo]](2)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopySynchronizedCollections[{foo=bar}](3)" classname="de.javakaffee.kryoserializers.KryoTest" time="0.001"/>
  <testcase name="testCopyURI" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyUUID" classname="de.javakaffee.kryoserializers.KryoTest" time="0.001"/>
  <testcase name="testCopyUnmodifiableCollections[[foo, bar]](1)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyUnmodifiableCollections[[bar, foo]](2)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyUnmodifiableCollections[{foo=bar}](3)" classname="de.javakaffee.kryoserializers.KryoTest" time="0.001"/>
  <testcase name="testCurrency" classname="de.javakaffee.kryoserializers.KryoTest" time="0.001"/>
  <testcase name="testCyclicDependencies" classname="de.javakaffee.kryoserializers.KryoTest" time="0.002"/>
  <testcase name="testEnumMap" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testEnumSet" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testGregorianCalendar" classname="de.javakaffee.kryoserializers.KryoTest" time="0.001"/>
  <testcase name="testInnerClass" classname="de.javakaffee.kryoserializers.KryoTest" time="0.001"/>
  <testcase name="testJavaSqlDate" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testJavaSqlTime" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testJavaSqlTimestamp" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testJavaUtilArraysAsListBoxedPrimitives" classname="de.javakaffee.kryoserializers.KryoTest" time="0.001"/>
  <testcase name="testJavaUtilArraysAsListEmail" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testJavaUtilArraysAsListEmpty" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testJavaUtilArraysAsListPrimitiveArrayElement" classname="de.javakaffee.kryoserializers.KryoTest" time="0.001"/>
  <testcase name="testJavaUtilArraysAsListString" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testJavaUtilCollectionsEmptyList" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testJavaUtilCollectionsEmptyMap" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testJavaUtilCollectionsEmptySet" classname="de.javakaffee.kryoserializers.KryoTest" time="0.001"/>
  <testcase name="testJavaUtilDate" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testJdkProxy" classname="de.javakaffee.kryoserializers.KryoTest" time="0.001"/>
  <testcase name="testMapWithIntConstructorOnly" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testPrivateClass" classname="de.javakaffee.kryoserializers.KryoTest" time="0.001"/>
  <testcase name="testRegex" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testSharedObjectIdentity[AtomicInteger, 42](1)" classname="de.javakaffee.kryoserializers.KryoTest" time="0.001"/>
  <testcase name="testSharedObjectIdentity[Email, Email [_email=foo.bar@example.com, _name=foo bar]](2)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testSharedObjectIdentityWithArray[AtomicInteger, 42](1)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testSharedObjectIdentityWithArray[Email, Email [_email=foo.bar@example.com, _name=foo bar]](2)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testSharedObjectIdentity_CounterHolder" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testSingletonList" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testSingletonMap" classname="de.javakaffee.kryoserializers.KryoTest" time="0.001"/>
  <testcase name="testSingletonSet" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testStringBuffer" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testStringBuilder" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testSynchronizedCollections[[foo, bar]](1)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testSynchronizedCollections[[bar, foo]](2)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testSynchronizedCollections[{foo=bar}](3)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.lang.Boolean, true](1)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.lang.String, 42](2)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.lang.StringBuilder, 42](3)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.lang.StringBuffer, 42](4)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.lang.Class, class java.lang.String](5)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.lang.Long, 42](6)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.lang.Integer, 42](7)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.lang.Character, c](8)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.lang.Byte, 98](9)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.lang.Double, 42.0](10)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.lang.Float, 42.0](11)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.lang.Short, 42](12)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.math.BigDecimal, 42](13)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.util.concurrent.atomic.AtomicInteger, 42](14)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.util.concurrent.atomic.AtomicLong, 42](15)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class org.apache.commons.lang.mutable.MutableInt, 42](16)" classname="de.javakaffee.kryoserializers.KryoTest" time="0.001"/>
  <testcase name="testTypesAsSessionAttributes[class [Ljava.lang.Integer;, [Ljava.lang.Integer;@52d239ba](17)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.util.Date, Thu Jul 30 18:53:43 UTC 2020](18)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.util.Calendar, java.util.GregorianCalendar[time=1596135233198,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=&quot;Etc/UTC&quot;,offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2020,MONTH=6,WEEK_OF_YEAR=31,WEEK_OF_MONTH=5,DAY_OF_MONTH=30,DAY_OF_YEAR=212,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=6,HOUR_OF_DAY=18,MINUTE=53,SECOND=53,MILLISECOND=198,ZONE_OFFSET=0,DST_OFFSET=0]](19)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.util.Currency, EUR](20)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.util.ArrayList, [foo]](21)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class [I, [I@5bd82fed](22)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class [J, [J@1c6804cd](23)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class [S, [S@4b3a45f1](24)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class [F, [F@39ad977d](25)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class [D, [D@75b25825](26)" classname="de.javakaffee.kryoserializers.KryoTest" time="0.001"/>
  <testcase name="testTypesAsSessionAttributes[class [I, [I@5d2a4eed](27)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class [B, [B@77a98a6a](28)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class [C, [C@45e37a7e](29)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class [Ljava.lang.String;, [Ljava.lang.String;@5a7005d](30)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class [Lde.javakaffee.kryoserializers.TestClasses$Person;, [Lde.javakaffee.kryoserializers.TestClasses$Person;@488eb7f2](31)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesInContainerClass" classname="de.javakaffee.kryoserializers.KryoTest" time="0.002"/>
  <testcase name="testURI" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testUUID" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testUnmodifiableCollections[[foo, bar]](1)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testUnmodifiableCollections[[bar, foo]](2)" classname="de.javakaffee.kryoserializers.KryoTest" time="0.001"/>
  <testcase name="testUnmodifiableCollections[{foo=bar}](3)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyJodaDateTime" classname="de.javakaffee.kryoserializers.jodatime.JodaIntervalSerializerTest" time="0.031"/>
  <testcase name="testJodaInterval" classname="de.javakaffee.kryoserializers.jodatime.JodaIntervalSerializerTest" time="0.008"/>
  <testcase name="testCopyJodaLocalDate" classname="de.javakaffee.kryoserializers.jodatime.JodaLocalDateSerializerTest" time="0.001"/>
  <testcase name="testJodaLocalDate" classname="de.javakaffee.kryoserializers.jodatime.JodaLocalDateSerializerTest" time="0"/>
  <testcase name="testCopyJodaLocalDateTime" classname="de.javakaffee.kryoserializers.jodatime.JodaLocalDateTimeSerializerTest" time="0.001"/>
  <testcase name="testJodaLocalDateTime" classname="de.javakaffee.kryoserializers.jodatime.JodaLocalDateTimeSerializerTest" time="0"/>
  <testcase name="testCopyJodaDateTime" classname="de.javakaffee.kryoserializers.jodatime.JodaDateTimeSerializerTest" time="0"/>
  <testcase name="testJodaDateTime" classname="de.javakaffee.kryoserializers.jodatime.JodaDateTimeSerializerTest" time="0"/>
  <testcase name="testCopyJodaLocalTime" classname="de.javakaffee.kryoserializers.jodatime.JodaLocalTimeSerializerTest" time="0.01"/>
  <testcase name="testJodaLocalTime" classname="de.javakaffee.kryoserializers.jodatime.JodaLocalTimeSerializerTest" time="0.001"/>
  <testcase name="testCGLibProxy" classname="de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest" time="0.033"/>
  <testcase name="testCGLibProxyForExistingFormat" classname="de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest" time="0.014"/>
  <testcase name="testContainerWithCGLibProxy" classname="de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest" time="0.014">
    <system-out><![CDATA[loading class 'de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$MyServiceImpl'
-> custom loading class 'de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$MyServiceImpl'
loading class 'de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$MyService'
-> custom loading class 'de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$MyService'
loading class 'java.lang.Object'
loading class 'java.lang.String'
loading class 'java.io.Serializable'
loading class 'net.sf.cglib.proxy.Factory'
loading class 'java.lang.Throwable'
loading class 'java.lang.IllegalArgumentException'
loading class 'java.lang.CloneNotSupportedException'
loading class 'java.lang.Error'
loading class 'java.lang.RuntimeException'
loading class 'net.sf.cglib.proxy.UndeclaredThrowableException'
loading class 'net.sf.cglib.proxy.Callback'
loading class 'java.lang.ThreadLocal'
loading class 'java.lang.Class'
loading class 'net.sf.cglib.proxy.InvocationHandler'
loading class 'de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$MyContainer'
-> custom loading class 'de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$MyContainer'
---------------- test ------------------
class MSM_de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$MyServiceImpl$$EnhancerByCGLIB$$c95409e6
[interface java.io.Serializable, interface net.sf.cglib.proxy.Factory]
class de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$MyServiceImpl
[interface de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$MyService]
---------------- END test ------------------
]]></system-out>
  </testcase>
  <testcase name="testProxiesFromFileRead" classname="de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest" time="0.006">
    <system-out><![CDATA[00:00 TRACE: [kryo] Read class 11: java.util.Arrays$ArrayList
00:00 TRACE: [kryo] Read initial object reference 0: java.util.Arrays$ArrayList
00:00 TRACE: [kryo] Read class name: de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$ClassToProxy
00:00 TRACE: [kryo] Read class name: MSM_de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$ClassToProxy$$EnhancerByCGLIB$$29605137
00:00 TRACE: [kryo] Read initial object reference 1: de.javakaffee.kryoserializers.cglib.CGLibProxySerializer$CGLibProxyMarker
00:00 TRACE: [kryo] Read class name reference 0: de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$ClassToProxy
00:00 TRACE: [kryo] Read initial object reference 2: java.lang.Class[]
00:00 TRACE: [kryo] Read initial object reference 3: java.lang.Class
00:00 TRACE: [kryo] Read class name: java.io.Serializable
00:00 TRACE: [kryo] Read initial object reference 4: java.lang.Class
00:00 TRACE: [kryo] Read class name: net.sf.cglib.proxy.Factory
00:00 TRACE: [kryo] Read initial object reference 5: net.sf.cglib.proxy.Callback[]
00:00 TRACE: [kryo] Read class name: de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$DelegatingHandler
00:00 TRACE: [kryo] Read initial object reference 6: de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$DelegatingHandler
00:00 TRACE: [kryo] Read field: _delegate (de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$DelegatingHandler) pos=332
00:00 TRACE: [kryo] Read class name reference 0: de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$ClassToProxy
00:00 TRACE: [kryo] Read initial object reference 7: de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$ClassToProxy
00:00 TRACE: [kryo] Read field: _value (de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$ClassToProxy) pos=335
00:00 TRACE: [kryo] Read initial object reference 8: String
00:00 TRACE: [kryo] Read: foo
00:00 TRACE: [kryo] Read class name reference 1: de.javakaffee.kryoserializers.cglib.CGLibProxySerializer$CGLibProxyMarker
00:00 TRACE: [kryo] Read initial object reference 9: de.javakaffee.kryoserializers.cglib.CGLibProxySerializer$CGLibProxyMarker
00:00 TRACE: [kryo] Read class name reference 0: de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$ClassToProxy
00:00 TRACE: [kryo] Read initial object reference 10: java.lang.Class[]
00:00 TRACE: [kryo] Read initial object reference 11: net.sf.cglib.proxy.Callback[]
00:00 TRACE: [kryo] Read class name reference 4: de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$DelegatingHandler
00:00 TRACE: [kryo] Read initial object reference 12: de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$DelegatingHandler
00:00 TRACE: [kryo] Read field: _delegate (de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$DelegatingHandler) pos=353
00:00 TRACE: [kryo] Read class name reference 0: de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$ClassToProxy
00:00 TRACE: [kryo] Object graph complete.
[ClassToProxy [_value=foo], ClassToProxy [_value=foo]]
]]></system-out>
  </testcase>
  <testcase name="testCopyEmpty" classname="de.javakaffee.kryoserializers.EnumMapSerializerTest" time="0">
    <system-out><![CDATA[00:00 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
  <testcase name="testDeepCopy" classname="de.javakaffee.kryoserializers.EnumMapSerializerTest" time="0">
    <system-out><![CDATA[00:00 TRACE: [kryo] Register class name: java.util.HashSet (com.esotericsoftware.kryo.serializers.CollectionSerializer)
00:00 TRACE: [kryo] Copy: Beatrix Kiddo
00:00 TRACE: [kryo] Copy: The Bride
00:00 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
</testsuite>