<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="TestSuite" time="1.996" tests="143" errors="0" skipped="0" failures="0">
  <properties>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="maven.test.error.ignore" value="true"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="sun.cpu.isalist" value=""/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/tmp/tmpxsmwz03l/kryo-serializers/target/test-classes:/tmp/tmpxsmwz03l/kryo-serializers/target/classes:/home/jdbl/.m2/repository/com/esotericsoftware/kryo/3.0.1/kryo-3.0.1.jar:/home/jdbl/.m2/repository/com/esotericsoftware/reflectasm/1.10.1/reflectasm-1.10.1.jar:/home/jdbl/.m2/repository/com/esotericsoftware/minlog/1.3.0/minlog-1.3.0.jar:/home/jdbl/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar:/home/jdbl/.m2/repository/joda-time/joda-time/1.6.2/joda-time-1.6.2.jar:/home/jdbl/.m2/repository/cglib/cglib/3.1/cglib-3.1.jar:/home/jdbl/.m2/repository/org/ow2/asm/asm/4.2/asm-4.2.jar:/home/jdbl/.m2/repository/org/apache/wicket/wicket/1.4.17/wicket-1.4.17.jar:/home/jdbl/.m2/repository/org/slf4j/slf4j-api/1.5.8/slf4j-api-1.5.8.jar:/home/jdbl/.m2/repository/com/google/guava/guava/17.0/guava-17.0.jar:/home/jdbl/.m2/repository/org/testng/testng/5.10/testng-5.10-jdk15.jar:/home/jdbl/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/jdbl/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/jdbl/.m2/repository/org/slf4j/slf4j-simple/1.5.8/slf4j-simple-1.5.8.jar:/home/jdbl/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.javadoc.skip" value="true"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value="Etc/UTC"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="os.name" value="Linux"/>
    <property name="rat.skip" value="true"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="/usr/local/openjdk-8/jre/lib/amd64"/>
    <property name="sun.java.command" value="/tmp/tmpxsmwz03l/kryo-serializers/target/surefire/surefirebooter6445144669111666754.jar /tmp/tmpxsmwz03l/kryo-serializers/target/surefire 2020-07-30T15-11-59_677-jvmRun1 surefire6757148073938289382tmp surefire_0262808178635034656tmp"/>
    <property name="surefire.test.class.path" value="/tmp/tmpxsmwz03l/kryo-serializers/target/test-classes:/tmp/tmpxsmwz03l/kryo-serializers/target/classes:/home/jdbl/.m2/repository/com/esotericsoftware/kryo/3.0.1/kryo-3.0.1.jar:/home/jdbl/.m2/repository/com/esotericsoftware/reflectasm/1.10.1/reflectasm-1.10.1.jar:/home/jdbl/.m2/repository/com/esotericsoftware/minlog/1.3.0/minlog-1.3.0.jar:/home/jdbl/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar:/home/jdbl/.m2/repository/joda-time/joda-time/1.6.2/joda-time-1.6.2.jar:/home/jdbl/.m2/repository/cglib/cglib/3.1/cglib-3.1.jar:/home/jdbl/.m2/repository/org/ow2/asm/asm/4.2/asm-4.2.jar:/home/jdbl/.m2/repository/org/apache/wicket/wicket/1.4.17/wicket-1.4.17.jar:/home/jdbl/.m2/repository/org/slf4j/slf4j-api/1.5.8/slf4j-api-1.5.8.jar:/home/jdbl/.m2/repository/com/google/guava/guava/17.0/guava-17.0.jar:/home/jdbl/.m2/repository/org/testng/testng/5.10/testng-5.10-jdk15.jar:/home/jdbl/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/jdbl/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/jdbl/.m2/repository/org/slf4j/slf4j-simple/1.5.8/slf4j-simple-1.5.8.jar:/home/jdbl/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/jdbl"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.home" value="/usr/local/openjdk-8/jre"/>
    <property name="basedir" value="/tmp/tmpxsmwz03l/kryo-serializers"/>
    <property name="file.separator" value="/"/>
    <property name="line.separator" value="&#10;"/>
    <property name="source.skip" value="true"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="surefire.real.class.path" value="/tmp/tmpxsmwz03l/kryo-serializers/target/surefire/surefirebooter6445144669111666754.jar"/>
    <property name="sun.boot.class.path" value="/usr/local/openjdk-8/jre/lib/resources.jar:/usr/local/openjdk-8/jre/lib/rt.jar:/usr/local/openjdk-8/jre/lib/sunrsasign.jar:/usr/local/openjdk-8/jre/lib/jsse.jar:/usr/local/openjdk-8/jre/lib/jce.jar:/usr/local/openjdk-8/jre/lib/charsets.jar:/usr/local/openjdk-8/jre/lib/jfr.jar:/usr/local/openjdk-8/jre/classes"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="1.8.0_262-b10"/>
    <property name="user.name" value="jdbl"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="4.15.0-109-generic"/>
    <property name="java.endorsed.dirs" value="/usr/local/openjdk-8/jre/lib/endorsed"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="/home/jdbl/.m2/repository"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="java.version" value="1.8.0_262"/>
    <property name="user.dir" value="/tmp/tmpxsmwz03l/kryo-serializers"/>
    <property name="os.arch" value="amd64"/>
    <property name="license.skip" value="true"/>
    <property name="animal.sniffer.skip" value="true"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="25.262-b10"/>
    <property name="java.ext.dirs" value="/usr/local/openjdk-8/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="52.0"/>
    <property name="maven.test.failure.ignore" value="true"/>
  </properties>
  <testcase name="testExcludeFields" classname="de.javakaffee.kryoserializers.FieldAnnotationAwareSerializerTest" time="0.48">
    <system-out><![CDATA[Configuring TestNG with: TestNG510Configurator
]]></system-out>
    <system-err><![CDATA[100 [main] INFO org.apache.wicket.Application - [WicketTest$2] init: Wicket core library initializer
102 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=IBehaviorListener, method=public abstract void org.apache.wicket.behavior.IBehaviorListener.onRequest()]
102 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=IBehaviorListener, method=public abstract void org.apache.wicket.behavior.IBehaviorListener.onRequest()]
102 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=IFormSubmitListener, method=public abstract void org.apache.wicket.markup.html.form.IFormSubmitListener.onFormSubmitted()]
102 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=IFormSubmitListener, method=public abstract void org.apache.wicket.markup.html.form.IFormSubmitListener.onFormSubmitted()]
102 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=ILinkListener, method=public abstract void org.apache.wicket.markup.html.link.ILinkListener.onLinkClicked()]
103 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=ILinkListener, method=public abstract void org.apache.wicket.markup.html.link.ILinkListener.onLinkClicked()]
103 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=IOnChangeListener, method=public abstract void org.apache.wicket.markup.html.form.IOnChangeListener.onSelectionChanged()]
103 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=IOnChangeListener, method=public abstract void org.apache.wicket.markup.html.form.IOnChangeListener.onSelectionChanged()]
103 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=IRedirectListener, method=public abstract void org.apache.wicket.IRedirectListener.onRedirect()]
103 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=IRedirectListener, method=public abstract void org.apache.wicket.IRedirectListener.onRedirect()]
104 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=IResourceListener, method=public abstract void org.apache.wicket.IResourceListener.onResourceRequested()]
104 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=IResourceListener, method=public abstract void org.apache.wicket.IResourceListener.onResourceRequested()]
104 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=IActivePageBehaviorListener, method=public abstract void org.apache.wicket.behavior.IBehaviorListener.onRequest()]
105 [main] INFO org.apache.wicket.RequestListenerInterface - registered listener interface [RequestListenerInterface name=IActivePageBehaviorListener, method=public abstract void org.apache.wicket.behavior.IBehaviorListener.onRequest()]
105 [main] INFO org.apache.wicket.protocol.http.WebApplication - [WicketTest$2] Started Wicket version 1.4.17 in development mode
********************************************************************
*** WARNING: Wicket is running in DEVELOPMENT mode.              ***
***                               ^^^^^^^^^^^                    ***
*** Do NOT deploy to your live server(s) without changing this.  ***
*** See Application#getConfigurationType() for more information. ***
********************************************************************
]]></system-err>
  </testcase>
  <testcase name="testIncludeFields" classname="de.javakaffee.kryoserializers.FieldAnnotationAwareSerializerTest" time="0"/>
  <testcase name="testBitSet" classname="de.javakaffee.kryoserializers.KryoTest" time="0.059"/>
  <testcase name="testClassSerializer" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testClassWithoutDefaultConstructor" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCollections" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyBitSet" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyEnumMap" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyEnumSet" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyForIterateMapSerializer" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyGregorianCalendar" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyJavaSqlDate" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyJavaSqlTime" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyJavaSqlTimestamp" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyJavaUtilArraysAsList" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyJavaUtilCollectionsEmptyList" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyJavaUtilCollectionsEmptyMap" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyJavaUtilCollectionsEmptySet" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyJavaUtilDate" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyJdkProxy" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyRegex" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopySingletonList" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopySingletonMap" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopySingletonSet" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopySynchronizedCollections[[foo, bar]](1)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopySynchronizedCollections[[bar, foo]](2)" classname="de.javakaffee.kryoserializers.KryoTest" time="0.008"/>
  <testcase name="testCopySynchronizedCollections[{foo=bar}](3)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyURI" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyUUID" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyUnmodifiableCollections[[foo, bar]](1)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyUnmodifiableCollections[[bar, foo]](2)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCopyUnmodifiableCollections[{foo=bar}](3)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCurrency" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testCyclicDependencies" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testEnumMap" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testEnumSet" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testGregorianCalendar" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testInnerClass" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testJavaSqlDate" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testJavaSqlTime" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testJavaSqlTimestamp" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testJavaUtilArraysAsListBoxedPrimitives" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testJavaUtilArraysAsListEmail" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testJavaUtilArraysAsListEmpty" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testJavaUtilArraysAsListPrimitiveArrayElement" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testJavaUtilArraysAsListString" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testJavaUtilCollectionsEmptyList" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testJavaUtilCollectionsEmptyMap" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testJavaUtilCollectionsEmptySet" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testJavaUtilDate" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testJdkProxy" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testMapWithIntConstructorOnly" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testPrivateClass" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testRegex" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testSharedObjectIdentity[AtomicInteger, 42](1)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testSharedObjectIdentity[Email, Email [_email=foo.bar@example.com, _name=foo bar]](2)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testSharedObjectIdentityWithArray[AtomicInteger, 42](1)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testSharedObjectIdentityWithArray[Email, Email [_email=foo.bar@example.com, _name=foo bar]](2)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testSharedObjectIdentity_CounterHolder" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testSingletonList" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testSingletonMap" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testSingletonSet" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testStringBuffer" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testStringBuilder" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testSynchronizedCollections[[foo, bar]](1)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testSynchronizedCollections[[bar, foo]](2)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testSynchronizedCollections[{foo=bar}](3)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.lang.Boolean, true](1)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.lang.String, 42](2)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.lang.StringBuilder, 42](3)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.lang.StringBuffer, 42](4)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.lang.Class, class java.lang.String](5)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.lang.Long, 42](6)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.lang.Integer, 42](7)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.lang.Character, c](8)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.lang.Byte, 98](9)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.lang.Double, 42.0](10)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.lang.Float, 42.0](11)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.lang.Short, 42](12)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.math.BigDecimal, 42](13)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.util.concurrent.atomic.AtomicInteger, 42](14)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.util.concurrent.atomic.AtomicLong, 42](15)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class org.apache.commons.lang.mutable.MutableInt, 42](16)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class [Ljava.lang.Integer;, [Ljava.lang.Integer;@223aa2f7](17)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.util.Date, Thu Jul 30 15:11:52 UTC 2020](18)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.util.Calendar, java.util.GregorianCalendar[time=1596121922592,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=&quot;Etc/UTC&quot;,offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2020,MONTH=6,WEEK_OF_YEAR=31,WEEK_OF_MONTH=5,DAY_OF_MONTH=30,DAY_OF_YEAR=212,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=3,HOUR_OF_DAY=15,MINUTE=12,SECOND=2,MILLISECOND=592,ZONE_OFFSET=0,DST_OFFSET=0]](19)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.util.Currency, EUR](20)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class java.util.ArrayList, [foo]](21)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class [I, [I@342c38f8](22)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class [J, [J@485966cc](23)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class [S, [S@593aaf41](24)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class [F, [F@5b03b9fe](25)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class [D, [D@2805d709](26)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class [I, [I@3c7f66c4](27)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class [B, [B@f0da945](28)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class [C, [C@316bcf94](29)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class [Ljava.lang.String;, [Ljava.lang.String;@1de5f259](30)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesAsSessionAttributes[class [Lde.javakaffee.kryoserializers.TestClasses$Person;, [Lde.javakaffee.kryoserializers.TestClasses$Person;@32502377](31)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testTypesInContainerClass" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testURI" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testUUID" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testUnmodifiableCollections[[foo, bar]](1)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testUnmodifiableCollections[[bar, foo]](2)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testUnmodifiableCollections[{foo=bar}](3)" classname="de.javakaffee.kryoserializers.KryoTest" time="0"/>
  <testcase name="testArrayListSubList" classname="de.javakaffee.kryoserializers.SubListSerializersTest" time="0"/>
  <testcase name="testArrayListSubListSubList" classname="de.javakaffee.kryoserializers.SubListSerializersTest" time="0"/>
  <testcase name="testArrayListSubListWithSharedItems" classname="de.javakaffee.kryoserializers.SubListSerializersTest" time="0"/>
  <testcase name="testCopyArrayListSubList" classname="de.javakaffee.kryoserializers.SubListSerializersTest" time="0"/>
  <testcase name="testCopyArrayListSubListSubList" classname="de.javakaffee.kryoserializers.SubListSerializersTest" time="0"/>
  <testcase name="testCopySubList" classname="de.javakaffee.kryoserializers.SubListSerializersTest" time="0.009"/>
  <testcase name="testCopySubListSubList" classname="de.javakaffee.kryoserializers.SubListSerializersTest" time="0"/>
  <testcase name="testNestedArrayListSubListWithSharedItems_1" classname="de.javakaffee.kryoserializers.SubListSerializersTest" time="0"/>
  <testcase name="testNestedArrayListSubListWithSharedItems_2" classname="de.javakaffee.kryoserializers.SubListSerializersTest" time="0"/>
  <testcase name="testSubList" classname="de.javakaffee.kryoserializers.SubListSerializersTest" time="0"/>
  <testcase name="testSubListSubList" classname="de.javakaffee.kryoserializers.SubListSerializersTest" time="0"/>
  <testcase name="testCGLibProxy" classname="de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest" time="0.076"/>
  <testcase name="testCGLibProxyForExistingFormat" classname="de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest" time="0.046"/>
  <testcase name="testContainerWithCGLibProxy" classname="de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest" time="0.047">
    <system-out><![CDATA[loading class 'de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$MyServiceImpl'
-> custom loading class 'de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$MyServiceImpl'
loading class 'de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$MyService'
-> custom loading class 'de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$MyService'
loading class 'java.lang.Object'
loading class 'java.lang.String'
loading class 'java.io.Serializable'
loading class 'net.sf.cglib.proxy.Factory'
loading class 'net.sf.cglib.proxy.Callback'
loading class 'java.lang.Throwable'
loading class 'java.lang.Error'
loading class 'java.lang.RuntimeException'
loading class 'net.sf.cglib.proxy.UndeclaredThrowableException'
loading class 'java.lang.IllegalArgumentException'
loading class 'java.lang.CloneNotSupportedException'
loading class 'java.lang.ThreadLocal'
loading class 'java.lang.Class'
loading class 'net.sf.cglib.proxy.InvocationHandler'
loading class 'de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$MyContainer'
-> custom loading class 'de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$MyContainer'
---------------- test ------------------
class MSM_de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$MyServiceImpl$$EnhancerByCGLIB$$a3e3a125
[interface java.io.Serializable, interface net.sf.cglib.proxy.Factory]
class de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$MyServiceImpl
[interface de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$MyService]
---------------- END test ------------------
]]></system-out>
  </testcase>
  <testcase name="testProxiesFromFileRead" classname="de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest" time="0.007">
    <system-out><![CDATA[00:01 TRACE: [kryo] Read class 11: java.util.Arrays$ArrayList
00:01 TRACE: [kryo] Read initial object reference 0: java.util.Arrays$ArrayList
00:01 TRACE: [kryo] Read class name: de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$ClassToProxy
00:01 TRACE: [kryo] Read class name: MSM_de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$ClassToProxy$$EnhancerByCGLIB$$29605137
00:01 TRACE: [kryo] Read initial object reference 1: de.javakaffee.kryoserializers.cglib.CGLibProxySerializer$CGLibProxyMarker
00:01 TRACE: [kryo] Read class name reference 0: de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$ClassToProxy
00:01 TRACE: [kryo] Read initial object reference 2: java.lang.Class[]
00:01 TRACE: [kryo] Read initial object reference 3: java.lang.Class
00:01 TRACE: [kryo] Read class name: java.io.Serializable
00:01 TRACE: [kryo] Read initial object reference 4: java.lang.Class
00:01 TRACE: [kryo] Read class name: net.sf.cglib.proxy.Factory
00:01 TRACE: [kryo] Read initial object reference 5: net.sf.cglib.proxy.Callback[]
00:01 TRACE: [kryo] Read class name: de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$DelegatingHandler
00:01 TRACE: [kryo] Read initial object reference 6: de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$DelegatingHandler
00:01 TRACE: [kryo] Read field: _delegate (de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$DelegatingHandler) pos=332
00:01 TRACE: [kryo] Read class name reference 0: de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$ClassToProxy
00:01 TRACE: [kryo] Read initial object reference 7: de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$ClassToProxy
00:01 TRACE: [kryo] Read field: _value (de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$ClassToProxy) pos=335
00:01 TRACE: [kryo] Read initial object reference 8: String
00:01 TRACE: [kryo] Read: foo
00:01 TRACE: [kryo] Read class name reference 1: de.javakaffee.kryoserializers.cglib.CGLibProxySerializer$CGLibProxyMarker
00:01 TRACE: [kryo] Read initial object reference 9: de.javakaffee.kryoserializers.cglib.CGLibProxySerializer$CGLibProxyMarker
00:01 TRACE: [kryo] Read class name reference 0: de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$ClassToProxy
00:01 TRACE: [kryo] Read initial object reference 10: java.lang.Class[]
00:01 TRACE: [kryo] Read initial object reference 11: net.sf.cglib.proxy.Callback[]
00:01 TRACE: [kryo] Read class name reference 4: de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$DelegatingHandler
00:01 TRACE: [kryo] Read initial object reference 12: de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$DelegatingHandler
00:01 TRACE: [kryo] Read field: _delegate (de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$DelegatingHandler) pos=353
00:01 TRACE: [kryo] Read class name reference 0: de.javakaffee.kryoserializers.cglib.CGLibProxySerializerTest$ClassToProxy
00:01 TRACE: [kryo] Object graph complete.
[ClassToProxy [_value=foo], ClassToProxy [_value=foo]]
]]></system-out>
  </testcase>
  <testcase name="testCopyEmpty" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0">
    <system-out><![CDATA[00:01 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
  <testcase name="testCopyRegular" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0">
    <system-out><![CDATA[00:01 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
  <testcase name="testCopyReverse" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0">
    <system-out><![CDATA[00:01 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
  <testcase name="testCopySingleton" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0">
    <system-out><![CDATA[00:01 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
  <testcase name="testCopyStringAsImmutableList" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0">
    <system-out><![CDATA[00:01 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
  <testcase name="testCopySubList" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0">
    <system-out><![CDATA[00:01 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
  <testcase name="testCopyValues" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0">
    <system-out><![CDATA[00:01 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
  <testcase name="testEmpty" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0">
    <system-out><![CDATA[00:01 TRACE: [kryo] Write initial object reference 0: []
00:01 TRACE: [kryo] Object graph complete.
00:01 TRACE: [kryo] Read initial object reference 0: com.google.common.collect.ImmutableList
00:01 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
  <testcase name="testRegular" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0.002">
    <system-out><![CDATA[00:01 TRACE: [kryo] Write initial object reference 0: [3, 4, 5, 6]
00:01 TRACE: [kryo] Write class 0: Integer
00:01 TRACE: [kryo] Write: 3
00:01 TRACE: [kryo] Write class 0: Integer
00:01 TRACE: [kryo] Write: 4
00:01 TRACE: [kryo] Write class 0: Integer
00:01 TRACE: [kryo] Write: 5
00:01 TRACE: [kryo] Write class 0: Integer
00:01 TRACE: [kryo] Write: 6
00:01 TRACE: [kryo] Object graph complete.
00:01 TRACE: [kryo] Read initial object reference 0: com.google.common.collect.ImmutableList
00:01 TRACE: [kryo] Read class 0: int
00:01 TRACE: [kryo] Read: 3
00:01 TRACE: [kryo] Read: 4
00:01 TRACE: [kryo] Read: 5
00:01 TRACE: [kryo] Read: 6
00:01 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
  <testcase name="testReverse" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0.001">
    <system-out><![CDATA[00:01 TRACE: [kryo] Write initial object reference 0: [5, 4, 3]
00:01 TRACE: [kryo] Write class 0: Integer
00:01 TRACE: [kryo] Write: 5
00:01 TRACE: [kryo] Write class 0: Integer
00:01 TRACE: [kryo] Write: 4
00:01 TRACE: [kryo] Write class 0: Integer
00:01 TRACE: [kryo] Write: 3
00:01 TRACE: [kryo] Object graph complete.
00:01 TRACE: [kryo] Read initial object reference 0: com.google.common.collect.ImmutableList
00:01 TRACE: [kryo] Read: 5
00:01 TRACE: [kryo] Read: 4
00:01 TRACE: [kryo] Read: 3
00:01 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
  <testcase name="testSingleton" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0">
    <system-out><![CDATA[00:01 TRACE: [kryo] Write initial object reference 0: [3]
00:01 TRACE: [kryo] Write class 0: Integer
00:01 TRACE: [kryo] Write: 3
00:01 TRACE: [kryo] Object graph complete.
00:01 TRACE: [kryo] Read initial object reference 0: com.google.common.collect.ImmutableList
00:01 TRACE: [kryo] Read: 3
00:01 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
  <testcase name="testStringAsImmutableList" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0.002">
    <system-out><![CDATA[00:01 TRACE: [kryo] Write initial object reference 0: [K, r, y, o, R, o, c, k, s]
00:01 TRACE: [kryo] Write class 5: Character
00:01 TRACE: [kryo] Write: K
00:01 TRACE: [kryo] Write class 5: Character
00:01 TRACE: [kryo] Write: r
00:01 TRACE: [kryo] Write class 5: Character
00:01 TRACE: [kryo] Write: y
00:01 TRACE: [kryo] Write class 5: Character
00:01 TRACE: [kryo] Write: o
00:01 TRACE: [kryo] Write class 5: Character
00:01 TRACE: [kryo] Write: R
00:01 TRACE: [kryo] Write class 5: Character
00:01 TRACE: [kryo] Write: o
00:01 TRACE: [kryo] Write class 5: Character
00:01 TRACE: [kryo] Write: c
00:01 TRACE: [kryo] Write class 5: Character
00:01 TRACE: [kryo] Write: k
00:01 TRACE: [kryo] Write class 5: Character
00:01 TRACE: [kryo] Write: s
00:01 TRACE: [kryo] Object graph complete.
00:01 TRACE: [kryo] Read initial object reference 0: com.google.common.collect.ImmutableList
00:01 TRACE: [kryo] Read class 5: char
00:01 TRACE: [kryo] Read: K
00:01 TRACE: [kryo] Read: r
00:01 TRACE: [kryo] Read: y
00:01 TRACE: [kryo] Read: o
00:01 TRACE: [kryo] Read: R
00:01 TRACE: [kryo] Read: o
00:01 TRACE: [kryo] Read: c
00:01 TRACE: [kryo] Read: k
00:01 TRACE: [kryo] Read: s
00:01 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
  <testcase name="testSubList" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0.001">
    <system-out><![CDATA[00:01 TRACE: [kryo] Write initial object reference 0: [4]
00:01 TRACE: [kryo] Write class 0: Integer
00:01 TRACE: [kryo] Write: 4
00:01 TRACE: [kryo] Object graph complete.
00:01 TRACE: [kryo] Read initial object reference 0: com.google.common.collect.ImmutableList
00:01 TRACE: [kryo] Read class 0: int
00:01 TRACE: [kryo] Read: 4
00:01 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
  <testcase name="testValues" classname="de.javakaffee.kryoserializers.guava.ImmutableListSerializerTest" time="0.001">
    <system-out><![CDATA[00:01 TRACE: [kryo] Write initial object reference 0: [3, 6]
00:01 TRACE: [kryo] Write class 0: Integer
00:01 TRACE: [kryo] Write: 3
00:01 TRACE: [kryo] Write class 0: Integer
00:01 TRACE: [kryo] Write: 6
00:01 TRACE: [kryo] Object graph complete.
00:01 TRACE: [kryo] Read initial object reference 0: com.google.common.collect.ImmutableList
00:01 TRACE: [kryo] Read: 3
00:01 TRACE: [kryo] Read: 6
00:01 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
  <testcase name="testCopyJodaDateTime" classname="de.javakaffee.kryoserializers.jodatime.JodaDateTimeSerializerTest" time="0.086">
    <system-out><![CDATA[00:01 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
  <testcase name="testJodaDateTime" classname="de.javakaffee.kryoserializers.jodatime.JodaDateTimeSerializerTest" time="0.012">
    <system-out><![CDATA[00:01 TRACE: [kryo] Write initial object reference 0: 2020-02-11T15:12:03.077Z
00:01 TRACE: [kryo] Object graph complete.
00:01 TRACE: [kryo] Read initial object reference 0: org.joda.time.DateTime
00:01 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
  <testcase name="testCopyJodaDateTime" classname="de.javakaffee.kryoserializers.jodatime.JodaIntervalSerializerTest" time="0.009">
    <system-out><![CDATA[00:01 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
  <testcase name="testJodaInterval" classname="de.javakaffee.kryoserializers.jodatime.JodaIntervalSerializerTest" time="0.001">
    <system-out><![CDATA[00:01 TRACE: [kryo] Write initial object reference 0: 1942-01-01T00:00:00.000/1942-02-12T00:00:00.000
00:01 TRACE: [kryo] Object graph complete.
00:01 TRACE: [kryo] Read initial object reference 0: org.joda.time.Interval
00:01 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
  <testcase name="testMiniMapAddEntriesAfterDeserialization" classname="de.javakaffee.kryoserializers.wicket.MiniMapSerializerTest" time="0.003">
    <system-out><![CDATA[00:01 TRACE: [kryo] Write initial object reference 0: org.apache.wicket.util.collections.MiniMap
00:01 TRACE: [kryo] Write class 1: String
00:01 TRACE: [kryo] Write initial object reference 1: foo
00:01 TRACE: [kryo] Write: foo
00:01 TRACE: [kryo] Write class 1: String
00:01 TRACE: [kryo] Write initial object reference 2: bar
00:01 TRACE: [kryo] Write: bar
00:01 TRACE: [kryo] Wrote map: org.apache.wicket.util.collections.MiniMap@2bb3058
00:01 TRACE: [kryo] Object graph complete.
00:01 TRACE: [kryo] Read initial object reference 0: org.apache.wicket.util.collections.MiniMap
00:01 TRACE: [kryo] Read class 1: String
00:01 TRACE: [kryo] Read initial object reference 1: String
00:01 TRACE: [kryo] Read: foo
00:01 TRACE: [kryo] Read initial object reference 2: String
00:01 TRACE: [kryo] Read: bar
00:01 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
  <testcase name="testMiniMapEmpty" classname="de.javakaffee.kryoserializers.wicket.MiniMapSerializerTest" time="0.002">
    <system-out><![CDATA[00:01 TRACE: [kryo] Write initial object reference 0: org.apache.wicket.util.collections.MiniMap
00:01 TRACE: [kryo] Wrote map: org.apache.wicket.util.collections.MiniMap@1c93f6e1
00:01 TRACE: [kryo] Object graph complete.
00:01 TRACE: [kryo] Read initial object reference 0: org.apache.wicket.util.collections.MiniMap
00:01 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
  <testcase name="testMiniMapExactNumberOfEntries" classname="de.javakaffee.kryoserializers.wicket.MiniMapSerializerTest" time="0.002">
    <system-out><![CDATA[00:01 TRACE: [kryo] Write initial object reference 0: org.apache.wicket.util.collections.MiniMap
00:01 TRACE: [kryo] Write class 1: String
00:01 TRACE: [kryo] Write initial object reference 1: foo
00:01 TRACE: [kryo] Write: foo
00:01 TRACE: [kryo] Write class 1: String
00:01 TRACE: [kryo] Write initial object reference 2: bar
00:01 TRACE: [kryo] Write: bar
00:01 TRACE: [kryo] Wrote map: org.apache.wicket.util.collections.MiniMap@1458ed9c
00:01 TRACE: [kryo] Object graph complete.
00:01 TRACE: [kryo] Read initial object reference 0: org.apache.wicket.util.collections.MiniMap
00:01 TRACE: [kryo] Read initial object reference 1: String
00:01 TRACE: [kryo] Read: foo
00:01 TRACE: [kryo] Read initial object reference 2: String
00:01 TRACE: [kryo] Read: bar
00:01 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
  <testcase name="testMiniMapLessThanMaxEntries" classname="de.javakaffee.kryoserializers.wicket.MiniMapSerializerTest" time="0.002">
    <system-out><![CDATA[00:01 TRACE: [kryo] Write initial object reference 0: org.apache.wicket.util.collections.MiniMap
00:01 TRACE: [kryo] Write class 1: String
00:01 TRACE: [kryo] Write initial object reference 1: foo
00:01 TRACE: [kryo] Write: foo
00:01 TRACE: [kryo] Write class 1: String
00:01 TRACE: [kryo] Write initial object reference 2: bar
00:01 TRACE: [kryo] Write: bar
00:01 TRACE: [kryo] Wrote map: org.apache.wicket.util.collections.MiniMap@130e116b
00:01 TRACE: [kryo] Object graph complete.
00:01 TRACE: [kryo] Read initial object reference 0: org.apache.wicket.util.collections.MiniMap
00:01 TRACE: [kryo] Read initial object reference 1: String
00:01 TRACE: [kryo] Read: foo
00:01 TRACE: [kryo] Read initial object reference 2: String
00:01 TRACE: [kryo] Read: bar
00:01 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
  <testcase name="testFeedbackPanel" classname="de.javakaffee.kryoserializers.wicket.WicketTest" time="0.12">
    <system-out><![CDATA[00:01 TRACE: [kryo] Write initial object reference 0: [MarkupContainer [Component id = foo]]
00:01 TRACE: [kryo] Optimize ints: true
00:01 TRACE: [kryo] Field messageListView: class org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView
00:01 TRACE: [kryo] Field wasOpenCloseTag: boolean
00:01 TRACE: [kryo] Field markupHelper: class org.apache.wicket.markup.html.ContainerWithAssociatedMarkupHelper
00:01 TRACE: [kryo] Field children: class java.lang.Object
00:01 TRACE: [kryo] Field flags: int
00:01 TRACE: [kryo] Field id: class java.lang.String
00:01 TRACE: [kryo] Field parent: class org.apache.wicket.MarkupContainer
00:01 TRACE: [kryo] Field markupIndex: int
00:01 TRACE: [kryo] Field generatedMarkupId: int
00:01 TRACE: [kryo] Field data: class java.lang.Object
00:01 TRACE: [kryo] Field markupStream: class org.apache.wicket.markup.MarkupStream
00:01 TRACE: [kryo] setIgnoreSyntheticFields: false
00:01 TRACE: [kryo] Field messageListView: class org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView
00:01 TRACE: [kryo] Field wasOpenCloseTag: boolean
00:01 TRACE: [kryo] Field markupHelper: class org.apache.wicket.markup.html.ContainerWithAssociatedMarkupHelper
00:01 TRACE: [kryo] Field children: class java.lang.Object
00:01 TRACE: [kryo] Field flags: int
00:01 TRACE: [kryo] Field id: class java.lang.String
00:01 TRACE: [kryo] Field parent: class org.apache.wicket.MarkupContainer
00:01 TRACE: [kryo] Field markupIndex: int
00:01 TRACE: [kryo] Field generatedMarkupId: int
00:01 TRACE: [kryo] Field data: class java.lang.Object
00:01 TRACE: [kryo] Field markupStream: class org.apache.wicket.markup.MarkupStream
00:01 TRACE: [kryo] Register class name: org.apache.wicket.markup.html.panel.FeedbackPanel (com.esotericsoftware.kryo.serializers.FieldSerializer)
00:01 TRACE: [kryo] FieldSerializer.write fields of class: org.apache.wicket.markup.html.panel.FeedbackPanel
00:01 TRACE: [kryo] Write field: children (org.apache.wicket.markup.html.panel.FeedbackPanel) pos=1
00:01 TRACE: [kryo] Optimize ints: true
00:01 TRACE: [kryo] Field children: class java.lang.Object
00:01 TRACE: [kryo] Field flags: int
00:01 TRACE: [kryo] Field id: class java.lang.String
00:01 TRACE: [kryo] Field parent: class org.apache.wicket.MarkupContainer
00:01 TRACE: [kryo] Field markupIndex: int
00:01 TRACE: [kryo] Field generatedMarkupId: int
00:01 TRACE: [kryo] Field data: class java.lang.Object
00:01 TRACE: [kryo] Field markupStream: class org.apache.wicket.markup.MarkupStream
00:01 TRACE: [kryo] setIgnoreSyntheticFields: false
00:01 TRACE: [kryo] Field this$0: class org.apache.wicket.markup.html.panel.FeedbackPanel
00:01 TRACE: [kryo] Field children: class java.lang.Object
00:01 TRACE: [kryo] Field flags: int
00:01 TRACE: [kryo] Field id: class java.lang.String
00:01 TRACE: [kryo] Field parent: class org.apache.wicket.MarkupContainer
00:01 TRACE: [kryo] Field markupIndex: int
00:01 TRACE: [kryo] Field generatedMarkupId: int
00:01 TRACE: [kryo] Field data: class java.lang.Object
00:01 TRACE: [kryo] Field markupStream: class org.apache.wicket.markup.MarkupStream
00:01 TRACE: [kryo] Register class name: org.apache.wicket.markup.html.panel.FeedbackPanel$1 (com.esotericsoftware.kryo.serializers.FieldSerializer)
00:01 TRACE: [kryo] Write class name: org.apache.wicket.markup.html.panel.FeedbackPanel$1
00:01 TRACE: [kryo] Write initial object reference 1: [MarkupContainer [Component id = feedbackul]]
00:01 TRACE: [kryo] FieldSerializer.write fields of class: org.apache.wicket.markup.html.panel.FeedbackPanel$1
00:01 TRACE: [kryo] Write field: children (org.apache.wicket.markup.html.panel.FeedbackPanel$1) pos=55
00:01 TRACE: [kryo] Optimize ints: true
00:01 TRACE: [kryo] Field firstIndex: int
00:01 TRACE: [kryo] Field reuseItems: boolean
00:01 TRACE: [kryo] Field viewSize: int
00:01 TRACE: [kryo] Field children: class java.lang.Object
00:01 TRACE: [kryo] Field flags: int
00:01 TRACE: [kryo] Field id: class java.lang.String
00:01 TRACE: [kryo] Field parent: class org.apache.wicket.MarkupContainer
00:01 TRACE: [kryo] Field markupIndex: int
00:01 TRACE: [kryo] Field generatedMarkupId: int
00:01 TRACE: [kryo] Field data: class java.lang.Object
00:01 TRACE: [kryo] Field markupStream: class org.apache.wicket.markup.MarkupStream
00:01 TRACE: [kryo] setIgnoreSyntheticFields: false
00:01 TRACE: [kryo] Field this$0: class org.apache.wicket.markup.html.panel.FeedbackPanel
00:01 TRACE: [kryo] Field firstIndex: int
00:01 TRACE: [kryo] Field reuseItems: boolean
00:01 TRACE: [kryo] Field viewSize: int
00:01 TRACE: [kryo] Field children: class java.lang.Object
00:01 TRACE: [kryo] Field flags: int
00:01 TRACE: [kryo] Field id: class java.lang.String
00:01 TRACE: [kryo] Field parent: class org.apache.wicket.MarkupContainer
00:01 TRACE: [kryo] Field markupIndex: int
00:01 TRACE: [kryo] Field generatedMarkupId: int
00:01 TRACE: [kryo] Field data: class java.lang.Object
00:01 TRACE: [kryo] Field markupStream: class org.apache.wicket.markup.MarkupStream
00:01 TRACE: [kryo] Register class name: org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView (com.esotericsoftware.kryo.serializers.FieldSerializer)
00:01 TRACE: [kryo] Write class name: org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView
00:01 TRACE: [kryo] Write initial object reference 2: [MarkupContainer [Component id = messages]]
00:01 TRACE: [kryo] FieldSerializer.write fields of class: org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView
00:01 TRACE: [kryo] Write field: children (org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView) pos=125
00:01 TRACE: [kryo] Write: null
00:01 TRACE: [kryo] Write field: data (org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView) pos=126
00:01 TRACE: [kryo] Optimize ints: true
00:01 TRACE: [kryo] Field filter: interface org.apache.wicket.feedback.IFeedbackMessageFilter
00:01 TRACE: [kryo] Field 'sortingComparator' of type interface java.util.Comparator of generic type java.util.Comparator<org.apache.wicket.feedback.FeedbackMessage>
00:01 TRACE: [kryo] Field generic type is of class sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl
00:01 TRACE: [kryo] Processing generic type java.util.Comparator<org.apache.wicket.feedback.FeedbackMessage>
00:01 TRACE: [kryo] Processing actual type class org.apache.wicket.feedback.FeedbackMessage (java.lang.Class)
00:01 TRACE: [kryo] Class java.util.Comparator has generic type parameters
00:01 TRACE: [kryo] Type parameter variable: name=T type bounds=[class java.lang.Object]
00:01 TRACE: [kryo] Concrete type used for T is: org.apache.wicket.feedback.FeedbackMessage
00:01 TRACE: [kryo] Generics scope of field 'sortingComparator' of class java.util.Comparator<org.apache.wicket.feedback.FeedbackMessage> is {T=class org.apache.wicket.feedback.FeedbackMessage}
00:01 TRACE: [kryo] Determined concrete class of parametrized 'sortingComparator' to be java.util.Comparator<org.apache.wicket.feedback.FeedbackMessage> where type parameters are [class org.apache.wicket.feedback.FeedbackMessage]
00:01 TRACE: [kryo] Field generics: [class org.apache.wicket.feedback.FeedbackMessage]
00:01 TRACE: [kryo] Field 'messages' of type interface java.util.List of generic type java.util.List<org.apache.wicket.feedback.FeedbackMessage>
00:01 TRACE: [kryo] Field generic type is of class sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl
00:01 TRACE: [kryo] Processing generic type java.util.List<org.apache.wicket.feedback.FeedbackMessage>
00:01 TRACE: [kryo] Processing actual type class org.apache.wicket.feedback.FeedbackMessage (java.lang.Class)
00:01 TRACE: [kryo] Class java.util.List has generic type parameters
00:01 TRACE: [kryo] Type parameter variable: name=E type bounds=[class java.lang.Object]
00:01 TRACE: [kryo] Concrete type used for E is: org.apache.wicket.feedback.FeedbackMessage
00:01 TRACE: [kryo] Generics scope of field 'messages' of class java.util.List<org.apache.wicket.feedback.FeedbackMessage> is {E=class org.apache.wicket.feedback.FeedbackMessage}
00:01 TRACE: [kryo] Determined concrete class of parametrized 'messages' to be java.util.List<org.apache.wicket.feedback.FeedbackMessage> where type parameters are [class org.apache.wicket.feedback.FeedbackMessage]
00:01 TRACE: [kryo] Field generics: [class org.apache.wicket.feedback.FeedbackMessage]
00:01 TRACE: [kryo] setIgnoreSyntheticFields: false
00:01 TRACE: [kryo] Field filter: interface org.apache.wicket.feedback.IFeedbackMessageFilter
00:01 TRACE: [kryo] Field 'sortingComparator' of type interface java.util.Comparator of generic type java.util.Comparator<org.apache.wicket.feedback.FeedbackMessage>
00:01 TRACE: [kryo] Field generic type is of class sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl
00:01 TRACE: [kryo] Processing generic type java.util.Comparator<org.apache.wicket.feedback.FeedbackMessage>
00:01 TRACE: [kryo] Processing actual type class org.apache.wicket.feedback.FeedbackMessage (java.lang.Class)
00:01 TRACE: [kryo] Class java.util.Comparator has generic type parameters
00:01 TRACE: [kryo] Type parameter variable: name=T type bounds=[class java.lang.Object]
00:01 TRACE: [kryo] Concrete type used for T is: org.apache.wicket.feedback.FeedbackMessage
00:01 TRACE: [kryo] Generics scope of field 'sortingComparator' of class java.util.Comparator<org.apache.wicket.feedback.FeedbackMessage> is {T=class org.apache.wicket.feedback.FeedbackMessage}
00:01 TRACE: [kryo] Determined concrete class of parametrized 'sortingComparator' to be java.util.Comparator<org.apache.wicket.feedback.FeedbackMessage> where type parameters are [class org.apache.wicket.feedback.FeedbackMessage]
00:01 TRACE: [kryo] Field generics: [class org.apache.wicket.feedback.FeedbackMessage]
00:01 TRACE: [kryo] Field 'messages' of type interface java.util.List of generic type java.util.List<org.apache.wicket.feedback.FeedbackMessage>
00:01 TRACE: [kryo] Field generic type is of class sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl
00:01 TRACE: [kryo] Processing generic type java.util.List<org.apache.wicket.feedback.FeedbackMessage>
00:01 TRACE: [kryo] Processing actual type class org.apache.wicket.feedback.FeedbackMessage (java.lang.Class)
00:01 TRACE: [kryo] Class java.util.List has generic type parameters
00:01 TRACE: [kryo] Type parameter variable: name=E type bounds=[class java.lang.Object]
00:01 TRACE: [kryo] Concrete type used for E is: org.apache.wicket.feedback.FeedbackMessage
00:01 TRACE: [kryo] Generics scope of field 'messages' of class java.util.List<org.apache.wicket.feedback.FeedbackMessage> is {E=class org.apache.wicket.feedback.FeedbackMessage}
00:01 TRACE: [kryo] Determined concrete class of parametrized 'messages' to be java.util.List<org.apache.wicket.feedback.FeedbackMessage> where type parameters are [class org.apache.wicket.feedback.FeedbackMessage]
00:01 TRACE: [kryo] Field generics: [class org.apache.wicket.feedback.FeedbackMessage]
00:01 TRACE: [kryo] Register class name: org.apache.wicket.feedback.FeedbackMessagesModel (com.esotericsoftware.kryo.serializers.FieldSerializer)
00:01 TRACE: [kryo] Write class name: org.apache.wicket.feedback.FeedbackMessagesModel
00:01 TRACE: [kryo] Write initial object reference 3: org.apache.wicket.feedback.FeedbackMessagesModel
00:01 TRACE: [kryo] FieldSerializer.write fields of class: org.apache.wicket.feedback.FeedbackMessagesModel
00:01 TRACE: [kryo] Write field: filter (org.apache.wicket.feedback.FeedbackMessagesModel) pos=177
00:01 TRACE: [kryo] Write: null
00:01 TRACE: [kryo] Write field: sortingComparator (org.apache.wicket.feedback.FeedbackMessagesModel) pos=178
00:01 TRACE: [kryo] Write: null
00:01 TRACE: [kryo] Write field: id (org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView) pos=186
00:01 TRACE: [kryo] Write initial object reference 4: messages
00:01 TRACE: [kryo] Write: messages
00:01 TRACE: [kryo] Write field: parent (org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView) pos=196
00:01 TRACE: [kryo] Write class name reference 0: org.apache.wicket.markup.html.panel.FeedbackPanel$1
00:01 TRACE: [kryo] Write field: this$0 (org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView) pos=200
00:01 TRACE: [kryo] Write class name: org.apache.wicket.markup.html.panel.FeedbackPanel
00:01 TRACE: [kryo] Write field: data (org.apache.wicket.markup.html.panel.FeedbackPanel$1) pos=257
00:01 TRACE: [kryo] Write: null
00:01 TRACE: [kryo] Write field: id (org.apache.wicket.markup.html.panel.FeedbackPanel$1) pos=264
00:01 TRACE: [kryo] Write initial object reference 5: feedbackul
00:01 TRACE: [kryo] Write: feedbackul
00:01 TRACE: [kryo] Write field: parent (org.apache.wicket.markup.html.panel.FeedbackPanel$1) pos=276
00:01 TRACE: [kryo] Write class name reference 3: org.apache.wicket.markup.html.panel.FeedbackPanel
00:01 TRACE: [kryo] Write field: this$0 (org.apache.wicket.markup.html.panel.FeedbackPanel$1) pos=279
00:01 TRACE: [kryo] Write class name reference 3: org.apache.wicket.markup.html.panel.FeedbackPanel
00:01 TRACE: [kryo] Write field: data (org.apache.wicket.markup.html.panel.FeedbackPanel) pos=282
00:01 TRACE: [kryo] Write: null
00:01 TRACE: [kryo] Write field: id (org.apache.wicket.markup.html.panel.FeedbackPanel) pos=289
00:01 TRACE: [kryo] Write initial object reference 6: foo
00:01 TRACE: [kryo] Write: foo
00:01 TRACE: [kryo] Write field: markupHelper (org.apache.wicket.markup.html.panel.FeedbackPanel) pos=293
00:01 TRACE: [kryo] Write: null
00:01 TRACE: [kryo] Write field: messageListView (org.apache.wicket.markup.html.panel.FeedbackPanel) pos=295
00:01 TRACE: [kryo] Write field: parent (org.apache.wicket.markup.html.panel.FeedbackPanel) pos=296
00:01 TRACE: [kryo] Write: null
00:01 TRACE: [kryo] Object graph complete.
00:01 TRACE: [kryo] Read initial object reference 0: org.apache.wicket.markup.html.panel.FeedbackPanel
00:01 TRACE: [kryo] Read field: children (org.apache.wicket.markup.html.panel.FeedbackPanel) pos=1
00:01 TRACE: [kryo] Read class name: org.apache.wicket.markup.html.panel.FeedbackPanel$1
00:01 TRACE: [kryo] Read initial object reference 1: org.apache.wicket.markup.html.panel.FeedbackPanel$1
00:01 TRACE: [kryo] Read field: children (org.apache.wicket.markup.html.panel.FeedbackPanel$1) pos=55
00:01 TRACE: [kryo] Read class name: org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView
00:01 TRACE: [kryo] Read initial object reference 2: org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView
00:01 TRACE: [kryo] Read field: children (org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView) pos=125
00:01 TRACE: [kryo] Read: null
00:01 TRACE: [kryo] Read field: data (org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView) pos=126
00:01 TRACE: [kryo] Read class name: org.apache.wicket.feedback.FeedbackMessagesModel
00:01 TRACE: [kryo] Read initial object reference 3: org.apache.wicket.feedback.FeedbackMessagesModel
00:01 TRACE: [kryo] Read field: filter (org.apache.wicket.feedback.FeedbackMessagesModel) pos=177
00:01 TRACE: [kryo] Read: null
00:01 TRACE: [kryo] Read field: sortingComparator (org.apache.wicket.feedback.FeedbackMessagesModel) pos=178
00:01 TRACE: [kryo] Read: null
00:01 TRACE: [kryo] Read field: id (org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView) pos=186
00:01 TRACE: [kryo] Read initial object reference 4: String
00:01 TRACE: [kryo] Read: messages
00:01 TRACE: [kryo] Read field: parent (org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView) pos=196
00:01 TRACE: [kryo] Read class name reference 0: org.apache.wicket.markup.html.panel.FeedbackPanel$1
00:01 TRACE: [kryo] Read field: this$0 (org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView) pos=200
00:01 TRACE: [kryo] Read class name: org.apache.wicket.markup.html.panel.FeedbackPanel
00:01 TRACE: [kryo] Read field: data (org.apache.wicket.markup.html.panel.FeedbackPanel$1) pos=257
00:01 TRACE: [kryo] Read: null
00:01 TRACE: [kryo] Read field: id (org.apache.wicket.markup.html.panel.FeedbackPanel$1) pos=264
00:01 TRACE: [kryo] Read initial object reference 5: String
00:01 TRACE: [kryo] Read: feedbackul
00:01 TRACE: [kryo] Read field: parent (org.apache.wicket.markup.html.panel.FeedbackPanel$1) pos=276
00:01 TRACE: [kryo] Read class name reference 3: org.apache.wicket.markup.html.panel.FeedbackPanel
00:01 TRACE: [kryo] Read field: this$0 (org.apache.wicket.markup.html.panel.FeedbackPanel$1) pos=279
00:01 TRACE: [kryo] Read class name reference 3: org.apache.wicket.markup.html.panel.FeedbackPanel
00:01 TRACE: [kryo] Read field: data (org.apache.wicket.markup.html.panel.FeedbackPanel) pos=282
00:01 TRACE: [kryo] Read: null
00:01 TRACE: [kryo] Read field: id (org.apache.wicket.markup.html.panel.FeedbackPanel) pos=289
00:01 TRACE: [kryo] Read initial object reference 6: String
00:01 TRACE: [kryo] Read: foo
00:01 TRACE: [kryo] Read field: markupHelper (org.apache.wicket.markup.html.panel.FeedbackPanel) pos=293
00:01 TRACE: [kryo] Read: null
00:01 TRACE: [kryo] Read field: messageListView (org.apache.wicket.markup.html.panel.FeedbackPanel) pos=295
00:01 TRACE: [kryo] Read field: parent (org.apache.wicket.markup.html.panel.FeedbackPanel) pos=296
00:01 TRACE: [kryo] Read: null
00:01 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
  <testcase name="testMarkupContainerChildList" classname="de.javakaffee.kryoserializers.wicket.WicketTest" time="0.031">
    <system-out><![CDATA[00:01 TRACE: [kryo] Write initial object reference 0: [MarkupContainer [Component id = foo]]
00:01 TRACE: [kryo] Optimize ints: true
00:01 TRACE: [kryo] Field children: class java.lang.Object
00:01 TRACE: [kryo] Field flags: int
00:01 TRACE: [kryo] Field id: class java.lang.String
00:01 TRACE: [kryo] Field parent: class org.apache.wicket.MarkupContainer
00:01 TRACE: [kryo] Field markupIndex: int
00:01 TRACE: [kryo] Field generatedMarkupId: int
00:01 TRACE: [kryo] Field data: class java.lang.Object
00:01 TRACE: [kryo] Field markupStream: class org.apache.wicket.markup.MarkupStream
00:01 TRACE: [kryo] setIgnoreSyntheticFields: false
00:01 TRACE: [kryo] Field children: class java.lang.Object
00:01 TRACE: [kryo] Field flags: int
00:01 TRACE: [kryo] Field id: class java.lang.String
00:01 TRACE: [kryo] Field parent: class org.apache.wicket.MarkupContainer
00:01 TRACE: [kryo] Field markupIndex: int
00:01 TRACE: [kryo] Field generatedMarkupId: int
00:01 TRACE: [kryo] Field data: class java.lang.Object
00:01 TRACE: [kryo] Field markupStream: class org.apache.wicket.markup.MarkupStream
00:01 TRACE: [kryo] Register class name: org.apache.wicket.markup.html.WebMarkupContainer (com.esotericsoftware.kryo.serializers.FieldSerializer)
00:01 TRACE: [kryo] FieldSerializer.write fields of class: org.apache.wicket.markup.html.WebMarkupContainer
00:01 TRACE: [kryo] Write field: children (org.apache.wicket.markup.html.WebMarkupContainer) pos=1
00:01 TRACE: [kryo] Optimize ints: true
00:01 TRACE: [kryo] Field size: int
00:01 TRACE: [kryo] Field childs: class [Ljava.lang.Object;
00:01 TRACE: [kryo] Field modCount: int
00:01 TRACE: [kryo] Register class name: org.apache.wicket.MarkupContainer$ChildList (com.esotericsoftware.kryo.serializers.FieldSerializer)
00:01 TRACE: [kryo] Write class name: org.apache.wicket.MarkupContainer$ChildList
00:01 TRACE: [kryo] Write initial object reference 1: [[Component id = label1], [Component id = label]]
00:01 TRACE: [kryo] FieldSerializer.write fields of class: org.apache.wicket.MarkupContainer$ChildList
00:01 TRACE: [kryo] Write field: childs (org.apache.wicket.MarkupContainer$ChildList) pos=47
00:01 TRACE: [kryo] Register class name: Object[] (com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer)
00:01 TRACE: [kryo] Write class name: Object[]
00:01 TRACE: [kryo] setting generics for ObjectArraySerializer
00:01 TRACE: [kryo] Write initial object reference 2: Object[]
00:01 TRACE: [kryo] Optimize ints: true
00:01 TRACE: [kryo] Field flags: int
00:01 TRACE: [kryo] Field id: class java.lang.String
00:01 TRACE: [kryo] Field parent: class org.apache.wicket.MarkupContainer
00:01 TRACE: [kryo] Field markupIndex: int
00:01 TRACE: [kryo] Field generatedMarkupId: int
00:01 TRACE: [kryo] Field data: class java.lang.Object
00:01 TRACE: [kryo] setIgnoreSyntheticFields: false
00:01 TRACE: [kryo] Field flags: int
00:01 TRACE: [kryo] Field id: class java.lang.String
00:01 TRACE: [kryo] Field parent: class org.apache.wicket.MarkupContainer
00:01 TRACE: [kryo] Field markupIndex: int
00:01 TRACE: [kryo] Field generatedMarkupId: int
00:01 TRACE: [kryo] Field data: class java.lang.Object
00:01 TRACE: [kryo] Register class name: org.apache.wicket.markup.html.basic.Label (com.esotericsoftware.kryo.serializers.FieldSerializer)
00:01 TRACE: [kryo] Write class name: org.apache.wicket.markup.html.basic.Label
00:01 TRACE: [kryo] Write initial object reference 3: [Component id = label1]
00:01 TRACE: [kryo] FieldSerializer.write fields of class: org.apache.wicket.markup.html.basic.Label
00:01 TRACE: [kryo] Write field: data (org.apache.wicket.markup.html.basic.Label) pos=114
00:01 TRACE: [kryo] Optimize ints: true
00:01 TRACE: [kryo] Class org.apache.wicket.model.Model has generic type parameters
00:01 TRACE: [kryo] Type parameter variable: name=T type bounds=[interface java.io.Serializable]
00:01 TRACE: [kryo] Trying to use kryo.getGenericScope
00:01 TRACE: [kryo] Settting a new generics scope for class org.apache.wicket.model.Model: {}
00:01 TRACE: [kryo] Field 'object' of type interface java.io.Serializable of generic type T
00:01 TRACE: [kryo] Field generic type is of class sun.reflect.generics.reflectiveObjects.TypeVariableImpl
00:01 TRACE: [kryo] Generics scope of field 'object' of class T is null
00:01 TRACE: [kryo] setIgnoreSyntheticFields: false
00:01 TRACE: [kryo] Class org.apache.wicket.model.Model has generic type parameters
00:01 TRACE: [kryo] Type parameter variable: name=T type bounds=[interface java.io.Serializable]
00:01 TRACE: [kryo] Trying to use kryo.getGenericScope
00:01 TRACE: [kryo] Settting a new generics scope for class org.apache.wicket.model.Model: {}
00:01 TRACE: [kryo] Field 'object' of type interface java.io.Serializable of generic type T
00:01 TRACE: [kryo] Field generic type is of class sun.reflect.generics.reflectiveObjects.TypeVariableImpl
00:01 TRACE: [kryo] Generics scope of field 'object' of class T is null
00:01 TRACE: [kryo] Register class name: org.apache.wicket.model.Model (com.esotericsoftware.kryo.serializers.FieldSerializer)
00:01 TRACE: [kryo] Write class name: org.apache.wicket.model.Model
00:01 TRACE: [kryo] Class org.apache.wicket.model.Model has generic type parameters
00:01 TRACE: [kryo] Type parameter variable: name=T type bounds=[interface java.io.Serializable]
00:01 TRACE: [kryo] Trying to use kryo.getGenericScope
00:01 TRACE: [kryo] Settting a new generics scope for class org.apache.wicket.model.Model: {}
00:01 TRACE: [kryo] Field 'object' of type interface java.io.Serializable of generic type T
00:01 TRACE: [kryo] Field generic type is of class sun.reflect.generics.reflectiveObjects.TypeVariableImpl
00:01 TRACE: [kryo] Generics scope of field 'object' of class T is null
00:01 TRACE: [kryo] Write initial object reference 4: Model:classname=[org.apache.wicket.model.Model]:object=[foo]
00:01 TRACE: [kryo] FieldSerializer.write fields of class: org.apache.wicket.model.Model
00:01 TRACE: [kryo] Settting a new generics scope for class org.apache.wicket.model.Model: {}
00:01 TRACE: [kryo] Write field: object (org.apache.wicket.model.Model) pos=146
00:01 TRACE: [kryo] Write class 1: String
00:01 TRACE: [kryo] Write initial object reference 5: foo
00:01 TRACE: [kryo] Write: foo
00:01 TRACE: [kryo] Write field: id (org.apache.wicket.markup.html.basic.Label) pos=157
00:01 TRACE: [kryo] Write initial object reference 6: label1
00:01 TRACE: [kryo] Write: label1
00:01 TRACE: [kryo] Write field: parent (org.apache.wicket.markup.html.basic.Label) pos=165
00:01 TRACE: [kryo] Write class name: org.apache.wicket.markup.html.WebMarkupContainer
00:01 TRACE: [kryo] Write class name reference 2: org.apache.wicket.markup.html.basic.Label
00:01 TRACE: [kryo] Write initial object reference 7: [Component id = label]
00:01 TRACE: [kryo] FieldSerializer.write fields of class: org.apache.wicket.markup.html.basic.Label
00:01 TRACE: [kryo] Write field: data (org.apache.wicket.markup.html.basic.Label) pos=219
00:01 TRACE: [kryo] Write class name reference 3: org.apache.wicket.model.Model
00:01 TRACE: [kryo] Class org.apache.wicket.model.Model has generic type parameters
00:01 TRACE: [kryo] Type parameter variable: name=T type bounds=[interface java.io.Serializable]
00:01 TRACE: [kryo] Trying to use kryo.getGenericScope
00:01 TRACE: [kryo] Settting a new generics scope for class org.apache.wicket.model.Model: {}
00:01 TRACE: [kryo] Field 'object' of type interface java.io.Serializable of generic type T
00:01 TRACE: [kryo] Field generic type is of class sun.reflect.generics.reflectiveObjects.TypeVariableImpl
00:01 TRACE: [kryo] Generics scope of field 'object' of class T is null
00:01 TRACE: [kryo] Write initial object reference 8: Model:classname=[org.apache.wicket.model.Model]:object=[hello]
00:01 TRACE: [kryo] FieldSerializer.write fields of class: org.apache.wicket.model.Model
00:01 TRACE: [kryo] Settting a new generics scope for class org.apache.wicket.model.Model: {}
00:01 TRACE: [kryo] Write field: object (org.apache.wicket.model.Model) pos=222
00:01 TRACE: [kryo] Write class 1: String
00:01 TRACE: [kryo] Write initial object reference 9: hello
00:01 TRACE: [kryo] Write: hello
00:01 TRACE: [kryo] Write field: id (org.apache.wicket.markup.html.basic.Label) pos=235
00:01 TRACE: [kryo] Write initial object reference 10: label
00:01 TRACE: [kryo] Write: label
00:01 TRACE: [kryo] Write field: parent (org.apache.wicket.markup.html.basic.Label) pos=242
00:01 TRACE: [kryo] Write class name reference 4: org.apache.wicket.markup.html.WebMarkupContainer
00:01 TRACE: [kryo] Write: null
00:01 TRACE: [kryo] Write field: data (org.apache.wicket.markup.html.WebMarkupContainer) pos=247
00:01 TRACE: [kryo] Write: null
00:01 TRACE: [kryo] Write field: id (org.apache.wicket.markup.html.WebMarkupContainer) pos=254
00:01 TRACE: [kryo] Write field: parent (org.apache.wicket.markup.html.WebMarkupContainer) pos=256
00:01 TRACE: [kryo] Write: null
00:01 TRACE: [kryo] Object graph complete.
00:01 TRACE: [kryo] Read initial object reference 0: org.apache.wicket.markup.html.WebMarkupContainer
00:01 TRACE: [kryo] Read field: children (org.apache.wicket.markup.html.WebMarkupContainer) pos=1
00:01 TRACE: [kryo] Read class name: org.apache.wicket.MarkupContainer$ChildList
00:01 TRACE: [kryo] Read initial object reference 1: org.apache.wicket.MarkupContainer$ChildList
00:01 TRACE: [kryo] Read field: childs (org.apache.wicket.MarkupContainer$ChildList) pos=47
00:01 TRACE: [kryo] Read class name: [Ljava.lang.Object;
00:01 TRACE: [kryo] setting generics for ObjectArraySerializer
00:01 TRACE: [kryo] Read initial object reference 2: Object[]
00:01 TRACE: [kryo] Read class name: org.apache.wicket.markup.html.basic.Label
00:01 TRACE: [kryo] Read initial object reference 3: org.apache.wicket.markup.html.basic.Label
00:01 TRACE: [kryo] Read field: data (org.apache.wicket.markup.html.basic.Label) pos=114
00:01 TRACE: [kryo] Read class name: org.apache.wicket.model.Model
00:01 TRACE: [kryo] Class org.apache.wicket.model.Model has generic type parameters
00:01 TRACE: [kryo] Type parameter variable: name=T type bounds=[interface java.io.Serializable]
00:01 TRACE: [kryo] Trying to use kryo.getGenericScope
00:01 TRACE: [kryo] Settting a new generics scope for class org.apache.wicket.model.Model: {}
00:01 TRACE: [kryo] Field 'object' of type interface java.io.Serializable of generic type T
00:01 TRACE: [kryo] Field generic type is of class sun.reflect.generics.reflectiveObjects.TypeVariableImpl
00:01 TRACE: [kryo] Generics scope of field 'object' of class T is null
00:01 TRACE: [kryo] Read initial object reference 4: org.apache.wicket.model.Model
00:01 TRACE: [kryo] Settting a new generics scope for class org.apache.wicket.model.Model: {}
00:01 TRACE: [kryo] Read field: object (org.apache.wicket.model.Model) pos=146
00:01 TRACE: [kryo] Read class 1: String
00:01 TRACE: [kryo] Read initial object reference 5: String
00:01 TRACE: [kryo] Read: foo
00:01 TRACE: [kryo] Read field: id (org.apache.wicket.markup.html.basic.Label) pos=157
00:01 TRACE: [kryo] Read initial object reference 6: String
00:01 TRACE: [kryo] Read: label1
00:01 TRACE: [kryo] Read field: parent (org.apache.wicket.markup.html.basic.Label) pos=165
00:01 TRACE: [kryo] Read class name: org.apache.wicket.markup.html.WebMarkupContainer
00:01 TRACE: [kryo] Read class name reference 2: org.apache.wicket.markup.html.basic.Label
00:01 TRACE: [kryo] Read initial object reference 7: org.apache.wicket.markup.html.basic.Label
00:01 TRACE: [kryo] Read field: data (org.apache.wicket.markup.html.basic.Label) pos=219
00:01 TRACE: [kryo] Read class name reference 3: org.apache.wicket.model.Model
00:01 TRACE: [kryo] Class org.apache.wicket.model.Model has generic type parameters
00:01 TRACE: [kryo] Type parameter variable: name=T type bounds=[interface java.io.Serializable]
00:01 TRACE: [kryo] Trying to use kryo.getGenericScope
00:01 TRACE: [kryo] Settting a new generics scope for class org.apache.wicket.model.Model: {}
00:01 TRACE: [kryo] Field 'object' of type interface java.io.Serializable of generic type T
00:01 TRACE: [kryo] Field generic type is of class sun.reflect.generics.reflectiveObjects.TypeVariableImpl
00:01 TRACE: [kryo] Generics scope of field 'object' of class T is null
00:01 TRACE: [kryo] Read initial object reference 8: org.apache.wicket.model.Model
00:01 TRACE: [kryo] Settting a new generics scope for class org.apache.wicket.model.Model: {}
00:01 TRACE: [kryo] Read field: object (org.apache.wicket.model.Model) pos=222
00:01 TRACE: [kryo] Read initial object reference 9: String
00:01 TRACE: [kryo] Read: hello
00:01 TRACE: [kryo] Read field: id (org.apache.wicket.markup.html.basic.Label) pos=235
00:01 TRACE: [kryo] Read initial object reference 10: String
00:01 TRACE: [kryo] Read: label
00:01 TRACE: [kryo] Read field: parent (org.apache.wicket.markup.html.basic.Label) pos=242
00:01 TRACE: [kryo] Read class name reference 4: org.apache.wicket.markup.html.WebMarkupContainer
00:01 TRACE: [kryo] Read: null
00:01 TRACE: [kryo] Read field: data (org.apache.wicket.markup.html.WebMarkupContainer) pos=247
00:01 TRACE: [kryo] Read: null
00:01 TRACE: [kryo] Read field: id (org.apache.wicket.markup.html.WebMarkupContainer) pos=254
00:01 TRACE: [kryo] Read field: parent (org.apache.wicket.markup.html.WebMarkupContainer) pos=256
00:01 TRACE: [kryo] Read: null
00:01 TRACE: [kryo] Object graph complete.
]]></system-out>
  </testcase>
</testsuite>