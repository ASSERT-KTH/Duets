<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ftpix</groupId>
    <artifactId>SpendSpentSpent</artifactId>
    <version>2-B7</version>

    <properties>
        <docker.image.name>gonzague/spendspentspent</docker.image.name>
        <docker.skip>false</docker.skip>
    </properties>

    <repositories>
        <repository>
            <id>sparknotation</id>
            <url>https://raw.github.com/lamarios/sparknnotation/mvn-repo/</url>
        </repository>
    </repositories>

    <scm>
        <url>https://github.com/lamarios/SpendSpentSpent</url>
        <connection>scm:git:https://github.com/lamarios/SpendSpentSpent.git</connection>
        <developerConnection>scm:git:git@github.com:lamarios/SpendSpentSpent.git</developerConnection>
    </scm>

    <dependencies>
        <dependency>
            <groupId>com.ftpix</groupId>
            <artifactId>sparknotation</artifactId>
            <version>1.6</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.j256.ormlite/ormlite-jdbc -->
        <dependency>
            <groupId>com.j256.ormlite</groupId>
            <artifactId>ormlite-jdbc</artifactId>
            <version>5.0</version>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.191</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.1</version>
        </dependency>
        <dependency>
            <groupId>com.sparkjava</groupId>
            <artifactId>spark-template-jade</artifactId>
            <version>2.5.5</version>
        </dependency>


        <!-- Used to get the version of the current release -->
        <!-- https://mvnrepository.com/artifact/org.kohsuke/github-api -->
        <dependency>
            <groupId>org.kohsuke</groupId>
            <artifactId>github-api</artifactId>
            <version>1.90</version>
        </dependency>

        <!-- Handling annoying exceptions in streams
        https://github.com/pivovarit/ThrowingFunction
        -->
        <dependency>
            <groupId>pl.touk</groupId>
            <artifactId>throwing-function</artifactId>
            <version>1.3</version>
        </dependency>

        <!--<dependency>-->
        <!--<groupId>me.xdrop</groupId>-->
        <!--<artifactId>fuzzywuzzy</artifactId>-->
        <!--<version>1.1.9</version>-->
        <!--</dependency>-->

        <!-- https://mvnrepository.com/artifact/junit/junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>3.7.1</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-chrome-driver -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-chrome-driver</artifactId>
            <version>3.7.1</version>
            <scope>test</scope>
        </dependency>


    </dependencies>

    <build>
        <plugins>
            <!--<plugin>-->
            <!--<groupId>org.lesscss</groupId>-->
            <!--<artifactId>lesscss-maven-plugin</artifactId>-->
            <!--<configuration>-->
            <!--<sourceDirectory>${project.build.sourceDirectory}/assets/less</sourceDirectory>-->
            <!--<outputDirectory>${project.build.resources[0].directory}/public/stylesheets-->
            <!--</outputDirectory>-->
            <!--<compress>true</compress>-->
            <!--<includes>-->
            <!--<include>main.less</include>-->
            <!--</includes>-->
            <!--&lt;!&ndash;<excludes>&ndash;&gt;-->
            <!--&lt;!&ndash;<exclude>variables.less</exclude>&ndash;&gt;-->
            <!--&lt;!&ndash;</excludes>&ndash;&gt;-->
            <!--</configuration>-->
            <!--<executions>-->
            <!--<execution>-->
            <!--<goals>-->
            <!--<goal>compile</goal>-->
            <!--</goals>-->
            <!--<phase>compile</phase>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--</plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.1</version>
                <configuration>
                    <source>1.9</source>
                    <target>1.9</target>
                </configuration>
            </plugin>

            <!-- Build FE with NPM -->

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <configuration>
                    <workingDirectory>${basedir}/src/main/web</workingDirectory>
                </configuration>
                <executions>
                    <!-- Required: The following will ensure `npm install` is called
                         before anything else during the 'Default Lifecycle' -->
                    <execution>
                        <id>npm install (initialize)</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <executable>npm</executable>
                            <arguments>
                                <argument>install</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm run build (compile)</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>compile</phase>
                        <configuration>
                            <executable>npm</executable>
                            <arguments>
                                <argument>run</argument>
                                <argument>build</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!-- BUILD DOCKER IMAGE -->
                    <execution>
                        <id>Docker build</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>install</phase>
                        <configuration>
                            <skip>${docker.skip}</skip>
                            <workingDirectory>${basedir}/target/docker</workingDirectory>
                            <executable>docker</executable>
                            <arguments>
                                <argument>build</argument>
                                <argument>-t</argument>
                                <argument>${docker.image.name}</argument>
                                <argument>--build-arg</argument>
                                <argument>SSS_VERSION=${project.version}</argument>
                                <argument>.</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- BUILD FAT JAR -->
            <!-- Maven Assembly Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.0</version>
                <!-- The configuration of the plugin -->

                <executions>
                    <execution>
                        <id>jar-with-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>SpendSpentSpent-${project.version}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                            <archive>
                                <manifest>
                                    <addClasspath>true</addClasspath>
                                    <mainClass>com.ftpix.sss.SpendSpentSpent</mainClass>
                                    <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                    <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                </manifest>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <!-- here the phase you need -->
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/docker</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>docker/</directory>
                                    <filtering>true</filtering>
                                </resource>
                                <resource>
                                    <directory>${basedir}/target</directory>
                                    <includes>
                                        <include>SpendSpentSpent-${project.version}.jar</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- release to github -->
            <plugin>
                <groupId>de.jutzig</groupId>
                <artifactId>github-release-plugin</artifactId>
                <version>1.2.0</version>
                <configuration>
                    <description>
                        Implementation of github release inside maven.
                    </description>
                    <releaseName>${version}</releaseName>
                    <tag>${version}</tag>
                    <serverId>github-release</serverId>
                    <!-- If your project has additional artifacts, such as ones produced by
                         the maven-assembly-plugin, you can define the following
                         (requires version 1.1.1 of the plugin or higher): -->
                    <fileSets>
                        <fileSet>
                            <directory>${project.build.directory}</directory>
                            <excludes>
                                <exclude>
                                    spendspentspent-${project.version}.jar
                                </exclude>
                            </excludes>
                            <includes>
                                <include>SpendSpentSpent.jar</include>
                            </includes>
                        </fileSet>
                    </fileSets>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>