<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.alibaba</groupId>
    <artifactId>wasp</artifactId>
    <version>0.11</version>
    <packaging>jar</packaging>

    <name>wasp</name>
    <url>http://maven.apache.org</url>

    <build>

        <resources>
            <!-- Add the build webabpps to the classpth -->
            <resource>
                <directory>${project.build.directory}</directory>
                <includes>
                    <include>wasp-webapps/**</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources/</directory>
                <includes>
                    <include>wasp-default.xml</include>
                    <include>wasp-webapps/static/**</include>
                    <include>jdbc/**</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>

                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-dependency-plugin</artifactId>
                                        <versionRange>[2.0,)</versionRange>
                                        <goals>
                                            <goal>copy-dependencies</goal>
                                            <goal>unpack</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore/>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-antrun-plugin</artifactId>
                                        <versionRange>[1.6,)</versionRange>
                                        <goals>
                                            <goal>run</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <execute>
                                            <runOnIncremental>false</runOnIncremental>
                                            <runOnConfiguration>true</runOnConfiguration>
                                        </execute>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${javadoc.version}</version>
                    <executions>
                        <execution>
                            <id>javadoc</id>
                            <goals>
                                <goal>aggregate</goal>
                            </goals>
                            <phase>pre-site</phase>
                        </execution>
                    </executions>
                    <configuration>
                        <!-- Pass -DskipJavadoc=true or -DskipJavadoc on command-line to skip
                                        javadoc building -->
                        <skip>${skipJavadoc}</skip>
                        <docfilessubdirs>true</docfilessubdirs>
                        <excludePackageNames>
                            com.alibaba.wasp.protobuf.generated.*:com.alibaba.wasp.thrift.generated:com.alibaba.wasp.rest.generated
                        </excludePackageNames>
                        <debug>true</debug>
                        <maxmemory>2g</maxmemory>
                        <verbose>true</verbose>
                        <reportOutputDirectory>target/apidocs</reportOutputDirectory>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <!-- Making a release I've been using mvn 3.0 and specifying the apache-release
                                  profile on the command line as follows: $ ~/bin/mvn/bin/mvn -Papache-release
                                  release:perform I've also been kiling the release:prepare step mid-way to
                                  check the release.properties it generates at the top-level. Sometimes it
                                  refers to HEAD rather than to the svn branch. -->
                    <configuration>
                        <!-- You need this profile. It'll sign your artifacts. I'm not sure
                                        if this config. actually works though. I've been specifying -Papache-release
                                        on the command-line -->
                        <releaseProfiles>apache-release</releaseProfiles>
                        <!-- This stops our running tests for each stage of maven release.
                                        But it builds the test jar. From SUREFIRE-172. -->
                        <arguments>-Dmaven.test.skip.exec</arguments>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>2.5.1</version>
                    <configuration>
                        <source>${compileSource}</source>
                        <target>${compileSource}</target>
                        <showWarnings>true</showWarnings>
                        <showDeprecation>false</showDeprecation>
                        <compilerArgument>-Xlint:-options</compilerArgument>
                    </configuration>
                </plugin>
                <!-- Test oriented plugins -->
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${surefire.version}</version>
                    <configuration>
                        <forkedProcessTimeoutInSeconds>9000</forkedProcessTimeoutInSeconds>
                        <argLine>-enableassertions -Xmx2048m</argLine>
                        <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>${surefire.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <configuration>
                        <filesets>
                            <fileset>
                                <!-- dfs tests have build dir hardcoded. Clean it as part of clean
                                                    target -->
                                <directory>build</directory>
                            </fileset>
                        </filesets>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>${findbugs.version}</version>
                    <configuration>
                        <findbugsXmlOutput>true</findbugsXmlOutput>
                        <xmlOutput>true</xmlOutput>
                        <effort>Max</effort>
                    </configuration>
                </plugin>
                <!-- Build plugins -->
                <plugin>
                    <groupId>org.jamon</groupId>
                    <artifactId>jamon-maven-plugin</artifactId>
                    <version>${jamon.plugin.version}</version>
                </plugin>
                <!-- Make a jar and put the sources in the jar. In the parent pom, so
                            submodules will do the right thing. -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- General configuration for submodules who want to build a test jar -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <executions>
                        <execution>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>test-jar</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <excludes>
                            <exclude>wasp-site.xml</exclude>
                            <exclude>log4j.properties</exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <!-- General config for eclipse classpath/settings -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-eclipse-plugin</artifactId>
                    <version>2.8</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>cobertura-maven-plugin</artifactId>
                    <version>2.5.1</version>
                    <configuration>
                        <formats>
                            <format>html</format>
                            <format>xml</format>
                        </formats>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <tarLongFileMode>gnu</tarLongFileMode>
                    <descriptors>
                        <descriptor>src/assembly/bin.xml</descriptor>
                        <descriptor>src/assembly/src.xml</descriptor>
                    </descriptors>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven.antrun.version}</version>
                <executions>
                    <execution>
                        <id>generate</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <target>
                                <property name="build.webapps" location="${project.build.directory}/wasp-webapps"/>
                                <property name="src.webapps" location="${basedir}/src/main/resources/wasp-webapps"/>
                                <property name="generated.sources"
                                          location="${project.build.directory}/generated-sources"/>
                                <!--The compile.classpath is passed in by maven-->
                                <taskdef classname="org.apache.jasper.JspC" name="jspcompiler"
                                         classpathref="maven.compile.classpath"/>

                                <mkdir dir="${build.webapps}/master/WEB-INF"/>
                                <jspcompiler uriroot="${src.webapps}/master" outputdir="${generated.sources}/java"
                                             package="com.alibaba.wasp.generated.master"
                                             webxml="${build.webapps}/master/WEB-INF/web.xml"/>
                                <mkdir dir="${build.webapps}/fserver/WEB-INF"/>
                                <jspcompiler uriroot="${src.webapps}/fserver" outputdir="${generated.sources}/java"
                                             package="com.alibaba.wasp.generated.fserver"
                                             webxml="${build.webapps}/fserver/WEB-INF/web.xml"/>
                                <exec executable="sh">
                                    <arg line="${basedir}/src/saveVersion.sh ${project.version} ${generated.sources}/java"/>
                                </exec>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.5</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>
                                    target/generated-sources/java
                                </source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <properties>
        <tar.name>${project.build.finalName}.tar.gz</tar.name>
        <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm</maven.build.timestamp.format>
        <buildDate>${maven.build.timestamp}</buildDate>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <compileSource>1.6</compileSource>
        <hbase.version>0.94.7</hbase.version>
        <!-- Dependencies -->
        <commons-cli.version>1.2</commons-cli.version>
        <commons-codec.version>1.7</commons-codec.version>
        <!-- pretty outdated -->
        <hadoop-core.version>1.0.4</hadoop-core.version>
        <hadoop-test.version>1.0.4</hadoop-test.version>
        <commons-io.version>2.4</commons-io.version>
        <commons-lang.version>2.6</commons-lang.version>
        <commons-logging.version>1.1.1</commons-logging.version>
        <commons-math.version>2.1</commons-math.version>
        <metrics-core.version>2.1.2</metrics-core.version>
        <guava.version>12.0.1</guava.version>
        <jackson.version>1.8.8</jackson.version>
        <jasper.version>5.5.23</jasper.version>
        <jaxb-api.version>2.1</jaxb-api.version>
        <jetty.version>6.1.26</jetty.version>
        <jetty.jspapi.version>6.1.14</jetty.jspapi.version>
        <jersey.version>1.8</jersey.version>
        <jruby.version>1.6.8</jruby.version>
        <junit.version>4.10</junit.version>
        <slf4j.version>1.4.3</slf4j.version>
        <log4j.version>1.2.17</log4j.version>
        <mockito-all.version>1.9.0</mockito-all.version>
        <protobuf.version>2.4.1</protobuf.version>
        <stax-api.version>1.0.1</stax-api.version>
        <thrift.version>0.8.0</thrift.version>
        <zookeeper.version>3.4.5</zookeeper.version>
        <hadoop-snappy.version>0.0.1-SNAPSHOT</hadoop-snappy.version>
        <clover.version>2.6.3</clover.version>
        <jamon-runtime.version>2.3.1</jamon-runtime.version>
        <jettison.version>1.3.1</jettison.version>
        <netty.version>3.5.0.Final</netty.version>
        <!-- Plugin Dependencies -->
        <maven.assembly.version>2.3</maven.assembly.version>
        <maven.antrun.version>1.6</maven.antrun.version>
        <jamon.plugin.version>2.3.4</jamon.plugin.version>
        <findbugs.version>2.3.2</findbugs.version>
        <maven.site.version>3.1</maven.site.version>
        <javadoc.version>2.8.1</javadoc.version>
        <maven.resources.plugin.version>2.5</maven.resources.plugin.version>
        <!-- General Packaging -->
        <package.release>1</package.release>
        <final.name>${project.artifactId}-${project.version}</final.name>
        <surefire.version>2.13</surefire.version>
        <surefire.provider>surefire-junit47</surefire.provider>
        <test.output.tofile>true</test.output.tofile>
    </properties>
    <!-- Sorted by groups of dependencies then groupId and artifactId -->
    <!-- Dependencies needed by subprojects -->
    <dependencies>
        <!-- General dependencies -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty</artifactId>
            <version>${netty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jettison</groupId>
            <artifactId>jettison</artifactId>
            <version>${jettison.version}</version>
        </dependency>
        <dependency>
            <groupId>com.yammer.metrics</groupId>
            <artifactId>metrics-core</artifactId>
            <version>${metrics-core.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>${commons-cli.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.stephenc.high-scale-lib</groupId>
            <artifactId>high-scale-lib</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons-codec.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons-lang.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>${commons-logging.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math</artifactId>
            <version>${commons-math.version}</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.zookeeper</groupId>
            <artifactId>zookeeper</artifactId>
            <version>${zookeeper.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.netty</groupId>
                    <artifactId>netty</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>jline</groupId>
                    <artifactId>jline</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.thrift</groupId>
            <artifactId>libthrift</artifactId>
            <version>${thrift.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-simple</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jruby</groupId>
            <artifactId>jruby-complete</artifactId>
            <version>${jruby.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty</artifactId>
            <version>${jetty.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-util</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jsp-2.1</artifactId>
            <version>${jetty.jspapi.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>ant</groupId>
                    <artifactId>ant</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jsp-api-2.1</artifactId>
            <version>${jetty.jspapi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>servlet-api-2.5</artifactId>
            <version>${jetty.jspapi.version}</version>
        </dependency>
        <!-- While jackson is also a dependency of jersey it can bring in jars
                from different, incompatible versions. We force the same version with these
                dependencies -->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-core-asl</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-jaxrs</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-xc</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <!-- If this is not in the runtime lib, we get odd "2009-02-27 11:38:39.504::WARN:
                      failed jsp java.lang.NoSuchFieldError: IS_SECURITY_ENABLED" exceptions out
                      of jetty deploying webapps. St.Ack Thu May 20 01:04:41 PDT 2010 -->
            <groupId>tomcat</groupId>
            <artifactId>jasper-compiler</artifactId>
            <version>${jasper.version}</version>
            <scope>runtime</scope>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>jsp-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>ant</groupId>
                    <artifactId>ant</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>tomcat</groupId>
            <artifactId>jasper-runtime</artifactId>
            <version>${jasper.version}</version>
            <scope>runtime</scope>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jamon</groupId>
            <artifactId>jamon-runtime</artifactId>
            <version>${jamon-runtime.version}</version>
        </dependency>
        <!-- REST dependencies -->
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-core</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>${jaxb-api.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.xml.stream</groupId>
                    <artifactId>stax-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>stax</groupId>
            <artifactId>stax-api</artifactId>
            <version>${stax-api.version}</version>
        </dependency>
        <!-- Test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito-all.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-core</artifactId>
            <version>${hadoop-core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-test</artifactId>
            <version>${hadoop-test.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase</artifactId>
            <version>${hbase.version}</version>
        </dependency>
        <!-- <dependency> <groupId>org.apache.hbase</groupId> <artifactId>hbase</artifactId>
                <version>0.94.0</version> <scope>system</scope> <systemPath>${basedir}/lib/hbase-0.94.0.jar</systemPath>
                </dependency> -->
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase</artifactId>
            <version>${hbase.version}</version>
            <classifier>tests</classifier>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>2.4.1</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.protobuf-java-format</groupId>
            <artifactId>protobuf-java-format</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.protobuf-rpc-pro</groupId>
            <artifactId>protobuf-rpc-pro-demo</artifactId>
            <version>2.0.1</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.protobuf-rpc-pro</groupId>
            <artifactId>protobuf-rpc-pro-duplex</artifactId>
            <version>2.0.1</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.protobuf-rpc-pro</groupId>
            <artifactId>protobuf-streamer-pro</artifactId>
            <version>1.2.3</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>1.8.8</version>
        </dependency>
        <dependency>
            <groupId>org.cloudera.htrace</groupId>
            <artifactId>htrace</artifactId>
            <version>1.49</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>0.2.9</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <formats>
                        <format>html</format>
                        <format>xml</format>
                    </formats>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
    </profiles>
    <distributionManagement>
    </distributionManagement>
</project>
