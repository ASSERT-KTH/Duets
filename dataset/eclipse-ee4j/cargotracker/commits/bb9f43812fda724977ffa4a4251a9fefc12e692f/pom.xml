<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.eclipse.ee4j</groupId>
    <artifactId>cargo-tracker</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>org.eclipse.cargo-tracker</name>
    <description>The project demonstrates how you can develop applications with the Jakarta EE platform using widely
        adopted architectural best practices like Domain-Driven Design (DDD), TDD and agile.
    </description>
    <url>https://projects.eclipse.org/projects/ee4j.cargotracker/</url>
    <organization>
        <name>Oracle Corporation</name>
        <url>http://www.oracle.com/</url>
    </organization>

    <issueManagement>
        <system>github</system>
        <url>https://github.com/eclipse-ee4j/cargotracker/issues</url>
    </issueManagement>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <webapp.databaseTempDir>/tmp</webapp.databaseTempDir>
        <webapp.graphTraversalUrl>
            http://localhost:8080/cargo-tracker/rest/graph-traversal/shortest-path
        </webapp.graphTraversalUrl>
    </properties>

    <!-- We need to use the PrimeFaces repository -->
    <repositories>
        <repository>
            <id>org.primefaces</id>
            <url>https://repository.primefaces.org</url>
        </repository>
    </repositories>


    <!-- ##################################################
        dependencies
        ################################################## -->

    <dependencyManagement>
        <dependencies>
            <!-- Arquillian Bill Of Management used to reduce collision between testing dependencies.
                 Using a dependency manager we don't need to specify the version of each Arquillian decency.
              -->
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>1.4.1.Final</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- ==================================================
             Application dependencies
             ================================================== -->


        <!-- Jakarta EE API -->
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>8.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- GlassFish specific dependencies, could go away in Java EE 8 -->
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet-core</artifactId>
            <version>2.28</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-moxy</artifactId>
            <version>2.28</version>
            <scope>provided</scope>
        </dependency>

        <!-- The third-party dependencies this application has -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.4</version>
            <scope>compile</scope>
        </dependency>

        <!-- PrimeFaces dependencies -->
        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces</artifactId>
            <version>6.2</version>
        </dependency>
        <dependency>
            <groupId>org.primefaces.themes</groupId>
            <artifactId>ui-lightness</artifactId>
            <version>1.0.10</version>
        </dependency>

        <!-- ==================================================
             Test dependencies
             ================================================== -->

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <!-- Arquillian decencies -->

        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>

        <!--
            Resolvers are needed in the Arquillian tests
            This is used for adding all the runtime dependencies inside a testing war.
            For doing this you can use the following code

                File[] dependencies = Maven.resolver().loadPomFromFile("pom.xml")
                                           .importRuntimeDependencies().resolve().withTransitivity().asFile();

            NOTE: this is necessary when running the tests on a managed or remote JVM.
        -->
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-validator-cdi -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator-cdi</artifactId>
            <version>6.0.16.Final</version>
        </dependency>

    </dependencies>

    <!-- ##################################################
        build
        ################################################## -->

    <build>
        <finalName>cargo-tracker</finalName>

        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.3</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <skipTests>false</skipTests>

                    <systemPropertyVariables>
                        <!-- This is needed to tell the unit tests which profile we are running.
                             @see jakarta.cargotracker.application.BookingServiceTest
                        -->
                        <profileId>${project.activeProfiles[0].id}</profileId>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <!-- ##################################################
         profiles
         ################################################## -->

    <profiles>

        <!-- ==================================================
             glassgish profile

             GlassFish specific version of build
             ================================================== -->
        <profile>
            <id>glassfish</id>

            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <dependencies>
                <dependency>
                    <groupId>org.jboss.arquillian.container</groupId>
                    <artifactId>arquillian-glassfish-remote-3.1</artifactId>
                    <version>1.0.2</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <version>1.7.7</version>
                        <configuration>
                            <container>
                                <containerId>glassfish4x</containerId>
                                <zipUrlInstaller>
                                    <url>http://download.java.net/glassfish/4.1/release/glassfish-4.1.zip</url>
                                </zipUrlInstaller>
                            </container>
                            <properties>
                                <context>cargo-tracker</context>
                            </properties>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>
</project>
