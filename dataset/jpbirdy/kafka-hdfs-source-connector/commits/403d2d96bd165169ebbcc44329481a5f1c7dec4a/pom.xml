<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>hdfs-kafka-connector</groupId>
  <artifactId>hdfs-kafka-connector</artifactId>
  <version>3.2.1</version>


  <properties>
    <confluent.version>${project.version}</confluent.version>
    <!--<kafka.version>0.11.0.0-SNAPSHOT</kafka.version>-->
    <kafka.version>0.10.2.1</kafka.version>
    <junit.version>4.12</junit.version>
    <easymock.version>3.0</easymock.version>
    <powermock.version>1.6.2</powermock.version>
    <derby.version>10.11.1.1</derby.version>
    <commons-io.version>2.4</commons-io.version>
    <mockito.version>1.10.19</mockito.version>
    <slf4j.version>1.7.5</slf4j.version>
    <licenses.name>Apache License 2.0</licenses.name>
    <licenses.version>${project.version}</licenses.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.package.home>target/${project.artifactId}-${project.version}-package</project.package.home>
    <confluent.maven.repo>http://packages.confluent.io/maven/</confluent.maven.repo>

    <hadoop.version>2.7.3</hadoop.version>
    <hive.version>1.2.1</hive.version>
    <joda.version>2.9.7</joda.version>
    <parquet.version>1.7.0</parquet.version>
  </properties>

  <repositories>
    <repository>
      <id>confluent</id>
      <name>Confluent</name>
      <url>${confluent.maven.repo}</url>
    </repository>
  </repositories>



  <dependencies>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>connect-api</artifactId>
      <version>${kafka.version}</version>
      <!--<scope>provided</scope>-->
    </dependency>

    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>kafka-connect-avro-converter</artifactId>
      <version>${confluent.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-client</artifactId>
      <version>${hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-cli</artifactId>
      <version>${hive.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-common</artifactId>
      <version>${hive.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-minicluster</artifactId>
      <version>${hadoop.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-minikdc</artifactId>
      <version>${hadoop.version}</version>
      <!--<scope>test</scope>-->
      <exclusions>
        <exclusion>
          <!-- exclude this from hadoop minikdc as the minikdc depends on
          the apacheds-jdbm1 bundle, which is not available in maven central-->
          <groupId>org.apache.directory.jdbm</groupId>
          <artifactId>apacheds-jdbm1</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!-- add this to satisfy the dependency requirement of apacheds-jdbm1-->
      <groupId>org.apache.directory.jdbm</groupId>
      <artifactId>apacheds-jdbm1</artifactId>
      <version>2.0.0-M2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>${joda.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hive.hcatalog</groupId>
      <artifactId>hive-hcatalog-core</artifactId>
      <version>${hive.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.parquet</groupId>
      <artifactId>parquet-hadoop-bundle</artifactId>
      <version>${parquet.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.parquet</groupId>
      <artifactId>parquet-column</artifactId>
      <version>${parquet.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.parquet</groupId>
      <artifactId>parquet-avro</artifactId>
      <version>${parquet.version}</version>
    </dependency>


    <!-- JDBC drivers, only included in runtime so they get packaged -->
    <dependency>
      <groupId>org.xerial</groupId>
      <artifactId>sqlite-jdbc</artifactId>
      <version>3.8.11.2</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>9.4-1206-jdbc41</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>${easymock.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <version>${powermock.version}</version>
      <!--<scope>test</scope>-->
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-easymock</artifactId>
      <version>${powermock.version}</version>
      <!--<scope>test</scope>-->
    </dependency>
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derby</artifactId>
      <version>${derby.version}</version>
      <!--<scope>test</scope>-->
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
      <!--<scope>test</scope>-->
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>${slf4j.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.5.1</version>
        <inherited>true</inherited>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.5.3</version>
        <configuration>
          <descriptors>
            <descriptor>src/assembly/development.xml</descriptor>
            <descriptor>src/assembly/package.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.18.1</version>
        <configuration>
          <argLine>-Djava.awt.headless=true</argLine>
        </configuration>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
  </build>

  <profiles>
    <profile>
      <id>rpm</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>rpm-maven-plugin</artifactId>
            <version>2.1.5</version>
            <executions>
              <execution>
                <id>generate-rpm</id>
                <goals>
                  <goal>rpm</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <group>Applications/Internet</group>
              <packager>Confluent Packaging</packager>
              <license>${licenses.name}</license>
              <needarch>noarch</needarch>
              <targetOS>linux</targetOS>
              <requires>
                <require>confluent-common = ${project.version}</require>
              </requires>
              <mappings>
                <mapping>
                  <directory>/usr/share/java/${project.artifactId}</directory>
                  <sources>
                    <source>
                      <location>${project.package.home}/share/java/${project.artifactId}</location>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <configuration>true</configuration>
                  <directory>/etc/${project.artifactId}</directory>
                  <sources>
                    <source>
                      <location>${project.package.home}/etc/${project.artifactId}</location>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <documentation>true</documentation>
                  <directory>/usr/share/doc/${project.artifactId}</directory>
                  <sources>
                    <source>
                      <location>${project.package.home}/share/doc/${project.artifactId}</location>
                    </source>
                  </sources>
                </mapping>
              </mappings>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>standalone</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
              <descriptors>
                <descriptor>src/assembly/standalone.xml</descriptor>
              </descriptors>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>licenses-package</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
              <execution>
                <id>create-licenses</id>
                <configuration>
                  <mainClass>io.confluent.licenses.LicenseFinder</mainClass>
                  <arguments>
                    <!-- Note use of development instead of package so we pick up all dependencies. -->
                    <argument>-i ${project.build.directory}/${project.build.finalName}-package/share/java/kafka-connect-jdbc</argument>
                    <argument>-o ${project.basedir}/licenses</argument>
                    <argument>-f</argument>
                    <argument>-h ${project.build.directory}/${project.build.finalName}-package/share/doc/kafka-connect-jdbc/licenses.html</argument>
                    <argument>-l ${project.build.directory}/${project.build.finalName}-package/share/doc/kafka-connect-jdbc/licenses</argument>
                    <argument>-n ${project.build.directory}/${project.build.finalName}-package/share/doc/kafka-connect-jdbc/notices</argument>
                    <argument>-t ${project.name}</argument>
                    <argument>-x licenses-${licenses.version}.jar</argument>
                  </arguments>
                </configuration>
                <phase>package</phase>
                <goals>
                  <goal>java</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <includeProjectDependencies>true</includeProjectDependencies>
              <includePluginDependencies>true</includePluginDependencies>
              <executableDependency>
                <groupId>io.confluent</groupId>
                <artifactId>licenses</artifactId>
              </executableDependency>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>licenses</artifactId>
                <version>${licenses.version}</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>licenses-source</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
              <execution>
                <id>create-licenses</id>
                <configuration>
                  <mainClass>io.confluent.licenses.LicenseFinder</mainClass>
                  <arguments>
                    <!-- Note use of development instead of package so we pick up all dependencies. -->
                    <argument>-i ${project.build.directory}/${project.build.finalName}-development/share/java/kafka-connect-jdbc</argument>
                    <argument>-o ${project.basedir}/licenses</argument>
                    <argument>-f</argument>
                    <argument>-h ${project.basedir}/licenses.html</argument>
                    <argument>-l ${project.basedir}/licenses</argument>
                    <argument>-n ${project.basedir}/notices</argument>
                    <argument>-t ${project.name}</argument>
                    <argument>-x licenses-${licenses.version}.jar</argument>
                  </arguments>
                </configuration>
                <phase>package</phase>
                <goals>
                  <goal>java</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <includeProjectDependencies>true</includeProjectDependencies>
              <includePluginDependencies>true</includePluginDependencies>
              <executableDependency>
                <groupId>io.confluent</groupId>
                <artifactId>licenses</artifactId>
              </executableDependency>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>licenses</artifactId>
                <version>${licenses.version}</version>
              </dependency>
            </dependencies>
          </plugin>
          <plugin>
            <artifactId>maven-clean-plugin</artifactId>
            <version>3.0.0</version>
            <configuration>
              <filesets>
                <fileset>
                  <directory>.</directory>
                  <includes>
                    <include>licenses.html</include>
                    <directory>licenses/*.*</directory>
                    <directory>notices/*.*</directory>
                  </includes>
                </fileset>
              </filesets>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>