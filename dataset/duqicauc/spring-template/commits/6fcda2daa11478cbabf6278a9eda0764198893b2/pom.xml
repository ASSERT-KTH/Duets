<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright AlertAvert.com (c) 2014. All rights reserved.
  ~ Commercial use or modification of this software without a valid license is expressly forbidden
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.0.2.RELEASE</version>
    </parent>

    <artifactId>spring-template</artifactId>
    <groupId>com.alertavert</groupId>
    <name>Spring Template</name>
    <description>Template project for a REST service, backed by MongoDB</description>
    <version>1.0-SNAPSHOT</version>

    <url>http://alertavert.com</url>
    <organization>
        <name>AlertAvert.com, Inc.</name>
        <url>http://www.alertavert.com</url>
    </organization>

    <properties>
        <!-- We need to keep the target at Java 7, otherwise all Cobertura checks fail -->
        <java.version>7</java.version>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <formats>
                        <!-- The XML report (in target/site/cobertura/coverage.xml)
                             is useful for uploading to Coveralls.
                         -->
                        <format>xml</format>
                        <format>html</format>
                    </formats>
                    <maxmem>256m</maxmem>
                    <instrumentation>
                        <excludes>
                            <!-- Configuration and Application classes can be excluded
                                 from test coverage, as they should have no meaningful
                                 logic inside - include if they do.
                            -->
                            <exclude>com/alertavert/**/*Configuration.class</exclude>
                            <exclude>com/alertavert/**/*Application.class</exclude>
                        </excludes>
                    </instrumentation>
                    <check>
                        <!-- Enable failing mvn build when test coverage does not meet
                             or exceed goal:

                             mvn cobertura:check test
                        -->
                        <totalLineRate>70</totalLineRate>
                    </check>
                    <!-- aggregated reports for multi-module projects
                        <aggregate>true</aggregate>
                    -->
                </configuration>
            </plugin>
            <!-- Enables Coveralls.io integration (via Travis CI)

                 If the project does not use Travis CI, run the following to upload
                 test coverage results to Coveralls:
                   mvn clean cobertura:cobertura coveralls:report -DrepoToken=azwIXg6Uo...

                 You obtain the Repo Token from http://coveralls.io repo configuration page
            -->
            <plugin>
                <groupId>org.eluder.coveralls</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <version>3.0.1</version>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- Support for MongoDB and Spring Data -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>

        <!-- Support for exposing Spring Data via the Spring MVC REST framework -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
        </dependency>

        <!-- Spring Security

        TODO: disabled as I need to figure out how to plug security in
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        -->

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>4.0</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>18.0</version>
        </dependency>


        <!--
            TODO: Add the following modules going forward, as they will be useful in Prod deployment
            spring-boot-starter-actuator        Adds production ready features such as metrics
                                                and monitoring.
            spring-boot-starter-remote-shell    Adds remote ssh shell support.
        -->

        <!-- Test support (includes JUnit, Mockito dependencies) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

</project>
