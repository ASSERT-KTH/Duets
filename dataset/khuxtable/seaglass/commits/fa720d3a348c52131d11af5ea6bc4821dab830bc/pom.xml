<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.seaglasslookandfeel</groupId>
	<artifactId>seaglasslookandfeel</artifactId>
	<packaging>jar</packaging>
	<version>0.2.1-SNAPSHOT</version>
	<name>Sea Glass Look and Feel for Swing</name>
	<description>
		A Java cross-platform look and feel for JRE 1.6u17 and later.
		This is developed from
		Synth, and is based on forms seen in sea glass,
		that is, bits of glass washed up on the shore by
		the sea.
	</description>
	<inceptionYear>2009</inceptionYear>
	<url>http://seaglasslookandfeel.com</url>
	<developers>
		<developer>
			<id>kenneth.orr</id>
			<name>Kenneth Orr</name>
			<email>kenneth.orr@gmail.com</email>
			<url>http://explodingpixels.wordpress.com/</url>
			<organizationUrl>http://explodingpixels.wordpress.com/</organizationUrl>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<timezone>-8</timezone>
		</developer>
		<developer>
			<id>khuxtable</id>
			<name>Kathryn Huxtable</name>
			<email>kathryn@kathrynhuxtable.org</email>
			<url>http://www.kathrynhuxtable.org</url>
			<organization>kathrynhuxtable.org</organization>
			<organizationUrl>http://www.kathrynhuxtable.org</organizationUrl>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<timezone>-6</timezone>
		</developer>
		<developer>
			<id>rossi</id>
			<name>Bernd Rosstauscher</name>
			<email>bernd@rosstauscher.de</email>
			<url>http://www.rosstauscher.de</url>
			<organization>rosstauscher.de</organization>
			<organizationUrl>http://www.rosstauscher.de</organizationUrl>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<timezone>+1</timezone>
		</developer>
	</developers>
	<mailingLists>
		<mailingList>
			<name>Discussion List</name>
			<subscribe>sea-glass-look-and-feel+subscribe@googlegroups.com</subscribe>
			<unsubscribe>sea-glass-look-and-feel+unsubscribe@googlegroups.com</unsubscribe>
			<post>sea-glass-look-and-feel@googlegroups.com</post>
			<archive>http://groups.google.com/group/sea-glass-look-and-feel</archive>
		</mailingList>
	</mailingLists>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>LICENSE.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<organization>
		<name>seaglasslookandfeel.com</name>
		<url>http://seaglasslookandfeel.com</url>
	</organization>
	<build>
		<plugins>
			<!-- Configure the compiler plugin to use JDK 1.6. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<compilerArguments>
						<bootclasspath>${java.home}/lib/rt.jar</bootclasspath>
					</compilerArguments>
				</configuration>
			</plugin>
			<!--
				Configure the jar plugin. This packages the jar for the project. The only configuration done
				here is to add the Maven coordinate information.
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<!--
				Configure the release plugin. This aids in releasing versions of the software by automating
				repetitive tasks that could otherwise be omitted or done incorrectly.
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<goals>deploy</goals>
					<tagBase>https://seaglass.googlecode.com/svn/seaglass/tags</tagBase>
					<mavenExecutorId>forked-path</mavenExecutorId>
				</configuration>
			</plugin>
			<!--
				Configure the exec:java plugin, which runs a java class to generate graphic image files for the
				site documentation. The information comes from an XML file in the site directory.
			-->
			<plugin>
				<groupId>org.kathrynhuxtable.maven.plugins</groupId>
				<artifactId>imagegenerator-maven-plugin</artifactId>
				<version>1.1.2</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<phase>pre-site</phase>
					</execution>
				</executions>
				<configuration>
					<lookAndFeel>com.seaglasslookandfeel.SeaGlassLookAndFeel</lookAndFeel>
					<outputDirectory>${project.build.directory}/generated-site/resources/gen</outputDirectory>
				</configuration>
			</plugin>
			<!--
				Configure the docbkx plugin, which is a more fully featured DocBook converter than the one
				included in Doxia. In particular, it does language-based syntax highlighting in programlisting
				elements. This is run in the pre-site phase and generates its output to the xhtml directory of
				the generated site directory.
			-->
			<plugin>
				<groupId>org.kathrynhuxtable.maven.plugins</groupId>
				<artifactId>docbkx-wrapper-plugin</artifactId>
				<version>0.1</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<phase>pre-site</phase>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.seaglasslookandfeel.siteskin</groupId>
						<artifactId>seaglass-site-skin</artifactId>
						<version>1.0</version>
					</dependency>
				</dependencies>
				<configuration>
					<templateFile>META-INF/maven/site.vm</templateFile>
				</configuration>
			</plugin>
			<!--
				Configure the site plugin. This creates site documentation suitable for deploying to a web site.
				Note that we have generated our DocBook files with the extension .xhtml.vm, thus enabling them
				to be filtered by Doxia for things like the project version number and such.
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<locales>en</locales>
					<outputEncoding>${project.build.sourceEncoding}</outputEncoding>
				</configuration>
			</plugin>
			<!--
				Configure the source plugin. This creates a jar of source files for deployment to the Maven
				repository.
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-Classifier>sources</Implementation-Classifier>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<!-- JUnit is the only external dependency for Sea Glass, and it is only used for testing. -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.6</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<distributionManagement>
		<!-- Site to deploy releases to. -->
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
		</repository>
		<!-- Site to deploy snapshots to. -->
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<!--
			Site to deploy site documentation to. Note that this overwrites the previous site documentation.
			But if someone checks out the project, they can rebuild the site documentation, so we're not too
			concerned.
		-->
		<site>
			<id>local_website</id>
			<url>${siteDeployURL}</url>
		</site>
	</distributionManagement>
	<!-- Define Google Code site's issue management system. -->
	<issueManagement>
		<system>Google Code</system>
		<url>http://seaglasslookandfeel.com/issues/</url>
	</issueManagement>
	<reporting>
		<plugins>
			<!-- Generate the following standard project reports. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.4</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>summary</report>
							<report>dependencies</report>
							<report>dependency-convergence</report>
							<report>project-team</report>
							<report>issue-tracking</report>
							<report>mailing-list</report>
							<report>license</report>
							<report>scm</report>
						</reports>
					</reportSet>
				</reportSets>
				<configuration>
					<webAccessUrl>http://code.google.com/p/seaglass/source/checkout</webAccessUrl>
					<anonymousConnection>scm:svn:http://code.google.com/p/seaglass/source/browse/seaglass/trunk/seaglass</anonymousConnection>
					<developerConnection>scm:svn:https://seaglass.googlecode.com/svn/seaglass/trunk/seaglass
					</developerConnection>
				</configuration>
			</plugin>
			<!-- Configure the source cross reference. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<outputDirectory>${project.reporting.outputDirectory}/xref</outputDirectory>
					<doctitle>${project.name} ${project.version} Code Cross-Reference</doctitle>
					<windowtitle>${project.name} ${project.version} Java API.</windowtitle>
					<javadocDir>${project.reporting.outputDirectory}/apidocs</javadocDir>
				</configuration>
			</plugin>
			<!-- Generate a tag list report to easily find TODO and FIXME comments. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<tags>
						<tag>TODO</tag>
						<tag>FIXME</tag>
					</tags>
				</configuration>
			</plugin>
			<!--
				Configure the PMD report, reporting on coding style. This also configures CPD (copy/paste
				detection) reporting.
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.7.1</version>
				<configuration>
					<targetJdk>1.6</targetJdk>
				</configuration>
			</plugin>
			<!-- Configure the javadoc. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<notimestamp>true</notimestamp>
					<links>
						<link>http://java.sun.com/javase/6/docs/api</link>
						<link>http://www.randelshofer.ch/quaqua/javadoc</link>
					</links>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-Classifier>javadoc</Implementation-Classifier>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
	<!--
		Source control management definitions for anonymous checkout, developer checkout/checkin, and
		browsing via the web. The developer connection is used by the release plugin, as well as in
		generating the site documentation.
	-->
	<scm>
		<connection>scm:svn:http://seaglass.googlecode.com/svn/seaglass/trunk/seaglass</connection>
		<developerConnection>scm:svn:https://seaglass.googlecode.com/svn/seaglass/trunk/seaglass
		</developerConnection>
		<url>http://code.google.com/p/seaglass/source/browse/seaglass/trunk/seaglass</url>
	</scm>
	<profiles>
		<profile>
			<id>mac</id>
			<activation>
				<os>
					<family>mac</family>
				</os>
			</activation>
			<build>
				<plugins>
					<!-- Configure the compiler plugin to use JDK 1.6. -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>2.5.1</version>
						<configuration>
							<source>1.6</source>
							<target>1.6</target>
							<compilerArguments>
								<bootclasspath>${java.home}/../Classes/classes.jar</bootclasspath>
							</compilerArguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!--
			Define the profile to be activated when performing a release. This makes sure all the
			deliverables are signed with GPG.
		-->
		<profile>
			<id>release-sign-artifacts</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.4</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<useAgent>true</useAgent>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<properties>
		<!-- Define the default encoding. We want this to be platform independent. -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!--
			Define the base directory for our site documentation. Note that we use the docbkx plugin for our
			non-site-generated documentation, running it through JTidy to make it conform to
			XHTML/Transitional standards so that Doxia's XHTML converter can wrap the site look and feel
			around it.
		-->
		<siteBaseDirectory>${basedir}/src/site</siteBaseDirectory>
		<siteDeployURL>file:///Users/huxtable/Sites/maven-sites/seaglasslookandfeel</siteDeployURL>
	</properties>
</project>
