<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <organization>
        <name>Research Applications Laboratory NCAR/RAL</name>
        <url>http:/ral.ucar.edu</url>
    </organization>
    <groupId>edu.ucar.ral</groupId>
    <artifactId>nujan</artifactId>
    <packaging>bundle</packaging>
    <version>1.4.4-SNAPSHOT</version>
    <name>Pure Java NetCDF 4/HDF 5 writing library</name>
    <url>http://wiki.ucar.edu/display/NNEWD</url>

    <ciManagement>
        <system>jenkins</system>
        <url>http://nnew-build:8080/jenkins/job/Nujan/</url>
    </ciManagement>
    <!--
         ciManagement> <system>jenkins</system>
         <url>http://${ncar.build.host}:8080/jenkins</url> </ciManagement -->

    <scm>
        <connection>scm:svn:https://proxy.subversion.ucar.edu/nc4writer/trunk</connection>
        <developerConnection>scm:svn:https://proxy.subversion.ucar.edu/nc4writer/trunk</developerConnection>
    </scm>

    <issueManagement>
        <system>jira</system>
        <url>http://sdg.rap.ucar.edu/jira/browse/NNEW</url>
    </issueManagement>

    <licenses>
        <license>
            <name>Modified MIT License</name>
            <url>https://wiki.ucar.edu/display/NNEWD/NNEW+Code+License</url>
            <distribution>repo</distribution>
            <comments>Modified MIT License tailored for the NNEW labs, including UCAR/NCAR, M.I.T.
                Lincoln Laboratory, and NOAA GSD. NOAA cannot copyright because of the Freedom of
                Information Act </comments>
        </license>
    </licenses>

    <mailingLists>
        <mailingList>
            <name>Dev Team</name>
            <post>ncar-nnew-dev@rap.ucar.edu</post>
        </mailingList>
    </mailingLists>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Versions -->
        <build-helper-maven-plugin.version>1.5</build-helper-maven-plugin.version>
        <changelog-maven-plugin.version>2.0-beta-1</changelog-maven-plugin.version>
        <changes-maven-plugin.version>2.0-beta-1</changes-maven-plugin.version>
        <cobertura-maven-plugin.version>2.3</cobertura-maven-plugin.version>
        <commons-codec.version>1.4</commons-codec.version>
        <commons-httpclient.version>3.1</commons-httpclient.version>
        <exec-maven-plugin.version>1.1.1</exec-maven-plugin.version>
        <findbugs-maven-plugin.version>2.3.1</findbugs-maven-plugin.version>
        <javancss-maven-plugin.version>2.0</javancss-maven-plugin.version>
        <jdepend-maven-plugin.version>2.0-beta-2</jdepend-maven-plugin.version>
        <jdom.version>1.1</jdom.version>
        <jpeg2000.version>20081017</jpeg2000.version>

        <junit.version>4.4</junit.version>
        <junit-addons.version>1.4</junit-addons.version>

        <log4j.version>1.2.15</log4j.version>
        <slf4j.version>1.5.10</slf4j.version>
        <maven-bundle-plugin.version>2.0.1</maven-bundle-plugin.version>
        <maven-pax-plugin.version>1.4</maven-pax-plugin.version>
        <maven.release.plugin.version>2.0</maven.release.plugin.version>
        <maven-resources-plugin.version>2.3</maven-resources-plugin.version>
        <taglist-maven-plugin.version>2.4</taglist-maven-plugin.version>
        <testng.version>5.8</testng.version>
        <ucar.netcdf-api.version>4.3</ucar.netcdf-api.version>

        <!-- Other properties -->
        <ncar.build.host>crash</ncar.build.host>

        <maven.assembly.plugin.version>2.2</maven.assembly.plugin.version>

    </properties>

    <!-- ================================================ -->
    <!--            Repository Configuration              -->
    <!-- ================================================ -->

    <repositories>

        <repository>
            <id>central</id>
            <name>Central Maven Repo</name>
            <url>http://repo1.maven.org/maven2</url>
        </repository>

    </repositories>

    <pluginRepositories>

        <pluginRepository>
            <id>fuse.plugins</id>
            <url>http://repo.fusesource.com/maven2</url>
        </pluginRepository>

    </pluginRepositories>

    <dependencyManagement>

        <dependencies>

            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-httpclient</groupId>
                <artifactId>commons-httpclient</artifactId>
                <version>${commons-httpclient.version}</version>
            </dependency>

            <dependency>
                <groupId>jj2000.j2k</groupId>
                <artifactId>jpeg2000</artifactId>
                <version>${jpeg2000.version}</version>
                <type>jar</type>
            </dependency>

            <dependency>
                <groupId>edu.ucar.unidata</groupId>
                <artifactId>netcdf-api</artifactId>
                <version>${ucar.netcdf-api.version}</version>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>junit-addons</groupId>
                <artifactId>junit-addons</artifactId>
                <version>${junit-addons.version}</version>
                <scope>test</scope>
            </dependency>


            <dependency>
                <groupId>org.apache.log4j</groupId>
                <artifactId>com.springsource.org.apache.log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jdom</groupId>
                <artifactId>jdom</artifactId>
                <version>${jdom.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <!-- test scoped dependencies -->

            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${testng.version}</version>
                <scope>test</scope>
                <classifier>jdk15</classifier>
            </dependency>

        </dependencies>

    </dependencyManagement>

    <dependencies>
        
        <dependency>
            <groupId>edu.ucar.unidata</groupId>
            <artifactId>netcdf-api</artifactId>
        </dependency>

        <!-- Commented out - does not seem to be needed for Nujan anymore -->
        <!--dependency>
            <groupId>jj2000.j2k</groupId>
            <artifactId>jpeg2000</artifactId>
        </dependency-->

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
        </dependency>

        <!-- Testing dependencies -->
        <dependency>
           <groupId>junit</groupId>
           <artifactId>junit</artifactId>
        </dependency>

        <dependency>
           <groupId>junit-addons</groupId>
           <artifactId>junit-addons</artifactId>
        </dependency>

        
    </dependencies>


    <build>
        <!-- for webdav-based deployment to archiva -->
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-webdav</artifactId>
                <version>1.0-beta-2</version>
            </extension>
        </extensions>

        <pluginManagement>

            <plugins>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${maven.release.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>add-source</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>src/test/java</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-bundle-plugin</artifactId>
                    <version>${maven-bundle-plugin.version}</version>
                </plugin>

            </plugins>

        </pluginManagement>

        <plugins>

            <!-- Building from Java 1.6 source -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>

            <!-- Convention for distinguishing integration tests from unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!--
                             Uncomment the following two lines for multi-threaded test
                             execution
                         -->
                    <!--parallel>true</parallel-->
                    <!--threadCount>4</threadCount-->
                    <!--
                             TODO: To skip tests, uncomment the next line >
                             <skipTests>true</skipTests -->
                    <excludes>
                        <exclude>**/itest/**</exclude>
                    </excludes>

                    <!--
                             TODO: See AOPTest.java for instructions on executing "aop" tests >
                             <groups>aop</groups -->
                    <!--
                             Use the aspectjweaver agent for load-time weaving during "aop"
                             tests.
                             wcsri/trunk/gds-pojo-service/test/resources/META-INF/aop.xml file
                             will be used to defined LTW aspects. >
                             <argLine>-javaagent:${REPO}/org/aspectj/aspectjweaver/1.6.7/aspectjweaver-1.6.7.jar
                             -Xms40m -Xmx768M -XX:PermSize=128M -XX:MaxPermSize=512M</argLine -->
                    <argLine>-Xmx1050m -XX:MaxPermSize=248M</argLine>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <allowTimestampedSnapshots>true</allowTimestampedSnapshots>
                    <preparationGoals>clean install</preparationGoals>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <!-- <version>2.0.0</version> -->
                <extensions>true</extensions>
                <configuration>
                    <manifestLocation>${project.build.directory}/META-INF</manifestLocation>
                    <instructions>
                        <Bundle-SymbolicName>${pom.groupId}.${pom.artifactId}</Bundle-SymbolicName>
                        <Bundle-Name>${pom.name}</Bundle-Name>
                        <Bundle-Version>${pom.version}</Bundle-Version>
                        <Export-Package>
                            edu.ucar.ral.nujan.*;version="${pom.version}"
                        </Export-Package>
                        <Import-Package>
                            colorspace.boxes;resolution:=optional,
                            com.google.protobuf;resolution:=optional,
                            edu.wisc.ssec.mcidas;resolution:=optional,
                            edu.wisc.ssec.mcidas.adde;resolution:=optional,
                            gnu.regexp;resolution:=optional,
                            icc.lut;resolution:=optional,
                            icc.tags;resolution:=optional,
                            icc.types;resolution:=optional,
                            jj2000.disp;resolution:=optional,
                            net.sf.ehcache;resolution:=optional,
                            opendap.dap;resolution:=optional,
                            opendap.dap.parser;resolution:=optional,
                            visad;resolution:=optional,
                            visad.data;resolution:=optional,
                            visad.data.vis5d;resolution:=optional,
                            visad.jmet;resolution:=optional,
                            visad.util;resolution:=optional,
                            edu.ucar.rap;resolution:=optional,
                        </Import-Package>
                        <Embed-Dependency />
                        <DynamicImport-Package>*</DynamicImport-Package>
                        <Bundle-ClassPath>.</Bundle-ClassPath>
                        <!-- Comment out the src/main/resources for including src/test/resources for testing -->
                        <Include-Resource>src/main/resources</Include-Resource>
                        <!-- Comment out the src/test/resources for an operational, non-testing deployment -->
                        <!--Include-Resource>src/test/resources,src/main/resources/units.xml,lib</Include-Resource-->
                    </instructions>
                </configuration>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

          <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-assembly-plugin</artifactId>
           <version>${maven.assembly.plugin.version}</version>
           <executions>
             <execution>
               <id>unix-bin2</id>
               <phase>package</phase>
               <goals>
                 <goal>single</goal>
               </goals>
               <configuration>
                 <descriptors>
                   <descriptor>src/main/descriptors/sourceCode.xml</descriptor>
                 </descriptors>
                 <finalName>nujan-${project.version}-source</finalName>
                 <tarLongFileMode>gnu</tarLongFileMode>
               </configuration>
             </execution>
           </executions>
         </plugin>
        </plugins>

    </build>

    <reporting>

        <plugins>

            <!-- Code coverage -->

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>${cobertura-maven-plugin.version}</version>
            </plugin>

            <!-- source lines count -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>javancss-maven-plugin</artifactId>
                <version>${javancss-maven-plugin.version}</version>
            </plugin>

            <!-- documentation -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <!-- Temporary fix to get around a JavaDoc issue -->
                    <excludePackageNames>*.persistence.*;*.pubsub.*;*.example.*</excludePackageNames>
                </configuration>
            </plugin>

            <!-- dependency analysis -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jdepend-maven-plugin</artifactId>
                <version>${jdepend-maven-plugin.version}</version>
            </plugin>

            <!-- results of tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
            </plugin>

            <!-- Displays manually-input changes -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>changes-maven-plugin</artifactId>
                <version>${changes-maven-plugin.version}</version>
                <configuration>
                    <xmlPath>${basedir}/src/site/changes.xml</xmlPath>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>changes-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <!-- change log associated with the SCM system -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>changelog-maven-plugin</artifactId>
                <version>${changelog-maven-plugin.version}</version>
            </plugin>

            <!-- TODO and @todo tag extraction -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>taglist-maven-plugin</artifactId>
                <version>${taglist-maven-plugin.version}</version>
            </plugin>

            <!-- checkstyle style violations -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven.checkstyle.plugin.version}</version>

                <configuration>
                    <configLocation>${checkstyle.config}</configLocation>
                    <headerLocation>${header.location}</headerLocation>
                </configuration>
            </plugin>

            <!-- project cross-references -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
            </plugin>

            <!-- runs the PMD code analysis tool -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <configuration>
                    <targetJdk>1.5</targetJdk>
                </configuration>
            </plugin>

            <!-- Bug finding -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${findbugs-maven-plugin.version}</version>
                <configuration>
                    <xmlOutput>true</xmlOutput>
                    <excludeFilterFile>${findbugs.config.exclude}</excludeFilterFile>
                </configuration>
            </plugin>

        </plugins>

    </reporting>

    <!--
    These settings deploy to the RAL repository, which requires that credentials be present
    for this repository in ~/.m2/settings.xml.  To deploy a release to repo:
      mvn deploy -DrepositoryId=snapshots -Durl=http://repo.wx.ll.mit.edu/content/repositories/snapshots
    -->
    <distributionManagement>

        <repository>
          <id>RAL-local-releases</id>
          <url>http://nnew.rap.ucar.edu/maven2/libs-releases-local</url>
        </repository>

        <site>
            <id>sites</id>
            <name>${name}</name>
            <url>file://${sites.path}</url>
        </site>

    </distributionManagement>

</project>
