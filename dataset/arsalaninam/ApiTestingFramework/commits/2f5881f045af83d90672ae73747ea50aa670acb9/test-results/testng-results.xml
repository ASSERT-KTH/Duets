<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="59" passed="59">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="30513" started-at="2020-07-30T20:34:33 UTC" finished-at="2020-07-30T20:35:03 UTC">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="30513" started-at="2020-07-30T20:34:33 UTC" finished-at="2020-07-30T20:35:03 UTC">
      <class name="com.abc.testcase.multipleEndpoints.comments.CommentsOfPostsByUserTest">
        <test-method status="PASS" signature="validateEmailFormatInCommentsForPostsByUser(java.lang.String)[pri:0, instance:com.abc.testcase.multipleEndpoints.comments.CommentsOfPostsByUserTest@33b082c5]" name="validateEmailFormatInCommentsForPostsByUser" duration-ms="5431" started-at="2020-07-30T20:34:54 UTC" data-provider="validUsername" finished-at="2020-07-30T20:34:59 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Samantha]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateEmailFormatInCommentsForPostsByUser -->
      </class> <!-- com.abc.testcase.multipleEndpoints.comments.CommentsOfPostsByUserTest -->
      <class name="com.abc.testcase.singleEndpoint.photo.PhotosTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.abc.testcase.singleEndpoint.photo.PhotosTest@a20b94b]" name="setUp" is-config="true" duration-ms="1" started-at="2020-07-30T20:34:47 UTC" finished-at="2020-07-30T20:34:47 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testResponseCodeAndContentType(int)[pri:0, instance:com.abc.testcase.singleEndpoint.photo.PhotosTest@a20b94b]" name="testResponseCodeAndContentType" duration-ms="433" started-at="2020-07-30T20:34:47 UTC" data-provider="validId" finished-at="2020-07-30T20:34:48 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeAndContentType -->
        <test-method status="PASS" signature="testResponseCodeAndContentType(int)[pri:0, instance:com.abc.testcase.singleEndpoint.photo.PhotosTest@a20b94b]" name="testResponseCodeAndContentType" duration-ms="35" started-at="2020-07-30T20:34:48 UTC" data-provider="validId" finished-at="2020-07-30T20:34:48 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeAndContentType -->
        <test-method status="PASS" signature="testResponseCodeWithInvalidPhotosId(int)[pri:0, instance:com.abc.testcase.singleEndpoint.photo.PhotosTest@a20b94b]" name="testResponseCodeWithInvalidPhotosId" duration-ms="414" started-at="2020-07-30T20:34:48 UTC" data-provider="invalidId" finished-at="2020-07-30T20:34:48 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[7000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeWithInvalidPhotosId -->
        <test-method status="PASS" signature="testResponseCodeWithInvalidPhotosId(int)[pri:0, instance:com.abc.testcase.singleEndpoint.photo.PhotosTest@a20b94b]" name="testResponseCodeWithInvalidPhotosId" duration-ms="410" started-at="2020-07-30T20:34:48 UTC" data-provider="invalidId" finished-at="2020-07-30T20:34:49 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[8000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeWithInvalidPhotosId -->
        <test-method status="PASS" signature="testResponseStatusCode200AndContentTypeJSON()[pri:0, instance:com.abc.testcase.singleEndpoint.photo.PhotosTest@a20b94b]" name="testResponseStatusCode200AndContentTypeJSON" duration-ms="971" started-at="2020-07-30T20:34:49 UTC" finished-at="2020-07-30T20:34:50 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseStatusCode200AndContentTypeJSON -->
        <test-method status="PASS" signature="testResponseBodyWithIdTitleUrlAndThumbnailUrl(int, java.lang.String, java.lang.String)[pri:0, instance:com.abc.testcase.singleEndpoint.photo.PhotosTest@a20b94b]" name="testResponseBodyWithIdTitleUrlAndThumbnailUrl" duration-ms="41" started-at="2020-07-30T20:34:50 UTC" data-provider="validPhotoIdWithTitleAndUrl" depends-on-methods="com.abc.testcase.singleEndpoint.photo.PhotosTest.testResponseCodeAndContentType" finished-at="2020-07-30T20:34:50 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[accusamus beatae ad facilis cum similique qui sunt]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://via.placeholder.com/600/92c952]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseBodyWithIdTitleUrlAndThumbnailUrl -->
        <test-method status="PASS" signature="testResponseBodyWithIdTitleUrlAndThumbnailUrl(int, java.lang.String, java.lang.String)[pri:0, instance:com.abc.testcase.singleEndpoint.photo.PhotosTest@a20b94b]" name="testResponseBodyWithIdTitleUrlAndThumbnailUrl" duration-ms="39" started-at="2020-07-30T20:34:50 UTC" data-provider="validPhotoIdWithTitleAndUrl" depends-on-methods="com.abc.testcase.singleEndpoint.photo.PhotosTest.testResponseCodeAndContentType" finished-at="2020-07-30T20:34:50 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[reprehenderit est deserunt velit ipsam]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://via.placeholder.com/600/771796]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseBodyWithIdTitleUrlAndThumbnailUrl -->
        <test-method status="PASS" signature="fetchListOfPhotosAndAssertSize()[pri:0, instance:com.abc.testcase.singleEndpoint.photo.PhotosTest@a20b94b]" name="fetchListOfPhotosAndAssertSize" duration-ms="126" started-at="2020-07-30T20:34:50 UTC" depends-on-methods="com.abc.testcase.singleEndpoint.photo.PhotosTest.testResponseStatusCode200AndContentTypeJSON" finished-at="2020-07-30T20:34:50 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchListOfPhotosAndAssertSize -->
      </class> <!-- com.abc.testcase.singleEndpoint.photo.PhotosTest -->
      <class name="com.abc.testcase.singleEndpoint.comment.CommentsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.abc.testcase.singleEndpoint.comment.CommentsTest@592238c5]" name="setUp" is-config="true" duration-ms="1" started-at="2020-07-30T20:34:43 UTC" finished-at="2020-07-30T20:34:43 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testResponseCodeAndContentType(int)[pri:0, instance:com.abc.testcase.singleEndpoint.comment.CommentsTest@592238c5]" name="testResponseCodeAndContentType" duration-ms="391" started-at="2020-07-30T20:34:43 UTC" data-provider="validId" finished-at="2020-07-30T20:34:43 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeAndContentType -->
        <test-method status="PASS" signature="testResponseCodeAndContentType(int)[pri:0, instance:com.abc.testcase.singleEndpoint.comment.CommentsTest@592238c5]" name="testResponseCodeAndContentType" duration-ms="412" started-at="2020-07-30T20:34:43 UTC" data-provider="validId" finished-at="2020-07-30T20:34:44 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeAndContentType -->
        <test-method status="PASS" signature="testResponseCodeWithInvalidCommentsId(int)[pri:0, instance:com.abc.testcase.singleEndpoint.comment.CommentsTest@592238c5]" name="testResponseCodeWithInvalidCommentsId" duration-ms="413" started-at="2020-07-30T20:34:44 UTC" data-provider="invalidId" finished-at="2020-07-30T20:34:44 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[7000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeWithInvalidCommentsId -->
        <test-method status="PASS" signature="testResponseCodeWithInvalidCommentsId(int)[pri:0, instance:com.abc.testcase.singleEndpoint.comment.CommentsTest@592238c5]" name="testResponseCodeWithInvalidCommentsId" duration-ms="407" started-at="2020-07-30T20:34:44 UTC" data-provider="invalidId" finished-at="2020-07-30T20:34:44 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[8000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeWithInvalidCommentsId -->
        <test-method status="PASS" signature="testResponseStatusCode200AndContentTypeJSON()[pri:0, instance:com.abc.testcase.singleEndpoint.comment.CommentsTest@592238c5]" name="testResponseStatusCode200AndContentTypeJSON" duration-ms="780" started-at="2020-07-30T20:34:44 UTC" finished-at="2020-07-30T20:34:45 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseStatusCode200AndContentTypeJSON -->
        <test-method status="PASS" signature="testResponseBodyWithIdNameAndEmail(int, java.lang.String, java.lang.String)[pri:0, instance:com.abc.testcase.singleEndpoint.comment.CommentsTest@592238c5]" name="testResponseBodyWithIdNameAndEmail" duration-ms="41" started-at="2020-07-30T20:34:45 UTC" data-provider="validCommentsIdWithNameAndEmail" depends-on-methods="com.abc.testcase.singleEndpoint.comment.CommentsTest.testResponseCodeAndContentType" finished-at="2020-07-30T20:34:45 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[id labore ex et quam laborum]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Eliseo@gardner.biz]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseBodyWithIdNameAndEmail -->
        <test-method status="PASS" signature="testResponseBodyWithIdNameAndEmail(int, java.lang.String, java.lang.String)[pri:0, instance:com.abc.testcase.singleEndpoint.comment.CommentsTest@592238c5]" name="testResponseBodyWithIdNameAndEmail" duration-ms="46" started-at="2020-07-30T20:34:45 UTC" data-provider="validCommentsIdWithNameAndEmail" depends-on-methods="com.abc.testcase.singleEndpoint.comment.CommentsTest.testResponseCodeAndContentType" finished-at="2020-07-30T20:34:45 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[quo vero reiciendis velit similique earum]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Jayne_Kuhic@sydney.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseBodyWithIdNameAndEmail -->
        <test-method status="PASS" signature="fetchListOfCommentsAndAssertSize()[pri:0, instance:com.abc.testcase.singleEndpoint.comment.CommentsTest@592238c5]" name="fetchListOfCommentsAndAssertSize" duration-ms="68" started-at="2020-07-30T20:34:45 UTC" depends-on-methods="com.abc.testcase.singleEndpoint.comment.CommentsTest.testResponseStatusCode200AndContentTypeJSON" finished-at="2020-07-30T20:34:45 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchListOfCommentsAndAssertSize -->
      </class> <!-- com.abc.testcase.singleEndpoint.comment.CommentsTest -->
      <class name="com.abc.testcase.singleEndpoint.post.PostsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.abc.testcase.singleEndpoint.post.PostsTest@1aa99005]" name="setUp" is-config="true" duration-ms="0" started-at="2020-07-30T20:34:41 UTC" finished-at="2020-07-30T20:34:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testResponseCodeAndContentType(int)[pri:0, instance:com.abc.testcase.singleEndpoint.post.PostsTest@1aa99005]" name="testResponseCodeAndContentType" duration-ms="74" started-at="2020-07-30T20:34:41 UTC" data-provider="validId" finished-at="2020-07-30T20:34:41 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeAndContentType -->
        <test-method status="PASS" signature="testResponseCodeAndContentType(int)[pri:0, instance:com.abc.testcase.singleEndpoint.post.PostsTest@1aa99005]" name="testResponseCodeAndContentType" duration-ms="442" started-at="2020-07-30T20:34:41 UTC" data-provider="validId" finished-at="2020-07-30T20:34:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeAndContentType -->
        <test-method status="PASS" signature="testResponseCodeWithInvalidPostsId(int)[pri:0, instance:com.abc.testcase.singleEndpoint.post.PostsTest@1aa99005]" name="testResponseCodeWithInvalidPostsId" duration-ms="396" started-at="2020-07-30T20:34:42 UTC" data-provider="invalidId" finished-at="2020-07-30T20:34:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[7000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeWithInvalidPostsId -->
        <test-method status="PASS" signature="testResponseCodeWithInvalidPostsId(int)[pri:0, instance:com.abc.testcase.singleEndpoint.post.PostsTest@1aa99005]" name="testResponseCodeWithInvalidPostsId" duration-ms="401" started-at="2020-07-30T20:34:42 UTC" data-provider="invalidId" finished-at="2020-07-30T20:34:42 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[8000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeWithInvalidPostsId -->
        <test-method status="PASS" signature="testResponseStatusCode200AndContentTypeJSON()[pri:0, instance:com.abc.testcase.singleEndpoint.post.PostsTest@1aa99005]" name="testResponseStatusCode200AndContentTypeJSON" duration-ms="45" started-at="2020-07-30T20:34:42 UTC" finished-at="2020-07-30T20:34:43 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseStatusCode200AndContentTypeJSON -->
        <test-method status="PASS" signature="testResponseBodyWithIdTitleAndBody(int, java.lang.String)[pri:0, instance:com.abc.testcase.singleEndpoint.post.PostsTest@1aa99005]" name="testResponseBodyWithIdTitleAndBody" duration-ms="67" started-at="2020-07-30T20:34:43 UTC" data-provider="validPostsIdWithTitle" depends-on-methods="com.abc.testcase.singleEndpoint.post.PostsTest.testResponseCodeAndContentType" finished-at="2020-07-30T20:34:43 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sunt aut facere repellat provident occaecati excepturi optio reprehenderit]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseBodyWithIdTitleAndBody -->
        <test-method status="PASS" signature="testResponseBodyWithIdTitleAndBody(int, java.lang.String)[pri:0, instance:com.abc.testcase.singleEndpoint.post.PostsTest@1aa99005]" name="testResponseBodyWithIdTitleAndBody" duration-ms="39" started-at="2020-07-30T20:34:43 UTC" data-provider="validPostsIdWithTitle" depends-on-methods="com.abc.testcase.singleEndpoint.post.PostsTest.testResponseCodeAndContentType" finished-at="2020-07-30T20:34:43 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qui est esse]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseBodyWithIdTitleAndBody -->
        <test-method status="PASS" signature="fetchListOfPostsAndAssertSize()[pri:0, instance:com.abc.testcase.singleEndpoint.post.PostsTest@1aa99005]" name="fetchListOfPostsAndAssertSize" duration-ms="76" started-at="2020-07-30T20:34:43 UTC" depends-on-methods="com.abc.testcase.singleEndpoint.post.PostsTest.testResponseStatusCode200AndContentTypeJSON" finished-at="2020-07-30T20:34:43 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchListOfPostsAndAssertSize -->
      </class> <!-- com.abc.testcase.singleEndpoint.post.PostsTest -->
      <class name="com.abc.testcase.multipleEndpoints.posts.PostsByUserTest">
        <test-method status="PASS" signature="testTotalCountOfPostsByUserAndValidateResponseBody(java.lang.String, int)[pri:0, instance:com.abc.testcase.multipleEndpoints.posts.PostsByUserTest@5cdf39b2]" name="testTotalCountOfPostsByUserAndValidateResponseBody" duration-ms="493" started-at="2020-07-30T20:34:50 UTC" data-provider="validUsernameWithNumberOfPosts" finished-at="2020-07-30T20:34:50 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Antonette]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTotalCountOfPostsByUserAndValidateResponseBody -->
        <test-method status="PASS" signature="testTotalCountOfPostsByUserAndValidateResponseBody(java.lang.String, int)[pri:0, instance:com.abc.testcase.multipleEndpoints.posts.PostsByUserTest@5cdf39b2]" name="testTotalCountOfPostsByUserAndValidateResponseBody" duration-ms="461" started-at="2020-07-30T20:34:50 UTC" data-provider="validUsernameWithNumberOfPosts" finished-at="2020-07-30T20:34:51 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Karianne]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTotalCountOfPostsByUserAndValidateResponseBody -->
        <test-method status="PASS" signature="testTotalCountOfPostsByUserAndValidateResponseBody(java.lang.String, int)[pri:0, instance:com.abc.testcase.multipleEndpoints.posts.PostsByUserTest@5cdf39b2]" name="testTotalCountOfPostsByUserAndValidateResponseBody" duration-ms="408" started-at="2020-07-30T20:34:51 UTC" data-provider="validUsernameWithNumberOfPosts" finished-at="2020-07-30T20:34:51 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Kamren]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTotalCountOfPostsByUserAndValidateResponseBody -->
      </class> <!-- com.abc.testcase.multipleEndpoints.posts.PostsByUserTest -->
      <class name="com.abc.testcase.singleEndpoint.todo.TodosTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.abc.testcase.singleEndpoint.todo.TodosTest@64c4c01]" name="setUp" is-config="true" duration-ms="1" started-at="2020-07-30T20:34:40 UTC" finished-at="2020-07-30T20:34:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testResponseCodeAndContentType(int)[pri:0, instance:com.abc.testcase.singleEndpoint.todo.TodosTest@64c4c01]" name="testResponseCodeAndContentType" duration-ms="45" started-at="2020-07-30T20:34:40 UTC" data-provider="validId" finished-at="2020-07-30T20:34:40 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeAndContentType -->
        <test-method status="PASS" signature="testResponseCodeAndContentType(int)[pri:0, instance:com.abc.testcase.singleEndpoint.todo.TodosTest@64c4c01]" name="testResponseCodeAndContentType" duration-ms="80" started-at="2020-07-30T20:34:40 UTC" data-provider="validId" finished-at="2020-07-30T20:34:40 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeAndContentType -->
        <test-method status="PASS" signature="testResponseCodeWithInvalidTodosId(int)[pri:0, instance:com.abc.testcase.singleEndpoint.todo.TodosTest@64c4c01]" name="testResponseCodeWithInvalidTodosId" duration-ms="399" started-at="2020-07-30T20:34:40 UTC" data-provider="invalidId" finished-at="2020-07-30T20:34:40 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[7000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeWithInvalidTodosId -->
        <test-method status="PASS" signature="testResponseCodeWithInvalidTodosId(int)[pri:0, instance:com.abc.testcase.singleEndpoint.todo.TodosTest@64c4c01]" name="testResponseCodeWithInvalidTodosId" duration-ms="407" started-at="2020-07-30T20:34:40 UTC" data-provider="invalidId" finished-at="2020-07-30T20:34:41 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[8000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeWithInvalidTodosId -->
        <test-method status="PASS" signature="testResponseStatusCode200AndContentTypeJSON()[pri:0, instance:com.abc.testcase.singleEndpoint.todo.TodosTest@64c4c01]" name="testResponseStatusCode200AndContentTypeJSON" duration-ms="45" started-at="2020-07-30T20:34:41 UTC" finished-at="2020-07-30T20:34:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseStatusCode200AndContentTypeJSON -->
        <test-method status="PASS" signature="testResponseBodyWithIdTitleAndStatus(int, java.lang.String, boolean)[pri:0, instance:com.abc.testcase.singleEndpoint.todo.TodosTest@64c4c01]" name="testResponseBodyWithIdTitleAndStatus" duration-ms="57" started-at="2020-07-30T20:34:41 UTC" data-provider="validTodosIdWithTitleAndStatus" depends-on-methods="com.abc.testcase.singleEndpoint.todo.TodosTest.testResponseCodeAndContentType" finished-at="2020-07-30T20:34:41 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[delectus aut autem]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseBodyWithIdTitleAndStatus -->
        <test-method status="PASS" signature="testResponseBodyWithIdTitleAndStatus(int, java.lang.String, boolean)[pri:0, instance:com.abc.testcase.singleEndpoint.todo.TodosTest@64c4c01]" name="testResponseBodyWithIdTitleAndStatus" duration-ms="61" started-at="2020-07-30T20:34:41 UTC" data-provider="validTodosIdWithTitleAndStatus" depends-on-methods="com.abc.testcase.singleEndpoint.todo.TodosTest.testResponseCodeAndContentType" finished-at="2020-07-30T20:34:41 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[quis ut nam facilis et officia qui]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseBodyWithIdTitleAndStatus -->
        <test-method status="PASS" signature="fetchListOfTodosAndAssertSize()[pri:0, instance:com.abc.testcase.singleEndpoint.todo.TodosTest@64c4c01]" name="fetchListOfTodosAndAssertSize" duration-ms="107" started-at="2020-07-30T20:34:41 UTC" depends-on-methods="com.abc.testcase.singleEndpoint.todo.TodosTest.testResponseStatusCode200AndContentTypeJSON" finished-at="2020-07-30T20:34:41 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchListOfTodosAndAssertSize -->
      </class> <!-- com.abc.testcase.singleEndpoint.todo.TodosTest -->
      <class name="com.abc.testcase.singleEndpoint.album.AlbumsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.abc.testcase.singleEndpoint.album.AlbumsTest@6ee8dcd3]" name="setUp" is-config="true" duration-ms="1" started-at="2020-07-30T20:34:45 UTC" finished-at="2020-07-30T20:34:45 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testResponseCodeAndContentType(int)[pri:0, instance:com.abc.testcase.singleEndpoint.album.AlbumsTest@6ee8dcd3]" name="testResponseCodeAndContentType" duration-ms="53" started-at="2020-07-30T20:34:45 UTC" data-provider="validId" finished-at="2020-07-30T20:34:45 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeAndContentType -->
        <test-method status="PASS" signature="testResponseCodeAndContentType(int)[pri:0, instance:com.abc.testcase.singleEndpoint.album.AlbumsTest@6ee8dcd3]" name="testResponseCodeAndContentType" duration-ms="563" started-at="2020-07-30T20:34:45 UTC" data-provider="validId" finished-at="2020-07-30T20:34:46 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeAndContentType -->
        <test-method status="PASS" signature="testResponseCodeWithInvalidAlbumsId(int)[pri:0, instance:com.abc.testcase.singleEndpoint.album.AlbumsTest@6ee8dcd3]" name="testResponseCodeWithInvalidAlbumsId" duration-ms="379" started-at="2020-07-30T20:34:46 UTC" data-provider="invalidId" finished-at="2020-07-30T20:34:46 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[7000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeWithInvalidAlbumsId -->
        <test-method status="PASS" signature="testResponseCodeWithInvalidAlbumsId(int)[pri:0, instance:com.abc.testcase.singleEndpoint.album.AlbumsTest@6ee8dcd3]" name="testResponseCodeWithInvalidAlbumsId" duration-ms="424" started-at="2020-07-30T20:34:46 UTC" data-provider="invalidId" finished-at="2020-07-30T20:34:47 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[8000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeWithInvalidAlbumsId -->
        <test-method status="PASS" signature="testResponseStatusCode200AndContentTypeJSON()[pri:0, instance:com.abc.testcase.singleEndpoint.album.AlbumsTest@6ee8dcd3]" name="testResponseStatusCode200AndContentTypeJSON" duration-ms="384" started-at="2020-07-30T20:34:47 UTC" finished-at="2020-07-30T20:34:47 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseStatusCode200AndContentTypeJSON -->
        <test-method status="PASS" signature="testResponseBodyWithIdAndTitle(int, java.lang.String)[pri:0, instance:com.abc.testcase.singleEndpoint.album.AlbumsTest@6ee8dcd3]" name="testResponseBodyWithIdAndTitle" duration-ms="43" started-at="2020-07-30T20:34:47 UTC" data-provider="validAlbumIdWithTitle" depends-on-methods="com.abc.testcase.singleEndpoint.album.AlbumsTest.testResponseCodeAndContentType" finished-at="2020-07-30T20:34:47 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[quidem molestiae enim]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseBodyWithIdAndTitle -->
        <test-method status="PASS" signature="testResponseBodyWithIdAndTitle(int, java.lang.String)[pri:0, instance:com.abc.testcase.singleEndpoint.album.AlbumsTest@6ee8dcd3]" name="testResponseBodyWithIdAndTitle" duration-ms="44" started-at="2020-07-30T20:34:47 UTC" data-provider="validAlbumIdWithTitle" depends-on-methods="com.abc.testcase.singleEndpoint.album.AlbumsTest.testResponseCodeAndContentType" finished-at="2020-07-30T20:34:47 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sunt qui excepturi placeat culpa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseBodyWithIdAndTitle -->
        <test-method status="PASS" signature="fetchListOfAlbumsAndAssertSize()[pri:0, instance:com.abc.testcase.singleEndpoint.album.AlbumsTest@6ee8dcd3]" name="fetchListOfAlbumsAndAssertSize" duration-ms="54" started-at="2020-07-30T20:34:47 UTC" depends-on-methods="com.abc.testcase.singleEndpoint.album.AlbumsTest.testResponseStatusCode200AndContentTypeJSON" finished-at="2020-07-30T20:34:47 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchListOfAlbumsAndAssertSize -->
      </class> <!-- com.abc.testcase.singleEndpoint.album.AlbumsTest -->
      <class name="com.abc.testcase.multipleEndpoints.photos.PhotosInAlbumsByUserTest">
        <test-method status="PASS" signature="validateUrlFormatInPhotosForAlbumsAssociatedWithUser(java.lang.String)[pri:0, instance:com.abc.testcase.multipleEndpoints.photos.PhotosInAlbumsByUserTest@16073fa8]" name="validateUrlFormatInPhotosForAlbumsAssociatedWithUser" duration-ms="4142" started-at="2020-07-30T20:34:59 UTC" data-provider="validUsername" finished-at="2020-07-30T20:35:03 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Samantha]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUrlFormatInPhotosForAlbumsAssociatedWithUser -->
      </class> <!-- com.abc.testcase.multipleEndpoints.photos.PhotosInAlbumsByUserTest -->
      <class name="com.abc.testcase.multipleEndpoints.albums.AlbumsOfUserTest">
        <test-method status="PASS" signature="testTotalCountOfAlbumsAssociatedWithUserAndValidateResponseBody(java.lang.String, int)[pri:0, instance:com.abc.testcase.multipleEndpoints.albums.AlbumsOfUserTest@14f3c6fc]" name="testTotalCountOfAlbumsAssociatedWithUserAndValidateResponseBody" duration-ms="441" started-at="2020-07-30T20:34:51 UTC" data-provider="validUsernameWithNumberOfAlbums" finished-at="2020-07-30T20:34:52 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bret]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTotalCountOfAlbumsAssociatedWithUserAndValidateResponseBody -->
        <test-method status="PASS" signature="testTotalCountOfAlbumsAssociatedWithUserAndValidateResponseBody(java.lang.String, int)[pri:0, instance:com.abc.testcase.multipleEndpoints.albums.AlbumsOfUserTest@14f3c6fc]" name="testTotalCountOfAlbumsAssociatedWithUserAndValidateResponseBody" duration-ms="427" started-at="2020-07-30T20:34:52 UTC" data-provider="validUsernameWithNumberOfAlbums" finished-at="2020-07-30T20:34:52 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Samantha]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTotalCountOfAlbumsAssociatedWithUserAndValidateResponseBody -->
        <test-method status="PASS" signature="testTotalCountOfAlbumsAssociatedWithUserAndValidateResponseBody(java.lang.String, int)[pri:0, instance:com.abc.testcase.multipleEndpoints.albums.AlbumsOfUserTest@14f3c6fc]" name="testTotalCountOfAlbumsAssociatedWithUserAndValidateResponseBody" duration-ms="456" started-at="2020-07-30T20:34:52 UTC" data-provider="validUsernameWithNumberOfAlbums" finished-at="2020-07-30T20:34:52 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Maxime_Nienow]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTotalCountOfAlbumsAssociatedWithUserAndValidateResponseBody -->
      </class> <!-- com.abc.testcase.multipleEndpoints.albums.AlbumsOfUserTest -->
      <class name="com.abc.testcase.singleEndpoint.user.UsersTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.abc.testcase.singleEndpoint.user.UsersTest@776802b0]" name="setUp" is-config="true" duration-ms="1955" started-at="2020-07-30T20:34:33 UTC" finished-at="2020-07-30T20:34:35 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testResponseCodeAndContentType(int)[pri:0, instance:com.abc.testcase.singleEndpoint.user.UsersTest@776802b0]" name="testResponseCodeAndContentType" duration-ms="2740" started-at="2020-07-30T20:34:35 UTC" data-provider="validId" finished-at="2020-07-30T20:34:38 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeAndContentType -->
        <test-method status="PASS" signature="testResponseCodeAndContentType(int)[pri:0, instance:com.abc.testcase.singleEndpoint.user.UsersTest@776802b0]" name="testResponseCodeAndContentType" duration-ms="117" started-at="2020-07-30T20:34:38 UTC" data-provider="validId" finished-at="2020-07-30T20:34:38 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeAndContentType -->
        <test-method status="PASS" signature="testResponseCodeWithInvalidUsersId(int)[pri:0, instance:com.abc.testcase.singleEndpoint.user.UsersTest@776802b0]" name="testResponseCodeWithInvalidUsersId" duration-ms="469" started-at="2020-07-30T20:34:38 UTC" data-provider="invalidId" finished-at="2020-07-30T20:34:38 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[7000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeWithInvalidUsersId -->
        <test-method status="PASS" signature="testResponseCodeWithInvalidUsersId(int)[pri:0, instance:com.abc.testcase.singleEndpoint.user.UsersTest@776802b0]" name="testResponseCodeWithInvalidUsersId" duration-ms="434" started-at="2020-07-30T20:34:38 UTC" data-provider="invalidId" finished-at="2020-07-30T20:34:39 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[8000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseCodeWithInvalidUsersId -->
        <test-method status="PASS" signature="testResponseStatusCode200AndContentTypeJSON()[pri:0, instance:com.abc.testcase.singleEndpoint.user.UsersTest@776802b0]" name="testResponseStatusCode200AndContentTypeJSON" duration-ms="457" started-at="2020-07-30T20:34:39 UTC" finished-at="2020-07-30T20:34:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseStatusCode200AndContentTypeJSON -->
        <test-method status="PASS" signature="testResponseBodyWithIdTitleAndBody(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.abc.testcase.singleEndpoint.user.UsersTest@776802b0]" name="testResponseBodyWithIdTitleAndBody" duration-ms="702" started-at="2020-07-30T20:34:39 UTC" data-provider="validUserIdWithNameUsernameEmailPhoneAndWebsite" depends-on-methods="com.abc.testcase.singleEndpoint.user.UsersTest.testResponseCodeAndContentType" finished-at="2020-07-30T20:34:40 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Leanne Graham]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Bret]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sincere@april.biz]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1-770-736-8031 x56442]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[hildegard.org]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseBodyWithIdTitleAndBody -->
        <test-method status="PASS" signature="testResponseBodyWithIdTitleAndBody(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.abc.testcase.singleEndpoint.user.UsersTest@776802b0]" name="testResponseBodyWithIdTitleAndBody" duration-ms="75" started-at="2020-07-30T20:34:40 UTC" data-provider="validUserIdWithNameUsernameEmailPhoneAndWebsite" depends-on-methods="com.abc.testcase.singleEndpoint.user.UsersTest.testResponseCodeAndContentType" finished-at="2020-07-30T20:34:40 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ervin Howell]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Antonette]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Shanna@melissa.tv]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[010-692-6593 x09125]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[anastasia.net]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseBodyWithIdTitleAndBody -->
        <test-method status="PASS" signature="fetchListOfUsersAndAssertSize()[pri:0, instance:com.abc.testcase.singleEndpoint.user.UsersTest@776802b0]" name="fetchListOfUsersAndAssertSize" duration-ms="67" started-at="2020-07-30T20:34:40 UTC" depends-on-methods="com.abc.testcase.singleEndpoint.user.UsersTest.testResponseStatusCode200AndContentTypeJSON" finished-at="2020-07-30T20:34:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchListOfUsersAndAssertSize -->
      </class> <!-- com.abc.testcase.singleEndpoint.user.UsersTest -->
      <class name="com.abc.testcase.multipleEndpoints.todos.TodosByUserTest">
        <test-method status="PASS" signature="testTotalCountOfTodosAssociatedWithUserAndValidateResponseBody(java.lang.String, int)[pri:0, instance:com.abc.testcase.multipleEndpoints.todos.TodosByUserTest@3cd59ef5]" name="testTotalCountOfTodosAssociatedWithUserAndValidateResponseBody" duration-ms="426" started-at="2020-07-30T20:34:52 UTC" data-provider="validUsernameWithNumberOfTodos" finished-at="2020-07-30T20:34:53 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Leopoldo_Corkery]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTotalCountOfTodosAssociatedWithUserAndValidateResponseBody -->
        <test-method status="PASS" signature="testTotalCountOfTodosAssociatedWithUserAndValidateResponseBody(java.lang.String, int)[pri:0, instance:com.abc.testcase.multipleEndpoints.todos.TodosByUserTest@3cd59ef5]" name="testTotalCountOfTodosAssociatedWithUserAndValidateResponseBody" duration-ms="412" started-at="2020-07-30T20:34:53 UTC" data-provider="validUsernameWithNumberOfTodos" finished-at="2020-07-30T20:34:53 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Elwyn.Skiles]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTotalCountOfTodosAssociatedWithUserAndValidateResponseBody -->
        <test-method status="PASS" signature="testTotalCountOfTodosAssociatedWithUserAndValidateResponseBody(java.lang.String, int)[pri:0, instance:com.abc.testcase.multipleEndpoints.todos.TodosByUserTest@3cd59ef5]" name="testTotalCountOfTodosAssociatedWithUserAndValidateResponseBody" duration-ms="448" started-at="2020-07-30T20:34:53 UTC" data-provider="validUsernameWithNumberOfTodos" finished-at="2020-07-30T20:34:54 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moriah.Stanton]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTotalCountOfTodosAssociatedWithUserAndValidateResponseBody -->
      </class> <!-- com.abc.testcase.multipleEndpoints.todos.TodosByUserTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
