<?xml version="1.0" encoding="UTF-8"?>
<project>
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.akiban</groupId>
    <artifactId>akiban-server</artifactId>
    <packaging>jar</packaging>
    <version>1.3.0-SNAPSHOT</version>
    <name>akiban-server</name>
    <properties>
        <!-- this is the default version number, hudson job sets this to the official number -->
        <BZR_REVISION></BZR_REVISION>
        <akiban.test.extraJvmArgs></akiban.test.extraJvmArgs>
        <akiban.test.JmxJvmArgs>-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=8082 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false</akiban.test.JmxJvmArgs>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>
    <distributionManagement>
        <snapshotRepository>
            <id>akiban</id>
            <name>akiban-snapshots</name>
            <url>http://akiban.artifactoryonline.com/akiban/libs-snapshots-local</url>
        </snapshotRepository>
        <repository>
            <id>akiban</id>
            <name>akiban-releases</name>
            <url>http://akiban.artifactoryonline.com/akiban/libs-releases-local</url>
        </repository>
    </distributionManagement>
    <dependencies>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math</artifactId>
            <version>2.2</version>
        </dependency>
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>1.8</version>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>3.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>11.0.1</version>
        </dependency>
        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-grapher</artifactId>
            <version>3.0</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>velocity</groupId>
            <artifactId>velocity-dep</artifactId>
            <version>1.4</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.10</version>
        </dependency>
        <dependency>
            <groupId>com.akiban</groupId>
            <artifactId>akiban-persistit</artifactId>
            <version>3.1.2-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.akiban</groupId>
            <artifactId>akiban-sql-parser</artifactId>
            <version>1.0.3-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>zookeeper</artifactId>
            <version>3.3.0</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.jms</groupId>
                    <artifactId>jms</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jmx</groupId>
                    <artifactId>jmxri</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jdmk</groupId>
                    <artifactId>jmxtools</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-embedded</artifactId>
            <version>6.1.14</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.6.1</version>
        </dependency>
        <dependency>
            <!-- TODO remove this once we get packaging under control, so that we can dynamically set the logger -->
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.6.1</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>2.3.0</version>
        </dependency>
        <dependency>
            <groupId>com.akiban</groupId>
            <artifactId>akiban-sql-parser</artifactId>
            <version>1.0.3-SNAPSHOT</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.0-801.jdbc4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.0</version>
        </dependency>
        <dependency>
            <groupId>com.ibm.icu</groupId>
            <artifactId>icu4j</artifactId>
            <version>49.1</version>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>version/akserver_version</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>version/akserver_version</exclude>
                </excludes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.4.3</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.5</version>
                <executions>
                    <execution>
                        <id>reserve-network-port</id>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <portNames>
                                <portName>akserver.port</portName>
                                <portName>debug.port</portName>
                                <portName>akserver.postgres.port</portName>
                            </portNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.1.2</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <mainClass>com.akiban.server.AkServer</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.atlassian.maven.plugins</groupId>
                <artifactId>maven-clover2-plugin</artifactId>
                <version>3.0.1</version>
                <configuration>
                    <generateHistorical>true</generateHistorical>
                    <historyDir>/clover/history</historyDir>
                    <license>${clover.license}</license>
                    <generateXml>true</generateXml>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.11</version>
                <configuration>
                    <systemPropertyVariables>
                        <akserver.port>${akserver.port}</akserver.port>
                        <akserver.postgres.port>${akserver.postgres.port}</akserver.postgres.port>
                    </systemPropertyVariables>
                    <argLine>${akiban.test.extraJvmArgs} ${akiban.test.JmxJvmArgs}</argLine>
                    <includes>
                        <include>**/*Test.java</include>
                        <include>**/*Test?.java</include>
                    </includes>
                    <excludes>
                        <!-- None -->
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.11</version>
                <configuration>
                    <systemPropertyVariables>
                        <akserver.port>${akserver.port}</akserver.port>
                        <akserver.postgres.port>${akserver.postgres.port}</akserver.postgres.port>
                    </systemPropertyVariables>
                    <argLine>-Xmx512m ${akiban.test.extraJvmArgs} ${akiban.test.JmxJvmArgs}</argLine>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>1.2</version>
                <configuration>
                    <findbugsXmlOutput>true</findbugsXmlOutput>
                    <findbugsXmlWithMessages>true</findbugsXmlWithMessages>
                    <xmlOutput>true</xmlOutput>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.mycila.maven-license-plugin</groupId>
                <artifactId>maven-license-plugin</artifactId>
                <version>1.10.b1</version>
                <configuration>
                    <header>src/etc/header.txt</header>
                    <strictCheck>true</strictCheck>
                    <failIfMissing>true</failIfMissing>
                    <excludes>
                        <!-- General files that can't have or don't need header -->
                        <exclude>**/*.ddl</exclude>
                        <exclude>**/*.sql</exclude>
                        <exclude>**/*.tag</exclude>
                        <exclude>**/*.expected</exclude>
                        <exclude>**/*.error</exclude>
                        <exclude>**/*.dat</exclude>
                        <exclude>**/*.fail</exclude>
                        <exclude>**/*.params</exclude>
                        <exclude>**/*.test</exclude>
                        <exclude>**/*.yaml</exclude>
                        <exclude>**/*.yml</exclude>
                        <exclude>src/test/bin/*.sh</exclude>
                        <exclude>src/test/bin/*.cmd</exclude>
                        <exclude>.idea/**</exclude>
                        <exclude>**/*.proto</exclude>
                        <exclude>.bzrignore</exclude>
                        <exclude>velocity.log</exclude>
                        <!-- No extension. Manually add header and ignore -->
                        <exclude>bin/*</exclude>
                        <exclude>conf/config/jvm.options</exclude>
                        <exclude>**/jvm.options</exclude>
                        <exclude>conf/config/jvm-options.cmd</exclude>
                        <!-- Files requiring a specific format (packaging control, test output, etc) -->
                        <exclude>debian/*</exclude>
                        <exclude>redhat/*</exclude>
                        <exclude>macosx/**</exclude>
                        <exclude>windows/**</exclude>
                        <exclude>**/LICENSE*.txt</exclude>
                        <exclude>src/main/resources/version/akserver_version</exclude>
                        <exclude>src/test/resources/com/akiban/**/README*</exclude>
                        <exclude>src/test/resources/com/akiban/**/*.properties</exclude>
                        <exclude>src/test/resources/com/akiban/ais/model/staticgrouping/*</exclude>
                        <exclude>src/main/resources/com/akiban/server/service/functions/functionpath.txt</exclude>
                        <exclude>src/test/resources/com/akiban/server/service/functions/testfunctionpath.txt</exclude>
                        <exclude>src/test/resources/com/akiban/server/service/servicemanager/configuration/yaml/test-composite.yaml.1</exclude>
                        <exclude>src/main/resources/com/akiban/server/types3/service/t3s.txt</exclude>
                    </excludes>
                    <mapping>
                        <g>JAVADOC_STYLE</g>
                        <yml>SCRIPT_STYLE</yml>
                    </mapping>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Earlier version of eclipse plugin to avoid resource filtering bug. 
         (See http://stackoverflow.com/questions/1397903/setting-project-for-eclipse-using-maven)-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.6</version>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>protobuf-compile</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <tasks>
                                <mkdir dir="target/generated-sources/protobuf"/>
                                <exec executable="protoc" failonerror="true">
                                    <arg value="--java_out=target/generated-sources/protobuf"/>
                                    <arg value="src/main/protobuf/akiban_information_schema.proto"/>
                                </exec>
                            </tasks>
                            <sourceRoot>target/generated-sources</sourceRoot>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>installer-inno-setup</id>
            <activation>
                <property>
                    <name>installer</name>
                    <value>inno-setup</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>inno-setup-stage</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <copy file="${basedir}/${akiban.license}" tofile="${setup.staging.dir}/LICENSE.TXT" />
                                        <copy todir="${setup.staging.dir}">
                                            <fileset dir="${basedir}" includes="bin/*.cmd,doc/**" />
                                            <fileset dir="${basedir}/windows" />
                                            <fileset dir="${akiban.client.project}" includes="bin/*.cmd" />
                                        </copy>
                                        <copy todir="${setup.staging.dir}/lib">
                                            <fileset dir="${akiban.client.project}/target" includes="akiban-client-tools-${project.version}.jar" />
                                            <fileset dir="${akiban.client.project}/target/dependency" />
                                        </copy>
                                        <copy todir="${setup.staging.dir}/config">
                                          <fileset dir="${basedir}/windows/${akiban.release.target}/">
                                        </copy>
                                        <get src="http://apache.spinellicreations.com/commons/daemon/binaries/windows/commons-daemon-1.0.10-bin-windows.zip" dest="${setup.staging.dir}/procrun.zip" usetimestamp="true" />
                                        <mkdir dir="${setup.staging.dir}/procrun" />
                                        <unzip src="${setup.staging.dir}/procrun.zip" dest="${setup.staging.dir}/procrun" />
                                        <exec dir="${setup.staging.dir}/procrun" executable="mt" failonerror="true">
                                            <arg line="-manifest ..\prunsrv.manifest -outputresource:prunsrv.exe;1" />
                                        </exec>
                                        <exec dir="${setup.staging.dir}/procrun" executable="mt" failonerror="true">
                                            <arg line="-manifest ..\prunmgr.manifest -outputresource:prunmgr.exe;1" />
                                        </exec>
                                        <exec dir="${setup.staging.dir}/procrun/amd64" executable="mt" failonerror="true">
                                            <arg line="-manifest ..\..\prunsrv.manifest -outputresource:prunsrv.exe;1" />
                                        </exec>
                                        <exec dir="${setup.staging.dir}/procrun/ia64" executable="mt" failonerror="true">
                                            <arg line="-manifest ..\..\prunsrv.manifest -outputresource:prunsrv.exe;1" />
                                        </exec>
                                    </tasks>
                                </configuration>
                            </execution>
                            <execution>
                                <id>inno-setup-compile</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <copy todir="${setup.staging.dir}/lib">
                                            <fileset dir="${project.build.directory}" includes="${setup.jarfile}" />
                                        </copy>
                                        <exec dir="${setup.staging.dir}" executable="iscc" failonerror="true">
                                            <arg line="/O.." />
                                            <arg line="/F&quot;${setup.output}&quot;" />
                                            <arg line="/dVERSION=${setup.appversion}" />
                                            <arg value="AkibanServer.iss" />
                                        </exec>
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <properties>
                <setup.staging.dir>${project.build.directory}/isstage</setup.staging.dir>
                <setup.appversion>${project.version}</setup.appversion>
                <setup.jarfile>${project.build.finalName}-jar-with-dependencies.jar</setup.jarfile>
                <setup.output>${project.build.finalName}-installer</setup.output>
                <akiban.license>LICENSE-EE.txt</akiban.license>
                <akiban.release.target>enterprise</akiban.release.target> <!-- other options: { community } -->
                <akiban.client.project>${basedir}/../client-latest</akiban.client.project>
            </properties>
        </profile>
    </profiles>
</project>
