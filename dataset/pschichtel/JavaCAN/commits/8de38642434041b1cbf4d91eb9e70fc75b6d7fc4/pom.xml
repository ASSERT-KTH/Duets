<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>tel.schich</groupId>
    <artifactId>JavaCAN</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <includedir>${java.home}/../include</includedir>
        <libdir>${java.home}/lib</libdir>
        <includedir.linux>${includedir}/linux</includedir.linux>
        <headers.target>${project.build.directory}/jni</headers.target>
        <os>linux</os>
        <jdkversion>1.8</jdkversion>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.2.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.2.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>5.2.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <version>1.2.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-runner</artifactId>
            <version>1.2.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>${jdkversion}</source>
                    <target>${jdkversion}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <version>1.0-alpha-9</version>
                <extensions>true</extensions>
                <configuration>
                    <compilerProvider>generic-classic</compilerProvider>
                    <compilerExecutable>gcc</compilerExecutable>
                    <linkerExecutable>gcc</linkerExecutable>
                    <javahOutputDirectory>${headers.target}</javahOutputDirectory>
                    <javahIncludes>
                        <javahInclude>
                            <className>tel.schich.javacan.SocketCAN</className>
                            <headerName>javacan_socketcan.h</headerName>
                        </javahInclude>
                    </javahIncludes>
                    <sources>
                        <source>
                            <directory>${basedir}/src/main/c</directory>
                            <fileNames>
                                <fileName>javacan_socketcan.c</fileName>
                            </fileNames>
                        </source>
                        <source>
                            <directory>${basedir}/src/main/c/include</directory>
                        </source>
                    </sources>
                    <javahOS>${os}</javahOS>
                    <compilerEndOptions>
                        <compilerEndOption>-fPIC</compilerEndOption>
                        <compilerEndOption>-std=c99</compilerEndOption>
                    </compilerEndOptions>
                    <linkerStartOptions>
                        <linkerStartOption>-I ${libdir}</linkerStartOption>
                    </linkerStartOptions>
                    <linkerEndOptions>
                        <linkerEndOption>-shared</linkerEndOption>
                        <linkerEndOption>-fPIC</linkerEndOption>
                    </linkerEndOptions>
                    <linkerOutputDirectory>${project.build.directory}</linkerOutputDirectory>
                    <linkerFinalName>libSocketCAN</linkerFinalName>
                    <linkerFinalNameExt>so</linkerFinalNameExt>
                </configuration>
                <executions>
                    <execution>
                        <id>compile-native</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>javah</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>link-native</id>
                        <phase>package</phase>
                        <goals>
                            <goal>link</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>