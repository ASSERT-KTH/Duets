<project xmlns="http://maven.apache.org/POM/4.0.0" 
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:artifact="antlib:org.apache.maven.artifact.ant"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>athena-chameleon</groupId>
	<artifactId>athena-chameleon</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>athena.chameleon</name>
	<url>http://www.opensourceconsulting.co.kr</url>
	<inceptionYear>2012</inceptionYear>

	<properties>
		<spring.maven.artifact.version>3.1.2.RELEASE</spring.maven.artifact.version>
		<slf4j.artifact.version>1.6.6</slf4j.artifact.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<skipTests>true</skipTests>
		<cobertura.skip>true</cobertura.skip>
	</properties>
	
	<!-- Build Profile -->
	<profiles>
		<!-- Production Environment -->
		<profile>
			<id>production</id>
			<activation>
				<property>
					<name>mode</name>
					<value>production</value>
				</property>
			</activation>
			<build>
				<filters>
					<filter>${basedir}/src/main/filters/production.properties</filter>
				</filters>
				<plugins>
					<plugin>           
						<groupId>org.apache.maven.plugins</groupId>           
						<artifactId>maven-war-plugin</artifactId> 
						<version>2.0.2</version>
						<configuration> 
							<webxml>WEB-INF/web.xml</webxml>    
							<!--warSourceExcludes>WEB-INF/lib/ibatis-sqlmap-*.jar</warSourceExcludes-->
						</configuration>          
					</plugin>
				</plugins>						
			</build>
		</profile>

		<!-- Local Development Environment(Default) -->
		<profile>
			<id>local</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<filters>
					<filter>${basedir}/src/main/filters/local.properties</filter>
				</filters>
				<plugins>														
					<plugin>           
						<groupId>org.apache.maven.plugins</groupId>           
						<artifactId>maven-war-plugin</artifactId> 
						<version>2.0.2</version>
						<configuration> 
							<webxml>WEB-INF/web.xml</webxml>    
							<!--warSourceExcludes>WEB-INF/lib/ibatis-sqlmap-*.jar</warSourceExcludes-->
						</configuration>          
					</plugin>
				</plugins>						
			</build>
		</profile>
	</profiles>

	<build>
		<defaultGoal>install</defaultGoal>
		<directory>${basedir}/target</directory>
		<resources>
			<resource>
				<directory>${basedir}/src/main/config</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
			</resource>
            <resource>
                <directory>${basedir}/src/main/java</directory>
                <includes>
                    <include>**/*-mapping.xml</include>
                </includes>
            </resource>
		</resources>
		
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.11</version>
				<configuration>
					<skipTests>${skipTests}</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.6</source>
                    <target>1.6</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			
			<!-- Jetty Local Runtime Environment -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.15</version>
				<configuration>
					<contextPath>/chameleon</contextPath>
					<scanIntervalSeconds>30</scanIntervalSeconds>
					<jettyEnvXml>src/main/resources/config/jetty-env.xml</jettyEnvXml>
					<connectors>
						<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
							<port>8180</port>
							<maxIdleTime>60000</maxIdleTime>
						</connector>
					</connectors>

					<systemProperties>
						<systemProperty>
							<name>server.type</name>
							<value>Local</value>
						</systemProperty>
					</systemProperties>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>hibernate3-maven-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<components>
						<component>
							<name>hbm2ddl</name>
							<implementation>annotationconfiguration</implementation>
						</component>
					</components>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>hsqldb</groupId>
						<artifactId>hsqldb</artifactId>
						<version>1.8.0.10</version>
					</dependency>
				</dependencies>
			</plugin>
			
			<!-- EMMA   -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>emma-maven-plugin</artifactId>
				<version>1.0-alpha-1</version>
			</plugin>
			
			<!-- PMD manven plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			
			<!-- CheckStyle manven plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.9.1</version>
				<configuration>
					<!-- 
					<configLocation>/src/main/resources/checks/checkstyle.xml</configLocation>
					-->
					<!-- <excludes>com/**/a/*, com/**/b/*, com/**/c/*</excludes> -->
					<excludes>com/**/engine/entity/*</excludes>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>checkstyle</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<!-- Cobertura Plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<skip>${cobertura.skip}</skip>
					<formats>
						<format>xml</format>
					</formats>
					<instrumentation>
						<excludes>
							<exclude>**/aspect/*.class</exclude>
							<exclude>**/exception/*.class</exclude>
							<exclude>**/entity/*.class</exclude>
							<exclude>**/sample/**/*.class</exclude>
						</excludes>
					</instrumentation>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>cobertura</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<!-- 
			<plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <mainClass>com.athena.chameleon.engine.Starter</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>assembly</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>1.7.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <finalName>${project.artifactId}-jar-with-dependencies</finalName>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/spring.handlers</resource>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/spring.schemas</resource>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.athena.chameleon.engine.Starter</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            -->
			
			<!-- Ant plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>engine-deploy</id>
						<phase>package</phase>
						<configuration>
							<!--
							<target name="packaging">								
								<property name="src.dir" value="src/main/java" description="프로젝트 소스가 위치하는 디렉토리 명" />
								<property name="config.dir" value="src/main/config" description="프로젝트 config 리소스가 위치하는 디렉토리 명" />
								<property name="resources.dir" value="src/main/resources" description="프로젝트 리소스가 위치하는 디렉토리 명" />
							
								<property name="target.dir" value="target/engine" description="빌드 작업 루트 디렉토리" />
							
								<echo message="compile classpath: ${compile_classpath}" />
								<echo message="runtime classpath: ${runtime_classpath}" />
								<echo message="test classpath:    ${test_classpath}" />
								<echo message="plugin classpath:  ${plugin_classpath}" />
							
								<echo>이전 빌드의 결과를 삭제합니다.</echo>
								<delete dir="${target.dir}" includeemptydirs="true" failonerror="false" />
							
								<echo>빌드할 디렉토리를 생성합니다.</echo>
								<mkdir dir="${target.dir}" />
							
								<echo>Chameleon engine 소스 컴파일을 수행합니다.</echo>
								<javac srcdir="${src.dir}" destdir="${target.dir}" compiler="javac1.6"
									source="1.6" target="1.6" encoding="utf-8" debug="true"
									includeantruntime="false" failonerror="false">
									<classpath>
										<path refid="maven.compile.classpath" />
									</classpath>
								</javac>
								<copy todir="${target.dir}">
									<fileset dir="${src.dir}">
										<include name="**/*" />
										<exclude name="**/*.java" />
									</fileset>
								</copy>
							
								<echo>리소스를 복사합니다.</echo>
								<copy todir="${target.dir}">
									<fileset dir="${config.dir}">
										<include name="**/*" />
									</fileset>
									<fileset dir="${resources.dir}">
										<include name="**/*" />
									</fileset>
								</copy>
							
								<echo>패키징을 수행합니다.</echo>
								<jar destfile="target/athena-chameleon.jar" basedir="${target.dir}">
									<!- 
									<restrict>
										<name name="**/*.class" />
										<archives>
											<zips>
												<fileset dir="${base.dir}/lib" includes="*.jar" />
											</zips>
										</archives>
									</restrict> 
									->
									<zipgroupfileset dir="${base.dir}/lib" includes="*.jar"/>
									<manifest>
										<attribute name="Main-Class" value="com.athena.chameleon.engine.utils.ZipUtil" />
									</manifest>
								</jar>
							</target>
							-->
							<target>
								<property name="base.dir" value="target/athena-chameleon-1.0.0-SNAPSHOT/WEB-INF" description="빌드 결과 루트 디렉토리" />
								<property name="target.dir" value="target/engine" description="패키징 작업 루트 디렉토리" />
							
								<echo>이전 패키징 결과를 삭제합니다.</echo>
								<delete dir="${target.dir}" includeemptydirs="true" failonerror="false" />
							
								<echo>패키징 디렉토리를 생성합니다.</echo>
								<mkdir dir="${target.dir}" />
								
						        <echo>빌드 결과를 복사합니다.</echo>
						        <copy todir="${target.dir}">
						            <fileset dir="${base.dir}/classes">
						                <include name="**/*" />
						                <exclude name="com/athena/chameleon/web/**/*" />
						            </fileset>
						        </copy>
							
								<echo>Athena Chameleon 패키징을 수행합니다.</echo>
								<jar destfile="target/athena-chameleon.jar" basedir="${target.dir}" duplicate="preserve" filesetmanifest="merge">
									<!-- 
									<restrict>
										<name name="**/*" />
										<archives>
											<zips>
												<fileset dir="${base.dir}/lib" includes="*.jar" />
											</zips>
										</archives>
									</restrict> 
									-->
									<zipgroupfileset dir="${base.dir}/lib" includes="*.jar" />
									<manifest>
										<attribute name="Main-Class" value="com.athena.chameleon.engine.Starter" />
									</manifest>
									<metainf dir="target/${project.artifactId}-${project.version}/META-INF" includes="spring.*" />
								</jar>
								
								<echo>Athena Chameleon 실행 스크립트를 복사합니다.</echo>
						        <copy todir="target">
						            <fileset dir="src/main/scripts">
						                <include name="**/*" />
						            </fileset>
						        </copy>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<!-- 
				<dependencies>
					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>1.0b3</version>
						<exclusions>
							<exclusion>
								<groupId>ant</groupId>
								<artifactId>ant</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>com.jcraft</groupId>
						<artifactId>jsch</artifactId>
						<version>0.1.48</version>
					</dependency>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant-jsch</artifactId>
						<version>1.8.4</version>
					</dependency>
				</dependencies> 
				-->
			</plugin>
		</plugins>
	</build>
	
	<dependencies>
		<!-- Spring Framework -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.maven.artifact.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.maven.artifact.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.maven.artifact.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.maven.artifact.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.maven.artifact.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.maven.artifact.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.maven.artifact.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.maven.artifact.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.maven.artifact.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.maven.artifact.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.maven.artifact.version}</version>
		</dependency>

		<!-- junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
		</dependency>

		<!-- easymock -->
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>3.1</version>
		</dependency>

		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
			<version>1.0</version>
		</dependency>

		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>

		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.8.3</version>
		</dependency>
		
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.6</version>
		</dependency>
		
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.2</version>
		</dependency>
		   
		<dependency>
			<groupId>commons-digester</groupId>
			<artifactId>commons-digester</artifactId>
			<version>2.1</version>
		</dependency>
		            
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
                             
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
		</dependency>

		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
			<version>1.6</version>
		</dependency>
		
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>1.4.1</version>
		</dependency>
            
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.7.0</version>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.7.0</version>
		</dependency>

		<dependency>
			<groupId>aopalliance</groupId>
			<artifactId>aopalliance</artifactId>
			<version>1.0</version>
		</dependency>
		
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>2.2.2</version>
		</dependency>
            
		<dependency>
			<groupId>org.apache.ibatis</groupId>
			<artifactId>ibatis-sqlmap</artifactId>
			<version>2.3.4.726</version>
		</dependency>

		<!-- logging -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.artifact.version}</version>
		</dependency>
            
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.artifact.version}</version>
			<scope>runtime</scope>
		</dependency>
            
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.artifact.version}</version>
		</dependency>
		
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
		</dependency>
            
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.8</version>
		</dependency>
		
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>1.9.8</version>
		</dependency>
            
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.8</version>
		</dependency>
            
		<dependency>
			<groupId>com.kenai.nbpwr</groupId>
			<artifactId>javax-inject</artifactId>
			<version>1.0-201002241208</version>
		</dependency>
            
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.2.7</version>
		</dependency>
		            		
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.2.6</version>
		</dependency>
            		
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.4.3</version>
		</dependency>
 
		<dependency>
			<groupId>org.codehaus.jettison</groupId>
			<artifactId>jettison</artifactId>
			<version>1.3.1</version>
		</dependency>
		
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.1</version>
		</dependency>
            
		<!--
		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>2.4</version>
		</dependency>
		-->
            
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>1.1</version>
		</dependency>
		                        
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-extras</artifactId>
			<version>2.2.2</version>
		</dependency>
		                        
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
		</dependency>
		
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.3.0.Final</version>
		</dependency>
                                     		
		<!-- database driver -->
		<!-- hsqldb driver -->
		<dependency>
			<groupId>hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>1.8.0.10</version>
		</dependency>
		
		<!-- International Component for Unicode lib -->
		<dependency>
			<groupId>com.ibm.icu</groupId>
			<artifactId>icu4j</artifactId>
			<version>4.8.1.1</version>
		</dependency>
            
        <dependency>
			<groupId>ant</groupId>
			<artifactId>ant</artifactId>
			<version>1.6.5</version>
		</dependency>
		
		<!-- oracle 10g driver 
		<dependency>
			<groupId>ojdbc</groupId>
			<artifactId>ojdbc</artifactId> 
			<version>14</version>
		</dependency> 
		-->
		<!-- mysql driver -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.21</version>
		</dependency>
		
		<!-- itext PDF -->
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
			<version>5.3.2</version>
		</dependency>
		
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itext-asian</artifactId>
			<version>5.2.0</version>
		</dependency>
		
		<!-- jdom -->
		<dependency>
			<groupId>org.jdom</groupId>
			<artifactId>jdom</artifactId>
			<version>2.0.2</version>
		</dependency>
            
	</dependencies>
	
  	<repositories>
		<repository>
			<id>mvn2</id>
			<url>http://repo1.maven.org/maven2/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<!-- 
		<repository>
			<id>jboss</id>
			<url>http://repository.jboss.com/maven2/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>atlassian</id>
			<url>http://maven.atlassian.com/repository/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		-->
	</repositories>
	
	<!--
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<author>true</author>
					<bottom>true</bottom>
					<minmemory>128m</minmemory>
					<maxmemory>512m</maxmemory>
					<charset>${project.build.sourceEncoding}</charset>
					<javadocVersion>1.6</javadocVersion>
					<links>
						<link>http://java.sun.com/javase/6/docs/api</link>
						<link>http://static.springframework.org/spring/docs/3.1.x/api</link>
						<link>http://commons.apache.org/beanutils/api/</link>
						<link>http://commons.apache.org/lang/api</link>
						<link>http://commons.apache.org/logging/apidocs</link>
						<link>http://logging.apache.org/log4j/1.2/apidocs</link>
						<link>http://static.springframework.org/spring-security/site/apidocs</link>
					</links>
					<use>true</use>
					<header><![CDATA[OSC Athena-Chameleon API]]></header>
					<bottom>Copyright {inceptionYear}-{currentYear}, OSC. All Rights Reserved.
					</bottom>
					<doctitle>OSC Athena-Chameleon v${project.version} API</doctitle>
					<windowtitle>OSC Athena-Chameleon v${project.version} API</windowtitle>
					<stylesheetfile>${basedir}/resources/stylesheet.css</stylesheetfile>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
	-->

	<!-- Software Configuration Management(SCM) Information 
	<scm>
		<connection>
			scm:svn:${project.scm.url}/
		</connection>
		<developerConnection>
			scm:svn:${project.scm.url}/
		</developerConnection>
	</scm>
	-->
	
	<!-- Continuous Integration Information
	<ciManagement>
		<system>Hudson</system>
		<url>${project.cim.url}</url>
	</ciManagement>
	-->
 
	<!-- Organization Information -->
	<organization>
		<name>Open Source Consulting</name>
		<url>http://www.opensourceconsulting.co.kr</url>
	</organization>

	<!-- Developer Information -->
	<developers>
		<developer>
			<name>Sang-cheon Park</name>
			<id>nices96</id>
			<email>nices96@osci.kr</email>
			<organization>Open Source Consulting. All Rights Reserved.</organization>
			<roles>
				<role>TA(Technical Architect)</role>
				<role>Developer</role>
			</roles>
		</developer>
	</developers>
</project>
