<?xml version="1.0" encoding="UTF-8"?>
<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.jenkins-ci.plugins</groupId>
		<artifactId>plugin</artifactId>
		<version>2.3</version>
		<relativePath />
	</parent>

	<groupId>org.jenkins-ci.plugins</groupId>
	<url>https://wiki.jenkins-ci.org/display/JENKINS/Relution-Publisher</url>
	<artifactId>relution-publisher</artifactId>
	<version>1.24-SNAPSHOT</version>
	<packaging>hpi</packaging>

	<name>Relution Enterprise Appstore Publisher plugin</name>
	<description>
		This plugin adds the ability to automatically upload and publish build artifacts on a
		Relution Enterprise App Store, making them available to developers, testers and/or users.
	</description>

	<scm>
		<connection>scm:git:ssh://github.com/mwaylabs/relution-jenkins-plugin.git</connection>
		<developerConnection>scm:git:ssh://git@github.com/mwaylabs/relution-jenkins-plugin.git</developerConnection>
		<url>https://github.com/mwaylabs/relution-jenkins-plugin.git</url>
	</scm>

	<properties>
		<jenkins.version>1.626</jenkins.version>
		<java.level>7</java.level>
		<jenkins-test-harness.version>2.2</jenkins-test-harness.version>
	</properties>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>mwaylabs</id>
			<name>M-Way Solutions</name>
			<email>jenkins.ios.bot@mwaysolutions.com</email>
		</developer>
	</developers>

	<!-- get every artifact through repo.jenkins-ci.org, which proxies all the artifacts that we need -->
	<repositories>
		<repository>
			<id>repo.jenkins-ci.org</id>
			<url>http://repo.jenkins-ci.org/public/</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>repo.jenkins-ci.org</id>
			<url>http://repo.jenkins-ci.org/public/</url>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>
		<!-- apache-commons: Validator -->
		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
			<version>1.5.1</version>
		</dependency>

		<!-- apache-httpcomponents: HTTP core -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
			<version>4.4.4</version>
		</dependency>

		<!-- apache-httpcomponents: HTTP async client -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpasyncclient</artifactId>
			<version>4.1.1</version>
		</dependency>

		<!-- apache-httpcomponents: Tika -->
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-core</artifactId>
			<version>1.13</version>
		</dependency>

		<!-- apache-httpcomponents: HTTP mime -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<version>4.5.2</version>
		</dependency>

		<!-- Gson: JSON to Java converter (and vice-versa) -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.6.2</version>
		</dependency>

		<!-- HTML unit -->
		<dependency>
			<groupId>net.sourceforge.htmlunit</groupId>
			<artifactId>htmlunit</artifactId>
			<version>2.20</version>
			<scope>test</scope>
		</dependency>

		<!-- Mockito -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.10.19</version>
			<scope>test</scope>
		</dependency>

		<!-- AssertJ -->
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>2.0.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>only-eclipse</id>
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
						<plugin>
							<groupId>org.eclipse.m2e</groupId>
							<artifactId>lifecycle-mapping</artifactId>
							<version>1.0.0</version>
							<configuration>
								<lifecycleMappingMetadata>
									<pluginExecutions>
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.apache.maven.plugins</groupId>
												<artifactId>maven-javadoc-plugin</artifactId>
												<versionRange>[2.10.1,)</versionRange>
												<goals>
													<goal>javadoc</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<ignore></ignore>
											</action>
										</pluginExecution>
									</pluginExecutions>
								</lifecycleMappingMetadata>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>

</project>