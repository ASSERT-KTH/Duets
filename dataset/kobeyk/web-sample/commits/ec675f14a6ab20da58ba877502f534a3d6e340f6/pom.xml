<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.appleyk</groupId>
    <artifactId>web-sample</artifactId>
    <version>0.1.1-SNAPSHOT</version>
    <modules>
        <module>sample-core</module>
        <module>sample-service</module>
        <module>sample-dao</module>
        <module>sample-web</module>
    </modules>
    <name>web-sample</name>
    <packaging>pom</packaging>
    <description>SpringBoot2.1.4 + Mybatis数据持久层通用Web后端脚手架</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <!-- 定义版本 -->
    <properties>
        <java.version>1.8</java.version>
        <jdk.version>1.8</jdk.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- 编译时的编码 -->
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <junit.version>4.12</junit.version>
        <servlet-api.version>3.1.0</servlet-api.version>
        <jackson.version>2.10.0</jackson.version>
        <!--PageHelper Spring Boot Starter-->
        <pagehelper.version>1.2.10</pagehelper.version>
        <!--Mybatis 通用 Mapper Jar 集成-->
        <tk.mybatis.version>4.0.4</tk.mybatis.version>
        <!--Java JDBC 4.2 (JRE 8+) driver for PostgreSQL database-->
        <postgresql.version>42.2.5</postgresql.version>
        <!--JDBC Type 4 driver for MySQL-->
        <mysql.driver.version>5.1.46</mysql.driver.version>
        <!--Java implementation of JSON Web Token (JWT)-->
        <java.jwt.version>3.8.0</java.jwt.version>
        <!--Apache Commons Lang, a package of Java utility classes for the classes that are in java.lang's hierarchy,
        or are considered to be so standard as to justify existence in java.lang.-->
        <commons.lang3.version>3.8.1</commons.lang3.version>
        <skipTests>true</skipTests>
    </properties>

    <dependencies>

        <!--Starter for building web, including RESTful,
         applications using Spring MVC. Uses Tomcat as the default embedded container-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!--Starter for testing Spring Boot applications with libraries including JUnit, Hamcrest and Mockito-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!--JUnit is a unit testing framework for Java, created by Erich Gamma and Kent Beck.-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!--Core Jackson processing abstractions (aka Streaming API), implementation for JSON-->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!--Core annotations used for value types, used by Jackson data binding package-->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!--General data-binding functionality for Jackson: works on core streaming API-->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>

    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <!--解决项目build时，资源文件无法加载的问题-->
                <!--如mybatis通用mapper对应的xml映射文件等，不需要过滤-->
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
                <filtering>false</filtering>
            </resource>
        </resources>
        <plugins>
            <!-- Compile -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <showWarnings>true</showWarnings>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
