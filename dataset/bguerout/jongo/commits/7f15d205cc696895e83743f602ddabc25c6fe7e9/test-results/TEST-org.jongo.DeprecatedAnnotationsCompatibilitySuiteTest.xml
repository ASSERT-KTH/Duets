<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="261" failures="0" name="org.jongo.DeprecatedAnnotationsCompatibilitySuiteTest" time="7.662" errors="0" skipped="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/local/openjdk-8/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.262-b10"/>
    <property name="animal.sniffer.skip" value="true"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/tmp/tmpm3vornju/jongo"/>
    <property name="maven.javadoc.skip" value="true"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="source.skip" value="true"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/tmp/tmpm3vornju/jongo"/>
    <property name="java.runtime.version" value="1.8.0_262-b10"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/local/openjdk-8/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="maven.test.error.ignore" value="true"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="license.skip" value="true"/>
    <property name="maven.conf" value="/usr/share/maven/conf"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="maven.test.failure.ignore" value="true"/>
    <property name="os.version" value="4.15.0-109-generic"/>
    <property name="library.jansi.path" value="/usr/share/maven/lib/jansi-native"/>
    <property name="user.home" value="/home/jdbl"/>
    <property name="user.timezone" value="Etc/UTC"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="jdbl"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.6.0.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/local/openjdk-8/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher package -e --fail-never -ntp -Dmaven.test.error.ignore=true -Dmaven.test.failure.ignore=true -B -Dmaven.javadoc.skip=true -Drat.skip=true -Danimal.sniffer.skip=true -Dmaven.javadoc.skip=true -Dlicense.skip=true -Dsource.skip=true"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_262"/>
    <property name="java.ext.dirs" value="/usr/local/openjdk-8/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/local/openjdk-8/jre/lib/resources.jar:/usr/local/openjdk-8/jre/lib/rt.jar:/usr/local/openjdk-8/jre/lib/sunrsasign.jar:/usr/local/openjdk-8/jre/lib/jsse.jar:/usr/local/openjdk-8/jre/lib/jce.jar:/usr/local/openjdk-8/jre/lib/charsets.jar:/usr/local/openjdk-8/jre/lib/jfr.jar:/usr/local/openjdk-8/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="rat.skip" value="true"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase classname="org.jongo.FindWithModifierTest" name="canFindWithHint" time="0.321"/>
  <testcase classname="org.jongo.FindWithModifierTest" name="canUseQueryModifier" time="0.07"/>
  <testcase classname="org.jongo.AnnotationsMisusedTest" name="savingAPojoWithAnEmptyCustomIntegerId" time="0.018"/>
  <testcase classname="org.jongo.AnnotationsMisusedTest" name="savingAPojoWithAnEmptyStringCustomId" time="0.006"/>
  <testcase classname="org.jongo.JacksonAnnotationsHandlingTest" name="canHandleAnnotatedGetter" time="0.03"/>
  <testcase classname="org.jongo.JacksonAnnotationsHandlingTest" name="canHandleObjectIdNotAnnotated" time="0.026"/>
  <testcase classname="org.jongo.JacksonAnnotationsHandlingTest" name="canHandleStringIdNotAnnotated" time="0.034"/>
  <testcase classname="org.jongo.JacksonAnnotationsHandlingTest" name="canInjectObjectIdIntoAMisspelledGetter" time="0.032"/>
  <testcase classname="org.jongo.NestedPolymorphismTest" name="testCanSaveAndReadNestedPolymorphicField" time="0.051"/>
  <testcase classname="org.jongo.NestedPolymorphismTest" name="testCanUpdatePolymorphicField" time="0.04"/>
  <testcase classname="org.jongo.spike.MongoDumpTest" name="importBsonDumpFileIntoCollection" time="0.711"/>
  <testcase classname="org.jongo.InsertTest" name="canInsertAPojoWithACustomId" time="0.003"/>
  <testcase classname="org.jongo.InsertTest" name="canInsertAnObjectWithoutId" time="0.027"/>
  <testcase classname="org.jongo.InsertTest" name="canInsertWithParameters" time="0.022"/>
  <testcase classname="org.jongo.InsertTest" name="canOnlyInsertOnceAPojoWithObjectId" time="0.006"/>
  <testcase classname="org.jongo.InsertTest" name="canInsert" time="0.02"/>
  <testcase classname="org.jongo.InsertTest" name="canInsertAPojoWithNewObjectId" time="0.003"/>
  <testcase classname="org.jongo.InsertTest" name="canInsertAListOfDocuments" time="0.032"/>
  <testcase classname="org.jongo.InsertTest" name="canInsertPojo" time="0.026"/>
  <testcase classname="org.jongo.InsertTest" name="canOnlyInsertOnceAPojoWithACustomId" time="0.002"/>
  <testcase classname="org.jongo.InsertTest" name="canInsertPojos" time="0.017"/>
  <testcase classname="org.jongo.SaveTest" name="canSaveWithACustomTypeId" time="0.027"/>
  <testcase classname="org.jongo.SaveTest" name="canUpdateWithACustomTypeId" time="0.03"/>
  <testcase classname="org.jongo.SaveTest" name="canSaveWithObjectIdAsString" time="0.038"/>
  <testcase classname="org.jongo.SaveTest" name="canUpdateWithObjectIdAsString" time="0.036"/>
  <testcase classname="org.jongo.SaveTest" name="canUpdateWithObjectId" time="0.049"/>
  <testcase classname="org.jongo.SaveTest" name="canUpdateAPojoWithACustomId" time="0.004"/>
  <testcase classname="org.jongo.SaveTest" name="shouldFailWhenMarshallerFail" time="0.004"/>
  <testcase classname="org.jongo.SaveTest" name="canSaveWithCompositeKey" time="0.028"/>
  <testcase classname="org.jongo.SaveTest" name="canSave" time="0.028"/>
  <testcase classname="org.jongo.SaveTest" name="canUpdateAnEntity" time="0.013"/>
  <testcase classname="org.jongo.SaveTest" name="canSaveWithObjectId" time="0.009"/>
  <testcase classname="org.jongo.SaveTest" name="canSaveAnObjectWithoutIdAnnotation" time="0.009"/>
  <testcase classname="org.jongo.SaveTest" name="canUpdateAPojoWithAnValidObjectIdAsString" time="0.012"/>
  <testcase classname="org.jongo.SaveTest" name="canSaveAPojoWithAnEmptyObjectIdAsString" time="0.009"/>
  <testcase classname="org.jongo.AggregateTest" name="canAggregate" time="0.108"/>
  <testcase classname="org.jongo.AggregateTest" name="canAggregateParameters" time="0.049"/>
  <testcase classname="org.jongo.AggregateTest" name="canAggregateWithDefaultOptions" time="0.031"/>
  <testcase classname="org.jongo.AggregateTest" name="canAggregateWithManyMatch" time="0.066"/>
  <testcase classname="org.jongo.AggregateTest" name="canAggregateWithOptions" time="0.211"/>
  <testcase classname="org.jongo.AggregateTest" name="canAggregateWithMultipleDocuments" time="0.845"/>
  <testcase classname="org.jongo.AggregateTest" name="canAggregateWithManyOperators" time="0.297"/>
  <testcase classname="org.jongo.AggregateTest" name="shouldCheckIfCommandHasErrors" time="0.07"/>
  <testcase classname="org.jongo.AggregateTest" name="shouldPopulateIds" time="0.06"/>
  <testcase classname="org.jongo.AggregateTest" name="shouldUnmarshalNestedDocuments" time="0.075"/>
  <testcase classname="org.jongo.GridFsTest" name="shouldAllowDualAccessToFilesCollection" time="0.042"/>
  <testcase classname="org.jongo.marshall.jackson.UnmarshallingWithJsonCreatorTest" name="canSaveAndMapAPojoStringCreatorAndObjectId" time="0.031"/>
  <testcase classname="org.jongo.marshall.jackson.UnmarshallingWithJsonCreatorTest" name="canSaveAndMapAPojoWithoutId" time="0.027"/>
  <testcase classname="org.jongo.marshall.jackson.UnmarshallingWithJsonCreatorTest" name="canSaveAndMapAPojoWithObjectIdCreator" time="0.019"/>
  <testcase classname="org.jongo.marshall.jackson.UnmarshallingWithJsonCreatorTest" name="canSaveAndMapAPojoWithDateCreator" time="0.028"/>
  <testcase classname="org.jongo.marshall.jackson.UnmarshallingWithJsonCreatorTest" name="canSaveWithDateFieldAndMapWithout" time="0.037"/>
  <testcase classname="org.jongo.DistinctTest" name="distinctAndMapOnIntegerEntities" time="0.054"/>
  <testcase classname="org.jongo.DistinctTest" name="distinctWithQuery" time="0.044"/>
  <testcase classname="org.jongo.DistinctTest" name="distinctWithParameterizedQuery" time="0.014"/>
  <testcase classname="org.jongo.DistinctTest" name="canDistinctAndMap" time="0.014"/>
  <testcase classname="org.jongo.DistinctTest" name="canDistinctAndMapWhenNoResults" time="0.001"/>
  <testcase classname="org.jongo.DistinctTest" name="distinctOnTypedProperty" time="0.029"/>
  <testcase classname="org.jongo.DistinctTest" name="distinctOnIntegerEntities" time="0.02"/>
  <testcase classname="org.jongo.DistinctTest" name="distinctOnStringEntities" time="0.022"/>
  <testcase classname="org.jongo.spike.QuestionsSpikeTest" name="canBindAParameterWithSingleQuote" time="0.015"/>
  <testcase classname="org.jongo.spike.QuestionsSpikeTest" name="complexQueryWithDriverAndJongo" time="0.005"/>
  <testcase classname="org.jongo.spike.QuestionsSpikeTest" name="pushANonBSONObject" time="0.035"/>
  <testcase classname="org.jongo.spike.QuestionsSpikeTest" name="canHandleElemMatchOperator" time="0.026"/>
  <testcase classname="org.jongo.spike.QuestionsSpikeTest" name="canSelectOnlyAField" time="0.028"/>
  <testcase classname="org.jongo.spike.QuestionsSpikeTest" name="canUpdateIntoAnArray" time="0.023"/>
  <testcase classname="org.jongo.spike.QuestionsSpikeTest" name="canUseElemMatchWithDateParams" time="0.018"/>
  <testcase classname="org.jongo.spike.QuestionsSpikeTest" name="canSetAFieldToNullDuringAnUpdate" time="0.039"/>
  <testcase classname="org.jongo.CountTest" name="canCountWithParameters" time="0.036"/>
  <testcase classname="org.jongo.CountTest" name="canCount" time="0.029"/>
  <testcase classname="org.jongo.CountTest" name="canCountWithReadPreference" time="0.014"/>
  <testcase classname="org.jongo.CountTest" name="canCountWithReadConcern" time="0.014"/>
  <testcase classname="org.jongo.CountTest" name="canCountWithQuery" time="0.023"/>
  <testcase classname="org.jongo.PolymorphismTest" name="canHandleInheritanceInASubDocument" time="0.035"/>
  <testcase classname="org.jongo.PolymorphismTest" name="canFindInheritedWithBSONTimestamp" time="0.024"/>
  <testcase classname="org.jongo.PolymorphismTest" name="canUpdateIdFieldOnSuperType" time="0.014"/>
  <testcase classname="org.jongo.PolymorphismTest" name="canFindInheritedEntity" time="0.014"/>
  <testcase classname="org.jongo.PolymorphismTest" name="canFindInheritedEntityByDiscriminator" time="0.018"/>
  <testcase classname="org.jongo.PolymorphismTest" name="canHandleInheritanceAsAQueryParameter" time="0.031"/>
  <testcase classname="org.jongo.FindAndModifyTest" name="canReturnNew" time="0.029"/>
  <testcase classname="org.jongo.FindAndModifyTest" name="canRemove" time="0.024"/>
  <testcase classname="org.jongo.FindAndModifyTest" name="shouldFailWhenUnableToUnmarshallResult" time="0.023"/>
  <testcase classname="org.jongo.FindAndModifyTest" name="canFindAndModifyWithNullValue" time="0.025"/>
  <testcase classname="org.jongo.FindAndModifyTest" name="canSort" time="0.019"/>
  <testcase classname="org.jongo.FindAndModifyTest" name="canFindAndModifyOne" time="0.01"/>
  <testcase classname="org.jongo.FindAndModifyTest" name="canFindWithProjection" time="0.009"/>
  <testcase classname="org.jongo.FindAndModifyTest" name="canFindWithProjectionParams" time="0.01"/>
  <testcase classname="org.jongo.FindAndModifyTest" name="canUpsertByObjectId" time="0.002"/>
  <testcase classname="org.jongo.FindAndModifyTest" name="canUpsertByStringId" time="0.002"/>
  <testcase classname="org.jongo.FindAndModifyTest" name="canFindAndModifyWithResultHandler" time="0.022"/>
  <testcase classname="org.jongo.RemoveTest" name="canRemoveByObjectId" time="0.013"/>
  <testcase classname="org.jongo.RemoveTest" name="canRemoveWithParameters" time="0.013"/>
  <testcase classname="org.jongo.RemoveTest" name="canRemoveAll" time="0.018"/>
  <testcase classname="org.jongo.RemoveTest" name="canRemoveASpecificDocument" time="0.029"/>
  <testcase classname="org.jongo.FindOneTest" name="canFindOne" time="0.009"/>
  <testcase classname="org.jongo.FindOneTest" name="canOrderBy" time="0.019"/>
  <testcase classname="org.jongo.FindOneTest" name="canFindOneWithOidAsString" time="0.008"/>
  <testcase classname="org.jongo.FindOneTest" name="canFindOneWithOid" time="0.014"/>
  <testcase classname="org.jongo.FindOneTest" name="whenNoResultShouldReturnNull" time="0.002"/>
  <testcase classname="org.jongo.FindOneTest" name="canFindOneWithObjectId" time="0.024"/>
  <testcase classname="org.jongo.FindOneTest" name="canFindOneWithEmptyQuery" time="0.025"/>
  <testcase classname="org.jongo.FindOneTest" name="canFindOneWithReadPreference" time="0.015"/>
  <testcase classname="org.jongo.FindOneTest" name="canFindOneWithReadConcern" time="0.009"/>
  <testcase classname="org.jongo.FindOneTest" name="shouldFailWhenUnableToUnmarshallResult" time="0.009"/>
  <testcase classname="org.jongo.FindWithResultMapperTest" name="canFindOneAndMap" time="0.009"/>
  <testcase classname="org.jongo.FindWithResultMapperTest" name="canFindAndMap" time="0.014"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="canUseListOfPojosParameterWith$or" time="0.033"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="canUseParameterWith$push" time="0.021"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="canUseListParameterWith$all" time="0.014"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="canUseArrayParameterWith$all" time="0.023"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="canUseArrayParameterWith$mod" time="0.015"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="canUseParameterWith$exists" time="0.014"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="canUseListOfPojosParameterWith$and" time="0.014"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="shouldThrowArgumentExceptionOnInvalidQuery" time="0.015"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="shouldThrowMarshallExceptionOnInvalidParameter" time="0.008"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="canBindANestedField" time="0.008"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="canBindManyParameter" time="0.009"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="canBindOneParameter" time="0.009"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="canUseArrayParameterWith$elemMatch" time="0.023"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="canBindTwoOidInSameQuery" time="0.02"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="canBindOidWithASpecificName" time="0.016"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="canBindNull" time="0.029"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="canBindAHashIntoParameter" time="0.014"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="canBindPrimitiveArrayParameter" time="0.014"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="canUseListWithANullElement" time="0.027"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="canUseParameterWith$in" time="0.014"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="canUseParameterWith$nin" time="0.013"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="canBindAPojo" time="0.008"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="canBindEnum" time="0.02"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="canBindPattern" time="0.017"/>
  <testcase classname="org.jongo.marshall.ParameterQueryBindingTest" name="canBindAFieldName" time="0.014"/>
  <testcase classname="org.jongo.JongoTest" name="canObtainACollection" time="0"/>
  <testcase classname="org.jongo.JongoTest" name="canGetMapper" time="0.001"/>
  <testcase classname="org.jongo.JongoTest" name="canCreateQuery" time="0.001"/>
  <testcase classname="org.jongo.marshall.DocumentMarshallingTest" name="canHandleBSONTimestamp" time="0.042"/>
  <testcase classname="org.jongo.marshall.DocumentMarshallingTest" name="canHandleNonIsoDate" time="0.022"/>
  <testcase classname="org.jongo.marshall.DocumentMarshallingTest" name="canHandleDBObject" time="0.024"/>
  <testcase classname="org.jongo.marshall.DocumentMarshallingTest" name="canHandleMapWithPrimitiveType" time="0.019"/>
  <testcase classname="org.jongo.marshall.DocumentMarshallingTest" name="canHandleIterableWithPrimitiveType" time="0.015"/>
  <testcase classname="org.jongo.marshall.DocumentMarshallingTest" name="canHandleJavaTypes" time="0.028"/>
  <testcase classname="org.jongo.marshall.DocumentMarshallingTest" name="canHandleMinAndMaxKey" time="0.022"/>
  <testcase classname="org.jongo.marshall.DocumentMarshallingTest" name="canHandleObjectId" time="0.02"/>
  <testcase classname="org.jongo.marshall.DocumentMarshallingTest" name="canHandlePattern" time="0.009"/>
  <testcase classname="org.jongo.marshall.DocumentMarshallingTest" name="canHandleISODate" time="0.009"/>
  <testcase classname="org.jongo.marshall.DocumentMarshallingTest" name="canHandleUUID" time="0.009"/>
  <testcase classname="org.jongo.marshall.DocumentMarshallingTest" name="canHandleArray" time="0.011"/>
  <testcase classname="org.jongo.marshall.DocumentMarshallingTest" name="canHandleMapWithComplexType" time="0.025"/>
  <testcase classname="org.jongo.marshall.DocumentMarshallingTest" name="canHandleByteArray" time="0.015"/>
  <testcase classname="org.jongo.marshall.DocumentMarshallingTest" name="canHandleIterableWithComplexType" time="0.009"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="saveAndFind[0]" time="0.016"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marchalRoundTrip[0]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasCorrectIdType[0]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasIdField[0]" time="0"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="saveAndFind[1]" time="0.026"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marchalRoundTrip[1]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasCorrectIdType[1]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasIdField[1]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="saveAndFind[2]" time="0.018"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marchalRoundTrip[2]" time="0.002"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasCorrectIdType[2]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasIdField[2]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="saveAndFind[3]" time="0.022"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marchalRoundTrip[3]" time="0.002"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasCorrectIdType[3]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasIdField[3]" time="0.002"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="saveAndFind[4]" time="0.021"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marchalRoundTrip[4]" time="0.002"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasCorrectIdType[4]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasIdField[4]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="saveAndFind[5]" time="0.017"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marchalRoundTrip[5]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasCorrectIdType[5]" time="0.002"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasIdField[5]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="saveAndFind[6]" time="0.024"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marchalRoundTrip[6]" time="0.002"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasCorrectIdType[6]" time="0.002"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasIdField[6]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="saveAndFind[7]" time="0.022"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marchalRoundTrip[7]" time="0.002"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasCorrectIdType[7]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasIdField[7]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="saveAndFind[8]" time="0.015"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marchalRoundTrip[8]" time="0.002"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasCorrectIdType[8]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasIdField[8]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="saveAndFind[9]" time="0.031"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marchalRoundTrip[9]" time="0.002"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasCorrectIdType[9]" time="0"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasIdField[9]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="saveAndFind[10]" time="0.017"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marchalRoundTrip[10]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasCorrectIdType[10]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasIdField[10]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="saveAndFind[11]" time="0.021"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marchalRoundTrip[11]" time="0.002"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasCorrectIdType[11]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasIdField[11]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="saveAndFind[12]" time="0.031"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marchalRoundTrip[12]" time="0.002"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasCorrectIdType[12]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasIdField[12]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="saveAndFind[13]" time="0.03"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marchalRoundTrip[13]" time="0.002"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasCorrectIdType[13]" time="0.001"/>
  <testcase classname="org.jongo.marshall.jackson.IdSpecTest" name="marshalledHasIdField[13]" time="0.002"/>
  <testcase classname="org.jongo.FindPartialFieldTest" name="canFindOne" time="0.03"/>
  <testcase classname="org.jongo.FindPartialFieldTest" name="canFindWithProjectionParams" time="0.024"/>
  <testcase classname="org.jongo.FindPartialFieldTest" name="canFind" time="0.012"/>
  <testcase classname="org.jongo.FindPartialFieldTest" name="canFindOneWithProjectionParamsWithDot" time="0.02"/>
  <testcase classname="org.jongo.FindPartialFieldTest" name="canFindOneWithComplexProjection" time="0.005"/>
  <testcase classname="org.jongo.FindPartialFieldTest" name="canFindOneWithProjectionParams" time="0.004"/>
  <testcase classname="org.jongo.FindPartialFieldTest" name="canFindWithComplexProjection" time="0.016"/>
  <testcase classname="org.jongo.FindPartialFieldTest" name="shouldIgnoreNullProjection" time="0.022"/>
  <testcase classname="org.jongo.marshall.jackson.ParameterBindingWithJacksonTest" name="canBindStringWithJsonValue" time="0.05"/>
  <testcase classname="org.jongo.marshall.jackson.ParameterBindingWithJacksonTest" name="canBindEnumWithJsonValue" time="0.069"/>
  <testcase classname="org.jongo.CommandTest" name="canRunAGeoNearCommand" time="0.009"/>
  <testcase classname="org.jongo.CommandTest" name="canRunAnEmptyResultCommand" time="0.002"/>
  <testcase classname="org.jongo.CommandTest" name="canRunInvalidCommand" time="0.002"/>
  <testcase classname="org.jongo.CommandTest" name="canRunACommand" time="0.001"/>
  <testcase classname="org.jongo.CommandTest" name="mustForceExceptionToBeThrownOnInvalidCommand" time="0.002"/>
  <testcase classname="org.jongo.CommandTest" name="canRunACommandWithParameter" time="0.002"/>
  <testcase classname="org.jongo.CommandTest" name="canRunACommandAs" time="0.015"/>
  <testcase classname="org.jongo.CommandTest" name="canRunAnEvalCommand" time="0.18"/>
  <testcase classname="org.jongo.FindTest" name="shouldFailWhenUnableToUnmarshallResult" time="0.092"/>
  <testcase classname="org.jongo.FindTest" name="canFind" time="0.04"/>
  <testcase classname="org.jongo.FindTest" name="canFindUsingSubProperty" time="0.057"/>
  <testcase classname="org.jongo.FindTest" name="canFindWithEmptySelector" time="0.087"/>
  <testcase classname="org.jongo.FindTest" name="canFindWithStringAsObjectId" time="0.036"/>
  <testcase classname="org.jongo.FindTest" name="shouldRejectNullObjectId" time="0.001"/>
  <testcase classname="org.jongo.FindTest" name="canFindWithReadPreference" time="0.108"/>
  <testcase classname="org.jongo.FindTest" name="canFindAndCount" time="0.057"/>
  <testcase classname="org.jongo.FindTest" name="canFindWithOid" time="0.03"/>
  <testcase classname="org.jongo.AlreadyCheckDBObjectTest" name="shouldNotPreventLazyDBObjectToBeDeserializedWhenOidIsNull" time="0.003"/>
  <testcase classname="org.jongo.AlreadyCheckDBObjectTest" name="shouldPreventLazyDBObjectToBeDeserialized" time="0"/>
  <testcase classname="org.jongo.NonPojoTest" name="canSaveANewJsonNode" time="0.032"/>
  <testcase classname="org.jongo.NonPojoTest" name="canFindAndSaveJsonNode" time="0.056"/>
  <testcase classname="org.jongo.NonPojoTest" name="canFindAndSaveMap" time="0.056"/>
  <testcase classname="org.jongo.NonPojoTest" name="canSaveMapWithObjectId" time="0.031"/>
  <testcase classname="org.jongo.NonPojoTest" name="canSaveANewMap" time="0.032"/>
  <testcase classname="org.jongo.UpdateTest" name="canUpsert" time="0.027"/>
  <testcase classname="org.jongo.UpdateTest" name="canUpdateMulti" time="0.079"/>
  <testcase classname="org.jongo.UpdateTest" name="canPartiallyUdpateWithaNewDocument" time="0.052"/>
  <testcase classname="org.jongo.UpdateTest" name="canUpdateByObjectId" time="0.05"/>
  <testcase classname="org.jongo.UpdateTest" name="canUpdateMultiWithWriteConcern" time="0.065"/>
  <testcase classname="org.jongo.UpdateTest" name="onInvalidArgumentsShouldFail" time="0"/>
  <testcase classname="org.jongo.UpdateTest" name="canReplaceAllFields" time="0.05"/>
  <testcase classname="org.jongo.UpdateTest" name="canPartiallyUdpateWithAPreexistingDocument" time="0.061"/>
  <testcase classname="org.jongo.UpdateTest" name="shouldFailWhenUpdateWithNullObjectId" time="0.001"/>
  <testcase classname="org.jongo.BinaryTest" name="testRemove" time="0.022"/>
  <testcase classname="org.jongo.BinaryTest" name="canMarhsallBinary" time="0.022"/>
  <testcase classname="org.jongo.BinaryTest" name="testInsert" time="0.016"/>
  <testcase classname="org.jongo.BinaryTest" name="testUpdate" time="0.017"/>
  <testcase classname="org.jongo.BinaryTest" name="testSave" time="0.009"/>
  <testcase classname="org.jongo.MongoCollectionTest" name="canDropIndex" time="0.006"/>
  <testcase classname="org.jongo.MongoCollectionTest" name="canUseConditionnalOperator" time="0.006"/>
  <testcase classname="org.jongo.MongoCollectionTest" name="createIndexWithUniqueAsOption" time="0.003"/>
  <testcase classname="org.jongo.MongoCollectionTest" name="canCreateGeospacialIndex" time="0.006"/>
  <testcase classname="org.jongo.MongoCollectionTest" name="canGetCollectionName" time="0.001"/>
  <testcase classname="org.jongo.MongoCollectionTest" name="canDropIndexes" time="0.004"/>
  <testcase classname="org.jongo.FindSkipSortLimitTest" name="canSort" time="0.055"/>
  <testcase classname="org.jongo.FindSkipSortLimitTest" name="canLimit" time="0.019"/>
  <testcase classname="org.jongo.FindSkipSortLimitTest" name="canSkip" time="0.017"/>
</testsuite>