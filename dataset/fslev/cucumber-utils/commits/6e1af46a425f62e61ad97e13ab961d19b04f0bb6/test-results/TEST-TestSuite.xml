<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="TestSuite" time="39.25" tests="47" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/local/openjdk-8/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.262-b10"/>
    <property name="animal.sniffer.skip" value="true"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/tmp/tmpcybrou00/cucumber-utils"/>
    <property name="maven.javadoc.skip" value="true"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="source.skip" value="true"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/tmp/tmpcybrou00/cucumber-utils"/>
    <property name="java.runtime.version" value="1.8.0_262-b10"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/local/openjdk-8/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="license.skip" value="true"/>
    <property name="maven.conf" value="/usr/share/maven/conf"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="maven.test.failure.ignore" value="true"/>
    <property name="os.version" value="4.15.0-109-generic"/>
    <property name="library.jansi.path" value="/usr/share/maven/lib/jansi-native"/>
    <property name="user.home" value="/home/jdbl"/>
    <property name="user.timezone" value="Etc/UTC"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="jdbl"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.6.0.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/local/openjdk-8/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher test -e --fail-never -ntp -Dmaven.test.failure.ignore=true -B -Dmaven.javadoc.skip=true -Drat.skip=true -Danimal.sniffer.skip=true -Dmaven.javadoc.skip=true -Dlicense.skip=true -Dsource.skip=true"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_262"/>
    <property name="java.ext.dirs" value="/usr/local/openjdk-8/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/local/openjdk-8/jre/lib/resources.jar:/usr/local/openjdk-8/jre/lib/rt.jar:/usr/local/openjdk-8/jre/lib/sunrsasign.jar:/usr/local/openjdk-8/jre/lib/jsse.jar:/usr/local/openjdk-8/jre/lib/jce.jar:/usr/local/openjdk-8/jre/lib/charsets.jar:/usr/local/openjdk-8/jre/lib/jfr.jar:/usr/local/openjdk-8/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="rat.skip" value="true"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="testSimpleSpel on testSimpleSpel(com.cucumber.utils.context.props.ScenarioPropsParserTest)" classname="com.cucumber.utils.context.props.ScenarioPropsParserTest" time="2.469"/>
  <testcase name="testScenarioPlaceholderFillInSimpleText on testScenarioPlaceholderFillInSimpleText(com.cucumber.utils.context.props.ScenarioPropsParserTest)" classname="com.cucumber.utils.context.props.ScenarioPropsParserTest" time="0.001"/>
  <testcase name="testInvalidSpel on testInvalidSpel(com.cucumber.utils.context.props.ScenarioPropsParserTest)" classname="com.cucumber.utils.context.props.ScenarioPropsParserTest" time="0.005"/>
  <testcase name="testSpELWhichGeneratesNull on testSpELWhichGeneratesNull(com.cucumber.utils.context.props.ScenarioPropsParserTest)" classname="com.cucumber.utils.context.props.ScenarioPropsParserTest" time="0.003"/>
  <testcase name="testGlobalPlaceholderFillInSimpleTextAndInvalidParameters on testGlobalPlaceholderFillInSimpleTextAndInvalidParameters(com.cucumber.utils.context.props.ScenarioPropsParserTest)" classname="com.cucumber.utils.context.props.ScenarioPropsParserTest" time="0"/>
  <testcase name="testGlobalAndScenarioPlaceholderFillInSimpleText on testGlobalAndScenarioPlaceholderFillInSimpleText(com.cucumber.utils.context.props.ScenarioPropsParserTest)" classname="com.cucumber.utils.context.props.ScenarioPropsParserTest" time="0.005"/>
  <testcase name="testEmptySpel on testEmptySpel(com.cucumber.utils.context.props.ScenarioPropsParserTest)" classname="com.cucumber.utils.context.props.ScenarioPropsParserTest" time="0"/>
  <testcase name="testScenarioPlaceholderFillInSimpleTextAndInvalidParameters on testScenarioPlaceholderFillInSimpleTextAndInvalidParameters(com.cucumber.utils.context.props.ScenarioPropsParserTest)" classname="com.cucumber.utils.context.props.ScenarioPropsParserTest" time="0"/>
  <testcase name="testSpelGeneratesObject on testSpelGeneratesObject(com.cucumber.utils.context.props.ScenarioPropsParserTest)" classname="com.cucumber.utils.context.props.ScenarioPropsParserTest" time="0.006"/>
  <testcase name="testGlobalAndScenarioPlaceholderFillInJson on testGlobalAndScenarioPlaceholderFillInJson(com.cucumber.utils.context.props.ScenarioPropsParserTest)" classname="com.cucumber.utils.context.props.ScenarioPropsParserTest" time="0.001"/>
  <testcase name="testSpelWithScenarioProps on testSpelWithScenarioProps(com.cucumber.utils.context.props.ScenarioPropsParserTest)" classname="com.cucumber.utils.context.props.ScenarioPropsParserTest" time="0.002"/>
  <testcase name="testGlobalPlaceholderFillInSimpleText on testGlobalPlaceholderFillInSimpleText(com.cucumber.utils.context.props.ScenarioPropsParserTest)" classname="com.cucumber.utils.context.props.ScenarioPropsParserTest" time="0.001"/>
  <testcase name="testStandaloneScenarioPropsSubstitution on testStandaloneScenarioPropsSubstitution(com.cucumber.utils.context.props.internal.ScenarioPropsSubstitutorTest)" classname="com.cucumber.utils.context.props.internal.ScenarioPropsSubstitutorTest" time="0.033"/>
  <testcase name="testStandaloneScenarioPropsSubstitutionWithDynamicValues on testStandaloneScenarioPropsSubstitutionWithDynamicValues(com.cucumber.utils.context.props.internal.ScenarioPropsSubstitutorTest)" classname="com.cucumber.utils.context.props.internal.ScenarioPropsSubstitutorTest" time="0.004"/>
  <testcase name="testScenarioPropsSubstitution on testScenarioPropsSubstitution(com.cucumber.utils.context.props.internal.ScenarioPropsSubstitutorTest)" classname="com.cucumber.utils.context.props.internal.ScenarioPropsSubstitutorTest" time="0.039"/>
  <testcase name="testSubstitutionWithEmptyScenarioProps on testSubstitutionWithEmptyScenarioProps(com.cucumber.utils.context.props.internal.ScenarioPropsSubstitutorTest)" classname="com.cucumber.utils.context.props.internal.ScenarioPropsSubstitutorTest" time="0"/>
  <testcase name="testSimpleParse on testSimpleParse(com.cucumber.utils.context.props.internal.SpelParserTest)" classname="com.cucumber.utils.context.props.internal.SpelParserTest" time="0.001"/>
  <testcase name="spELGeneratesNull on spELGeneratesNull(com.cucumber.utils.context.props.internal.SpelParserTest)" classname="com.cucumber.utils.context.props.internal.SpelParserTest" time="0.001"/>
  <testcase name="emptySourceTest on emptySourceTest(com.cucumber.utils.context.props.internal.SpelParserTest)" classname="com.cucumber.utils.context.props.internal.SpelParserTest" time="0"/>
  <testcase name="invalidSpelExpression on invalidSpelExpression(com.cucumber.utils.context.props.internal.SpelParserTest)" classname="com.cucumber.utils.context.props.internal.SpelParserTest" time="0.003"/>
  <testcase name="testXmlsAreValid on testXmlsAreValid(com.cucumber.utils.engineering.utils.XmlUtilsTest)" classname="com.cucumber.utils.engineering.utils.XmlUtilsTest" time="0.008"/>
  <testcase name="testXmlIsNotValid on testXmlIsNotValid(com.cucumber.utils.engineering.utils.XmlUtilsTest)" classname="com.cucumber.utils.engineering.utils.XmlUtilsTest" time="0"/>
  <testcase name="testXmlSpecialRegexChars_fromXmlWithNone on testXmlSpecialRegexChars_fromXmlWithNone(com.cucumber.utils.engineering.utils.XmlUtilsTest)" classname="com.cucumber.utils.engineering.utils.XmlUtilsTest" time="0.005"/>
  <testcase name="testXmlSpecialRegexChars on testXmlSpecialRegexChars(com.cucumber.utils.engineering.utils.XmlUtilsTest)" classname="com.cucumber.utils.engineering.utils.XmlUtilsTest" time="0.009"/>
  <testcase name="testStringToColumnsFormatterWithInvalidColumnWidth on testStringToColumnsFormatterWithInvalidColumnWidth(com.cucumber.utils.engineering.utils.StringFormatTest)" classname="com.cucumber.utils.engineering.utils.StringFormatTest" time="0.003"/>
  <testcase name="testStringToColumnsFormatterWithLines on testStringToColumnsFormatterWithLines(com.cucumber.utils.engineering.utils.StringFormatTest)" classname="com.cucumber.utils.engineering.utils.StringFormatTest" time="0.053"/>
  <testcase name="testStringToColumnsFormatterWithNulls on testStringToColumnsFormatterWithNulls(com.cucumber.utils.engineering.utils.StringFormatTest)" classname="com.cucumber.utils.engineering.utils.StringFormatTest" time="0"/>
  <testcase name="testStringToColumnsFormatter on testStringToColumnsFormatter(com.cucumber.utils.engineering.utils.StringFormatTest)" classname="com.cucumber.utils.engineering.utils.StringFormatTest" time="0"/>
  <testcase name="testStringToColumnsFormatterWithEmptyValues on testStringToColumnsFormatterWithEmptyValues(com.cucumber.utils.engineering.utils.StringFormatTest)" classname="com.cucumber.utils.engineering.utils.StringFormatTest" time="0"/>
  <testcase name="testPropertiesReplace on testPropertiesReplace(com.cucumber.utils.engineering.utils.StringFormatTest)" classname="com.cucumber.utils.engineering.utils.StringFormatTest" time="0.02"/>
  <testcase name="testStringToColumnsFormatterWithNullColumns on testStringToColumnsFormatterWithNullColumns(com.cucumber.utils.engineering.utils.StringFormatTest)" classname="com.cucumber.utils.engineering.utils.StringFormatTest" time="0"/>
  <testcase name="testStringToColumnsFormatterWithBigStrings on testStringToColumnsFormatterWithBigStrings(com.cucumber.utils.engineering.utils.StringFormatTest)" classname="com.cucumber.utils.engineering.utils.StringFormatTest" time="0.11"/>
  <testcase name="testPropertiesReplaceWithNulls on testPropertiesReplaceWithNulls(com.cucumber.utils.engineering.utils.StringFormatTest)" classname="com.cucumber.utils.engineering.utils.StringFormatTest" time="0"/>
  <testcase name="testStringToColumnsFormatterWithEmptyColumns on testStringToColumnsFormatterWithEmptyColumns(com.cucumber.utils.engineering.utils.StringFormatTest)" classname="com.cucumber.utils.engineering.utils.StringFormatTest" time="0"/>
  <testcase name="testNullStringContainsSpecialRegexCharacters on testNullStringContainsSpecialRegexCharacters(com.cucumber.utils.engineering.utils.RegexUtilsTest)" classname="com.cucumber.utils.engineering.utils.RegexUtilsTest" time="0"/>
  <testcase name="testStringContainsSpecialRegexCharacters on testStringContainsSpecialRegexCharacters(com.cucumber.utils.engineering.utils.RegexUtilsTest)" classname="com.cucumber.utils.engineering.utils.RegexUtilsTest" time="0"/>
  <testcase name="testBigJsonBeautification on testBigJsonBeautification(com.cucumber.utils.engineering.utils.JsonUtilsTest)" classname="com.cucumber.utils.engineering.utils.JsonUtilsTest" time="0.965"/>
  <testcase name="testSimpleJsonSpecialRegexCharacters on testSimpleJsonSpecialRegexCharacters(com.cucumber.utils.engineering.utils.JsonUtilsTest)" classname="com.cucumber.utils.engineering.utils.JsonUtilsTest" time="0.019"/>
  <testcase name="testSimpleJsonSpecialRegexCharactersFromArray on testSimpleJsonSpecialRegexCharactersFromArray(com.cucumber.utils.engineering.utils.JsonUtilsTest)" classname="com.cucumber.utils.engineering.utils.JsonUtilsTest" time="0.033"/>
  <testcase name="testWrapperInitFromMap on testWrapperInitFromMap(com.cucumber.utils.compare.httpresponsewrapper.HttpResponseWrapperTest)" classname="com.cucumber.utils.compare.httpresponsewrapper.HttpResponseWrapperTest" time="0.389"/>
  <testcase name="testWrapperInitFromString on testWrapperInitFromString(com.cucumber.utils.compare.httpresponsewrapper.HttpResponseWrapperTest)" classname="com.cucumber.utils.compare.httpresponsewrapper.HttpResponseWrapperTest" time="0.013"/>
  <testcase name="testWrapperInitFromOtherJsonStringMessage on testWrapperInitFromOtherJsonStringMessage(com.cucumber.utils.compare.httpresponsewrapper.HttpResponseWrapperTest)" classname="com.cucumber.utils.compare.httpresponsewrapper.HttpResponseWrapperTest" time="0.006"/>
  <testcase name="testWrapperInitFromOtherJsonString on testWrapperInitFromOtherJsonString(com.cucumber.utils.compare.httpresponsewrapper.HttpResponseWrapperTest)" classname="com.cucumber.utils.compare.httpresponsewrapper.HttpResponseWrapperTest" time="0.011"/>
  <testcase name="testWrapperInitFromStringStatus on testWrapperInitFromStringStatus(com.cucumber.utils.compare.httpresponsewrapper.HttpResponseWrapperTest)" classname="com.cucumber.utils.compare.httpresponsewrapper.HttpResponseWrapperTest" time="0.006"/>
  <testcase name="testWrapperInitFromEmptyString on testWrapperInitFromEmptyString(com.cucumber.utils.compare.httpresponsewrapper.HttpResponseWrapperTest)" classname="com.cucumber.utils.compare.httpresponsewrapper.HttpResponseWrapperTest" time="0"/>
  <testcase name="testWrapperInitFromHttpResponse on testWrapperInitFromHttpResponse(com.cucumber.utils.compare.httpresponsewrapper.HttpResponseWrapperTest)" classname="com.cucumber.utils.compare.httpresponsewrapper.HttpResponseWrapperTest" time="0.056"/>
  <testcase name="testWrapperInitFromEmptyJsonString on testWrapperInitFromEmptyJsonString(com.cucumber.utils.compare.httpresponsewrapper.HttpResponseWrapperTest)" classname="com.cucumber.utils.compare.httpresponsewrapper.HttpResponseWrapperTest" time="0"/>
</testsuite>