<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.aerospike.unit</groupId>
	<artifactId>aerospike-unit</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.resourceEncoding>UTF-8</project.build.resourceEncoding>
		<project.report.outputEncoding>UTF-8</project.report.outputEncoding>
		<project.report.inputEncoding>UTF-8</project.report.inputEncoding>
		<!--javac specific properties -->
		<javac.compiler.arguments>-Xlint:all</javac.compiler.arguments>
		<javac.compiler.optimize>true</javac.compiler.optimize>
		<javac.compiler.showWarnings>true</javac.compiler.showWarnings>
		<!-- Maven settings -->
		<!--default max memory allocation -->
		<maven.build.jvmsize.max>1024m</maven.build.jvmsize.max>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm:ssZ</maven.build.timestamp.format>

		<project.build.targetJdk>1.8</project.build.targetJdk>
		<apache.commons.lang>2.6</apache.commons.lang>
		<hadoop.common.version>2.2.0</hadoop.common.version>
		<lombok.version>1.12.2</lombok.version>
		<maven.compiler.plugin.version>3.1</maven.compiler.plugin.version>
		<joda.time.version>2.3</joda.time.version>
		<aerospike.client.version>3.1.3</aerospike.client.version>
		<testng.version>6.9.6</testng.version>
		<plugin.jdeb.version>1.4</plugin.jdeb.version>
		<plugin.shade.version>2.3</plugin.shade.version>
		<plugin.dependency.version>2.8</plugin.dependency.version>

		<!-- debian -->
		<mvn.deb.build.dir>${project.build.directory}/debian</mvn.deb.build.dir>
		<mvn.deb.install.dir>${project.groupId}/${project.artifactId}
		</mvn.deb.install.dir>
		<mvn.deb.file.path>${project.build.directory}/${project.groupId}.${project.artifactId}-${project.version}.deb
		</mvn.deb.file.path>

		<!--Basic maven build, packaging related plugins -->
		<plugin.clean.version>2.6.1</plugin.clean.version>
		<plugin.compiler.version>3.2</plugin.compiler.version>
		<plugin.resources.version>2.7</plugin.resources.version>
		<plugin.filtering.version>1.3</plugin.filtering.version>
		<plugin.source.version>2.1.2</plugin.source.version>
		<plugin.dependency.version>2.9</plugin.dependency.version>

		<dependency.copy.path>${mvn.deb.build.dir}/lib</dependency.copy.path>
		<shaded.jar.suffix>uber</shaded.jar.suffix>

	</properties>

	<scm>
		<connection>scm:git:https://github.com/maverickgautam/Aerospike-unit.git</connection>
		<url>scm:git:https://github.com/maverickgautam/Aerospike-unit.git</url>
		<developerConnection>scm:git:https://github.com/maverickgautam/Aerospike-unit.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<repositories>
		<repository>
			<id>central</id>
			<url>https://repo1.maven.org/maven2</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>central</id>
			<url>https://repo1.maven.org/maven2</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>
		<dependency>
			<groupId>com.aerospike</groupId>
			<artifactId>aerospike-client</artifactId>
			<version>${aerospike.client.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-common</artifactId>
			<version>${hadoop.common.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>1.10</version>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>${testng.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${plugin.compiler.version}</version>
				<configuration>
					<source>${project.build.targetJdk}</source>
					<target>${project.build.targetJdk}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<maxmem>${plugin.compiler.jvmsize}</maxmem>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
					<fork>true</fork>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${plugin.dependency.version}</version>
				<executions>
					<execution>
						<id>copy-libs</id>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${dependency.copy.path}</outputDirectory>
							<overWriteIfNewer>true</overWriteIfNewer>
							<includeTypes>jar</includeTypes>
							<includeScope>runtime</includeScope>
							<excludeTransitive>false</excludeTransitive>
						</configuration>
					</execution>
					<execution>
						<id>copy-installed</id>
						<!-- This should execute after "package" phase as jar would be prepared 
							in package phase -->
						<!-- This should execute before "install" phase as jdeb needs this 
							for debian preparation -->
						<phase>pre-integration-test</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<version>${project.version}</version>
									<type>${project.packaging}</type>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${dependency.copy.path}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<profiles>
		<profile>
			<id>mac</id>
			<activation>
				<os>
					<family>mac</family>
				</os>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skipTests>true</skipTests>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
