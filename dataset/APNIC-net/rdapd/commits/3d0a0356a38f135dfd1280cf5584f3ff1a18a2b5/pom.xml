<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <modelVersion>4.0.0</modelVersion>

    <groupId>net.apnic.whowas</groupId>
    <artifactId>data-loader</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <parent>
        <groupId>net.apnic.pom</groupId>
        <artifactId>spring-boot-pom</artifactId>
        <version>1.0.2</version>
    </parent>

    <properties>
        <docker.libraryName>whowas</docker.libraryName>
        <docker.name>applications/${project.artifactId}</docker.name>
        <docker.from>docker.apnic.net/base/openjdk-jre-headless:8</docker.from>
        <docker.maintainer>software@apnic.net</docker.maintainer>
        <docker.tags.1>latest</docker.tags.1>
        <docker.tags.2>${project.version}</docker.tags.2>
        <docker.entrypoint>["java", "-jar", "/app/${project.build.finalName}.${project.packaging}"]</docker.entrypoint>
        <docker.assembly.baseDir>/app</docker.assembly.baseDir>
        <docker.assembly.descriptorRef>artifact</docker.assembly.descriptorRef>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>com.codepoetics</groupId>
            <artifactId>protonpack</artifactId>
            <version>1.9</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.7</version>
        </dependency>
        <dependency>
            <groupId>org.rpsl4j</groupId>
            <artifactId>rpsl4j-parser</artifactId>
            <version>1.81</version>
        </dependency>
        <dependency>
            <groupId>org.jparsec</groupId>
            <artifactId>jparsec</artifactId>
            <version>2.2.1</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-java8</artifactId>
            <version>1.2.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>1.2.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>boot-dev</id>
            <dependencies>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-devtools</artifactId>
                    <optional>true</optional>
                </dependency>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-configuration-processor</artifactId>
                    <optional>true</optional>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.jolokia</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <images>
                        <image>
                            <external>
                                <type>props</type>
                            </external>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
