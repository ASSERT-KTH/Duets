<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.1.RELEASE</version>
		<relativePath />
	</parent>
	<groupId>ch.rasc</groupId>
	<artifactId>webauthn-demo</artifactId>
	<version>0.0.1</version>
	<name>webauthn-demo</name>
	<description>WebAuthn Demo</description>

	<properties>
		<java.version>11</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
		</dependency>

		<dependency>
			<groupId>com.yubico</groupId>
			<artifactId>webauthn-server-core</artifactId>
			<version>1.6.4</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.httpcomponents</groupId>
					<artifactId>httpclient</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.yubico</groupId>
			<artifactId>yubico-util</artifactId>
			<version>1.6.4</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
	</dependencies>

	<build>
		<finalName>webauthn-demo</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<executable>true</executable>
				</configuration>
			</plugin>
		</plugins>
	</build>


	<profiles>
		<profile>
			<id>jooq</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jooq</groupId>
						<artifactId>jooq-codegen-maven</artifactId>
						<version>${jooq.version}</version>
						<executions>
							<execution>
								<id>generate-jooq-sources</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<generator>
										<generate>
											<pojos>false</pojos>
											<daos>false</daos>
											<javaTimeTypes>true</javaTimeTypes>
										</generate>
										<database>
											<name>org.jooq.meta.extensions.ddl.DDLDatabase</name>
											<inputCatalog></inputCatalog>
											<inputSchema>PUBLIC</inputSchema>
											<outputSchemaToDefault>true</outputSchemaToDefault>
											<outputCatalogToDefault>true</outputCatalogToDefault>
											<properties>
												<property>
													<key>sort</key>
													<value>semantic</value>
												</property>
												<property>
													<key>scripts</key>
													<value>src/main/resources/db/migration/*</value>
												</property>
											</properties>
										</database>
										<target>
											<clean>true</clean>
											<packageName>ch.rasc.webauthn.db</packageName>
											<directory>src/main/java</directory>
										</target>
									</generator>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.jooq</groupId>
								<artifactId>jooq-meta-extensions</artifactId>
								<version>${jooq.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>jooq-db</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jooq</groupId>
						<artifactId>jooq-codegen-maven</artifactId>
						<version>${jooq.version}</version>
						<executions>
							<execution>
								<id>generate-jooq-sources</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<jdbc>
										<url>jdbc:mariadb://localhost:3306/webauthn?serverTimezone=UTC&amp;useMysqlMetadata=true</url>
										<user>root</user>
										<password></password>
									</jdbc>
									<generator>
										<generate>
											<pojos>false</pojos>
											<daos>false</daos>
											<javaTimeTypes>true</javaTimeTypes>
										</generate>
										<database>
											<name>org.jooq.meta.mariadb.MariaDBDatabase</name>
											<includes>.*</includes>
											<inputSchema>webauthn</inputSchema>
											<excludes>flyway_schema_history</excludes>
										</database>
										<target>
											<clean>true</clean>
											<packageName>ch.rasc.webauthn.db</packageName>
											<directory>src/main/java</directory>
										</target>
									</generator>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.jooq</groupId>
								<artifactId>jooq-meta-extensions</artifactId>
								<version>${jooq.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>production</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.10.0</version>
						<executions>
							<execution>
								<id>install node and npm</id>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
							</execution>
							<execution>
								<id>npm install</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>install</arguments>
								</configuration>
							</execution>
							<execution>
								<id>build</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<phase>prepare-package</phase>
								<configuration>
									<arguments>run build-prod</arguments>
								</configuration>
							</execution>
						</executions>
						<configuration>
							<nodeVersion>v14.4.0</nodeVersion>
							<workingDirectory>${basedir}/../client</workingDirectory>
							<NODE_ENV>production</NODE_ENV>
						</configuration>
					</plugin>

					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>prepare-package</phase>
								<configuration>
									<target>
										<copy todir="${basedir}/target/classes/static">
											<fileset dir="${basedir}/../client/dist/app">
												<include name="**" />
											</fileset>
										</copy>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

</project>
