<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <!-- This is the Apache Maven "build file" for this project -->
    
  <!-- Please refer to http://maven.apache.org/pom.html if you are
       unsure about how this document is structured -->
  
  <!-- Artifact information -->
  <groupId>org.quantumdrive</groupId>
  <artifactId>quantumdrive</artifactId>
  <version>1.0-SNAPSHOT</version>
  
  <!-- Project information -->
  <name>QuantumDrive RTS</name>
  <description>Real time strategy game for the OpenPandora platform.</description>
  <inceptionYear>2009</inceptionYear>
  <url>http://quantumdrive.dyndns.org</url>
  <licenses>
    <license>
      <name>GNU General public license version 3</name>
      <url>http://www.gnu.org/licenses/gpl.html</url>
      <distribution>repo</distribution>
      <comments>A very popular OSS license</comments>
    </license>
  </licenses>
  
  <!-- Project team information -->
  <organization>
    <name>The QuantumDrive development team</name>
    <url>http://quantumdrive.dyndns.org</url>
  </organization>
  
  <!-- Project team member information -->
  <developers>
    <!-- If you feel like you are a "regular" developer and not just a
         casual contributor, add yourself here: -->
    <developer>
      <id>keaft</id>
      <roles>
        <role>project founder</role>
      </roles>
    </developer>
    <developer>
      <id>dflemstr</id>
      <roles>
        <role>developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
  </developers>
  
  <contributors>
    <!-- If you have contributed a "small" piece of code or data, add yourself
         here (preferrably in the same commit that your changes are in): -->
  </contributors>
  
  <!-- Source code management information -->
  <scm>
    <connection>scm:git://github.com/Keaft/QuantumDrive.git</connection>
    <developerConnection>scm:git:git@github.com:Keaft/QuantumDrive.git</developerConnection>
    <url>http://github.com/Keaft/QuantumDrive/tree/master</url>
  </scm>
  
  <!-- Common variables in the various modules -->
  <properties>
    <main.class>org.quantumdrive.Application</main.class>
    <natives.path>lib/native</natives.path>
    <java.version>1.5</java.version>
    <scala.version>2.7.7</scala.version>
    <jogl.version>2.0</jogl.version>
  </properties>
  
  <!-- Our build profiles -->
  <profiles>
    <profile>
      <id>linux-i386</id>
      <activation>
        <os>
          <family>unix</family>
          <name>linux</name>
          <arch>i386</arch>
        </os>
      </activation>
      <properties>
        <natives.classifier>linux-i586</natives.classifier>
        <launchscript>quantumdrive</launchscript>
      </properties>
    </profile>
    <profile>
      <id>linux-i486</id>
      <activation>
        <os>
          <family>unix</family>
          <name>linux</name>
          <arch>i486</arch>
        </os>
      </activation>
      <properties>
        <natives.classifier>linux-i586</natives.classifier>
        <launchscript>quantumdrive</launchscript>
      </properties>
    </profile>
    <profile>
      <id>linux-i586</id>
      <activation>
        <os>
          <family>unix</family>
          <name>linux</name>
          <arch>i586</arch>
        </os>
      </activation>
      <properties>
        <natives.classifier>linux-i586</natives.classifier>
        <launchscript>quantumdrive</launchscript>
      </properties>
    </profile>
    <profile>
      <id>linux-i686</id>
      <activation>
        <os>
          <family>unix</family>
          <name>linux</name>
          <arch>i686</arch>
        </os>
      </activation>
      <properties>
        <natives.classifier>linux-i586</natives.classifier>
        <launchscript>quantumdrive</launchscript>
      </properties>
    </profile>
    <profile>
      <id>linux-amd64</id>
      <activation>
        <os>
          <family>unix</family>
          <name>linux</name>
          <arch>amd64</arch>
        </os>
      </activation>
      <properties>
        <natives.classifier>linux-amd64</natives.classifier>
        <launchscript>quantumdrive</launchscript>
      </properties>
    </profile>
    <profile>
      <id>linux-x86_64</id>
      <activation>
        <os>
          <family>unix</family>
          <name>linux</name>
          <arch>x86_64</arch>
        </os>
      </activation>
      <properties>
        <natives.classifier>linux-amd64</natives.classifier>
        <launchscript>quantumdrive</launchscript>
      </properties>
    </profile>
    <profile>
      <id>macosx-universal</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <properties>
        <natives.classifier>macosx-universal</natives.classifier>
        <launchscript>quantumdrive</launchscript>
      </properties>
    </profile>
    <profile>
      <id>windows-i586</id>
      <activation>
        <os>
          <family>windows</family>
          <arch>x86</arch>
        </os>
      </activation>
      <properties>
        <natives.classifier>windows-i586</natives.classifier>
        <launchscript>quantumdrive.bat</launchscript>
      </properties>
    </profile>
    <profile>
      <id>windows-amd64</id>
      <properties>
        <natives.classifier>windows-amd64</natives.classifier>
        <launchscript>quantumdrive.bat</launchscript>
      </properties>
    </profile>
    <profile>
      <id>solaris-i586</id>
      <activation>
        <os>
          <name>solaris</name>
          <arch>i586</arch>
        </os>
      </activation>
      <properties>
        <natives.classifier>solaris-i586</natives.classifier>
        <launchscript>quantumdrive</launchscript>
      </properties>
    </profile>
    <profile>
      <id>solaris-sparc</id>
      <activation>
        <os>
          <name>solaris</name>
          <arch>sparc</arch>
        </os>
      </activation>
      <properties>
        <natives.classifier>solaris-sparc</natives.classifier>
        <launchscript>quantumdrive</launchscript>
      </properties>
    </profile>
    <profile>
      <id>solaris-sparcv9</id>
      <activation>
        <os>
          <name>solaris</name>
          <arch>sparcv9</arch>
        </os>
      </activation>
      <properties>
        <natives.classifier>solaris-sparcv9</natives.classifier>
        <launchscript>quantumdrive</launchscript>
      </properties>
    </profile>
  </profiles>
  
  <!-- Dependency repositories -->
  <repositories>
    <repository>
      <id>local</id>
      <name>Local repository inside of "lib".</name>
      <url>file://lib/</url>
    </repository>
    <repository>
      <id>scala-tools-releases</id>
      <name>Scala-tools stable release repository</name>
      <url>http://scala-tools.org/repo-releases</url>
    </repository>
    <repository>
      <id>scala-tools-snapshots</id>
      <name>Scala-tools snapshot repository</name>
      <url>http://scala-tools.org/repo-snapshots</url>
    </repository>
  </repositories>
  
  <!-- Maven plugin repositories -->
  <pluginRepositories>
    <pluginRepository>
      <id>scala-tools-releases</id>
      <name>Scala-tools stable release repository</name>
      <url>http://scala-tools.org/repo-releases</url>
    </pluginRepository>
  </pluginRepositories>
  
  <!-- Dependencies that this project uses, including version info. -->
  <dependencies>
    <!-- Scala, an object-oriented functional programming language -->
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
    </dependency>
    
    <!-- Log4J, a logging framework -->
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.14</version>
    </dependency>
    
    <!-- JOGL, managed OpenGL bindings for Java -->
    <dependency>
      <groupId>org.quantumdrive</groupId>
      <artifactId>jogl</artifactId>
      <version>${jogl.version}</version>
    </dependency>
    
    <!-- JOGL natives, various native libraries for various target platforms -->
    <dependency>
      <groupId>org.quantumdrive</groupId>
      <artifactId>jogl-natives</artifactId>
      <version>${jogl.version}</version>
      <classifier>${natives.classifier}</classifier>
    </dependency>
    
    <!-- Gluegen-RT, a tool for producing JNI native library bindings -->
    <dependency>
      <groupId>org.quantumdrive</groupId>
      <artifactId>gluegen-rt</artifactId>
      <version>1.0-beta07</version>
    </dependency>
    
    <!-- NativeWindow, a library that gives you access to a platforms native windowing system -->
    <dependency>
      <groupId>org.quantumdrive</groupId>
      <artifactId>nativewindow</artifactId>
      <version>1.0</version>
    </dependency>
    
    <!-- NEWT Runtime Environment, a Sun runtime environment -->
    <dependency>
      <groupId>org.quantumdrive</groupId>
      <artifactId>newt</artifactId>
      <version>1.0</version>
    </dependency>
    
    <!-- JUnit, a Java-based unit testing framework -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.4</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  
  <build>
    <!-- Some standard plugin templates for submodules' build processes -->
    <plugins>
      <plugin>
        <!-- Enables compilation of Java files -->
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
        </configuration>
      </plugin>
      <plugin>
        <!-- Enables compilation of Scala files -->
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <args>
            <arg>-deprecation</arg>
            <arg>-unchecked</arg>
          </args>
        </configuration>
      </plugin>
      <plugin>
        <!-- Gives a module the ability to be executed using "mvn exec:java" -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <mainClass>${main.class}</mainClass>
          <systemProperties>
            <property>
              <!-- Set the correct natives path for the running -->
              <key>java.library.path</key>
              <value>${project.build.directory}/${natives.path}</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <!-- Copies native libraries when distributing the project -->
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>compile</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.quantumdrive</groupId>
                  <artifactId>jogl-natives</artifactId>
                  <version>${jogl.version}</version>
                  <classifier>${natives.classifier}</classifier>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/${natives.path}</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- Produces a JAR executable for the project -->
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <mainClass>${main.class}</mainClass>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib/</classpathPrefix>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <!-- Distributes the project in ready-to-deploy files when issuing "mvn install" -->
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/distribution.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- Adds support for SureFire unit testing -->
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemProperties>
            <property>
              <!-- Set the correct natives path for the testing -->
              <name>java.library.path</name>
              <value>${project.build.directory}/${natives.path}</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <!-- Adds support for generating Eclipse project files -->
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
          <downloadSources>true</downloadSources>
          <excludes>
            <exclude>org.scala-lang:scala-library</exclude>
          </excludes>
          <buildcommands>
            <buildcommand>ch.epfl.lamp.sdt.core.scalabuilder</buildcommand>
          </buildcommands>
          <additionalProjectnatures>
            <projectnature>ch.epfl.lamp.sdt.core.scalanature</projectnature>
          </additionalProjectnatures>
          <classpathContainers>
            <classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
            <classpathContainer>ch.epfl.lamp.sdt.launching.SCALA_CONTAINER</classpathContainer>
          </classpathContainers>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
