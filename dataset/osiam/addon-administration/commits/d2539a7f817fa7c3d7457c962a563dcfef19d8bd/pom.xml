<?xml version="1.0" encoding="UTF-8" ?>
<!-- ~ Copyright (C) 2013 tarent AG ~ ~ Permission is hereby granted, free 
	of charge, to any person obtaining ~ a copy of this software and associated 
	documentation files (the ~ "Software"), to deal in the Software without restriction, 
	including ~ without limitation the rights to use, copy, modify, merge, publish, 
	~ distribute, sublicense, and/or sell copies of the Software, and to ~ permit 
	persons to whom the Software is furnished to do so, subject to ~ the following 
	conditions: ~ ~ The above copyright notice and this permission notice shall 
	be ~ included in all copies or substantial portions of the Software. ~ ~ 
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, ~ EXPRESS 
	OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF ~ MERCHANTABILITY, 
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. ~ IN NO EVENT SHALL 
	THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY ~ CLAIM, DAMAGES OR OTHER 
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, ~ TORT OR OTHERWISE, ARISING 
	FROM, OUT OF OR IN CONNECTION WITH THE ~ SOFTWARE OR THE USE OR OTHER DEALINGS 
	IN THE SOFTWARE. -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.osiam</groupId>
	<artifactId>addon-administration</artifactId>
	<version>1.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>OSIAM Administration</name>

	<properties>
		<java.version>1.7</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<sonar.core.codeCoveragePlugin>cobertura</sonar.core.codeCoveragePlugin>
		<!-- force sonar to reuse reports generated during build cycle -->
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<!-- set path for unit tests reports -->

		<org.osiam.connector4java.version>1.0</org.osiam.connector4java.version>

		<!-- needed by spring to know where is the starter class -->
		<start-class>org.osiam.addon.administration.config.Application</start-class>
	</properties>

	<scm>
		<connection>scm:git:ssh://git@github.com/osiam/addon-administration.git</connection>
		<developerConnection>scm:git:ssh://git@github.com/osiam/addon-administration.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<!--
		Let spring boot configure our project configuration!
	-->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.1.1.RELEASE</version>
	</parent>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<!-- coming soon... (at the moment we don't net a security)
			
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency> 
		
		-->
		<!-- OSIAM Dependencies -->
		<dependency>
			<groupId>org.osiam</groupId>
			<artifactId>connector4java</artifactId>
			<version>${org.osiam.connector4java.version}</version>
		</dependency>
		
		<!-- JSTL for Tomcat -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>
	</dependencies>

	<build>
		<finalName>addon-administration</finalName>
	
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2.1</version>
                <inherited>true</inherited>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>spring-releases</id>
			<name>Spring Releases</name>
			<url>http://repo.spring.io/libs-release</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-releases</id>
			<name>Spring Releases</name>
			<url>http://repo.spring.io/libs-release</url>
		</pluginRepository>
	</pluginRepositories>

	<profiles>
		<profile>
			<id>coverage</id>
			<properties>
			</properties>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>cobertura-maven-plugin</artifactId>
						<version>2.6</version>
						<configuration>
							<formats>
								<format>xml</format>
							</formats>
						</configuration>
						<executions>
							<execution>
								<id>generate-data</id>
								<phase>package</phase>
								<goals>
									<goal>cobertura</goal>
								</goals>
								<configuration>
									<quiet>true</quiet>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- ==================== Profile: build internally for integration runs 
			==================== -->
		<!-- Deployment needs to be run from jenkins server which has credentials 
			to access the internal repository -->
		<profile>
			<id>integration</id>

			<distributionManagement>
				<repository>
					<id>osiam-repository</id>
					<name>public evolvis release repository</name>
					<url>scpexe://maven-repo.evolvis.org:/var/www/maven_repo/releases</url>
				</repository>
				<snapshotRepository>
					<id>OSIAM-NG-SNAPSHOT-repository</id>
					<name>public evolvis release repository</name>
					<url>scpexe://maven-repo.evolvis.org:/var/www/maven_repo/snapshots/</url>
				</snapshotRepository>

			</distributionManagement>

			<repositories>
				<repository>
					<id>osiam releases repo</id>
					<url>https://maven-repo.evolvis.org/releases</url>
				</repository>
			</repositories>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-deploy-plugin</artifactId>
						<version>2.8.1</version>
						<dependencies>
							<dependency>
								<groupId>org.apache.maven.wagon</groupId>
								<artifactId>wagon-ssh-external</artifactId>
								<version>2.6</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>default-deploy</id>
								<phase>deploy</phase>
								<goals>
									<goal>deploy</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>
</project>
