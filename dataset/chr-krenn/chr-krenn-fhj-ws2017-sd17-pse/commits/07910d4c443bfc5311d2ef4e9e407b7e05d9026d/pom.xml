<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.se.lab</groupId>
	<artifactId>pse</artifactId>
	<version>0.0.2-SNAPSHOT</version>
	<packaging>war</packaging>


	<properties>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- JBoss dependency versions -->
		<version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>
		<version.jboss.spec.javaee.7.0>1.0.0.Final</version.jboss.spec.javaee.7.0>

		<!-- maven-compiler-plugin -->
		<version.compiler.plugin>3.1</version.compiler.plugin>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
		<dependency.locations.enabled>false</dependency.locations.enabled>
		
	</properties>

	<build>
		<finalName>${project.artifactId}</finalName>

		<plugins>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.5.201505241946</version>
				<executions>
					<!--
                        Prepares the property pointing to the JaCoCo runtime agent which
                        is passed as VM argument when Maven the Surefire plugin is executed.
                    -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
							<!--
                                Sets the name of the property containing the settings
                                for JaCoCo runtime agent.
                            -->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<!--
                        Ensures that the code coverage report for unit tests is created after
                        unit tests have been run.
                    -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>

					<!-- jacoco settings for integration tests -->
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
							<!--
                                Sets the name of the property containing the settings
                                for JaCoCo runtime agent.
                            -->
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<!--
                        Ensures that the code coverage report for integration tests after
                        integration tests have been run.
                    -->
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
						</configuration>
					</execution>

				</executions>
			</plugin>

			<!-- Unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.20.1</version>
				<configuration>
					<!-- Sets the VM argument line used when unit tests are run. -->
					<argLine>${surefireArgLine}</argLine>
					<!-- exclude DAO tests -->
					<excludes>
						<exclude>**/*DAO*.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- DAO and UI tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.20.1</version>
				<executions>
					<execution>
						<id>DAO-tests</id>
						<phase>integration-test</phase>
						<goals>
							<goal>integration-test</goal>
						</goals>
						<!-- include only DAO tests in integration-test phase -->
						<configuration>
							<!-- Sets the VM argument line used when integration tests are run. -->
							<argLine>${failsafeArgLine}</argLine>

							<includes>
								<include>**/*DAO*.java</include>
							</includes>
						</configuration>
					</execution>

					<!-- execute UI-tests after integration-test phase -->
					<execution>
						<id>integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<!-- insert sample data before executing integration tests -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>3.0.0-SNAPSHOT</version>

				<!-- this is broken: <version>3.0.0-SNAPSHOT</version> -->

				<dependencies>
					<!-- specify the dependent jdbc driver -->
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>5.1.37</version>
					</dependency>
				</dependencies>

				<configuration>
					<driver>org.gjt.mm.mysql.Driver</driver>
					<url>jdbc:mysql://localhost:3306/pse</url>
					<username>student</username>
					<password>student</password>
					<!-- The value of settingsKey should be a server id in ~/.m2/settings.xml -->
					<settingsKey>mysql-db-dev</settingsKey>
					<!--all executions are ignored if -Dmaven.test.skip=true -->
					<skip>${maven.test.skip}</skip>
				</configuration>

				<executions>

					<execution>
						<id>truncate-before-DAO-tests</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<orderFile>ascending</orderFile>
							<fileset>
								<basedir>sql</basedir>
								<includes>
									<include>truncate.sql</include>
								</includes>
							</fileset>
						</configuration>
					</execution>

					<!-- insert sample data for UI-tests -->
					<execution>
						<id>insert-UI-test-data</id>
						<phase>integration-test</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<orderFile>ascending</orderFile>
							<fileset>
								<basedir>sql</basedir>
								<includes>
									<include>insert.sql</include>
								</includes>
							</fileset>
						</configuration>
					</execution>

				</executions>
			</plugin>


			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${version.compiler.plugin}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-maven-plugin</artifactId>
				<version>${version.wildfly.maven.plugin}</version>
				<configuration>
					<!--<jvm-args>-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=9797</jvm-args> -->
					<jbossHome>/home/student/install/wildfly-10.1.0.Final</jbossHome>
					<port>9990</port>
					<server-config>standalone.xml</server-config>
				</configuration>

				<executions>
					<!-- Run wildfly and deploy application for integration tests. -->
					<!--
					<execution>
						<id>wildfly-run</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
							<goal>deploy</goal>
						</goals>
					</execution>
					<execution>
						<id>wildfly-shutdown</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>undeploy</goal>
							<goal>shutdown</goal>
						</goals>
					</execution>-->
				</executions>

			</plugin>

		</plugins>
	</build>
	
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.4</version>
			</plugin>
		    <plugin>
        		<groupId>org.apache.maven.plugins</groupId>
        		<artifactId>maven-pmd-plugin</artifactId>
        		<version>3.9.0</version>
      		</plugin>
		</plugins>
	</reporting>

	<dependencyManagement>
		<dependencies>
			<!-- Define the version of JBoss' Java EE 7 APIs we want to import. Any 
				dependencies from org.jboss.spec will have their version defined by this 
				BOM -->
			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-7.0</artifactId>
				<version>${version.jboss.spec.javaee.7.0}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<dependencies>

		<!-- https://mvnrepository.com/artifact/org.hamcrest/hamcrest-junit -->
		<!--
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-junit</artifactId>
			<version>2.0.0.0</version>
			<scope>test</scope>
		</dependency>
		-->


		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>

		<!-- Import the CDI API, we use provided scope as the API is included in 
			JBoss WildFly -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the Common Annotations API (JSR-250), we use provided scope 
			as the API is included in JBoss WildFly -->
		<dependency>
			<groupId>org.jboss.spec.javax.annotation</groupId>
			<artifactId>jboss-annotations-api_1.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the EJB API -->
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JSF API, we use provided scope as the API is included in 
			JBoss WildFly -->
		<dependency>
			<groupId>org.jboss.spec.javax.faces</groupId>
			<artifactId>jboss-jsf-api_2.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Primefaces and Bootsfaces -->
		<dependency>
			<groupId>org.primefaces</groupId>
			<artifactId>primefaces</artifactId>
			<version>6.0</version>
		</dependency>
		<dependency>
			<groupId>net.bootsfaces</groupId>
			<artifactId>bootsfaces</artifactId>
			<version>1.0.1</version>
		</dependency>

		<!-- Import the JPA API -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.1-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>3.4</version>
			<scope>test</scope>
		</dependency>
		<!-- JPA Test Scope -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>5.1.0.Final</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>5.1.0.Final</version>
			<scope>provided</scope>
		</dependency>

		<!-- UI tests -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-server</artifactId>
			<version>3.8.1</version>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-firefox-driver</artifactId>
			<version>3.8.1</version>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>htmlunit-driver</artifactId>
			<version>2.27</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.37</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
    <groupId>net.sourceforge.pmd</groupId>
    <artifactId>pmd</artifactId>
    <version>5.5.2</version>
    <type>pom</type>
</dependency>
<!-- https://mvnrepository.com/artifact/jdepend/jdepend -->
<dependency>
    <groupId>jdepend</groupId>
    <artifactId>jdepend</artifactId>
    <version>2.9.1</version>
    <scope>test</scope>
</dependency>
<!-- https://mvnrepository.com/artifact/org.mindrot/jbcrypt -->
<dependency>
    <groupId>org.mindrot</groupId>
    <artifactId>jbcrypt</artifactId>
    <version>0.3m</version>
</dependency>
		
	</dependencies>
</project>
