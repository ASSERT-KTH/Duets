<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor 
	license agreements. See the NOTICE file distributed with this work for additional 
	information regarding copyright ownership. The ASF licenses this file to 
	You under the Apache License, Version 2.0 (the "License"); you may not use 
	this file except in compliance with the License. You may obtain a copy of 
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.catify.bpmn</groupId>
	<artifactId>bpmn-engine-core</artifactId>
	<packaging>jar</packaging>
	<version>1.0</version>

	<name>a graph backed bpmn process engine</name>
	<url>http://www.catify.com</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<aspectj.version>1.6.12</aspectj.version>
		<logback.version>1.0.6</logback.version>
		<akka.version>2.0.3</akka.version>
		<spring.version>3.1.2.RELEASE</spring.version>
		<spring-data-neo4j.version>2.1.0.RELEASE</spring-data-neo4j.version>
		<neo4j.version>1.8.1</neo4j.version>
	</properties>

	<repositories>
		<repository>
			<id>typesafe</id>
			<name>Typesafe Repository</name>
			<url>http://repo.typesafe.com/typesafe/releases/</url>
		</repository>
		<repository>
			<id>neo4j-release-repository</id>
			<name>Neo4j Maven 2 release repository</name>
			<url>http://m2.neo4j.org/releases</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>
		<!-- akka -->
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-actor</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-file-mailbox</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-testkit</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<!-- spring data neo4j -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-neo4j</artifactId>
			<version>${spring-data-neo4j.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- neo4j -->
		<dependency>
    		<groupId>org.neo4j</groupId>
    		<artifactId>neo4j</artifactId>
    		<version>${neo4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.neo4j</groupId>
			<artifactId>neo4j-cypher</artifactId>
			<version>${neo4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.neo4j</groupId>
			<artifactId>neo4j-cypher-dsl</artifactId>
			<version>1.8</version>
		</dependency>
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0.2</version>
		</dependency>
		<dependency>
			<groupId>xalan</groupId>
			<artifactId>xalan</artifactId>
			<version>2.7.1</version>
		</dependency>
		<dependency>
			<groupId>asm</groupId>
			<artifactId>asm</artifactId>
			<version>3.3.1</version>
		</dependency>
		<!-- neo4j web admin for embedded db -->
<!-- 		<dependency> -->
<!-- 			<groupId>org.neo4j.app</groupId> -->
<!-- 			<artifactId>neo4j-server</artifactId> -->
<!-- 			<version>${neo4j.version}</version> -->
<!-- 			<exclusions> -->
<!-- 				<exclusion> -->
<!-- 					<groupId>ch.qos.logback</groupId> -->
<!-- 					<artifactId>logback-classic</artifactId> -->
<!-- 				</exclusion> -->
<!-- 				<exclusion> -->
<!-- 					<groupId>ch.qos.logback</groupId> -->
<!-- 					<artifactId>logback-access</artifactId> -->
<!-- 				</exclusion> -->
<!-- 	            <exclusion> -->
<!-- 	                <artifactId>slf4j-log4j12</artifactId> -->
<!-- 	                <groupId>org.slf4j</groupId> -->
<!-- 	            </exclusion> -->
<!-- 			</exclusions> -->
<!-- 		</dependency> -->
<!-- 		<dependency> -->
<!-- 			<groupId>org.neo4j.app</groupId> -->
<!-- 			<artifactId>neo4j-server</artifactId> -->
<!-- 			<version>${neo4j.version}</version> -->
<!-- 			<classifier>static-web</classifier> -->
<!-- 			<exclusions> -->
<!-- 				<exclusion> -->
<!-- 					<groupId>ch.qos.logback</groupId> -->
<!-- 					<artifactId>logback-classic</artifactId> -->
<!-- 				</exclusion> -->
<!-- 				<exclusion> -->
<!-- 					<groupId>ch.qos.logback</groupId> -->
<!-- 					<artifactId>logback-access</artifactId> -->
<!-- 				</exclusion> -->
<!-- 				<exclusion> -->
<!--                 	<artifactId>slf4j-log4j12</artifactId> -->
<!--                 	<groupId>org.slf4j</groupId> -->
<!--             	</exclusion> -->
<!-- 			</exclusions> -->
<!-- 		</dependency> -->
<!-- 		<dependency> -->
<!-- 			<groupId>org.mortbay.jetty</groupId> -->
<!-- 			<artifactId>jsp-2.1-jetty</artifactId> -->
<!-- 			<version>6.1.25</version> -->
<!-- 		</dependency> -->
		<!-- for testing -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.0</version>
			<scope>test</scope>
		</dependency>
		<!-- logging -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.6.5</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<defaultGoal>package</defaultGoal>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<!-- creates an executable jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>com.catify.processengine.core.AppStarter</mainClass>
						</manifest>
						<!-- if used without maven the service providers can be manually bound -->
						<manifestEntries>
							<Class-Path>services/integration-spi-camel-1.0.jar services/data-spi-voldemort-1.0.jar</Class-Path>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			
			<!-- copies the dependencies -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.2</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- creates jar with dependencies -->
<!-- 			<plugin> -->
<!-- 				<groupId>org.apache.maven.plugins</groupId> -->
<!-- 				<artifactId>maven-shade-plugin</artifactId> -->
<!-- 				<executions> -->
<!-- 					<execution> -->
<!-- 						<phase>package</phase> -->
<!-- 						<goals> -->
<!-- 							<goal>shade</goal> -->
<!-- 						</goals> -->
<!-- 						<configuration> -->
<!-- 							<transformers> -->
<!-- 								<transformer -->
<!-- 									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer"> -->
<!-- 									<manifestEntries> -->
<!-- 										<Main-Class>com.catify.processengine.core.AppStarter</Main-Class> -->
<!-- 									</manifestEntries> -->
<!-- 								</transformer> -->
<!-- 								<transformer -->
<!-- 									implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" /> -->
<!-- 								<transformer -->
<!-- 									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer"> -->
<!-- 									<resource>META-INF/spring.handlers</resource> -->
<!-- 								</transformer> -->
<!-- 								<transformer -->
<!-- 									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer"> -->
<!-- 									<resource>META-INF/spring.schemas</resource> -->
<!-- 								</transformer> -->
<!-- 								<transformer -->
<!-- 									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer"> -->
<!-- 									<resource>reference.conf</resource> -->
<!-- 								</transformer> -->
<!-- 							</transformers> -->
<!-- 							<filters> -->
<!-- 								<filter> -->
<!-- 									<artifact>*:*</artifact> -->
<!-- 									<excludes> -->
<!-- 										<exclude>META-INF/*.SF</exclude> -->
<!-- 										<exclude>META-INF/*.DSA</exclude> -->
<!-- 										<exclude>META-INF/*.RSA</exclude> -->
<!-- 									</excludes> -->
<!-- 								</filter> -->
<!-- 							</filters> -->
<!-- 						</configuration> -->
<!-- 					</execution> -->
<!-- 				</executions> -->
<!-- 			</plugin> -->

			<!-- Execute the main class -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>com.catify.processengine.core.AppStarter</mainClass>
				</configuration>
			</plugin>

			<!-- Create Javadocs -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<show>private</show>
					<nohelp>true</nohelp>
				</configuration>
			</plugin>
			
			<!-- place config folder -->
			<plugin>
		        <artifactId>maven-resources-plugin</artifactId>
		        <version>2.6</version>
		        <executions>
		          <execution>
		            <id>copy-resources</id>
		            <phase>validate</phase>
		            <goals>
		              <goal>copy-resources</goal>
		            </goals>
		            <configuration>
		              <outputDirectory>${basedir}/target/config</outputDirectory>
		              <resources>          
		                <resource>
		                  <directory>${basedir}/src/main/resources/META-INF/config</directory>
		                  <filtering>false</filtering>
		                </resource>
		              </resources>              
		            </configuration>            
		          </execution>
		        </executions>
		      </plugin>
		      
			<!-- create dirs -->
			<plugin> <groupId>org.apache.maven.plugins</groupId> 
				<artifactId>maven-antrun-plugin</artifactId> 
				<executions> 
					<execution> 
						<id>create-service-directory</id> 
						<phase>process-classes</phase> 
						<goals> 
							<goal>run</goal> 
						</goals> 
						<configuration> 
							<tasks> 
								<mkdir dir="${basedir}/target/services" /> 
								<mkdir dir="${basedir}/target/processes/deployed" /> 
							</tasks> 
						</configuration> 
					</execution> 
				</executions> 
			</plugin>

			<!-- spring data neo4j-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>1.2</version>
				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjrt</artifactId>
						<version>${aspectj.version}</version>
					</dependency>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjtools</artifactId>
						<version>${aspectj.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>test-compile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<outxml>true</outxml>
					<aspectLibraries>
						<aspectLibrary>
							<groupId>org.springframework</groupId>
							<artifactId>spring-aspects</artifactId>
						</aspectLibrary>
					</aspectLibraries>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.3,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											aspectj-maven-plugin
										</artifactId>
										<versionRange>
											[1.2,)
										</versionRange>
										<goals>
											<goal>compile</goal>
											<goal>test-compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.2,)
										</versionRange>
										<goals>
											<goal>
												copy-dependencies
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
