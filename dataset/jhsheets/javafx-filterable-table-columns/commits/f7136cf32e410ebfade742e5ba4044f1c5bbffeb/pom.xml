<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>org.google.jhsheets</groupId>
    <artifactId>FilterableTableColumns</artifactId>
    <name>FilterableTableColumns</name>
    <developers>
    	<developer>
    		<name>James Sheets</name>
    		<email>jhsheets@gmail.com</email>
    	</developer>
    </developers>

    <packaging>jar</packaging>
    <version>1.0.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jfx.version>2.2</jfx.version>
        <!-- override if your javafx is sourced from a different jdk then your maven build execution jre -->
        <javafx.home>${java.home}</javafx.home>
        <javafx.runtime.lib.jar>${javafx.home}/lib/jfxrt.jar</javafx.runtime.lib.jar>
        <javafx.tools.ant.jar>${javafx.home}/../lib/ant-javafx.jar</javafx.tools.ant.jar>
        <slf4j.version>1.7.2</slf4j.version>
        <!-- github server corresponds to entry in ~/.m2/settings.xml -->
        <github.global.server>github</github.global.server>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.4.3</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <!-- -->
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.1</version>
                <configuration>
                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
                </configuration>
            </plugin>

            <!-- Push maven binary up to github on deploy. Note: github profile name/email must be set and made public -->
            <plugin>
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <version>0.11</version>
                <configuration>
                    <!-- Should set merge=true when deploying a release builds to prevent overwriting a deployment. False is fine for snapshots -->
                    <!--<merge>true</merge>-->
                    <message>Maven artifacts for ${project.version}</message>
                    <noJekyll>true</noJekyll>
                    <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
                    <branch>refs/heads/mvn-repo</branch>
                    <includes><include>**/*</include></includes>
                    <repositoryName>javafx-filterable-table-columns</repositoryName>
                    <repositoryOwner>jhsheets</repositoryOwner>
                </configuration>
                <executions>
                    <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
                    <execution>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <phase>deploy</phase>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <dependencies>
        
        <!-- Java 8 changed how JavaFX is packaged -->
        <!--
        <dependency>
            <groupId>com.sun.javafx</groupId>
            <artifactId>javafxrt</artifactId>
            <version>${jfx.version}</version>
            <scope>system</scope>
            <systemPath>${javafx.runtime.lib.jar}</systemPath>
        </dependency>-->

        <!-- Logging  -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
    </dependencies>

</project>
