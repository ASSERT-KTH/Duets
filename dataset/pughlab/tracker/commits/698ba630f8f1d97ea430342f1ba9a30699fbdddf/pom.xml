<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ca.uhnresearch.pughlab</groupId>
	<artifactId>tracker-webapp</artifactId>
	<packaging>war</packaging>

	<name>tracker</name>
	<description>
	A generic tracking system designed for easy and secure data recording within large
	distributed research projects.
	</description>
	<inceptionYear>2014</inceptionYear>
	<version>2.2.1</version>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<restlet.version>2.3.5</restlet.version>
		<spring.version>4.1.6.RELEASE</spring.version>
		<slf4j.version>1.7.7</slf4j.version>
		<hsqldb.version>2.3.2</hsqldb.version>
		<querydsl.version>3.6.1</querydsl.version>
		<shiro.version>1.2.3</shiro.version>
		<quartz.version>2.2.1</quartz.version>
		<jackson.version>2.4.4</jackson.version>
        <apache-ldap-api.version>1.0.0-M31</apache-ldap-api.version>
        
        <node.version>v0.12.7</node.version>
        <npm.version>3.3.6</npm.version>
        
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        
        <test.db.driverClassName>org.hsqldb.jdbc.JDBCDriver</test.db.driverClassName>
        <test.db.url>jdbc:hsqldb:file:tracker_test;default_schema=true;shutdown=true</test.db.url>
        <test.db.username>sa</test.db.username>
        <test.db.password></test.db.password>
        
        <test.db.init>src/test/resources/initialize_test.sql</test.db.init>
	</properties>

	<licenses>
        <license>
            <name>BSD 3-Clause License</name>
            <url>http://opensource.org/licenses/BSD-3-Clause</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <issueManagement>
	    <system>GitHub Issues</system>
	    <url>https://github.com/pughlab/tracker/issues</url>
	</issueManagement>

	<scm>
	    <url>https://github.com/pughlab/tracker</url>
	    <connection>scm:git:git@github.com:pughlab/tracker.git</connection>
	    <developerConnection>scm:git:git@github.com:pughlab/tracker.git</developerConnection>
	</scm>

    <developers>
		<developer>
			<id>stuartw</id>
			<name>Stuart Watt</name>
			<email>stuart@morungos.com</email>
			<organization>University Health Network</organization>
			<organizationUrl>http://uhnresearch.ca</organizationUrl>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<timezone>America/Toronto</timezone>
		</developer>
	</developers>

	<contributors>
		<contributor>
			<name>Lillian Siu</name>
			<organization>University Health Network</organization>
				<organizationUrl>http://uhn.ca</organizationUrl>
			<roles>
				<role>project sponsor</role>
			</roles>
		</contributor>
		<contributor>
			<name>Trevor Pugh</name>
			<organization>University Health Network</organization>
			<organizationUrl>http://uhnresearch.ca</organizationUrl>
			<roles>
				<role>project lead</role>
			</roles>
		</contributor>
	</contributors>

	<dependencies>
		<dependency>
			<groupId>org.restlet.jee</groupId>
			<artifactId>org.restlet</artifactId>
			<version>${restlet.version}</version>
		</dependency>
		<dependency>
			<groupId>org.restlet.jee</groupId>
			<artifactId>org.restlet.ext.servlet</artifactId>
			<version>${restlet.version}</version>
		</dependency>
		<dependency>
			<groupId>org.restlet.jee</groupId>
			<artifactId>org.restlet.ext.crypto</artifactId>
			<version>${restlet.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.restlet.jee</groupId>
			<artifactId>org.restlet.ext.spring</artifactId>
			<version>${restlet.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
                <exclusion>
                    <groupId>cglib</groupId>
                    <artifactId>cglib-nodep</artifactId>
                </exclusion>
			</exclusions>
		</dependency>
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
            <version>2.2.2</version>
        </dependency>
		<dependency>
			<groupId>org.restlet.jee</groupId>
			<artifactId>org.restlet.ext.jackson</artifactId>
			<version>${restlet.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-databind</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-annotations</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.restlet.jee</groupId>
			<artifactId>org.restlet.ext.xml</artifactId>
			<version>${restlet.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jdbc-core</artifactId>
			<version>1.1.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-pool</groupId>
                    <artifactId>commons-pool</artifactId>
                </exclusion>
            </exclusions>
		</dependency>
        <dependency>
            <groupId>commons-pool</groupId>
            <artifactId>commons-pool</artifactId>
            <version>1.6</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.4</version>
        </dependency>
		<dependency>
			<groupId>com.mysema.querydsl</groupId>
			<artifactId>querydsl-sql</artifactId>
			<version>${querydsl.version}</version>
		</dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5</version>
        </dependency>

		<!-- Jackson -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-annotations</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<!-- Shiro -->
		<dependency>
		    <groupId>org.apache.shiro</groupId>
		    <artifactId>shiro-core</artifactId>
		    <version>${shiro.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.shiro</groupId>
		    <artifactId>shiro-web</artifactId>
		    <version>${shiro.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.shiro</groupId>
		    <artifactId>shiro-spring</artifactId>
		    <version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mindrot</groupId>
			<artifactId>jbcrypt</artifactId>
			<version>0.3m</version>
		</dependency>

        <!-- OIDC -->
        <dependency>
            <groupId>io.buji</groupId>
            <artifactId>buji-pac4j-core</artifactId>
            <version>1.3.1</version>
            <exclusions>
                <exclusion>
                    <groupId>org.pac4j</groupId>
                    <artifactId>pac4j-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.buji</groupId>
            <artifactId>buji-pac4j-servlet</artifactId>
            <version>1.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.pac4j</groupId>
            <artifactId>pac4j-core</artifactId>
            <version>1.7.1</version>
        </dependency>
        <dependency>
            <groupId>org.pac4j</groupId>
            <artifactId>pac4j-oidc</artifactId>
            <version>1.7.1</version>
            <exclusions>
                <exclusion>
                    <groupId>com.nimbusds</groupId>
                    <artifactId>oauth2-oidc-sdk</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.nimbusds</groupId>
            <artifactId>oauth2-oidc-sdk</artifactId>
            <version>3.4.1</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-lang3</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.directory.api</groupId>
            <artifactId>api-ldap-client-api</artifactId>
            <version>${apache-ldap-api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.directory.api</groupId>
            <artifactId>api-ldap-codec-standalone</artifactId>
            <version>${apache-ldap-api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.directory.api</groupId>
            <artifactId>api-ldap-extras-aci</artifactId>
            <version>${apache-ldap-api.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.directory.api</groupId>
            <artifactId>api-ldap-model</artifactId>
            <version>${apache-ldap-api.version}</version>
        </dependency>

		<!-- Quartz framework -->
		<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>${quartz.version}</version>
        </dependency>

		<!-- Websockets -->
		<dependency>
         	<groupId>org.atmosphere</groupId>
         	<artifactId>atmosphere-runtime</artifactId>
         	<version>2.3.4</version>
      	</dependency>
      	<dependency>
			<groupId>org.atmosphere</groupId>
			<artifactId>atmosphere-spring</artifactId>
			<version>2.3.1</version>
			<exclusions>
				<exclusion>
					<groupId>org.atmosphere</groupId>
					<artifactId>atmosphere-runtime</artifactId>
				</exclusion>
			</exclusions>
		</dependency>


		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.2.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>3.3.1</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>cglib</groupId>
					<artifactId>cglib-nodep</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>${hsqldb.version}</version>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>

	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.yaml</groupId>
				<artifactId>snakeyaml</artifactId>
				<version>1.13</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
    
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

		<plugins>

            <!-- Allow externalising of properties -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.0-alpha-2</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <quiet>true</quiet>
                            <files>
                                <file>build.properties</file>
                                <file>local.properties</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- Set the Java version - 1.8 is required as we use Nashorn -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>


            <!-- Generate project info reports -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.8</version>
			</plugin>


            <!-- Allow running within Jetty from the command line with mvn jetty:run -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.2.9.v20150224</version>
				<configuration>
					<war>${project.build.directory}/${project.build.finalName}.war</war>
					<webApp>
						<contextPath>/</contextPath>
					</webApp>
					<testClassesDirectory>${project.build.directory}/client/tmp</testClassesDirectory>
					<useTestScope>true</useTestScope>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<webXml>src/main/webapp/WEB-INF/web.xml</webXml>
					<jettyXml>src/main/etc/jetty.xml,src/main/etc/jetty-webapp.xml</jettyXml>
					<systemProperties>
				        <systemProperty>
				            <name>hsqldb.reconfig_logging</name>
				            <value>false</value>
				        </systemProperty>
				    </systemProperties>
				</configuration>
				<dependencies>
				    <dependency>
						<groupId>commons-dbcp</groupId>
						<artifactId>commons-dbcp</artifactId>
						<version>1.4</version>
				    </dependency>
					<dependency>
						<groupId>org.hsqldb</groupId>
						<artifactId>hsqldb</artifactId>
						<version>${hsqldb.version}</version>
					</dependency>
				</dependencies>
			</plugin>


            <!-- Build resources files, allows injecting properties into client code -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <executions>
                    <execution>
                        <id>copy-extra-resources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/extra-resources</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/etc</directory>
                                    <includes>
                                        <include>client_settings.coffee</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-config-resources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/generated-etc</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/conf</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- Use node.js, and allow it to run "gulp build-all" to package the front end  -->
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>0.0.26</version>
				<executions>

                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                            <nodeVersion>${node.version}</nodeVersion>
                            <npmVersion>${npm.version}</npmVersion>
                        </configuration>
                    </execution>

                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>install</arguments>
                        </configuration>
                    </execution>

					<execution>
                        <id>bower install</id>
                        <goals>
                            <goal>bower</goal>
                        </goals>
                        <configuration>
                            <arguments>--allow-root --force-latest install</arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>gulp build</id>
                        <goals>
                            <goal>gulp</goal>
                        </goals>
                        <configuration>
                            <arguments>build-all</arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>gulp test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>gulp</goal>
                        </goals>
                        <configuration>
                            <arguments>test</arguments>
                        </configuration>
                    </execution>
            	</executions>
			</plugin>


            <!-- Build a war file including the packaged code from "gulp build-all"  -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<webResources>
						<resource>
							<targetPath>WEB-INF/classes</targetPath>
							<directory>${project.build.directory}/client/tmp</directory>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			
			
            <!-- Initialize SQL data for testing  -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>
				<dependencies>
					<dependency>
						<groupId>org.hsqldb</groupId>
						<artifactId>hsqldb</artifactId>
						<version>${hsqldb.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<driver>${test.db.driverClassName}</driver>
					<url>${test.db.url}</url>
					<username>${test.db.username}</username>
					<password>${test.db.password}</password>
				</configuration>
				<executions>
					<execution>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<fileset>
								<basedir>${basedir}</basedir>
								<includes>
									<include>${test.db.init}</include>
								</includes>
							</fileset>
						</configuration>
					</execution>
				</executions>
			</plugin>
            
            
            <!-- Build a source jar file  -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <!-- Build a javadoc jar file  -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.3</version>
                <configuration>
                    <additionalparam>-Xdoclint:none</additionalparam>
                    <quiet>true</quiet>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <!-- Generate PMD reports  -->
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-pmd-plugin</artifactId>
		        <version>3.4</version>
		    </plugin>


            <!-- Run with Jacoco for test coverage analysis  -->
			<plugin>
			    <groupId>org.jacoco</groupId>
			    <artifactId>jacoco-maven-plugin</artifactId>
			    <version>0.7.4.201502262128</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<!-- implmentation is needed only for Maven 2 -->
								<rule implementation="org.jacoco.maven.RuleConfiguration">
									<element>BUNDLE</element>
									<limits>
										<!-- implmentation is needed only for Maven 2 -->
										<limit implementation="org.jacoco.report.check.Limit">
											<counter>COMPLEXITY</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.80</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>sql-maven-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.mortbay.jetty</groupId>
										<artifactId>jetty-maven-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>jacoco-maven-plugin</artifactId>
										<versionRange>[0.7.0,)</versionRange>
										<goals>
											<goal>prepare-agent</goal>
											<goal>report</goal>
											<goal>check</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
								    <pluginExecutionFilter>
								        <groupId>
								            org.codehaus.mojo
								        </groupId>
								        <artifactId>
								            properties-maven-plugin
								        </artifactId>
								        <versionRange>
								            [1.0-alpha-2,)
								        </versionRange>
								        <goals>
								            <goal>
								                read-project-properties
								            </goal>
								        </goals>
								    </pluginExecutionFilter>
								    <action>
								        <ignore></ignore>
								    </action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<reporting>
		<plugins>
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-project-info-reports-plugin</artifactId>
		        <version>2.8</version>
		        <configuration>
		        	<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
		        </configuration>
		    </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.18.1</version>
			</plugin>
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-pmd-plugin</artifactId>
		        <version>3.4</version>
		        <configuration>
			        <rulesets>
			            <!-- Two rule sets that come bundled with PMD -->
			            <ruleset>rulesets/java/basic.xml</ruleset>
			            <ruleset>rulesets/java/codesize.xml</ruleset>
			            <ruleset>rulesets/java/comments.xml</ruleset>
			            <ruleset>rulesets/java/design.xml</ruleset>
			            <ruleset>rulesets/java/imports.xml</ruleset>
			            <ruleset>rulesets/java/naming.xml</ruleset>
			            <ruleset>rulesets/java/unnecessary.xml</ruleset>
			            <ruleset>rulesets/java/unusedcode.xml</ruleset>
			        </rulesets>
			    </configuration>
		    </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.17</version>
                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
		    <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-jxr-plugin</artifactId>
		        <version>2.5</version>
		    </plugin>
		    <plugin>
			    <groupId>org.jacoco</groupId>
			    <artifactId>jacoco-maven-plugin</artifactId>
			    <version>0.7.4.201502262128</version>
			</plugin>
		</plugins>
	</reporting>

	<repositories>
		<repository>
			<id>maven-restlet</id>
			<name>Public online Restlet repository</name>
			<url>http://maven.restlet.com</url>
		</repository>
	</repositories>
    
    <profiles>
    
        <!-- A profile that can be used to test against MySQL -->
        <profile>
            <id>test-mysql</id>
            <properties>
                <test.db.driverClassName>com.mysql.jdbc.Driver</test.db.driverClassName>
                <test.db.url>jdbc:mysql://localhost:3306/tracker?sessionVariables=sql_mode=ansi</test.db.url>
                <test.db.username>tracker</test.db.username>
                <test.db.password>tracker</test.db.password>
                
                <test.db.init>src/main/etc/initialize_mysql.sql</test.db.init>
            </properties>
            
            <dependencies>
                <dependency>
                    <groupId>mysql</groupId>
                    <artifactId>mysql-connector-java</artifactId>
                    <version>5.1.16</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>1.5</version>
                        <dependencies>
                            <dependency>
                                <groupId>mysql</groupId>
                                <artifactId>mysql-connector-java</artifactId>
                                <version>5.1.16</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- A profile for the builds performed by the continuous integration server -->
            <id>package-debian</id>
            
            <build>
                <plugins>
                
                    <!-- Resolves and retrieves the server container, which we use for Debian packaging -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>2.10</version>
                        <executions>
                            <execution>
                                <id>copy</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>ca.uhnresearch.pughlab</groupId>
                                            <artifactId>java-server</artifactId>
                                            <version>1.0.3</version>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${basedir}/target/deployment-dependencies</outputDirectory>
                                            <destFileName>java-server.jar</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
      
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>make-deb</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <property name="deb.dir" value="${basedir}/target/deb" />
                                        <property name="deb.version" value="${project.version}" />
                                        <tstamp>
                                            <!-- http://www.debian.org/doc/debian-policy/ch-source.html -->
                                            <format property="deb.date" pattern="EEE, d MMM yyyy HH:mm:ss Z" locale="en" />
                                        </tstamp>
    
                                        <mkdir dir="${deb.dir}" />
                                        <mkdir dir="${deb.dir}/usr/share/tracker-webapp" />
                                        <mkdir dir="${deb.dir}/etc/tracker-webapp" />
    
                                        <!-- Copy the files, templating the changelog, etc., with the right date -->
                                        <copy todir="${deb.dir}">
                                            <fileset dir="src/main/deb" />
                                            <filterset>
                                                <filter token="project.version" value="${deb.version}" />
                                                <filter token="date" value="${deb.date}" />
                                            </filterset>
                                        </copy>
                                        
                                        <copy todir="${deb.dir}/usr/share/tracker-webapp">
                                            <fileset dir="${basedir}/target">
                                                <filename name="tracker-webapp-${project.version}.war"/>
                                            </fileset>
                                            <fileset dir="${basedir}/target/deployment-dependencies">
                                                <filename name="java-server.jar"/>
                                            </fileset>
                                            <fileset dir="${basedir}/src/main/etc">
                                            	<filename name="initialize_mysql.sql"/>
                                            	<filename name="nginx.conf"/>
                                            </fileset>
                                        </copy>
                                        <copy todir="${deb.dir}/usr/share/tracker-webapp/conf">
											<fileset dir="${basedir}/src/main/etc">
												<filename name="logging.properties"/>
											</fileset>
										</copy>
                                        <copy todir="${deb.dir}/etc/tracker-webapp">
                                            <fileset dir="${basedir}/target/generated-etc">
                                                <filename name="*.*"/>
                                            </fileset>
                                        </copy>

                                        <exec executable="debuild" dir="${deb.dir}" failonerror="true" osfamily="unix">
                                            <arg value="-b" />
    
                                            <!-- Turn off signing for now, until we move to a continuous integration server -->
                                            <arg value="-us" />
                                            <arg value="-uc" />
                                        </exec>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    
                </plugins>
            </build>
    
        </profile>
    
    </profiles>
</project>
