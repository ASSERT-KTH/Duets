[INFO] Error stacktraces are turned on.
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for com.technophobia.substeps:substeps-core:jar:1.1.4-SNAPSHOT
[WARNING] 'build.plugins.plugin.version' for org.apache.maven.plugins:maven-compiler-plugin is missing. @ line 230, column 15
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] --------------< com.technophobia.substeps:substeps-core >---------------
[INFO] Building SubSteps 1.1.4-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-enforcer-plugin:1.0:enforce (enforce-maven) @ substeps-core ---
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.5:prepare-agent (default) @ substeps-core ---
[INFO] argLine set to -javaagent:/home/jdbl/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/tmp/tmp6s6ktyp6/substeps-core/target/jacoco.exec
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ substeps-core ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 64 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ substeps-core ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 80 source files to /tmp/tmp6s6ktyp6/substeps-core/target/classes
[WARNING] /tmp/tmp6s6ktyp6/substeps-core/src/main/java/com/technophobia/substeps/report/DefaultExecutionReportBuilder.java:[53,33] sun.net.www.protocol.file.FileURLConnection is internal proprietary API and may be removed in a future release
[WARNING] /tmp/tmp6s6ktyp6/substeps-core/src/main/java/com/technophobia/substeps/report/DefaultExecutionReportBuilder.java:[303,45] sun.net.www.protocol.file.FileURLConnection is internal proprietary API and may be removed in a future release
[WARNING] /tmp/tmp6s6ktyp6/substeps-core/src/main/java/com/technophobia/substeps/runner/FeatureFileParser.java: Some input files use or override a deprecated API.
[WARNING] /tmp/tmp6s6ktyp6/substeps-core/src/main/java/com/technophobia/substeps/runner/FeatureFileParser.java: Recompile with -Xlint:deprecation for details.
[WARNING] /tmp/tmp6s6ktyp6/substeps-core/src/main/java/com/technophobia/substeps/runner/ExecutionConfigWrapper.java: Some input files use unchecked or unsafe operations.
[WARNING] /tmp/tmp6s6ktyp6/substeps-core/src/main/java/com/technophobia/substeps/runner/ExecutionConfigWrapper.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ substeps-core ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 46 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ substeps-core ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 55 source files to /tmp/tmp6s6ktyp6/substeps-core/target/test-classes
[WARNING] /tmp/tmp6s6ktyp6/substeps-core/src/test/java/com/technophobia/substeps/stepimplementations/MockStepImplementations.java: Some input files use or override a deprecated API.
[WARNING] /tmp/tmp6s6ktyp6/substeps-core/src/test/java/com/technophobia/substeps/stepimplementations/MockStepImplementations.java: Recompile with -Xlint:deprecation for details.
[WARNING] /tmp/tmp6s6ktyp6/substeps-core/src/test/java/com/technophobia/substeps/runner/setupteardown/BeforeAndAfterProcessorMethodExecutorTest.java: Some input files use unchecked or unsafe operations.
[WARNING] /tmp/tmp6s6ktyp6/substeps-core/src/test/java/com/technophobia/substeps/runner/setupteardown/BeforeAndAfterProcessorMethodExecutorTest.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ substeps-core ---
[INFO] Surefire report directory: /tmp/tmp6s6ktyp6/substeps-core/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running com.technophobia.substeps.model.ConfigurationTest
[main] DEBUG org.apache.commons.configuration.PropertiesConfiguration - Base path set to file:///tmp/tmp6s6ktyp6/substeps-core/target/test-classes/
[main] DEBUG org.apache.commons.configuration.PropertiesConfiguration - FileName set to custom.properties
[main] DEBUG org.apache.commons.configuration.PropertiesConfiguration - URL set to file:/tmp/tmp6s6ktyp6/substeps-core/target/test-classes/custom.properties
[main] DEBUG org.apache.commons.configuration.PropertiesConfiguration - Base path set to file:///tmp/tmp6s6ktyp6/substeps-core/target/test-classes/
[main] DEBUG org.apache.commons.configuration.PropertiesConfiguration - FileName set to default.properties
[main] DEBUG org.apache.commons.configuration.PropertiesConfiguration - URL set to file:/tmp/tmp6s6ktyp6/substeps-core/target/test-classes/default.properties
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.519 sec - in com.technophobia.substeps.model.ConfigurationTest
Running com.technophobia.substeps.model.parameter.ConverterFactoryTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec - in com.technophobia.substeps.model.parameter.ConverterFactoryTest
Running com.technophobia.substeps.model.parameter.IntegerConverterTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec - in com.technophobia.substeps.model.parameter.IntegerConverterTest
Running com.technophobia.substeps.model.parameter.BooleanConverterTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec - in com.technophobia.substeps.model.parameter.BooleanConverterTest
Running com.technophobia.substeps.model.parameter.StringConverterTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec - in com.technophobia.substeps.model.parameter.StringConverterTest
Running com.technophobia.substeps.model.parameter.LongConverterTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec - in com.technophobia.substeps.model.parameter.LongConverterTest
Running com.technophobia.substeps.model.parameter.DoubleConverterTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec - in com.technophobia.substeps.model.parameter.DoubleConverterTest
Running com.technophobia.substeps.model.exception.DuplicateStepImplementationExceptionTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec - in com.technophobia.substeps.model.exception.DuplicateStepImplementationExceptionTest
Running com.technophobia.substeps.model.SyntaxTest
[main] WARN  com.technophobia.substeps.model.Syntax - Invalid step implementation pattern: Illegal repetition near index 27
ExecuteQueryAndStashResults {([^}]*)}
                           ^
class com.technophobia.substeps.model.StepImplementation.public void com.technophobia.substeps.model.SyntaxTest$StepDefinitionClass2.method2() will not be added to the syntax
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.029 sec - in com.technophobia.substeps.model.SyntaxTest
Running com.technophobia.substeps.model.PatternMapTest
p1 matches: false
p2 matches: true
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.033 sec - in com.technophobia.substeps.model.PatternMapTest
Running com.technophobia.substeps.model.StepImplementationTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec - in com.technophobia.substeps.model.StepImplementationTest
Running com.technophobia.substeps.report.DefaultExecutionReportBuilderTest
[main] DEBUG com.technophobia.substeps.report.DefaultExecutionReportBuilder - Build report in: /tmp/junit6731059417774330449
[main] DEBUG com.technophobia.substeps.report.DefaultExecutionReportBuilder - trying to create: /tmp/junit6731059417774330449/feature_report
[main] DEBUG com.technophobia.substeps.report.DefaultExecutionReportBuilder - Copying static resources to: /tmp/junit6731059417774330449/feature_report
[main] DEBUG com.technophobia.substeps.report.DefaultExecutionReportBuilder - Building main report file.
[main] DEBUG com.technophobia.substeps.report.DefaultExecutionReportBuilderTest - decomposeReport() entered
[main] DEBUG com.technophobia.substeps.report.DefaultExecutionReportBuilderTest - Line found in detail report = detail[6]={"nodetype":"RootNode","filename":"","result":"NOT_RUN","id":6,"emessage":"","stacktrace":"","runningDurationMillis":null,"runningDurationString":"No duration recorded","description":"Description","children":[{"result":"NOT_RUN","description":"test feature"}]};
[main] DEBUG com.technophobia.substeps.report.DefaultExecutionReportBuilderTest - Line found in detail report = detail[5]={"nodetype":"FeatureNode","filename":"","result":"NOT_RUN","id":5,"emessage":"","stacktrace":"","runningDurationMillis":null,"runningDurationString":"No duration recorded","description":"test feature","children":[{"result":"NOT_RUN","description":"scenarioName"}]};
[main] DEBUG com.technophobia.substeps.report.DefaultExecutionReportBuilderTest - Line found in detail report = detail[4]={"nodetype":"BasicScenarioNode","filename":"","result":"NOT_RUN","id":4,"emessage":"","stacktrace":"","runningDurationMillis":null,"runningDurationString":"No duration recorded","description":"scenarioName","children":[{"result":"PASSED","description":"stepNode1"},{"result":"PASSED","description":"stepNode2"},{"result":"PASSED","description":"stepNode3"}]};
[main] DEBUG com.technophobia.substeps.report.DefaultExecutionReportBuilderTest - Line found in detail report = detail[1]={"nodetype":"Step","filename":"","result":"PASSED","id":1,"emessage":"","stacktrace":"","runningDurationMillis":0,"runningDurationString":"0 milliseconds","description":"stepNode1","method":"DefaultExecutionReportBuilderTest.nonFailingMethod()<br/>"};
[main] DEBUG com.technophobia.substeps.report.DefaultExecutionReportBuilderTest - Line found in detail report = detail[2]={"nodetype":"Step","filename":"","result":"PASSED","id":2,"emessage":"","stacktrace":"","runningDurationMillis":0,"runningDurationString":"0 milliseconds","description":"stepNode2","method":"DefaultExecutionReportBuilderTest.failingMethod()<br/>"};
[main] DEBUG com.technophobia.substeps.report.DefaultExecutionReportBuilderTest - Line found in detail report = detail[3]={"nodetype":"Step","filename":"","result":"PASSED","id":3,"emessage":"","stacktrace":"","runningDurationMillis":0,"runningDurationString":"0 milliseconds","description":"stepNode3","method":"DefaultExecutionReportBuilderTest.nonFailingMethod()<br/>"};
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.167 sec - in com.technophobia.substeps.report.DefaultExecutionReportBuilderTest
Running com.technophobia.substeps.report.ExecutionStatsTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec - in com.technophobia.substeps.report.ExecutionStatsTest
Running com.technophobia.substeps.report.ReportDataTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0 sec - in com.technophobia.substeps.report.ReportDataTest
Running com.technophobia.substeps.runner.ExecutionConfigTest
[class com.technophobia.substeps.runner.ExecutionConfigTest$InitClass1, class com.technophobia.substeps.runner.ExecutionConfigTest$InitClass2, class com.technophobia.substeps.runner.ExecutionConfigTest$InitClass3, class com.technophobia.substeps.runner.ExecutionConfigTest$InitClass4, class com.technophobia.substeps.runner.ExecutionConfigTest$InitClass5, class com.technophobia.substeps.runner.ExecutionConfigTest$InitClass6]
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec - in com.technophobia.substeps.runner.ExecutionConfigTest
Running com.technophobia.substeps.runner.ParsingTests
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given the usual isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given the usual with a <parameter> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given the usual with a <parameter>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding parameter as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given the usual with a <parameter>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given the usual with a <parameter>
pattern: Given the usual with a "?([^"]*)"?
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given the usual with a <parameter>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding parameter as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given the usual with a <parameter>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given the usual with a <parameter>
pattern: Given the usual with a "?([^"]*)"?
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given the usual with a "fantastically tickety boo" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs String[] with pattern: Given the usual with a "?([^"]*)"? and sourceStr: Given the usual with a "fantastically tickety boo"
[main] DEBUG com.technophobia.substeps.model.Util - returning args: [fantastically tickety boo] 
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given two postcodes <s_outer_pc> <s_inner_pc>, <from_street>, <e_outer_pc> <e_inner_pc>, <to_street> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given two postcodes <s_outer_pc> <s_inner_pc>, <from_street>, <e_outer_pc> <e_inner_pc>, <to_street>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding s_outer_pc as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(31)
[main] DEBUG com.technophobia.substeps.model.Step - adding s_inner_pc as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(44)
[main] DEBUG com.technophobia.substeps.model.Step - adding from_street as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(59)
[main] DEBUG com.technophobia.substeps.model.Step - adding e_outer_pc as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(73)
[main] DEBUG com.technophobia.substeps.model.Step - adding e_inner_pc as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(86)
[main] DEBUG com.technophobia.substeps.model.Step - adding to_street as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given two postcodes <s_outer_pc> <s_inner_pc>, <from_street>, <e_outer_pc> <e_inner_pc>, <to_street>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given two postcodes <s_outer_pc> <s_inner_pc>, <from_street>, <e_outer_pc> <e_inner_pc>, <to_street>
pattern: Given two postcodes "?([^"]*)"? "?([^"]*)"?, "?([^"]*)"?, "?([^"]*)"? "?([^"]*)"?, "?([^"]*)"?
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given two postcodes S11 8UP, "Penrhyn Road", S11 8UE, "Hunter Hill Road" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs String[] with pattern: Given two postcodes "?([^"]*)"? "?([^"]*)"?, "?([^"]*)"?, "?([^"]*)"? "?([^"]*)"?, "?([^"]*)"? and sourceStr: Given two postcodes S11 8UP, "Penrhyn Road", S11 8UE, "Hunter Hill Road"
[main] DEBUG com.technophobia.substeps.model.Util - returning args: [S11] [8UP] [Penrhyn Road] [S11] [8UE] [Hunter Hill Road] 
1
unquoted
split: hello bob here is <something
matcher group 1: something
split:  else and <anotherthing
matcher group 1: anotherthing
split:  blah
no match
2
<anotherthing>
anotherthing
2
<something>
something
input: hello bob here is replacement else and replacement blah
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.053 sec - in com.technophobia.substeps.runner.ParsingTests
Running com.technophobia.substeps.runner.ExecutionNodeRunnerTest
ExecutionConfig [description=ExecutionNodeRunner Test feature set, tags=@bug_missing_sub_step_impl, nonFatalTags=null, featureFile=./target/test-classes/features/error.feature, subStepsFileName=./target/test-classes/substeps/error.substeps, strict=false, fastFailParseErrors=false, nonStrictKeywordPrecedence=[Given, And], stepImplementationClassNames=null, initialisationClass=null, stepImplementationClasses=[class com.technophobia.substeps.steps.TestStepImplementations], initialisationClasses=[], executionListeners=null]
[main] DEBUG com.technophobia.substeps.runner.TagManager - running with tags: @bug_missing_sub_step_impl
[main] DEBUG com.technophobia.substeps.runner.TagManager - Creating tagManager with tags @bug_missing_sub_step_impl
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Copyright Technophobia Ltd 2012] @ 1:error.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# some substeps to support failing tests] @ 2:error.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 3:error.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given step 1] @ 4:error.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given step 1 isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given step 1
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given step 1
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given step 1
pattern: Given step 1
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    SingleWord] @ 5:error.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Test_Then something else has happened] @ 6:error.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something else has happened isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Test_Then something else has happened
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Test_Then something else has happened
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Test_Then something else has happened
pattern: Test_Then something else has happened
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 7:error.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given step 2] @ 8:error.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given step 2 isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given step 2
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given step 2
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given step 2
pattern: Given step 2
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Test_Then something has happened] @ 9:error.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something has happened isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Test_Then something has happened
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Test_Then something has happened
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Test_Then something has happened
pattern: Test_Then something has happened
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    ] @ 10:error.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: An empty substep definition    ] @ 11:error.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: An empty substep definition isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: An empty substep definition
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: An empty substep definition
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: An empty substep definition
pattern: An empty substep definition
[main] WARN  com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - Ignoring substep definition [An empty substep definition] as it has no steps
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Feature: A feature to ensure test failure

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Tags: @bug_missing_sub_step_impl

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: A scenario that calls some substeps with missing implementations
Given step 1
Given step 2

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given step 1 isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given step 2 isSubstep: false
[main] DEBUG com.technophobia.substeps.runner.TestParameters - Current dir is: /tmp/tmp6s6ktyp6/substeps-core/.
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Given step 1
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent != null for stepLine: Given step 1
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - buildSubstepNode: scenarioDescription: A scenario that calls some substeps with missing implementations step line Given step 1 param line: Given step 1
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - init param vals as not strict
[main] DEBUG com.technophobia.substeps.model.ParentStep - initialiseParamValues with line: Given step 1
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs String[] with pattern: Given step 1 and sourceStr: Given step 1
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: SingleWord
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - nothing in subStepsMapLocal, not strict, checking elsewhere..
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - subStepsMapLocal.get(altLine) no results for: Given
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - subStepsMapLocal.get(altLine) no results for: And
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: SingleWord
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [SingleWord]
[main] DEBUG com.technophobia.substeps.runner.builder.ScenarioNodeBuilder - Failed to parse A scenario that calls some substeps with missing implementations, creating dummy node
com.technophobia.substeps.model.exception.UnimplementedStepException: [SingleWord] in source file: /tmp/tmp6s6ktyp6/substeps-core/./target/test-classes/substeps/error.substeps line 5 is not a recognised step or substep implementation
	at com.technophobia.substeps.model.Syntax.getStrictStepimplementation(Syntax.java:268)
	at com.technophobia.substeps.model.Syntax.getStepImplementationsInternal(Syntax.java:219)
	at com.technophobia.substeps.model.Syntax.getStepImplementations(Syntax.java:204)
	at com.technophobia.substeps.runner.builder.SubstepNodeBuilder.pickImplToExecute(SubstepNodeBuilder.java:292)
	at com.technophobia.substeps.runner.builder.SubstepNodeBuilder.buildStepImplementationNode(SubstepNodeBuilder.java:247)
	at com.technophobia.substeps.runner.builder.SubstepNodeBuilder.buildStepNode(SubstepNodeBuilder.java:111)
	at com.technophobia.substeps.runner.builder.SubstepNodeBuilder.build(SubstepNodeBuilder.java:75)
	at com.technophobia.substeps.runner.builder.SubstepNodeBuilder.buildSubstepNode(SubstepNodeBuilder.java:159)
	at com.technophobia.substeps.runner.builder.SubstepNodeBuilder.buildStepNode(SubstepNodeBuilder.java:103)
	at com.technophobia.substeps.runner.builder.ScenarioNodeBuilder.buildBasicScenarioNode(ScenarioNodeBuilder.java:149)
	at com.technophobia.substeps.runner.builder.ScenarioNodeBuilder.buildRunnableScenarioNode(ScenarioNodeBuilder.java:82)
	at com.technophobia.substeps.runner.builder.ScenarioNodeBuilder.build(ScenarioNodeBuilder.java:62)
	at com.technophobia.substeps.runner.builder.FeatureNodeBuilder.buildRunnableFeatureNode(FeatureNodeBuilder.java:74)
	at com.technophobia.substeps.runner.builder.FeatureNodeBuilder.build(FeatureNodeBuilder.java:55)
	at com.technophobia.substeps.runner.builder.ExecutionNodeTreeBuilder.buildExecutionNodeTree(ExecutionNodeTreeBuilder.java:49)
	at com.technophobia.substeps.runner.ExecutionNodeRunner.prepareExecutionConfig(ExecutionNodeRunner.java:129)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.runExecutionTest(ExecutionNodeRunnerTest.java:282)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.runExecutionTest(ExecutionNodeRunnerTest.java:247)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.runExecutionTest(ExecutionNodeRunnerTest.java:300)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.testParseErrorResultsInFailedTest(ExecutionNodeRunnerTest.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
[main] INFO  com.technophobia.substeps.runner.ExecutionNodeRunner - ** Uncalled Step implementations in scope, this is suspect if these implementations are in your projects domain:

public void com.technophobia.substeps.steps.TestStepImplementations.and()
public void com.technophobia.substeps.steps.TestStepImplementations.uncalled()
public void com.technophobia.substeps.steps.TestStepImplementations.param(java.lang.String)
public void com.technophobia.substeps.steps.TestStepImplementations.methodWithTableArgument(java.util.List)
public void com.technophobia.substeps.steps.TestStepImplementations.sendKeysById(java.lang.String,java.lang.String)
public void com.technophobia.substeps.steps.TestStepImplementations.given()
public void com.technophobia.substeps.steps.TestStepImplementations.when()
public void com.technophobia.substeps.steps.TestStepImplementations.whatever()
public void com.technophobia.substeps.steps.TestStepImplementations.meth1(java.lang.String)
public void com.technophobia.substeps.steps.TestStepImplementations.then()
public void com.technophobia.substeps.steps.TestStepImplementations.meth2(java.lang.String)


[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: A feature to ensure test failure line: A feature to ensure test failure
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: ExecutionNodeRunner Test feature set line: null
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: A scenario that calls some substeps with missing implementations line: A scenario that calls some substeps with missing implementations
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: A feature to ensure test failure line: A feature to ensure test failure
[main] WARN  com.technophobia.substeps.runner.ExecutionNodeRunner - ** Substep definitions not called in current substep execution scope...

	Given step 1 @ error.substeps:4
	Given step 2 @ error.substeps:8

[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: SUITE
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: FEATURE
[main] INFO  com.technophobia.substeps.runner.node.FeatureNodeRunner - Executing feature A feature to ensure test failure
[main] INFO  com.technophobia.substeps.execution.node.RootNodeExecutionContext - SubstepExecutionFailure @ 		id: 41, type: BasicScenarioNode, description: A scenario that calls some substeps with missing implementations
com.technophobia.substeps.model.exception.UnimplementedStepException: [SingleWord] in source file: /tmp/tmp6s6ktyp6/substeps-core/./target/test-classes/substeps/error.substeps line 5 is not a recognised step or substep implementation
	at com.technophobia.substeps.model.Syntax.getStrictStepimplementation(Syntax.java:268)
	at com.technophobia.substeps.model.Syntax.getStepImplementationsInternal(Syntax.java:219)

[main] DEBUG com.technophobia.substeps.runner.node.AbstractNodeRunner - shouldContinue = false for com.technophobia.substeps.execution.node.BasicScenarioNode@1253b822
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: FEATURE
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] DEBUG com.technophobia.substeps.runner.node.RootNodeRunner - node failures
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: SUITE
[main] INFO  com.technophobia.substeps.execution.node.RootNodeExecutionContext - SubstepExecutionFailure @ id: 43, type: RootNode, description: ExecutionNodeRunner Test feature set
	id: 42, type: FeatureNode, description: A feature to ensure test failure
		id: 41, type: BasicScenarioNode, description: A scenario that calls some substeps with missing implementations
java.lang.IllegalStateException: No tests executed
	at com.technophobia.substeps.runner.ExecutionNodeRunner.run(ExecutionNodeRunner.java:317)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.runExecutionTest(ExecutionNodeRunnerTest.java:284)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.runExecutionTest(ExecutionNodeRunnerTest.java:247)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.runExecutionTest(ExecutionNodeRunnerTest.java:300)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.testParseErrorResultsInFailedTest(ExecutionNodeRunnerTest.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] INFO  com.technophobia.substeps.execution.node.RootNodeExecutionContext - SubstepExecutionFailure @ id: 44, type: RootNode, description: Description
java.lang.IllegalStateException: node should have children but doesn't
	at com.technophobia.substeps.runner.node.AbstractNodeRunner.addExpectedChildrenFailureIfNoChildren(AbstractNodeRunner.java:190)
	at com.technophobia.substeps.runner.node.RootNodeRunner.execute(RootNodeRunner.java:43)
	at com.technophobia.substeps.runner.node.RootNodeRunner.execute(RootNodeRunner.java:33)
	at com.technophobia.substeps.runner.node.AbstractNodeRunner.run(AbstractNodeRunner.java:47)
	at com.technophobia.substeps.runner.ExecutionNodeRunner.run(ExecutionNodeRunner.java:313)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.testNoTestsExecutedResultsInTwoFailures(ExecutionNodeRunnerTest.java:361)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] DEBUG com.technophobia.substeps.runner.node.RootNodeRunner - node failures
[main] INFO  com.technophobia.substeps.execution.node.RootNodeExecutionContext - SubstepExecutionFailure @ id: 44, type: RootNode, description: Description
java.lang.IllegalStateException: No tests executed
	at com.technophobia.substeps.runner.ExecutionNodeRunner.run(ExecutionNodeRunner.java:317)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.testNoTestsExecutedResultsInTwoFailures(ExecutionNodeRunnerTest.java:361)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: SUITE
[main] INFO  com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - no logging config name supplied, defaulting to Substeps
[main] WARN  com.technophobia.substeps.runner.node.AbstractNodeRunner - setup failed
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.technophobia.substeps.execution.ImplementationCache.executeMethods(ImplementationCache.java:96)
	at com.technophobia.substeps.runner.setupteardown.SetupAndTearDown.runAllMethods(SetupAndTearDown.java:108)
	at com.technophobia.substeps.runner.setupteardown.SetupAndTearDown.runBeforeAll(SetupAndTearDown.java:66)
	at com.technophobia.substeps.runner.setupteardown.SetupAndTearDown.runSetup(SetupAndTearDown.java:135)
	at com.technophobia.substeps.runner.node.AbstractNodeRunner.runSetup(AbstractNodeRunner.java:110)
	at com.technophobia.substeps.runner.node.AbstractNodeRunner.beforeExecute(AbstractNodeRunner.java:87)
	at com.technophobia.substeps.runner.node.AbstractNodeRunner.run(AbstractNodeRunner.java:44)
	at com.technophobia.substeps.runner.ExecutionNodeRunner.run(ExecutionNodeRunner.java:313)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.testBeforeAllFeaturesSetupFailureFailsTheBuild(ExecutionNodeRunnerTest.java:558)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
Caused by: java.lang.IllegalStateException: something has gone wrong
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.failingSetupMethod(ExecutionNodeRunnerTest.java:519)
	... 38 more
[main] INFO  com.technophobia.substeps.execution.node.RootNodeExecutionContext - SubstepExecutionFailure @ id: 58, type: RootNode, description: Root node description
	id: 57, type: FeatureNode, description: test feature
		id: 56, type: OutlineScenarioNode, description: Scenario #: scenarioName
			id: 53, type: OutlineScenarioRowNode, description: 1 scenarioName:
				id: 52, type: BasicScenarioNode, description: scenarioName
				id: 45, type: StepImplementationNode, description: null impl: ExecutionNodeRunnerTest.nonFailingMethod
				id: 46, type: StepImplementationNode, description: null impl: ExecutionNodeRunnerTest.failingMethod
				id: 47, type: StepImplementationNode, description: null impl: ExecutionNodeRunnerTest.nonFailingMethod
			id: 55, type: OutlineScenarioRowNode, description: 2 scenarioName:
				id: 54, type: BasicScenarioNode, description: scenarioName
				id: 48, type: StepImplementationNode, description: null impl: ExecutionNodeRunnerTest.nonFailingMethod
				id: 49, type: StepImplementationNode, description: null impl: ExecutionNodeRunnerTest.failingMethod
				id: 50, type: StepImplementationNode, description: null impl: ExecutionNodeRunnerTest.failingMethod
				id: 51, type: StepImplementationNode, description: null impl: ExecutionNodeRunnerTest.failingMethod
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.technophobia.substeps.execution.ImplementationCache.executeMethods(ImplementationCache.java:96)
	at com.technophobia.substeps.runner.setupteardown.SetupAndTearDown.runAllMethods(SetupAndTearDown.java:108)

[main] DEBUG com.technophobia.substeps.runner.node.AbstractNodeRunner - shouldContinue = false for com.technophobia.substeps.execution.node.RootNode@7cbede2b
[main] INFO  com.technophobia.substeps.execution.node.RootNodeExecutionContext - SubstepExecutionFailure @ id: 58, type: RootNode, description: Root node description
	id: 57, type: FeatureNode, description: test feature
		id: 56, type: OutlineScenarioNode, description: Scenario #: scenarioName
			id: 53, type: OutlineScenarioRowNode, description: 1 scenarioName:
				id: 52, type: BasicScenarioNode, description: scenarioName
				id: 45, type: StepImplementationNode, description: null impl: ExecutionNodeRunnerTest.nonFailingMethod
				id: 46, type: StepImplementationNode, description: null impl: ExecutionNodeRunnerTest.failingMethod
				id: 47, type: StepImplementationNode, description: null impl: ExecutionNodeRunnerTest.nonFailingMethod
			id: 55, type: OutlineScenarioRowNode, description: 2 scenarioName:
				id: 54, type: BasicScenarioNode, description: scenarioName
				id: 48, type: StepImplementationNode, description: null impl: ExecutionNodeRunnerTest.nonFailingMethod
				id: 49, type: StepImplementationNode, description: null impl: ExecutionNodeRunnerTest.failingMethod
				id: 50, type: StepImplementationNode, description: null impl: ExecutionNodeRunnerTest.failingMethod
				id: 51, type: StepImplementationNode, description: null impl: ExecutionNodeRunnerTest.failingMethod
java.lang.IllegalStateException: No tests executed
	at com.technophobia.substeps.runner.ExecutionNodeRunner.run(ExecutionNodeRunner.java:317)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.testBeforeAllFeaturesSetupFailureFailsTheBuild(ExecutionNodeRunnerTest.java:558)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs String[] with pattern: Given a substep that takes one parameter "([^"]*)" and sourceStr: Given a substep that takes one parameter "src1"
[main] DEBUG com.technophobia.substeps.model.Util - returning args: [src1] 
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs String[] with pattern: Given a substep that takes one parameter "([^"]*)" and sourceStr: And a substep that takes one parameter "src2"
[main] DEBUG com.technophobia.substeps.model.Util - returning args: [src2] 


** Running scenario: [scenario non crit fail, scenario crit fail, scenario pass]
[main] DEBUG com.technophobia.substeps.runner.TagManager - running with tags: canFail
[main] DEBUG com.technophobia.substeps.runner.TagManager - Creating tagManager with tags canFail
[main] INFO  com.technophobia.substeps.runner.node.FeatureNodeRunner - Executing feature non crit fail feature
[main] INFO  com.technophobia.substeps.runner.node.BasicScenarioNodeRunner - Executing scenario scenario non crit fail
no fail
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
uh oh
[main] INFO  com.technophobia.substeps.execution.node.RootNodeExecutionContext - SubstepExecutionFailure @ 		id: 60, type: StepImplementationNode, description: null impl: ExecutionNodeRunnerTest.failingMethod
java.lang.IllegalStateException: that's it, had enough
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.failingMethod(ExecutionNodeRunnerTest.java:584)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] INFO  com.technophobia.substeps.runner.node.FeatureNodeRunner - Executing feature crit fail feature
[main] INFO  com.technophobia.substeps.runner.node.BasicScenarioNodeRunner - Executing scenario scenario crit fail
no fail
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
uh oh
[main] INFO  com.technophobia.substeps.execution.node.RootNodeExecutionContext - SubstepExecutionFailure @ 		id: 63, type: StepImplementationNode, description: null impl: ExecutionNodeRunnerTest.failingMethod
java.lang.IllegalStateException: that's it, had enough
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.failingMethod(ExecutionNodeRunnerTest.java:584)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] INFO  com.technophobia.substeps.runner.node.FeatureNodeRunner - Executing feature pass feature
[main] INFO  com.technophobia.substeps.runner.node.BasicScenarioNodeRunner - Executing scenario scenario pass
no fail
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
no fail
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
no fail
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] DEBUG com.technophobia.substeps.runner.node.RootNodeRunner - node failures
build failure info: 
NON CRITICAL FAILURES:

that's it, had enough
Trace:

74:Root node description
69:   non crit fail feature
68:      scenario non crit fail
60:      null

CRITICAL FAILURES:

that's it, had enough
Trace:

74:Root node description
71:   crit fail feature
70:      scenario crit fail
63:      null



** Running scenario: [scenario crit fail, scenario non crit fail, scenario pass]
[main] DEBUG com.technophobia.substeps.runner.TagManager - running with tags: canFail
[main] DEBUG com.technophobia.substeps.runner.TagManager - Creating tagManager with tags canFail
[main] INFO  com.technophobia.substeps.runner.node.FeatureNodeRunner - Executing feature crit fail feature
[main] INFO  com.technophobia.substeps.runner.node.BasicScenarioNodeRunner - Executing scenario scenario crit fail
no fail
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
uh oh
[main] INFO  com.technophobia.substeps.execution.node.RootNodeExecutionContext - SubstepExecutionFailure @ 		id: 76, type: StepImplementationNode, description: null impl: ExecutionNodeRunnerTest.failingMethod
java.lang.IllegalStateException: that's it, had enough
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.failingMethod(ExecutionNodeRunnerTest.java:584)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] INFO  com.technophobia.substeps.runner.node.FeatureNodeRunner - Executing feature non crit fail feature
[main] INFO  com.technophobia.substeps.runner.node.BasicScenarioNodeRunner - Executing scenario scenario non crit fail
no fail
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
uh oh
[main] INFO  com.technophobia.substeps.execution.node.RootNodeExecutionContext - SubstepExecutionFailure @ 		id: 79, type: StepImplementationNode, description: null impl: ExecutionNodeRunnerTest.failingMethod
java.lang.IllegalStateException: that's it, had enough
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.failingMethod(ExecutionNodeRunnerTest.java:584)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] INFO  com.technophobia.substeps.runner.node.FeatureNodeRunner - Executing feature pass feature
[main] INFO  com.technophobia.substeps.runner.node.BasicScenarioNodeRunner - Executing scenario scenario pass
no fail
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
no fail
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
no fail
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] DEBUG com.technophobia.substeps.runner.node.RootNodeRunner - node failures
build failure info: 
NON CRITICAL FAILURES:

that's it, had enough
Trace:

90:Root node description
87:   non crit fail feature
86:      scenario non crit fail
79:      null

CRITICAL FAILURES:

that's it, had enough
Trace:

90:Root node description
85:   crit fail feature
84:      scenario crit fail
76:      null



** Running scenario: [scenario pass, scenario crit fail, scenario non crit fail]
[main] DEBUG com.technophobia.substeps.runner.TagManager - running with tags: canFail
[main] DEBUG com.technophobia.substeps.runner.TagManager - Creating tagManager with tags canFail
[main] INFO  com.technophobia.substeps.runner.node.FeatureNodeRunner - Executing feature pass feature
[main] INFO  com.technophobia.substeps.runner.node.BasicScenarioNodeRunner - Executing scenario scenario pass
no fail
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
no fail
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
no fail
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] INFO  com.technophobia.substeps.runner.node.FeatureNodeRunner - Executing feature crit fail feature
[main] INFO  com.technophobia.substeps.runner.node.BasicScenarioNodeRunner - Executing scenario scenario crit fail
no fail
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
uh oh
[main] INFO  com.technophobia.substeps.execution.node.RootNodeExecutionContext - SubstepExecutionFailure @ 		id: 95, type: StepImplementationNode, description: null impl: ExecutionNodeRunnerTest.failingMethod
java.lang.IllegalStateException: that's it, had enough
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.failingMethod(ExecutionNodeRunnerTest.java:584)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] INFO  com.technophobia.substeps.runner.node.FeatureNodeRunner - Executing feature non crit fail feature
[main] INFO  com.technophobia.substeps.runner.node.BasicScenarioNodeRunner - Executing scenario scenario non crit fail
no fail
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
uh oh
[main] INFO  com.technophobia.substeps.execution.node.RootNodeExecutionContext - SubstepExecutionFailure @ 		id: 98, type: StepImplementationNode, description: null impl: ExecutionNodeRunnerTest.failingMethod
java.lang.IllegalStateException: that's it, had enough
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.failingMethod(ExecutionNodeRunnerTest.java:584)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] DEBUG com.technophobia.substeps.runner.node.RootNodeRunner - node failures
build failure info: 
NON CRITICAL FAILURES:

that's it, had enough
Trace:

106:Root node description
105:   non crit fail feature
104:      scenario non crit fail
98:      null

CRITICAL FAILURES:

that's it, had enough
Trace:

106:Root node description
103:   crit fail feature
102:      scenario crit fail
95:      null

[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] INFO  com.technophobia.substeps.runner.node.FeatureNodeRunner - Executing feature test feature
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] INFO  com.technophobia.substeps.execution.node.RootNodeExecutionContext - SubstepExecutionFailure @ 		id: 107, type: OutlineScenarioNode, description: Scenario #: scenarioName
java.lang.IllegalStateException: node should have children but doesn't
	at com.technophobia.substeps.runner.node.AbstractNodeRunner.addExpectedChildrenFailureIfNoChildren(AbstractNodeRunner.java:190)
	at com.technophobia.substeps.runner.node.OutlineScenarioNodeRunner.execute(OutlineScenarioNodeRunner.java:33)
	at com.technophobia.substeps.runner.node.OutlineScenarioNodeRunner.execute(OutlineScenarioNodeRunner.java:26)
	at com.technophobia.substeps.runner.node.AbstractNodeRunner.run(AbstractNodeRunner.java:47)
	at com.technophobia.substeps.runner.node.FeatureNodeRunner.visit(FeatureNodeRunner.java:65)
	at com.technophobia.substeps.runner.node.FeatureNodeRunner.visit(FeatureNodeRunner.java:31)
	at com.technophobia.substeps.execution.node.OutlineScenarioNode.dispatch(OutlineScenarioNode.java:47)
	at com.technophobia.substeps.runner.node.FeatureNodeRunner.execute(FeatureNodeRunner.java:50)
	at com.technophobia.substeps.runner.node.FeatureNodeRunner.execute(FeatureNodeRunner.java:31)
	at com.technophobia.substeps.runner.node.AbstractNodeRunner.run(AbstractNodeRunner.java:47)
	at com.technophobia.substeps.runner.node.RootNodeRunner.execute(RootNodeRunner.java:47)
	at com.technophobia.substeps.runner.node.RootNodeRunner.execute(RootNodeRunner.java:33)
	at com.technophobia.substeps.runner.node.AbstractNodeRunner.run(AbstractNodeRunner.java:47)
	at com.technophobia.substeps.runner.ExecutionNodeRunner.run(ExecutionNodeRunner.java:313)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.testScenarioOutlineFailsWithNoExamples(ExecutionNodeRunnerTest.java:394)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] DEBUG com.technophobia.substeps.runner.node.RootNodeRunner - node failures
[main] INFO  com.technophobia.substeps.execution.node.RootNodeExecutionContext - SubstepExecutionFailure @ id: 109, type: RootNode, description: Description
	id: 108, type: FeatureNode, description: test feature
		id: 107, type: OutlineScenarioNode, description: Scenario #: scenarioName
java.lang.IllegalStateException: No tests executed
	at com.technophobia.substeps.runner.ExecutionNodeRunner.run(ExecutionNodeRunner.java:317)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.testScenarioOutlineFailsWithNoExamples(ExecutionNodeRunnerTest.java:394)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
ExecutionConfig [description=ExecutionNodeRunner Test feature set, tags=@duplicate_step_step_def, nonFatalTags=null, featureFile=./target/test-classes/features/error3.feature, subStepsFileName=./target/test-classes/substeps/duplicates2.substeps, strict=false, fastFailParseErrors=false, nonStrictKeywordPrecedence=[Given, And], stepImplementationClassNames=null, initialisationClass=null, stepImplementationClasses=[class com.technophobia.substeps.steps.TestStepImplementations], initialisationClasses=[], executionListeners=null]
[main] DEBUG com.technophobia.substeps.runner.TagManager - running with tags: @duplicate_step_step_def
[main] DEBUG com.technophobia.substeps.runner.TagManager - Creating tagManager with tags @duplicate_step_step_def
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Copyright Technophobia Ltd 2012] @ 1:duplicates2.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# this is also defined in a step impl] @ 2:duplicates2.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 3:duplicates2.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given something] @ 4:duplicates2.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[	When an event occurs ] @ 5:duplicates2.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: When an event occurs isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: When an event occurs
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: When an event occurs
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: When an event occurs
pattern: When an event occurs
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Feature: A feature to ensure test failure with step definitions that match a step impl

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Tags: @duplicate_step_step_def

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: A scenario that calls some substeps with missing implementations
Given something

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: false
[main] DEBUG com.technophobia.substeps.runner.TestParameters - Current dir is: /tmp/tmp6s6ktyp6/substeps-core/.
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Given something
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent != null for stepLine: Given something
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - buildSubstepNode: scenarioDescription: A scenario that calls some substeps with missing implementations step line Given something param line: Given something
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - init param vals as not strict
[main] DEBUG com.technophobia.substeps.model.ParentStep - initialiseParamValues with line: Given something
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs String[] with pattern: Given something and sourceStr: Given something
[main] DEBUG com.technophobia.substeps.runner.builder.ScenarioNodeBuilder - Failed to parse A scenario that calls some substeps with missing implementations, creating dummy node
com.technophobia.substeps.model.exception.SubstepsConfigurationException: line: [Given something] in [./target/test-classes/features/error3.feature] matches step implementation method: [public void com.technophobia.substeps.steps.TestStepImplementations.given()] AND matches a sub step definition: [Given something] in [duplicates2.substeps]
	at com.technophobia.substeps.runner.builder.SubstepNodeBuilder.buildSubstepNode(SubstepNodeBuilder.java:155)
	at com.technophobia.substeps.runner.builder.SubstepNodeBuilder.buildStepNode(SubstepNodeBuilder.java:103)
	at com.technophobia.substeps.runner.builder.ScenarioNodeBuilder.buildBasicScenarioNode(ScenarioNodeBuilder.java:149)
	at com.technophobia.substeps.runner.builder.ScenarioNodeBuilder.buildRunnableScenarioNode(ScenarioNodeBuilder.java:82)
	at com.technophobia.substeps.runner.builder.ScenarioNodeBuilder.build(ScenarioNodeBuilder.java:62)
	at com.technophobia.substeps.runner.builder.FeatureNodeBuilder.buildRunnableFeatureNode(FeatureNodeBuilder.java:74)
	at com.technophobia.substeps.runner.builder.FeatureNodeBuilder.build(FeatureNodeBuilder.java:55)
	at com.technophobia.substeps.runner.builder.ExecutionNodeTreeBuilder.buildExecutionNodeTree(ExecutionNodeTreeBuilder.java:49)
	at com.technophobia.substeps.runner.ExecutionNodeRunner.prepareExecutionConfig(ExecutionNodeRunner.java:129)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.runExecutionTest(ExecutionNodeRunnerTest.java:282)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.runExecutionTest(ExecutionNodeRunnerTest.java:247)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.runExecutionTest(ExecutionNodeRunnerTest.java:300)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.testSubStepDefinitionMatchesStepImplFailure(ExecutionNodeRunnerTest.java:136)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
[main] INFO  com.technophobia.substeps.runner.ExecutionNodeRunner - ** Uncalled Step implementations in scope, this is suspect if these implementations are in your projects domain:

public void com.technophobia.substeps.steps.TestStepImplementations.and()
public void com.technophobia.substeps.steps.TestStepImplementations.uncalled()
public void com.technophobia.substeps.steps.TestStepImplementations.param(java.lang.String)
public void com.technophobia.substeps.steps.TestStepImplementations.methodWithTableArgument(java.util.List)
public void com.technophobia.substeps.steps.TestStepImplementations.sendKeysById(java.lang.String,java.lang.String)
public void com.technophobia.substeps.steps.TestStepImplementations.when()
public void com.technophobia.substeps.steps.TestStepImplementations.whatever()
public void com.technophobia.substeps.steps.TestStepImplementations.meth1(java.lang.String)
public void com.technophobia.substeps.steps.TestStepImplementations.then()
public void com.technophobia.substeps.steps.TestStepImplementations.meth2(java.lang.String)


[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: A feature to ensure test failure with step definitions that match a step impl line: A feature to ensure test failure with step definitions that match a step impl
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: ExecutionNodeRunner Test feature set line: null
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: A scenario that calls some substeps with missing implementations line: A scenario that calls some substeps with missing implementations
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: A feature to ensure test failure with step definitions that match a step impl line: A feature to ensure test failure with step definitions that match a step impl
[main] WARN  com.technophobia.substeps.runner.ExecutionNodeRunner - ** Substep definitions not called in current substep execution scope...

	Given something @ duplicates2.substeps:4

[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: SUITE
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: FEATURE
[main] INFO  com.technophobia.substeps.runner.node.FeatureNodeRunner - Executing feature A feature to ensure test failure with step definitions that match a step impl
[main] INFO  com.technophobia.substeps.execution.node.RootNodeExecutionContext - SubstepExecutionFailure @ 		id: 110, type: BasicScenarioNode, description: A scenario that calls some substeps with missing implementations
com.technophobia.substeps.model.exception.SubstepsConfigurationException: line: [Given something] in [./target/test-classes/features/error3.feature] matches step implementation method: [public void com.technophobia.substeps.steps.TestStepImplementations.given()] AND matches a sub step definition: [Given something] in [duplicates2.substeps]
	at com.technophobia.substeps.runner.builder.SubstepNodeBuilder.buildSubstepNode(SubstepNodeBuilder.java:155)
	at com.technophobia.substeps.runner.builder.SubstepNodeBuilder.buildStepNode(SubstepNodeBuilder.java:103)
	at com.technophobia.substeps.runner.builder.ScenarioNodeBuilder.buildBasicScenarioNode(ScenarioNodeBuilder.java:149)
	at com.technophobia.substeps.runner.builder.ScenarioNodeBuilder.buildRunnableScenarioNode(ScenarioNodeBuilder.java:82)
	at com.technophobia.substeps.runner.builder.ScenarioNodeBuilder.build(ScenarioNodeBuilder.java:62)
	at com.technophobia.substeps.runner.builder.FeatureNodeBuilder.buildRunnableFeatureNode(FeatureNodeBuilder.java:74)
	at com.technophobia.substeps.runner.builder.FeatureNodeBuilder.build(FeatureNodeBuilder.java:55)
	at com.technophobia.substeps.runner.builder.ExecutionNodeTreeBuilder.buildExecutionNodeTree(ExecutionNodeTreeBuilder.java:49)
	at com.technophobia.substeps.runner.ExecutionNodeRunner.prepareExecutionConfig(ExecutionNodeRunner.java:129)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.runExecutionTest(ExecutionNodeRunnerTest.java:282)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.runExecutionTest(ExecutionNodeRunnerTest.java:247)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.runExecutionTest(ExecutionNodeRunnerTest.java:300)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.testSubStepDefinitionMatchesStepImplFailure(ExecutionNodeRunnerTest.java:136)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
[main] DEBUG com.technophobia.substeps.runner.node.AbstractNodeRunner - shouldContinue = false for com.technophobia.substeps.execution.node.BasicScenarioNode@3e5c7588
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: FEATURE
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] DEBUG com.technophobia.substeps.runner.node.RootNodeRunner - node failures
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: SUITE
[main] INFO  com.technophobia.substeps.execution.node.RootNodeExecutionContext - SubstepExecutionFailure @ id: 112, type: RootNode, description: ExecutionNodeRunner Test feature set
	id: 111, type: FeatureNode, description: A feature to ensure test failure with step definitions that match a step impl
		id: 110, type: BasicScenarioNode, description: A scenario that calls some substeps with missing implementations
java.lang.IllegalStateException: No tests executed
	at com.technophobia.substeps.runner.ExecutionNodeRunner.run(ExecutionNodeRunner.java:317)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.runExecutionTest(ExecutionNodeRunnerTest.java:284)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.runExecutionTest(ExecutionNodeRunnerTest.java:247)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.runExecutionTest(ExecutionNodeRunnerTest.java:300)
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.testSubStepDefinitionMatchesStepImplFailure(ExecutionNodeRunnerTest.java:136)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
[main] DEBUG com.technophobia.substeps.stepimplementations.MockStepImplementations - BDDRunnerStepImplementations ctor
ExecutionConfig [description=ExecutionNodeRunner Test feature set, tags=outline-scenario-with-params-pass, nonFatalTags=null, featureFile=./target/test-classes/features/OutlineScenario.feature, subStepsFileName=./target/test-classes/substeps/outline_scenario/outline_scenario.substeps, strict=false, fastFailParseErrors=false, nonStrictKeywordPrecedence=[Given, And], stepImplementationClassNames=null, initialisationClass=null, stepImplementationClasses=[class com.technophobia.substeps.stepimplementations.MockStepImplementations], initialisationClasses=[], executionListeners=null]
[main] DEBUG com.technophobia.substeps.runner.TagManager - running with tags: outline-scenario-with-params-pass
[main] DEBUG com.technophobia.substeps.runner.TagManager - Creating tagManager with tags outline-scenario-with-params-pass
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given a substep that takes one parameter "<value>"] @ 1:outline_scenario.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a substep that takes one parameter "<value>" isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given a substep that takes one parameter "<value>"
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding value as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given a substep that takes one parameter "<value>"
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given a substep that takes one parameter "<value>"
pattern: Given a substep that takes one parameter ""?([^"]*)"?"
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Step with a variable "<value>"] @ 2:outline_scenario.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Step with a variable "<value>" isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Step with a variable "<value>"
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding value as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Step with a variable "<value>"
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Step with a variable "<value>"
pattern: Step with a variable ""?([^"]*)"?"
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 3:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Define: And another substep that takes the other parameter "<value2>"] @ 4:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[#    Step with a variable "<value2>"] @ 5:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 6:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Define: And another step where the parameter is passed at the top level "<param>"] @ 7:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[#     Step with a variable "<param>"] @ 8:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 9:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Define: Given a substep that takes no parameters] @ 10:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[#    And another step where the parameter is passed at the top level "no params"] @ 11:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Feature: a feature for testing out an outline

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Tags: scenario-with-params-fail

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: Direct scenario
Given a substep that takes one parameter "no sub"
And a substep that takes one parameter "sub"

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Tags: outline-scenario-with-params-fail

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario Outline: scenario with table working
And a substep that takes one parameter "<value1>"
Examples:
|value1 | value2 |
|table sub    | table no sub   |

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Tags: outline-scenario-with-params-pass

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario Outline: scenario with table failing
Given a substep that takes one parameter "<value2>"
Examples:
|value1 | value2 |
|table sub    | table no sub   |

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a substep that takes one parameter "no sub" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And a substep that takes one parameter "sub" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And a substep that takes one parameter "<value1>" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a substep that takes one parameter "<value2>" isSubstep: false
[main] DEBUG com.technophobia.substeps.runner.TestParameters - Current dir is: /tmp/tmp6s6ktyp6/substeps-core/.
[main] DEBUG com.technophobia.substeps.runner.builder.ScenarioNodeBuilder - scenario not runnable: Scenario: Direct scenario
[main] DEBUG com.technophobia.substeps.runner.builder.ScenarioNodeBuilder - scenario not runnable: Scenario: scenario with table working
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Given a substep that takes one parameter "<value2>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <value2> with: table no sub in string: [Given a substep that takes one parameter "<value2>"]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Given a substep that takes one parameter "<value2>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent != null for stepLine: Given a substep that takes one parameter "<value2>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - buildSubstepNode: scenarioDescription: scenario with table failing step line Given a substep that takes one parameter "<value2>" param line: Given a substep that takes one parameter "table no sub"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - init param vals as not strict
[main] DEBUG com.technophobia.substeps.model.ParentStep - initialiseParamValues with line: Given a substep that takes one parameter "table no sub"
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs String[] with pattern: Given a substep that takes one parameter ""?([^"]*)"?" and sourceStr: Given a substep that takes one parameter "table no sub"
[main] DEBUG com.technophobia.substeps.model.Util - returning args: [table no sub] 
[main] DEBUG com.technophobia.substeps.model.ParentStep - putting value: table no sub under key: value i 0
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Step with a variable "<value>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <value> with: table no sub in string: [Step with a variable "<value>"]
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - break
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Step with a variable "<value>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - nothing in subStepsMapLocal, not strict, checking elsewhere..
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - subStepsMapLocal.get(altLine) no results for: Given with a variable "<value>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - subStepsMapLocal.get(altLine) no results for: And with a variable "<value>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Step with a variable "<value>"
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Step with a variable "<value>"]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Step with a variable "<value>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <value> with: table no sub in string: [Step with a variable "<value>"]
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - break
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - getStepMethodArguments for: Step with a variable "table no sub"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Step with a variable "table no sub"
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs List<Object> with pattern: Step with a variable "([^"]*)" and sourceStr: Step with a variable "table no sub"
[main] INFO  com.technophobia.substeps.runner.ExecutionNodeRunner - ** Uncalled Step implementations in scope, this is suspect if these implementations are in your projects domain:

public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth10(java.util.List)
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth2()
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth1()
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth6()
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth11()
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth3()
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth12()
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth5()
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth7(java.lang.String)
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth4(java.lang.String)
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth9()
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth8(java.lang.String)


[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: a feature for testing out an outline line: a feature for testing out an outline
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: ExecutionNodeRunner Test feature set line: null
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Scenario #: scenario with table failing line: scenario with table failing
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: a feature for testing out an outline line: a feature for testing out an outline
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: 0 scenario with table failing: line: null
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Scenario #: scenario with table failing line: scenario with table failing
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: 0 scenario with table failing: line: null
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - proccessing children...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: scenario with table failing line: scenario with table failing
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - got existing usages of node: 
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - already found: u: a feature for testing out an outline
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: 0 scenario with table failing: line: null
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: scenario with table failing line: scenario with table failing
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - proccessing children...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Given a substep that takes one parameter "<value2>" line: Given a substep that takes one parameter "<value2>"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: scenario with table failing line: scenario with table failing
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Given a substep that takes one parameter "<value2>" line: Given a substep that takes one parameter "<value2>"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - proccessing children...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Step with a variable "table no sub" line: Step with a variable "table no sub"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Given a substep that takes one parameter "<value2>" line: Given a substep that takes one parameter "<value2>"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Step with a variable "table no sub" line: Step with a variable "table no sub"
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: SUITE
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: FEATURE
[main] INFO  com.technophobia.substeps.runner.node.FeatureNodeRunner - Executing feature a feature for testing out an outline
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: SCENARIO_OUTLINE
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: SCENARIO_OUTLINE_ROW
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: SCENARIO
[main] INFO  com.technophobia.substeps.runner.node.BasicScenarioNodeRunner - Executing scenario scenario with table failing
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: STEP
[main] DEBUG com.technophobia.substeps.runner.node.SubstepNodeRunner - Executing substep Given a substep that takes one parameter "<value2>"
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: STEP
[main] DEBUG com.technophobia.substeps.stepimplementations.MockStepImplementations - meth13: table no sub
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: STEP
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: STEP
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: SCENARIO
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: SCENARIO_OUTLINE_ROW
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: SCENARIO_OUTLINE
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: FEATURE
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.RootNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: SUITE
[main] DEBUG com.technophobia.substeps.stepimplementations.MockStepImplementations - BDDRunnerStepImplementations ctor
ExecutionConfig [description=ExecutionNodeRunner Test feature set, tags=outline-scenario-with-params-fail, nonFatalTags=null, featureFile=./target/test-classes/features/OutlineScenario.feature, subStepsFileName=./target/test-classes/substeps/outline_scenario/outline_scenario.substeps, strict=false, fastFailParseErrors=false, nonStrictKeywordPrecedence=[Given, And], stepImplementationClassNames=null, initialisationClass=null, stepImplementationClasses=[class com.technophobia.substeps.stepimplementations.MockStepImplementations], initialisationClasses=[], executionListeners=null]
[main] DEBUG com.technophobia.substeps.runner.TagManager - running with tags: outline-scenario-with-params-fail
[main] DEBUG com.technophobia.substeps.runner.TagManager - Creating tagManager with tags outline-scenario-with-params-fail
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given a substep that takes one parameter "<value>"] @ 1:outline_scenario.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a substep that takes one parameter "<value>" isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given a substep that takes one parameter "<value>"
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding value as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given a substep that takes one parameter "<value>"
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given a substep that takes one parameter "<value>"
pattern: Given a substep that takes one parameter ""?([^"]*)"?"
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Step with a variable "<value>"] @ 2:outline_scenario.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Step with a variable "<value>" isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Step with a variable "<value>"
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding value as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Step with a variable "<value>"
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Step with a variable "<value>"
pattern: Step with a variable ""?([^"]*)"?"
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 3:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Define: And another substep that takes the other parameter "<value2>"] @ 4:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[#    Step with a variable "<value2>"] @ 5:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 6:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Define: And another step where the parameter is passed at the top level "<param>"] @ 7:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[#     Step with a variable "<param>"] @ 8:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 9:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Define: Given a substep that takes no parameters] @ 10:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[#    And another step where the parameter is passed at the top level "no params"] @ 11:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Feature: a feature for testing out an outline

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Tags: scenario-with-params-fail

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: Direct scenario
Given a substep that takes one parameter "no sub"
And a substep that takes one parameter "sub"

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Tags: outline-scenario-with-params-fail

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario Outline: scenario with table working
And a substep that takes one parameter "<value1>"
Examples:
|value1 | value2 |
|table sub    | table no sub   |

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Tags: outline-scenario-with-params-pass

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario Outline: scenario with table failing
Given a substep that takes one parameter "<value2>"
Examples:
|value1 | value2 |
|table sub    | table no sub   |

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a substep that takes one parameter "no sub" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And a substep that takes one parameter "sub" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And a substep that takes one parameter "<value1>" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a substep that takes one parameter "<value2>" isSubstep: false
[main] DEBUG com.technophobia.substeps.runner.TestParameters - Current dir is: /tmp/tmp6s6ktyp6/substeps-core/.
[main] DEBUG com.technophobia.substeps.runner.builder.ScenarioNodeBuilder - scenario not runnable: Scenario: Direct scenario
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: And a substep that takes one parameter "<value1>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <value1> with: table sub in string: [And a substep that takes one parameter "<value1>"]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: And a substep that takes one parameter "<value1>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - nothing in subStepsMapLocal, not strict, checking elsewhere..
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - subStepsMapLocal.get(altLine) result for: Given a substep that takes one parameter "<value1>" cloning with alt line
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a substep that takes one parameter "<value>" isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given a substep that takes one parameter "<value>"
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding value as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given a substep that takes one parameter "<value>"
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given a substep that takes one parameter "<value>"
pattern: Given a substep that takes one parameter ""?([^"]*)"?"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent != null for stepLine: And a substep that takes one parameter "<value1>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - buildSubstepNode: scenarioDescription: scenario with table working step line And a substep that takes one parameter "<value1>" param line: And a substep that takes one parameter "table sub"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - init param vals as not strict
[main] DEBUG com.technophobia.substeps.model.ParentStep - initialiseParamValues with line: And a substep that takes one parameter "table sub"
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs String[] with pattern: Given a substep that takes one parameter ""?([^"]*)"?" and sourceStr: And a substep that takes one parameter "table sub"
[main] DEBUG com.technophobia.substeps.model.Util - returning args: [table sub] 
[main] DEBUG com.technophobia.substeps.model.ParentStep - putting value: table sub under key: value i 0
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Step with a variable "<value>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <value> with: table sub in string: [Step with a variable "<value>"]
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - break
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Step with a variable "<value>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - nothing in subStepsMapLocal, not strict, checking elsewhere..
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - subStepsMapLocal.get(altLine) no results for: Given with a variable "<value>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - subStepsMapLocal.get(altLine) no results for: And with a variable "<value>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Step with a variable "<value>"
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Step with a variable "<value>"]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Step with a variable "<value>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <value> with: table sub in string: [Step with a variable "<value>"]
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - break
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - getStepMethodArguments for: Step with a variable "table sub"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Step with a variable "table sub"
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs List<Object> with pattern: Step with a variable "([^"]*)" and sourceStr: Step with a variable "table sub"
[main] DEBUG com.technophobia.substeps.runner.builder.ScenarioNodeBuilder - scenario not runnable: Scenario: scenario with table failing
[main] INFO  com.technophobia.substeps.runner.ExecutionNodeRunner - ** Uncalled Step implementations in scope, this is suspect if these implementations are in your projects domain:

public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth10(java.util.List)
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth2()
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth1()
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth6()
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth11()
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth3()
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth12()
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth5()
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth7(java.lang.String)
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth4(java.lang.String)
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth9()
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth8(java.lang.String)


[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: a feature for testing out an outline line: a feature for testing out an outline
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: ExecutionNodeRunner Test feature set line: null
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Scenario #: scenario with table working line: scenario with table working
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: a feature for testing out an outline line: a feature for testing out an outline
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: 0 scenario with table working: line: null
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Scenario #: scenario with table working line: scenario with table working
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: 0 scenario with table working: line: null
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - proccessing children...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: scenario with table working line: scenario with table working
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - got existing usages of node: 
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - already found: u: a feature for testing out an outline
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: 0 scenario with table working: line: null
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: scenario with table working line: scenario with table working
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - proccessing children...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: And a substep that takes one parameter "<value1>" line: And a substep that takes one parameter "<value1>"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: scenario with table working line: scenario with table working
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: And a substep that takes one parameter "<value1>" line: And a substep that takes one parameter "<value1>"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - proccessing children...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Step with a variable "table sub" line: Step with a variable "table sub"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: And a substep that takes one parameter "<value1>" line: And a substep that takes one parameter "<value1>"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Step with a variable "table sub" line: Step with a variable "table sub"
[main] WARN  com.technophobia.substeps.runner.ExecutionNodeRunner - ** Substep definitions not called in current substep execution scope...

	Given a substep that takes one parameter "<value>" @ outline_scenario.substeps:1

[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: SUITE
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: FEATURE
[main] INFO  com.technophobia.substeps.runner.node.FeatureNodeRunner - Executing feature a feature for testing out an outline
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: SCENARIO_OUTLINE
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: SCENARIO_OUTLINE_ROW
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: SCENARIO
[main] INFO  com.technophobia.substeps.runner.node.BasicScenarioNodeRunner - Executing scenario scenario with table working
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: STEP
[main] DEBUG com.technophobia.substeps.runner.node.SubstepNodeRunner - Executing substep And a substep that takes one parameter "<value1>"
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: STEP
[main] DEBUG com.technophobia.substeps.stepimplementations.MockStepImplementations - meth13: table sub
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: STEP
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: STEP
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: SCENARIO
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: SCENARIO_OUTLINE_ROW
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: SCENARIO_OUTLINE
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: FEATURE
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.RootNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: SUITE
ExecutionConfig [description=ExecutionNodeRunner Test feature set, tags=scenario_with_params, nonFatalTags=null, featureFile=./target/test-classes/features/error4.feature, subStepsFileName=./target/test-classes/substeps/simple.substeps, strict=false, fastFailParseErrors=false, nonStrictKeywordPrecedence=[Given, And], stepImplementationClassNames=null, initialisationClass=null, stepImplementationClasses=[class com.technophobia.substeps.steps.TestStepImplementations], initialisationClasses=[], executionListeners=null]
[main] DEBUG com.technophobia.substeps.runner.TagManager - running with tags: scenario_with_params
[main] DEBUG com.technophobia.substeps.runner.TagManager - Creating tagManager with tags scenario_with_params
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 1:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Copyright Technophobia Ltd 2012] @ 2:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# a definition of a substep] @ 3:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given series of substeps is executed] @ 4:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given series of substeps is executed isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given series of substeps is executed
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given series of substeps is executed
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given series of substeps is executed
pattern: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		When an event occurs ] @ 5:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: When an event occurs isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: When an event occurs
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: When an event occurs
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: When an event occurs
pattern: When an event occurs
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then bad things happen ] @ 6:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then bad things happen isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then bad things happen
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then bad things happen
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then bad things happen
pattern: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		And people get upset] @ 7:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And people get upset isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: And people get upset
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: And people get upset
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: And people get upset
pattern: And people get upset
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 8:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given substep with param1 <name1> and param2 <name2>] @ 9:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given substep with param1 <name1> and param2 <name2> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given substep with param1 <name1> and param2 <name2>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name1 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(32)
[main] DEBUG com.technophobia.substeps.model.Step - adding name2 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given substep with param1 <name1> and param2 <name2>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given substep with param1 <name1> and param2 <name2>
pattern: Given substep with param1 "?([^"]*)"? and param2 "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then method with param <name1>] @ 10:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then method with param <name1> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then method with param <name1>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name1 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then method with param <name1>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then method with param <name1>
pattern: Then method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then another method with param <name2>] @ 11:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then another method with param <name2> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then another method with param <name2>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name2 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then another method with param <name2>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then another method with param <name2>
pattern: Then another method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 12:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given a step with a parameter <parameter>] @ 13:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a step with a parameter <parameter> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given a step with a parameter <parameter>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding parameter as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given a step with a parameter <parameter>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given a step with a parameter <parameter>
pattern: Given a step with a parameter "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then the substep gets the whole <parameter>] @ 14:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then the substep gets the whole <parameter> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then the substep gets the whole <parameter>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding parameter as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then the substep gets the whole <parameter>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then the substep gets the whole <parameter>
pattern: Then the substep gets the whole "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		] @ 15:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given a substep] @ 16:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given a substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given a substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given a substep
pattern: Given a substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Given something] @ 17:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 18:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define:  Given another substep] @ 19:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given another substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given another substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given another substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given another substep
pattern: Given another substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 20:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 21:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define:  Given yet another substep] @ 22:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given yet another substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given yet another substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given yet another substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given yet another substep
pattern: Given yet another substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 23:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  ] @ 24:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Then a method with a quoted '<param>' ] @ 25:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then a method with a quoted '<param>' isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then a method with a quoted '<param>'
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding param as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then a method with a quoted '<param>'
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then a method with a quoted '<param>'
pattern: Then a method with a quoted '"?([^"]*)"?'
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[	Then method with param <param>    			] @ 26:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then method with param <param> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then method with param <param>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding param as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then method with param <param>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then method with param <param>
pattern: Then method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 27:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: A step def that isn't actually called] @ 28:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: A step def that isn't actually called isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: A step def that isn't actually called
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: A step def that isn't actually called
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: A step def that isn't actually called
pattern: A step def that isn't actually called
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 29:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[               	] @ 30:simple.substeps
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Feature: A feature to ensure test failure with scenarios that have parameters

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Tags: scenario_with_params

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: parameterised step in a scenario causes failure
Then a method with a quoted '<message>'

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then a method with a quoted '<message>' isSubstep: false
[main] DEBUG com.technophobia.substeps.runner.TestParameters - Current dir is: /tmp/tmp6s6ktyp6/substeps-core/.
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Then a method with a quoted '<message>'
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent != null for stepLine: Then a method with a quoted '<message>'
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - buildSubstepNode: scenarioDescription: parameterised step in a scenario causes failure step line Then a method with a quoted '<message>' param line: Then a method with a quoted '<message>'
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - init param vals as not strict
[main] DEBUG com.technophobia.substeps.model.ParentStep - initialiseParamValues with line: Then a method with a quoted '<message>'
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs String[] with pattern: Then a method with a quoted '"?([^"]*)"?' and sourceStr: Then a method with a quoted '<message>'
[main] DEBUG com.technophobia.substeps.model.Util - returning args: [<message>] 
[main] DEBUG com.technophobia.substeps.model.ParentStep - putting value: <message> under key: param i 0
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then method with param <param>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <param> with: <message> in string: [Then method with param <param>]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Then method with param <param>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - nothing in subStepsMapLocal, not strict, checking elsewhere..
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - subStepsMapLocal.get(altLine) no results for: Given method with param <param>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - subStepsMapLocal.get(altLine) no results for: And method with param <param>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Then method with param <param>
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Then method with param <param>]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then method with param <param>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <param> with: <message> in string: [Then method with param <param>]
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - getStepMethodArguments for: Then method with param <message>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then method with param <message>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <message> with: null in string: [Then method with param <message>]
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs List<Object> with pattern: Then method with param ([^"]*) and sourceStr: Then method with param  
[main] INFO  com.technophobia.substeps.runner.ExecutionNodeRunner - ** Uncalled Step implementations in scope, this is suspect if these implementations are in your projects domain:

public void com.technophobia.substeps.steps.TestStepImplementations.and()
public void com.technophobia.substeps.steps.TestStepImplementations.uncalled()
public void com.technophobia.substeps.steps.TestStepImplementations.param(java.lang.String)
public void com.technophobia.substeps.steps.TestStepImplementations.methodWithTableArgument(java.util.List)
public void com.technophobia.substeps.steps.TestStepImplementations.sendKeysById(java.lang.String,java.lang.String)
public void com.technophobia.substeps.steps.TestStepImplementations.given()
public void com.technophobia.substeps.steps.TestStepImplementations.when()
public void com.technophobia.substeps.steps.TestStepImplementations.whatever()
public void com.technophobia.substeps.steps.TestStepImplementations.then()
public void com.technophobia.substeps.steps.TestStepImplementations.meth2(java.lang.String)


[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: A feature to ensure test failure with scenarios that have parameters line: A feature to ensure test failure with scenarios that have parameters
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: ExecutionNodeRunner Test feature set line: null
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: parameterised step in a scenario causes failure line: parameterised step in a scenario causes failure
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: A feature to ensure test failure with scenarios that have parameters line: A feature to ensure test failure with scenarios that have parameters
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Then a method with a quoted '<message>' line: Then a method with a quoted '<message>'
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: parameterised step in a scenario causes failure line: parameterised step in a scenario causes failure
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Then a method with a quoted '<message>' line: Then a method with a quoted '<message>'
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - proccessing children...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Then method with param   line: Then method with param  
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Then a method with a quoted '<message>' line: Then a method with a quoted '<message>'
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Then method with param   line: Then method with param  
[main] WARN  com.technophobia.substeps.runner.ExecutionNodeRunner - ** Substep definitions not called in current substep execution scope...

	A step def that isn't actually called @ simple.substeps:28
	Given a step with a parameter <parameter> @ simple.substeps:13
	Given a substep @ simple.substeps:16
	Given another substep @ simple.substeps:19
	Given series of substeps is executed @ simple.substeps:4
	Given substep with param1 <name1> and param2 <name2> @ simple.substeps:9
	Given yet another substep @ simple.substeps:22

[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: SUITE
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: FEATURE
[main] INFO  com.technophobia.substeps.runner.node.FeatureNodeRunner - Executing feature A feature to ensure test failure with scenarios that have parameters
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: SCENARIO
[main] INFO  com.technophobia.substeps.runner.node.BasicScenarioNodeRunner - Executing scenario parameterised step in a scenario causes failure
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: STEP
[main] DEBUG com.technophobia.substeps.runner.node.SubstepNodeRunner - Executing substep Then a method with a quoted '<message>'
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: STEP
meth1 param  
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: STEP
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: STEP
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: SCENARIO
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: FEATURE
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.RootNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: SUITE
[main] DEBUG com.technophobia.substeps.stepimplementations.MockStepImplementations - BDDRunnerStepImplementations ctor
ExecutionConfig [description=ExecutionNodeRunner Test feature set, tags=scenario-with-params-fail, nonFatalTags=null, featureFile=./target/test-classes/features/OutlineScenario.feature, subStepsFileName=./target/test-classes/substeps/outline_scenario/outline_scenario.substeps, strict=false, fastFailParseErrors=false, nonStrictKeywordPrecedence=[Given, And], stepImplementationClassNames=null, initialisationClass=null, stepImplementationClasses=[class com.technophobia.substeps.stepimplementations.MockStepImplementations], initialisationClasses=[], executionListeners=null]
[main] DEBUG com.technophobia.substeps.runner.TagManager - running with tags: scenario-with-params-fail
[main] DEBUG com.technophobia.substeps.runner.TagManager - Creating tagManager with tags scenario-with-params-fail
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given a substep that takes one parameter "<value>"] @ 1:outline_scenario.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a substep that takes one parameter "<value>" isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given a substep that takes one parameter "<value>"
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding value as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given a substep that takes one parameter "<value>"
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given a substep that takes one parameter "<value>"
pattern: Given a substep that takes one parameter ""?([^"]*)"?"
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Step with a variable "<value>"] @ 2:outline_scenario.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Step with a variable "<value>" isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Step with a variable "<value>"
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding value as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Step with a variable "<value>"
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Step with a variable "<value>"
pattern: Step with a variable ""?([^"]*)"?"
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 3:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Define: And another substep that takes the other parameter "<value2>"] @ 4:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[#    Step with a variable "<value2>"] @ 5:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 6:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Define: And another step where the parameter is passed at the top level "<param>"] @ 7:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[#     Step with a variable "<param>"] @ 8:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 9:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Define: Given a substep that takes no parameters] @ 10:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[#    And another step where the parameter is passed at the top level "no params"] @ 11:outline_scenario.substeps
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Feature: a feature for testing out an outline

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Tags: scenario-with-params-fail

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: Direct scenario
Given a substep that takes one parameter "no sub"
And a substep that takes one parameter "sub"

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Tags: outline-scenario-with-params-fail

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario Outline: scenario with table working
And a substep that takes one parameter "<value1>"
Examples:
|value1 | value2 |
|table sub    | table no sub   |

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Tags: outline-scenario-with-params-pass

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario Outline: scenario with table failing
Given a substep that takes one parameter "<value2>"
Examples:
|value1 | value2 |
|table sub    | table no sub   |

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a substep that takes one parameter "no sub" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And a substep that takes one parameter "sub" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And a substep that takes one parameter "<value1>" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a substep that takes one parameter "<value2>" isSubstep: false
[main] DEBUG com.technophobia.substeps.runner.TestParameters - Current dir is: /tmp/tmp6s6ktyp6/substeps-core/.
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Given a substep that takes one parameter "no sub"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent != null for stepLine: Given a substep that takes one parameter "no sub"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - buildSubstepNode: scenarioDescription: Direct scenario step line Given a substep that takes one parameter "no sub" param line: Given a substep that takes one parameter "no sub"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - init param vals as not strict
[main] DEBUG com.technophobia.substeps.model.ParentStep - initialiseParamValues with line: Given a substep that takes one parameter "no sub"
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs String[] with pattern: Given a substep that takes one parameter ""?([^"]*)"?" and sourceStr: Given a substep that takes one parameter "no sub"
[main] DEBUG com.technophobia.substeps.model.Util - returning args: [no sub] 
[main] DEBUG com.technophobia.substeps.model.ParentStep - putting value: no sub under key: value i 0
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Step with a variable "<value>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <value> with: no sub in string: [Step with a variable "<value>"]
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - break
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Step with a variable "<value>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - nothing in subStepsMapLocal, not strict, checking elsewhere..
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - subStepsMapLocal.get(altLine) no results for: Given with a variable "<value>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - subStepsMapLocal.get(altLine) no results for: And with a variable "<value>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Step with a variable "<value>"
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Step with a variable "<value>"]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Step with a variable "<value>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <value> with: no sub in string: [Step with a variable "<value>"]
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - break
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - getStepMethodArguments for: Step with a variable "no sub"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Step with a variable "no sub"
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs List<Object> with pattern: Step with a variable "([^"]*)" and sourceStr: Step with a variable "no sub"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: And a substep that takes one parameter "sub"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - nothing in subStepsMapLocal, not strict, checking elsewhere..
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - subStepsMapLocal.get(altLine) result for: Given a substep that takes one parameter "sub" cloning with alt line
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a substep that takes one parameter "<value>" isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given a substep that takes one parameter "<value>"
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding value as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given a substep that takes one parameter "<value>"
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given a substep that takes one parameter "<value>"
pattern: Given a substep that takes one parameter ""?([^"]*)"?"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent != null for stepLine: And a substep that takes one parameter "sub"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - buildSubstepNode: scenarioDescription: Direct scenario step line And a substep that takes one parameter "sub" param line: And a substep that takes one parameter "sub"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - init param vals as not strict
[main] DEBUG com.technophobia.substeps.model.ParentStep - initialiseParamValues with line: And a substep that takes one parameter "sub"
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs String[] with pattern: Given a substep that takes one parameter ""?([^"]*)"?" and sourceStr: And a substep that takes one parameter "sub"
[main] DEBUG com.technophobia.substeps.model.Util - returning args: [sub] 
[main] DEBUG com.technophobia.substeps.model.ParentStep - putting value: sub under key: value i 0
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Step with a variable "<value>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <value> with: sub in string: [Step with a variable "<value>"]
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - break
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Step with a variable "<value>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - nothing in subStepsMapLocal, not strict, checking elsewhere..
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - subStepsMapLocal.get(altLine) no results for: Given with a variable "<value>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - subStepsMapLocal.get(altLine) no results for: And with a variable "<value>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Step with a variable "<value>"
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Step with a variable "<value>"]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Step with a variable "<value>"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <value> with: sub in string: [Step with a variable "<value>"]
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - break
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - getStepMethodArguments for: Step with a variable "sub"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Step with a variable "sub"
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs List<Object> with pattern: Step with a variable "([^"]*)" and sourceStr: Step with a variable "sub"
[main] DEBUG com.technophobia.substeps.runner.builder.ScenarioNodeBuilder - scenario not runnable: Scenario: scenario with table working
[main] DEBUG com.technophobia.substeps.runner.builder.ScenarioNodeBuilder - scenario not runnable: Scenario: scenario with table failing
[main] INFO  com.technophobia.substeps.runner.ExecutionNodeRunner - ** Uncalled Step implementations in scope, this is suspect if these implementations are in your projects domain:

public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth10(java.util.List)
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth2()
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth1()
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth6()
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth11()
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth3()
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth12()
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth5()
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth7(java.lang.String)
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth4(java.lang.String)
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth9()
public void com.technophobia.substeps.stepimplementations.MockStepImplementations.meth8(java.lang.String)


[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: a feature for testing out an outline line: a feature for testing out an outline
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: ExecutionNodeRunner Test feature set line: null
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Direct scenario line: Direct scenario
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: a feature for testing out an outline line: a feature for testing out an outline
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Given a substep that takes one parameter "no sub" line: Given a substep that takes one parameter "no sub"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Direct scenario line: Direct scenario
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Given a substep that takes one parameter "no sub" line: Given a substep that takes one parameter "no sub"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - proccessing children...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Step with a variable "no sub" line: Step with a variable "no sub"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Given a substep that takes one parameter "no sub" line: Given a substep that takes one parameter "no sub"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Step with a variable "no sub" line: Step with a variable "no sub"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: And a substep that takes one parameter "sub" line: And a substep that takes one parameter "sub"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Direct scenario line: Direct scenario
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: And a substep that takes one parameter "sub" line: And a substep that takes one parameter "sub"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - proccessing children...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Step with a variable "sub" line: Step with a variable "sub"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: And a substep that takes one parameter "sub" line: And a substep that takes one parameter "sub"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Step with a variable "sub" line: Step with a variable "sub"
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: SUITE
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: FEATURE
[main] INFO  com.technophobia.substeps.runner.node.FeatureNodeRunner - Executing feature a feature for testing out an outline
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: SCENARIO
[main] INFO  com.technophobia.substeps.runner.node.BasicScenarioNodeRunner - Executing scenario Direct scenario
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: STEP
[main] DEBUG com.technophobia.substeps.runner.node.SubstepNodeRunner - Executing substep Given a substep that takes one parameter "no sub"
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: STEP
[main] DEBUG com.technophobia.substeps.stepimplementations.MockStepImplementations - meth13: no sub
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: STEP
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: STEP
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: STEP
[main] DEBUG com.technophobia.substeps.runner.node.SubstepNodeRunner - Executing substep And a substep that takes one parameter "sub"
[main] TRACE com.technophobia.substeps.runner.NotificationDistributor - Notifying class com.technophobia.substeps.runner.IExecutionListener$$EnhancerByMockitoWithCGLIB$$5dae3f4f that the node has started
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: STEP
[main] DEBUG com.technophobia.substeps.stepimplementations.MockStepImplementations - meth13: sub
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: STEP
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: STEP
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: SCENARIO
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: FEATURE
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.RootNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: SUITE
[main] INFO  com.technophobia.substeps.runner.node.FeatureNodeRunner - Executing feature test feature
[main] INFO  com.technophobia.substeps.runner.node.BasicScenarioNodeRunner - Executing scenario scenarioName
no fail
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
uh oh
[main] INFO  com.technophobia.substeps.execution.node.RootNodeExecutionContext - SubstepExecutionFailure @ 				id: 140, type: StepImplementationNode, description: null impl: ExecutionNodeRunnerTest.failingMethod
java.lang.IllegalStateException: that's it, had enough
	at com.technophobia.substeps.runner.ExecutionNodeRunnerTest.failingMethod(ExecutionNodeRunnerTest.java:584)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] INFO  com.technophobia.substeps.runner.node.BasicScenarioNodeRunner - Executing scenario scenarioName
no fail
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
no fail
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
no fail
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned false
[main] DEBUG com.technophobia.substeps.runner.node.RootNodeRunner - node failures
Tests run: 15, Failures: 0, Errors: 0, Skipped: 2, Time elapsed: 1.086 sec - in com.technophobia.substeps.runner.ExecutionNodeRunnerTest
Running com.technophobia.substeps.runner.TagManagerTest
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Feature: A tagged Feature
In order to ensure tags are working here is a test

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Tags: @runme

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: A tagged scenario
Given a substep

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Tags: @donttunme

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: An excluded tagged scenario
Given another substep

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: An untagged scenario
Given yet another substep

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Tags:
@all
@searchcontracts
@searchcontracts_30

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: multilined tagged scenario
Given another substep

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a substep isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given another substep isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given yet another substep isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given another substep isSubstep: false
[main] DEBUG com.technophobia.substeps.runner.TestParameters - Current dir is: /tmp/tmp6s6ktyp6/substeps-core/.
[main] DEBUG com.technophobia.substeps.runner.TagManager - running with tags: @runme
[main] DEBUG com.technophobia.substeps.runner.TagManager - Creating tagManager with tags @runme
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Feature: A tagged Feature
In order to ensure tags are working here is a test

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Tags: @runme

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: A tagged scenario
Given a substep

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Tags: @donttunme

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: An excluded tagged scenario
Given another substep

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: An untagged scenario
Given yet another substep

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Tags:
@all
@searchcontracts
@searchcontracts_30

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: multilined tagged scenario
Given another substep

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a substep isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given another substep isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given yet another substep isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given another substep isSubstep: false
[main] DEBUG com.technophobia.substeps.runner.TestParameters - Current dir is: /tmp/tmp6s6ktyp6/substeps-core/.
[main] DEBUG com.technophobia.substeps.runner.TagManager - running with tags: @bob @fred
[main] DEBUG com.technophobia.substeps.runner.TagManager - Creating tagManager with tags @bob @fred
[main] DEBUG com.technophobia.substeps.runner.TagManager - running with tags: @bob
[main] DEBUG com.technophobia.substeps.runner.TagManager - Creating tagManager with tags @bob
[main] DEBUG com.technophobia.substeps.runner.TagManager - running with tags: --@fred
[main] DEBUG com.technophobia.substeps.runner.TagManager - Creating tagManager with tags --@fred
[main] DEBUG com.technophobia.substeps.runner.TagManager - running with tags: --@fred
[main] DEBUG com.technophobia.substeps.runner.TagManager - Creating tagManager with tags --@fred
[main] DEBUG com.technophobia.substeps.runner.TagManager - Inserting tag overlays --@bob
[main] DEBUG com.technophobia.substeps.runner.TagManager - running with tags: @fred --@bob
[main] DEBUG com.technophobia.substeps.runner.TagManager - Creating tagManager with tags @fred --@bob
[main] DEBUG com.technophobia.substeps.runner.TagManager - Inserting tag overlays @bill @bob
Tests run: 8, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.01 sec - in com.technophobia.substeps.runner.TagManagerTest
Running com.technophobia.substeps.runner.setupteardown.BeforeAndAfterProcessorMethodExecutorTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec - in com.technophobia.substeps.runner.setupteardown.BeforeAndAfterProcessorMethodExecutorTest
Running com.technophobia.substeps.runner.setupteardown.SetupAndTearDownTest
[main] INFO  com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - no logging config name supplied, defaulting to Substeps
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec - in com.technophobia.substeps.runner.setupteardown.SetupAndTearDownTest
Running com.technophobia.substeps.runner.InitialisationClassssSorterTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec - in com.technophobia.substeps.runner.InitialisationClassssSorterTest
Running com.technophobia.substeps.runner.FeatureFileParserTest
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Feature: A feature for testing line numbers of scenarios and steps in the parser
In order to develop a new cuke framework I need some tests

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Background: background to the proceeding scenario
Given whatever

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Tags: @tag1 @tag2

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: Execute simple cuke annotated methods
Given something with an@emailaddress.com
Given series of substeps is executed
Given substep with param1 "wobble" and param2 "wibble"
When an event occurs
When an event occurs
When an event occurs
When an event occurs

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given whatever isSubstep: false
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Tags: @tag3

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: A second scenario
Then bad things happen
And people get upset
Whatever yee hah
And a parameter fred is supplied

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given whatever isSubstep: false
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario Outline: User submitting blank registration form
When I register as a new user
And I enter a <Object> of <Data>
And I click Submit
Then I am <Result>
And I am not registered with the system
And I am shown the registration page
Examples:
|Object|Data|Result|
|Title||Please enter a title.|
|First name||Please enter a valid first name.|
|Last name||Please enter a valid last name.|
|Email||Please enter a valid email address|
|Professional title||Please enter your professional title|
|Password||That password is too short (or too long). Please make sure your password is a minimum of 8 characters.|
|Retype Password||no error message|
|Password reminder||Your password reminder cannot be blank or contain your password |

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given whatever isSubstep: false
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: inline table
And I click the 'Create user' navigation link
Then I see the 'Create user' page with heading 'Create User step 1 of 5'
And I type the following into the 'Enter new user details' fields
|New user email address|New user forename |New user surname |New user telephone number|
|table1.newEmail       |table1.newForename|table1.newSurname|table1.newTel            |
And I click the 'Next' button
And whatever

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given whatever isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something with an@emailaddress.com isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given series of substeps is executed isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given substep with param1 "wobble" and param2 "wibble" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: When an event occurs isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: When an event occurs isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: When an event occurs isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: When an event occurs isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then bad things happen isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And people get upset isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Whatever yee hah isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And a parameter fred is supplied isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: When I register as a new user isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And I enter a <Object> of <Data> isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And I click Submit isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then I am <Result> isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And I am not registered with the system isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And I am shown the registration page isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And I click the 'Create user' navigation link isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then I see the 'Create user' page with heading 'Create User step 1 of 5' isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And I type the following into the 'Enter new user details' fields isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And I click the 'Next' button isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And whatever isSubstep: false
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Feature: A feature to test BDD Runner functionality

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Background: scenario background
Test_Given some background

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: Simple top level scenario
Test_Given something
Test_Then something with a "quoted parameter"
SingleWord
Test_Given something
Test_Then something with a "quoted parameter"
SingleWord
Test_Given something
Test_Then something with a "quoted parameter"
SingleWord
Test_Given something
Test_Then something with a "quoted parameter"
SingleWord
Test_Given something
Test_Then something with a "quoted parameter"
SingleWord
Test_Given something
Test_Then something with a "quoted parameter"
SingleWord
Test_Given something
Test_Then something with a "quoted parameter"
SingleWord

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given some background isSubstep: false
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario Outline: Simple top level outline scenario
Test_Then something with a "<param>"
Test_Given something
SingleWord
Test_Given something
Test_Then something with a "quoted parameter"
SingleWord
Test_Given something
Test_Then something with a "quoted parameter"
SingleWord
Test_Given something
Test_Then something with a "quoted parameter"
Examples:
|param|
|bob|
|fred|
|barf|
|bob|
|fred|
|barf|
|bob|
|fred|
|barf|
|bob|
|fred|
|barf|
|bob|
|fred|
|barf|

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given some background isSubstep: false
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: A feature calls some substeps
Test_Given something defined in a substep
Test_Then something has happened

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given some background isSubstep: false
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: A feature calls some more substeps
Test_Given "something in quotes" defined in another substep
Test_Then something else has happened
Test_Given a step is defined with a table parameter
| param1  |  param2  |    param3  |   param4  |
| W       |   X      |    Y       |     Z     |
Test_Given a step is defined with a table parameter
| param1  |  param2  |    param3  |   param4  |
| W       |   X      |    Y       |     Z     |
Test_Given a step is defined with a table parameter
| param1  |  param2  |    param3  |   param4  |
| W       |   X      |    Y       |     Z     |
Test_Given something defined in a substep
Test_Then something has happened
Test_Given something defined in a substep
Test_Then something has happened

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given some background isSubstep: false
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: a scenario is executed with a table as a parameter
Test_Given a step is defined with a table parameter
| param1  |  param2  |    param3  |   param4  |
| W       |   X      |    Y       |     Z     |

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given some background isSubstep: false
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: quoted hashes are not interpreted as comments
Test_Then something with a "#quoted parameter"

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given some background isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given something isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something with a "quoted parameter" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given something isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something with a "quoted parameter" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given something isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something with a "quoted parameter" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given something isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something with a "quoted parameter" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given something isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something with a "quoted parameter" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given something isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something with a "quoted parameter" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given something isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something with a "quoted parameter" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something with a "<param>" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given something isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given something isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something with a "quoted parameter" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given something isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something with a "quoted parameter" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given something isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something with a "quoted parameter" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given something defined in a substep isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something has happened isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given "something in quotes" defined in another substep isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something else has happened isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given a step is defined with a table parameter isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given a step is defined with a table parameter isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given a step is defined with a table parameter isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given something defined in a substep isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something has happened isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given something defined in a substep isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something has happened isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given a step is defined with a table parameter isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something with a "#quoted parameter" isSubstep: false
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Feature: Some Feature2
In order to develop a new cuke framework I need some tests

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Background:
Given whatever

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Tags: @tag1 @tag2

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: Execute simple cuke annotated methods
Given something with an@emailaddress.com
Given series of substeps is executed
Given substep with param1 "wobble" and param2 "wibble"
When an event occurs

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given whatever isSubstep: false
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Tags: @tag3

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: A second scenario
Then bad things happen
And people get upset
Whatever yee hah
And a parameter fred is supplied

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given whatever isSubstep: false
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario Outline: User submitting blank registration form
When I register as a new user
And I enter a <Object> of <Data>
And I click Submit
Then I am <Result>
And I am not registered with the system
And I am shown the registration page
Examples:
|Object|Data|Result|
|Title||Please enter a title.|
|First name||Please enter a valid first name.|
|Last name||Please enter a valid last name.|
|Email||Please enter a valid email address|
|Professional title||Please enter your professional title|
|Password||That password is too short (or too long). Please make sure your password is a minimum of 8 characters.|
|Retype Password||no error message|
|Password reminder||Your password reminder cannot be blank or contain your password |

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given whatever isSubstep: false
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: inline table
And I click the 'Create user' navigation link
Then I see the 'Create user' page with heading 'Create User step 1 of 5'
And I type the following into the 'Enter new user details' fields
|New user email address|New user forename |New user surname |New user telephone number|
|table1.newEmail       |table1.newForename|table1.newSurname|table1.newTel            |
And I click the 'Next' button
And whatever

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given whatever isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something with an@emailaddress.com isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given series of substeps is executed isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given substep with param1 "wobble" and param2 "wibble" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: When an event occurs isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then bad things happen isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And people get upset isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Whatever yee hah isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And a parameter fred is supplied isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: When I register as a new user isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And I enter a <Object> of <Data> isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And I click Submit isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then I am <Result> isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And I am not registered with the system isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And I am shown the registration page isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And I click the 'Create user' navigation link isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then I see the 'Create user' page with heading 'Create User step 1 of 5' isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And I type the following into the 'Enter new user details' fields isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And I click the 'Next' button isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And whatever isSubstep: false
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Feature: A feature for testing line numbers of scenarios and steps in the parser when comments are present between the steps

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: Execute simple cuke annotated methods
Given something with an@emailaddress.com
Given series of substeps is executed
Given substep with param1 "wobble" and param2 "wibble"

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something with an@emailaddress.com isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given series of substeps is executed isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given substep with param1 "wobble" and param2 "wibble" isSubstep: false
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.04 sec - in com.technophobia.substeps.runner.FeatureFileParserTest
Running com.technophobia.substeps.runner.runtime.PredicatedClassLocatorTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec - in com.technophobia.substeps.runner.runtime.PredicatedClassLocatorTest
Running com.technophobia.substeps.runner.runtime.StepClassFilterTest
[main] DEBUG com.technophobia.substeps.runner.runtime.StepClassFilter - Checking if com.technophobia.substeps.runner.runtime.fake.AnnotatedStepClassFake has step methods
[main] DEBUG com.technophobia.substeps.runner.runtime.StepClassFilter - Class class com.technophobia.substeps.runner.runtime.fake.AnnotatedStepClassFake has methodstepMethod annotated with the com.technophobia.substeps.model.SubSteps$AdditionalStepImplementations annotation, returning true
[main] DEBUG com.technophobia.substeps.runner.runtime.StepClassFilter - Checking if com.technophobia.substeps.runner.runtime.fake.NonAnnotatedStepClassFake has step methods
[main] DEBUG com.technophobia.substeps.runner.runtime.StepClassFilter - Class class com.technophobia.substeps.runner.runtime.fake.NonAnnotatedStepClassFake does not appear to be a step class
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec - in com.technophobia.substeps.runner.runtime.StepClassFilterTest
Running com.technophobia.substeps.runner.syntax.validation.SyntaxAwareStepValidatorTest
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Copyright Technophobia Ltd 2012] @ 1:error.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# some substeps to support failing tests] @ 2:error.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 3:error.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given step 1] @ 4:error.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given step 1 isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given step 1
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given step 1
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given step 1
pattern: Given step 1
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    SingleWord] @ 5:error.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Test_Then something else has happened] @ 6:error.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something else has happened isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Test_Then something else has happened
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Test_Then something else has happened
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Test_Then something else has happened
pattern: Test_Then something else has happened
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 7:error.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given step 2] @ 8:error.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given step 2 isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given step 2
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given step 2
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given step 2
pattern: Given step 2
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Test_Then something has happened] @ 9:error.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something has happened isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Test_Then something has happened
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Test_Then something has happened
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Test_Then something has happened
pattern: Test_Then something has happened
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    ] @ 10:error.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: An empty substep definition    ] @ 11:error.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: An empty substep definition isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: An empty substep definition
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: An empty substep definition
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: An empty substep definition
pattern: An empty substep definition
[main] WARN  com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - Ignoring substep definition [An empty substep definition] as it has no steps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 1:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Copyright Technophobia Ltd 2012] @ 2:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# a definition of a substep] @ 3:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given series of substeps is executed] @ 4:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given series of substeps is executed isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given series of substeps is executed
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given series of substeps is executed
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given series of substeps is executed
pattern: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		When an event occurs ] @ 5:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: When an event occurs isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: When an event occurs
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: When an event occurs
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: When an event occurs
pattern: When an event occurs
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then bad things happen ] @ 6:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then bad things happen isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then bad things happen
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then bad things happen
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then bad things happen
pattern: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		And people get upset] @ 7:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And people get upset isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: And people get upset
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: And people get upset
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: And people get upset
pattern: And people get upset
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 8:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given substep with param1 <name1> and param2 <name2>] @ 9:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given substep with param1 <name1> and param2 <name2> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given substep with param1 <name1> and param2 <name2>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name1 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(32)
[main] DEBUG com.technophobia.substeps.model.Step - adding name2 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given substep with param1 <name1> and param2 <name2>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given substep with param1 <name1> and param2 <name2>
pattern: Given substep with param1 "?([^"]*)"? and param2 "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then method with param <name1>] @ 10:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then method with param <name1> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then method with param <name1>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name1 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then method with param <name1>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then method with param <name1>
pattern: Then method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then another method with param <name2>] @ 11:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then another method with param <name2> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then another method with param <name2>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name2 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then another method with param <name2>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then another method with param <name2>
pattern: Then another method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 12:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given a step with a parameter <parameter>] @ 13:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a step with a parameter <parameter> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given a step with a parameter <parameter>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding parameter as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given a step with a parameter <parameter>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given a step with a parameter <parameter>
pattern: Given a step with a parameter "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then the substep gets the whole <parameter>] @ 14:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then the substep gets the whole <parameter> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then the substep gets the whole <parameter>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding parameter as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then the substep gets the whole <parameter>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then the substep gets the whole <parameter>
pattern: Then the substep gets the whole "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		] @ 15:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given a substep] @ 16:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given a substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given a substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given a substep
pattern: Given a substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Given something] @ 17:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 18:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define:  Given another substep] @ 19:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given another substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given another substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given another substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given another substep
pattern: Given another substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 20:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 21:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define:  Given yet another substep] @ 22:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given yet another substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given yet another substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given yet another substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given yet another substep
pattern: Given yet another substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 23:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  ] @ 24:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Then a method with a quoted '<param>' ] @ 25:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then a method with a quoted '<param>' isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then a method with a quoted '<param>'
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding param as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then a method with a quoted '<param>'
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then a method with a quoted '<param>'
pattern: Then a method with a quoted '"?([^"]*)"?'
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[	Then method with param <param>    			] @ 26:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then method with param <param> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then method with param <param>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding param as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then method with param <param>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then method with param <param>
pattern: Then method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 27:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: A step def that isn't actually called] @ 28:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: A step def that isn't actually called isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: A step def that isn't actually called
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: A step def that isn't actually called
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: A step def that isn't actually called
pattern: A step def that isn't actually called
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 29:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[               	] @ 30:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Copyright Technophobia Ltd 2012] @ 1:allFeatures.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 2:allFeatures.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# tightly defined substeps for test purposes] @ 3:allFeatures.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 4:allFeatures.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Test_Given <substep_param> defined in a substep] @ 5:allFeatures.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given <substep_param> defined in a substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Test_Given <substep_param> defined in a substep
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding substep_param as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Test_Given <substep_param> defined in a substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Test_Given <substep_param> defined in a substep
pattern: Test_Given "?([^"]*)"? defined in a substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Test_Whatever gets called with <substep_param>] @ 6:allFeatures.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Whatever gets called with <substep_param> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Test_Whatever gets called with <substep_param>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding substep_param as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Test_Whatever gets called with <substep_param>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Test_Whatever gets called with <substep_param>
pattern: Test_Whatever gets called with "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    ] @ 7:allFeatures.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    ] @ 8:allFeatures.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Test_Given <param_in_quotes> defined in another substep] @ 9:allFeatures.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given <param_in_quotes> defined in another substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Test_Given <param_in_quotes> defined in another substep
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding param_in_quotes as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Test_Given <param_in_quotes> defined in another substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Test_Given <param_in_quotes> defined in another substep
pattern: Test_Given "?([^"]*)"? defined in another substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Test_Whatever is called with a quoted parameter <param_in_quotes>     ] @ 10:allFeatures.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Whatever is called with a quoted parameter <param_in_quotes> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Test_Whatever is called with a quoted parameter <param_in_quotes>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding param_in_quotes as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Test_Whatever is called with a quoted parameter <param_in_quotes>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Test_Whatever is called with a quoted parameter <param_in_quotes>
pattern: Test_Whatever is called with a quoted parameter "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 1:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Copyright Technophobia Ltd 2012] @ 2:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# a definition of a substep] @ 3:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given series of substeps is executed] @ 4:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given series of substeps is executed isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given series of substeps is executed
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given series of substeps is executed
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given series of substeps is executed
pattern: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		When an event occurs ] @ 5:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: When an event occurs isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: When an event occurs
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: When an event occurs
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: When an event occurs
pattern: When an event occurs
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then bad things happen ] @ 6:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then bad things happen isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then bad things happen
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then bad things happen
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then bad things happen
pattern: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		And people get upset] @ 7:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And people get upset isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: And people get upset
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: And people get upset
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: And people get upset
pattern: And people get upset
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 8:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given substep with param1 <name1> and param2 <name2>] @ 9:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given substep with param1 <name1> and param2 <name2> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given substep with param1 <name1> and param2 <name2>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name1 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(32)
[main] DEBUG com.technophobia.substeps.model.Step - adding name2 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given substep with param1 <name1> and param2 <name2>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given substep with param1 <name1> and param2 <name2>
pattern: Given substep with param1 "?([^"]*)"? and param2 "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then method with param <name1>] @ 10:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then method with param <name1> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then method with param <name1>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name1 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then method with param <name1>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then method with param <name1>
pattern: Then method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then another method with param <name2>] @ 11:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then another method with param <name2> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then another method with param <name2>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name2 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then another method with param <name2>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then another method with param <name2>
pattern: Then another method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 12:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given a step with a parameter <parameter>] @ 13:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a step with a parameter <parameter> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given a step with a parameter <parameter>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding parameter as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given a step with a parameter <parameter>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given a step with a parameter <parameter>
pattern: Given a step with a parameter "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then the substep gets the whole <parameter>] @ 14:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then the substep gets the whole <parameter> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then the substep gets the whole <parameter>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding parameter as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then the substep gets the whole <parameter>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then the substep gets the whole <parameter>
pattern: Then the substep gets the whole "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		] @ 15:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given a substep] @ 16:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given a substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given a substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given a substep
pattern: Given a substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Given something] @ 17:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 18:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define:  Given another substep] @ 19:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given another substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given another substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given another substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given another substep
pattern: Given another substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 20:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 21:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define:  Given yet another substep] @ 22:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given yet another substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given yet another substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given yet another substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given yet another substep
pattern: Given yet another substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 23:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  ] @ 24:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Then a method with a quoted '<param>' ] @ 25:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then a method with a quoted '<param>' isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then a method with a quoted '<param>'
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding param as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then a method with a quoted '<param>'
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then a method with a quoted '<param>'
pattern: Then a method with a quoted '"?([^"]*)"?'
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[	Then method with param <param>    			] @ 26:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then method with param <param> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then method with param <param>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding param as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then method with param <param>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then method with param <param>
pattern: Then method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 27:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: A step def that isn't actually called] @ 28:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: A step def that isn't actually called isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: A step def that isn't actually called
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: A step def that isn't actually called
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: A step def that isn't actually called
pattern: A step def that isn't actually called
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 29:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[               	] @ 30:simple.substeps
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Feature: A feature to ensure test failure

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Tags: @bug_missing_sub_step_impl

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: A scenario that calls some substeps with missing implementations
Given step 1
Given step 2

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given step 1 isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given step 2 isSubstep: false
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Copyright Technophobia Ltd 2012] @ 1:error.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# some substeps to support failing tests] @ 2:error.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 3:error.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given step 1] @ 4:error.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given step 1 isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given step 1
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given step 1
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given step 1
pattern: Given step 1
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    SingleWord] @ 5:error.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Test_Then something else has happened] @ 6:error.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something else has happened isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Test_Then something else has happened
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Test_Then something else has happened
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Test_Then something else has happened
pattern: Test_Then something else has happened
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 7:error.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given step 2] @ 8:error.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given step 2 isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given step 2
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given step 2
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given step 2
pattern: Given step 2
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Test_Then something has happened] @ 9:error.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something has happened isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Test_Then something has happened
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Test_Then something has happened
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Test_Then something has happened
pattern: Test_Then something has happened
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    ] @ 10:error.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: An empty substep definition    ] @ 11:error.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: An empty substep definition isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: An empty substep definition
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: An empty substep definition
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: An empty substep definition
pattern: An empty substep definition
[main] WARN  com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - Ignoring substep definition [An empty substep definition] as it has no steps
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Feature: A feature to ensure test failure

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Tags: @bug_missing_sub_step_impl

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: A scenario that calls some substeps with missing implementations
Given step 1
Given step 2

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given step 1 isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given step 2 isSubstep: false
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 1:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Copyright Technophobia Ltd 2012] @ 2:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# a definition of a substep] @ 3:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given series of substeps is executed] @ 4:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given series of substeps is executed isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given series of substeps is executed
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given series of substeps is executed
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given series of substeps is executed
pattern: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		When an event occurs ] @ 5:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: When an event occurs isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: When an event occurs
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: When an event occurs
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: When an event occurs
pattern: When an event occurs
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then bad things happen ] @ 6:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then bad things happen isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then bad things happen
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then bad things happen
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then bad things happen
pattern: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		And people get upset] @ 7:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And people get upset isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: And people get upset
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: And people get upset
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: And people get upset
pattern: And people get upset
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 8:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given substep with param1 <name1> and param2 <name2>] @ 9:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given substep with param1 <name1> and param2 <name2> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given substep with param1 <name1> and param2 <name2>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name1 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(32)
[main] DEBUG com.technophobia.substeps.model.Step - adding name2 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given substep with param1 <name1> and param2 <name2>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given substep with param1 <name1> and param2 <name2>
pattern: Given substep with param1 "?([^"]*)"? and param2 "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then method with param <name1>] @ 10:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then method with param <name1> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then method with param <name1>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name1 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then method with param <name1>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then method with param <name1>
pattern: Then method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then another method with param <name2>] @ 11:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then another method with param <name2> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then another method with param <name2>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name2 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then another method with param <name2>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then another method with param <name2>
pattern: Then another method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 12:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given a step with a parameter <parameter>] @ 13:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a step with a parameter <parameter> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given a step with a parameter <parameter>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding parameter as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given a step with a parameter <parameter>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given a step with a parameter <parameter>
pattern: Given a step with a parameter "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then the substep gets the whole <parameter>] @ 14:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then the substep gets the whole <parameter> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then the substep gets the whole <parameter>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding parameter as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then the substep gets the whole <parameter>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then the substep gets the whole <parameter>
pattern: Then the substep gets the whole "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		] @ 15:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given a substep] @ 16:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given a substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given a substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given a substep
pattern: Given a substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Given something] @ 17:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 18:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define:  Given another substep] @ 19:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given another substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given another substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given another substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given another substep
pattern: Given another substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 20:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 21:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define:  Given yet another substep] @ 22:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given yet another substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given yet another substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given yet another substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given yet another substep
pattern: Given yet another substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 23:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  ] @ 24:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Then a method with a quoted '<param>' ] @ 25:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then a method with a quoted '<param>' isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then a method with a quoted '<param>'
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding param as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then a method with a quoted '<param>'
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then a method with a quoted '<param>'
pattern: Then a method with a quoted '"?([^"]*)"?'
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[	Then method with param <param>    			] @ 26:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then method with param <param> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then method with param <param>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding param as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then method with param <param>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then method with param <param>
pattern: Then method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 27:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: A step def that isn't actually called] @ 28:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: A step def that isn't actually called isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: A step def that isn't actually called
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: A step def that isn't actually called
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: A step def that isn't actually called
pattern: A step def that isn't actually called
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 29:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[               	] @ 30:simple.substeps
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.439 sec - in com.technophobia.substeps.runner.syntax.validation.SyntaxAwareStepValidatorTest
Running com.technophobia.substeps.runner.syntax.SyntaxBuilderTest
[main] ERROR com.technophobia.substeps.runner.syntax.DefaultSyntaxErrorReporter - Duplicate step implementation detected: Pattern [SomeStep with a value] is implemented in com.technophobia.substeps.stepimplementations.DuplicateStepImplementations.x and com.technophobia.substeps.stepimplementations.DuplicateStepImplementations.y
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Copyright Technophobia Ltd 2012] @ 1:bugs.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# some substeps to support failing tests] @ 2:bugs.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 3:bugs.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given step 1] @ 4:bugs.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given step 1 isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given step 1
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given step 1
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given step 1
pattern: Given step 1
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    SingleWord] @ 5:bugs.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Test_Then something blows up] @ 6:bugs.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something blows up isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Test_Then something blows up
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Test_Then something blows up
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Test_Then something blows up
pattern: Test_Then something blows up
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Test_Then something else has happened] @ 7:bugs.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something else has happened isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Test_Then something else has happened
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Test_Then something else has happened
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Test_Then something else has happened
pattern: Test_Then something else has happened
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 8:bugs.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given step 2] @ 9:bugs.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given step 2 isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given step 2
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given step 2
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given step 2
pattern: Given step 2
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Test_Then something has happened] @ 10:bugs.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something has happened isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Test_Then something has happened
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Test_Then something has happened
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Test_Then something has happened
pattern: Test_Then something has happened
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    ] @ 11:bugs.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: AnotherSingleWord] @ 12:bugs.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Test_Then something has happened    ] @ 13:bugs.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Then something has happened isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Test_Then something has happened
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Test_Then something has happened
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Test_Then something has happened
pattern: Test_Then something has happened
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Copyright Technophobia Ltd 2012] @ 1:allFeatures.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 2:allFeatures.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# tightly defined substeps for test purposes] @ 3:allFeatures.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 4:allFeatures.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Test_Given <substep_param> defined in a substep] @ 5:allFeatures.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given <substep_param> defined in a substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Test_Given <substep_param> defined in a substep
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding substep_param as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Test_Given <substep_param> defined in a substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Test_Given <substep_param> defined in a substep
pattern: Test_Given "?([^"]*)"? defined in a substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Test_Whatever gets called with <substep_param>] @ 6:allFeatures.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Whatever gets called with <substep_param> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Test_Whatever gets called with <substep_param>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding substep_param as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Test_Whatever gets called with <substep_param>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Test_Whatever gets called with <substep_param>
pattern: Test_Whatever gets called with "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    ] @ 7:allFeatures.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    ] @ 8:allFeatures.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Test_Given <param_in_quotes> defined in another substep] @ 9:allFeatures.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given <param_in_quotes> defined in another substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Test_Given <param_in_quotes> defined in another substep
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding param_in_quotes as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Test_Given <param_in_quotes> defined in another substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Test_Given <param_in_quotes> defined in another substep
pattern: Test_Given "?([^"]*)"? defined in another substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Test_Whatever is called with a quoted parameter <param_in_quotes>     ] @ 10:allFeatures.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Whatever is called with a quoted parameter <param_in_quotes> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Test_Whatever is called with a quoted parameter <param_in_quotes>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding param_in_quotes as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Test_Whatever is called with a quoted parameter <param_in_quotes>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Test_Whatever is called with a quoted parameter <param_in_quotes>
pattern: Test_Whatever is called with a quoted parameter "?([^"]*)"?

Step implementations

SingleWord SingleWord : MockStepImplementations.meth12
Step Step with a variable "([^"]*)" : MockStepImplementations.meth13
Test_Given Test_Given some outline background : MockStepImplementations.meth3
Test_Given Test_Given something : MockStepImplementations.meth2
Test_Given Test_Given some background : MockStepImplementations.meth1
Test_Given Test_Given a step is defined with a table parameter : MockStepImplementations.meth10
Test_Then Test_Then something with a "([^"]*)" : MockStepImplementations.meth4
Test_Then Test_Then something else has happened : MockStepImplementations.meth9
Test_Then Test_Then something blows up : MockStepImplementations.meth11
Test_Then Test_Then some other method never called : MockStepImplementations.meth5
Test_Then Test_Then something has happened : MockStepImplementations.meth6
Test_Whatever Test_Whatever gets called with ([^"]*) : MockStepImplementations.meth7
Test_Whatever Test_Whatever is called with a quoted parameter "?([^"]*)"? : MockStepImplementations.meth8



SubSteps

Parent: Test_Given <param_in_quotes> defined in another substep in: allFeatures.substeps
	Test_Whatever is called with a quoted parameter <param_in_quotes>
Parent: Test_Given <substep_param> defined in a substep in: allFeatures.substeps
	Test_Whatever gets called with <substep_param>
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Copyright Technophobia Ltd 2012] @ 1:allFeatures.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 2:allFeatures.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# tightly defined substeps for test purposes] @ 3:allFeatures.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 4:allFeatures.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Test_Given <substep_param> defined in a substep] @ 5:allFeatures.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given <substep_param> defined in a substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Test_Given <substep_param> defined in a substep
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding substep_param as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Test_Given <substep_param> defined in a substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Test_Given <substep_param> defined in a substep
pattern: Test_Given "?([^"]*)"? defined in a substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Test_Whatever gets called with <substep_param>] @ 6:allFeatures.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Whatever gets called with <substep_param> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Test_Whatever gets called with <substep_param>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding substep_param as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Test_Whatever gets called with <substep_param>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Test_Whatever gets called with <substep_param>
pattern: Test_Whatever gets called with "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    ] @ 7:allFeatures.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    ] @ 8:allFeatures.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Test_Given <param_in_quotes> defined in another substep] @ 9:allFeatures.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Given <param_in_quotes> defined in another substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Test_Given <param_in_quotes> defined in another substep
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding param_in_quotes as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Test_Given <param_in_quotes> defined in another substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Test_Given <param_in_quotes> defined in another substep
pattern: Test_Given "?([^"]*)"? defined in another substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Test_Whatever is called with a quoted parameter <param_in_quotes>     ] @ 10:allFeatures.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Test_Whatever is called with a quoted parameter <param_in_quotes> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Test_Whatever is called with a quoted parameter <param_in_quotes>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding param_in_quotes as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Test_Whatever is called with a quoted parameter <param_in_quotes>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Test_Whatever is called with a quoted parameter <param_in_quotes>
pattern: Test_Whatever is called with a quoted parameter "?([^"]*)"?

Step implementations

SingleWord SingleWord : MockStepImplementations.meth12
Step Step with a variable "([^"]*)" : MockStepImplementations.meth13
Test_Given Test_Given some outline background : MockStepImplementations.meth3
Test_Given Test_Given something : MockStepImplementations.meth2
Test_Given Test_Given a step is defined with a table parameter : MockStepImplementations.meth10
Test_Given Test_Given some background : MockStepImplementations.meth1
Test_Then Test_Then something has happened : MockStepImplementations.meth6
Test_Then Test_Then something else has happened : MockStepImplementations.meth9
Test_Then Test_Then some other method never called : MockStepImplementations.meth5
Test_Then Test_Then something blows up : MockStepImplementations.meth11
Test_Then Test_Then something with a "([^"]*)" : MockStepImplementations.meth4
Test_Whatever Test_Whatever is called with a quoted parameter "?([^"]*)"? : MockStepImplementations.meth8
Test_Whatever Test_Whatever gets called with ([^"]*) : MockStepImplementations.meth7



SubSteps

Parent: Test_Given <param_in_quotes> defined in another substep in: allFeatures.substeps
	Test_Whatever is called with a quoted parameter <param_in_quotes>
Parent: Test_Given <substep_param> defined in a substep in: allFeatures.substeps
	Test_Whatever gets called with <substep_param>
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Copyright Technophobia Ltd 2012] @ 1:duplicates.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# a definition of a substep] @ 2:duplicates.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given series of substeps is executed] @ 3:duplicates.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given series of substeps is executed isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given series of substeps is executed
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given series of substeps is executed
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given series of substeps is executed
pattern: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		When an event occurs ] @ 4:duplicates.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: When an event occurs isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: When an event occurs
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: When an event occurs
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: When an event occurs
pattern: When an event occurs
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then bad things happen ] @ 5:duplicates.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then bad things happen isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then bad things happen
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then bad things happen
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then bad things happen
pattern: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		And people get upset] @ 6:duplicates.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And people get upset isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: And people get upset
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: And people get upset
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: And people get upset
pattern: And people get upset
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 7:duplicates.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given substep with param1 <name1> and param2 <name2>] @ 8:duplicates.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given substep with param1 <name1> and param2 <name2> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given substep with param1 <name1> and param2 <name2>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name1 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(32)
[main] DEBUG com.technophobia.substeps.model.Step - adding name2 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given substep with param1 <name1> and param2 <name2>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given substep with param1 <name1> and param2 <name2>
pattern: Given substep with param1 "?([^"]*)"? and param2 "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then method with param <name1>] @ 9:duplicates.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then method with param <name1> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then method with param <name1>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name1 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then method with param <name1>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then method with param <name1>
pattern: Then method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then another method with param <name2>] @ 10:duplicates.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then another method with param <name2> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then another method with param <name2>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name2 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then another method with param <name2>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then another method with param <name2>
pattern: Then another method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 11:duplicates.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given a step with a parameter <parameter>] @ 12:duplicates.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a step with a parameter <parameter> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given a step with a parameter <parameter>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding parameter as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given a step with a parameter <parameter>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given a step with a parameter <parameter>
pattern: Given a step with a parameter "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then the substep gets the whole <parameter>] @ 13:duplicates.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then the substep gets the whole <parameter> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then the substep gets the whole <parameter>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding parameter as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then the substep gets the whole <parameter>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then the substep gets the whole <parameter>
pattern: Then the substep gets the whole "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		] @ 14:duplicates.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given a substep] @ 15:duplicates.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given a substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given a substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given a substep
pattern: Given a substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Given something] @ 16:duplicates.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 17:duplicates.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define:  Given another substep] @ 18:duplicates.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given another substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given another substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given another substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given another substep
pattern: Given another substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 19:duplicates.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 20:duplicates.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define:  Given yet another substep] @ 21:duplicates.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given yet another substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given yet another substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given yet another substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given yet another substep
pattern: Given yet another substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something  			] @ 22:duplicates.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  ] @ 23:duplicates.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define:  Given yet another substep] @ 24:duplicates.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given yet another substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given yet another substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given yet another substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given yet another substep
pattern: Given yet another substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something                 	] @ 25:duplicates.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] ERROR com.technophobia.substeps.runner.syntax.DefaultSyntaxErrorReporter - Duplicate pattern detected: Pattern [Given yet another substep] is defined in duplicates.substeps::21 and duplicates.substeps::24
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.14 sec - in com.technophobia.substeps.runner.syntax.SyntaxBuilderTest
Running com.technophobia.substeps.runner.syntax.SubStepDefinitionParserTest
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 1:duplicate-definition.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: a duplicate definition] @ 2:duplicate-definition.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: a duplicate definition isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: a duplicate definition
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: a duplicate definition
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: a duplicate definition
pattern: a duplicate definition
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[	DoSomething] @ 3:duplicate-definition.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[	] @ 4:duplicate-definition.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: a duplicate definition] @ 5:duplicate-definition.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: a duplicate definition isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: a duplicate definition
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: a duplicate definition
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: a duplicate definition
pattern: a duplicate definition
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[	DoSomething] @ 6:duplicate-definition.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[	] @ 7:duplicate-definition.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[#we require an additional substep at the end here to execute the required code] @ 8:duplicate-definition.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: something else] @ 9:duplicate-definition.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: something else isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: something else
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: something else
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: something else
pattern: something else
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[	DoSomething] @ 10:duplicate-definition.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 1:eol-comment.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: something else # with a comment on the end] @ 2:eol-comment.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: something else isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: something else
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: something else
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: something else
pattern: something else
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    DoSomething] @ 3:eol-comment.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 4:eol-comment.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[#Define: a normal comment] @ 5:eol-comment.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 6:eol-comment.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: and something different] @ 7:eol-comment.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: and something different isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: and something different
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: and something different
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: and something different
pattern: and something different
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    DoSomethingElse    ] @ 8:eol-comment.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: this is a normal step] @ 1:empty-definition.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: this is a normal step isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: this is a normal step
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: this is a normal step
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: this is a normal step
pattern: this is a normal step
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[	DoSomething] @ 2:empty-definition.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 3:empty-definition.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: this definition is empty] @ 4:empty-definition.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: this definition is empty isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: this definition is empty
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: this definition is empty
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: this definition is empty
pattern: this definition is empty
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 5:empty-definition.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: this is a normal step] @ 6:empty-definition.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: this is a normal step isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: this is a normal step
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: this is a normal step
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: this is a normal step
pattern: this is a normal step
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[	DoSomething] @ 7:empty-definition.substeps
Tests run: 6, Failures: 0, Errors: 0, Skipped: 3, Time elapsed: 0.041 sec - in com.technophobia.substeps.runner.syntax.SubStepDefinitionParserTest
Running com.technophobia.substeps.runner.DryRunTest
ExecutionConfig [description=Feature set, tags=null, nonFatalTags=null, featureFile=./target/test-classes/features/example.feature, subStepsFileName=./target/test-classes/substeps/simple.substeps, strict=true, fastFailParseErrors=true, nonStrictKeywordPrecedence=null, stepImplementationClassNames=null, initialisationClass=null, stepImplementationClasses=[class com.technophobia.substeps.steps.TestStepImplementations, class com.technophobia.substeps.runner.DryRunTest$TestInitialisationClass], initialisationClasses=[class com.technophobia.substeps.runner.DryRunTest$TestInitialisationClass], executionListeners=null]
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 1:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Copyright Technophobia Ltd 2012] @ 2:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# a definition of a substep] @ 3:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given series of substeps is executed] @ 4:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given series of substeps is executed isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given series of substeps is executed
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given series of substeps is executed
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given series of substeps is executed
pattern: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		When an event occurs ] @ 5:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: When an event occurs isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: When an event occurs
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: When an event occurs
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: When an event occurs
pattern: When an event occurs
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then bad things happen ] @ 6:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then bad things happen isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then bad things happen
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then bad things happen
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then bad things happen
pattern: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		And people get upset] @ 7:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And people get upset isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: And people get upset
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: And people get upset
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: And people get upset
pattern: And people get upset
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 8:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given substep with param1 <name1> and param2 <name2>] @ 9:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given substep with param1 <name1> and param2 <name2> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given substep with param1 <name1> and param2 <name2>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name1 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(32)
[main] DEBUG com.technophobia.substeps.model.Step - adding name2 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given substep with param1 <name1> and param2 <name2>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given substep with param1 <name1> and param2 <name2>
pattern: Given substep with param1 "?([^"]*)"? and param2 "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then method with param <name1>] @ 10:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then method with param <name1> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then method with param <name1>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name1 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then method with param <name1>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then method with param <name1>
pattern: Then method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then another method with param <name2>] @ 11:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then another method with param <name2> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then another method with param <name2>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name2 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then another method with param <name2>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then another method with param <name2>
pattern: Then another method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 12:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given a step with a parameter <parameter>] @ 13:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a step with a parameter <parameter> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given a step with a parameter <parameter>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding parameter as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given a step with a parameter <parameter>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given a step with a parameter <parameter>
pattern: Given a step with a parameter "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then the substep gets the whole <parameter>] @ 14:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then the substep gets the whole <parameter> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then the substep gets the whole <parameter>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding parameter as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then the substep gets the whole <parameter>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then the substep gets the whole <parameter>
pattern: Then the substep gets the whole "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		] @ 15:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given a substep] @ 16:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given a substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given a substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given a substep
pattern: Given a substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Given something] @ 17:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 18:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define:  Given another substep] @ 19:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given another substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given another substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given another substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given another substep
pattern: Given another substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 20:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 21:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define:  Given yet another substep] @ 22:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given yet another substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given yet another substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given yet another substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given yet another substep
pattern: Given yet another substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 23:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  ] @ 24:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Then a method with a quoted '<param>' ] @ 25:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then a method with a quoted '<param>' isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then a method with a quoted '<param>'
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding param as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then a method with a quoted '<param>'
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then a method with a quoted '<param>'
pattern: Then a method with a quoted '"?([^"]*)"?'
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[	Then method with param <param>    			] @ 26:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then method with param <param> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then method with param <param>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding param as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then method with param <param>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then method with param <param>
pattern: Then method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 27:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: A step def that isn't actually called] @ 28:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: A step def that isn't actually called isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: A step def that isn't actually called
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: A step def that isn't actually called
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: A step def that isn't actually called
pattern: A step def that isn't actually called
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 29:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[               	] @ 30:simple.substeps
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Feature: Some Feature
In order to develop a new cuke framework I need some tests

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: Execute simple cuke annotated methods
Given something
Given series of substeps is executed
Given substep with param1 "wobble" and param2 "wibble"
When an event occurs

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: A second scenario
Then bad things happen
And people get upset
Whatever yee hah
And a parameter fred is supplied

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given series of substeps is executed isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given substep with param1 "wobble" and param2 "wibble" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: When an event occurs isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then bad things happen isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And people get upset isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Whatever yee hah isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And a parameter fred is supplied isSubstep: false
[main] DEBUG com.technophobia.substeps.runner.TestParameters - Current dir is: /tmp/tmp6s6ktyp6/substeps-core/.
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Given something
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Given something
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Given something]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent != null for stepLine: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - buildSubstepNode: scenarioDescription: Execute simple cuke annotated methods step line Given series of substeps is executed param line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - init param vals as strict
[main] DEBUG com.technophobia.substeps.model.ParentStep - initialiseParamValues with line: Given series of substeps is executed
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs String[] with pattern: Given series of substeps is executed and sourceStr: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: When an event occurs
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: When an event occurs
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [When an event occurs]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Then bad things happen
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Then bad things happen]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: And people get upset
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: And people get upset
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [And people get upset]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent != null for stepLine: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - buildSubstepNode: scenarioDescription: Execute simple cuke annotated methods step line Given substep with param1 "wobble" and param2 "wibble" param line: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - init param vals as strict
[main] DEBUG com.technophobia.substeps.model.ParentStep - initialiseParamValues with line: Given substep with param1 "wobble" and param2 "wibble"
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs String[] with pattern: Given substep with param1 "?([^"]*)"? and param2 "?([^"]*)"? and sourceStr: Given substep with param1 "wobble" and param2 "wibble"
[main] DEBUG com.technophobia.substeps.model.Util - returning args: [wobble] [wibble] 
[main] DEBUG com.technophobia.substeps.model.ParentStep - putting value: wobble under key: name1 i 0
[main] DEBUG com.technophobia.substeps.model.ParentStep - putting value: wibble under key: name2 i 1
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then method with param <name1>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <name1> with: wobble in string: [Then method with param <name1>]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Then method with param <name1>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Then method with param <name1>
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Then method with param <name1>]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then method with param <name1>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <name1> with: wobble in string: [Then method with param <name1>]
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - getStepMethodArguments for: Then method with param wobble
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then method with param wobble
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs List<Object> with pattern: Then method with param ([^"]*) and sourceStr: Then method with param wobble
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then another method with param <name2>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <name2> with: wibble in string: [Then another method with param <name2>]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Then another method with param <name2>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Then another method with param <name2>
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Then another method with param <name2>]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then another method with param <name2>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <name2> with: wibble in string: [Then another method with param <name2>]
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - getStepMethodArguments for: Then another method with param wibble
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then another method with param wibble
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs List<Object> with pattern: Then another method with param ([^"]*) and sourceStr: Then another method with param wibble
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: When an event occurs
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: When an event occurs
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [When an event occurs]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Then bad things happen
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Then bad things happen]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: And people get upset
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: And people get upset
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [And people get upset]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Whatever yee hah
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Whatever yee hah
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Whatever yee hah]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: And a parameter fred is supplied
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: And a parameter fred is supplied
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [And a parameter fred is supplied]
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - getStepMethodArguments for: And a parameter fred is supplied
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: And a parameter fred is supplied
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs List<Object> with pattern: And a parameter ([^"]*) is supplied and sourceStr: And a parameter fred is supplied
[main] INFO  com.technophobia.substeps.runner.ExecutionNodeRunner - ** Uncalled Step implementations in scope, this is suspect if these implementations are in your projects domain:

public void com.technophobia.substeps.steps.TestStepImplementations.uncalled()
public void com.technophobia.substeps.steps.TestStepImplementations.methodWithTableArgument(java.util.List)
public void com.technophobia.substeps.steps.TestStepImplementations.sendKeysById(java.lang.String,java.lang.String)


[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Some Feature line: Some Feature
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Feature set line: null
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Execute simple cuke annotated methods line: Execute simple cuke annotated methods
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Some Feature line: Some Feature
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Given something line: Given something
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Execute simple cuke annotated methods line: Execute simple cuke annotated methods
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Given something line: Given something
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Given series of substeps is executed line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Execute simple cuke annotated methods line: Execute simple cuke annotated methods
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Given series of substeps is executed line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - proccessing children...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: When an event occurs line: When an event occurs
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Given series of substeps is executed line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: When an event occurs line: When an event occurs
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Then bad things happen line: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Given series of substeps is executed line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Then bad things happen line: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: And people get upset line: And people get upset
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Given series of substeps is executed line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: And people get upset line: And people get upset
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Given substep with param1 "wobble" and param2 "wibble" line: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Execute simple cuke annotated methods line: Execute simple cuke annotated methods
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Given substep with param1 "wobble" and param2 "wibble" line: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - proccessing children...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Then method with param wobble line: Then method with param wobble
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Given substep with param1 "wobble" and param2 "wibble" line: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Then method with param wobble line: Then method with param wobble
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Then another method with param wibble line: Then another method with param wibble
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Given substep with param1 "wobble" and param2 "wibble" line: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Then another method with param wibble line: Then another method with param wibble
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: When an event occurs line: When an event occurs
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - got existing usages of node: 
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - already found: u: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Execute simple cuke annotated methods line: Execute simple cuke annotated methods
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: When an event occurs line: When an event occurs
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: A second scenario line: A second scenario
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Some Feature line: Some Feature
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Then bad things happen line: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - got existing usages of node: 
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - already found: u: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: A second scenario line: A second scenario
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Then bad things happen line: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: And people get upset line: And people get upset
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - got existing usages of node: 
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - already found: u: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: A second scenario line: A second scenario
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: And people get upset line: And people get upset
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Whatever yee hah line: Whatever yee hah
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: A second scenario line: A second scenario
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Whatever yee hah line: Whatever yee hah
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: And a parameter fred is supplied line: And a parameter fred is supplied
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: A second scenario line: A second scenario
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: And a parameter fred is supplied line: And a parameter fred is supplied
[main] WARN  com.technophobia.substeps.runner.ExecutionNodeRunner - ** Substep definitions not called in current substep execution scope...

	A step def that isn't actually called @ simple.substeps:28
	Given a step with a parameter <parameter> @ simple.substeps:13
	Given a substep @ simple.substeps:16
	Given another substep @ simple.substeps:19
	Given yet another substep @ simple.substeps:22
	Then a method with a quoted '<param>' @ simple.substeps:25

rootNode:
id: 168, type: RootNode, description: Feature set
	id: 167, type: FeatureNode, description: Some Feature
		id: 161, type: BasicScenarioNode, description: Execute simple cuke annotated methods
			id: 152, type: StepImplementationNode, description: Given something impl: TestStepImplementations.given
			id: 156, type: SubstepNode, description: Given series of substeps is executed
				id: 153, type: StepImplementationNode, description: When an event occurs impl: TestStepImplementations.when
				id: 154, type: StepImplementationNode, description: Then bad things happen impl: TestStepImplementations.then
				id: 155, type: StepImplementationNode, description: And people get upset impl: TestStepImplementations.and
			id: 159, type: SubstepNode, description: Given substep with param1 "wobble" and param2 "wibble"
				id: 157, type: StepImplementationNode, description: Then method with param wobble impl: TestStepImplementations.meth1
				id: 158, type: StepImplementationNode, description: Then another method with param wibble impl: TestStepImplementations.meth2
			id: 160, type: StepImplementationNode, description: When an event occurs impl: TestStepImplementations.when
		id: 166, type: BasicScenarioNode, description: A second scenario
			id: 162, type: StepImplementationNode, description: Then bad things happen impl: TestStepImplementations.then
			id: 163, type: StepImplementationNode, description: And people get upset impl: TestStepImplementations.and
			id: 164, type: StepImplementationNode, description: Whatever yee hah impl: TestStepImplementations.whatever
			id: 165, type: StepImplementationNode, description: And a parameter fred is supplied impl: TestStepImplementations.param
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: SUITE
[main] WARN  com.technophobia.substeps.runner.node.AbstractNodeRunner - setup failed
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.technophobia.substeps.execution.ImplementationCache.executeMethods(ImplementationCache.java:96)
	at com.technophobia.substeps.runner.setupteardown.SetupAndTearDown.runAllMethods(SetupAndTearDown.java:108)
	at com.technophobia.substeps.runner.setupteardown.SetupAndTearDown.runBeforeAll(SetupAndTearDown.java:66)
	at com.technophobia.substeps.runner.setupteardown.SetupAndTearDown.runSetup(SetupAndTearDown.java:135)
	at com.technophobia.substeps.runner.node.AbstractNodeRunner.runSetup(AbstractNodeRunner.java:110)
	at com.technophobia.substeps.runner.node.AbstractNodeRunner.beforeExecute(AbstractNodeRunner.java:87)
	at com.technophobia.substeps.runner.node.AbstractNodeRunner.run(AbstractNodeRunner.java:44)
	at com.technophobia.substeps.runner.ExecutionNodeRunner.run(ExecutionNodeRunner.java:313)
	at com.technophobia.substeps.runner.DryRunTest.testNoTestImplementationsAreCalled(DryRunTest.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
Caused by: java.lang.AssertionError: Setup method should not have been invoked since we were on a dry run
	at org.junit.Assert.fail(Assert.java:88)
	at com.technophobia.substeps.runner.DryRunTest$TestInitialisationClass.setupMethod(DryRunTest.java:140)
	... 38 more
[main] INFO  com.technophobia.substeps.execution.node.RootNodeExecutionContext - SubstepExecutionFailure @ id: 168, type: RootNode, description: Feature set
	id: 167, type: FeatureNode, description: Some Feature
		id: 161, type: BasicScenarioNode, description: Execute simple cuke annotated methods
			id: 152, type: StepImplementationNode, description: Given something impl: TestStepImplementations.given
			id: 156, type: SubstepNode, description: Given series of substeps is executed
				id: 153, type: StepImplementationNode, description: When an event occurs impl: TestStepImplementations.when
				id: 154, type: StepImplementationNode, description: Then bad things happen impl: TestStepImplementations.then
				id: 155, type: StepImplementationNode, description: And people get upset impl: TestStepImplementations.and
			id: 159, type: SubstepNode, description: Given substep with param1 "wobble" and param2 "wibble"
				id: 157, type: StepImplementationNode, description: Then method with param wobble impl: TestStepImplementations.meth1
				id: 158, type: StepImplementationNode, description: Then another method with param wibble impl: TestStepImplementations.meth2
			id: 160, type: StepImplementationNode, description: When an event occurs impl: TestStepImplementations.when
		id: 166, type: BasicScenarioNode, description: A second scenario
			id: 162, type: StepImplementationNode, description: Then bad things happen impl: TestStepImplementations.then
			id: 163, type: StepImplementationNode, description: And people get upset impl: TestStepImplementations.and
			id: 164, type: StepImplementationNode, description: Whatever yee hah impl: TestStepImplementations.whatever
			id: 165, type: StepImplementationNode, description: And a parameter fred is supplied impl: TestStepImplementations.param
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.technophobia.substeps.execution.ImplementationCache.executeMethods(ImplementationCache.java:96)
	at com.technophobia.substeps.runner.setupteardown.SetupAndTearDown.runAllMethods(SetupAndTearDown.java:108)

[main] DEBUG com.technophobia.substeps.runner.node.AbstractNodeRunner - shouldContinue = false for com.technophobia.substeps.execution.node.RootNode@1e592ef2
[main] INFO  com.technophobia.substeps.execution.node.RootNodeExecutionContext - SubstepExecutionFailure @ id: 168, type: RootNode, description: Feature set
	id: 167, type: FeatureNode, description: Some Feature
		id: 161, type: BasicScenarioNode, description: Execute simple cuke annotated methods
			id: 152, type: StepImplementationNode, description: Given something impl: TestStepImplementations.given
			id: 156, type: SubstepNode, description: Given series of substeps is executed
				id: 153, type: StepImplementationNode, description: When an event occurs impl: TestStepImplementations.when
				id: 154, type: StepImplementationNode, description: Then bad things happen impl: TestStepImplementations.then
				id: 155, type: StepImplementationNode, description: And people get upset impl: TestStepImplementations.and
			id: 159, type: SubstepNode, description: Given substep with param1 "wobble" and param2 "wibble"
				id: 157, type: StepImplementationNode, description: Then method with param wobble impl: TestStepImplementations.meth1
				id: 158, type: StepImplementationNode, description: Then another method with param wibble impl: TestStepImplementations.meth2
			id: 160, type: StepImplementationNode, description: When an event occurs impl: TestStepImplementations.when
		id: 166, type: BasicScenarioNode, description: A second scenario
			id: 162, type: StepImplementationNode, description: Then bad things happen impl: TestStepImplementations.then
			id: 163, type: StepImplementationNode, description: And people get upset impl: TestStepImplementations.and
			id: 164, type: StepImplementationNode, description: Whatever yee hah impl: TestStepImplementations.whatever
			id: 165, type: StepImplementationNode, description: And a parameter fred is supplied impl: TestStepImplementations.param
java.lang.IllegalStateException: No tests executed
	at com.technophobia.substeps.runner.ExecutionNodeRunner.run(ExecutionNodeRunner.java:317)
	at com.technophobia.substeps.runner.DryRunTest.testNoTestImplementationsAreCalled(DryRunTest.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
ExecutionConfig [description=Feature set, tags=null, nonFatalTags=null, featureFile=./target/test-classes/features/example.feature, subStepsFileName=./target/test-classes/substeps/simple.substeps, strict=true, fastFailParseErrors=true, nonStrictKeywordPrecedence=null, stepImplementationClassNames=null, initialisationClass=null, stepImplementationClasses=[class com.technophobia.substeps.steps.TestStepImplementations, class com.technophobia.substeps.runner.DryRunTest$TestInitialisationClass], initialisationClasses=[class com.technophobia.substeps.runner.DryRunTest$TestInitialisationClass], executionListeners=null]
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 1:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Copyright Technophobia Ltd 2012] @ 2:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# a definition of a substep] @ 3:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given series of substeps is executed] @ 4:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given series of substeps is executed isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given series of substeps is executed
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given series of substeps is executed
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given series of substeps is executed
pattern: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		When an event occurs ] @ 5:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: When an event occurs isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: When an event occurs
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: When an event occurs
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: When an event occurs
pattern: When an event occurs
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then bad things happen ] @ 6:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then bad things happen isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then bad things happen
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then bad things happen
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then bad things happen
pattern: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		And people get upset] @ 7:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And people get upset isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: And people get upset
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: And people get upset
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: And people get upset
pattern: And people get upset
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 8:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given substep with param1 <name1> and param2 <name2>] @ 9:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given substep with param1 <name1> and param2 <name2> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given substep with param1 <name1> and param2 <name2>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name1 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(32)
[main] DEBUG com.technophobia.substeps.model.Step - adding name2 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given substep with param1 <name1> and param2 <name2>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given substep with param1 <name1> and param2 <name2>
pattern: Given substep with param1 "?([^"]*)"? and param2 "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then method with param <name1>] @ 10:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then method with param <name1> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then method with param <name1>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name1 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then method with param <name1>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then method with param <name1>
pattern: Then method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then another method with param <name2>] @ 11:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then another method with param <name2> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then another method with param <name2>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name2 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then another method with param <name2>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then another method with param <name2>
pattern: Then another method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 12:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given a step with a parameter <parameter>] @ 13:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a step with a parameter <parameter> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given a step with a parameter <parameter>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding parameter as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given a step with a parameter <parameter>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given a step with a parameter <parameter>
pattern: Given a step with a parameter "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then the substep gets the whole <parameter>] @ 14:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then the substep gets the whole <parameter> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then the substep gets the whole <parameter>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding parameter as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then the substep gets the whole <parameter>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then the substep gets the whole <parameter>
pattern: Then the substep gets the whole "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		] @ 15:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given a substep] @ 16:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given a substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given a substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given a substep
pattern: Given a substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Given something] @ 17:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 18:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define:  Given another substep] @ 19:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given another substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given another substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given another substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given another substep
pattern: Given another substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 20:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 21:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define:  Given yet another substep] @ 22:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given yet another substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given yet another substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given yet another substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given yet another substep
pattern: Given yet another substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 23:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  ] @ 24:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Then a method with a quoted '<param>' ] @ 25:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then a method with a quoted '<param>' isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then a method with a quoted '<param>'
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding param as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then a method with a quoted '<param>'
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then a method with a quoted '<param>'
pattern: Then a method with a quoted '"?([^"]*)"?'
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[	Then method with param <param>    			] @ 26:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then method with param <param> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then method with param <param>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding param as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then method with param <param>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then method with param <param>
pattern: Then method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 27:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: A step def that isn't actually called] @ 28:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: A step def that isn't actually called isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: A step def that isn't actually called
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: A step def that isn't actually called
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: A step def that isn't actually called
pattern: A step def that isn't actually called
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 29:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[               	] @ 30:simple.substeps
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Feature: Some Feature
In order to develop a new cuke framework I need some tests

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: Execute simple cuke annotated methods
Given something
Given series of substeps is executed
Given substep with param1 "wobble" and param2 "wibble"
When an event occurs

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: A second scenario
Then bad things happen
And people get upset
Whatever yee hah
And a parameter fred is supplied

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given series of substeps is executed isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given substep with param1 "wobble" and param2 "wibble" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: When an event occurs isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then bad things happen isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And people get upset isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Whatever yee hah isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And a parameter fred is supplied isSubstep: false
[main] DEBUG com.technophobia.substeps.runner.TestParameters - Current dir is: /tmp/tmp6s6ktyp6/substeps-core/.
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Given something
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Given something
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Given something]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent != null for stepLine: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - buildSubstepNode: scenarioDescription: Execute simple cuke annotated methods step line Given series of substeps is executed param line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - init param vals as strict
[main] DEBUG com.technophobia.substeps.model.ParentStep - initialiseParamValues with line: Given series of substeps is executed
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs String[] with pattern: Given series of substeps is executed and sourceStr: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: When an event occurs
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: When an event occurs
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [When an event occurs]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Then bad things happen
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Then bad things happen]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: And people get upset
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: And people get upset
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [And people get upset]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent != null for stepLine: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - buildSubstepNode: scenarioDescription: Execute simple cuke annotated methods step line Given substep with param1 "wobble" and param2 "wibble" param line: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - init param vals as strict
[main] DEBUG com.technophobia.substeps.model.ParentStep - initialiseParamValues with line: Given substep with param1 "wobble" and param2 "wibble"
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs String[] with pattern: Given substep with param1 "?([^"]*)"? and param2 "?([^"]*)"? and sourceStr: Given substep with param1 "wobble" and param2 "wibble"
[main] DEBUG com.technophobia.substeps.model.Util - returning args: [wobble] [wibble] 
[main] DEBUG com.technophobia.substeps.model.ParentStep - putting value: wobble under key: name1 i 0
[main] DEBUG com.technophobia.substeps.model.ParentStep - putting value: wibble under key: name2 i 1
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then method with param <name1>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <name1> with: wobble in string: [Then method with param <name1>]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Then method with param <name1>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Then method with param <name1>
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Then method with param <name1>]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then method with param <name1>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <name1> with: wobble in string: [Then method with param <name1>]
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - getStepMethodArguments for: Then method with param wobble
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then method with param wobble
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs List<Object> with pattern: Then method with param ([^"]*) and sourceStr: Then method with param wobble
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then another method with param <name2>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <name2> with: wibble in string: [Then another method with param <name2>]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Then another method with param <name2>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Then another method with param <name2>
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Then another method with param <name2>]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then another method with param <name2>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <name2> with: wibble in string: [Then another method with param <name2>]
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - getStepMethodArguments for: Then another method with param wibble
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then another method with param wibble
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs List<Object> with pattern: Then another method with param ([^"]*) and sourceStr: Then another method with param wibble
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: When an event occurs
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: When an event occurs
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [When an event occurs]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Then bad things happen
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Then bad things happen]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: And people get upset
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: And people get upset
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [And people get upset]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Whatever yee hah
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Whatever yee hah
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Whatever yee hah]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: And a parameter fred is supplied
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: And a parameter fred is supplied
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [And a parameter fred is supplied]
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - getStepMethodArguments for: And a parameter fred is supplied
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: And a parameter fred is supplied
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs List<Object> with pattern: And a parameter ([^"]*) is supplied and sourceStr: And a parameter fred is supplied
[main] INFO  com.technophobia.substeps.runner.ExecutionNodeRunner - ** Uncalled Step implementations in scope, this is suspect if these implementations are in your projects domain:

public void com.technophobia.substeps.steps.TestStepImplementations.uncalled()
public void com.technophobia.substeps.steps.TestStepImplementations.methodWithTableArgument(java.util.List)
public void com.technophobia.substeps.steps.TestStepImplementations.sendKeysById(java.lang.String,java.lang.String)


[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Some Feature line: Some Feature
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Feature set line: null
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Execute simple cuke annotated methods line: Execute simple cuke annotated methods
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Some Feature line: Some Feature
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Given something line: Given something
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Execute simple cuke annotated methods line: Execute simple cuke annotated methods
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Given something line: Given something
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Given series of substeps is executed line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Execute simple cuke annotated methods line: Execute simple cuke annotated methods
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Given series of substeps is executed line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - proccessing children...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: When an event occurs line: When an event occurs
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Given series of substeps is executed line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: When an event occurs line: When an event occurs
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Then bad things happen line: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Given series of substeps is executed line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Then bad things happen line: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: And people get upset line: And people get upset
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Given series of substeps is executed line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: And people get upset line: And people get upset
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Given substep with param1 "wobble" and param2 "wibble" line: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Execute simple cuke annotated methods line: Execute simple cuke annotated methods
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Given substep with param1 "wobble" and param2 "wibble" line: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - proccessing children...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Then method with param wobble line: Then method with param wobble
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Given substep with param1 "wobble" and param2 "wibble" line: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Then method with param wobble line: Then method with param wobble
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Then another method with param wibble line: Then another method with param wibble
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Given substep with param1 "wobble" and param2 "wibble" line: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Then another method with param wibble line: Then another method with param wibble
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: When an event occurs line: When an event occurs
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - got existing usages of node: 
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - already found: u: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Execute simple cuke annotated methods line: Execute simple cuke annotated methods
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: When an event occurs line: When an event occurs
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: A second scenario line: A second scenario
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Some Feature line: Some Feature
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Then bad things happen line: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - got existing usages of node: 
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - already found: u: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: A second scenario line: A second scenario
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Then bad things happen line: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: And people get upset line: And people get upset
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - got existing usages of node: 
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - already found: u: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: A second scenario line: A second scenario
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: And people get upset line: And people get upset
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Whatever yee hah line: Whatever yee hah
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: A second scenario line: A second scenario
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Whatever yee hah line: Whatever yee hah
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: And a parameter fred is supplied line: And a parameter fred is supplied
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: A second scenario line: A second scenario
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: And a parameter fred is supplied line: And a parameter fred is supplied
[main] WARN  com.technophobia.substeps.runner.ExecutionNodeRunner - ** Substep definitions not called in current substep execution scope...

	A step def that isn't actually called @ simple.substeps:28
	Given a step with a parameter <parameter> @ simple.substeps:13
	Given a substep @ simple.substeps:16
	Given another substep @ simple.substeps:19
	Given yet another substep @ simple.substeps:22
	Then a method with a quoted '<param>' @ simple.substeps:25

rootNode:
id: 185, type: RootNode, description: Feature set
	id: 184, type: FeatureNode, description: Some Feature
		id: 178, type: BasicScenarioNode, description: Execute simple cuke annotated methods
			id: 169, type: StepImplementationNode, description: Given something impl: TestStepImplementations.given
			id: 173, type: SubstepNode, description: Given series of substeps is executed
				id: 170, type: StepImplementationNode, description: When an event occurs impl: TestStepImplementations.when
				id: 171, type: StepImplementationNode, description: Then bad things happen impl: TestStepImplementations.then
				id: 172, type: StepImplementationNode, description: And people get upset impl: TestStepImplementations.and
			id: 176, type: SubstepNode, description: Given substep with param1 "wobble" and param2 "wibble"
				id: 174, type: StepImplementationNode, description: Then method with param wobble impl: TestStepImplementations.meth1
				id: 175, type: StepImplementationNode, description: Then another method with param wibble impl: TestStepImplementations.meth2
			id: 177, type: StepImplementationNode, description: When an event occurs impl: TestStepImplementations.when
		id: 183, type: BasicScenarioNode, description: A second scenario
			id: 179, type: StepImplementationNode, description: Then bad things happen impl: TestStepImplementations.then
			id: 180, type: StepImplementationNode, description: And people get upset impl: TestStepImplementations.and
			id: 181, type: StepImplementationNode, description: Whatever yee hah impl: TestStepImplementations.whatever
			id: 182, type: StepImplementationNode, description: And a parameter fred is supplied impl: TestStepImplementations.param
check
ExecutionConfig [description=Feature set, tags=null, nonFatalTags=null, featureFile=./target/test-classes/features/example.feature, subStepsFileName=./target/test-classes/substeps/simple.substeps, strict=true, fastFailParseErrors=true, nonStrictKeywordPrecedence=null, stepImplementationClassNames=null, initialisationClass=null, stepImplementationClasses=[class com.technophobia.substeps.steps.TestStepImplementations, class com.technophobia.substeps.runner.DryRunTest$TestInitialisationClass], initialisationClasses=[class com.technophobia.substeps.runner.DryRunTest$TestInitialisationClass], executionListeners=null]
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 1:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Copyright Technophobia Ltd 2012] @ 2:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# a definition of a substep] @ 3:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given series of substeps is executed] @ 4:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given series of substeps is executed isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given series of substeps is executed
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given series of substeps is executed
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given series of substeps is executed
pattern: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		When an event occurs ] @ 5:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: When an event occurs isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: When an event occurs
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: When an event occurs
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: When an event occurs
pattern: When an event occurs
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then bad things happen ] @ 6:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then bad things happen isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then bad things happen
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then bad things happen
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then bad things happen
pattern: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		And people get upset] @ 7:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And people get upset isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: And people get upset
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: And people get upset
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: And people get upset
pattern: And people get upset
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 8:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given substep with param1 <name1> and param2 <name2>] @ 9:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given substep with param1 <name1> and param2 <name2> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given substep with param1 <name1> and param2 <name2>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name1 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(32)
[main] DEBUG com.technophobia.substeps.model.Step - adding name2 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given substep with param1 <name1> and param2 <name2>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given substep with param1 <name1> and param2 <name2>
pattern: Given substep with param1 "?([^"]*)"? and param2 "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then method with param <name1>] @ 10:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then method with param <name1> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then method with param <name1>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name1 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then method with param <name1>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then method with param <name1>
pattern: Then method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then another method with param <name2>] @ 11:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then another method with param <name2> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then another method with param <name2>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name2 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then another method with param <name2>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then another method with param <name2>
pattern: Then another method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 12:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given a step with a parameter <parameter>] @ 13:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a step with a parameter <parameter> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given a step with a parameter <parameter>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding parameter as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given a step with a parameter <parameter>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given a step with a parameter <parameter>
pattern: Given a step with a parameter "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then the substep gets the whole <parameter>] @ 14:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then the substep gets the whole <parameter> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then the substep gets the whole <parameter>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding parameter as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then the substep gets the whole <parameter>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then the substep gets the whole <parameter>
pattern: Then the substep gets the whole "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		] @ 15:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given a substep] @ 16:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given a substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given a substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given a substep
pattern: Given a substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Given something] @ 17:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 18:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define:  Given another substep] @ 19:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given another substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given another substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given another substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given another substep
pattern: Given another substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 20:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 21:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define:  Given yet another substep] @ 22:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given yet another substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given yet another substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given yet another substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given yet another substep
pattern: Given yet another substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 23:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  ] @ 24:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Then a method with a quoted '<param>' ] @ 25:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then a method with a quoted '<param>' isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then a method with a quoted '<param>'
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding param as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then a method with a quoted '<param>'
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then a method with a quoted '<param>'
pattern: Then a method with a quoted '"?([^"]*)"?'
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[	Then method with param <param>    			] @ 26:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then method with param <param> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then method with param <param>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding param as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then method with param <param>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then method with param <param>
pattern: Then method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 27:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: A step def that isn't actually called] @ 28:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: A step def that isn't actually called isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: A step def that isn't actually called
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: A step def that isn't actually called
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: A step def that isn't actually called
pattern: A step def that isn't actually called
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 29:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[               	] @ 30:simple.substeps
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Feature: Some Feature
In order to develop a new cuke framework I need some tests

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: Execute simple cuke annotated methods
Given something
Given series of substeps is executed
Given substep with param1 "wobble" and param2 "wibble"
When an event occurs

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: A second scenario
Then bad things happen
And people get upset
Whatever yee hah
And a parameter fred is supplied

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given series of substeps is executed isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given substep with param1 "wobble" and param2 "wibble" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: When an event occurs isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then bad things happen isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And people get upset isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Whatever yee hah isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And a parameter fred is supplied isSubstep: false
[main] DEBUG com.technophobia.substeps.runner.TestParameters - Current dir is: /tmp/tmp6s6ktyp6/substeps-core/.
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Given something
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Given something
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Given something]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent != null for stepLine: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - buildSubstepNode: scenarioDescription: Execute simple cuke annotated methods step line Given series of substeps is executed param line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - init param vals as strict
[main] DEBUG com.technophobia.substeps.model.ParentStep - initialiseParamValues with line: Given series of substeps is executed
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs String[] with pattern: Given series of substeps is executed and sourceStr: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: When an event occurs
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: When an event occurs
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [When an event occurs]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Then bad things happen
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Then bad things happen]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: And people get upset
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: And people get upset
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [And people get upset]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent != null for stepLine: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - buildSubstepNode: scenarioDescription: Execute simple cuke annotated methods step line Given substep with param1 "wobble" and param2 "wibble" param line: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - init param vals as strict
[main] DEBUG com.technophobia.substeps.model.ParentStep - initialiseParamValues with line: Given substep with param1 "wobble" and param2 "wibble"
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs String[] with pattern: Given substep with param1 "?([^"]*)"? and param2 "?([^"]*)"? and sourceStr: Given substep with param1 "wobble" and param2 "wibble"
[main] DEBUG com.technophobia.substeps.model.Util - returning args: [wobble] [wibble] 
[main] DEBUG com.technophobia.substeps.model.ParentStep - putting value: wobble under key: name1 i 0
[main] DEBUG com.technophobia.substeps.model.ParentStep - putting value: wibble under key: name2 i 1
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then method with param <name1>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <name1> with: wobble in string: [Then method with param <name1>]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Then method with param <name1>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Then method with param <name1>
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Then method with param <name1>]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then method with param <name1>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <name1> with: wobble in string: [Then method with param <name1>]
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - getStepMethodArguments for: Then method with param wobble
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then method with param wobble
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs List<Object> with pattern: Then method with param ([^"]*) and sourceStr: Then method with param wobble
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then another method with param <name2>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <name2> with: wibble in string: [Then another method with param <name2>]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Then another method with param <name2>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Then another method with param <name2>
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Then another method with param <name2>]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then another method with param <name2>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <name2> with: wibble in string: [Then another method with param <name2>]
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - getStepMethodArguments for: Then another method with param wibble
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then another method with param wibble
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs List<Object> with pattern: Then another method with param ([^"]*) and sourceStr: Then another method with param wibble
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: When an event occurs
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: When an event occurs
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [When an event occurs]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Then bad things happen
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Then bad things happen]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: And people get upset
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: And people get upset
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [And people get upset]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Whatever yee hah
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Whatever yee hah
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Whatever yee hah]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: And a parameter fred is supplied
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: And a parameter fred is supplied
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [And a parameter fred is supplied]
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - getStepMethodArguments for: And a parameter fred is supplied
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: And a parameter fred is supplied
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs List<Object> with pattern: And a parameter ([^"]*) is supplied and sourceStr: And a parameter fred is supplied
[main] INFO  com.technophobia.substeps.runner.ExecutionNodeRunner - ** Uncalled Step implementations in scope, this is suspect if these implementations are in your projects domain:

public void com.technophobia.substeps.steps.TestStepImplementations.uncalled()
public void com.technophobia.substeps.steps.TestStepImplementations.methodWithTableArgument(java.util.List)
public void com.technophobia.substeps.steps.TestStepImplementations.sendKeysById(java.lang.String,java.lang.String)


[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Some Feature line: Some Feature
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Feature set line: null
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Execute simple cuke annotated methods line: Execute simple cuke annotated methods
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Some Feature line: Some Feature
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Given something line: Given something
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Execute simple cuke annotated methods line: Execute simple cuke annotated methods
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Given something line: Given something
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Given series of substeps is executed line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Execute simple cuke annotated methods line: Execute simple cuke annotated methods
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Given series of substeps is executed line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - proccessing children...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: When an event occurs line: When an event occurs
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Given series of substeps is executed line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: When an event occurs line: When an event occurs
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Then bad things happen line: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Given series of substeps is executed line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Then bad things happen line: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: And people get upset line: And people get upset
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Given series of substeps is executed line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: And people get upset line: And people get upset
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Given substep with param1 "wobble" and param2 "wibble" line: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Execute simple cuke annotated methods line: Execute simple cuke annotated methods
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Given substep with param1 "wobble" and param2 "wibble" line: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - proccessing children...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Then method with param wobble line: Then method with param wobble
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Given substep with param1 "wobble" and param2 "wibble" line: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Then method with param wobble line: Then method with param wobble
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Then another method with param wibble line: Then another method with param wibble
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Given substep with param1 "wobble" and param2 "wibble" line: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Then another method with param wibble line: Then another method with param wibble
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: When an event occurs line: When an event occurs
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - got existing usages of node: 
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - already found: u: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Execute simple cuke annotated methods line: Execute simple cuke annotated methods
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: When an event occurs line: When an event occurs
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: A second scenario line: A second scenario
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Some Feature line: Some Feature
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Then bad things happen line: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - got existing usages of node: 
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - already found: u: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: A second scenario line: A second scenario
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Then bad things happen line: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: And people get upset line: And people get upset
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - got existing usages of node: 
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - already found: u: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: A second scenario line: A second scenario
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: And people get upset line: And people get upset
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Whatever yee hah line: Whatever yee hah
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: A second scenario line: A second scenario
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Whatever yee hah line: Whatever yee hah
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: And a parameter fred is supplied line: And a parameter fred is supplied
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: A second scenario line: A second scenario
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: And a parameter fred is supplied line: And a parameter fred is supplied
[main] WARN  com.technophobia.substeps.runner.ExecutionNodeRunner - ** Substep definitions not called in current substep execution scope...

	A step def that isn't actually called @ simple.substeps:28
	Given a step with a parameter <parameter> @ simple.substeps:13
	Given a substep @ simple.substeps:16
	Given another substep @ simple.substeps:19
	Given yet another substep @ simple.substeps:22
	Then a method with a quoted '<param>' @ simple.substeps:25

rootNode:
id: 202, type: RootNode, description: Feature set
	id: 201, type: FeatureNode, description: Some Feature
		id: 195, type: BasicScenarioNode, description: Execute simple cuke annotated methods
			id: 186, type: StepImplementationNode, description: Given something impl: TestStepImplementations.given
			id: 190, type: SubstepNode, description: Given series of substeps is executed
				id: 187, type: StepImplementationNode, description: When an event occurs impl: TestStepImplementations.when
				id: 188, type: StepImplementationNode, description: Then bad things happen impl: TestStepImplementations.then
				id: 189, type: StepImplementationNode, description: And people get upset impl: TestStepImplementations.and
			id: 193, type: SubstepNode, description: Given substep with param1 "wobble" and param2 "wibble"
				id: 191, type: StepImplementationNode, description: Then method with param wobble impl: TestStepImplementations.meth1
				id: 192, type: StepImplementationNode, description: Then another method with param wibble impl: TestStepImplementations.meth2
			id: 194, type: StepImplementationNode, description: When an event occurs impl: TestStepImplementations.when
		id: 200, type: BasicScenarioNode, description: A second scenario
			id: 196, type: StepImplementationNode, description: Then bad things happen impl: TestStepImplementations.then
			id: 197, type: StepImplementationNode, description: And people get upset impl: TestStepImplementations.and
			id: 198, type: StepImplementationNode, description: Whatever yee hah impl: TestStepImplementations.whatever
			id: 199, type: StepImplementationNode, description: And a parameter fred is supplied impl: TestStepImplementations.param
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: SUITE
[main] WARN  com.technophobia.substeps.runner.node.AbstractNodeRunner - setup failed
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.technophobia.substeps.execution.ImplementationCache.executeMethods(ImplementationCache.java:96)
	at com.technophobia.substeps.runner.setupteardown.SetupAndTearDown.runAllMethods(SetupAndTearDown.java:108)
	at com.technophobia.substeps.runner.setupteardown.SetupAndTearDown.runBeforeAll(SetupAndTearDown.java:66)
	at com.technophobia.substeps.runner.setupteardown.SetupAndTearDown.runSetup(SetupAndTearDown.java:135)
	at com.technophobia.substeps.runner.node.AbstractNodeRunner.runSetup(AbstractNodeRunner.java:110)
	at com.technophobia.substeps.runner.node.AbstractNodeRunner.beforeExecute(AbstractNodeRunner.java:87)
	at com.technophobia.substeps.runner.node.AbstractNodeRunner.run(AbstractNodeRunner.java:44)
	at com.technophobia.substeps.runner.ExecutionNodeRunner.run(ExecutionNodeRunner.java:313)
	at com.technophobia.substeps.runner.DryRunTest.testNoSetupOrTearDownIsCalled(DryRunTest.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
Caused by: java.lang.AssertionError: Setup method should not have been invoked since we were on a dry run
	at org.junit.Assert.fail(Assert.java:88)
	at com.technophobia.substeps.runner.DryRunTest$TestInitialisationClass.setupMethod(DryRunTest.java:140)
	... 38 more
[main] INFO  com.technophobia.substeps.execution.node.RootNodeExecutionContext - SubstepExecutionFailure @ id: 202, type: RootNode, description: Feature set
	id: 201, type: FeatureNode, description: Some Feature
		id: 195, type: BasicScenarioNode, description: Execute simple cuke annotated methods
			id: 186, type: StepImplementationNode, description: Given something impl: TestStepImplementations.given
			id: 190, type: SubstepNode, description: Given series of substeps is executed
				id: 187, type: StepImplementationNode, description: When an event occurs impl: TestStepImplementations.when
				id: 188, type: StepImplementationNode, description: Then bad things happen impl: TestStepImplementations.then
				id: 189, type: StepImplementationNode, description: And people get upset impl: TestStepImplementations.and
			id: 193, type: SubstepNode, description: Given substep with param1 "wobble" and param2 "wibble"
				id: 191, type: StepImplementationNode, description: Then method with param wobble impl: TestStepImplementations.meth1
				id: 192, type: StepImplementationNode, description: Then another method with param wibble impl: TestStepImplementations.meth2
			id: 194, type: StepImplementationNode, description: When an event occurs impl: TestStepImplementations.when
		id: 200, type: BasicScenarioNode, description: A second scenario
			id: 196, type: StepImplementationNode, description: Then bad things happen impl: TestStepImplementations.then
			id: 197, type: StepImplementationNode, description: And people get upset impl: TestStepImplementations.and
			id: 198, type: StepImplementationNode, description: Whatever yee hah impl: TestStepImplementations.whatever
			id: 199, type: StepImplementationNode, description: And a parameter fred is supplied impl: TestStepImplementations.param
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.technophobia.substeps.execution.ImplementationCache.executeMethods(ImplementationCache.java:96)
	at com.technophobia.substeps.runner.setupteardown.SetupAndTearDown.runAllMethods(SetupAndTearDown.java:108)

[main] DEBUG com.technophobia.substeps.runner.node.AbstractNodeRunner - shouldContinue = false for com.technophobia.substeps.execution.node.RootNode@22cb8e5f
[main] INFO  com.technophobia.substeps.execution.node.RootNodeExecutionContext - SubstepExecutionFailure @ id: 202, type: RootNode, description: Feature set
	id: 201, type: FeatureNode, description: Some Feature
		id: 195, type: BasicScenarioNode, description: Execute simple cuke annotated methods
			id: 186, type: StepImplementationNode, description: Given something impl: TestStepImplementations.given
			id: 190, type: SubstepNode, description: Given series of substeps is executed
				id: 187, type: StepImplementationNode, description: When an event occurs impl: TestStepImplementations.when
				id: 188, type: StepImplementationNode, description: Then bad things happen impl: TestStepImplementations.then
				id: 189, type: StepImplementationNode, description: And people get upset impl: TestStepImplementations.and
			id: 193, type: SubstepNode, description: Given substep with param1 "wobble" and param2 "wibble"
				id: 191, type: StepImplementationNode, description: Then method with param wobble impl: TestStepImplementations.meth1
				id: 192, type: StepImplementationNode, description: Then another method with param wibble impl: TestStepImplementations.meth2
			id: 194, type: StepImplementationNode, description: When an event occurs impl: TestStepImplementations.when
		id: 200, type: BasicScenarioNode, description: A second scenario
			id: 196, type: StepImplementationNode, description: Then bad things happen impl: TestStepImplementations.then
			id: 197, type: StepImplementationNode, description: And people get upset impl: TestStepImplementations.and
			id: 198, type: StepImplementationNode, description: Whatever yee hah impl: TestStepImplementations.whatever
			id: 199, type: StepImplementationNode, description: And a parameter fred is supplied impl: TestStepImplementations.param
java.lang.IllegalStateException: No tests executed
	at com.technophobia.substeps.runner.ExecutionNodeRunner.run(ExecutionNodeRunner.java:317)
	at com.technophobia.substeps.runner.DryRunTest.testNoSetupOrTearDownIsCalled(DryRunTest.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
ExecutionConfig [description=Feature set, tags=null, nonFatalTags=null, featureFile=./target/test-classes/features/example.feature, subStepsFileName=./target/test-classes/substeps/simple.substeps, strict=true, fastFailParseErrors=true, nonStrictKeywordPrecedence=null, stepImplementationClassNames=null, initialisationClass=null, stepImplementationClasses=[class com.technophobia.substeps.steps.TestStepImplementations, class com.technophobia.substeps.runner.DryRunTest$TestInitialisationClass], initialisationClasses=[class com.technophobia.substeps.runner.DryRunTest$TestInitialisationClass], executionListeners=null]
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 1:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# Copyright Technophobia Ltd 2012] @ 2:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[# a definition of a substep] @ 3:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given series of substeps is executed] @ 4:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given series of substeps is executed isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given series of substeps is executed
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given series of substeps is executed
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given series of substeps is executed
pattern: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		When an event occurs ] @ 5:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: When an event occurs isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: When an event occurs
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: When an event occurs
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: When an event occurs
pattern: When an event occurs
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then bad things happen ] @ 6:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then bad things happen isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then bad things happen
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then bad things happen
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then bad things happen
pattern: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		And people get upset] @ 7:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And people get upset isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: And people get upset
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: And people get upset
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: And people get upset
pattern: And people get upset
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 8:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given substep with param1 <name1> and param2 <name2>] @ 9:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given substep with param1 <name1> and param2 <name2> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given substep with param1 <name1> and param2 <name2>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name1 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(32)
[main] DEBUG com.technophobia.substeps.model.Step - adding name2 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given substep with param1 <name1> and param2 <name2>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given substep with param1 <name1> and param2 <name2>
pattern: Given substep with param1 "?([^"]*)"? and param2 "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then method with param <name1>] @ 10:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then method with param <name1> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then method with param <name1>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name1 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then method with param <name1>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then method with param <name1>
pattern: Then method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then another method with param <name2>] @ 11:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then another method with param <name2> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then another method with param <name2>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding name2 as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then another method with param <name2>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then another method with param <name2>
pattern: Then another method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 12:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given a step with a parameter <parameter>] @ 13:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a step with a parameter <parameter> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given a step with a parameter <parameter>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding parameter as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given a step with a parameter <parameter>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given a step with a parameter <parameter>
pattern: Given a step with a parameter "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		Then the substep gets the whole <parameter>] @ 14:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then the substep gets the whole <parameter> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then the substep gets the whole <parameter>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding parameter as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then the substep gets the whole <parameter>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then the substep gets the whole <parameter>
pattern: Then the substep gets the whole "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[		] @ 15:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Given a substep] @ 16:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given a substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given a substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given a substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given a substep
pattern: Given a substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[    Given something] @ 17:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 18:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define:  Given another substep] @ 19:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given another substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given another substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given another substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given another substep
pattern: Given another substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 20:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 21:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define:  Given yet another substep] @ 22:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given yet another substep isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given yet another substep
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given yet another substep
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given yet another substep
pattern: Given yet another substep
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 23:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  ] @ 24:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: Then a method with a quoted '<param>' ] @ 25:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then a method with a quoted '<param>' isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then a method with a quoted '<param>'
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding param as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then a method with a quoted '<param>'
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then a method with a quoted '<param>'
pattern: Then a method with a quoted '"?([^"]*)"?'
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[	Then method with param <param>    			] @ 26:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then method with param <param> isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Then method with param <param>
[main] DEBUG com.technophobia.substeps.model.Step - matcher.find(0)
[main] DEBUG com.technophobia.substeps.model.Step - adding param as a paramname
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Then method with param <param>
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Then method with param <param>
pattern: Then method with param "?([^"]*)"?
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[] @ 27:simple.substeps
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[Define: A step def that isn't actually called] @ 28:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: A step def that isn't actually called isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: A step def that isn't actually called
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: A step def that isn't actually called
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: A step def that isn't actually called
pattern: A step def that isn't actually called
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[  Given something] @ 29:simple.substeps
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: true
[main] DEBUG com.technophobia.substeps.model.Step - calling setParamAndParamNames
[main] DEBUG com.technophobia.substeps.model.Step - setParamAndParamNames for line: Given something
[main] DEBUG com.technophobia.substeps.model.Step - line pre replace: Given something
pattern: null
[main] DEBUG com.technophobia.substeps.model.Step - line post replace: Given something
pattern: Given something
[main] TRACE com.technophobia.substeps.runner.syntax.SubStepDefinitionParser - substep line[               	] @ 30:simple.substeps
[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Feature: Some Feature
In order to develop a new cuke framework I need some tests

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: Execute simple cuke annotated methods
Given something
Given series of substeps is executed
Given substep with param1 "wobble" and param2 "wibble"
When an event occurs

[main] TRACE com.technophobia.substeps.runner.FeatureFileParser - topLevelElement:
Scenario: A second scenario
Then bad things happen
And people get upset
Whatever yee hah
And a parameter fred is supplied

[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given something isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given series of substeps is executed isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Given substep with param1 "wobble" and param2 "wibble" isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: When an event occurs isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Then bad things happen isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And people get upset isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: Whatever yee hah isSubstep: false
[main] DEBUG com.technophobia.substeps.model.Step - Step ctor() for line: And a parameter fred is supplied isSubstep: false
[main] DEBUG com.technophobia.substeps.runner.TestParameters - Current dir is: /tmp/tmp6s6ktyp6/substeps-core/.
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Given something
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Given something
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Given something]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent != null for stepLine: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - buildSubstepNode: scenarioDescription: Execute simple cuke annotated methods step line Given series of substeps is executed param line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - init param vals as strict
[main] DEBUG com.technophobia.substeps.model.ParentStep - initialiseParamValues with line: Given series of substeps is executed
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs String[] with pattern: Given series of substeps is executed and sourceStr: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: When an event occurs
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: When an event occurs
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [When an event occurs]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Then bad things happen
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Then bad things happen]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: And people get upset
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: And people get upset
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [And people get upset]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent != null for stepLine: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - buildSubstepNode: scenarioDescription: Execute simple cuke annotated methods step line Given substep with param1 "wobble" and param2 "wibble" param line: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - init param vals as strict
[main] DEBUG com.technophobia.substeps.model.ParentStep - initialiseParamValues with line: Given substep with param1 "wobble" and param2 "wibble"
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs String[] with pattern: Given substep with param1 "?([^"]*)"? and param2 "?([^"]*)"? and sourceStr: Given substep with param1 "wobble" and param2 "wibble"
[main] DEBUG com.technophobia.substeps.model.Util - returning args: [wobble] [wibble] 
[main] DEBUG com.technophobia.substeps.model.ParentStep - putting value: wobble under key: name1 i 0
[main] DEBUG com.technophobia.substeps.model.ParentStep - putting value: wibble under key: name2 i 1
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then method with param <name1>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <name1> with: wobble in string: [Then method with param <name1>]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Then method with param <name1>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Then method with param <name1>
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Then method with param <name1>]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then method with param <name1>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <name1> with: wobble in string: [Then method with param <name1>]
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - getStepMethodArguments for: Then method with param wobble
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then method with param wobble
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs List<Object> with pattern: Then method with param ([^"]*) and sourceStr: Then method with param wobble
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then another method with param <name2>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <name2> with: wibble in string: [Then another method with param <name2>]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Then another method with param <name2>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Then another method with param <name2>
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Then another method with param <name2>]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then another method with param <name2>
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - parentArguments != null && findParamPattern.matcher
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - replacing: <name2> with: wibble in string: [Then another method with param <name2>]
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - getStepMethodArguments for: Then another method with param wibble
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: Then another method with param wibble
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs List<Object> with pattern: Then another method with param ([^"]*) and sourceStr: Then another method with param wibble
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: When an event occurs
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: When an event occurs
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [When an event occurs]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Then bad things happen
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Then bad things happen]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: And people get upset
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: And people get upset
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [And people get upset]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: Whatever yee hah
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: Whatever yee hah
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [Whatever yee hah]
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - locateSubStepsParent for step line: And a parameter fred is supplied
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substepsParent == null for stepLine: And a parameter fred is supplied
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - looking for impl for step:  [And a parameter fred is supplied]
[main] DEBUG com.technophobia.substeps.runner.builder.SubstepNodeBuilder - getStepMethodArguments for: And a parameter fred is supplied
[main] TRACE com.technophobia.substeps.runner.builder.SubstepNodeBuilder - substitutePlaceholders stepParameter: And a parameter fred is supplied
[main] DEBUG com.technophobia.substeps.model.Util - Util getArgs List<Object> with pattern: And a parameter ([^"]*) is supplied and sourceStr: And a parameter fred is supplied
[main] INFO  com.technophobia.substeps.runner.ExecutionNodeRunner - ** Uncalled Step implementations in scope, this is suspect if these implementations are in your projects domain:

public void com.technophobia.substeps.steps.TestStepImplementations.uncalled()
public void com.technophobia.substeps.steps.TestStepImplementations.methodWithTableArgument(java.util.List)
public void com.technophobia.substeps.steps.TestStepImplementations.sendKeysById(java.lang.String,java.lang.String)


[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Some Feature line: Some Feature
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Feature set line: null
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Execute simple cuke annotated methods line: Execute simple cuke annotated methods
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Some Feature line: Some Feature
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Given something line: Given something
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Execute simple cuke annotated methods line: Execute simple cuke annotated methods
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Given something line: Given something
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Given series of substeps is executed line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Execute simple cuke annotated methods line: Execute simple cuke annotated methods
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Given series of substeps is executed line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - proccessing children...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: When an event occurs line: When an event occurs
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Given series of substeps is executed line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: When an event occurs line: When an event occurs
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Then bad things happen line: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Given series of substeps is executed line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Then bad things happen line: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: And people get upset line: And people get upset
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Given series of substeps is executed line: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: And people get upset line: And people get upset
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Given substep with param1 "wobble" and param2 "wibble" line: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Execute simple cuke annotated methods line: Execute simple cuke annotated methods
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Given substep with param1 "wobble" and param2 "wibble" line: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - proccessing children...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Then method with param wobble line: Then method with param wobble
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Given substep with param1 "wobble" and param2 "wibble" line: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Then method with param wobble line: Then method with param wobble
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Then another method with param wibble line: Then another method with param wibble
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Given substep with param1 "wobble" and param2 "wibble" line: Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Then another method with param wibble line: Then another method with param wibble
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: When an event occurs line: When an event occurs
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - got existing usages of node: 
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - already found: u: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Execute simple cuke annotated methods line: Execute simple cuke annotated methods
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: When an event occurs line: When an event occurs
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: A second scenario line: A second scenario
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: Some Feature line: Some Feature
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Then bad things happen line: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - got existing usages of node: 
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - already found: u: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: A second scenario line: A second scenario
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Then bad things happen line: Then bad things happen
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: And people get upset line: And people get upset
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - got existing usages of node: 
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - already found: u: Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: A second scenario line: A second scenario
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: And people get upset line: And people get upset
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: Whatever yee hah line: Whatever yee hah
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: A second scenario line: A second scenario
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: Whatever yee hah line: Whatever yee hah
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - building usage for desc: And a parameter fred is supplied line: And a parameter fred is supplied
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - no uses already for node...
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - adding used by descr: A second scenario line: A second scenario
[main] TRACE com.technophobia.substeps.runner.ExecutionNodeRunner - looking at node description: And a parameter fred is supplied line: And a parameter fred is supplied
[main] WARN  com.technophobia.substeps.runner.ExecutionNodeRunner - ** Substep definitions not called in current substep execution scope...

	A step def that isn't actually called @ simple.substeps:28
	Given a step with a parameter <parameter> @ simple.substeps:13
	Given a substep @ simple.substeps:16
	Given another substep @ simple.substeps:19
	Given yet another substep @ simple.substeps:22
	Then a method with a quoted '<param>' @ simple.substeps:25

rootNode:
id: 219, type: RootNode, description: Feature set
	id: 218, type: FeatureNode, description: Some Feature
		id: 212, type: BasicScenarioNode, description: Execute simple cuke annotated methods
			id: 203, type: StepImplementationNode, description: Given something impl: TestStepImplementations.given
			id: 207, type: SubstepNode, description: Given series of substeps is executed
				id: 204, type: StepImplementationNode, description: When an event occurs impl: TestStepImplementations.when
				id: 205, type: StepImplementationNode, description: Then bad things happen impl: TestStepImplementations.then
				id: 206, type: StepImplementationNode, description: And people get upset impl: TestStepImplementations.and
			id: 210, type: SubstepNode, description: Given substep with param1 "wobble" and param2 "wibble"
				id: 208, type: StepImplementationNode, description: Then method with param wobble impl: TestStepImplementations.meth1
				id: 209, type: StepImplementationNode, description: Then another method with param wibble impl: TestStepImplementations.meth2
			id: 211, type: StepImplementationNode, description: When an event occurs impl: TestStepImplementations.when
		id: 217, type: BasicScenarioNode, description: A second scenario
			id: 213, type: StepImplementationNode, description: Then bad things happen impl: TestStepImplementations.then
			id: 214, type: StepImplementationNode, description: And people get upset impl: TestStepImplementations.and
			id: 215, type: StepImplementationNode, description: Whatever yee hah impl: TestStepImplementations.whatever
			id: 216, type: StepImplementationNode, description: And a parameter fred is supplied impl: TestStepImplementations.param
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: SUITE
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: FEATURE
[main] INFO  com.technophobia.substeps.runner.node.FeatureNodeRunner - Executing feature Some Feature
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: SCENARIO
[main] INFO  com.technophobia.substeps.runner.node.BasicScenarioNodeRunner - Executing scenario Execute simple cuke annotated methods
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: STEP
given
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: STEP
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: STEP
[main] DEBUG com.technophobia.substeps.runner.node.SubstepNodeRunner - Executing substep Given series of substeps is executed
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: STEP
when
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: STEP
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: STEP
then
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: STEP
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: STEP
and
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: STEP
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: STEP
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: STEP
[main] DEBUG com.technophobia.substeps.runner.node.SubstepNodeRunner - Executing substep Given substep with param1 "wobble" and param2 "wibble"
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: STEP
meth1 param wobble
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: STEP
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: STEP
meth2 param wibble
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: STEP
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: STEP
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: STEP
when
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: STEP
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: SCENARIO
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: SCENARIO
[main] INFO  com.technophobia.substeps.runner.node.BasicScenarioNodeRunner - Executing scenario A second scenario
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: STEP
then
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: STEP
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: STEP
and
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: STEP
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: STEP
yeah whatever!!!
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: STEP
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - running setup for scope: STEP
param: fred
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: STEP
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: SCENARIO
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: FEATURE
[main] TRACE com.technophobia.substeps.runner.node.AbstractNodeRunner - execute returned true
[main] TRACE com.technophobia.substeps.runner.node.RootNodeRunner - node success
[main] TRACE com.technophobia.substeps.runner.setupteardown.SetupAndTearDown - runTearDown: SUITE
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.814 sec - in com.technophobia.substeps.runner.DryRunTest
Running com.technophobia.substeps.runner.StepInitPoc
[A, B, E, C, Y, D, F]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec - in com.technophobia.substeps.runner.StepInitPoc
Running com.technophobia.substeps.scanner.ClasspathScannerTest
/tmp/tmp6s6ktyp6/substeps-core/target/test-classes:/tmp/tmp6s6ktyp6/substeps-core/target/classes:/home/jdbl/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/jdbl/.m2/repository/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar:/home/jdbl/.m2/repository/com/technophobia/substeps/substeps-core-api/1.1.3/substeps-core-api-1.1.3.jar:/home/jdbl/.m2/repository/com/technophobia/substeps/substeps-core-api/1.1.3/substeps-core-api-1.1.3-tests.jar:/home/jdbl/.m2/repository/velocity/velocity/1.5/velocity-1.5.jar:/home/jdbl/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/home/jdbl/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar:/home/jdbl/.m2/repository/org/apache/commons/commons-lang3/3.1/commons-lang3-3.1.jar:/home/jdbl/.m2/repository/commons-io/commons-io/2.1/commons-io-2.1.jar:/home/jdbl/.m2/repository/org/slf4j/slf4j-api/1.6.4/slf4j-api-1.6.4.jar:/home/jdbl/.m2/repository/org/slf4j/slf4j-log4j12/1.6.4/slf4j-log4j12-1.6.4.jar:/home/jdbl/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/home/jdbl/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/jdbl/.m2/repository/com/google/guava/guava/10.0/guava-10.0.jar:/home/jdbl/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/jdbl/.m2/repository/org/mockito/mockito-all/1.9.0-rc1/mockito-all-1.9.0-rc1.jar:/home/jdbl/.m2/repository/net/sourceforge/findbugs/annotations/1.3.2/annotations-1.3.2.jar:/home/jdbl/.m2/repository/commons-configuration/commons-configuration/1.8/commons-configuration-1.8.jar:/home/jdbl/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/home/jdbl/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/home/jdbl/.m2/repository/com/thoughtworks/xstream/xstream/1.4.2/xstream-1.4.2.jar:/home/jdbl/.m2/repository/xmlpull/xmlpull/1.1.3.1/xmlpull-1.1.3.1.jar:/home/jdbl/.m2/repository/xpp3/xpp3_min/1.1.4c/xpp3_min-1.1.4c.jar:/home/jdbl/.m2/repository/com/google/code/gson/gson/2.3.1/gson-2.3.1.jar:/home/jdbl/.m2/repository/joda-time/joda-time/2.1/joda-time-2.1.jar:
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.644 sec - in com.technophobia.substeps.scanner.ClasspathScannerTest

Results :

Tests run: 118, Failures: 0, Errors: 0, Skipped: 7

[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.5:report (report) @ substeps-core ---
[INFO] Loading execution data file /tmp/tmp6s6ktyp6/substeps-core/target/jacoco.exec
[INFO] Analyzed bundle 'SubSteps' with 392 classes
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  27.401 s
[INFO] Finished at: 2020-07-30T21:38:29Z
[INFO] ------------------------------------------------------------------------
