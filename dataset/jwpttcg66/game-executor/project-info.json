{"id":78165642,"node_id":"MDEwOlJlcG9zaXRvcnk3ODE2NTY0Mg==","name":"game-executor","full_name":"jwpttcg66/game-executor","private":false,"owner":{"login":"jwpttcg66","id":6622922,"node_id":"MDQ6VXNlcjY2MjI5MjI=","gravatar_id":"","url":"https://api.github.com/users/jwpttcg66","type":"User","site_admin":false},"description":"采用Reactor模式，注册readycreate, readyfinish事件到更新服务UpdateService，通过处理后进行模型缓存，然后将消息转化为 dispatchThread消息分配模型需要的create, update, finish的事件进行单线程循环调度 。调度过程使用了系统预置锁模型，来进行多线程唤醒机制，将所有的update循环检测进行多 线程调度，多线程更新服务使用future-listener机制，在完成调度后，根据模型状态，如果模型存活重新将消息转化为update 事件注册到dispatchThread消息分配模型进行循环处理。如果模型死亡将消息转化为readyfinish事件注册到更新服务UpdateServic进行销毁 。这个系统实现了模型自动缓存，多线程异步循环调度模型更新，自动处理模型死亡事件进行销毁。 支持将多个updater绑定到同一个更新线程上，减少线程调度。","fork":false,"url":"https://api.github.com/repos/jwpttcg66/game-executor","created_at":"2017-01-06T02:17:50Z","updated_at":"2020-03-30T06:32:15Z","pushed_at":"2017-06-01T06:45:02Z","homepage":"","size":342,"stargazers_count":24,"watchers_count":24,"language":"Java","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":31,"archived":false,"disabled":false,"open_issues_count":0,"license":{"key":"apache-2.0","name":"Apache License 2.0","spdx_id":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","node_id":"MDc6TGljZW5zZTI="},"forks":31,"open_issues":0,"watchers":24,"default_branch":"master","permissions":{"admin":false,"push":false,"pull":true},"temp_clone_token":"","network_count":31,"subscribers_count":3}