<!--
Copyright 2014 BlackBerry, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.blackberry.bdp.kaboom</groupId>
	<name>kaboom-0.8.0</name>
	<artifactId>kaboom</artifactId>
	<version>0.8.0</version>
	<packaging>jar</packaging>	
	<url>http://blackberry.com</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<scm>
		<connection>scm:git:git@gitlab.rim.net:ipgbd-software/kaboom.git</connection>
		<developerConnection>scm:git:git@gitlab.rim.net:ipgbd-software/kaboom.git</developerConnection>
		<url>https://gitlab.rim.net/ipgbd-software/kaboom</url>
	</scm>

	<repositories>
		<!-- Hortonworks repo -->
		<repository>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>warn</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
				<updatePolicy>never</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</snapshots>
			<id>HDPReleases</id>
			<name>HDP Releases</name>
			<url>http://repo.hortonworks.com/content/repositories/releases/</url>
			<layout>default</layout>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>args4j</groupId>
			<artifactId>args4j</artifactId>
			<version>2.32</version>				
		</dependency>

		<!-- Hadoop dependencies -->
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-client</artifactId>
			<version>2.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.curator</groupId>
			<artifactId>curator-recipes</artifactId>
			<version>2.7.1</version>
		</dependency>
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>1.13</version>
		</dependency>
		<dependency>
			<groupId>com.blackberry.bdp.krackle</groupId>
			<artifactId>krackle</artifactId>
			<version>0.8.0</version>
		</dependency>
		<dependency>
			<groupId>com.blackberry.bdp.common</groupId>
			<artifactId>bdp-common</artifactId>
			<version>0.0.10</version>
			<!--
			<exclusions>
				<exclusion>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-core</artifactId>					
				</exclusion>
				<exclusion>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-api</artifactId>		
				</exclusion>
				<exclusion>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-slf4j-impl</artifactId>
				</exclusion>
			</exclusions>			
			-->
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka_2.9.2</artifactId>
			<version>0.8.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.13</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.2</version>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<includeScope>runtime</includeScope>
							<!-- We want all our dependencies included, except for log4j1.x related stuff -->
							<excludeArtifactIds>slf4j-log4j12,log4j</excludeArtifactIds>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- Generate a build number based off the commit hash -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<doCheck>false</doCheck>
					<doUpdate>false</doUpdate>		
				</configuration>	
			</plugin>
			
			<!-- Insert the build branch and commit hash into the manifest -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Build-Info>${buildNumber}</Build-Info>
							<SCM-Branch>${scmBranch}</SCM-Branch>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>native-maven-plugin</artifactId>
				<version>1.0-alpha-8</version>
				<extensions>true</extensions>
				<configuration>
					
					<javahClassNames>com.blackberry.bdp.kaboom.FastBoomWriter</javahClassNames>
					<javahIncludes>
						<javahInclude>
							<className>com.blackberry.bdp.kaboom.FastBoomWriter</className>
							<headerName>com.blackberry.bdp.kaboom.FastBoomWriter.h</headerName>
						</javahInclude>
					</javahIncludes>
				</configuration>
			</plugin>			

			<!-- Cheat and use the antrun plugin that exposes the classpath required for running javah -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<phase>process-classes</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<exportAntProperties>true</exportAntProperties>
							<target>
								<property name="runtime_classpath" refid="maven.compile.classpath"/>
								<exec executable="${java.home}/../bin/javah">
									<arg value="-cp"/>
									<arg value="${runtime_classpath}"/>
									<arg value="-d"/>
									<arg value="${project.basedir}/NativeDeflate"/>
									<arg value="com.blackberry.bdp.kaboom.FastBoomWriter"/>
								</exec>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Build a DEB package -->
			<plugin>
				<artifactId>jdeb</artifactId>
				<groupId>org.vafer</groupId>
				<version>1.3</version>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>jdeb</goal>
						</goals>
						<configuration>
							<verbose>true</verbose>
							<controlDir>src/deb/control</controlDir>
							<timestamped>true</timestamped>
							<dataSet>
								
								<!-- Create required directories -->
								<data>
									<type>template</type>
									<paths>
										<path>/opt/kaboom/config</path>
										<path>/opt/kaboom/lib</path>
										<path>/opt/kaboom/src</path>
										<path>/opt/kaboom/file_positions_cache</path>										
										<path>/var/log/kaboom</path>
										<path>/var/run/kaboom</path>
									</paths>
									<mapper>
										<type>perm</type>
										<filemode>755</filemode>
										<user>kaboom</user>
										<group>kaboom</group>
									</mapper>
								</data>

								<!-- Copy the main artifact jar -->
								<data>
									<type>file</type>
									<src>target/${project.build.finalName}.jar</src>
									<dst>/opt/kaboom/lib/${project.build.finalName}.jar</dst>
									<mapper>
										<type>perm</type>
										<filemode>644</filemode>
										<user>root</user>
										<group>root</group>
									</mapper>
								</data>
								
								<!-- Copy all required libraries -->
								<data>
									<type>directory</type>
									<src>target/lib</src>
									<includes>*.jar</includes>
									<mapper>
										<type>perm</type>
										<prefix>/opt/kaboom/lib</prefix>
										<filemode>644</filemode>
										<user>root</user>
										<group>root</group>
									</mapper>
								</data>
								
								<!--  Copy the lib for NativeDeflate 
								<data>
									<type>directory</type>
									<src>NativeDeflate/lib</src>
									<includes>*.so</includes>
									<mapper>
										<type>perm</type>
										<prefix>/opt/kaboom/lib</prefix>
										<filemode>644</filemode>
										<user>kaboom</user>
										<group>kaboom</group>
									</mapper>
								</data>-->
								
								<!-- Copy the config sample(s) -->
								<data>
									<type>files</type>
									<paths>
										<path>${project.basedir}/conf/kaboom.properties.sample</path>
										<path>${project.basedir}/conf/kaboom-env.sh.sample</path>
										<path>${project.basedir}/conf/log4j2.xml.sample</path>
									</paths>
									<dst>/opt/kaboom/config</dst>
								</data>
								
								<!-- Copy the init upstart script -->
								<data>
									<src>${project.basedir}/init/kaboom.conf</src>
									<dst>/etc/init/kaboom.conf</dst>
									<type>file</type>
								</data>
								
								<!-- Link the upstart file to -->
								<data>
									<type>link</type>
									<linkName>/etc/init.d/kaboom</linkName>
									<linkTarget>/lib/init/upstart-job</linkTarget>
									<symlink>true</symlink>
								</data>								
								
							</dataSet>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<!-- Build an RPM -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>rpm-maven-plugin</artifactId>
				<version>2.1</version>
			
				<!-- When to build -->
				<executions>
					<execution>
						<goals>
							<goal>rpm</goal>
						</goals>
					</execution>
				</executions>
				
				<configuration>
					<defineStatements>
						<defineStatement>_tmppath /tmp</defineStatement>
					</defineStatements>
					<copyright>2014, BlackBerry, Limited.</copyright>
					<needarch>true</needarch>
					<group>Application/Hadoop</group>
					<requires>
						<require>shadow-utils</require>
					</requires>

					<defaultDirmode>755</defaultDirmode>
					<defaultFilemode>644</defaultFilemode>
					<defaultGroupname>kaboom</defaultGroupname>
					<defaultUsername>kaboom</defaultUsername>

					<mappings>

						<!-- Libraries -->
						<mapping>
							<directory>/opt/kaboom/lib</directory>
							<artifact></artifact>
							<dependency/>
						</mapping>

						<!-- Config -->
						<mapping>
							<directory>/opt/kaboom/config</directory>
							<sources>
								<source>
									<location>${project.basedir}/conf</location>
									<includes>
										<include>*</include>
									</includes>
								</source>
							</sources>
						</mapping>

						<!--  Copy the lib for NativeDeflate 
						<mapping>
							<directory>/opt/kaboom/lib</directory>
							<filemode>644</filemode>
							<sources>
								<source>
									<location>${project.basedir}/NativeDeflate/lib/</location>
									<includes>
										<include>*.so</include>
									</includes>
								</source>
							</sources>
						</mapping>-->					
								
						<!-- Executables -->
						<mapping>
							<directory>/opt/kaboom/bin</directory>
							<filemode>744</filemode>
							<sources>
								<source>
									<location>${project.basedir}/bin</location>
									<includes>
										<include>*</include>
									</includes>
								</source>
							</sources>
						</mapping>

						<!-- PID dir -->
						<mapping>
							<directory>/var/run/kaboom</directory>
						</mapping>

						<!-- Logs -->
						<mapping>
							<directory>/var/log/kaboom</directory>
						</mapping>
						
					</mappings>

					<!-- Create the user and the group if they do not already exist -->
					<preinstallScriptlet>
						<scriptFile>src/rpm/preinst</scriptFile>					
					</preinstallScriptlet>

				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
			</plugin>		
			
			<!--
				<plugin> 
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<createDependencyReducedPom>true</createDependencyReducedPom>
					<filters>
						<filter>
							<artifact>*:*</artifact>
							<excludes>
								<exclude>META-INF/*.SF</exclude>
								<exclude>META-INF/*.DSA</exclude>
								<exclude>META-INF/*.RSA</exclude>
							</excludes>
						</filter>
					</filters>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>com.blackberry.bdp.kaboom.KaBoom</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>-->
						
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
				only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.1,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>


