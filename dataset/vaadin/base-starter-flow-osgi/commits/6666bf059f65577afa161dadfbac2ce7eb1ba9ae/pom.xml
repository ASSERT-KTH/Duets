<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.example</groupId>
    <artifactId>project-base-osgi</artifactId>
    <name>Project base for Vaadin Flow and OSGi</name>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <vaadin.version>13.0-SNAPSHOT</vaadin.version>

        <felix.version>6.0.0</felix.version>
        <felix.distribution>http://central.maven.org/maven2/org/apache/felix/org.apache.felix.main.distribution/${felix.version}/org.apache.felix.main.distribution-${felix.version}.zip</felix.distribution>
        <felix.home>felix-framework-${felix.version}</felix.home>
    </properties>

    <repositories>
        <!-- Repository used by many Vaadin add-ons -->
        <repository>
            <id>Vaadin Directory</id>
            <url>http://maven.vaadin.com/vaadin-addons</url>
        </repository>
        <!-- Repository needed for prerelease versions of Vaadin
        <repository>
            <id>vaadin-prereleases</id>
            <url>https://maven.vaadin.com/vaadin-prereleases</url>
        </repository>
        -->
        <repository>
            <id>vaadin-snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <!-- Repository needed for prerelease versions of Vaadin
        <pluginRepository>
            <id>vaadin-prereleases</id>
            <url>https://maven.vaadin.com/vaadin-prereleases</url>
        </pluginRepository>
        -->
        <pluginRepository>
            <id>vaadin-snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-bom</artifactId>
                <type>pom</type>
                <scope>import</scope>
                <version>${vaadin.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-core</artifactId>
        </dependency>

        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>flow-osgi</artifactId>
        </dependency>

        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>osgi.cmpn</artifactId>
            <version>6.0.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
            <version>6.0.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- Added to provide logging output as Flow uses -->
        <!-- the unbound SLF4J no-operation (NOP) logger implementation -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>biz.aQute.bnd</groupId>
                <artifactId>bnd-maven-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>bnd-process</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                        <index>false</index>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-dependencies</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includes>**/webjars/**</includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>copy-frontend</id>
                        <phase>generate-resources</phase>
                        <configuration>
                            <tasks>
                                <mkdir
                                    dir="${project.build.directory}/generated-resources/frontend/bower_components"></mkdir>
                                <copy
                                    todir="${project.build.directory}/generated-resources/frontend/bower_components">
                                    <fileset
                                        dir="${project.build.directory}/dependency/META-INF/resources/webjars/" />
                                </copy>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>add-resource</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>add-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/generated-resources</directory>
                                    <targetPath></targetPath>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- Production mode can be activated with either property or 
                profile -->
            <id>production-mode</id>
            <activation>
                <property>
                    <name>vaadin.productionMode</name>
                </property>
            </activation>
            <properties>
                <vaadin.productionMode>true</vaadin.productionMode>
            </properties>

            <dependencies>
                <dependency>
                    <groupId>com.vaadin</groupId>
                    <artifactId>flow-server-production-mode</artifactId>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>com.vaadin</groupId>
                        <artifactId>vaadin-maven-plugin</artifactId>
                        <version>${vaadin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>copy-production-files</goal>
                                    <goal>package-for-production</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>prepare-osgi-container</id>
            <dependencies>

                <dependency>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.scr</artifactId>
                    <version>2.1.10</version>
                    <scope>provided</scope>
                </dependency>

                <dependency>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.scr.annotations</artifactId>
                    <version>1.12.0</version>
                    <scope>provided</scope>
                </dependency>

                <dependency>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.scr.compat</artifactId>
                    <version>1.0.4</version>
                    <scope>provided</scope>
                </dependency>

                <dependency>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.scr.ds-annotations</artifactId>
                    <version>1.2.10</version>
                    <scope>provided</scope>
                </dependency>

                <dependency>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.http.servlet-api</artifactId>
                    <version>1.1.2</version>
                    <scope>provided</scope>
                </dependency>

                <dependency>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>org.apache.felix.http.jetty</artifactId>
                    <version>4.0.6</version>
                    <scope>provided</scope>
                </dependency>

                <!-- Those dependencies are need for OSGi container where 
                    this bundle will be deployed. They will be copied into the bundle folder 
                    of OSGi container and automatically installed form there. -->

                <dependency>
                    <groupId>org.osgi</groupId>
                    <artifactId>org.osgi.service.serviceloader</artifactId>
                    <version>1.0.0</version>
                </dependency>

                <dependency>
                    <groupId>org.apache.aries.spifly</groupId>
                    <artifactId>org.apache.aries.spifly.static.bundle</artifactId>
                    <version>1.0.12</version>
                    <scope>provided</scope>
                </dependency>

                <dependency>
                    <groupId>org.apache.aries.spifly</groupId>
                    <artifactId>org.apache.aries.spifly.static.tool</artifactId>
                    <version>1.0.12</version>
                    <scope>provided</scope>
                </dependency>

                <dependency>
                    <groupId>org.apache.aries.spifly</groupId>
                    <artifactId>org.apache.aries.spifly.core-internal</artifactId>
                    <version>1.0.12</version>
                    <scope>provided</scope>
                </dependency>

                <dependency>
                    <groupId>org.apache.aries.spifly</groupId>
                    <artifactId>org.apache.aries.spifly.weaver-internal</artifactId>
                    <version>1.0.12</version>
                    <scope>provided</scope>
                </dependency>

                <dependency>
                    <groupId>org.apache.aries</groupId>
                    <artifactId>org.apache.aries.util</artifactId>
                    <version>1.1.3</version>
                    <scope>provided</scope>
                </dependency>

                <dependency>
                    <groupId>org.apache.aries.spifly</groupId>
                    <artifactId>org.apache.aries.spifly.dynamic.bundle</artifactId>
                    <version>1.0.12</version>
                    <scope>provided</scope>
                </dependency>

            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>download-files</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <get
                                            src="${felix.distribution}"
                                            dest="${project.build.directory}/felix.zip"
                                            verbose="false"
                                            usetimestamp="true" />
                                        <unzip
                                            src="${project.build.directory}/felix.zip"
                                            dest="${project.build.directory}"></unzip>
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.1.1</version>
                        <executions>
                            <execution>
                                <id>copy-dependencies</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <includeScope>compile</includeScope>
                                    <outputDirectory>${project.build.directory}/${felix.home}/bundle</outputDirectory>
                                    <overWriteIfNewer>true</overWriteIfNewer>
                                    <excludeGroupIds>com.google.code.findbugs,
                                        org.seleniumhq.selenium,
                                        javax.servlet</excludeGroupIds>
                                    <excludeArtifactIds>osgi.cmpn</excludeArtifactIds>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-self</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <copy
                                            todir="${project.build.directory}/${felix.home}/bundle"
                                            file="${project.build.directory}/${project.artifactId}-${project.version}.jar">
                                        </copy>
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>run-osgi-container</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.6.0</version>
                        <executions>
                            <execution>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>java</executable>
                                    <workingDirectory>${project.build.directory}/${felix.home}</workingDirectory>
                                    <commandlineArgs>-Dgosh.args="--nointeractive
                                        -s"
                                        -jar bin/felix.jar</commandlineArgs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
