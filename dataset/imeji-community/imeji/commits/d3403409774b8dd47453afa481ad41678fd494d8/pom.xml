<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>imeji</artifactId>
	<groupId>org.imeji</groupId>
	<name>imeji</name>
	<packaging>war</packaging>
	<version>1.1.2.1-SNAPSHOT</version>
	<url>http://imeji.org</url>
	<description>
		http://colab.mpdl.mpg.de/mediawiki/imeji
	</description>
	<licenses>
		<license>
			<name>Common Development And Distribution License</name>
			<url>http://www.sun.com/cddl/cddl.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<organization>
		<name>Max Planck Digital Library</name>
		<url>http://www.mpdl.mpg.de/</url>
	</organization>
	<scm>
		<connection>scm:git:git://github.com/imeji-community/imeji.git</connection>
		<developerConnection>scm:git:https://github.com/imeji-community/imeji.git</developerConnection>
		<url>https://github.com/imeji-community/imeji.git</url>
	</scm>
	<issueManagement>
		<system>Github</system>
		<url>https://github.com/imeji-community/imeji/issues</url>
	</issueManagement>
	<developers>
		<developer>
			<id>bsaquet</id>
			<name>Bastien Saquet</name>
			<email>saquet@mpdl.mpg.de</email>
			<roles>
				<role>Software developer</role>
			</roles>
			<organization>Max Planck Digital Library</organization>
			<timezone>+2</timezone>
		</developer>
		<developer>
			<id>kleinfercher</id>
			<name>Friederike Kleinfercher</name>
			<email>kleinfercher@mpdl.mpg.de</email>
			<roles>
				<role>Software developer</role>
			</roles>
			<organization>Max Planck Digital Library</organization>
			<timezone>+2</timezone>
		</developer>
		<developer>
			<id>wfrank</id>
			<name>Wilhelm Frank</name>
			<email>frank@mpdl.mpg.de</email>
			<roles>
				<role>developer</role>
			</roles>
			<organization>Max Planck Digital Library</organization>
			<timezone>+2</timezone>
		</developer>
		<developer>
			<id>LuYu</id>
			<name>Lu Yu</name>
			<email>yu@mpdl.mpg.de</email>
			<roles>
				<role>Software developer</role>
			</roles>
			<organization>Max Planck Digital Library</organization>
			<timezone>+2</timezone>
		</developer>
	</developers>
	<mailingLists>
		<mailingList>
			<name>Support for developers and users</name>
			<subscribe>https://listserv.gwdg.de/mailman/listinfo/imeji-support</subscribe>
			<unsubscribe>https://listserv.gwdg.de/mailman/listinfo/imeji-support</unsubscribe>
			<post>imeji-support@gwdg.de</post>
			<archive>
				https://listserv.gwdg.de/mailman/private/imeji-support/
			</archive>
		</mailingList>
	</mailingLists>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>1.6</maven.compiler.target>
		<!-- Setting this property so that generated project uses correct version 
			of richfaces. -->
		<org.richfaces.bom.version>4.2.2.Final</org.richfaces.bom.version>
		<!-- Used by Tomcat to trip version Nr when deploy WAR package, e.g., imeji_1.0_screenshot->imeji -->
		<project.warName>imeji</project.warName>
	</properties>
	<repositories>
		<repository>
			<id>central</id>
			<url>http://central</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>prime-repo</id>
			<name>Prime Technology Maven Repository</name>
			<url>http://repository.prime.com.tr</url>
			<layout>default</layout>
		</repository>
		<repository>
			<id>apache-repo-snapshots</id>
			<url>https://repository.apache.org/content/repositories/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
			</plugin>
			<!-- -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<!-- Exclude imeji.properties from war file, because it should be copied 
						to application server conf directory -->
					<packagingExcludes>**/imeji.properties</packagingExcludes>
					<warName>${project.warName}</warName>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-Build>${buildNumber}</Implementation-Build>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12.3</version>
				<configuration>
					<!-- if there are no tests, don't bail out -->
					<failIfNoTests>false</failIfNoTests>
					<!-- avoid the out of memory exception thrown in some test scenarios -->
					<argLine>-Xmx1000M</argLine>
				</configuration>
				<executions>
					<execution>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>false</skip>
							<test>Initializer</test>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>process-resources</id>
						<phase>process-resources</phase>
						<configuration>
							<tasks>
								<!-- copying the jaxb files into the build directories, because of 
									the xml schema handling issue (marshalling and unmarshalling) -->
								<!-- those files will not be copied into the build directories, Maven 
									does not copy them automatically!!! -->
								<copy file="src/main/java/de/mpg/j2j/misc/jaxb.index"
									tofile="${project.build.directory}/classes/de/mpg/j2j/misc/jaxb.index" />
								<copy file="src/main/java/de/mpg/imeji/logic/vo/jaxb.index"
									tofile="${project.build.directory}/classes/de/mpg/imeji/logic/vo/jaxb.index" />
								<copy file="src/main/java/de/mpg/imeji/logic/ingest/vo/jaxb.index"
									tofile="${project.build.directory}/classes/de/mpg/imeji/logic/ingest/vo/jaxb.index" />
								<copy
									file="src/main/java/de/mpg/imeji/logic/vo/predefinedMetadata/jaxb.index"
									tofile="${project.build.directory}/classes/de/mpg/imeji/logic/vo/predefinedMetadata/jaxb.index" />
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<format>{0,date,yyyy-MM-dd HH:mm:ss}</format>
					<items>
						<item>timestamp</item>
					</items>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.3,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.richfaces</groupId>
				<artifactId>richfaces-bom</artifactId>
				<version>${org.richfaces.bom.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.2</version>
		</dependency>
		<!-- <dependency> <groupId>org.apache.jena</groupId> <artifactId>jena-tdb</artifactId> 
			<version>0.9.4-SNAPSHOT</version> </dependency> <dependency> <groupId>org.apache.jena</groupId> 
			<artifactId>apache-jena</artifactId> <version>2.10.1</version> <type>pom</type> 
			</dependency> -->
		<dependency>
			<groupId>org.apache.jena</groupId>
			<artifactId>jena-tdb</artifactId>
			<version>0.10.1</version>
		</dependency>
		<dependency>
			<groupId>org.escidoc.core</groupId>
			<artifactId>escidoc-ijc</artifactId>
			<version>1.3.2</version>
		</dependency>
		<!-- PrettyFaces for JSF 2.x -->
		<dependency>
			<groupId>com.ocpsoft</groupId>
			<artifactId>prettyfaces-jsf2</artifactId>
			<version>3.3.3</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<!-- USED during compile, e.g. javax.mail -->
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<scope>provided</scope>
			<version>6.0</version>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
		</dependency>
		<!-- richfaces 4 libs -->
		<!-- <dependency> <groupId>org.richfaces.ui</groupId> <artifactId>richfaces-components-ui</artifactId> 
			</dependency> <dependency> <groupId>org.richfaces.core</groupId> <artifactId>richfaces-core-impl</artifactId> 
			</dependency> -->
		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>javax.faces-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.faces</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>el-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp.jstl</groupId>
			<artifactId>jstl-api</artifactId>
		</dependency>
		<!--<dependency> <groupId>net.sf.ehcache</groupId> <artifactId>ehcache</artifactId> 
			</dependency> -->
		<!-- json simple: to read vocabularies -->
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>com.sun.media</groupId>
			<artifactId>jai-codec</artifactId>
			<version>1.1.3</version>
		</dependency>
		<!-- User standalone jxb, instead of jdk embedded version, because of problem 
			with prefix mapping -->
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.2.2</version>
		</dependency>
		<!-- Used for CMYK images -->
		<dependency>
			<groupId>org.apache.commons.imaging</groupId>
			<artifactId>sanselan</artifactId>
			<version>0.97</version>
			<classifier>incubator</classifier>
		</dependency>
		<!-- JAVA API lib for imagemagick -->
		<dependency>
		  <groupId>org.im4java</groupId>
		  <artifactId>im4java</artifactId>
		  <version>1.2.0</version>
		</dependency>
		<!-- Test with bioformats jar -->
		<!-- <dependency> <groupId>org.loci.bioformats</groupId> <artifactId>bioformats</artifactId> 
			<version>4.4.6</version> <type>pom.lastUpdated</type> </dependency> -->
	</dependencies>
	<profiles>
		<!-- this profile is used by developers -->
		<profile>
			<id>env-development</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.zeroturnaround</groupId>
						<artifactId>javarebel-maven-plugin</artifactId>
						<configuration>
							<packaging>war</packaging>
							<classpath>
								<fallback>default</fallback>
								<resources>
									<resource>
										<directory>target/classes</directory>
										<excludes>
											<exclude>log4j.xml</exclude>
										</excludes>
									</resource>
								</resources>
							</classpath>
						</configuration>
						<executions>
							<execution>
								<id>generate-rebel-xml</id>
								<phase>process-resources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<!-- copy the war folder into the tomcat deploy folder ($TOMCAT_HOME/webapps) -->
							<execution>
								<id>install</id>
								<phase>install</phase>
								<configuration>
									<tasks>
										<copy file="${project.build.directory}/${project.warName}.war"
											tofile="${tomcat.webapps}/${project.warName}.war" />
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.eclipse.m2e</groupId>
							<artifactId>lifecycle-mapping</artifactId>
							<version>1.0.0</version>
							<configuration>
								<lifecycleMappingMetadata>
									<pluginExecutions>
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.zeroturnaround</groupId>
												<artifactId>jrebel-maven-plugin</artifactId>
												<versionRange>1.1</versionRange>
												<goals>
													<goal>generate</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<execute />
											</action>
										</pluginExecution>
									</pluginExecutions>
								</lifecycleMappingMetadata>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
			<properties>
				<!-- TO avoid warning File encoding has not been set, using platform 
					encoding Cp1252, i.e. build is platform dependent! -->
				<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
				<!-- the jdk version to use -->
				<jdk.version>1.5</jdk.version>
			</properties>
		</profile>
	</profiles>
</project>
