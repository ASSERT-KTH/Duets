<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>imeji</artifactId>
	<groupId>org.imeji</groupId>
	<name>imeji</name>
	<packaging>war</packaging>
	<version>3.4.0.1-SNAPSHOT</version>
	<url>http://imeji.org</url>
	<description>The imeji open source software offers a dedicated metadata management by supporting a non- restrictive metadata schema definition, as simple as liked or as complex as needed.</description>
	<licenses>
		<license>
			<name>Common Development And Distribution License</name>
			<url>http://www.sun.com/cddl/cddl.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<organization>
		<name>Max Planck Digital Library</name>
		<url>http://www.mpdl.mpg.de/</url>
	</organization>
	<scm>
		<url>https://github.com/imeji-community/imeji</url>
		<connection>scm:git:git://github.com/imeji-community/imeji.git</connection>
		<developerConnection>scm:git:git@github.com:imeji-community/imeji.git</developerConnection>
		<tag>develop</tag>
	</scm>
	<issueManagement>
		<system>Github</system>
		<url>https://github.com/imeji-community/imeji/issues</url>
	</issueManagement>
	<developers>
		<developer>
			<id>bsaquet</id>
			<name>Bastien Saquet</name>
			<email>saquet@mpdl.mpg.de</email>
			<roles>
				<role>Software developer</role>
			</roles>
			<organization>Max Planck Digital Library</organization>
			<timezone>+2</timezone>
		</developer>
		<developer>
			<id>kleinfercher</id>
			<name>Friederike Kleinfercher</name>
			<email>kleinfercher@mpdl.mpg.de</email>
			<roles>
				<role>Software developer</role>
			</roles>
			<organization>Max Planck Digital Library</organization>
			<timezone>+2</timezone>
		</developer>
		<developer>
			<id>LuYu</id>
			<name>Lu Yu</name>
			<email>yu@mpdl.mpg.de</email>
			<roles>
				<role>Software developer</role>
			</roles>
			<organization>Max Planck Digital Library</organization>
			<timezone>+2</timezone>
		</developer>
		<developer>
			<id>YanYao</id>
			<name>Yan Yao</name>
			<email>yao@mpdl.mpg.de</email>
			<roles>
				<role>Test Manager</role>
			</roles>
			<organization>Max Planck Digital Library</organization>
			<timezone>+2</timezone>
		</developer>
		<developer>
			<id>MarcoSchlender</id>
			<name>Marco Schlender</name>
			<email>schlender@mpdl.mpg.de</email>
			<roles>
				<role>Web developer</role>
			</roles>
			<organization>Max Planck Digital Library</organization>
			<timezone>+2</timezone>
		</developer>
	</developers>
	<mailingLists>
		<mailingList>
			<name>Support for developers and users</name>
			<subscribe>https://listserv.gwdg.de/mailman/listinfo/imeji-support</subscribe>
			<unsubscribe>https://listserv.gwdg.de/mailman/listinfo/imeji-support</unsubscribe>
			<post>imeji-support@gwdg.de</post>
			<archive>
				https://listserv.gwdg.de/mailman/private/imeji-support/
			</archive>
		</mailingList>
	</mailingLists>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<!-- Setting this property so that generated project uses correct version 
			of richfaces. -->
		<org.richfaces.bom.version>4.3.7.Final</org.richfaces.bom.version>
		<!-- Used by Tomcat to trip version Nr when deploy WAR package, e.g., imeji_1.0_screenshot->imeji -->
		<project.warName>imeji</project.warName>
		<!-- <sonar.host.url>http://localhost:9000</sonar.host.url> -->
		<!-- <sonar.exclusions></sonar.exclusions> -->
		<maven.javadoc.skip>true</maven.javadoc.skip>
		<maven.javadoc.failOnError>false</maven.javadoc.failOnError>
	</properties>
	<repositories>
		<!-- <repository> <id>central</id> <url>http://central</url> <releases> 
			<enabled>true</enabled> </releases> <snapshots> <enabled>true</enabled> </snapshots> 
			</repository> -->
		<repository>
			<id>prime-repo</id>
			<name>Prime Technology Maven Repository</name>
			<url>http://repository.prime.com.tr</url>
			<layout>default</layout>
		</repository>
		<repository>
			<id>apache-repo-snapshots</id>
			<url>https://repository.apache.org/content/repositories/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>OpenIMAJ maven releases repository</id>
			<url>http://maven.openimaj.org</url>
		</repository>
		<repository>
			<id>xuggle repo</id>
			<url>http://xuggle.googlecode.com/svn/trunk/repo/share/java/</url>
		</repository>
		<repository>
			<id>nexus</id>
			<url>http://rd.mpdl.mpg.de/nexus/content/groups/public</url>
		</repository>
		<repository>
			<releases />
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>mygrid-repository</id>
			<name>myGrid Repository</name>
			<url>http://www.mygrid.org.uk/maven/repository</url>
		</repository>
		<repository>
			<id>jvnet-nexus-snapshots</id>
			<name>jvnet-nexus-snapshots</name>
			<url>https://maven.java.net/content/repositories/snapshots/</url>
		</repository>
		<repository>
			<id>jvnet-nexus-releases</id>
			<name>jvnet-nexus-releases</name>
			<url>https://maven.java.net/content/repositories/releases/</url>
		</repository>
	</repositories>
	<distributionManagement>
		<repository>
			<id>releases</id>
			<name>Nexus Managed Releases</name>
			<url>http://rd.mpdl.mpg.de/nexus/content/repositories/releases</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>Nexus Managed Snapshots</name>
			<url>http://rd.mpdl.mpg.de/nexus/content/repositories/snapshots</url>
		</snapshotRepository>

	</distributionManagement>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
			</plugin>
			<plugin>
			  	<groupId>org.apache.maven.plugins</groupId>
			  	<artifactId>maven-javadoc-plugin</artifactId>
			  	<version>2.10.3</version>
			</plugin>
			 <plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<format>{0,date,yyyy-MM-dd HH:mm:ss}</format>
					<items>
						<item>timestamp</item>
					</items>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<!-- Exclude imeji.properties from war file, because it should be copied 
						to application server conf directory -->
					<packagingExcludes>**/imeji.properties</packagingExcludes>
					<warName>${project.warName}</warName>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-Build>${buildNumber}</Implementation-Build>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18</version>
				<configuration>
					<!-- if there are no tests, don't bail out -->
					<failIfNoTests>false</failIfNoTests>
					<!-- avoid the out of memory exception thrown in some test scenarios -->
					<argLine>-Xms1024m -Xmx1024m -XX:MaxPermSize=512m</argLine>
					<includes>
						<include>**/de/mpg/imeji/test/**/*.java</include>
					</includes>
					<systemPropertyVariables>
						<catalina.base>${test.catalina.base}</catalina.base>
					</systemPropertyVariables>
				</configuration>
				<executions>
					<execution>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>false</skip>
							<test>Initializer</test>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- <plugin> <artifactId>maven-antrun-plugin</artifactId> <executions> 
				<execution> <id>process-resources</id> <phase>process-resources</phase> <configuration> 
				<tasks> <copy file="src/main/java/de/mpg/j2j/misc/jaxb.index" tofile="${project.build.directory}/classes/de/mpg/j2j/misc/jaxb.index" /> <copy file="src/main/java/de/mpg/imeji/logic/vo/jaxb.index" tofile="${project.build.directory}/classes/de/mpg/imeji/logic/vo/jaxb.index" /> <copy file="src/main/java/de/mpg/imeji/logic/ingest/vo/jaxb.index" tofile="${project.build.directory}/classes/de/mpg/imeji/logic/ingest/vo/jaxb.index" /> <copy file="src/main/java/de/mpg/imeji/logic/vo/predefinedMetadata/jaxb.index" tofile="${project.build.directory}/classes/de/mpg/imeji/logic/vo/predefinedMetadata/jaxb.index" /> </tasks> </configuration> <goals> <goal>run</goal> </goals> </execution> 
				</executions> </plugin> -->
			<!--This plugin's configuration is used to store Eclipse m2e settings 
				only. It has no influence on the Maven build itself. -->
			<plugin>
				<groupId>org.eclipse.m2e</groupId>
				<artifactId>lifecycle-mapping</artifactId>
				<version>1.0.0</version>
				<configuration>
					<lifecycleMappingMetadata>
						<pluginExecutions>
							<pluginExecution>
								<pluginExecutionFilter>
									<groupId>org.apache.maven.plugins</groupId>
									<artifactId>maven-antrun-plugin</artifactId>
									<versionRange>[1.3,)</versionRange>
									<goals>
										<goal>run</goal>
									</goals>
								</pluginExecutionFilter>
								<action>
									<ignore />
								</action>
							</pluginExecution>
							<pluginExecution>
								<pluginExecutionFilter>
									<groupId>org.zeroturnaround</groupId>
									<artifactId>javarebel-maven-plugin</artifactId>
									<versionRange>[1.1,)</versionRange>
									<goals>
										<goal>generate</goal>
									</goals>
								</pluginExecutionFilter>
								<action>
									<ignore />
								</action>
							</pluginExecution>
						</pluginExecutions>
					</lifecycleMappingMetadata>
				</configuration>
			</plugin>
		</plugins>

	</build>
	<dependencies>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.3.2</version>
		</dependency>
		<dependency>
		  <groupId>commons-codec</groupId>
		  <artifactId>commons-codec</artifactId>
		  <version>1.9</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.jena</groupId>
			<artifactId>apache-jena-libs</artifactId>
			<type>pom</type>
			<version>2.13.0</version>
		</dependency>
		<!-- PrettyFaces for JSF 2.x -->
		<dependency>
			<groupId>com.ocpsoft</groupId>
			<artifactId>prettyfaces-jsf2</artifactId>
			<version>3.3.3</version>
		</dependency> 
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<!-- USED during compile, e.g. javax.mail -->
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<scope>provided</scope>
			<version>7.0</version>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
		</dependency>
		<!-- START JSF 2 -->
		<dependency>
			<groupId>com.sun.faces</groupId>
			<artifactId>jsf-api</artifactId>
			<version>2.2.12</version>
		</dependency>
		<dependency>
			<groupId>com.sun.faces</groupId>
			<artifactId>jsf-impl</artifactId>
			<version>2.2.8</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<version>1.2</version>
		</dependency>
		<!-- END JSF 2 -->
		<!-- json simple: to read vocabularies -->
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>com.sun.media</groupId>
			<artifactId>jai-codec</artifactId>
			<version>1.1.3</version>
		</dependency>
		<!-- User standalone jxb, instead of jdk embedded version, because of problem 
			with prefix mapping -->
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.2.2</version>
		</dependency>
		<!-- Used for CMYK images -->
		<dependency>
			<groupId>org.apache.sanselan</groupId>
			<artifactId>sanselan</artifactId>
			<version>0.97-incubator</version>
		</dependency>
		<!-- JAVA API lib for imagemagick -->
		<dependency>
			<groupId>org.im4java</groupId>
			<artifactId>im4java</artifactId>
			<version>1.2.0</version>
		</dependency>
		<!-- image/video hanlding -->
		<dependency>
			<groupId>org.openimaj</groupId>
			<artifactId>core</artifactId>
			<version>1.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<artifactId>image-local-features</artifactId>
			<groupId>org.openimaj</groupId>
			<version>1.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.openimaj</groupId>
			<artifactId>xuggle-video</artifactId>
			<version>1.1</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>com.esotericsoftware.minlog</groupId>
					<artifactId>minlog</artifactId>
				</exclusion>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- START: Digilib integration -->
		<dependency>
			<groupId>digilib</groupId>
			<artifactId>digilib-servlet2</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>digilib</groupId>
			<artifactId>digilib-common</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>digilib</groupId>
			<artifactId>digilib-servlet</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>org.devlib.schmidt</groupId>
			<artifactId>imageinfo</artifactId>
			<version>1.9</version>
		</dependency>
		<dependency>
			<groupId>com.github.jai-imageio</groupId>
			<artifactId>jai-imageio-core</artifactId>
			<version>1.3.0</version>
		</dependency>
		<!-- END: Digilib integration -->
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-parsers</artifactId>
			<version>1.9</version>
		</dependency>
		<dependency>
			<groupId>xml-apis</groupId>
			<artifactId>xml-apis</artifactId>
			<version>1.4.01</version>
		</dependency>
		<!-- REST -->
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>2.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>2.13</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
			<version>2.13</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-server</artifactId>
			<version>2.13</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
			<version>2.13</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.test-framework.providers</groupId>
			<artifactId>jersey-test-framework-provider-grizzly2</artifactId>
			<version>2.13</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-moxy</artifactId>
			<version>2.13</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jettison</artifactId>
			<version>2.13</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>2.13</version>
		</dependency>
		<dependency>
			<groupId>de.mpg.mpdl.service.connector</groupId>
			<artifactId>java-connector</artifactId>
			<version>0.1</version>
		</dependency>
		<dependency>
			<groupId>org.bitbucket.b_c</groupId>
			<artifactId>jose4j</artifactId>
			<version>0.4.4</version>
		</dependency>
		<dependency>
			<groupId>com.wordnik</groupId>
			<artifactId>swagger-jersey2-jaxrs_2.10</artifactId>
			<version>1.3.8</version>
		</dependency>
		<dependency>
			<groupId>org.elasticsearch</groupId>
			<artifactId>elasticsearch</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.elasticsearch</groupId>
			<artifactId>elasticsearch-analysis-icu</artifactId>
			<version>2.7.0</version>
		</dependency>
		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
			<version>1.4.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>18.0</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.pdfbox</groupId>
		    <artifactId>pdfbox</artifactId>
		    <version>1.8.10</version>
		</dependency>
		<dependency>
			<groupId>org.mapdb</groupId>
			<artifactId>mapdb</artifactId>
			<version>1.0.9</version>
		</dependency>
	</dependencies>
	<profiles>
		<!-- this profile is used by developers -->
		<profile>
			<id>env-development</id>
			<properties>
				<!-- TO avoid warning File encoding has not been set, using platform 
					encoding Cp1252, i.e. build is platform dependent! -->
				<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
				<!-- the jdk version to use -->
				<jdk.version>1.8</jdk.version>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<!-- copy the war folder into the tomcat deploy folder ($TOMCAT_HOME/webapps) -->
							<execution>
								<id>install</id>
								<phase>install</phase>
								<configuration>
									<tasks>
										<delete quiet="true" file="${tomcat.webapps}/${project.warName}.war" />
										<delete quiet="true" dir="${tomcat.webapps}/${project.warName}" />
										<copy overwrite="true" file="${project.build.directory}/${project.warName}.war" tofile="${tomcat.webapps}/${project.warName}.war" />
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.zeroturnaround</groupId>
						<artifactId>jrebel-maven-plugin</artifactId>
						<version>1.1.5</version>
						<executions>
							<execution>
								<id>generate-rebel-xml</id>
								<phase>process-resources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
				<!-- <plugins> <plugin> <groupId>org.eclipse.m2e</groupId> <artifactId>lifecycle-mapping</artifactId> 
					<version>1.0.0</version> <configuration> <lifecycleMappingMetadata> <pluginExecutions> 
					<pluginExecution> <pluginExecutionFilter> <groupId>org.zeroturnaround</groupId> 
					<artifactId>jrebel-maven-plugin</artifactId> <versionRange>1.1</versionRange> 
					<goals> <goal>generate</goal> </goals> </pluginExecutionFilter> <action> 
					<execute /> </action> </pluginExecution> </pluginExecutions> </lifecycleMappingMetadata> 
					</configuration> </plugin> </plugins> </pluginManagement> -->
			</build>
		</profile>
		<profile>
			<id>env-testing-continuum</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<!-- TO avoid warning File encoding has not been set, using platform 
					encoding Cp1252, i.e. build is platform dependent! -->
				<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
				<!-- the jdk version to use -->
				<jdk.version>1.8</jdk.version>
				<project.build.finalName>imeji</project.build.finalName>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.tomcat.maven</groupId>
						<artifactId>tomcat7-maven-plugin</artifactId>
						<version>2.1</version>
						<configuration>
							<url>http://dev-faces.mpdl.mpg.de/manager/text</url>
							<server>tomcat</server>
							<path>/imeji</path>
							<warFile>/X/continuum/apache-continuum-1.4.1/data/working-directory/181/target/imeji.war</warFile>
							<argLine>-Xms4096m -Xmx4096m -XX:MaxPermSize=512m</argLine>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
