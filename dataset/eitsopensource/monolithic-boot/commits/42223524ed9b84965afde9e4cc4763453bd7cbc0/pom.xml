<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.2.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	
	<groupId>br.com.eits</groupId>
	<artifactId>blank</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<properties>
		<!-- General -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<start-class>br.com.eits.blank.Application</start-class>
		<java.version>1.8</java.version>
		
		<!-- Sonar Properties -->
        <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.language>java</sonar.language>
        <sonar.jacoco.itReportPath>target/jacoco-it.exec</sonar.jacoco.itReportPath>
        <sonar.sources>src/main/java/br/com/eits/blank/domain</sonar.sources>
        <sonar.tests>src/test</sonar.tests>

		<!-- Others -->
		<eits-java-common.version>1.0.5-RELEASE</eits-java-common.version>
		<dwr.version>3.0.1-RELEASE</dwr.version>
		<apache.common.io.version>2.1</apache.common.io.version>
		<apache.common.fileupload.version>1.3.1</apache.common.fileupload.version>
		
		<!-- Webjars -->
		<webjars-locator.version>0.30</webjars-locator.version>
		<eits-ng.version>1.1.0-SNAPSHOT</eits-ng.version>
		<eits-md.version>1.3.0-SNAPSHOT</eits-md.version>
		<jquery.version>2.2.0</jquery.version>
		<angularjs.version>1.5.0</angularjs.version>
		<angular-material.version>1.0.5</angular-material.version>
		<angular-material-data-table.version>0.9.8</angular-material-data-table.version>
		<uirouter.version>0.2.18</uirouter.version>
		<iconic-font.version>2.2.0</iconic-font.version>
	</properties>
	
	<!-- Profiles -->
	<profiles>
		<profile>
			<id>development</id>
			<activation>
          		<activeByDefault>true</activeByDefault>
        	</activation>
			<properties>
				<!-- Database -->
				<mvn.jdbc.jdbcUrl>jdbc:postgresql://127.0.0.1:5432/blank</mvn.jdbc.jdbcUrl>
				<mvn.jdbc.username>blank</mvn.jdbc.username>
				<mvn.jdbc.password>blank</mvn.jdbc.password>

				<!-- Database Test -->
				<mvn.test.jdbc.jdbcUrl>jdbc:postgresql://127.0.0.1:5432/blank-test</mvn.test.jdbc.jdbcUrl>
				<mvn.test.jdbc.username>blank</mvn.test.jdbc.username>
				<mvn.test.jdbc.password>blank</mvn.test.jdbc.password>

				<!-- Hibernate -->
				<mvn.hibernate.hbm2ddl>validate</mvn.hibernate.hbm2ddl>
				<mvn.hibernate.showSql>true</mvn.hibernate.showSql>
				
				<!-- JCR -->
				<mvn.jcr.caches>/tmp/blank/caches</mvn.jcr.caches>
				<mvn.jcr.files>/tmp/blank/files</mvn.jcr.files>
				
				<!-- Mail -->
				<mvn.mail.host>expressodev.prognus.com.br</mvn.mail.host>
				<mvn.mail.port>25</mvn.mail.port>
				<mvn.mail.username>no-reply</mvn.mail.username>
				<mvn.mail.password>soAsx2gGX6Rbhk</mvn.mail.password>
				<mvn.mail.from>no-reply@prognus.org</mvn.mail.from>
				<mvn.mail.ttls>false</mvn.mail.ttls>
				<mvn.mail.ssl>false</mvn.mail.ssl>
				<mvn.mail.debug>true</mvn.mail.debug>
				
				<!-- Others -->
				<mvn.cache.enabled>false</mvn.cache.enabled>
				<mvn.flyway.enabled>true</mvn.flyway.enabled>
			</properties>
		</profile>
		
		<profile>
			<id>sandbox</id>
			<properties>
				<!-- Database -->
				<mvn.jdbc.jdbcUrl>jdbc:postgresql://devdb.prognus.com.br:5434/blank</mvn.jdbc.jdbcUrl>
				<mvn.jdbc.username>blank</mvn.jdbc.username>
				<mvn.jdbc.password>blank</mvn.jdbc.password>
				
				<!-- Database Test -->
				<mvn.test.jdbc.jdbcUrl>jdbc:postgresql://devdb.prognus.com.br:5434/blank-test</mvn.test.jdbc.jdbcUrl>
				<mvn.test.jdbc.username>blank</mvn.test.jdbc.username>
				<mvn.test.jdbc.password>blank</mvn.test.jdbc.password>

				<!-- Hibernate -->
				<mvn.hibernate.hbm2ddl>validate</mvn.hibernate.hbm2ddl>
				<mvn.hibernate.showSql>true</mvn.hibernate.showSql>
				
				<!-- JCR -->
				<mvn.jcr.caches>/tmp/blank-sandbox/caches</mvn.jcr.caches>
				<mvn.jcr.files>/tmp/blank-sandbox/files</mvn.jcr.files>
				
				<!-- Mail -->
				<mvn.mail.host>expressodev.prognus.com.br</mvn.mail.host>
				<mvn.mail.port>25</mvn.mail.port>
				<mvn.mail.username>no-reply</mvn.mail.username>
				<mvn.mail.password>soAsx2gGX6Rbhk</mvn.mail.password>
				<mvn.mail.from>no-reply@prognus.org</mvn.mail.from>
				<mvn.mail.ttls>false</mvn.mail.ttls>
				<mvn.mail.ssl>false</mvn.mail.ssl>
				<mvn.mail.debug>true</mvn.mail.debug>
				
				<!-- Others -->
				<mvn.cache.enabled>false</mvn.cache.enabled>
				<mvn.flyway.enabled>true</mvn.flyway.enabled>
			</properties>
		</profile>
		
		<profile>
			<id>homologation</id>
			<properties>
				<!-- Database -->
				<mvn.jdbc.jdbcUrl>jdbc:postgresql://devdb.prognus.com.br:5434/blank-homologation</mvn.jdbc.jdbcUrl>
				<mvn.jdbc.username>blank</mvn.jdbc.username>
				<mvn.jdbc.password>blank</mvn.jdbc.password>
				
				<!-- Database Test -->
				<mvn.test.jdbc.jdbcUrl>jdbc:postgresql://devdb.prognus.com.br:5434/blank-test</mvn.test.jdbc.jdbcUrl>
				<mvn.test.jdbc.username>blank</mvn.test.jdbc.username>
				<mvn.test.jdbc.password>blank</mvn.test.jdbc.password>

				<!-- Hibernate -->
				<mvn.hibernate.hbm2ddl>validate</mvn.hibernate.hbm2ddl>
				<mvn.hibernate.showSql>false</mvn.hibernate.showSql>
				
				<!-- JCR -->
				<mvn.jcr.caches>/tmp/blank-homologation/caches</mvn.jcr.caches>
				<mvn.jcr.files>/tmp/blank-homologation/files</mvn.jcr.files>
				
				<!-- Mail -->
				<mvn.mail.host>expressodev.prognus.com.br</mvn.mail.host>
				<mvn.mail.port>25</mvn.mail.port>
				<mvn.mail.username>no-reply</mvn.mail.username>
				<mvn.mail.password>soAsx2gGX6Rbhk</mvn.mail.password>
				<mvn.mail.from>no-reply@prognus.org</mvn.mail.from>
				<mvn.mail.ttls>false</mvn.mail.ttls>
				<mvn.mail.ssl>false</mvn.mail.ssl>
				<mvn.mail.debug>true</mvn.mail.debug>
				
				<!-- Others -->
				<mvn.cache.enabled>true</mvn.cache.enabled>
				<mvn.flyway.enabled>true</mvn.flyway.enabled>
			</properties>
		</profile>
	</profiles>
	
	<!-- Repositories -->
	<repositories>
		<repository>
	        <id>spring-milestones</id>
	        <url>http://repo.spring.io/milestone</url>
	        <snapshots>
	            <enabled>false</enabled>
	        </snapshots>
	    </repository>
		<repository>
			<id>eits-repository-release</id>
			<url>http://maven.eits.com.br/content/repositories/releases</url>
		</repository>
		<repository>
			<id>eits-repository-snapshot</id>
			<url>http://maven.eits.com.br/content/repositories/snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	
	<pluginRepositories>
		<pluginRepository>
			<id>spring-milestones</id>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	
	<!-- Build -->
	<build>
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<filtering>true</filtering>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>
		
		<plugins>
 			<plugin>
        		<groupId>org.apache.maven.plugins</groupId>
        		<artifactId>maven-resources-plugin</artifactId>
        		<configuration>
          			<nonFilteredFileExtensions>
            			<nonFilteredFileExtension>ico</nonFilteredFileExtension>
            			<nonFilteredFileExtension>pdf</nonFilteredFileExtension>
          			</nonFilteredFileExtensions>
        		</configuration>
      		</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<dependencies>
			        <dependency>
			            <groupId>org.springframework</groupId>
			            <artifactId>springloaded</artifactId>
			            <version>${spring-loaded.version}</version>
			        </dependency>
			    </dependencies>
			</plugin>
			
			<!-- Unit and Integration Tests -->
			<plugin>
        		<groupId>org.apache.maven.plugins</groupId>
        		<artifactId>maven-surefire-plugin</artifactId>
        		<configuration>
          			<excludes>
            			<exclude>**/*IntegrationTests.java</exclude>
          			</excludes>
        		</configuration>
      		</plugin>
			<plugin>
        		<groupId>org.apache.maven.plugins</groupId>
        		<artifactId>maven-failsafe-plugin</artifactId>
        		<configuration>
        			<!--
          			<parallel>methods</parallel>
          			<threadCount>10</threadCount>
          			 -->
          			<includes>
            			<include>**/*IntegrationTests.java</include>
          			</includes>
        		</configuration>
        		<executions>
          			<execution>
		            	<id>integration-test</id>
		            	<goals>
		              		<goal>integration-test</goal>
		            	</goals>
          			</execution>
          			<execution>
            			<id>verify</id>
            			<goals>
              				<goal>verify</goal>
            			</goals>
          			</execution>
        		</executions>
      		</plugin>
      		
      		<!-- Sonar/Jacoco Integration -->
  			<plugin>
            	<groupId>org.jacoco</groupId>
            	<artifactId>jacoco-maven-plugin</artifactId>
            	<version>0.7.4.201502262128</version>
            	<executions>
                	<execution>
                    	<id>jacoco-prepare-agent</id>
                    	<goals>
                        	<goal>prepare-agent</goal>
                    	</goals>
                	</execution>
                	<execution>
                    	<id>jacoco-prepare-agent-integration</id>
                    	<goals>
                        	<goal>prepare-agent-integration</goal>
                    	</goals>
                	</execution>
	                <execution>
	                    <id>jacoco-report</id>
	                    <goals>
	                        <goal>report</goal>
	                    </goals>
	                </execution>
	                <execution>
	                    <id>jacoco-integration</id>
	                    <goals>
	                        <goal>report-integration</goal>
	                    </goals>
	                </execution>
	                <execution>
	                    <id>jacoco-check</id>
	                    <goals>
	                        <goal>check</goal>
	                    </goals>
	                    <configuration>
	                        <rules/>
	                    </configuration>
	                </execution>
            	</executions>
        	</plugin>
        	
		</plugins>
		
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>
											jacoco-maven-plugin
										</artifactId>
										<versionRange>
											[0.7.4.201502262128,)
										</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		
	</build>
	
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${sonar.plugin.version}</version>
			</plugin>
		</plugins>
	</reporting>

	<!-- Dependencies -->	
	<dependencies>
		<dependency>
			<groupId>br.com.eits</groupId>
			<artifactId>eits-java-common</artifactId>
			<version>${eits-java-common.version}</version>
		</dependency>
	
        <!-- Spring Boot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<!-- Thymeleaf -->
		<dependency>
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-springsecurity4</artifactId>
        </dependency>
         
		<!-- Spring Framework -->
		<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>springloaded</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Hibernate -->
		<dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-envers</artifactId>
		</dependency>

		<!-- DataSource -->
	  	<dependency>
	        <groupId>com.zaxxer</groupId>
	        <artifactId>HikariCP</artifactId>
	    </dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
  			<artifactId>postgresql</artifactId>
  		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
  		
		<!-- Apache Commons -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${apache.common.io.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${apache.common.fileupload.version}</version>
		</dependency>
		
  		<!-- DWR -->
		<dependency>
    		<groupId>org.directwebremoting</groupId>
    		<artifactId>dwr</artifactId>
    		<version>${dwr.version}</version>
  		</dependency>
  		  		
  		<!-- WebJars -->
		<dependency>
    		<groupId>org.webjars</groupId>
    		<artifactId>webjars-locator</artifactId>
		</dependency>
		
		<!-- JQuery -->
		<dependency>
		    <groupId>org.webjars.bower</groupId>
		    <artifactId>jquery</artifactId>
		    <version>${jquery.version}</version>
		</dependency>

  		<!-- AngularJS -->
  		<dependency>
    		<groupId>org.webjars.bower</groupId>
    		<artifactId>angular</artifactId>
    		<version>${angularjs.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.webjars.bower</groupId>
		    <artifactId>angular-messages</artifactId>
		    <version>${angularjs.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.webjars.bower</groupId>
		    <artifactId>angular-animate</artifactId>
		    <version>${angularjs.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.webjars.bower</groupId>
		    <artifactId>angular-aria</artifactId>
		    <version>${angularjs.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.webjars.bower</groupId>
		    <artifactId>angular-i18n</artifactId>
		    <version>${angularjs.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.webjars.bower</groupId>
		    <artifactId>angular-cookies</artifactId>
		    <version>${angularjs.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.webjars.bower</groupId>
		    <artifactId>angular-sanitize</artifactId>
		    <version>${angularjs.version}</version>
		</dependency>

		<!-- Angular Modules -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>eits-ng</artifactId>
			<version>${eits-ng.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>jquery</artifactId>
					<groupId>org.webjars</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
		    <groupId>org.webjars.bower</groupId>
		    <artifactId>angular-ui-router</artifactId>
		    <version>${uirouter.version}</version>
		</dependency>
		
		<!-- Angular Material -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>eits-md</artifactId>
			<version>${eits-md.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.webjars.bower</groupId>
		    <artifactId>angular-material</artifactId>
		    <version>${angular-material.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.webjars.bower</groupId>
		    <artifactId>angular-material-data-table</artifactId>
		    <version>${angular-material-data-table.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.webjars.bower</groupId>
		    <artifactId>material-design-iconic-font</artifactId>
		    <version>${iconic-font.version}</version>
		</dependency>
		
	</dependencies>
	
</project>
