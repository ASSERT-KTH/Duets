<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.2.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	
	<groupId>br.com.eits</groupId>
	<artifactId>monolithic-boot</artifactId>
	<version>0.1.0-SNAPSHOT</version>
	<packaging>war</packaging>

	<properties>
		<!-- General -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<start-class>br.com.eits.boot.Application</start-class>
		<java.version>1.8</java.version>
		
		<!-- Sonar Properties -->
        <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.language>java</sonar.language>
        <sonar.jacoco.itReportPath>target/jacoco-it.exec</sonar.jacoco.itReportPath>
        <sonar.sources>src/main/java/br/com/eits/boot/domain</sonar.sources>
        <sonar.tests>src/test</sonar.tests>
        
        <!-- Spring Boot Overrides -->
		<thymeleaf.version>3.0.3.RELEASE</thymeleaf.version>
		<thymeleaf-extras-springsecurity4.version>3.0.1.RELEASE</thymeleaf-extras-springsecurity4.version>
		<thymeleaf-layout-dialect.version>2.1.2</thymeleaf-layout-dialect.version>
		<thymeleaf-extras-data-attribute.version>2.0.1</thymeleaf-extras-data-attribute.version>
		<thymeleaf-extras-java8time.version>3.0.0.RELEASE</thymeleaf-extras-java8time.version>

		<!-- Others -->
		<eits-java-common.version>2.0.2-RELEASE</eits-java-common.version>
		<dwr.version>3.0.2-RELEASE</dwr.version>
		<apache.common.io.version>2.1</apache.common.io.version>
		<apache.common.fileupload.version>1.3.1</apache.common.fileupload.version>
		
		<!-- Web -->
		<node.version>v7.5.0</node.version>
		<npm.version>4.1.2</npm.version>
		<node.path>${user.home}/.node</node.path>
		<typescript.path>src/main/ts</typescript.path>
	</properties>
	
	<!-- Repositories -->
	<repositories>
		<repository>
			<id>eits-repository-release</id>
			<url>http://maven.eits.com.br/content/repositories/releases</url>
		</repository>
		<repository>
			<id>eits-repository-snapshot</id>
			<url>http://maven.eits.com.br/content/repositories/snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	
	<!-- Build -->
	<build>
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<filtering>true</filtering>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>
		
		<plugins>
 			<plugin>
        		<groupId>org.apache.maven.plugins</groupId>
        		<artifactId>maven-resources-plugin</artifactId>
        		<configuration>
          			<nonFilteredFileExtensions>
            			<nonFilteredFileExtension>ico</nonFilteredFileExtension>
            			<nonFilteredFileExtension>pdf</nonFilteredFileExtension>
            			<nonFilteredFileExtension>jasper</nonFilteredFileExtension>
            			<nonFilteredFileExtension>woff2</nonFilteredFileExtension>
            			<nonFilteredFileExtension>woff</nonFilteredFileExtension>
            			<nonFilteredFileExtension>ttf</nonFilteredFileExtension>
            			<nonFilteredFileExtension>eot</nonFilteredFileExtension>
          			</nonFilteredFileExtensions>
        		</configuration>
      		</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<dependencies>
			        <dependency>
			            <groupId>org.springframework</groupId>
			            <artifactId>springloaded</artifactId>
			            <version>${spring-loaded.version}</version>
			        </dependency>
			    </dependencies>
			</plugin>
			
			<!-- Unit Tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/*IntegrationTest*.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- Integration Tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<!--
					<parallel>methods</parallel> 
					<threadCount>10</threadCount> 
					-->
					<includes>
						<include>**/*IntegrationTests.java</include>
					</includes>
				</configuration>
			</plugin>
      		
      		<!-- Sonar/Jacoco Integration -->
  			<plugin>
            	<groupId>org.jacoco</groupId>
            	<artifactId>jacoco-maven-plugin</artifactId>
            	<version>0.7.9</version>
            	<executions>
                	<execution>
                    	<id>jacoco-prepare-agent</id>
                    	<goals>
                        	<goal>prepare-agent</goal>
                    	</goals>
                	</execution>
                	<execution>
                    	<id>jacoco-prepare-agent-integration</id>
                    	<goals>
                        	<goal>prepare-agent-integration</goal>
                    	</goals>
                	</execution>
	                <execution>
	                    <id>jacoco-report</id>
	                    <goals>
	                        <goal>report</goal>
	                    </goals>
	                </execution>
	                <execution>
	                    <id>jacoco-integration</id>
	                    <goals>
	                        <goal>report-integration</goal>
	                    </goals>
	                </execution>
	                <execution>
	                    <id>jacoco-check</id>
	                    <goals>
	                        <goal>check</goal>
	                    </goals>
	                    <configuration>
	                        <rules/>
	                    </configuration>
	                </execution>
            	</executions>
        	</plugin>
        	
        	<!-- Angular build -->
        	<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.3</version>
				<configuration>
					<nodeVersion>${node.version}</nodeVersion>
					<npmVersion>${npm.version}</npmVersion>
					<workingDirectory>${typescript.path}</workingDirectory>
					<installDirectory>${node.path}</installDirectory>
				</configuration>
				<executions>
					<execution>
						<id>install node and npm</id>
						<phase>initialize</phase>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
					</execution>
					<execution>
						<id>npm install</id>
						<phase>initialize</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>
					<execution>
						<id>npm run-script mavenbuild</id>
						<phase>compile</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run-script mavenbuild</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.github.eirslett
										</groupId>
										<artifactId>
											frontend-maven-plugin
										</artifactId>
										<goals>
											<goal>install-node-and-npm</goal>
											<goal>npm</goal>
										</goals>
										<versionRange>[1.3,)</versionRange>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		
	</build>
	
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${sonar.plugin.version}</version>
			</plugin>
		</plugins>
	</reporting>

	<!-- Dependencies -->	
	<dependencies>
		<dependency>
			<groupId>br.com.eits</groupId>
			<artifactId>eits-java-common</artifactId>
			<version>${eits-java-common.version}</version>
		</dependency>
	
        <!-- Spring Boot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
         
		<!-- Spring Framework -->
		<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>springloaded</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Thymeleaf -->
		<dependency>
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-springsecurity4</artifactId>
        </dependency>
		
		<!-- Hibernate -->
		<dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-envers</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-java8</artifactId>
		</dependency>

		<!-- DataSource -->
	  	<dependency>
	        <groupId>com.zaxxer</groupId>
	        <artifactId>HikariCP</artifactId>
	    </dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
  			<artifactId>postgresql</artifactId>
  		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
  		
		<!-- Apache Commons -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${apache.common.io.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${apache.common.fileupload.version}</version>
		</dependency>
		
  		<!-- DWR -->
		<dependency>
    		<groupId>org.directwebremoting</groupId>
    		<artifactId>dwr</artifactId>
    		<version>${dwr.version}</version>
  		</dependency>
  		
  		<!-- Lombok -->
		<dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
	</dependencies>
	
</project>
