<project xmlns="http://maven.apache.org/POM/5.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             khttp://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>ca.mcgill.cs.crown</groupId>
  <artifactId>crown</artifactId>
  <packaging>jar</packaging>
  <name>CROWN</name>
  <version>2.0.0</version>

  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
  </parent>

  <description>CROWN: the Community-enRiched Open WordNet</description>
  <url>https://github.com/davidjurgens/crown/wiki</url>

  <licenses>
    <license>
      <name>Creative Commons Attribution-NonCommercial-ShareAlike 4.0</name>
      <url>https://creativecommons.org/licenses/by-nc-sa/4.0</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>davidjurgens</id>
      <name>David Jurgens</name>
      <email>jurgens@cs.mcgill.ca</email>
      <url>http://cs.mcgill.ca/~jurgens</url>
      <organization>McGill University</organization>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
    <developer>
      <id>pilehvar</id>
      <name>Mohammad Taher Pilehvar</name>
      <email>pilehvar@di.unirom1.it</email>
      <url>http://wwwusers.di.uniroma1.it/~pilehvar/</url>
      <organization>Sapienza University of Rome</organization>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
    
  </developers>

  <issueManagement>
      <system>GitHub</system>
      <url></url>
  </issueManagement>

  <dependencies>
    <dependency>
      <groupId>edu.ucla.sspace</groupId>
      <artifactId>sspace</artifactId>
      <version>2.0.4</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>edu.stanford.nlp</groupId>
      <artifactId>stanford-corenlp</artifactId>
      <version>3.5.1</version>
    </dependency>

    <dependency>
      <groupId>de.tudarmstadt.ukp.jwktl</groupId>
      <artifactId>jwktl</artifactId>
      <version>1.0.1</version>
    </dependency>
    
    <dependency>
      <groupId>edu.stanford.nlp</groupId>
      <artifactId>stanford-corenlp</artifactId>
      <version>3.5.1</version>
      <classifier>models</classifier>
    </dependency>

    <dependency>
	<groupId>org.json</groupId>
	<artifactId>json</artifactId>
	<version>20090211</version>
    </dependency>

    <dependency>
	<groupId>com.google.guava</groupId>
	<artifactId>guava</artifactId>
	<version>18.0</version>
    </dependency>

    <dependency>
      <groupId>edu.mit</groupId>
      <artifactId>jwi</artifactId>
      <version>2.2.3</version>
    </dependency>    
  </dependencies>

  <build>
    <plugins>
      <plugin>
       <artifactId>maven-compiler-plugin</artifactId>
        <version>3.0</version>
        <configuration>
            <source>1.8</source>
            <target>1.8</target>
        </configuration>
      </plugin>

      <!-- Plugin for building the github site. -->
      <plugin>
        <groupId>com.github.github</groupId>
        <artifactId>downloads-maven-plugin</artifactId>
        <version>0.4</version>
        <configuration>
          <description>Official ${project.name} build of the ${project.version} release</description>
          <override>true</override>
          <includeAttached>true</includeAttached>
        </configuration>
        <!--
        <executions>
          <execution>
            <goals>
              <goal>upload</goal>
            </goals>
            <phase>install</phase>
          </execution>
        </executions>
        -->
      </plugin>

      <!-- Plugin for being able to debug the unit tests from a file -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
          <includes>
            <!-- Make sure the both the Test/Tests.java files are included -->
            <include>**/*Test*.java</include>
          </includes>
        </configuration>
      </plugin>

      <!-- Plugin for building the github site. -->
      <plugin>
        <groupId>com.github.github</groupId>
        <artifactId>site-maven-plugin</artifactId>
        <version>0.5</version>
        <configuration>
          <message>Building site for ${project.version}</message>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>site</goal>
            </goals>
            <phase>site</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.0</version>

        <configuration>
          <reportPlugins>
            <!-- Extra info plugin for reporting. -->
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-project-info-reports-plugin</artifactId>
              <version>2.2</version>
              <configuration>
                <dependencyDetailsEnabled>true</dependencyDetailsEnabled>
                <dependencyLocationsEnabled>true</dependencyLocationsEnabled>
              </configuration>
            </plugin>

            <!-- Javadoc plugin for reporting. -->
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-javadoc-plugin</artifactId>
              <version>2.8</version>
              <configuration>
                <splitindex>true</splitindex>
              </configuration>
            </plugin>

            <!-- Code coverage plugin for reporting. -->
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>cobertura-maven-plugin</artifactId>
              <version>2.5.1</version>
            </plugin>
          </reportPlugins>
        </configuration>
      </plugin>

      <!-- Set the jvm version. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.0</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

      <!-- Plugin to create a jar of the compiled code. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <archive>
            <manifest>
              <mainClass>ca.mcgill.cs.crown.CrownCreator</mainClass>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <!-- Plugin to create a single jar of all javadoc. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.8.1</version>
        <executions>
          <execution>
            <goals>
              <goal>jar</goal>
              <goal>javadoc</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <splitindex>true</splitindex>
        </configuration>
      </plugin>

      <!-- Plugin to create a single jar of all source files. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.1.2</version>
        <executions>
          <execution>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Plugin to create a single jar that includes all dependencies -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.2.1</version>
        <configuration>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
          <archive>
            <manifest>
              <mainClass>ca.mcgill.cs.crown.CrownCreator</mainClass>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
          </archive>          
        </configuration>

        <executions>
          <execution>
            <id>make-assembly</id> 
            <phase>package</phase> 
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Plugin to automatically sign artefacts before deployment -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.12</version>
        <configuration>
          <includes>
            <include>**/*Test*.java</include>
          </includes>
        </configuration>
      </plugin>
 
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.8</version>
        <configuration>
          <splitindex>true</splitindex>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>2.3</version>
      </plugin>
    </plugins>
  </reporting>
</project>
