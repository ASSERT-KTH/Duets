<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="MiLib"><sessioninfo id="28a9b27d072f-d45d01f0" start="1596139837600" dump="1596140142759"/><package name="org/apache/commons/io/monitor"><class name="org/apache/commons/io/monitor/FileAlterationListener" sourcefilename="FileAlterationListener.java"/><class name="org/apache/commons/io/monitor/FileAlterationMonitor" sourcefilename="FileAlterationMonitor.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(J)V" line="34"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V" line="64"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInterval" desc="()J" line="78"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setThreadFactory" desc="(Ljava/util/concurrent/ThreadFactory;)V" line="87"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addObserver" desc="(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V" line="96"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeObserver" desc="(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V" line="107"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObservers" desc="()Ljava/lang/Iterable;" line="120"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="start" desc="()V" line="129"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stop" desc="()V" line="150"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stop" desc="(J)V" line="162"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="()V" line="181"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="185" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="57" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/monitor/FileAlterationListenerAdaptor" sourcefilename="FileAlterationListenerAdaptor.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onStart" desc="(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V" line="37"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onDirectoryCreate" desc="(Ljava/io/File;)V" line="46"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onDirectoryChange" desc="(Ljava/io/File;)V" line="55"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onDirectoryDelete" desc="(Ljava/io/File;)V" line="64"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onFileCreate" desc="(Ljava/io/File;)V" line="73"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onFileChange" desc="(Ljava/io/File;)V" line="82"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onFileDelete" desc="(Ljava/io/File;)V" line="91"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onStop" desc="(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V" line="100"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/monitor/FileAlterationObserver" sourcefilename="FileAlterationObserver.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="136"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/io/FileFilter;)V" line="146"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/io/FileFilter;Lorg/apache/commons/io/IOCase;)V" line="159"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="168"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/io/FileFilter;)V" line="178"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/io/FileFilter;Lorg/apache/commons/io/IOCase;)V" line="190"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/FileFilter;Lorg/apache/commons/io/IOCase;)V" line="125"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDirectory" desc="()Ljava/io/File;" line="226"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFileFilter" desc="()Ljava/io/FileFilter;" line="236"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Lorg/apache/commons/io/monitor/FileAlterationListener;)V" line="245"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Lorg/apache/commons/io/monitor/FileAlterationListener;)V" line="256"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getListeners" desc="()Ljava/lang/Iterable;" line="268"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="()V" line="277"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="destroy" desc="()V" line="288"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkAndNotify" desc="()V" line="296"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkAndNotify" desc="(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V" line="324"><counter type="INSTRUCTION" missed="124" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createFileEntry" desc="(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)Lorg/apache/commons/io/monitor/FileEntry;" line="357"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doListFiles" desc="(Ljava/io/File;Lorg/apache/commons/io/monitor/FileEntry;)[Lorg/apache/commons/io/monitor/FileEntry;" line="371"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCreate" desc="(Lorg/apache/commons/io/monitor/FileEntry;)V" line="385"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doMatch" desc="(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)V" line="405"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doDelete" desc="(Lorg/apache/commons/io/monitor/FileEntry;)V" line="422"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listFiles" desc="(Ljava/io/File;)[Ljava/io/File;" line="439"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="459"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="563" covered="0"/><counter type="BRANCH" missed="70" covered="0"/><counter type="LINE" missed="123" covered="0"/><counter type="COMPLEXITY" missed="58" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/monitor/FileEntry" sourcefilename="FileEntry.java"><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="64"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)V" line="73"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="refresh" desc="(Ljava/io/File;)Z" line="99"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newChildInstance" desc="(Ljava/io/File;)Lorg/apache/commons/io/monitor/FileEntry;" line="128"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParent" desc="()Lorg/apache/commons/io/monitor/FileEntry;" line="137"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLevel" desc="()I" line="146"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()[Lorg/apache/commons/io/monitor/FileEntry;" line="157"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setChildren" desc="([Lorg/apache/commons/io/monitor/FileEntry;)V" line="166"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFile" desc="()Ljava/io/File;" line="175"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="184"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setName" desc="(Ljava/lang/String;)V" line="193"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLastModified" desc="()J" line="203"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLastModified" desc="(J)V" line="213"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLength" desc="()J" line="222"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLength" desc="(J)V" line="231"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isExists" desc="()Z" line="241"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setExists" desc="(Z)V" line="251"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDirectory" desc="()Z" line="260"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDirectory" desc="(Z)V" line="269"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="173" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="32" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="FileAlterationListener.java"/><sourcefile name="FileAlterationMonitor.java"><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="2" cb="0"/><line nr="66" mi="16" ci="0" mb="2" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="2" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="2" cb="0"/><line nr="108" mi="6" ci="0" mb="2" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="2" cb="0"/><line nr="130" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="11" ci="0" mb="2" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="2" cb="0"/><line nr="137" mi="7" ci="0" mb="0" cb="0"/><line nr="139" mi="6" ci="0" mb="0" cb="0"/><line nr="141" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="2" cb="0"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="1" ci="0" mb="0" cb="0"/><line nr="171" mi="11" ci="0" mb="2" cb="0"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="3" ci="0" mb="2" cb="0"/><line nr="182" mi="11" ci="0" mb="2" cb="0"/><line nr="183" mi="2" ci="0" mb="0" cb="0"/><line nr="184" mi="1" ci="0" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="2" cb="0"/><line nr="186" mi="1" ci="0" mb="0" cb="0"/><line nr="189" mi="3" ci="0" mb="0" cb="0"/><line nr="190" mi="1" ci="0" mb="0" cb="0"/><line nr="191" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="185" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="57" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FileAlterationObserver.java"><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="136" mi="6" ci="0" mb="0" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><line nr="146" mi="7" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="159" mi="8" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="178" mi="5" ci="0" mb="0" cb="0"/><line nr="179" mi="1" ci="0" mb="0" cb="0"/><line nr="190" mi="8" ci="0" mb="0" cb="0"/><line nr="191" mi="1" ci="0" mb="0" cb="0"/><line nr="202" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="2" cb="0"/><line nr="204" mi="5" ci="0" mb="0" cb="0"/><line nr="206" mi="3" ci="0" mb="2" cb="0"/><line nr="207" mi="5" ci="0" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="210" mi="3" ci="0" mb="0" cb="0"/><line nr="211" mi="6" ci="0" mb="4" cb="0"/><line nr="212" mi="4" ci="0" mb="0" cb="0"/><line nr="213" mi="4" ci="0" mb="2" cb="0"/><line nr="214" mi="4" ci="0" mb="0" cb="0"/><line nr="216" mi="3" ci="0" mb="0" cb="0"/><line nr="218" mi="1" ci="0" mb="0" cb="0"/><line nr="226" mi="4" ci="0" mb="0" cb="0"/><line nr="236" mi="3" ci="0" mb="0" cb="0"/><line nr="245" mi="2" ci="0" mb="2" cb="0"/><line nr="246" mi="5" ci="0" mb="0" cb="0"/><line nr="248" mi="1" ci="0" mb="0" cb="0"/><line nr="256" mi="2" ci="0" mb="2" cb="0"/><line nr="257" mi="6" ci="0" mb="2" cb="0"/><line nr="260" mi="1" ci="0" mb="0" cb="0"/><line nr="268" mi="3" ci="0" mb="0" cb="0"/><line nr="277" mi="7" ci="0" mb="0" cb="0"/><line nr="278" mi="8" ci="0" mb="0" cb="0"/><line nr="279" mi="4" ci="0" mb="0" cb="0"/><line nr="280" mi="1" ci="0" mb="0" cb="0"/><line nr="288" mi="1" ci="0" mb="0" cb="0"/><line nr="296" mi="11" ci="0" mb="2" cb="0"/><line nr="297" mi="3" ci="0" mb="0" cb="0"/><line nr="298" mi="1" ci="0" mb="0" cb="0"/><line nr="301" mi="4" ci="0" mb="0" cb="0"/><line nr="302" mi="3" ci="0" mb="2" cb="0"/><line nr="303" mi="11" ci="0" mb="0" cb="0"/><line nr="304" mi="4" ci="0" mb="2" cb="0"/><line nr="305" mi="8" ci="0" mb="0" cb="0"/><line nr="311" mi="11" ci="0" mb="2" cb="0"/><line nr="312" mi="3" ci="0" mb="0" cb="0"/><line nr="313" mi="1" ci="0" mb="0" cb="0"/><line nr="314" mi="1" ci="0" mb="0" cb="0"/><line nr="324" mi="2" ci="0" mb="0" cb="0"/><line nr="325" mi="9" ci="0" mb="2" cb="0"/><line nr="326" mi="16" ci="0" mb="2" cb="0"/><line nr="327" mi="13" ci="0" mb="4" cb="0"/><line nr="328" mi="9" ci="0" mb="0" cb="0"/><line nr="329" mi="5" ci="0" mb="0" cb="0"/><line nr="330" mi="2" ci="0" mb="0" cb="0"/><line nr="332" mi="13" ci="0" mb="4" cb="0"/><line nr="333" mi="6" ci="0" mb="0" cb="0"/><line nr="334" mi="10" ci="0" mb="0" cb="0"/><line nr="335" mi="4" ci="0" mb="0" cb="0"/><line nr="336" mi="2" ci="0" mb="0" cb="0"/><line nr="338" mi="6" ci="0" mb="0" cb="0"/><line nr="339" mi="3" ci="0" mb="0" cb="0"/><line nr="342" mi="6" ci="0" mb="2" cb="0"/><line nr="343" mi="9" ci="0" mb="0" cb="0"/><line nr="344" mi="5" ci="0" mb="0" cb="0"/><line nr="346" mi="3" ci="0" mb="0" cb="0"/><line nr="347" mi="1" ci="0" mb="0" cb="0"/><line nr="357" mi="4" ci="0" mb="0" cb="0"/><line nr="358" mi="4" ci="0" mb="0" cb="0"/><line nr="359" mi="5" ci="0" mb="0" cb="0"/><line nr="360" mi="3" ci="0" mb="0" cb="0"/><line nr="361" mi="2" ci="0" mb="0" cb="0"/><line nr="371" mi="4" ci="0" mb="0" cb="0"/><line nr="372" mi="9" ci="0" mb="2" cb="0"/><line nr="373" mi="8" ci="0" mb="2" cb="0"/><line nr="374" mi="9" ci="0" mb="0" cb="0"/><line nr="376" mi="2" ci="0" mb="0" cb="0"/><line nr="385" mi="11" ci="0" mb="2" cb="0"/><line nr="386" mi="3" ci="0" mb="2" cb="0"/><line nr="387" mi="5" ci="0" mb="0" cb="0"/><line nr="389" mi="4" ci="0" mb="0" cb="0"/><line nr="391" mi="1" ci="0" mb="0" cb="0"/><line nr="392" mi="3" ci="0" mb="0" cb="0"/><line nr="393" mi="16" ci="0" mb="2" cb="0"/><line nr="394" mi="3" ci="0" mb="0" cb="0"/><line nr="396" mi="1" ci="0" mb="0" cb="0"/><line nr="405" mi="4" ci="0" mb="2" cb="0"/><line nr="406" mi="11" ci="0" mb="2" cb="0"/><line nr="407" mi="3" ci="0" mb="2" cb="0"/><line nr="408" mi="4" ci="0" mb="0" cb="0"/><line nr="410" mi="3" ci="0" mb="0" cb="0"/><line nr="412" mi="1" ci="0" mb="0" cb="0"/><line nr="414" mi="1" ci="0" mb="0" cb="0"/><line nr="422" mi="11" ci="0" mb="2" cb="0"/><line nr="423" mi="3" ci="0" mb="2" cb="0"/><line nr="424" mi="5" ci="0" mb="0" cb="0"/><line nr="426" mi="4" ci="0" mb="0" cb="0"/><line nr="428" mi="1" ci="0" mb="0" cb="0"/><line nr="429" mi="1" ci="0" mb="0" cb="0"/><line nr="439" mi="2" ci="0" mb="0" cb="0"/><line nr="440" mi="3" ci="0" mb="2" cb="0"/><line nr="441" mi="11" ci="0" mb="2" cb="0"/><line nr="443" mi="2" ci="0" mb="2" cb="0"/><line nr="444" mi="2" ci="0" mb="0" cb="0"/><line nr="446" mi="7" ci="0" mb="4" cb="0"/><line nr="447" mi="4" ci="0" mb="0" cb="0"/><line nr="449" mi="2" ci="0" mb="0" cb="0"/><line nr="459" mi="4" ci="0" mb="0" cb="0"/><line nr="460" mi="6" ci="0" mb="0" cb="0"/><line nr="461" mi="4" ci="0" mb="0" cb="0"/><line nr="462" mi="6" ci="0" mb="0" cb="0"/><line nr="463" mi="4" ci="0" mb="0" cb="0"/><line nr="464" mi="3" ci="0" mb="2" cb="0"/><line nr="465" mi="4" ci="0" mb="0" cb="0"/><line nr="466" mi="6" ci="0" mb="0" cb="0"/><line nr="468" mi="4" ci="0" mb="0" cb="0"/><line nr="469" mi="6" ci="0" mb="0" cb="0"/><line nr="470" mi="4" ci="0" mb="0" cb="0"/><line nr="471" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="563" covered="0"/><counter type="BRANCH" missed="70" covered="0"/><counter type="LINE" missed="123" covered="0"/><counter type="COMPLEXITY" missed="58" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FileAlterationListenerAdaptor.java"><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FileEntry.java"><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="2" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="11" ci="0" mb="4" cb="0"/><line nr="108" mi="9" ci="0" mb="2" cb="0"/><line nr="109" mi="12" ci="0" mb="4" cb="0"/><line nr="112" mi="22" ci="0" mb="8" cb="0"/><line nr="128" mi="6" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="11" ci="0" mb="2" cb="0"/><line nr="157" mi="8" ci="0" mb="2" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="167" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="3" ci="0" mb="0" cb="0"/><line nr="184" mi="3" ci="0" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="194" mi="1" ci="0" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="1" ci="0" mb="0" cb="0"/><line nr="222" mi="3" ci="0" mb="0" cb="0"/><line nr="231" mi="3" ci="0" mb="0" cb="0"/><line nr="232" mi="1" ci="0" mb="0" cb="0"/><line nr="241" mi="3" ci="0" mb="0" cb="0"/><line nr="251" mi="3" ci="0" mb="0" cb="0"/><line nr="252" mi="1" ci="0" mb="0" cb="0"/><line nr="260" mi="3" ci="0" mb="0" cb="0"/><line nr="269" mi="3" ci="0" mb="0" cb="0"/><line nr="270" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="173" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="32" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="932" covered="0"/><counter type="BRANCH" missed="120" covered="0"/><counter type="LINE" missed="231" covered="0"/><counter type="COMPLEXITY" missed="124" covered="0"/><counter type="METHOD" missed="64" covered="0"/><counter type="CLASS" missed="4" covered="0"/></package><package name="com/milaboratory/util/sorting"><class name="com/milaboratory/util/sorting/Sorter" sourcefilename="Sorter.java"><method name="&lt;init&gt;" desc="(Lcc/redberry/pipe/OutputPort;Ljava/util/Comparator;ILcom/milaboratory/util/ObjectSerializer;Ljava/io/File;Ljava/util/concurrent/ExecutorService;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sort" desc="(Lcc/redberry/pipe/OutputPort;Ljava/util/Comparator;ILjava/lang/Class;Ljava/io/File;)Lcc/redberry/pipe/OutputPortCloseable;" line="74"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="(Lcc/redberry/pipe/OutputPort;Ljava/util/Comparator;ILcom/milaboratory/util/ObjectSerializer;Ljava/io/File;)Lcc/redberry/pipe/OutputPortCloseable;" line="84"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()V" line="91"><counter type="INSTRUCTION" missed="6" covered="97"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="22"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSorted" desc="()Lcc/redberry/pipe/OutputPortCloseable;" line="135"><counter type="INSTRUCTION" missed="5" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$build$0" desc="(Lorg/apache/commons/io/output/CountingOutputStream;[Ljava/lang/Object;Ljava/util/concurrent/CountDownLatch;)V" line="115"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="182"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="4" covered="46"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/sorting/AbstractHashSortingProperty$Natural" sourcefilename="AbstractHashSortingProperty.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyHashFunction" desc="()Ljava/util/function/ToIntFunction;" line="42"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="propertyComparator" desc="()Ljava/util/Comparator;" line="47"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/sorting/HashSorter$Collater$2" sourcefilename="HashSorter.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/util/sorting/HashSorter$Collater;Lcc/redberry/pipe/OutputPort;)V" line="372"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="376"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="take" desc="()Ljava/lang/Object;" line="380"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/sorting/HashSorter$Collater$1" sourcefilename="HashSorter.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/util/sorting/HashSorter$Collater;Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks$Reader;Ljava/nio/file/Path;)V" line="277"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="take" desc="()Ljava/lang/Object;" line="281"><counter type="INSTRUCTION" missed="12" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="298"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="11" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/sorting/SortingUtil" sourcefilename="SortingUtil.java"><method name="combine" desc="([Ljava/util/Comparator;)Ljava/util/Comparator;" line="27"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="combine" desc="(Ljava/util/List;)Ljava/util/Comparator;" line="31"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/util/sorting/HashSorter$Collater$3" sourcefilename="HashSorter.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/util/sorting/HashSorter$Collater;)V" line="387"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="take" desc="()Ljava/lang/Object;" line="395"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="406"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="59"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/sorting/HashSorter$Collater" sourcefilename="HashSorter.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/util/sorting/HashSorter;Lcc/redberry/pipe/OutputPort;Ljava/nio/file/Path;IIJZ)V" line="162"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBucketPath" desc="(I)Ljava/nio/file/Path;" line="181"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="availableMemoryBudget" desc="()J" line="190"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="195"><counter type="INSTRUCTION" missed="6" covered="224"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="2" covered="45"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBucketRawPort" desc="(I)Lcc/redberry/pipe/OutputPort;" line="274"><counter type="INSTRUCTION" missed="6" covered="31"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPortForBucket" desc="(I)Lcc/redberry/pipe/OutputPortCloseable;" line="311"><counter type="INSTRUCTION" missed="9" covered="189"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="34"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="port" desc="()Lcc/redberry/pipe/OutputPortCloseable;" line="387"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getPortForBucket$1" desc="(Ljava/util/ArrayList;)Ljava/util/stream/Stream;" line="366"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getPortForBucket$0" desc="(ILjava/util/ArrayList;)V" line="355"><counter type="INSTRUCTION" missed="6" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="548"/><counter type="BRANCH" missed="4" covered="34"/><counter type="LINE" missed="7" covered="102"/><counter type="COMPLEXITY" missed="4" covered="24"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/sorting/MergeStrategy" sourcefilename="MergeStrategy.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;Ljava/util/List;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="group" desc="(Lcc/redberry/pipe/OutputPort;)Lcc/redberry/pipe/OutputPort;" line="49"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="54"><counter type="INSTRUCTION" missed="5" covered="24"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="63"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateStrategy" desc="(Ljava/util/List;Ljava/util/List;)Lcom/milaboratory/util/sorting/MergeStrategy;" line="86"><counter type="INSTRUCTION" missed="9" covered="61"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="5" covered="13"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="45" covered="106"/><counter type="BRANCH" missed="7" covered="11"/><counter type="LINE" missed="7" covered="25"/><counter type="COMPLEXITY" missed="9" covered="6"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/sorting/Sorter$SortedBlockReader" sourcefilename="Sorter.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/util/sorting/Sorter;Ljava/io/File;JII)V" line="220"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="advance" desc="()V" line="238"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="current" desc="()Ljava/lang/Object;" line="247"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="252"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareTo" desc="(Lcom/milaboratory/util/sorting/Sorter$SortedBlockReader;)I" line="257"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/sorting/AbstractSortingProperty" sourcefilename="AbstractSortingProperty.java"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compare" desc="(Ljava/lang/Object;Ljava/lang/Object;)I" line="23"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/util/sorting/Sorter$1" sourcefilename="Sorter.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/util/sorting/Sorter;)V" line="139"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="142"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="take" desc="()Ljava/lang/Object;" line="147"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="8"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/sorting/GroupingOutputPort" sourcefilename="GroupingOutputPort.java"><method name="&lt;init&gt;" desc="(Lcc/redberry/pipe/OutputPort;Lcom/milaboratory/util/sorting/MergeStrategy;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractSuperGroupValues" desc="(Ljava/lang/Object;)Ljava/util/List;" line="36"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractPostGroupValues" desc="(Ljava/lang/Object;)Ljava/util/List;" line="42"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fillQueue" desc="()Z" line="54"><counter type="INSTRUCTION" missed="43" covered="83"/><counter type="BRANCH" missed="7" covered="11"/><counter type="LINE" missed="10" covered="19"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="take" desc="()Ljava/util/List;" line="106"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$fillQueue$2" desc="(Ljava/util/List;)Ljava/util/List;" line="94"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$extractPostGroupValues$1" desc="(Ljava/lang/Object;Lcom/milaboratory/util/sorting/SortingProperty;)Ljava/lang/Object;" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$extractSuperGroupValues$0" desc="(Ljava/lang/Object;Lcom/milaboratory/util/sorting/SortingProperty;)Ljava/lang/Object;" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="45" covered="151"/><counter type="BRANCH" missed="8" covered="16"/><counter type="LINE" missed="10" covered="36"/><counter type="COMPLEXITY" missed="6" covered="15"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/sorting/SortingProperty" sourcefilename="SortingProperty.java"><method name="relationTo" desc="(Lcom/milaboratory/util/sorting/SortingProperty;)Lcom/milaboratory/util/sorting/SortingPropertyRelation;" line="33"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/util/sorting/Sorter$MergeSortingPort" sourcefilename="Sorter.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/util/sorting/Sorter;)V" line="155"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="take" desc="()Ljava/lang/Object;" line="178"><counter type="INSTRUCTION" missed="6" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="203"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="97"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="12" covered="23"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/sorting/SortingPropertyRelation" sourcefilename="SortingPropertyRelation.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;IZZ)V" line="59"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/sorting/AbstractHashSortingProperty" sourcefilename="AbstractHashSortingProperty.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/lang/Object;Ljava/lang/Object;)I" line="25"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyAsInt" desc="(Ljava/lang/Object;)I" line="30"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/sorting/AbstractSortingProperty$Natural" sourcefilename="AbstractSortingProperty.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="propertyComparator" desc="()Ljava/util/Comparator;" line="34"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/util/sorting/HashSorter" sourcefilename="HashSorter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/util/function/ToIntFunction;Ljava/util/Comparator;ILjava/nio/file/Path;IILcom/milaboratory/primitivio/PrimitivOState;Lcom/milaboratory/primitivio/PrimitivIState;JJ)V" line="84"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="effectiveComparator" desc="()Ljava/util/Comparator;" line="132"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="effectiveComparator" desc="(Ljava/util/function/ToIntFunction;Ljava/util/Comparator;)Ljava/util/Comparator;" line="136"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="port" desc="(Lcc/redberry/pipe/OutputPort;)Lcc/redberry/pipe/OutputPortCloseable;" line="140"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printStat" desc="()V" line="148"><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/util/function/ToIntFunction;Ljava/util/Comparator;Ljava/lang/Object;Ljava/lang/Object;)I" line="414"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$effectiveComparator$0" desc="(Ljava/util/function/ToIntFunction;Ljava/util/Comparator;Ljava/lang/Object;Ljava/lang/Object;)I" line="136"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="215"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="33"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AbstractHashSortingProperty.java"><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="12" ci="0" mb="0" cb="0"/><line nr="30" mi="7" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="6"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="SortingPropertyRelation.java"><line nr="28" mi="0" ci="20" mb="0" cb="0"/><line nr="32" mi="0" ci="8" mb="0" cb="0"/><line nr="39" mi="0" ci="8" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HashSorter.java"><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="30" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="1" cb="1"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="10" mb="0" cb="0"/><line nr="140" mi="0" ci="17" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="13" mb="0" cb="0"/><line nr="149" mi="0" ci="13" mb="0" cb="0"/><line nr="150" mi="0" ci="13" mb="0" cb="0"/><line nr="151" mi="0" ci="13" mb="0" cb="0"/><line nr="152" mi="0" ci="13" mb="0" cb="0"/><line nr="153" mi="0" ci="13" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="0" ci="7" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="16" mb="0" cb="0"/><line nr="190" mi="0" ci="20" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="9" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="8" mb="0" cb="2"/><line nr="206" mi="0" ci="6" mb="0" cb="0"/><line nr="207" mi="0" ci="8" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="6" mb="0" cb="2"/><line nr="215" mi="0" ci="12" mb="0" cb="0"/><line nr="216" mi="0" ci="6" mb="0" cb="0"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="222" mi="0" ci="6" mb="0" cb="4"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="2"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="8" mb="0" cb="2"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="8" mb="0" cb="2"/><line nr="233" mi="0" ci="6" mb="0" cb="2"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="240" mi="0" ci="7" mb="0" cb="0"/><line nr="241" mi="0" ci="8" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="6" mb="0" cb="0"/><line nr="247" mi="0" ci="8" mb="0" cb="0"/><line nr="249" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="8" mb="0" cb="2"/><line nr="253" mi="0" ci="5" mb="1" cb="1"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="0" ci="7" mb="0" cb="0"/><line nr="256" mi="0" ci="8" mb="0" cb="0"/><line nr="258" mi="0" ci="4" mb="0" cb="0"/><line nr="261" mi="0" ci="8" mb="0" cb="2"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="4" mb="0" cb="0"/><line nr="266" mi="1" ci="0" mb="0" cb="0"/><line nr="267" mi="5" ci="0" mb="0" cb="0"/><line nr="268" mi="0" ci="1" mb="0" cb="0"/><line nr="269" mi="0" ci="8" mb="0" cb="0"/><line nr="270" mi="0" ci="1" mb="0" cb="0"/><line nr="274" mi="0" ci="13" mb="0" cb="0"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="0" ci="7" mb="0" cb="0"/><line nr="277" mi="0" ci="19" mb="0" cb="0"/><line nr="281" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="9" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="2"/><line nr="285" mi="0" ci="3" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="1" ci="0" mb="0" cb="0"/><line nr="288" mi="3" ci="0" mb="0" cb="0"/><line nr="289" mi="2" ci="0" mb="0" cb="0"/><line nr="290" mi="1" ci="0" mb="0" cb="0"/><line nr="291" mi="5" ci="0" mb="0" cb="0"/><line nr="298" mi="3" ci="0" mb="0" cb="0"/><line nr="299" mi="3" ci="0" mb="0" cb="0"/><line nr="300" mi="1" ci="0" mb="0" cb="0"/><line nr="301" mi="5" ci="0" mb="0" cb="0"/><line nr="302" mi="1" ci="0" mb="0" cb="0"/><line nr="303" mi="1" ci="0" mb="0" cb="0"/><line nr="305" mi="1" ci="0" mb="0" cb="0"/><line nr="306" mi="5" ci="0" mb="0" cb="0"/><line nr="311" mi="0" ci="4" mb="1" cb="1"/><line nr="312" mi="4" ci="0" mb="0" cb="0"/><line nr="314" mi="0" ci="13" mb="0" cb="2"/><line nr="319" mi="0" ci="18" mb="0" cb="0"/><line nr="320" mi="0" ci="1" mb="0" cb="0"/><line nr="321" mi="0" ci="5" mb="0" cb="0"/><line nr="323" mi="0" ci="5" mb="0" cb="0"/><line nr="324" mi="0" ci="2" mb="1" cb="1"/><line nr="325" mi="5" ci="0" mb="0" cb="0"/><line nr="327" mi="0" ci="17" mb="0" cb="0"/><line nr="331" mi="0" ci="2" mb="0" cb="0"/><line nr="333" mi="0" ci="3" mb="0" cb="0"/><line nr="336" mi="0" ci="5" mb="0" cb="0"/><line nr="337" mi="0" ci="4" mb="0" cb="0"/><line nr="338" mi="0" ci="5" mb="0" cb="0"/><line nr="339" mi="0" ci="6" mb="0" cb="0"/><line nr="341" mi="0" ci="3" mb="0" cb="0"/><line nr="342" mi="0" ci="12" mb="0" cb="2"/><line nr="343" mi="0" ci="2" mb="0" cb="0"/><line nr="344" mi="0" ci="10" mb="0" cb="0"/><line nr="345" mi="0" ci="4" mb="0" cb="0"/><line nr="346" mi="0" ci="2" mb="0" cb="2"/><line nr="347" mi="0" ci="8" mb="0" cb="0"/><line nr="348" mi="0" ci="4" mb="0" cb="0"/><line nr="349" mi="0" ci="8" mb="0" cb="0"/><line nr="350" mi="0" ci="1" mb="0" cb="0"/><line nr="352" mi="0" ci="2" mb="0" cb="0"/><line nr="353" mi="0" ci="8" mb="0" cb="0"/><line nr="355" mi="0" ci="2" mb="0" cb="2"/><line nr="356" mi="0" ci="2" mb="1" cb="1"/><line nr="357" mi="6" ci="0" mb="0" cb="0"/><line nr="359" mi="0" ci="5" mb="0" cb="0"/><line nr="360" mi="0" ci="1" mb="0" cb="0"/><line nr="362" mi="0" ci="8" mb="0" cb="0"/><line nr="364" mi="0" ci="2" mb="0" cb="0"/><line nr="365" mi="0" ci="3" mb="0" cb="0"/><line nr="366" mi="0" ci="8" mb="0" cb="2"/><line nr="367" mi="0" ci="4" mb="0" cb="0"/><line nr="368" mi="0" ci="8" mb="0" cb="0"/><line nr="371" mi="0" ci="3" mb="0" cb="0"/><line nr="372" mi="0" ci="15" mb="0" cb="0"/><line nr="376" mi="1" ci="0" mb="0" cb="0"/><line nr="380" mi="0" ci="4" mb="0" cb="0"/><line nr="387" mi="0" ci="10" mb="0" cb="0"/><line nr="388" mi="0" ci="3" mb="0" cb="0"/><line nr="389" mi="0" ci="6" mb="0" cb="0"/><line nr="390" mi="0" ci="7" mb="0" cb="0"/><line nr="395" mi="0" ci="12" mb="0" cb="4"/><line nr="396" mi="0" ci="4" mb="0" cb="0"/><line nr="397" mi="0" ci="6" mb="0" cb="0"/><line nr="398" mi="0" ci="6" mb="0" cb="2"/><line nr="399" mi="0" ci="8" mb="0" cb="0"/><line nr="401" mi="0" ci="2" mb="0" cb="0"/><line nr="406" mi="3" ci="0" mb="0" cb="0"/><line nr="407" mi="5" ci="0" mb="0" cb="0"/><line nr="408" mi="1" ci="0" mb="0" cb="0"/><line nr="414" mi="0" ci="8" mb="0" cb="0"/><line nr="415" mi="0" ci="2" mb="0" cb="2"/><line nr="416" mi="0" ci="2" mb="0" cb="0"/><line nr="417" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="63" covered="869"/><counter type="BRANCH" missed="5" covered="45"/><counter type="LINE" missed="22" covered="151"/><counter type="COMPLEXITY" missed="8" covered="42"/><counter type="METHOD" missed="3" covered="22"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="SortingUtil.java"><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="2" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="5" ci="0" mb="0" cb="0"/><line nr="34" mi="8" ci="0" mb="2" cb="0"/><line nr="35" mi="7" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Sorter.java"><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="10" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="15" mb="0" cb="0"/><line nr="92" mi="0" ci="8" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="2"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="2"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="0" cb="0"/><line nr="114" mi="0" ci="9" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="9" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="1" cb="1"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="2"/><line nr="139" mi="0" ci="11" mb="0" cb="0"/><line nr="142" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="1" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="0" ci="9" mb="0" cb="2"/><line nr="167" mi="0" ci="6" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="13" mb="0" cb="2"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="2"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="2"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="193" mi="5" ci="0" mb="0" cb="0"/><line nr="194" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="2" cb="0"/><line nr="204" mi="1" ci="0" mb="0" cb="0"/><line nr="205" mi="11" ci="0" mb="2" cb="0"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><line nr="208" mi="1" ci="0" mb="0" cb="0"/><line nr="209" mi="5" ci="0" mb="0" cb="0"/><line nr="210" mi="2" ci="0" mb="0" cb="0"/><line nr="212" mi="5" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="1" ci="0" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="5" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="232" mi="0" ci="5" mb="0" cb="0"/><line nr="233" mi="0" ci="10" mb="0" cb="0"/><line nr="234" mi="0" ci="7" mb="0" cb="0"/><line nr="235" mi="0" ci="1" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="0" cb="2"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="6" mb="0" cb="0"/><line nr="242" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="1" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="253" mi="0" ci="1" mb="0" cb="0"/><line nr="257" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="67" covered="366"/><counter type="BRANCH" missed="5" covered="17"/><counter type="LINE" missed="18" covered="88"/><counter type="COMPLEXITY" missed="6" covered="22"/><counter type="METHOD" missed="3" covered="14"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="AbstractSortingProperty.java"><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="10" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="SortingProperty.java"><line nr="33" mi="8" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="GroupingOutputPort.java"><line nr="23" mi="2" ci="6" mb="1" cb="1"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="7" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="7" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="4" ci="6" mb="2" cb="2"/><line nr="56" mi="0" ci="6" mb="0" cb="2"/><line nr="57" mi="0" ci="4" mb="0" cb="2"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="1" cb="1"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="6" ci="0" mb="2" cb="0"/><line nr="69" mi="6" ci="0" mb="2" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="11" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="2"/><line nr="87" mi="0" ci="6" mb="0" cb="2"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="2"/><line nr="107" mi="0" ci="3" mb="0" cb="2"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="151"/><counter type="BRANCH" missed="8" covered="16"/><counter type="LINE" missed="10" covered="36"/><counter type="COMPLEXITY" missed="6" covered="15"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MergeStrategy.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="2" ci="3" mb="1" cb="1"/><line nr="55" mi="2" ci="3" mb="1" cb="1"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="11" mb="1" cb="1"/><line nr="58" mi="1" ci="4" mb="1" cb="1"/><line nr="63" mi="14" ci="0" mb="0" cb="0"/><line nr="68" mi="17" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="10" mb="0" cb="2"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="2"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="1" cb="1"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="10" mb="1" cb="1"/><line nr="103" mi="0" ci="5" mb="1" cb="1"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="106"/><counter type="BRANCH" missed="7" covered="11"/><counter type="LINE" missed="7" covered="25"/><counter type="COMPLEXITY" missed="9" covered="6"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="302" covered="1561"/><counter type="BRANCH" missed="31" covered="89"/><counter type="LINE" missed="73" covered="311"/><counter type="COMPLEXITY" missed="43" covered="89"/><counter type="METHOD" missed="19" covered="53"/><counter type="CLASS" missed="4" covered="14"/></package><package name="com/milaboratory/util"><class name="com/milaboratory/util/AtomicHistogram" sourcefilename="AtomicHistogram.java"><method name="&lt;init&gt;" desc="([D)V" line="31"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(II)V" line="40"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DDI)V" line="44"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(D)V" line="48"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBoundaries" desc="()[D" line="63"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHist" desc="()[J" line="67"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTotalCountInHist" desc="()J" line="74"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mean" desc="()D" line="81"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCoveredFraction" desc="()D" line="91"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTotalProcessed" desc="()J" line="95"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bins" desc="(DDI)[D" line="99"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSerializableResult" desc="()Lcom/milaboratory/util/AtomicHistogram$SerializableResult;" line="110"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="116"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="99" covered="151"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="15" covered="31"/><counter type="COMPLEXITY" missed="7" covered="14"/><counter type="METHOD" missed="5" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/LongProcessReporter" sourcefilename="LongProcessReporter.java"><method name="&lt;clinit&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/Randomizer" sourcefilename="Randomizer.java"><method name="&lt;init&gt;" desc="(Lcc/redberry/pipe/OutputPort;Lorg/apache/commons/math3/random/RandomDataGenerator;ILcom/milaboratory/util/ObjectSerializer;Ljava/io/File;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomize" desc="(Lcc/redberry/pipe/OutputPort;Lorg/apache/commons/math3/random/RandomDataGenerator;ILcom/milaboratory/util/ObjectSerializer;Ljava/io/File;)Lcc/redberry/pipe/OutputPortCloseable;" line="58"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()V" line="64"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRandomized" desc="()Lcc/redberry/pipe/OutputPortCloseable;" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="106"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/BitArray" sourcefilename="BitArray.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Z)V" line="35"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="41"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([BI)V" line="46"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)Z" line="54"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(I)V" line="58"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="(I)V" line="62"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IZ)V" line="66"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRange" desc="(II)Lcom/milaboratory/util/BitArray;" line="73"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Lcom/milaboratory/util/BitArray;)V" line="81"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAll" desc="()V" line="90"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersects" desc="(Lcom/milaboratory/util/BitArray;)Z" line="96"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bitCount" desc="()I" line="105"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="or" desc="(Lcom/milaboratory/util/BitArray;)V" line="112"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="xor" desc="(Lcom/milaboratory/util/BitArray;)V" line="119"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="and" desc="(Lcom/milaboratory/util/BitArray;)V" line="126"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadValueFrom" desc="(Lcom/milaboratory/util/BitArray;)V" line="133"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isClean" desc="()Z" line="144"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clearAll" desc="()V" line="153"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBits" desc="()[I" line="157"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="166"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/milaboratory/util/BitArray;" line="170"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="174"><counter type="INSTRUCTION" missed="8" covered="23"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="187"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="195"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractRawDataArray" desc="(Lcom/milaboratory/util/BitArray;)[B" line="205"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="construct" desc="([BI)Lcom/milaboratory/util/BitArray;" line="209"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="303" covered="229"/><counter type="BRANCH" missed="40" covered="22"/><counter type="LINE" missed="60" covered="45"/><counter type="COMPLEXITY" missed="36" covered="22"/><counter type="METHOD" missed="14" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/LongProcessReporter$1" sourcefilename="LongProcessReporter.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(Ljava/lang/String;)Lcom/milaboratory/util/LongProcess;" line="25"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/SmartProgressReporter$1" sourcefilename="SmartProgressReporter.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/util/SmartProgressReporter;Ljava/lang/String;Lcom/milaboratory/util/CanReportProgress;)V" line="46"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStage" desc="()Ljava/lang/String;" line="49"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProgress" desc="()D" line="54"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFinished" desc="()Z" line="59"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/util/SmartProgressReporter$2" sourcefilename="SmartProgressReporter.java"><method name="&lt;init&gt;" desc="(Lcc/redberry/pipe/util/CountingOutputPort;J)V" line="191"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProgress" desc="()D" line="194"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFinished" desc="()Z" line="199"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/util/SmartProgressReporter$3" sourcefilename="SmartProgressReporter.java"><method name="&lt;init&gt;" desc="(Lcc/redberry/pipe/util/CountLimitingOutputPort;)V" line="205"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProgress" desc="()D" line="208"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFinished" desc="()Z" line="215"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/util/Randomizer$RandomizingPort" sourcefilename="Randomizer.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/util/Randomizer;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="take" desc="()Ljava/lang/Object;" line="99"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="118"><counter type="INSTRUCTION" missed="8" covered="22"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="136"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="2" covered="26"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/GlobalObjectMappers$DefaultPrettyPrinter1" sourcefilename="GlobalObjectMappers.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/fasterxml/jackson/core/util/DefaultPrettyPrinter;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeObjectFieldValueSeparator" desc="(Lcom/fasterxml/jackson/core/JsonGenerator;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createInstance" desc="()Lcom/fasterxml/jackson/core/util/DefaultPrettyPrinter;" line="59"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/AtomicEnumHistogram$SerializableResult" sourcefilename="AtomicEnumHistogram.java"><method name="&lt;init&gt;" desc="([Ljava/lang/String;[J)V" line="80"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/StringUtil" sourcefilename="StringUtil.java"><method name="spaces" desc="(I)Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="chars" desc="(CI)Ljava/lang/String;" line="29"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/ProgressAndStage" sourcefilename="ProgressAndStage.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="23"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStage" desc="()Ljava/lang/String;" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProgress" desc="()D" line="34"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFinished" desc="()Z" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setStage" desc="(Ljava/lang/String;)V" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setProgress" desc="(D)V" line="47"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFinished" desc="(Z)V" line="51"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/util/ParseUtil$BracketsInfo" sourcefilename="ParseUtil.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="49"><counter type="INSTRUCTION" missed="4" covered="51"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createBracketsProcessor" desc="()Lcom/milaboratory/util/ParseUtil$BracketsProcessor;" line="61"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="58"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/AtomicEnumHistogram" sourcefilename="AtomicEnumHistogram.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Enum;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLabels" desc="()[Ljava/lang/String;" line="44"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHist" desc="()[J" line="53"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSerializableResult" desc="()Lcom/milaboratory/util/AtomicEnumHistogram$SerializableResult;" line="62"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="6" covered="4"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="112"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="2" covered="20"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/ArraysUtils" sourcefilename="ArraysUtils.java"><method name="swap" desc="([Ljava/lang/Object;II)V" line="26"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverse" desc="([III)V" line="33"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="([I)V" line="43"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="([B)V" line="53"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSortedDistinct" desc="([J)[J" line="67"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="concatenate" desc="([I[I)[I" line="84"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="concatenate" desc="([J[J)[J" line="91"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="concatenate" desc="([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;" line="99"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="201" covered="83"/><counter type="BRANCH" missed="10" covered="4"/><counter type="LINE" missed="36" covered="11"/><counter type="COMPLEXITY" missed="11" covered="4"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/RangeMap$1" sourcefilename="RangeMap.java"><method name="&lt;init&gt;" desc="()V" line="142"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lcom/milaboratory/core/Range;Lcom/milaboratory/core/Range;)I" line="146"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/RangeMap$IntersectingRangesException" sourcefilename="RangeMap.java"><method name="&lt;init&gt;" desc="()V" line="134"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="138"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="3"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/ArrayIterator" sourcefilename="ArrayIterator.java"><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="23"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNext" desc="()Z" line="31"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()Ljava/lang/Object;" line="36"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="()V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/util/CanReportProgressAndStage" sourcefilename="CanReportProgressAndStage.java"/><class name="com/milaboratory/util/ParseUtil" sourcefilename="ParseUtil.java"><method name="splitWithBrackets" desc="(Ljava/lang/String;CLjava/lang/String;)[Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splitWithBrackets" desc="(Ljava/lang/String;CLcom/milaboratory/util/ParseUtil$BracketsInfo;)[Ljava/lang/String;" line="29"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/CountingInputStream$1" sourcefilename="CountingInputStream.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/util/CountingInputStream;J)V" line="86"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProgress" desc="()D" line="89"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFinished" desc="()Z" line="94"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/util/LambdaSemaphore" sourcefilename="LambdaSemaphore.java"><method name="&lt;init&gt;" desc="(I)V" line="22"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(II)J" line="35"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="permits" desc="(J)I" line="40"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="queued" desc="(J)I" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasPermitsAndPendingRequests" desc="(J)Z" line="49"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="executePending" desc="()V" line="54"><counter type="INSTRUCTION" missed="5" covered="28"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="acquire" desc="(Ljava/lang/Runnable;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="release" desc="()V" line="76"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInitialPermits" desc="()I" line="82"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="105"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/StreamUtil" sourcefilename="StreamUtil.java"><method name="noMerge" desc="()Ljava/util/function/BinaryOperator;" line="25"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$noMerge$0" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="26"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/util/ObjectSerializer$PrimitivIOObjectSerializer$1" sourcefilename="ObjectSerializer.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/util/ObjectSerializer$PrimitivIOObjectSerializer;Lcom/milaboratory/primitivio/PrimitivI;)V" line="68"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="take" desc="()Ljava/lang/Object;" line="71"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/util/SingleIterator" sourcefilename="SingleIterator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="29"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNext" desc="()Z" line="37"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()Ljava/lang/Object;" line="42"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="()V" line="48"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/util/LightFileDescriptor$IO" sourcefilename="LightFileDescriptor.java"><method name="&lt;init&gt;" desc="()V" line="207"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Lcom/milaboratory/primitivio/PrimitivO;Lcom/milaboratory/util/LightFileDescriptor;)V" line="210"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Lcom/milaboratory/primitivio/PrimitivI;)Lcom/milaboratory/util/LightFileDescriptor;" line="217"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReference" desc="()Z" line="225"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handlesReference" desc="()Z" line="230"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/SmartProgressReporter" sourcefilename="SmartProgressReporter.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/util/CanReportProgressAndStage;Ljava/io/PrintStream;)V" line="28"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/util/CanReportProgressAndStage;)V" line="37"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/milaboratory/util/CanReportProgress;)V" line="41"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/milaboratory/util/CanReportProgress;Ljava/io/PrintStream;)V" line="28"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProgressPeriod" desc="()D" line="65"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setProgressPeriod" desc="(D)V" line="69"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTimePeriod" desc="()D" line="73"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTimePeriod" desc="(D)V" line="77"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDetectStageChange" desc="()Z" line="81"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDetectStageChange" desc="(Z)V" line="85"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="()V" line="90"><counter type="INSTRUCTION" missed="191" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="45" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="timeString" desc="(J)Ljava/lang/String;" line="164"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startProgressReport" desc="(Lcom/milaboratory/util/SmartProgressReporter;)V" line="169"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startProgressReport" desc="(Lcom/milaboratory/util/CanReportProgressAndStage;Ljava/io/PrintStream;)V" line="175"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startProgressReport" desc="(Lcom/milaboratory/util/CanReportProgressAndStage;)V" line="179"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startProgressReport" desc="(Ljava/lang/String;Lcom/milaboratory/util/CanReportProgress;)V" line="183"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startProgressReport" desc="(Ljava/lang/String;Lcom/milaboratory/util/CanReportProgress;Ljava/io/PrintStream;)V" line="187"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractProgress" desc="(Lcc/redberry/pipe/util/CountingOutputPort;J)Lcom/milaboratory/util/CanReportProgress;" line="191"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractProgress" desc="(Lcc/redberry/pipe/util/CountLimitingOutputPort;)Lcom/milaboratory/util/CanReportProgress;" line="205"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="338" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="85" covered="0"/><counter type="COMPLEXITY" missed="34" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/util/FormatUtils" sourcefilename="FormatUtils.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="percent" desc="(DD)Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nanoTimeToString" desc="(J)Ljava/lang/String;" line="44"><counter type="INSTRUCTION" missed="26" covered="90"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bytesToStringDiv" desc="(JJ)Ljava/lang/String;" line="65"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bytesToString" desc="(J)Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="17" covered="99"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="50" covered="238"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="5" covered="33"/><counter type="COMPLEXITY" missed="6" covered="10"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/LambdaExecutionException" sourcefilename="LambdaExecutionException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="20"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/util/Bit2Array" sourcefilename="Bit2Array.java"><method name="&lt;init&gt;" desc="(I)V" line="29"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I[B)V" line="34"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)I" line="46"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(II)V" line="50"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/milaboratory/util/Bit2Array;" line="55"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extend" desc="(I)Lcom/milaboratory/util/Bit2Array;" line="59"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByteArray" desc="()[B" line="65"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyFrom" desc="(Lcom/milaboratory/util/Bit2Array;III)V" line="72"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="83"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="91"><counter type="INSTRUCTION" missed="8" covered="23"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRange" desc="(II)Lcom/milaboratory/util/Bit2Array;" line="105"><counter type="INSTRUCTION" missed="16" covered="41"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTo" desc="(Ljava/io/DataOutput;)V" line="117"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readFrom" desc="(Ljava/io/DataInput;)Lcom/milaboratory/util/Bit2Array;" line="122"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractRawDataArray" desc="(Lcom/milaboratory/util/Bit2Array;)[B" line="133"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="construct" desc="(I[B)Lcom/milaboratory/util/Bit2Array;" line="137"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="181" covered="135"/><counter type="BRANCH" missed="22" covered="12"/><counter type="LINE" missed="35" covered="21"/><counter type="COMPLEXITY" missed="25" covered="8"/><counter type="METHOD" missed="10" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/TempFileManager" sourcefilename="TempFileManager.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPrefix" desc="(Ljava/lang/String;)V" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="seed" desc="(J)V" line="26"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureInitialized" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTempFile" desc="()Ljava/io/File;" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTempFile" desc="(Ljava/nio/file/Path;)Ljava/io/File;" line="45"><counter type="INSTRUCTION" missed="17" covered="41"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTempDir" desc="()Ljava/io/File;" line="68"><counter type="INSTRUCTION" missed="6" covered="32"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="register" desc="(Ljava/io/File;)V" line="93"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="36" covered="132"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="10" covered="28"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/ObjectSerializer$PrimitivIOObjectSerializer" sourcefilename="ObjectSerializer.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="53"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/util/Collection;Ljava/io/OutputStream;)V" line="60"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Ljava/io/InputStream;)Lcc/redberry/pipe/OutputPort;" line="67"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/util/GlobalObjectMappers" sourcefilename="GlobalObjectMappers.java"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toOneLine" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/LongProcessReporter$DefaultLongProcessReporter" sourcefilename="LongProcessReporter.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/LongProcessReporter$1$1" sourcefilename="LongProcessReporter.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/util/LongProcessReporter$1;)V" line="25"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reportStatus" desc="(D)V" line="28"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="32"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/util/RandomUtil$Randomm" sourcefilename="RandomUtil.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/math3/random/Well19937c;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/IntCombinations" sourcefilename="IntCombinations.java"><method name="&lt;init&gt;" desc="(II)V" line="12"><counter type="INSTRUCTION" missed="5" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLast" desc="()Z" line="32"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="take" desc="()[I" line="41"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="122"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/Factory" sourcefilename="Factory.java"/><class name="com/milaboratory/util/LightFileDescriptor" sourcefilename="LightFileDescriptor.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;[BLjava/lang/Long;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="68"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAlwaysModified" desc="()Z" line="72"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasChecksum" desc="()Z" line="76"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasModificationDate" desc="()Z" line="80"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkModified" desc="(Lcom/milaboratory/util/LightFileDescriptor;)Z" line="87"><counter type="INSTRUCTION" missed="6" covered="54"/><counter type="BRANCH" missed="7" covered="19"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="108"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculate" desc="(Ljava/nio/file/Path;)Lcom/milaboratory/util/LightFileDescriptor;" line="116"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(Ljava/nio/file/Path;ZZ)Lcom/milaboratory/util/LightFileDescriptor;" line="120"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(Ljava/nio/file/Path;ZZI)Lcom/milaboratory/util/LightFileDescriptor;" line="124"><counter type="INSTRUCTION" missed="72" covered="85"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="18" covered="17"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="182"><counter type="INSTRUCTION" missed="5" covered="30"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="192"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBase64" desc="()Ljava/lang/String;" line="201"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="164" covered="221"/><counter type="BRANCH" missed="19" covered="39"/><counter type="LINE" missed="30" covered="43"/><counter type="COMPLEXITY" missed="21" covered="22"/><counter type="METHOD" missed="4" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/IntArrayList" sourcefilename="IntArrayList.java"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="29"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([I)V" line="29"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([II)V" line="29"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureCapacity" desc="(I)V" line="54"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(I)V" line="64"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(II)V" line="69"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="([I)V" line="79"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Lcom/milaboratory/util/IntArrayList;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(II)V" line="93"><counter type="INSTRUCTION" missed="4" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyFrom" desc="(Lcom/milaboratory/util/IntArrayList;)V" line="99"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sort" desc="()V" line="104"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stableSort" desc="(Lcom/milaboratory/util/IntArrayList$IntComparator;)V" line="110"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="push" desc="(I)V" line="125"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peek" desc="()I" line="134"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pop" desc="()I" line="143"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="([III)V" line="155"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="()V" line="161"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverse" desc="(II)V" line="165"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)I" line="174"><counter type="INSTRUCTION" missed="17" covered="11"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceFirst" desc="(II)Z" line="180"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceAll" desc="(II)Z" line="189"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="last" desc="()I" line="199"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="()[I" line="203"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="207"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="211"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indexOf" desc="(I)I" line="215"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="222"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/milaboratory/util/IntArrayList;" line="227"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="232"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="247"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="255"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getArrayReference" desc="(Lcom/milaboratory/util/IntArrayList;)[I" line="269"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="317" covered="284"/><counter type="BRANCH" missed="40" covered="16"/><counter type="LINE" missed="63" covered="62"/><counter type="COMPLEXITY" missed="34" covered="28"/><counter type="METHOD" missed="12" covered="22"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/IntArrayList$IntComparator" sourcefilename="IntArrayList.java"/><class name="com/milaboratory/util/AbstractLongProcessReporter" sourcefilename="AbstractLongProcessReporter.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(JD)V" line="31"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(Ljava/lang/String;)Lcom/milaboratory/util/LongProcess;" line="55"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stderrReporter" desc="()Lcom/milaboratory/util/LongProcessReporter;" line="85"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/CanReportProgress" sourcefilename="CanReportProgress.java"/><class name="com/milaboratory/util/LambdaLatch" sourcefilename="LambdaLatch.java"><method name="&lt;init&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Z)V" line="56"><counter type="INSTRUCTION" missed="1" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="open" desc="()V" line="72"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCallback" desc="(Ljava/lang/Runnable;)V" line="87"><counter type="INSTRUCTION" missed="5" covered="22"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="await" desc="()V" line="104"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="()V" line="111"><counter type="INSTRUCTION" missed="6" covered="7"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="76"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="7" covered="21"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/HashFunctions" sourcefilename="HashFunctions.java"><method name="mix" desc="(III)I" line="65"><counter type="INSTRUCTION" missed="128" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="JenkinWang32shift" desc="(I)I" line="106"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Wang32shiftmult" desc="(I)I" line="123"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="JenkinWang64shift" desc="(J)J" line="141"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Wang64to32shift" desc="(J)I" line="158"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="FVN32hash" desc="([B)I" line="198"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="FVN32hash" desc="(I)I" line="223"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="FVN64hash" desc="([B)J" line="251"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="FVN64hash" desc="(J)J" line="276"><counter type="INSTRUCTION" missed="96" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="FVN64to32hash" desc="(J)I" line="313"><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="MurmurHash2" desc="([BI)I" line="346"><counter type="INSTRUCTION" missed="139" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="MurmurHash2" desc="(II)I" line="400"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="MurmurHash2" desc="([B)I" line="424"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="MurmurHash2" desc="(I)I" line="437"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="691" covered="92"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="138" covered="15"/><counter type="COMPLEXITY" missed="18" covered="2"/><counter type="METHOD" missed="12" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/TempFileManager$RemoveAction" sourcefilename="TempFileManager.java"><method name="run" desc="()V" line="99"><counter type="INSTRUCTION" missed="1" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/NSequenceWithQualityPrintHelper" sourcefilename="NSequenceWithQualityPrintHelper.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/NSequenceWithQuality;II)V" line="29"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLinesCount" desc="()I" line="37"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSequenceLine" desc="(I)Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQualityLine" desc="(I)Ljava/lang/String;" line="56"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="spaces" desc="(I)Ljava/lang/String;" line="65"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="180" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="36" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/util/RandomUtil" sourcefilename="RandomUtil.java"><method name="setGlobalInitialSeed" desc="(J)V" line="42"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reseedThreadLocal" desc="()J" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reseedThreadLocal" desc="(J)J" line="50"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getThreadLocalRandom" desc="()Lorg/apache/commons/math3/random/Well19937c;" line="56"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getThreadLocalRandomData" desc="()Lorg/apache/commons/math3/random/RandomDataGenerator;" line="60"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="31"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/RangeMap" sourcefilename="RangeMap.java"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findContaining" desc="(Lcom/milaboratory/core/Range;)Ljava/util/Map$Entry;" line="31"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Lcom/milaboratory/core/Range;Ljava/lang/Object;)V" line="38"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="48"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enclosingRange" desc="()Lcom/milaboratory/core/Range;" line="57"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entrySet" desc="()Ljava/util/Set;" line="61"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Lcom/milaboratory/core/Range;)Ljava/lang/Object;" line="65"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAllIntersecting" desc="(Lcom/milaboratory/core/Range;)Ljava/util/List;" line="69"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAllIntersectingOrTouching" desc="(Lcom/milaboratory/core/Range;)Ljava/util/List;" line="87"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containIntersectingRanges" desc="(Lcom/milaboratory/core/Range;)Z" line="102"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findSingleIntersection" desc="(Lcom/milaboratory/core/Range;)Ljava/util/Map$Entry;" line="110"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isOverFragmented" desc="()Z" line="123"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="142"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="52" covered="230"/><counter type="BRANCH" missed="12" covered="40"/><counter type="LINE" missed="12" covered="50"/><counter type="COMPLEXITY" missed="9" covered="30"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/LongProcess" sourcefilename="LongProcess.java"/><class name="com/milaboratory/util/AbstractLongProcessReporter$1" sourcefilename="AbstractLongProcessReporter.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/util/AbstractLongProcessReporter;JLjava/lang/String;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reportStatus" desc="(D)V" line="63"><counter type="INSTRUCTION" missed="18" covered="25"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="77"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="55"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="4" covered="11"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/AbstractLongProcessReporter$2" sourcefilename="AbstractLongProcessReporter.java"><method name="&lt;init&gt;" desc="()V" line="85"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(JLjava/lang/String;D)V" line="88"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/CountingInputStream" sourcefilename="CountingInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()I" line="38"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([B)I" line="47"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([BII)I" line="52"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="61"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="count" desc="(J)V" line="71"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBytesRead" desc="()J" line="82"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProgressReporter" desc="(J)Lcom/milaboratory/util/CanReportProgress;" line="86"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="50"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="3" covered="17"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/ParserException" sourcefilename="ParserException.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="4"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/AtomicHistogram$SerializableResult" sourcefilename="AtomicHistogram.java"><method name="&lt;init&gt;" desc="([DJ[JD)V" line="130"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/util/ObjectSerializer" sourcefilename="ObjectSerializer.java"/><class name="com/milaboratory/util/VersionInfo" sourcefilename="VersionInfo.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVersion" desc="()Ljava/lang/String;" line="51"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRevision" desc="()Ljava/lang/String;" line="55"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBranch" desc="()Ljava/lang/String;" line="63"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHost" desc="()Ljava/lang/String;" line="67"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTimestamp" desc="()Ljava/util/Date;" line="71"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="76"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="89"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="94"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVersionInfoForArtifact" desc="(Ljava/lang/String;)Lcom/milaboratory/util/VersionInfo;" line="105"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="longest" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="109"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="className" desc="(Ljava/lang/String;)Ljava/lang/String;" line="120"><counter type="INSTRUCTION" missed="6" covered="10"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVersionInfo" desc="(Ljava/lang/String;Ljava/lang/String;)Lcom/milaboratory/util/VersionInfo;" line="133"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="132" covered="136"/><counter type="BRANCH" missed="27" covered="1"/><counter type="LINE" missed="26" covered="24"/><counter type="COMPLEXITY" missed="24" covered="5"/><counter type="METHOD" missed="9" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/ParseUtil$BracketsProcessor" sourcefilename="ParseUtil.java"><method name="&lt;init&gt;" desc="(Lgnu/trove/map/hash/TCharIntHashMap;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="process" desc="(C)Z" line="74"><counter type="INSTRUCTION" missed="14" covered="43"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="finish" desc="()V" line="92"><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDepth" desc="()I" line="97"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="62"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="17"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/RandomUtil$1" sourcefilename="RandomUtil.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialValue" desc="()Lcom/milaboratory/util/RandomUtil$Randomm;" line="31"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ArraysUtils.java"><line nr="26" mi="4" ci="0" mb="0" cb="0"/><line nr="27" mi="6" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="11" mb="0" cb="2"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="14" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="12" mb="0" cb="2"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="11" mb="0" cb="0"/><line nr="46" mi="0" ci="9" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="12" ci="0" mb="2" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="11" ci="0" mb="0" cb="0"/><line nr="56" mi="9" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="2" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="8" ci="0" mb="2" cb="0"/><line nr="73" mi="14" ci="0" mb="2" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="8" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="8" ci="0" mb="0" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><line nr="84" mi="7" ci="0" mb="0" cb="0"/><line nr="85" mi="7" ci="0" mb="0" cb="0"/><line nr="86" mi="8" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="7" ci="0" mb="0" cb="0"/><line nr="92" mi="7" ci="0" mb="0" cb="0"/><line nr="93" mi="8" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="6" ci="0" mb="2" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="10" ci="0" mb="0" cb="0"/><line nr="103" mi="7" ci="0" mb="0" cb="0"/><line nr="104" mi="8" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="201" covered="83"/><counter type="BRANCH" missed="10" covered="4"/><counter type="LINE" missed="36" covered="11"/><counter type="COMPLEXITY" missed="11" covered="4"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RangeMap.java"><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="8" mb="0" cb="4"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="2"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="1" cb="1"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="2"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="14" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="2"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="2"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="9" mb="0" cb="4"/><line nr="78" mi="0" ci="6" mb="0" cb="2"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="2"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="9" mb="0" cb="4"/><line nr="93" mi="0" ci="6" mb="0" cb="2"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="8" mb="0" cb="4"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="12" mb="0" cb="4"/><line nr="110" mi="7" ci="0" mb="0" cb="0"/><line nr="111" mi="8" ci="0" mb="4" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="8" ci="0" mb="4" cb="0"/><line nr="115" mi="2" ci="0" mb="2" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="12" mb="0" cb="2"/><line nr="125" mi="0" ci="2" mb="0" cb="2"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="1" cb="1"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="8" mb="0" cb="2"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="56" covered="248"/><counter type="BRANCH" missed="12" covered="42"/><counter type="LINE" missed="14" covered="55"/><counter type="COMPLEXITY" missed="10" covered="34"/><counter type="METHOD" missed="3" covered="14"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="LongProcess.java"/><sourcefile name="Randomizer.java"><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="9" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="15" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="2"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="8" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="9" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="9" mb="0" cb="2"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="12" mb="0" cb="0"/><line nr="91" mi="0" ci="14" mb="0" cb="2"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="2"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="18" mb="0" cb="2"/><line nr="105" mi="0" ci="7" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="2"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="1" cb="1"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="4" ci="7" mb="1" cb="1"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="242"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="2" covered="49"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ProgressAndStage.java"><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Factory.java"/><sourcefile name="ParseUtil.java"><line nr="25" mi="0" ci="8" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="8" mb="0" cb="2"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="2"/><line nr="35" mi="0" ci="6" mb="0" cb="4"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="2"/><line nr="44" mi="0" ci="15" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="1" cb="1"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="11" mb="0" cb="2"/><line nr="55" mi="0" ci="12" mb="0" cb="0"/><line nr="56" mi="0" ci="15" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="2"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="2"/><line nr="79" mi="0" ci="4" mb="1" cb="1"/><line nr="80" mi="14" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="2"/><line nr="82" mi="0" ci="14" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="1" cb="1"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="201"/><counter type="BRANCH" missed="3" covered="21"/><counter type="LINE" missed="3" covered="41"/><counter type="COMPLEXITY" missed="3" covered="17"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="BitArray.java"><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="9" mb="0" cb="2"/><line nr="30" mi="0" ci="6" mb="0" cb="2"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="4" ci="0" mb="0" cb="0"/><line nr="36" mi="9" ci="0" mb="2" cb="0"/><line nr="37" mi="4" ci="0" mb="2" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="17" mb="0" cb="2"/><line nr="58" mi="0" ci="15" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="17" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="2"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="7" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="2"/><line nr="75" mi="0" ci="8" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="2" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="9" ci="0" mb="2" cb="0"/><line nr="84" mi="8" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="2"/><line nr="92" mi="0" ci="17" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="5" ci="0" mb="2" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="9" ci="0" mb="2" cb="0"/><line nr="99" mi="10" ci="0" mb="2" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="9" mb="0" cb="2"/><line nr="107" mi="0" ci="10" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="2" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="9" ci="0" mb="2" cb="0"/><line nr="115" mi="12" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="2" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="9" ci="0" mb="2" cb="0"/><line nr="122" mi="12" ci="0" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="5" ci="0" mb="2" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="9" ci="0" mb="2" cb="0"/><line nr="129" mi="12" ci="0" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="5" ci="0" mb="2" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="10" ci="0" mb="0" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="17" ci="0" mb="2" cb="0"/><line nr="145" mi="2" ci="0" mb="2" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="8" mb="0" cb="2"/><line nr="160" mi="0" ci="4" mb="0" cb="2"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="12" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="1" cb="1"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="1" cb="1"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="6" mb="1" cb="1"/><line nr="180" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="1" cb="1"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="188" mi="8" ci="0" mb="0" cb="0"/><line nr="189" mi="7" ci="0" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="4" ci="0" mb="0" cb="0"/><line nr="196" mi="8" ci="0" mb="2" cb="0"/><line nr="197" mi="4" ci="0" mb="2" cb="0"/><line nr="198" mi="5" ci="0" mb="0" cb="0"/><line nr="200" mi="4" ci="0" mb="0" cb="0"/><line nr="201" mi="5" ci="0" mb="0" cb="0"/><line nr="205" mi="3" ci="0" mb="0" cb="0"/><line nr="209" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="303" covered="229"/><counter type="BRANCH" missed="40" covered="22"/><counter type="LINE" missed="60" covered="45"/><counter type="COMPLEXITY" missed="36" covered="22"/><counter type="METHOD" missed="14" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TempFileManager.java"><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="2"/><line nr="34" mi="0" ci="10" mb="0" cb="0"/><line nr="35" mi="0" ci="9" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="11" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="7" ci="10" mb="1" cb="1"/><line nr="55" mi="0" ci="5" mb="1" cb="1"/><line nr="57" mi="0" ci="5" mb="1" cb="1"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="11" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="1" cb="1"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="6" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="11" mb="0" cb="2"/><line nr="100" mi="0" ci="3" mb="0" cb="2"/><line nr="102" mi="0" ci="6" mb="0" cb="2"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="37" covered="161"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="11" covered="36"/><counter type="COMPLEXITY" missed="7" covered="11"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="SingleIterator.java"><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="7" ci="0" mb="2" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SmartProgressReporter.java"><line nr="25" mi="6" ci="0" mb="0" cb="0"/><line nr="28" mi="12" ci="0" mb="0" cb="0"/><line nr="29" mi="6" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="20" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="2" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="7" ci="0" mb="4" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="6" ci="0" mb="2" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="11" ci="0" mb="4" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="2" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="2" cb="0"/><line nr="126" mi="11" ci="0" mb="6" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="10" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="6" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="6" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="20" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="2" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="2" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="6" ci="0" mb="0" cb="0"/><line nr="150" mi="15" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="161" mi="1" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="15" ci="0" mb="2" cb="0"/><line nr="169" mi="5" ci="0" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="6" ci="0" mb="0" cb="0"/><line nr="176" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="5" ci="0" mb="0" cb="0"/><line nr="180" mi="1" ci="0" mb="0" cb="0"/><line nr="183" mi="6" ci="0" mb="0" cb="0"/><line nr="184" mi="1" ci="0" mb="0" cb="0"/><line nr="187" mi="7" ci="0" mb="0" cb="0"/><line nr="188" mi="1" ci="0" mb="0" cb="0"/><line nr="191" mi="15" ci="0" mb="0" cb="0"/><line nr="194" mi="11" ci="0" mb="0" cb="0"/><line nr="199" mi="11" ci="0" mb="2" cb="0"/><line nr="205" mi="11" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="6" ci="0" mb="0" cb="0"/><line nr="210" mi="8" ci="0" mb="0" cb="0"/><line nr="215" mi="10" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="426" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="94" covered="0"/><counter type="COMPLEXITY" missed="46" covered="0"/><counter type="METHOD" missed="30" covered="0"/><counter type="CLASS" missed="4" covered="0"/></sourcefile><sourcefile name="LambdaLatch.java"><line nr="56" mi="0" ci="10" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="1" ci="9" mb="1" cb="1"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="2"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="2"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="1" cb="1"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="2"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="1" cb="1"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="7" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="76"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="7" covered="21"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayIterator.java"><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="12" ci="0" mb="2" cb="0"/><line nr="36" mi="11" ci="0" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NSequenceWithQualityPrintHelper.java"><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="10" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="9" ci="0" mb="0" cb="0"/><line nr="43" mi="8" ci="0" mb="0" cb="0"/><line nr="44" mi="9" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="10" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="9" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="0" cb="0"/><line nr="60" mi="9" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="8" ci="0" mb="2" cb="0"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="6" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="180" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="36" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="VersionInfo.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="2" cb="0"/><line nr="77" mi="9" ci="0" mb="4" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="11" ci="0" mb="2" cb="0"/><line nr="80" mi="6" ci="0" mb="2" cb="0"/><line nr="81" mi="6" ci="0" mb="2" cb="0"/><line nr="82" mi="6" ci="0" mb="2" cb="0"/><line nr="83" mi="6" ci="0" mb="2" cb="0"/><line nr="84" mi="5" ci="0" mb="2" cb="0"/><line nr="89" mi="34" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="47" mb="0" cb="0"/><line nr="105" mi="0" ci="14" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="2" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="2" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="2" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="8" mb="3" cb="1"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="7" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="8" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="132" covered="136"/><counter type="BRANCH" missed="27" covered="1"/><counter type="LINE" missed="26" covered="24"/><counter type="COMPLEXITY" missed="24" covered="5"/><counter type="METHOD" missed="9" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ParserException.java"><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="4"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LightFileDescriptor.java"><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="10" mb="0" cb="4"/><line nr="76" mi="0" ci="7" mb="0" cb="2"/><line nr="80" mi="0" ci="7" mb="0" cb="2"/><line nr="87" mi="0" ci="6" mb="0" cb="4"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="1" cb="1"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="12" mb="2" cb="6"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="12" mb="2" cb="4"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="12" mb="2" cb="4"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="15" ci="0" mb="0" cb="0"/><line nr="110" mi="10" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="2"/><line nr="130" mi="0" ci="6" mb="2" cb="2"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="8" mb="0" cb="0"/><line nr="138" mi="0" ci="11" mb="0" cb="0"/><line nr="139" mi="0" ci="8" mb="1" cb="1"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="3" ci="0" mb="0" cb="0"/><line nr="155" mi="10" ci="0" mb="0" cb="0"/><line nr="156" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="162" mi="8" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="9" mb="0" cb="2"/><line nr="174" mi="0" ci="7" mb="0" cb="0"/><line nr="175" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="2" ci="3" mb="1" cb="1"/><line nr="183" mi="2" ci="3" mb="1" cb="1"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="11" mb="1" cb="1"/><line nr="186" mi="0" ci="6" mb="1" cb="1"/><line nr="187" mi="1" ci="4" mb="1" cb="1"/><line nr="192" mi="14" ci="0" mb="0" cb="0"/><line nr="193" mi="8" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="12" ci="0" mb="2" cb="0"/><line nr="202" mi="14" ci="0" mb="2" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="1" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="5" mb="0" cb="0"/><line nr="220" mi="0" ci="8" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="164" covered="262"/><counter type="BRANCH" missed="19" covered="39"/><counter type="LINE" missed="30" covered="54"/><counter type="COMPLEXITY" missed="21" covered="27"/><counter type="METHOD" missed="4" covered="15"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AtomicHistogram.java"><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="9" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="15" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="18" mb="0" cb="4"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="2"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="2"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="2"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="9" ci="0" mb="2" cb="0"/><line nr="76" mi="7" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="9" ci="0" mb="2" cb="0"/><line nr="84" mi="22" ci="0" mb="0" cb="0"/><line nr="85" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="10" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="7" mb="0" cb="0"/><line nr="101" mi="0" ci="7" mb="0" cb="2"/><line nr="102" mi="0" ci="9" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="12" ci="0" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="114" covered="151"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="21" covered="31"/><counter type="COMPLEXITY" missed="8" covered="14"/><counter type="METHOD" missed="6" covered="8"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="AbstractLongProcessReporter.java"><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="18" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="9" mb="0" cb="2"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="1" cb="1"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="6" ci="0" mb="2" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="2"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="90" mi="0" ci="12" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="128"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="4" covered="26"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="CountingInputStream.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="1" cb="1"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="7" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="2"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="1" cb="1"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="15" ci="0" mb="0" cb="0"/><line nr="89" mi="11" ci="0" mb="0" cb="0"/><line nr="94" mi="15" ci="0" mb="4" cb="0"/><counter type="INSTRUCTION" missed="51" covered="50"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="5" covered="17"/><counter type="COMPLEXITY" missed="10" covered="6"/><counter type="METHOD" missed="6" covered="5"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="FormatUtils.java"><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="2" ci="19" mb="1" cb="1"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="1" cb="1"/><line nr="46" mi="13" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="1" cb="1"/><line nr="50" mi="13" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="2"/><line nr="54" mi="0" ci="13" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="2"/><line nr="58" mi="0" ci="13" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="13" mb="0" cb="0"/><line nr="65" mi="2" ci="4" mb="1" cb="1"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="2"/><line nr="73" mi="0" ci="13" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="8" mb="0" cb="2"/><line nr="77" mi="0" ci="13" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="8" mb="0" cb="2"/><line nr="81" mi="0" ci="13" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="8" mb="1" cb="1"/><line nr="85" mi="0" ci="13" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="238"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="5" covered="33"/><counter type="COMPLEXITY" missed="6" covered="10"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ObjectSerializer.java"><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="10" ci="0" mb="0" cb="0"/><line nr="61" mi="9" ci="0" mb="2" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="10" ci="0" mb="0" cb="0"/><line nr="68" mi="15" ci="0" mb="0" cb="0"/><line nr="71" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="AtomicEnumHistogram.java"><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="11" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="2"/><line nr="38" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="9" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="19" mb="0" cb="2"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="8" mb="0" cb="2"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="121"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="2" covered="24"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="GlobalObjectMappers.java"><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="1" cb="1"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="CanReportProgressAndStage.java"/><sourcefile name="IntArrayList.java"><line nr="29" mi="3" ci="9" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="2"/><line nr="56" mi="0" ci="8" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="11" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="6" ci="0" mb="4" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="6" ci="0" mb="0" cb="0"/><line nr="72" mi="13" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="6" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="9" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="2" cb="2"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="8" mb="0" cb="2"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="16" mb="0" cb="4"/><line nr="113" mi="0" ci="10" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="8" mb="0" cb="0"/><line nr="143" mi="0" ci="11" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="0" cb="0"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="12" ci="0" mb="2" cb="0"/><line nr="167" mi="9" ci="0" mb="0" cb="0"/><line nr="168" mi="16" ci="0" mb="0" cb="0"/><line nr="169" mi="5" ci="0" mb="0" cb="0"/><line nr="171" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="6" mb="2" cb="2"/><line nr="175" mi="17" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="8" ci="0" mb="2" cb="0"/><line nr="181" mi="6" ci="0" mb="2" cb="0"/><line nr="182" mi="5" ci="0" mb="0" cb="0"/><line nr="183" mi="2" ci="0" mb="0" cb="0"/><line nr="185" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="0" cb="0"/><line nr="190" mi="8" ci="0" mb="2" cb="0"/><line nr="191" mi="6" ci="0" mb="2" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="0" ci="8" mb="0" cb="0"/><line nr="203" mi="0" ci="7" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="8" ci="0" mb="2" cb="0"/><line nr="215" mi="8" ci="0" mb="2" cb="0"/><line nr="216" mi="6" ci="0" mb="2" cb="0"/><line nr="217" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="2" ci="0" mb="0" cb="0"/><line nr="222" mi="0" ci="7" mb="0" cb="2"/><line nr="227" mi="12" ci="0" mb="0" cb="0"/><line nr="232" mi="2" ci="0" mb="2" cb="0"/><line nr="233" mi="2" ci="0" mb="0" cb="0"/><line nr="234" mi="5" ci="0" mb="2" cb="0"/><line nr="235" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="3" ci="0" mb="0" cb="0"/><line nr="237" mi="5" ci="0" mb="2" cb="0"/><line nr="238" mi="2" ci="0" mb="0" cb="0"/><line nr="239" mi="8" ci="0" mb="2" cb="0"/><line nr="240" mi="9" ci="0" mb="2" cb="0"/><line nr="241" mi="2" ci="0" mb="0" cb="0"/><line nr="242" mi="2" ci="0" mb="0" cb="0"/><line nr="247" mi="2" ci="0" mb="0" cb="0"/><line nr="248" mi="8" ci="0" mb="2" cb="0"/><line nr="249" mi="9" ci="0" mb="0" cb="0"/><line nr="250" mi="2" ci="0" mb="0" cb="0"/><line nr="255" mi="5" ci="0" mb="0" cb="0"/><line nr="256" mi="3" ci="0" mb="2" cb="0"/><line nr="257" mi="2" ci="0" mb="0" cb="0"/><line nr="258" mi="4" ci="0" mb="0" cb="0"/><line nr="259" mi="4" ci="0" mb="0" cb="0"/><line nr="260" mi="4" ci="0" mb="0" cb="0"/><line nr="261" mi="7" ci="0" mb="0" cb="0"/><line nr="262" mi="3" ci="0" mb="2" cb="0"/><line nr="263" mi="5" ci="0" mb="0" cb="0"/><line nr="264" mi="4" ci="0" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="317" covered="284"/><counter type="BRANCH" missed="40" covered="16"/><counter type="LINE" missed="63" covered="62"/><counter type="COMPLEXITY" missed="34" covered="28"/><counter type="METHOD" missed="12" covered="22"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Bit2Array.java"><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="8" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="15" mb="0" cb="0"/><line nr="50" mi="0" ci="19" mb="0" cb="0"/><line nr="51" mi="0" ci="19" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="12" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="2" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="13" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="8" ci="0" mb="2" cb="0"/><line nr="67" mi="7" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="16" ci="0" mb="8" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="2" cb="0"/><line nr="78" mi="10" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="8" ci="0" mb="0" cb="0"/><line nr="85" mi="7" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="1" cb="1"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="1" cb="1"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="1" cb="1"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="1" cb="1"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="16" mb="4" cb="6"/><line nr="107" mi="16" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="7" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="8" mb="0" cb="2"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="7" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="6" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="181" covered="135"/><counter type="BRANCH" missed="22" covered="12"/><counter type="LINE" missed="35" covered="21"/><counter type="COMPLEXITY" missed="25" covered="8"/><counter type="METHOD" missed="10" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntCombinations.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="1" cb="1"/><line nr="16" mi="5" ci="0" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="8" mb="0" cb="2"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="8" mb="0" cb="2"/><line nr="33" mi="0" ci="12" mb="0" cb="2"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="2"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="2"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="9" mb="1" cb="1"/><line nr="49" mi="0" ci="12" mb="0" cb="2"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="11" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="2"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="122"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LambdaExecutionException.java"><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LongProcessReporter.java"><line nr="22" mi="0" ci="8" mb="0" cb="0"/><line nr="25" mi="11" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="11"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="1" covered="3"/></sourcefile><sourcefile name="StreamUtil.java"><line nr="25" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="HashFunctions.java"><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="6" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="6" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="6" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="6" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="6" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="6" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="8" ci="0" mb="0" cb="0"/><line nr="125" mi="6" ci="0" mb="0" cb="0"/><line nr="126" mi="6" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="6" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="142" mi="0" ci="6" mb="0" cb="0"/><line nr="143" mi="0" ci="10" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="145" mi="0" ci="10" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="8" ci="0" mb="0" cb="0"/><line nr="159" mi="6" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="6" ci="0" mb="0" cb="0"/><line nr="162" mi="6" ci="0" mb="0" cb="0"/><line nr="163" mi="6" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="8" ci="0" mb="2" cb="0"/><line nr="200" mi="9" ci="0" mb="0" cb="0"/><line nr="201" mi="4" ci="0" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="0" cb="0"/><line nr="223" mi="2" ci="0" mb="0" cb="0"/><line nr="224" mi="7" ci="0" mb="0" cb="0"/><line nr="225" mi="4" ci="0" mb="0" cb="0"/><line nr="226" mi="9" ci="0" mb="0" cb="0"/><line nr="227" mi="4" ci="0" mb="0" cb="0"/><line nr="228" mi="9" ci="0" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="0" cb="0"/><line nr="230" mi="7" ci="0" mb="0" cb="0"/><line nr="231" mi="4" ci="0" mb="0" cb="0"/><line nr="232" mi="3" ci="0" mb="0" cb="0"/><line nr="251" mi="2" ci="0" mb="0" cb="0"/><line nr="252" mi="8" ci="0" mb="2" cb="0"/><line nr="253" mi="9" ci="0" mb="0" cb="0"/><line nr="254" mi="4" ci="0" mb="0" cb="0"/><line nr="256" mi="2" ci="0" mb="0" cb="0"/><line nr="276" mi="2" ci="0" mb="0" cb="0"/><line nr="277" mi="6" ci="0" mb="0" cb="0"/><line nr="278" mi="4" ci="0" mb="0" cb="0"/><line nr="279" mi="8" ci="0" mb="0" cb="0"/><line nr="280" mi="4" ci="0" mb="0" cb="0"/><line nr="281" mi="8" ci="0" mb="0" cb="0"/><line nr="282" mi="4" ci="0" mb="0" cb="0"/><line nr="283" mi="8" ci="0" mb="0" cb="0"/><line nr="284" mi="4" ci="0" mb="0" cb="0"/><line nr="285" mi="8" ci="0" mb="0" cb="0"/><line nr="286" mi="4" ci="0" mb="0" cb="0"/><line nr="287" mi="8" ci="0" mb="0" cb="0"/><line nr="288" mi="4" ci="0" mb="0" cb="0"/><line nr="289" mi="8" ci="0" mb="0" cb="0"/><line nr="290" mi="4" ci="0" mb="0" cb="0"/><line nr="291" mi="6" ci="0" mb="0" cb="0"/><line nr="292" mi="4" ci="0" mb="0" cb="0"/><line nr="293" mi="2" ci="0" mb="0" cb="0"/><line nr="313" mi="2" ci="0" mb="0" cb="0"/><line nr="314" mi="6" ci="0" mb="0" cb="0"/><line nr="315" mi="4" ci="0" mb="0" cb="0"/><line nr="316" mi="8" ci="0" mb="0" cb="0"/><line nr="317" mi="4" ci="0" mb="0" cb="0"/><line nr="318" mi="8" ci="0" mb="0" cb="0"/><line nr="319" mi="4" ci="0" mb="0" cb="0"/><line nr="320" mi="8" ci="0" mb="0" cb="0"/><line nr="321" mi="4" ci="0" mb="0" cb="0"/><line nr="322" mi="8" ci="0" mb="0" cb="0"/><line nr="323" mi="4" ci="0" mb="0" cb="0"/><line nr="324" mi="8" ci="0" mb="0" cb="0"/><line nr="325" mi="4" ci="0" mb="0" cb="0"/><line nr="326" mi="8" ci="0" mb="0" cb="0"/><line nr="327" mi="4" ci="0" mb="0" cb="0"/><line nr="328" mi="6" ci="0" mb="0" cb="0"/><line nr="329" mi="4" ci="0" mb="0" cb="0"/><line nr="330" mi="3" ci="0" mb="0" cb="0"/><line nr="346" mi="2" ci="0" mb="0" cb="0"/><line nr="347" mi="2" ci="0" mb="0" cb="0"/><line nr="350" mi="3" ci="0" mb="0" cb="0"/><line nr="351" mi="4" ci="0" mb="0" cb="0"/><line nr="353" mi="2" ci="0" mb="0" cb="0"/><line nr="354" mi="3" ci="0" mb="2" cb="0"/><line nr="355" mi="6" ci="0" mb="0" cb="0"/><line nr="356" mi="12" ci="0" mb="0" cb="0"/><line nr="357" mi="12" ci="0" mb="0" cb="0"/><line nr="358" mi="12" ci="0" mb="0" cb="0"/><line nr="360" mi="4" ci="0" mb="0" cb="0"/><line nr="361" mi="6" ci="0" mb="0" cb="0"/><line nr="362" mi="4" ci="0" mb="0" cb="0"/><line nr="364" mi="4" ci="0" mb="0" cb="0"/><line nr="365" mi="4" ci="0" mb="0" cb="0"/><line nr="367" mi="1" ci="0" mb="0" cb="0"/><line nr="368" mi="1" ci="0" mb="0" cb="0"/><line nr="369" mi="1" ci="0" mb="0" cb="0"/><line nr="371" mi="2" ci="0" mb="4" cb="0"/><line nr="373" mi="12" ci="0" mb="0" cb="0"/><line nr="375" mi="12" ci="0" mb="0" cb="0"/><line nr="377" mi="8" ci="0" mb="0" cb="0"/><line nr="378" mi="4" ci="0" mb="0" cb="0"/><line nr="381" mi="6" ci="0" mb="0" cb="0"/><line nr="382" mi="4" ci="0" mb="0" cb="0"/><line nr="383" mi="6" ci="0" mb="0" cb="0"/><line nr="385" mi="2" ci="0" mb="0" cb="0"/><line nr="400" mi="2" ci="0" mb="0" cb="0"/><line nr="402" mi="4" ci="0" mb="0" cb="0"/><line nr="403" mi="4" ci="0" mb="0" cb="0"/><line nr="404" mi="6" ci="0" mb="0" cb="0"/><line nr="405" mi="4" ci="0" mb="0" cb="0"/><line nr="406" mi="4" ci="0" mb="0" cb="0"/><line nr="407" mi="4" ci="0" mb="0" cb="0"/><line nr="408" mi="6" ci="0" mb="0" cb="0"/><line nr="409" mi="4" ci="0" mb="0" cb="0"/><line nr="410" mi="6" ci="0" mb="0" cb="0"/><line nr="411" mi="2" ci="0" mb="0" cb="0"/><line nr="424" mi="4" ci="0" mb="0" cb="0"/><line nr="437" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="691" covered="92"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="138" covered="15"/><counter type="COMPLEXITY" missed="18" covered="2"/><counter type="METHOD" missed="12" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringUtil.java"><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LambdaSemaphore.java"><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="8" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="10" mb="0" cb="4"/><line nr="54" mi="0" ci="7" mb="0" cb="2"/><line nr="55" mi="0" ci="10" mb="0" cb="2"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="1" cb="1"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="105"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CanReportProgress.java"/><sourcefile name="RandomUtil.java"><line nr="27" mi="0" ci="7" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="9" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="62"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><counter type="INSTRUCTION" missed="3193" covered="3195"/><counter type="BRANCH" missed="254" covered="260"/><counter type="LINE" missed="646" covered="653"/><counter type="COMPLEXITY" missed="312" covered="275"/><counter type="METHOD" missed="154" covered="174"/><counter type="CLASS" missed="15" covered="39"/></package><package name="com/milaboratory/core/alignment/benchmark"><class name="com/milaboratory/core/alignment/benchmark/Challenge" sourcefilename="Challenge.java"><method name="&lt;init&gt;" desc="([Lcom/milaboratory/core/sequence/NucleotideSequence;Ljava/util/List;Lcom/milaboratory/core/alignment/benchmark/ChallengeParameters;J)V" line="21"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDB" desc="()[Lcom/milaboratory/core/sequence/NucleotideSequence;" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="queries" desc="()Lcc/redberry/pipe/OutputPort;" line="33"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/benchmark/ChallengeParameters" sourcefilename="ChallengeParameters.java"><method name="&lt;init&gt;" desc="(IIIIIIIIIIIDDDLcom/milaboratory/core/mutations/generator/NucleotideMutationModel;IILcom/milaboratory/core/alignment/AffineGapAlignmentScoring;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setQueryCount" desc="(I)Lcom/milaboratory/core/alignment/benchmark/ChallengeParameters;" line="52"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/benchmark/Benchmark" sourcefilename="Benchmark.java"><method name="&lt;init&gt;" desc="(J)V" line="21"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(JJ)V" line="24"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExceptionListener" desc="(Lcom/milaboratory/core/alignment/benchmark/Benchmark$ExceptionListener;)V" line="30"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="process" desc="(Lcom/milaboratory/core/alignment/benchmark/BenchmarkInput;)Lcom/milaboratory/core/alignment/benchmark/BenchmarkResults;" line="35"><counter type="INSTRUCTION" missed="46" covered="185"/><counter type="BRANCH" missed="9" covered="19"/><counter type="LINE" missed="15" covered="41"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="50" covered="199"/><counter type="BRANCH" missed="9" covered="19"/><counter type="LINE" missed="17" covered="47"/><counter type="COMPLEXITY" missed="9" covered="9"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/benchmark/ChallengeProvider" sourcefilename="ChallengeProvider.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/benchmark/ChallengeParameters;J)V" line="38"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="take" desc="()Lcom/milaboratory/core/alignment/benchmark/Challenge;" line="46"><counter type="INSTRUCTION" missed="215" covered="383"/><counter type="BRANCH" missed="17" covered="19"/><counter type="LINE" missed="29" covered="51"/><counter type="COMPLEXITY" missed="12" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateDB" desc="(Lorg/apache/commons/math3/random/RandomDataGenerator;Lcom/milaboratory/core/alignment/benchmark/ChallengeParameters;)[Lcom/milaboratory/core/sequence/NucleotideSequence;" line="170"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomSequence" desc="(Lcom/milaboratory/core/sequence/Alphabet;Lorg/apache/commons/math3/random/RandomDataGenerator;IIZ)Lcom/milaboratory/core/sequence/Sequence;" line="178"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomSequence" desc="(Lcom/milaboratory/core/sequence/Alphabet;Lorg/apache/commons/math3/random/RandomGenerator;IIZ)Lcom/milaboratory/core/sequence/Sequence;" line="183"><counter type="INSTRUCTION" missed="4" covered="37"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParams1NoGap" desc="(Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;IID)Lcom/milaboratory/core/alignment/benchmark/ChallengeParameters;" line="194"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParamsOneCluster" desc="(Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;IID)Lcom/milaboratory/core/alignment/benchmark/ChallengeParameters;" line="211"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParamsTwoClusters" desc="(Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;IID)Lcom/milaboratory/core/alignment/benchmark/ChallengeParameters;" line="226"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="279" covered="510"/><counter type="BRANCH" missed="20" covered="26"/><counter type="LINE" missed="35" covered="72"/><counter type="COMPLEXITY" missed="17" covered="15"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/benchmark/Benchmark$ExceptionListener" sourcefilename="Benchmark.java"/><class name="com/milaboratory/core/alignment/benchmark/Benchmark$ExceptionData" sourcefilename="Benchmark.java"><method name="&lt;init&gt;" desc="(JLjava/lang/Throwable;[Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/alignment/benchmark/BenchmarkInput;)V" line="130"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/benchmark/BenchmarkResults" sourcefilename="BenchmarkResults.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/benchmark/BenchmarkInput;Lcom/milaboratory/core/alignment/kaligner2/KAligner2Statistics;JIIIIII)V" line="22"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInput" desc="()Lcom/milaboratory/core/alignment/benchmark/BenchmarkInput;" line="35"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStat" desc="()Lcom/milaboratory/core/alignment/kaligner2/KAligner2Statistics;" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExecutionTime" desc="()J" line="43"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessedGoodQueries" desc="()I" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProcessedQueries" desc="()I" line="50"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMismatched" desc="()I" line="53"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNoHits" desc="()I" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNoHitsFraction" desc="()D" line="61"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMismatchedFraction" desc="()D" line="65"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBadFraction" desc="()D" line="69"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFalsePositiveFraction" desc="()D" line="73"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getScoreErrorFraction" desc="()D" line="77"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAverageTiming" desc="()J" line="81"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="38" covered="82"/><counter type="LINE" missed="8" covered="16"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="8" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/benchmark/BenchmarkInput" sourcefilename="BenchmarkInput.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/batch/BatchAlignerWithBaseParameters;Lcom/milaboratory/core/alignment/benchmark/Challenge;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/benchmark/KAlignerQuery" sourcefilename="KAlignerQuery.java"><method name="&lt;init&gt;" desc="(ILjava/util/List;Ljava/util/List;Ljava/util/List;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/alignment/Alignment;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFalse" desc="()Z" line="36"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ChallengeParameters.java"><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="39" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BenchmarkInput.java"><line nr="12" mi="0" ci="2" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BenchmarkResults.java"><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="10" ci="0" mb="0" cb="0"/><line nr="65" mi="10" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="13" mb="0" cb="0"/><line nr="73" mi="0" ci="13" mb="0" cb="0"/><line nr="77" mi="0" ci="16" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="38" covered="82"/><counter type="LINE" missed="8" covered="16"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="8" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KAlignerQuery.java"><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="8" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="8" mb="0" cb="2"/><line nr="41" mi="32" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ChallengeProvider.java"><line nr="32" mi="2" ci="5" mb="1" cb="1"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="9" mb="0" cb="2"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="9" mb="0" cb="2"/><line nr="66" mi="0" ci="13" mb="0" cb="0"/><line nr="69" mi="0" ci="8" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="10" mb="0" cb="0"/><line nr="77" mi="7" ci="11" mb="1" cb="1"/><line nr="78" mi="1" ci="5" mb="0" cb="2"/><line nr="79" mi="0" ci="3" mb="1" cb="1"/><line nr="80" mi="0" ci="17" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="1" cb="1"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="9" mb="0" cb="0"/><line nr="86" mi="0" ci="11" mb="0" cb="0"/><line nr="87" mi="0" ci="13" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="11" ci="0" mb="2" cb="0"/><line nr="95" mi="12" ci="0" mb="0" cb="0"/><line nr="97" mi="6" ci="0" mb="0" cb="0"/><line nr="98" mi="10" ci="0" mb="2" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="11" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="2" cb="0"/><line nr="104" mi="8" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="12" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="11" ci="0" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="2" cb="0"/><line nr="115" mi="7" ci="0" mb="0" cb="0"/><line nr="117" mi="17" ci="0" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="2" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="123" mi="9" ci="0" mb="0" cb="0"/><line nr="124" mi="21" ci="0" mb="0" cb="0"/><line nr="125" mi="14" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="9" mb="0" cb="2"/><line nr="130" mi="0" ci="13" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="16" mb="0" cb="0"/><line nr="136" mi="0" ci="17" mb="0" cb="0"/><line nr="139" mi="0" ci="9" mb="0" cb="2"/><line nr="140" mi="0" ci="7" mb="1" cb="1"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="1" cb="1"/><line nr="143" mi="5" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="4" ci="7" mb="1" cb="1"/><line nr="152" mi="0" ci="4" mb="1" cb="1"/><line nr="154" mi="0" ci="10" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="9" mb="0" cb="2"/><line nr="160" mi="0" ci="41" mb="0" cb="0"/><line nr="165" mi="0" ci="8" mb="0" cb="0"/><line nr="166" mi="0" ci="9" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="8" mb="0" cb="2"/><line nr="172" mi="0" ci="12" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="8" mb="0" cb="0"/><line nr="183" mi="2" ci="10" mb="1" cb="1"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="7" mb="0" cb="2"/><line nr="187" mi="2" ci="11" mb="1" cb="1"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="19" ci="0" mb="0" cb="0"/><line nr="199" mi="5" ci="0" mb="0" cb="0"/><line nr="200" mi="5" ci="0" mb="0" cb="0"/><line nr="211" mi="0" ci="19" mb="0" cb="0"/><line nr="216" mi="0" ci="5" mb="0" cb="0"/><line nr="217" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="19" ci="0" mb="0" cb="0"/><line nr="231" mi="5" ci="0" mb="0" cb="0"/><line nr="232" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="279" covered="510"/><counter type="BRANCH" missed="20" covered="26"/><counter type="LINE" missed="35" covered="72"/><counter type="COMPLEXITY" missed="17" covered="15"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Benchmark.java"><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="8" mb="0" cb="2"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="13" mb="1" cb="1"/><line nr="54" mi="0" ci="7" mb="0" cb="2"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="1" cb="1"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="2"/><line nr="68" mi="0" ci="3" mb="0" cb="2"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="1" cb="1"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="11" mb="0" cb="2"/><line nr="79" mi="0" ci="8" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="1" cb="1"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="0"/><line nr="89" mi="0" ci="11" mb="1" cb="1"/><line nr="90" mi="0" ci="6" mb="1" cb="1"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="1" cb="1"/><line nr="93" mi="0" ci="10" mb="0" cb="2"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="2" cb="0"/><line nr="109" mi="13" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="13" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="68" covered="199"/><counter type="BRANCH" missed="9" covered="19"/><counter type="LINE" missed="24" covered="47"/><counter type="COMPLEXITY" missed="10" covered="9"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="Challenge.java"><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="417" covered="956"/><counter type="BRANCH" missed="29" covered="47"/><counter type="LINE" missed="68" covered="179"/><counter type="COMPLEXITY" missed="36" covered="40"/><counter type="METHOD" missed="13" covered="25"/><counter type="CLASS" missed="1" covered="7"/></package><package name="com/milaboratory/core/clustering"><class name="com/milaboratory/core/clustering/Clustering$3" sourcefilename="Clustering.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;Lcom/milaboratory/core/clustering/SequenceExtractor;)V" line="249"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/lang/Object;Ljava/lang/Object;)I" line="252"><counter type="INSTRUCTION" missed="10" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/clustering/Clustering$1" sourcefilename="Clustering.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/clustering/Clustering;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="()[Ljava/lang/Object;" line="94"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/clustering/Clustering$2" sourcefilename="Clustering.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;Lcom/milaboratory/core/clustering/SequenceExtractor;)V" line="233"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lcom/milaboratory/core/clustering/Cluster;Lcom/milaboratory/core/clustering/Cluster;)I" line="236"><counter type="INSTRUCTION" missed="12" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/clustering/SequenceExtractor" sourcefilename="SequenceExtractor.java"/><class name="com/milaboratory/core/clustering/Clustering" sourcefilename="Clustering.java"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;Lcom/milaboratory/core/clustering/SequenceExtractor;Lcom/milaboratory/core/clustering/ClusteringStrategy;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProgress" desc="()D" line="66"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFinished" desc="()Z" line="71"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="performClustering" desc="()Ljava/util/List;" line="76"><counter type="INSTRUCTION" missed="10" covered="322"/><counter type="BRANCH" missed="4" covered="36"/><counter type="LINE" missed="2" covered="72"/><counter type="COMPLEXITY" missed="4" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClusters" desc="()Ljava/util/List;" line="223"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getComparatorOfClusters" desc="(Ljava/util/Comparator;Lcom/milaboratory/core/clustering/SequenceExtractor;)Ljava/util/Comparator;" line="233"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComparatorOfObjectsRegardingSequences" desc="(Ljava/util/Comparator;Lcom/milaboratory/core/clustering/SequenceExtractor;)Ljava/util/Comparator;" line="249"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="performClustering" desc="(Ljava/util/Collection;Lcom/milaboratory/core/clustering/SequenceExtractor;Lcom/milaboratory/core/clustering/ClusteringStrategy;)Ljava/util/List;" line="266"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="47" covered="365"/><counter type="BRANCH" missed="9" covered="37"/><counter type="LINE" missed="7" covered="82"/><counter type="COMPLEXITY" missed="10" covered="22"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/clustering/ClusteringStrategy" sourcefilename="ClusteringStrategy.java"><method name="getMutationGuide" desc="(Lcom/milaboratory/core/clustering/Cluster;)Lcom/milaboratory/core/tree/MutationGuide;" line="49"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/clustering/Cluster" sourcefilename="Cluster.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lcom/milaboratory/core/clustering/Cluster;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHead" desc="()Ljava/lang/Object;" line="46"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRoot" desc="()Lcom/milaboratory/core/clustering/Cluster;" line="50"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lcom/milaboratory/core/clustering/Cluster;)V" line="57"><counter type="INSTRUCTION" missed="4" covered="20"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="totalCount" desc="()I" line="65"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processAllChildren" desc="(Lgnu/trove/procedure/TObjectProcedure;)V" line="74"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="(Ljava/util/Comparator;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="91"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAll" desc="([Lcom/milaboratory/core/clustering/Cluster;)Ljava/util/ArrayList;" line="97"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addToList" desc="(Lcom/milaboratory/core/clustering/Cluster;Ljava/util/ArrayList;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="113"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="126"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="132"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Ljava/lang/StringBuilder;I)V" line="138"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="spaces" desc="(I)Ljava/lang/String;" line="146"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="181" covered="164"/><counter type="BRANCH" missed="35" covered="21"/><counter type="LINE" missed="34" covered="38"/><counter type="COMPLEXITY" missed="27" covered="18"/><counter type="METHOD" missed="8" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Clustering.java"><line nr="50" mi="2" ci="6" mb="1" cb="1"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="11" ci="0" mb="0" cb="0"/><line nr="71" mi="10" ci="0" mb="2" cb="0"/><line nr="76" mi="0" ci="4" mb="1" cb="1"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="8" mb="0" cb="0"/><line nr="91" mi="0" ci="11" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="9" mb="0" cb="2"/><line nr="102" mi="0" ci="9" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="2"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="0" ci="7" mb="0" cb="0"/><line nr="108" mi="0" ci="8" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="8" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="2"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="10" mb="0" cb="2"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="16" mb="0" cb="2"/><line nr="133" mi="0" ci="3" mb="0" cb="2"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="2"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="7" mb="0" cb="2"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="10" mb="0" cb="2"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="2"/><line nr="164" mi="0" ci="4" mb="1" cb="1"/><line nr="165" mi="1" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="8" mb="0" cb="2"/><line nr="172" mi="0" ci="4" mb="0" cb="2"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="12" mb="0" cb="2"/><line nr="180" mi="0" ci="2" mb="0" cb="2"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="10" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="4" ci="4" mb="2" cb="2"/><line nr="195" mi="0" ci="2" mb="0" cb="2"/><line nr="197" mi="0" ci="7" mb="0" cb="0"/><line nr="198" mi="0" ci="1" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="2"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="215" mi="0" ci="5" mb="0" cb="0"/><line nr="218" mi="0" ci="5" mb="0" cb="0"/><line nr="223" mi="6" ci="0" mb="2" cb="0"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><line nr="225" mi="3" ci="0" mb="0" cb="0"/><line nr="233" mi="0" ci="15" mb="0" cb="0"/><line nr="236" mi="0" ci="8" mb="0" cb="0"/><line nr="237" mi="4" ci="3" mb="1" cb="1"/><line nr="238" mi="8" ci="1" mb="0" cb="0"/><line nr="249" mi="0" ci="15" mb="0" cb="0"/><line nr="252" mi="0" ci="6" mb="0" cb="0"/><line nr="253" mi="3" ci="3" mb="1" cb="1"/><line nr="254" mi="7" ci="1" mb="0" cb="0"/><line nr="266" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="69" covered="415"/><counter type="BRANCH" missed="11" covered="39"/><counter type="LINE" missed="7" covered="89"/><counter type="COMPLEXITY" missed="12" covered="28"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="ClusteringStrategy.java"><line nr="49" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SequenceExtractor.java"/><sourcefile name="Cluster.java"><line nr="30" mi="2" ci="6" mb="1" cb="1"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="2" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="4" ci="6" mb="2" cb="2"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="2"/><line nr="67" mi="0" ci="11" mb="0" cb="2"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="2" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="11" ci="0" mb="2" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="2"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="11" mb="0" cb="2"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="16" mb="0" cb="2"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="9" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="2"/><line nr="107" mi="0" ci="11" mb="0" cb="2"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="2" cb="0"/><line nr="114" mi="9" ci="0" mb="4" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="13" ci="0" mb="6" cb="0"/><line nr="119" mi="8" ci="0" mb="2" cb="0"/><line nr="120" mi="15" ci="0" mb="6" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="13" ci="0" mb="2" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="17" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="2" cb="0"/><line nr="140" mi="1" ci="0" mb="0" cb="0"/><line nr="141" mi="11" ci="0" mb="2" cb="0"/><line nr="142" mi="7" ci="0" mb="0" cb="0"/><line nr="143" mi="1" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="181" covered="164"/><counter type="BRANCH" missed="35" covered="21"/><counter type="LINE" missed="34" covered="38"/><counter type="COMPLEXITY" missed="27" covered="18"/><counter type="METHOD" missed="8" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="250" covered="581"/><counter type="BRANCH" missed="46" covered="60"/><counter type="LINE" missed="41" covered="128"/><counter type="COMPLEXITY" missed="39" covered="47"/><counter type="METHOD" missed="11" covered="22"/><counter type="CLASS" missed="0" covered="6"/></package><package name="com/milaboratory/core/sequence/provider"><class name="com/milaboratory/core/sequence/provider/SequenceProviderUtils$LazySequenceProvider" sourcefilename="SequenceProviderUtils.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/provider/SequenceProviderFactory;)V" line="92"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forceInitialize" desc="()V" line="99"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInitialized" desc="()Z" line="104"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ensureProvider" desc="()V" line="108"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="117"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRegion" desc="(Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/sequence/Sequence;" line="123"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/sequence/provider/SequenceProviderUtils$SubSequenceProvider" sourcefilename="SequenceProviderUtils.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/Range;Lcom/milaboratory/core/sequence/provider/SequenceProvider;)V" line="62"><counter type="INSTRUCTION" missed="13" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forceInitialize" desc="()V" line="74"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="79"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRegion" desc="(Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/sequence/Sequence;" line="84"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/provider/SequenceProviderUtils" sourcefilename="SequenceProviderUtils.java"><method name="reversedProvider" desc="(Lcom/milaboratory/core/sequence/provider/SequenceProvider;)Lcom/milaboratory/core/sequence/provider/SequenceProvider;" line="27"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subProvider" desc="(Lcom/milaboratory/core/sequence/provider/SequenceProvider;Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/sequence/provider/SequenceProvider;" line="31"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromSequence" desc="(Lcom/milaboratory/core/sequence/Sequence;)Lcom/milaboratory/core/sequence/provider/SequenceProvider;" line="35"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lazyProvider" desc="(Lcom/milaboratory/core/sequence/provider/SequenceProviderFactory;)Lcom/milaboratory/core/sequence/provider/SequenceProvider;" line="55"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="11"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/provider/SequenceProviderIndexOutOfBoundsException" sourcefilename="SequenceProviderIndexOutOfBoundsException.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/Range;)V" line="23"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAvailableRange" desc="()Lcom/milaboratory/core/Range;" line="28"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/sequence/provider/SequenceProviderFactory" sourcefilename="SequenceProviderFactory.java"/><class name="com/milaboratory/core/sequence/provider/CachedSequenceProvider" sourcefilename="CachedSequenceProvider.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;Lcom/milaboratory/core/sequence/provider/SequenceProvider;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;Ljava/lang/String;)V" line="52"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;ILjava/lang/String;)V" line="63"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;I)V" line="73"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureEntry" desc="(Lcom/milaboratory/core/Range;)Ljava/util/Map$Entry;" line="86"><counter type="INSTRUCTION" missed="13" covered="138"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="2" covered="25"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entrySet" desc="()Ljava/util/Set;" line="136"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forceInitialize" desc="()V" line="141"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="146"><counter type="INSTRUCTION" missed="28" covered="27"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="5" covered="7"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRegion" desc="(Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/sequence/Sequence;" line="165"><counter type="INSTRUCTION" missed="5" covered="25"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRegion" desc="(Lcom/milaboratory/core/Range;Lcom/milaboratory/core/sequence/Sequence;)V" line="172"><counter type="INSTRUCTION" missed="47" covered="257"/><counter type="BRANCH" missed="19" covered="31"/><counter type="LINE" missed="6" covered="40"/><counter type="COMPLEXITY" missed="15" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="129" covered="475"/><counter type="BRANCH" missed="31" covered="55"/><counter type="LINE" missed="22" covered="84"/><counter type="COMPLEXITY" missed="30" covered="25"/><counter type="METHOD" missed="5" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/provider/CachedSequenceProvider$NoProvider" sourcefilename="CachedSequenceProvider.java"><method name="&lt;init&gt;" desc="(I)V" line="247"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;)V" line="250"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forceInitialize" desc="()V" line="257"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="262"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRegion" desc="(Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/sequence/Sequence;" line="267"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="17"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/provider/SequenceProvider" sourcefilename="SequenceProvider.java"/><class name="com/milaboratory/core/sequence/provider/SequenceProviderUtils$1" sourcefilename="SequenceProviderUtils.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Sequence;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forceInitialize" desc="()V" line="38"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="42"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRegion" desc="(Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/sequence/Sequence;" line="47"><counter type="INSTRUCTION" missed="13" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="SequenceProviderFactory.java"/><sourcefile name="SequenceProviderUtils.java"><line nr="27" mi="11" ci="0" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="11" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="1" cb="1"/><line nr="48" mi="13" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="1" cb="1"/><line nr="64" mi="7" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="8" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="7" ci="0" mb="2" cb="0"/><line nr="108" mi="3" ci="0" mb="2" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="2" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="101" covered="57"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="26" covered="12"/><counter type="COMPLEXITY" missed="15" covered="8"/><counter type="METHOD" missed="10" covered="8"/><counter type="CLASS" missed="1" covered="3"/></sourcefile><sourcefile name="SequenceProvider.java"/><sourcefile name="SequenceProviderIndexOutOfBoundsException.java"><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CachedSequenceProvider.java"><line nr="29" mi="2" ci="6" mb="1" cb="1"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="8" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="8" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="1" cb="1"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="5" mb="1" cb="1"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="2"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="2"/><line nr="101" mi="0" ci="7" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="2"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="10" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="2"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="10" mb="0" cb="2"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="16" mb="0" cb="2"/><line nr="125" mi="0" ci="7" mb="1" cb="1"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="7" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="4" ci="0" mb="0" cb="0"/><line nr="141" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="1" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="2"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="1" cb="1"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="1" cb="1"/><line nr="152" mi="8" ci="0" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="1" cb="1"/><line nr="156" mi="9" ci="0" mb="4" cb="0"/><line nr="157" mi="4" ci="0" mb="0" cb="0"/><line nr="159" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="2"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="5" ci="7" mb="1" cb="1"/><line nr="168" mi="0" ci="11" mb="0" cb="0"/><line nr="172" mi="3" ci="12" mb="3" cb="3"/><line nr="173" mi="6" ci="4" mb="5" cb="1"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="6" ci="0" mb="4" cb="0"/><line nr="177" mi="5" ci="0" mb="0" cb="0"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="2"/><line nr="182" mi="0" ci="17" mb="0" cb="2"/><line nr="183" mi="0" ci="9" mb="1" cb="1"/><line nr="184" mi="5" ci="0" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="1" cb="1"/><line nr="189" mi="5" ci="0" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="6" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="2"/><line nr="195" mi="0" ci="7" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="2"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="10" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="2"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="6" mb="0" cb="2"/><line nr="205" mi="0" ci="6" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="2"/><line nr="209" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="4" ci="8" mb="2" cb="2"/><line nr="211" mi="0" ci="16" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="4" mb="0" cb="2"/><line nr="217" mi="0" ci="8" mb="0" cb="0"/><line nr="218" mi="4" ci="8" mb="2" cb="2"/><line nr="219" mi="0" ci="19" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="6" mb="0" cb="0"/><line nr="226" mi="0" ci="10" mb="0" cb="2"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="16" mb="0" cb="2"/><line nr="231" mi="0" ci="7" mb="1" cb="1"/><line nr="232" mi="5" ci="0" mb="0" cb="0"/><line nr="233" mi="0" ci="7" mb="0" cb="0"/><line nr="234" mi="0" ci="1" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="1" mb="0" cb="0"/><line nr="247" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="250" mi="0" ci="2" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="253" mi="0" ci="1" mb="0" cb="0"/><line nr="257" mi="6" ci="0" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="152" covered="492"/><counter type="BRANCH" missed="31" covered="55"/><counter type="LINE" missed="24" covered="91"/><counter type="COMPLEXITY" missed="32" covered="28"/><counter type="METHOD" missed="7" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="262" covered="549"/><counter type="BRANCH" missed="39" covered="57"/><counter type="LINE" missed="54" covered="103"/><counter type="COMPLEXITY" missed="49" covered="36"/><counter type="METHOD" missed="19" covered="18"/><counter type="CLASS" missed="2" covered="5"/></package><package name="com/milaboratory/core/alignment/batch"><class name="com/milaboratory/core/alignment/batch/AlignmentHit" sourcefilename="AlignmentHit.java"/><class name="com/milaboratory/core/alignment/batch/PipedBatchAlignerWithBase" sourcefilename="PipedBatchAlignerWithBase.java"/><class name="com/milaboratory/core/alignment/batch/WithBase" sourcefilename="WithBase.java"/><class name="com/milaboratory/core/alignment/batch/PipedBatchAligner" sourcefilename="PipedBatchAligner.java"/><class name="com/milaboratory/core/alignment/batch/PipedAlignmentResult" sourcefilename="PipedAlignmentResult.java"/><class name="com/milaboratory/core/alignment/batch/AlignmentHitImpl" sourcefilename="AlignmentHitImpl.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/Alignment;Ljava/lang/Object;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAlignment" desc="()Lcom/milaboratory/core/alignment/Alignment;" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRecordPayload" desc="()Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/batch/BatchAlignerWithBaseWithFilter" sourcefilename="BatchAlignerWithBaseWithFilter.java"/><class name="com/milaboratory/core/alignment/batch/SimpleBatchAlignerParameters" sourcefilename="SimpleBatchAlignerParameters.java"><method name="&lt;init&gt;" desc="(IFFZLcom/milaboratory/core/alignment/AlignmentScoring;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isGlobal" desc="()Z" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setGlobal" desc="(Z)V" line="46"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getScoring" desc="()Lcom/milaboratory/core/alignment/AlignmentScoring;" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setScoring" desc="(Lcom/milaboratory/core/alignment/AlignmentScoring;)V" line="54"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaxHits" desc="()I" line="58"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMaxHits" desc="(I)V" line="62"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRelativeMinScore" desc="()F" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRelativeMinScore" desc="(F)V" line="70"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAbsoluteMinScore" desc="()F" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAbsoluteMinScore" desc="(F)V" line="78"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="33"/><counter type="LINE" missed="10" covered="12"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="5" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/batch/HasSequence" sourcefilename="HasSequence.java"/><class name="com/milaboratory/core/alignment/batch/BatchAlignmentUtil" sourcefilename="BatchAlignmentUtil.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="9"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/batch/SimpleBatchAligner$Record" sourcefilename="SimpleBatchAligner.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Sequence;Ljava/lang/Object;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSequence" desc="()Lcom/milaboratory/core/sequence/Sequence;" line="95"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPayload" desc="()Ljava/lang/Object;" line="99"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="9"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/batch/BatchAlignerWithBase" sourcefilename="BatchAlignerWithBase.java"/><class name="com/milaboratory/core/alignment/batch/BatchAligner" sourcefilename="BatchAligner.java"/><class name="com/milaboratory/core/alignment/batch/SequenceExtractor" sourcefilename="SequenceExtractor.java"/><class name="com/milaboratory/core/alignment/batch/SimpleBatchAligner" sourcefilename="SimpleBatchAligner.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/batch/SimpleBatchAlignerParameters;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addReference" desc="(Lcom/milaboratory/core/sequence/Sequence;Ljava/lang/Object;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="align" desc="(Lcom/milaboratory/core/sequence/Sequence;II)Lcom/milaboratory/core/alignment/batch/AlignmentResult;" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="align" desc="(Lcom/milaboratory/core/sequence/Sequence;)Lcom/milaboratory/core/alignment/batch/AlignmentResult;" line="55"><counter type="INSTRUCTION" missed="9" covered="83"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignSingle" desc="(Lcom/milaboratory/core/alignment/batch/SimpleBatchAligner$Record;Lcom/milaboratory/core/sequence/Sequence;)Lcom/milaboratory/core/alignment/batch/AlignmentHit;" line="79"><counter type="INSTRUCTION" missed="7" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="124"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="3" covered="20"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/batch/AlignmentResult" sourcefilename="AlignmentResult.java"/><class name="com/milaboratory/core/alignment/batch/BatchAlignerWithBaseParameters" sourcefilename="BatchAlignerWithBaseParameters.java"/><class name="com/milaboratory/core/alignment/batch/BatchAlignmentUtil$1" sourcefilename="BatchAlignmentUtil.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lcom/milaboratory/core/alignment/batch/AlignmentHit;Lcom/milaboratory/core/alignment/batch/AlignmentHit;)I" line="11"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/batch/PipedAlignmentResultImpl" sourcefilename="PipedAlignmentResultImpl.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;Ljava/lang/Object;)V" line="11"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQuery" desc="()Ljava/lang/Object;" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="22"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/batch/BatchAlignmentUtil$2" sourcefilename="BatchAlignmentUtil.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extract" desc="(Ljava/lang/Object;)Lcom/milaboratory/core/sequence/Sequence;" line="18"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/batch/AlignmentResultImpl" sourcefilename="AlignmentResultImpl.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHits" desc="()Ljava/util/List;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBestHit" desc="()Lcom/milaboratory/core/alignment/batch/AlignmentHit;" line="24"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasHits" desc="()Z" line="29"><counter type="INSTRUCTION" missed="1" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="34"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="30"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/batch/AbstractBatchAligner$1" sourcefilename="AbstractBatchAligner.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/batch/AbstractBatchAligner;Lcom/milaboratory/core/alignment/batch/SequenceExtractor;)V" line="23"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="process" desc="(Ljava/lang/Object;)Lcom/milaboratory/core/alignment/batch/PipedAlignmentResult;" line="26"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/batch/AbstractBatchAligner$2" sourcefilename="AbstractBatchAligner.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/batch/AbstractBatchAligner;)V" line="37"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="process" desc="(Lcom/milaboratory/core/alignment/batch/HasSequence;)Lcom/milaboratory/core/alignment/batch/PipedAlignmentResult;" line="40"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/batch/AbstractBatchAligner" sourcefilename="AbstractBatchAligner.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="align" desc="(Lcc/redberry/pipe/OutputPort;Lcom/milaboratory/core/alignment/batch/SequenceExtractor;)Lcc/redberry/pipe/OutputPort;" line="23"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="align" desc="(Lcc/redberry/pipe/OutputPort;)Lcc/redberry/pipe/OutputPort;" line="37"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wrapPipe" desc="(Lcc/redberry/pipe/Processor;Lcc/redberry/pipe/OutputPort;)Lcc/redberry/pipe/OutputPort;" line="49"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="6"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="HasSequence.java"/><sourcefile name="AbstractBatchAligner.java"><line nr="9" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="15" ci="0" mb="0" cb="0"/><line nr="26" mi="5" ci="0" mb="0" cb="0"/><line nr="27" mi="5" ci="0" mb="0" cb="0"/><line nr="28" mi="7" ci="0" mb="0" cb="0"/><line nr="32" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="11" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="2" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="2" cb="0"/><line nr="54" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="90" covered="6"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="2"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="7" covered="1"/><counter type="CLASS" missed="2" covered="1"/></sourcefile><sourcefile name="BatchAligner.java"/><sourcefile name="AlignmentResultImpl.java"><line nr="9" mi="2" ci="0" mb="0" cb="0"/><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="12" ci="0" mb="2" cb="0"/><line nr="29" mi="1" ci="7" mb="1" cb="1"/><line nr="34" mi="2" ci="14" mb="1" cb="1"/><counter type="INSTRUCTION" missed="21" covered="30"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BatchAlignmentUtil.java"><line nr="7" mi="3" ci="0" mb="0" cb="0"/><line nr="8" mi="0" ci="7" mb="0" cb="0"/><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="15" mi="0" ci="8" mb="0" cb="0"/><line nr="18" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="23"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="BatchAlignerWithBase.java"/><sourcefile name="AlignmentHit.java"/><sourcefile name="SimpleBatchAligner.java"><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="9" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="1" cb="1"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="11" mb="0" cb="2"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="10" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="1" cb="1"/><line nr="72" mi="0" ci="14" mb="1" cb="3"/><line nr="73" mi="0" ci="11" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="1" cb="1"/><line nr="80" mi="2" ci="6" mb="0" cb="0"/><line nr="81" mi="5" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="133"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="5" covered="24"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AlignmentResult.java"/><sourcefile name="BatchAlignerWithBaseParameters.java"/><sourcefile name="PipedAlignmentResultImpl.java"><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="1" ci="0" mb="0" cb="0"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PipedBatchAligner.java"/><sourcefile name="PipedBatchAlignerWithBase.java"/><sourcefile name="SequenceExtractor.java"/><sourcefile name="AlignmentHitImpl.java"><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BatchAlignerWithBaseWithFilter.java"/><sourcefile name="WithBase.java"/><sourcefile name="PipedAlignmentResult.java"/><sourcefile name="SimpleBatchAlignerParameters.java"><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="33"/><counter type="LINE" missed="10" covered="12"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="5" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="187" covered="240"/><counter type="BRANCH" missed="12" covered="10"/><counter type="LINE" missed="39" covered="53"/><counter type="COMPLEXITY" missed="31" covered="25"/><counter type="METHOD" missed="22" covered="23"/><counter type="CLASS" missed="3" covered="9"/></package><package name="com/milaboratory/util/io"><class name="com/milaboratory/util/io/ByteArrayDataOutput" sourcefilename="ByteArrayDataOutput.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([B)V" line="53"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IIIII)V" line="57"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([BIIII)V" line="60"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureCapacity" desc="(I)V" line="71"><counter type="INSTRUCTION" missed="7" covered="74"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="96"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBuffer" desc="()[B" line="100"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="104"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(I)V" line="109"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([B)V" line="115"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([BII)V" line="121"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeBoolean" desc="(Z)V" line="127"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeByte" desc="(I)V" line="133"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeShort" desc="(I)V" line="139"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeChar" desc="(I)V" line="145"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeInt" desc="(I)V" line="151"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeLong" desc="(J)V" line="157"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeFloat" desc="(F)V" line="163"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeDouble" desc="(D)V" line="169"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeBytes" desc="(Ljava/lang/String;)V" line="176"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeChars" desc="(Ljava/lang/String;)V" line="182"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeUTF" desc="(Ljava/lang/String;)V" line="187"><counter type="INSTRUCTION" missed="43" covered="113"/><counter type="BRANCH" missed="6" covered="18"/><counter type="LINE" missed="5" covered="25"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="84" covered="336"/><counter type="BRANCH" missed="7" covered="25"/><counter type="LINE" missed="16" covered="83"/><counter type="COMPLEXITY" missed="12" covered="27"/><counter type="METHOD" missed="5" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/io/AsynchronousFileChannelAdapter$CompletionHandlerAdapter" sourcefilename="AsynchronousFileChannelAdapter.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/util/io/AsynchronousFileChannelAdapter;Ljava/nio/channels/CompletionHandler;)V" line="155"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="completed" desc="(Ljava/lang/Integer;Ljava/lang/Object;)V" line="161"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="failed" desc="(Ljava/lang/Throwable;Ljava/lang/Object;)V" line="168"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="26"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/io/HasMutablePosition" sourcefilename="HasMutablePosition.java"/><class name="com/milaboratory/util/io/AsynchronousFileChannelAdapter" sourcefilename="AsynchronousFileChannelAdapter.java"><method name="&lt;init&gt;" desc="(Ljava/nio/channels/AsynchronousFileChannel;J)V" line="40"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/nio/channels/AsynchronousFileChannel;JZ)V" line="34"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPosition" desc="()J" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPosition" desc="(J)V" line="63"><counter type="INSTRUCTION" missed="13" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkNoPendingOperations" desc="()V" line="76"><counter type="INSTRUCTION" missed="10" covered="8"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="operationBegin" desc="()V" line="83"><counter type="INSTRUCTION" missed="10" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="operationEnded" desc="()V" line="90"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/nio/ByteBuffer;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/nio/ByteBuffer;)Ljava/util/concurrent/Future;" line="101"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/nio/ByteBuffer;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V" line="108"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/nio/ByteBuffer;)Ljava/util/concurrent/Future;" line="114"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="121"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOpen" desc="()Z" line="128"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createChildAdapter" desc="()Lcom/milaboratory/util/io/AsynchronousFileChannelAdapter;" line="136"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createChildAdapter" desc="(J)Lcom/milaboratory/util/io/AsynchronousFileChannelAdapter;" line="146"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="()Ljava/lang/Object;" line="150"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="150"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="48" covered="151"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="10" covered="43"/><counter type="COMPLEXITY" missed="10" covered="14"/><counter type="METHOD" missed="3" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/io/AsynchronousFileChannelAdapter$FutureCompletable$1" sourcefilename="AsynchronousFileChannelAdapter.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/util/io/AsynchronousFileChannelAdapter$FutureCompletable;)V" line="179"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="completed" desc="(Ljava/lang/Integer;Ljava/lang/Object;)V" line="182"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="failed" desc="(Ljava/lang/Throwable;Ljava/lang/Object;)V" line="187"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="11"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/io/AsynchronousFileChannelAdapter$FutureCompletable" sourcefilename="AsynchronousFileChannelAdapter.java"><method name="&lt;init&gt;" desc="()V" line="175"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="completionHandler" desc="()Ljava/nio/channels/CompletionHandler;" line="179"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/io/HasPosition" sourcefilename="HasPosition.java"/><class name="com/milaboratory/util/io/IOUtil" sourcefilename="IOUtil.java"><method name="writeIntBE" desc="(I[BI)V" line="31"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeLongBE" desc="(J[BI)V" line="38"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readIntBE" desc="([BI)I" line="49"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readIntBE" desc="(Ljava/nio/ByteBuffer;)I" line="58"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readLongBE" desc="([BI)J" line="67"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readLongBE" desc="(Ljava/nio/ByteBuffer;)J" line="76"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="160"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="10" covered="24"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/util/io/ByteBufferDataInputAdapter" sourcefilename="ByteBufferDataInputAdapter.java"><method name="&lt;init&gt;" desc="(Ljava/nio/ByteBuffer;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readFully" desc="([B)V" line="32"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readFully" desc="([BII)V" line="37"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skipBytes" desc="(I)I" line="42"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readBoolean" desc="()Z" line="48"><counter type="INSTRUCTION" missed="4" covered="16"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readByte" desc="()B" line="56"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readUnsignedByte" desc="()I" line="62"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readShort" desc="()S" line="67"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readUnsignedShort" desc="()I" line="72"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readChar" desc="()C" line="77"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readInt" desc="()I" line="82"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readLong" desc="()J" line="87"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readFloat" desc="()F" line="92"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readDouble" desc="()D" line="97"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readLine" desc="()Ljava/lang/String;" line="102"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readUTF" desc="()Ljava/lang/String;" line="107"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="72"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="5" covered="19"/><counter type="COMPLEXITY" missed="4" covered="15"/><counter type="METHOD" missed="3" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="HasPosition.java"/><sourcefile name="ByteBufferDataInputAdapter.java"><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="7" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="9" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="1" cb="3"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="2"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="72"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="5" covered="19"/><counter type="COMPLEXITY" missed="4" covered="15"/><counter type="METHOD" missed="3" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AsynchronousFileChannelAdapter.java"><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="1" cb="1"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="1" cb="1"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="1" cb="1"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="1" cb="1"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="1" cb="1"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="13" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="13" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="1" cb="1"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="7" ci="0" mb="2" cb="0"/><line nr="136" mi="6" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="8" mb="0" cb="0"/><line nr="150" mi="2" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="8" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="169" mi="5" ci="0" mb="0" cb="0"/><line nr="170" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="11" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="4" ci="0" mb="0" cb="0"/><line nr="188" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="62" covered="197"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="15" covered="55"/><counter type="COMPLEXITY" missed="12" covered="20"/><counter type="METHOD" missed="5" covered="20"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="IOUtil.java"><line nr="31" mi="0" ci="7" mb="0" cb="0"/><line nr="32" mi="0" ci="9" mb="0" cb="0"/><line nr="33" mi="0" ci="9" mb="0" cb="0"/><line nr="34" mi="0" ci="7" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="8" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="0" ci="10" mb="0" cb="0"/><line nr="41" mi="0" ci="10" mb="0" cb="0"/><line nr="42" mi="0" ci="10" mb="0" cb="0"/><line nr="43" mi="0" ci="10" mb="0" cb="0"/><line nr="44" mi="0" ci="10" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="2"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="10" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="7" ci="0" mb="2" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="7" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="2"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="10" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="2" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="8" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="160"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="10" covered="24"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HasMutablePosition.java"/><sourcefile name="ByteArrayDataOutput.java"><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="9" mb="0" cb="2"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="13" mb="0" cb="0"/><line nr="76" mi="0" ci="8" mb="1" cb="1"/><line nr="77" mi="7" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="2"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="6" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="7" ci="0" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="10" mb="0" cb="2"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="4" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="7" mb="0" cb="2"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="6" mb="1" cb="3"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="1" cb="1"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="198" mi="0" ci="1" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="1" cb="1"/><line nr="202" mi="4" ci="0" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="5" mb="0" cb="2"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="7" mb="1" cb="3"/><line nr="214" mi="0" ci="6" mb="0" cb="0"/><line nr="218" mi="0" ci="5" mb="0" cb="2"/><line nr="219" mi="0" ci="4" mb="0" cb="0"/><line nr="220" mi="0" ci="6" mb="1" cb="3"/><line nr="221" mi="0" ci="7" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="1" cb="1"/><line nr="223" mi="12" ci="0" mb="0" cb="0"/><line nr="224" mi="12" ci="0" mb="0" cb="0"/><line nr="225" mi="13" ci="0" mb="0" cb="0"/><line nr="227" mi="0" ci="12" mb="0" cb="0"/><line nr="228" mi="0" ci="12" mb="0" cb="0"/><line nr="231" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="84" covered="336"/><counter type="BRANCH" missed="7" covered="25"/><counter type="LINE" missed="16" covered="83"/><counter type="COMPLEXITY" missed="12" covered="27"/><counter type="METHOD" missed="5" covered="18"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="214" covered="765"/><counter type="BRANCH" missed="20" covered="40"/><counter type="LINE" missed="46" covered="181"/><counter type="COMPLEXITY" missed="32" covered="68"/><counter type="METHOD" missed="15" covered="55"/><counter type="CLASS" missed="0" covered="7"/></package><package name="com/milaboratory/core/io/sequence/fasta"><class name="com/milaboratory/core/io/sequence/fasta/FastaReader$RawFastaRecord" sourcefilename="FastaReader.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="238"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex$IndexBuilder" sourcefilename="RandomAccessFastaIndex.java"><method name="&lt;init&gt;" desc="()V" line="595"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="589"><counter type="INSTRUCTION" missed="4" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOnRecord" desc="()Z" line="605"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addRecord" desc="(Ljava/lang/String;J)V" line="609"><counter type="INSTRUCTION" missed="4" covered="44"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addIndexPoint" desc="(J)V" line="621"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLastRecordLength" desc="(J)V" line="625"><counter type="INSTRUCTION" missed="4" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex;" line="634"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="136"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="5" covered="24"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex$IndexRecord" sourcefilename="RandomAccessFastaIndex.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex;ILjava/lang/String;JI)V" line="410"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIds" desc="()Ljava/util/List;" line="420"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDescription" desc="()Ljava/lang/String;" line="429"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLength" desc="()J" line="438"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="queryPosition" desc="(J)J" line="449"><counter type="INSTRUCTION" missed="4" covered="38"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="458"><counter type="INSTRUCTION" missed="14" covered="30"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="471"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="53" covered="97"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="6" covered="18"/><counter type="COMPLEXITY" missed="11" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex$NoSuchRecordException" sourcefilename="RandomAccessFastaIndex.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="646"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/io/sequence/fasta/FastaSequenceWriterWrapper" sourcefilename="FastaSequenceWriterWrapper.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="16"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Lcom/milaboratory/core/io/sequence/SingleRead;)V" line="22"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="27"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="32"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/io/sequence/fasta/FastaWriter" sourcefilename="FastaWriter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="38"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;I)V" line="56"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;)V" line="67"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;I)V" line="76"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Lcom/milaboratory/core/io/sequence/fasta/FastaRecord;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/String;Lcom/milaboratory/core/sequence/Sequence;)V" line="87"><counter type="INSTRUCTION" missed="3" covered="60"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="112"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="124"><counter type="INSTRUCTION" missed="6" covered="5"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="42" covered="92"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="17" covered="25"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex$MultipleMatchingRecordsException" sourcefilename="RandomAccessFastaIndex.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="640"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex$StreamIndexBuilder" sourcefilename="RandomAccessFastaIndex.java"><method name="&lt;init&gt;" desc="()V" line="507"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="511"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IJ)V" line="515"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex$IndexBuilder;J)V" line="486"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processBuffer" desc="(Ljava/lang/String;)V" line="524"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processBuffer" desc="([B)V" line="528"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processBuffer" desc="([BII)V" line="533"><counter type="INSTRUCTION" missed="4" covered="125"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="1" covered="25"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endOfRecord" desc="()V" line="576"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex;" line="581"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="192"/><counter type="BRANCH" missed="1" covered="25"/><counter type="LINE" missed="5" covered="47"/><counter type="COMPLEXITY" missed="3" covered="19"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/fasta/FastaReader" sourcefilename="FastaReader.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Lcom/milaboratory/core/sequence/Alphabet;J)V" line="38"><counter type="INSTRUCTION" missed="4" covered="36"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Lcom/milaboratory/core/sequence/Alphabet;)V" line="75"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/milaboratory/core/sequence/Alphabet;)V" line="87"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Lcom/milaboratory/core/sequence/Alphabet;)V" line="99"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProgress" desc="()D" line="104"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFinished" desc="()Z" line="114"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="take" desc="()Lcom/milaboratory/core/io/sequence/fasta/FastaRecord;" line="125"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="takeRawRecord" desc="()Lcom/milaboratory/core/io/sequence/fasta/FastaReader$RawFastaRecord;" line="145"><counter type="INSTRUCTION" missed="6" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asRawRecordsPort" desc="()Lcc/redberry/pipe/OutputPortCloseable;" line="160"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nextRawRecord" desc="()Lcom/milaboratory/core/io/sequence/fasta/FastaReader$RawFastaRecord;" line="175"><counter type="INSTRUCTION" missed="5" covered="61"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="204"><counter type="INSTRUCTION" missed="7" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberOfReads" desc="()J" line="228"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="65" covered="162"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="17" covered="43"/><counter type="COMPLEXITY" missed="11" covered="12"/><counter type="METHOD" missed="6" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/fasta/RandomAccessFastaReader" sourcefilename="RandomAccessFastaReader.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/milaboratory/core/sequence/Alphabet;)V" line="45"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;Lcom/milaboratory/core/sequence/Alphabet;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/milaboratory/core/sequence/Alphabet;Z)V" line="53"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;Lcom/milaboratory/core/sequence/Alphabet;Z)V" line="57"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;Lcom/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex;Lcom/milaboratory/core/sequence/Alphabet;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/nio/channels/SeekableByteChannel;Lcom/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex;Lcom/milaboratory/core/sequence/Alphabet;I)V" line="65"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAlphabet" desc="()Lcom/milaboratory/core/sequence/Alphabet;" line="73"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIndex" desc="()Lcom/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex;" line="77"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSequenceProvider" desc="(I)Lcom/milaboratory/core/sequence/provider/SequenceProvider;" line="81"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSequenceProvider" desc="(Ljava/lang/String;)Lcom/milaboratory/core/sequence/provider/SequenceProvider;" line="85"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSequence" desc="(ILcom/milaboratory/core/Range;)Lcom/milaboratory/core/sequence/Sequence;" line="89"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSequence" desc="(Ljava/lang/String;Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/sequence/Sequence;" line="93"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSequenceProvider" desc="(Lcom/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex$IndexRecord;)Lcom/milaboratory/core/sequence/provider/SequenceProvider;" line="97"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Lcom/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex$IndexRecord;Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/sequence/Sequence;" line="115"><counter type="INSTRUCTION" missed="23" covered="102"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="3" covered="21"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="160"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="openChannel" desc="(Ljava/nio/file/Path;)Ljava/nio/channels/SeekableByteChannel;" line="165"><counter type="INSTRUCTION" missed="6" covered="9"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="82" covered="168"/><counter type="BRANCH" missed="4" covered="20"/><counter type="LINE" missed="16" covered="37"/><counter type="COMPLEXITY" missed="12" covered="17"/><counter type="METHOD" missed="8" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex" sourcefilename="RandomAccessFastaIndex.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="75"><counter type="INSTRUCTION" missed="15" covered="118"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="5" covered="23"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex$IndexBuilder;)V" line="75"><counter type="INSTRUCTION" missed="4" covered="73"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndexStep" desc="()I" line="135"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="139"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRecordByIndex" desc="(I)Lcom/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex$IndexRecord;" line="143"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRecordById" desc="(Ljava/lang/String;)Lcom/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex$IndexRecord;" line="147"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRecordByIdCheck" desc="(Ljava/lang/String;)Lcom/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex$IndexRecord;" line="155"><counter type="INSTRUCTION" missed="26" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/io/OutputStream;)V" line="166"><counter type="INSTRUCTION" missed="7" covered="99"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="3" covered="19"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fillIdIndex" desc="()V" line="194"><counter type="INSTRUCTION" missed="8" covered="55"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractIds" desc="(Ljava/lang/String;Ljava/util/Set;)V" line="216"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/io/InputStream;)Lcom/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex;" line="231"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractFilePosition" desc="(J)J" line="241"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractSkipLetters" desc="(J)I" line="251"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="index" desc="(Ljava/nio/file/Path;)Lcom/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex;" line="261"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="index" desc="(Ljava/nio/file/Path;Z)Lcom/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex;" line="272"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="index" desc="(Ljava/nio/file/Path;ZLcom/milaboratory/util/LongProcessReporter;)Lcom/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex;" line="287"><counter type="INSTRUCTION" missed="8" covered="32"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="index" desc="(Ljava/nio/file/Path;IZ)Lcom/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex;" line="309"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="index" desc="(Ljava/nio/file/Path;IZLcom/milaboratory/util/LongProcessReporter;)Lcom/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex;" line="322"><counter type="INSTRUCTION" missed="62" covered="95"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="11" covered="15"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="370"><counter type="INSTRUCTION" missed="8" covered="26"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="384"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="197" covered="632"/><counter type="BRANCH" missed="19" covered="37"/><counter type="LINE" missed="36" covered="115"/><counter type="COMPLEXITY" missed="21" covered="28"/><counter type="METHOD" missed="4" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/fasta/FastaRecord" sourcefilename="FastaRecord.java"><method name="&lt;init&gt;" desc="(JLjava/lang/String;Lcom/milaboratory/core/sequence/Sequence;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()J" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/lang/String;" line="58"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSequence" desc="()Lcom/milaboratory/core/sequence/Sequence;" line="67"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="72"><counter type="INSTRUCTION" missed="12" covered="30"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="85"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="51"/><counter type="BRANCH" missed="9" covered="5"/><counter type="LINE" missed="4" covered="14"/><counter type="COMPLEXITY" missed="8" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/fasta/FastaReader$1" sourcefilename="FastaReader.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/io/sequence/fasta/FastaReader;)V" line="160"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="163"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="take" desc="()Lcom/milaboratory/core/io/sequence/fasta/FastaReader$RawFastaRecord;" line="168"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/io/sequence/fasta/FastaSequenceReaderWrapper" sourcefilename="FastaSequenceReaderWrapper.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/io/sequence/fasta/FastaReader;)V" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/io/sequence/fasta/FastaReader;Z)V" line="44"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProgress" desc="()D" line="51"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFinished" desc="()Z" line="56"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="61"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberOfReads" desc="()J" line="66"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="take" desc="()Lcom/milaboratory/core/io/sequence/SingleRead;" line="71"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="101" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/io/sequence/fasta/RandomAccessFastaReader$1" sourcefilename="RandomAccessFastaReader.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/io/sequence/fasta/RandomAccessFastaReader;Lcom/milaboratory/core/io/sequence/fasta/RandomAccessFastaIndex$IndexRecord;)V" line="97"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forceInitialize" desc="()V" line="100"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="104"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRegion" desc="(Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/sequence/Sequence;" line="109"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="FastaRecord.java"><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="2" ci="3" mb="1" cb="1"/><line nr="73" mi="2" ci="3" mb="1" cb="1"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="2" ci="6" mb="1" cb="1"/><line nr="78" mi="6" ci="9" mb="4" cb="2"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="9" ci="0" mb="0" cb="0"/><line nr="86" mi="13" ci="0" mb="2" cb="0"/><line nr="87" mi="8" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="44" covered="51"/><counter type="BRANCH" missed="9" covered="5"/><counter type="LINE" missed="4" covered="14"/><counter type="COMPLEXITY" missed="8" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FastaWriter.java"><line nr="38" mi="7" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="9" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="1" cb="1"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="2"/><line nr="96" mi="0" ci="10" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="2"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="92"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="17" covered="25"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FastaSequenceWriterWrapper.java"><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="17" mi="6" ci="0" mb="0" cb="0"/><line nr="18" mi="1" ci="0" mb="0" cb="0"/><line nr="22" mi="8" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FastaSequenceReaderWrapper.java"><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="2" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="2" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="8" ci="0" mb="2" cb="0"/><line nr="80" mi="12" ci="0" mb="2" cb="0"/><line nr="82" mi="13" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="7" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="101" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FastaReader.java"><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="1" cb="1"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="10" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="7" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="9" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="2" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="11" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="2"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="16" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="2"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="11" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="2"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="2"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="1" cb="1"/><line nr="182" mi="5" ci="0" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="2"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="8" mb="1" cb="3"/><line nr="192" mi="0" ci="1" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="10" mb="0" cb="0"/><line nr="204" mi="0" ci="6" mb="1" cb="1"/><line nr="205" mi="1" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="5" ci="0" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="216" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="3" ci="0" mb="0" cb="0"/><line nr="238" mi="0" ci="2" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="79" covered="171"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="20" covered="47"/><counter type="COMPLEXITY" missed="14" covered="13"/><counter type="METHOD" missed="9" covered="7"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="RandomAccessFastaIndex.java"><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="20" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="1" cb="1"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="1" cb="1"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="9" mb="0" cb="2"/><line nr="100" mi="0" ci="13" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="9" mb="0" cb="2"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="12" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="7" mb="1" cb="1"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="9" mb="0" cb="2"/><line nr="126" mi="0" ci="13" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="6" ci="0" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="2" cb="0"/><line nr="150" mi="14" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="1" cb="1"/><line nr="158" mi="14" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="1" cb="1"/><line nr="160" mi="12" ci="0" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="1" cb="1"/><line nr="171" mi="1" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="6" mb="0" cb="0"/><line nr="177" mi="0" ci="9" mb="0" cb="2"/><line nr="178" mi="0" ci="13" mb="0" cb="0"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="17" mb="0" cb="2"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="1" ci="0" mb="0" cb="0"/><line nr="189" mi="5" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="17" mb="0" cb="2"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="0" ci="10" mb="0" cb="2"/><line nr="200" mi="0" ci="6" mb="1" cb="1"/><line nr="201" mi="8" ci="0" mb="0" cb="0"/><line nr="203" mi="0" ci="6" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="6" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="18" mb="0" cb="2"/><line nr="220" mi="0" ci="5" mb="0" cb="0"/><line nr="223" mi="0" ci="16" mb="0" cb="2"/><line nr="224" mi="0" ci="4" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="2"/><line nr="226" mi="0" ci="7" mb="0" cb="0"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><line nr="231" mi="0" ci="5" mb="0" cb="0"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="0" ci="5" mb="0" cb="0"/><line nr="261" mi="0" ci="4" mb="0" cb="0"/><line nr="272" mi="0" ci="5" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="4" mb="0" cb="0"/><line nr="289" mi="0" ci="4" mb="1" cb="1"/><line nr="290" mi="0" ci="2" mb="0" cb="0"/><line nr="291" mi="2" ci="13" mb="1" cb="1"/><line nr="294" mi="0" ci="6" mb="0" cb="0"/><line nr="295" mi="1" ci="0" mb="0" cb="0"/><line nr="296" mi="5" ci="0" mb="0" cb="0"/><line nr="309" mi="6" ci="0" mb="0" cb="0"/><line nr="322" mi="0" ci="12" mb="0" cb="0"/><line nr="324" mi="0" ci="5" mb="1" cb="1"/><line nr="325" mi="8" ci="0" mb="0" cb="0"/><line nr="326" mi="6" ci="0" mb="0" cb="0"/><line nr="327" mi="4" ci="0" mb="2" cb="0"/><line nr="328" mi="14" ci="0" mb="0" cb="0"/><line nr="329" mi="4" ci="0" mb="0" cb="0"/><line nr="330" mi="1" ci="0" mb="0" cb="0"/><line nr="331" mi="5" ci="0" mb="0" cb="0"/><line nr="334" mi="0" ci="16" mb="0" cb="0"/><line nr="335" mi="0" ci="9" mb="0" cb="0"/><line nr="337" mi="0" ci="3" mb="0" cb="0"/><line nr="340" mi="0" ci="3" mb="0" cb="0"/><line nr="342" mi="0" ci="3" mb="0" cb="0"/><line nr="344" mi="0" ci="5" mb="0" cb="0"/><line nr="348" mi="0" ci="2" mb="0" cb="0"/><line nr="349" mi="0" ci="8" mb="0" cb="2"/><line nr="350" mi="0" ci="5" mb="0" cb="0"/><line nr="351" mi="0" ci="15" mb="0" cb="0"/><line nr="355" mi="0" ci="3" mb="0" cb="0"/><line nr="357" mi="0" ci="2" mb="1" cb="1"/><line nr="358" mi="8" ci="0" mb="0" cb="0"/><line nr="359" mi="6" ci="0" mb="0" cb="0"/><line nr="362" mi="0" ci="4" mb="0" cb="0"/><line nr="363" mi="1" ci="0" mb="0" cb="0"/><line nr="364" mi="5" ci="0" mb="0" cb="0"/><line nr="370" mi="2" ci="3" mb="1" cb="1"/><line nr="371" mi="2" ci="3" mb="1" cb="1"/><line nr="373" mi="0" ci="3" mb="0" cb="0"/><line nr="375" mi="2" ci="5" mb="1" cb="1"/><line nr="376" mi="2" ci="6" mb="1" cb="1"/><line nr="378" mi="0" ci="6" mb="0" cb="0"/><line nr="384" mi="3" ci="0" mb="0" cb="0"/><line nr="385" mi="8" ci="0" mb="0" cb="0"/><line nr="386" mi="8" ci="0" mb="0" cb="0"/><line nr="387" mi="2" ci="0" mb="0" cb="0"/><line nr="410" mi="0" ci="5" mb="0" cb="0"/><line nr="412" mi="0" ci="5" mb="0" cb="0"/><line nr="413" mi="0" ci="3" mb="0" cb="0"/><line nr="414" mi="0" ci="3" mb="0" cb="0"/><line nr="415" mi="0" ci="3" mb="0" cb="0"/><line nr="416" mi="0" ci="3" mb="0" cb="0"/><line nr="417" mi="0" ci="1" mb="0" cb="0"/><line nr="420" mi="4" ci="0" mb="0" cb="0"/><line nr="429" mi="0" ci="3" mb="0" cb="0"/><line nr="438" mi="0" ci="3" mb="0" cb="0"/><line nr="449" mi="0" ci="9" mb="2" cb="2"/><line nr="450" mi="4" ci="0" mb="0" cb="0"/><line nr="452" mi="0" ci="8" mb="0" cb="0"/><line nr="453" mi="0" ci="21" mb="0" cb="0"/><line nr="458" mi="2" ci="3" mb="1" cb="1"/><line nr="459" mi="2" ci="3" mb="1" cb="1"/><line nr="461" mi="0" ci="3" mb="0" cb="0"/><line nr="463" mi="2" ci="6" mb="1" cb="1"/><line nr="464" mi="2" ci="5" mb="1" cb="1"/><line nr="465" mi="6" ci="10" mb="3" cb="1"/><line nr="471" mi="9" ci="0" mb="2" cb="0"/><line nr="472" mi="13" ci="0" mb="0" cb="0"/><line nr="473" mi="7" ci="0" mb="0" cb="0"/><line nr="474" mi="2" ci="0" mb="0" cb="0"/><line nr="486" mi="0" ci="3" mb="0" cb="0"/><line nr="487" mi="0" ci="3" mb="0" cb="0"/><line nr="491" mi="0" ci="3" mb="0" cb="0"/><line nr="495" mi="0" ci="3" mb="0" cb="0"/><line nr="500" mi="0" ci="3" mb="0" cb="0"/><line nr="504" mi="0" ci="4" mb="0" cb="0"/><line nr="507" mi="3" ci="0" mb="0" cb="0"/><line nr="508" mi="1" ci="0" mb="0" cb="0"/><line nr="511" mi="0" ci="7" mb="0" cb="0"/><line nr="512" mi="0" ci="1" mb="0" cb="0"/><line nr="515" mi="7" ci="0" mb="0" cb="0"/><line nr="516" mi="1" ci="0" mb="0" cb="0"/><line nr="518" mi="0" ci="2" mb="0" cb="0"/><line nr="519" mi="0" ci="3" mb="0" cb="0"/><line nr="520" mi="0" ci="3" mb="0" cb="0"/><line nr="521" mi="0" ci="1" mb="0" cb="0"/><line nr="524" mi="0" ci="4" mb="0" cb="0"/><line nr="525" mi="0" ci="1" mb="0" cb="0"/><line nr="528" mi="0" ci="6" mb="0" cb="0"/><line nr="529" mi="0" ci="1" mb="0" cb="0"/><line nr="533" mi="0" ci="5" mb="1" cb="1"/><line nr="534" mi="4" ci="0" mb="0" cb="0"/><line nr="536" mi="0" ci="7" mb="0" cb="2"/><line nr="537" mi="0" ci="8" mb="0" cb="0"/><line nr="538" mi="0" ci="6" mb="0" cb="0"/><line nr="541" mi="0" ci="6" mb="0" cb="4"/><line nr="542" mi="0" ci="3" mb="0" cb="2"/><line nr="543" mi="0" ci="5" mb="0" cb="0"/><line nr="544" mi="0" ci="3" mb="0" cb="0"/><line nr="545" mi="0" ci="1" mb="0" cb="0"/><line nr="549" mi="0" ci="6" mb="0" cb="4"/><line nr="551" mi="0" ci="2" mb="0" cb="0"/><line nr="552" mi="0" ci="3" mb="0" cb="0"/><line nr="553" mi="0" ci="3" mb="0" cb="0"/><line nr="554" mi="0" ci="1" mb="0" cb="0"/><line nr="558" mi="0" ci="6" mb="0" cb="4"/><line nr="559" mi="0" ci="12" mb="0" cb="0"/><line nr="561" mi="0" ci="3" mb="0" cb="0"/><line nr="563" mi="0" ci="3" mb="0" cb="0"/><line nr="566" mi="0" ci="4" mb="0" cb="2"/><line nr="567" mi="0" ci="8" mb="0" cb="0"/><line nr="568" mi="0" ci="13" mb="0" cb="4"/><line nr="569" mi="0" ci="4" mb="0" cb="0"/><line nr="570" mi="0" ci="1" mb="0" cb="0"/><line nr="571" mi="0" ci="11" mb="0" cb="0"/><line nr="573" mi="0" ci="1" mb="0" cb="0"/><line nr="576" mi="0" ci="4" mb="0" cb="2"/><line nr="577" mi="0" ci="5" mb="0" cb="0"/><line nr="578" mi="0" ci="1" mb="0" cb="0"/><line nr="581" mi="0" ci="2" mb="0" cb="0"/><line nr="582" mi="0" ci="3" mb="0" cb="0"/><line nr="583" mi="0" ci="4" mb="0" cb="0"/><line nr="589" mi="0" ci="5" mb="0" cb="0"/><line nr="590" mi="0" ci="5" mb="0" cb="0"/><line nr="591" mi="0" ci="5" mb="0" cb="0"/><line nr="592" mi="0" ci="5" mb="0" cb="0"/><line nr="595" mi="3" ci="0" mb="0" cb="0"/><line nr="596" mi="1" ci="0" mb="0" cb="0"/><line nr="598" mi="0" ci="2" mb="0" cb="0"/><line nr="599" mi="0" ci="2" mb="1" cb="1"/><line nr="600" mi="4" ci="0" mb="0" cb="0"/><line nr="601" mi="0" ci="3" mb="0" cb="0"/><line nr="602" mi="0" ci="1" mb="0" cb="0"/><line nr="605" mi="0" ci="13" mb="0" cb="2"/><line nr="609" mi="0" ci="7" mb="0" cb="2"/><line nr="610" mi="0" ci="4" mb="0" cb="0"/><line nr="612" mi="0" ci="15" mb="1" cb="3"/><line nr="613" mi="4" ci="0" mb="0" cb="0"/><line nr="615" mi="0" ci="5" mb="0" cb="0"/><line nr="616" mi="0" ci="7" mb="0" cb="0"/><line nr="617" mi="0" ci="5" mb="0" cb="0"/><line nr="618" mi="0" ci="1" mb="0" cb="0"/><line nr="621" mi="0" ci="5" mb="0" cb="0"/><line nr="622" mi="0" ci="1" mb="0" cb="0"/><line nr="625" mi="0" ci="9" mb="0" cb="2"/><line nr="626" mi="0" ci="4" mb="0" cb="0"/><line nr="627" mi="0" ci="21" mb="1" cb="1"/><line nr="628" mi="4" ci="0" mb="0" cb="0"/><line nr="630" mi="0" ci="5" mb="0" cb="0"/><line nr="631" mi="0" ci="1" mb="0" cb="0"/><line nr="634" mi="0" ci="5" mb="0" cb="0"/><line nr="640" mi="3" ci="0" mb="0" cb="0"/><line nr="641" mi="1" ci="0" mb="0" cb="0"/><line nr="646" mi="3" ci="0" mb="0" cb="0"/><line nr="647" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="290" covered="1057"/><counter type="BRANCH" missed="34" covered="80"/><counter type="LINE" missed="56" covered="204"/><counter type="COMPLEXITY" missed="41" covered="62"/><counter type="METHOD" missed="11" covered="35"/><counter type="CLASS" missed="2" covered="4"/></sourcefile><sourcefile name="RandomAccessFastaReader.java"><line nr="37" mi="2" ci="6" mb="1" cb="1"/><line nr="45" mi="7" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="8" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="7" ci="0" mb="0" cb="0"/><line nr="85" mi="7" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="8" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="0" cb="0"/><line nr="97" mi="15" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="7" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="7" mb="1" cb="1"/><line nr="116" mi="13" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="4"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="6" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="8" mb="0" cb="6"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="4"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="2"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="4" ci="7" mb="2" cb="2"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="9" mb="0" cb="0"/><line nr="153" mi="1" ci="0" mb="0" cb="0"/><line nr="154" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="9" mb="0" cb="0"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="167" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="104" covered="168"/><counter type="BRANCH" missed="4" covered="20"/><counter type="LINE" missed="19" covered="37"/><counter type="COMPLEXITY" missed="16" covered="17"/><counter type="METHOD" missed="12" covered="9"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="686" covered="1539"/><counter type="BRANCH" missed="62" covered="126"/><counter type="LINE" missed="150" covered="327"/><counter type="COMPLEXITY" missed="99" covered="104"/><counter type="METHOD" missed="48" covered="61"/><counter type="CLASS" missed="6" covered="9"/></package><package name="com/milaboratory/core/alignment"><class name="com/milaboratory/core/alignment/SubstitutionMatrix" sourcefilename="SubstitutionMatrix.java"><method name="&lt;init&gt;" desc="([I)V" line="40"><counter type="INSTRUCTION" missed="5" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSubstitutionMatrix" desc="(Lcom/milaboratory/core/sequence/Alphabet;)[I" line="50"><counter type="INSTRUCTION" missed="4" covered="28"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="61"><counter type="INSTRUCTION" missed="4" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="71"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="69"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="3" covered="14"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/AlignmentCache$1" sourcefilename="AlignmentCache.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialValue" desc="()Lcom/milaboratory/core/alignment/AlignmentCache$CachedArrayProvider;" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/AlignmentIterator" sourcefilename="AlignmentIterator.java"/><class name="com/milaboratory/core/alignment/AffineGapAlignmentScoring" sourcefilename="AffineGapAlignmentScoring.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;Lcom/milaboratory/core/alignment/SubstitutionMatrix;II)V" line="61"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;[III)V" line="81"><counter type="INSTRUCTION" missed="4" covered="18"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;IIII)V" line="100"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAffineGapPenalty" desc="(I)I" line="110"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGapOpenPenalty" desc="()I" line="119"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGapExtensionPenalty" desc="()I" line="128"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMatchScore" desc="(I)Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;" line="132"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMismatchScore" desc="(I)Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;" line="138"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setGapOpenScore" desc="(I)Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;" line="144"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setGapExtensionScore" desc="(I)Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;" line="149"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="156"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="164"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="176"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNucleotideBLASTScoring" desc="()Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;" line="190"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNucleotideBLASTScoring" desc="(II)Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;" line="201"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAminoAcidBLASTScoring" desc="(Lcom/milaboratory/core/alignment/BLASTMatrix;)Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;" line="213"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAminoAcidBLASTScoring" desc="(Lcom/milaboratory/core/alignment/BLASTMatrix;II)Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;" line="225"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeReplace" desc="()Ljava/lang/Object;" line="245"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="233"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="141" covered="137"/><counter type="BRANCH" missed="12" covered="10"/><counter type="LINE" missed="22" covered="27"/><counter type="COMPLEXITY" missed="19" covered="12"/><counter type="METHOD" missed="8" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/AlignmentCache" sourcefilename="AlignmentCache.java"><method name="enable" desc="()V" line="56"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lcom/milaboratory/core/alignment/CachedIntArray;" line="65"><counter type="INSTRUCTION" missed="5" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="release" desc="()V" line="75"><counter type="INSTRUCTION" missed="4" covered="3"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="1" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="21"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="5" covered="8"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/AbstractAlignmentScoring" sourcefilename="AbstractAlignmentScoring.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;Lcom/milaboratory/core/alignment/SubstitutionMatrix;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="122"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getScore" desc="(BB)I" line="110"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAlphabet" desc="()Lcom/milaboratory/core/sequence/Alphabet;" line="119"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="uniformBasicMatchScore" desc="()Z" line="128"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMinimalMatchScore" desc="()I" line="133"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaximalMatchScore" desc="()I" line="138"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinimalMismatchScore" desc="()I" line="143"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaximalMismatchScore" desc="()I" line="148"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="153"><counter type="INSTRUCTION" missed="6" covered="25"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="166"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="164"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="6" covered="34"/><counter type="COMPLEXITY" missed="9" covered="10"/><counter type="METHOD" missed="5" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/AlignmentUtils" sourcefilename="AlignmentUtils.java"><method name="calculateScore" desc="(Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/mutations/Mutations;Lcom/milaboratory/core/alignment/AlignmentScoring;)I" line="46"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateScore" desc="(Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/Range;Lcom/milaboratory/core/mutations/Mutations;Lcom/milaboratory/core/alignment/AlignmentScoring;)I" line="61"><counter type="INSTRUCTION" missed="5" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateScore" desc="(Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/Range;Lcom/milaboratory/core/mutations/Mutations;Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;)I" line="81"><counter type="INSTRUCTION" missed="4" covered="59"/><counter type="BRANCH" missed="1" covered="8"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateScore" desc="(Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/Range;Lcom/milaboratory/core/mutations/Mutations;Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;)I" line="122"><counter type="INSTRUCTION" missed="4" covered="99"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="1" covered="22"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shiftIndelsAtHomopolymers" desc="(Lcom/milaboratory/core/alignment/Alignment;)Lcom/milaboratory/core/alignment/Alignment;" line="165"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStringSimple" desc="(Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/mutations/Mutations;)Ljava/lang/String;" line="172"><counter type="INSTRUCTION" missed="50" covered="135"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="4" covered="25"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAlignedSequence2Part" desc="(Lcom/milaboratory/core/alignment/Alignment;)Lcom/milaboratory/core/sequence/Sequence;" line="213"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="83" covered="334"/><counter type="BRANCH" missed="9" covered="38"/><counter type="LINE" missed="9" covered="67"/><counter type="COMPLEXITY" missed="10" covered="23"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/Alignment" sourcefilename="Alignment.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/mutations/Mutations;F)V" line="64"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/mutations/Mutations;Lcom/milaboratory/core/alignment/AlignmentScoring;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/mutations/Mutations;Lcom/milaboratory/core/Range;Lcom/milaboratory/core/Range;Lcom/milaboratory/core/alignment/AlignmentScoring;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/mutations/Mutations;Lcom/milaboratory/core/Range;Lcom/milaboratory/core/Range;F)V" line="84"><counter type="INSTRUCTION" missed="72" covered="43"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="5" covered="12"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateScore" desc="(Lcom/milaboratory/core/alignment/AlignmentScoring;)I" line="111"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forwardIterator" desc="()Lcom/milaboratory/core/alignment/AlignmentIteratorForward;" line="120"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseIterator" desc="()Lcom/milaboratory/core/alignment/AlignmentIteratorReverse;" line="129"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSequence1" desc="()Lcom/milaboratory/core/sequence/Sequence;" line="138"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAbsoluteMutations" desc="()Lcom/milaboratory/core/mutations/Mutations;" line="147"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRelativeMutations" desc="()Lcom/milaboratory/core/mutations/Mutations;" line="156"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSequence1Range" desc="()Lcom/milaboratory/core/Range;" line="165"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSequence2Range" desc="()Lcom/milaboratory/core/Range;" line="174"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToSeq2Position" desc="(I)I" line="199"><counter type="INSTRUCTION" missed="2" covered="36"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToSeq1Position" desc="(I)I" line="218"><counter type="INSTRUCTION" missed="2" covered="31"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToSeq1Range" desc="(Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/Range;" line="235"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToSeq2Range" desc="(Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/Range;" line="252"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getScore" desc="()F" line="267"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invert" desc="(Lcom/milaboratory/core/sequence/Sequence;)Lcom/milaboratory/core/alignment/Alignment;" line="277"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="similarity" desc="()F" line="287"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAlignmentHelper" desc="()Lcom/milaboratory/core/alignment/AlignmentHelper;" line="307"><counter type="INSTRUCTION" missed="0" covered="176"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="move" desc="(I)Lcom/milaboratory/core/alignment/Alignment;" line="367"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAlignmentElements" desc="()Lcc/redberry/pipe/OutputPort;" line="376"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCigarString" desc="()Ljava/lang/String;" line="385"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="395"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toCompactString" desc="()Ljava/lang/String;" line="399"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="405"><counter type="INSTRUCTION" missed="14" covered="45"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="421"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="aabs" desc="(I)I" line="430"><counter type="INSTRUCTION" missed="4" covered="9"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="282" covered="507"/><counter type="BRANCH" missed="30" covered="30"/><counter type="LINE" missed="37" covered="97"/><counter type="COMPLEXITY" missed="29" covered="30"/><counter type="METHOD" missed="6" covered="22"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/BLASTMatrix" sourcefilename="BLASTMatrix.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="26"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMatrix" desc="()[I" line="31"><counter type="INSTRUCTION" missed="6" covered="36"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="131"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/AlignerCustom" sourcefilename="AlignerCustom.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="alignLinearSemiLocalLeft0" desc="(Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/sequence/Sequence;IIIIZZLcom/milaboratory/core/sequence/Alphabet;Lcom/milaboratory/core/alignment/AlignerCustom$LinearMatrixCache;)Lcom/milaboratory/core/alignment/Alignment;" line="60"><counter type="INSTRUCTION" missed="4" covered="344"/><counter type="BRANCH" missed="2" covered="44"/><counter type="LINE" missed="1" covered="55"/><counter type="COMPLEXITY" missed="2" covered="22"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignLinearSemiLocalRight0" desc="(Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/sequence/Sequence;IIIIZZLcom/milaboratory/core/sequence/Alphabet;Lcom/milaboratory/core/alignment/AlignerCustom$LinearMatrixCache;)Lcom/milaboratory/core/alignment/Alignment;" line="148"><counter type="INSTRUCTION" missed="4" covered="380"/><counter type="BRANCH" missed="2" covered="44"/><counter type="LINE" missed="1" covered="55"/><counter type="COMPLEXITY" missed="2" covered="22"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignAffineSemiLocalLeft0" desc="(Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/sequence/Sequence;IIIIZZLcom/milaboratory/core/sequence/Alphabet;Lcom/milaboratory/core/alignment/AlignerCustom$AffineMatrixCache;)Lcom/milaboratory/core/alignment/Alignment;" line="237"><counter type="INSTRUCTION" missed="26" covered="480"/><counter type="BRANCH" missed="8" covered="54"/><counter type="LINE" missed="2" covered="74"/><counter type="COMPLEXITY" missed="8" covered="24"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignAffineSemiLocalRight0" desc="(Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/sequence/Sequence;IIIIZZLcom/milaboratory/core/sequence/Alphabet;Lcom/milaboratory/core/alignment/AlignerCustom$AffineMatrixCache;)Lcom/milaboratory/core/alignment/Alignment;" line="368"><counter type="INSTRUCTION" missed="26" covered="516"/><counter type="BRANCH" missed="8" covered="54"/><counter type="LINE" missed="2" covered="74"/><counter type="COMPLEXITY" missed="8" covered="24"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="65" covered="1726"/><counter type="BRANCH" missed="21" covered="197"/><counter type="LINE" missed="6" covered="259"/><counter type="COMPLEXITY" missed="22" covered="93"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/AlignerCustom$Matrix" sourcefilename="AlignerCustom.java"><method name="&lt;init&gt;" desc="([III)V" line="498"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(II)I" line="505"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(III)V" line="509"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/BandedAffineAligner$MatrixCache" sourcefilename="BandedAffineAligner.java"><method name="&lt;init&gt;" desc="()V" line="604"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prepareMatrices" desc="(IIILcom/milaboratory/core/alignment/AffineGapAlignmentScoring;)V" line="612"><counter type="INSTRUCTION" missed="0" covered="119"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="137"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/AlignmentIteratorReverse" sourcefilename="AlignmentIteratorReverse.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/mutations/Mutations;Lcom/milaboratory/core/Range;)V" line="63"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/mutations/Mutations;Lcom/milaboratory/core/Range;I)V" line="73"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="advance" desc="()Z" line="88"><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSeq1Position" desc="()I" line="125"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSeq2Position" desc="()I" line="130"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMutationsPointer" desc="()I" line="135"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCurrentMutation" desc="()I" line="140"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="133"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="2" covered="29"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/BandedAligner" sourcefilename="BandedAligner.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="alignGlobal" desc="(Lcom/milaboratory/core/alignment/AlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;IIIII)Lcom/milaboratory/core/alignment/Alignment;" line="32"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/AffineGapAlignmentScoring$SerializationObject" sourcefilename="AffineGapAlignmentScoring.java"><method name="&lt;init&gt;" desc="()V" line="254"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;Lcom/milaboratory/core/alignment/SubstitutionMatrix;II)V" line="258"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readResolve" desc="()Ljava/lang/Object;" line="268"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="27"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/AlignerCustom$LinearMatrixCache" sourcefilename="AlignerCustom.java"><method name="&lt;init&gt;" desc="()V" line="516"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMatrix" desc="(II)Lcom/milaboratory/core/alignment/AlignerCustom$Matrix;" line="520"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/BandedMatrix" sourcefilename="BandedMatrix.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/CachedIntArray;III)V" line="43"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRowFactor" desc="()I" line="54"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getColumnDelta" desc="()I" line="58"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(II)I" line="62"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(III)V" line="69"><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="77"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="157"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/ScoringMatrixIO$Deserializer" sourcefilename="ScoringMatrixIO.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserialize" desc="(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/milaboratory/core/alignment/SubstitutionMatrix;" line="41"><counter type="INSTRUCTION" missed="101" covered="95"/><counter type="BRANCH" missed="9" covered="11"/><counter type="LINE" missed="12" covered="16"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="101" covered="98"/><counter type="BRANCH" missed="9" covered="11"/><counter type="LINE" missed="12" covered="17"/><counter type="COMPLEXITY" missed="7" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/BandedAffineAligner" sourcefilename="BandedAffineAligner.java"><method name="align0" desc="(Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;IIIIILcom/milaboratory/core/mutations/MutationsBuilder;Lcom/milaboratory/core/alignment/BandedAffineAligner$MatrixCache;)I" line="38"><counter type="INSTRUCTION" missed="8" covered="357"/><counter type="BRANCH" missed="6" covered="38"/><counter type="LINE" missed="1" covered="52"/><counter type="COMPLEXITY" missed="6" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="semiLocalRight0" desc="(Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;IIIIILcom/milaboratory/core/mutations/MutationsBuilder;Lcom/milaboratory/core/alignment/BandedAffineAligner$MatrixCache;)Lcom/milaboratory/core/alignment/BandedSemiLocalResult;" line="120"><counter type="INSTRUCTION" missed="8" covered="399"/><counter type="BRANCH" missed="7" covered="39"/><counter type="LINE" missed="1" covered="62"/><counter type="COMPLEXITY" missed="7" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="semiLocalLeft0" desc="(Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;IIIIILcom/milaboratory/core/mutations/MutationsBuilder;Lcom/milaboratory/core/alignment/BandedAffineAligner$MatrixCache;)Lcom/milaboratory/core/alignment/BandedSemiLocalResult;" line="217"><counter type="INSTRUCTION" missed="8" covered="448"/><counter type="BRANCH" missed="7" covered="39"/><counter type="LINE" missed="1" covered="65"/><counter type="COMPLEXITY" missed="7" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="semiGlobalRight0" desc="(Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;IIIIIIILcom/milaboratory/core/mutations/MutationsBuilder;Lcom/milaboratory/core/alignment/BandedAffineAligner$MatrixCache;)Lcom/milaboratory/core/alignment/BandedSemiLocalResult;" line="319"><counter type="INSTRUCTION" missed="8" covered="419"/><counter type="BRANCH" missed="6" covered="42"/><counter type="LINE" missed="1" covered="64"/><counter type="COMPLEXITY" missed="6" covered="19"/><counter type="METHOD" missed="0" covered="1"/></method><method name="semiGlobalLeft0" desc="(Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;IIIIIIILcom/milaboratory/core/mutations/MutationsBuilder;Lcom/milaboratory/core/alignment/BandedAffineAligner$MatrixCache;)Lcom/milaboratory/core/alignment/BandedSemiLocalResult;" line="420"><counter type="INSTRUCTION" missed="8" covered="452"/><counter type="BRANCH" missed="6" covered="42"/><counter type="LINE" missed="1" covered="63"/><counter type="COMPLEXITY" missed="6" covered="19"/><counter type="METHOD" missed="0" covered="1"/></method><method name="align" desc="(Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;IIIII)Lcom/milaboratory/core/alignment/Alignment;" line="518"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="align" desc="(Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;I)Lcom/milaboratory/core/alignment/Alignment;" line="531"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="semiLocalRight" desc="(Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;IIIII)Lcom/milaboratory/core/alignment/Alignment;" line="538"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="semiLocalRight" desc="(Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;I)Lcom/milaboratory/core/alignment/Alignment;" line="549"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="semiLocalLeft" desc="(Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;IIIII)Lcom/milaboratory/core/alignment/Alignment;" line="556"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="semiLocalLeft" desc="(Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;I)Lcom/milaboratory/core/alignment/Alignment;" line="567"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="semiGlobalRight" desc="(Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;IIIIIII)Lcom/milaboratory/core/alignment/Alignment;" line="575"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="semiGlobalLeft" desc="(Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;IIIIIII)Lcom/milaboratory/core/alignment/Alignment;" line="590"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="54" covered="2331"/><counter type="BRANCH" missed="33" covered="201"/><counter type="LINE" missed="6" covered="324"/><counter type="COMPLEXITY" missed="34" covered="97"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/AlignerCustom$AffineMatrixCache" sourcefilename="AlignerCustom.java"><method name="&lt;init&gt;" desc="()V" line="524"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initMatrices" desc="(II)V" line="531"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/AlignmentHelper" sourcefilename="AlignmentHelper.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;[I[ILcom/milaboratory/util/BitArray;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;[I[ILcom/milaboratory/util/BitArray;I)V" line="36"><counter type="INSTRUCTION" missed="0" covered="93"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRange" desc="(II)Lcom/milaboratory/core/alignment/AlignmentHelper;" line="58"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRange" desc="(III)Lcom/milaboratory/core/alignment/AlignmentHelper;" line="62"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(I)[Lcom/milaboratory/core/alignment/AlignmentHelper;" line="68"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="split" desc="(II)[Lcom/milaboratory/core/alignment/AlignmentHelper;" line="72"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="identity" desc="()D" line="85"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="92"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSequence1PositionAt" desc="(I)I" line="96"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSequence2PositionAt" desc="(I)I" line="100"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSeq1String" desc="()Ljava/lang/String;" line="107"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSeq2String" desc="()Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMarkup" desc="()Ljava/lang/String;" line="121"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLine1" desc="()Ljava/lang/String;" line="128"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLine1Compact" desc="()Ljava/lang/String;" line="135"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLine2" desc="()Ljava/lang/String;" line="145"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLine3" desc="()Ljava/lang/String;" line="152"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toStringWithSeq2Quality" desc="(Lcom/milaboratory/core/sequence/SequenceQuality;)Ljava/lang/String;" line="159"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLine3Compact" desc="()Ljava/lang/String;" line="166"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toCompact" desc="(Ljava/lang/String;)Ljava/lang/String;" line="173"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="182"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toCompactString" desc="()Ljava/lang/String;" line="189"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="aL" desc="(I)I" line="193"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="aR" desc="(I)I" line="197"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="94" covered="443"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="10" covered="57"/><counter type="COMPLEXITY" missed="9" covered="25"/><counter type="METHOD" missed="7" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/Aligner$Matrix" sourcefilename="Aligner.java"><method name="&lt;init&gt;" desc="(II)V" line="174"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(II)I" line="181"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(III)V" line="185"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/LinearGapAlignmentScoring$SerializationObject" sourcefilename="LinearGapAlignmentScoring.java"><method name="&lt;init&gt;" desc="()V" line="171"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;Lcom/milaboratory/core/alignment/SubstitutionMatrix;I)V" line="174"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readResolve" desc="()Ljava/lang/Object;" line="183"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="22"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/MultiAlignmentHelper" sourcefilename="MultiAlignmentHelper.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;[Ljava/lang/String;[I[[I[Lcom/milaboratory/util/BitArray;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;[Ljava/lang/String;[I[[I[Lcom/milaboratory/util/BitArray;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubjectLeftTitle" desc="()Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSubjectRightTitle" desc="()Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQueryLeftTitle" desc="(I)Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQueryRightTitle" desc="(I)Ljava/lang/String;" line="84"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getActualPositionWidth" desc="()I" line="88"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMinimalPositionWidth" desc="(I)V" line="95"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSubjectLeftTitle" desc="(Ljava/lang/String;)Lcom/milaboratory/core/alignment/MultiAlignmentHelper;" line="99"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addSubjectQuality" desc="(Ljava/lang/String;Lcom/milaboratory/core/sequence/SequenceQuality;)Lcom/milaboratory/core/alignment/MultiAlignmentHelper;" line="104"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="simplifiedQuality" desc="(I)C" line="112"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSubjectRightTitle" desc="(Ljava/lang/String;)Lcom/milaboratory/core/alignment/MultiAlignmentHelper;" line="119"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAnnotationString" desc="(Ljava/lang/String;Ljava/lang/String;)Lcom/milaboratory/core/alignment/MultiAlignmentHelper;" line="124"><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setQueryLeftTitle" desc="(ILjava/lang/String;)Lcom/milaboratory/core/alignment/MultiAlignmentHelper;" line="132"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setQueryRightTitle" desc="(ILjava/lang/String;)Lcom/milaboratory/core/alignment/MultiAlignmentHelper;" line="137"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSubjectPositionAt" desc="(I)I" line="142"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subjectToAlignmentPosition" desc="(I)I" line="146"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQueryPositionAt" desc="(II)I" line="153"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAbsSubjectPositionAt" desc="(I)I" line="157"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAbsQueryPositionAt" desc="(II)I" line="161"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="aabs" desc="(I)I" line="165"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSubjectFrom" desc="()I" line="173"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubjectTo" desc="()I" line="177"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubjectLength" desc="()I" line="181"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQueryFrom" desc="(I)I" line="185"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQueryTo" desc="(I)I" line="189"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAnnotationString" desc="(I)Ljava/lang/String;" line="193"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="197"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRange" desc="(II)Lcom/milaboratory/core/alignment/MultiAlignmentHelper;" line="201"><counter type="INSTRUCTION" missed="0" covered="169"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(I)[Lcom/milaboratory/core/alignment/MultiAlignmentHelper;" line="244"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(IZ)[Lcom/milaboratory/core/alignment/MultiAlignmentHelper;" line="248"><counter type="INSTRUCTION" missed="2" covered="42"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirstPosition" desc="([I)I" line="260"><counter type="INSTRUCTION" missed="4" covered="41"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLastPosition" desc="([I)I" line="270"><counter type="INSTRUCTION" missed="4" covered="35"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fixedWidthL" desc="([Ljava/lang/String;)I" line="280"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fixedWidthL" desc="([Ljava/lang/String;I)I" line="284"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fixedWidthR" desc="([Ljava/lang/String;)I" line="294"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fixedWidthR" desc="([Ljava/lang/String;I)I" line="298"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="325"><counter type="INSTRUCTION" missed="23" covered="290"/><counter type="BRANCH" missed="2" covered="22"/><counter type="LINE" missed="1" covered="30"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="(Lcom/milaboratory/core/alignment/MultiAlignmentHelper$Settings;Lcom/milaboratory/core/Range;[Lcom/milaboratory/core/alignment/Alignment;)Lcom/milaboratory/core/alignment/MultiAlignmentHelper;" line="378"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="(Lcom/milaboratory/core/alignment/MultiAlignmentHelper$Settings;Lcom/milaboratory/core/Range;Lcom/milaboratory/core/sequence/Sequence;[Lcom/milaboratory/core/alignment/Alignment;)Lcom/milaboratory/core/alignment/MultiAlignmentHelper;" line="384"><counter type="INSTRUCTION" missed="22" covered="533"/><counter type="BRANCH" missed="10" covered="57"/><counter type="LINE" missed="2" covered="96"/><counter type="COMPLEXITY" missed="9" covered="26"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignPositions" desc="([Lcom/milaboratory/core/alignment/MultiAlignmentHelper;)V" line="528"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="spaces" desc="(I)Ljava/lang/String;" line="536"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="246" covered="1442"/><counter type="BRANCH" missed="34" covered="123"/><counter type="LINE" missed="43" covered="239"/><counter type="COMPLEXITY" missed="43" covered="79"/><counter type="METHOD" missed="17" covered="26"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/AlignerCustom$MatrixCache" sourcefilename="AlignerCustom.java"/><class name="com/milaboratory/core/alignment/AlignmentTrimmer" sourcefilename="AlignmentTrimmer.java"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="leftTrimAlignment" desc="(Lcom/milaboratory/core/alignment/Alignment;Lcom/milaboratory/core/alignment/AlignmentScoring;)Lcom/milaboratory/core/alignment/Alignment;" line="36"><counter type="INSTRUCTION" missed="5" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="leftTrimAlignment" desc="(Lcom/milaboratory/core/alignment/Alignment;Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;)Lcom/milaboratory/core/alignment/Alignment;" line="56"><counter type="INSTRUCTION" missed="0" covered="124"/><counter type="BRANCH" missed="0" covered="15"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="leftTrimAlignment" desc="(Lcom/milaboratory/core/alignment/Alignment;Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;)Lcom/milaboratory/core/alignment/Alignment;" line="113"><counter type="INSTRUCTION" missed="0" covered="164"/><counter type="BRANCH" missed="2" covered="22"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rightTrimAlignment" desc="(Lcom/milaboratory/core/alignment/Alignment;Lcom/milaboratory/core/alignment/AlignmentScoring;)Lcom/milaboratory/core/alignment/Alignment;" line="180"><counter type="INSTRUCTION" missed="5" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rightTrimAlignment" desc="(Lcom/milaboratory/core/alignment/Alignment;Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;)Lcom/milaboratory/core/alignment/Alignment;" line="200"><counter type="INSTRUCTION" missed="0" covered="105"/><counter type="BRANCH" missed="0" covered="11"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rightTrimAlignment" desc="(Lcom/milaboratory/core/alignment/Alignment;Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;)Lcom/milaboratory/core/alignment/Alignment;" line="257"><counter type="INSTRUCTION" missed="0" covered="145"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="570"/><counter type="BRANCH" missed="6" covered="72"/><counter type="LINE" missed="3" covered="128"/><counter type="COMPLEXITY" missed="7" covered="42"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/BandedLinearAligner" sourcefilename="BandedLinearAligner.java"><method name="align0" desc="(Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;IIIIILcom/milaboratory/core/mutations/MutationsBuilder;Lcom/milaboratory/core/alignment/CachedIntArray;)F" line="47"><counter type="INSTRUCTION" missed="8" covered="287"/><counter type="BRANCH" missed="6" covered="30"/><counter type="LINE" missed="2" covered="41"/><counter type="COMPLEXITY" missed="6" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignRightAdded0" desc="(Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;IIIIIIILcom/milaboratory/core/mutations/MutationsBuilder;Lcom/milaboratory/core/alignment/CachedIntArray;)Lcom/milaboratory/core/alignment/BandedSemiLocalResult;" line="132"><counter type="INSTRUCTION" missed="8" covered="354"/><counter type="BRANCH" missed="6" covered="38"/><counter type="LINE" missed="2" covered="55"/><counter type="COMPLEXITY" missed="6" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignLeftAdded0" desc="(Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;IIIIIIILcom/milaboratory/core/mutations/MutationsBuilder;Lcom/milaboratory/core/alignment/CachedIntArray;)Lcom/milaboratory/core/alignment/BandedSemiLocalResult;" line="245"><counter type="INSTRUCTION" missed="8" covered="379"/><counter type="BRANCH" missed="6" covered="38"/><counter type="LINE" missed="2" covered="54"/><counter type="COMPLEXITY" missed="6" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignSemiLocalLeft0" desc="(Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;IIIIIILcom/milaboratory/core/mutations/MutationsBuilder;Lcom/milaboratory/core/alignment/CachedIntArray;)Lcom/milaboratory/core/alignment/BandedSemiLocalResult;" line="354"><counter type="INSTRUCTION" missed="8" covered="338"/><counter type="BRANCH" missed="6" covered="34"/><counter type="LINE" missed="2" covered="52"/><counter type="COMPLEXITY" missed="6" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignSemiLocalRight0" desc="(Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;IIIIIILcom/milaboratory/core/mutations/MutationsBuilder;Lcom/milaboratory/core/alignment/CachedIntArray;)Lcom/milaboratory/core/alignment/BandedSemiLocalResult;" line="457"><counter type="INSTRUCTION" missed="8" covered="361"/><counter type="BRANCH" missed="6" covered="34"/><counter type="LINE" missed="2" covered="51"/><counter type="COMPLEXITY" missed="6" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="align" desc="(Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;I)Lcom/milaboratory/core/alignment/Alignment;" line="546"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="align" desc="(Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;IIIII)Lcom/milaboratory/core/alignment/Alignment;" line="567"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignLeftAdded" desc="(Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;IIIIIII)Lcom/milaboratory/core/alignment/Alignment;" line="600"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignRightAdded" desc="(Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;IIIIIII)Lcom/milaboratory/core/alignment/Alignment;" line="633"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignSemiLocalLeft" desc="(Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;IIIIII)Lcom/milaboratory/core/alignment/Alignment;" line="669"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignSemiLocalLeft" desc="(Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;II)Lcom/milaboratory/core/alignment/Alignment;" line="702"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignSemiLocalRight" desc="(Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;IIIIII)Lcom/milaboratory/core/alignment/Alignment;" line="726"><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignSemiLocalRight" desc="(Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/NucleotideSequence;II)Lcom/milaboratory/core/alignment/Alignment;" line="761"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="40" covered="2037"/><counter type="BRANCH" missed="30" covered="174"/><counter type="LINE" missed="10" covered="291"/><counter type="COMPLEXITY" missed="30" covered="85"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/AlignmentCache$CachedArrayProvider" sourcefilename="AlignmentCache.java"><method name="&lt;init&gt;" desc="()V" line="79"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lcom/milaboratory/core/alignment/CachedIntArray;" line="84"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="release" desc="()V" line="100"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/AlignmentElementType" sourcefilename="AlignmentElementType.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;IC)V" line="26"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/Alignment$AlignmentElementOP" sourcefilename="Alignment.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/Alignment;)V" line="438"><counter type="INSTRUCTION" missed="4" covered="29"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="take" desc="()Lcom/milaboratory/core/alignment/AlignmentElement;" line="450"><counter type="INSTRUCTION" missed="4" covered="201"/><counter type="BRANCH" missed="4" covered="26"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="437"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="236"/><counter type="BRANCH" missed="7" covered="29"/><counter type="LINE" missed="1" covered="44"/><counter type="COMPLEXITY" missed="7" covered="14"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/CachedIntArray" sourcefilename="CachedIntArray.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)[I" line="32"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/IO" sourcefilename="IO.java"/><class name="com/milaboratory/core/alignment/ScoringMatrixIO" sourcefilename="ScoringMatrixIO.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readAABlastMatrix" desc="(Ljava/io/InputStream;)[I" line="203"><counter type="INSTRUCTION" missed="5" covered="158"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="1" covered="22"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVals" desc="(I[I)[I" line="253"><counter type="INSTRUCTION" missed="3" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAACode" desc="(Ljava/lang/String;)B" line="267"><counter type="INSTRUCTION" missed="4" covered="20"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="193"/><counter type="BRANCH" missed="4" covered="24"/><counter type="LINE" missed="4" covered="31"/><counter type="COMPLEXITY" missed="5" covered="13"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/ScoringMatrixIO$Serializer" sourcefilename="ScoringMatrixIO.java"><method name="&lt;init&gt;" desc="()V" line="88"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serialize" desc="(Lcom/milaboratory/core/alignment/SubstitutionMatrix;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V" line="91"><counter type="INSTRUCTION" missed="46" covered="29"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="46" covered="32"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="6" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/BandedSemiLocalResult" sourcefilename="BandedSemiLocalResult.java"><method name="&lt;init&gt;" desc="(III)V" line="45"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/AlignmentElement" sourcefilename="AlignmentElement.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/Range;Lcom/milaboratory/core/Range;Z)V" line="29"><counter type="INSTRUCTION" missed="4" covered="29"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lcom/milaboratory/core/alignment/AlignmentElementType;" line="40"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCigarLength" desc="()I" line="48"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCigarString" desc="()Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="62"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="72"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="77"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="96" covered="56"/><counter type="BRANCH" missed="11" covered="11"/><counter type="LINE" missed="10" covered="14"/><counter type="COMPLEXITY" missed="10" covered="8"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/ScoringUtils" sourcefilename="ScoringUtils.java"><method name="getSymmetricMatrix" desc="(IILcom/milaboratory/core/sequence/Alphabet;)[I" line="40"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMismatchScore" desc="(Lcom/milaboratory/core/sequence/Alphabet;[II)[I" line="49"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMatchScore" desc="(Lcom/milaboratory/core/sequence/Alphabet;[II)[I" line="62"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fillWildcardScores" desc="([ILcom/milaboratory/core/sequence/Alphabet;[B)[I" line="81"><counter type="INSTRUCTION" missed="6" covered="106"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="114" covered="138"/><counter type="BRANCH" missed="19" covered="17"/><counter type="LINE" missed="20" covered="20"/><counter type="COMPLEXITY" missed="13" covered="9"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/Aligner" sourcefilename="Aligner.java"><method name="alignOnlySubstitutions0" desc="(Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/sequence/Sequence;IIIILcom/milaboratory/core/alignment/AlignmentScoring;Lcom/milaboratory/core/mutations/MutationsBuilder;)I" line="30"><counter type="INSTRUCTION" missed="5" covered="44"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignOnlySubstitutions" desc="(Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/sequence/Sequence;IIIILcom/milaboratory/core/alignment/AlignmentScoring;)Lcom/milaboratory/core/alignment/Alignment;" line="46"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignOnlySubstitutions" desc="(Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/sequence/Sequence;)Lcom/milaboratory/core/alignment/Alignment;" line="53"><counter type="INSTRUCTION" missed="9" covered="64"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignGlobal" desc="(Lcom/milaboratory/core/alignment/AlignmentScoring;Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/sequence/Sequence;IIII)Lcom/milaboratory/core/alignment/Alignment;" line="72"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="alignGlobal" desc="(Lcom/milaboratory/core/alignment/AlignmentScoring;Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/sequence/Sequence;)Lcom/milaboratory/core/alignment/Alignment;" line="93"><counter type="INSTRUCTION" missed="5" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignGlobalLinear" desc="(Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/sequence/Sequence;)Lcom/milaboratory/core/alignment/Alignment;" line="110"><counter type="INSTRUCTION" missed="9" covered="311"/><counter type="BRANCH" missed="4" covered="28"/><counter type="LINE" missed="2" covered="36"/><counter type="COMPLEXITY" missed="4" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="max" desc="(II)I" line="190"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="max" desc="(III)I" line="194"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="max" desc="(IIII)I" line="198"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignGlobalAffine" desc="(Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/sequence/Sequence;)Lcom/milaboratory/core/alignment/Alignment;" line="212"><counter type="INSTRUCTION" missed="13" covered="443"/><counter type="BRANCH" missed="8" covered="40"/><counter type="LINE" missed="2" covered="67"/><counter type="COMPLEXITY" missed="8" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignLocal" desc="(Lcom/milaboratory/core/alignment/AlignmentScoring;Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/sequence/Sequence;)Lcom/milaboratory/core/alignment/Alignment;" line="333"><counter type="INSTRUCTION" missed="5" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignLocalLinear" desc="(Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/sequence/Sequence;)Lcom/milaboratory/core/alignment/Alignment;" line="349"><counter type="INSTRUCTION" missed="15" covered="352"/><counter type="BRANCH" missed="13" covered="27"/><counter type="LINE" missed="5" covered="44"/><counter type="COMPLEXITY" missed="12" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alignLocalAffine" desc="(Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/sequence/Sequence;)Lcom/milaboratory/core/alignment/Alignment;" line="439"><counter type="INSTRUCTION" missed="21" covered="439"/><counter type="BRANCH" missed="16" covered="48"/><counter type="LINE" missed="4" covered="75"/><counter type="COMPLEXITY" missed="15" covered="18"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="124" covered="1751"/><counter type="BRANCH" missed="47" covered="161"/><counter type="LINE" missed="25" covered="255"/><counter type="COMPLEXITY" missed="46" covered="72"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/AlignmentScoring" sourcefilename="AlignmentScoring.java"/><class name="com/milaboratory/core/alignment/MultiAlignmentHelper$Settings" sourcefilename="MultiAlignmentHelper.java"><method name="&lt;init&gt;" desc="(ZZZCC)V" line="314"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/LinearGapAlignmentScoring" sourcefilename="LinearGapAlignmentScoring.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;Lcom/milaboratory/core/alignment/SubstitutionMatrix;I)V" line="48"><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;[II)V" line="65"><counter type="INSTRUCTION" missed="4" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;III)V" line="83"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGapPenalty" desc="()I" line="92"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="97"><counter type="INSTRUCTION" missed="5" covered="27"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="108"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNucleotideBLASTScoring" desc="()Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;" line="121"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNucleotideBLASTScoring" desc="(I)Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;" line="131"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAminoAcidBLASTScoring" desc="(Lcom/milaboratory/core/alignment/BLASTMatrix;)Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;" line="143"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAminoAcidBLASTScoring" desc="(Lcom/milaboratory/core/alignment/BLASTMatrix;I)Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;" line="154"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeReplace" desc="()Ljava/lang/Object;" line="162"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="45" covered="104"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="8" covered="22"/><counter type="COMPLEXITY" missed="8" covered="11"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/AlignmentIteratorForward" sourcefilename="AlignmentIteratorForward.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/mutations/Mutations;Lcom/milaboratory/core/Range;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/mutations/Mutations;Lcom/milaboratory/core/Range;I)V" line="50"><counter type="INSTRUCTION" missed="5" covered="41"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="advance" desc="()Z" line="95"><counter type="INSTRUCTION" missed="0" covered="91"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSeq1Position" desc="()I" line="131"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSeq2Position" desc="()I" line="136"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMutationsPointer" desc="()I" line="141"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCurrentMutation" desc="()I" line="146"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="150"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="1" covered="31"/><counter type="COMPLEXITY" missed="3" covered="16"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/BandedAlignerParameters" sourcefilename="BandedAlignerParameters.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/AlignmentScoring;II)V" line="33"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getScoring" desc="()Lcom/milaboratory/core/alignment/AlignmentScoring;" line="43"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setScoring" desc="(Lcom/milaboratory/core/alignment/AlignmentScoring;)Lcom/milaboratory/core/alignment/BandedAlignerParameters;" line="50"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWidth" desc="()I" line="58"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setWidth" desc="(I)Lcom/milaboratory/core/alignment/BandedAlignerParameters;" line="65"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStopPenalty" desc="()I" line="73"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setStopPenalty" desc="(I)Lcom/milaboratory/core/alignment/BandedAlignerParameters;" line="80"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/milaboratory/core/alignment/BandedAlignerParameters;" line="85"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="90"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="104"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="107" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="AffineGapAlignmentScoring.java"><line nr="50" mi="16" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="2" cb="2"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="2" cb="2"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="18" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="14" ci="0" mb="2" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="10" ci="0" mb="0" cb="0"/><line nr="133" mi="6" ci="0" mb="0" cb="0"/><line nr="138" mi="10" ci="0" mb="0" cb="0"/><line nr="139" mi="6" ci="0" mb="0" cb="0"/><line nr="144" mi="7" ci="0" mb="0" cb="0"/><line nr="145" mi="6" ci="0" mb="0" cb="0"/><line nr="149" mi="7" ci="0" mb="0" cb="0"/><line nr="150" mi="6" ci="0" mb="0" cb="0"/><line nr="156" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="1" ci="0" mb="0" cb="0"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="2" ci="3" mb="1" cb="1"/><line nr="165" mi="2" ci="7" mb="2" cb="2"/><line nr="166" mi="2" ci="4" mb="1" cb="1"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="2" ci="5" mb="1" cb="1"/><line nr="171" mi="1" ci="8" mb="1" cb="1"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><line nr="177" mi="7" ci="0" mb="0" cb="0"/><line nr="178" mi="7" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="9" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="10" mb="0" cb="0"/><line nr="245" mi="0" ci="12" mb="0" cb="0"/><line nr="254" mi="6" ci="0" mb="0" cb="0"/><line nr="255" mi="1" ci="0" mb="0" cb="0"/><line nr="258" mi="0" ci="2" mb="0" cb="0"/><line nr="259" mi="0" ci="3" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="148" covered="164"/><counter type="BRANCH" missed="12" covered="10"/><counter type="LINE" missed="24" covered="34"/><counter type="COMPLEXITY" missed="20" covered="14"/><counter type="METHOD" missed="9" covered="14"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AlignmentUtils.java"><line nr="46" mi="0" ci="11" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="2"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="1" cb="1"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="11" mb="1" cb="3"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="2"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="3"/><line nr="92" mi="0" ci="9" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="7" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="11" mb="1" cb="3"/><line nr="123" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="2"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="4"/><line nr="135" mi="0" ci="9" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="10" mb="1" cb="3"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="8" mb="1" cb="3"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="7" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="9" ci="0" mb="0" cb="0"/><line nr="166" mi="11" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="8" mb="1" cb="3"/><line nr="179" mi="0" ci="13" mb="0" cb="4"/><line nr="180" mi="0" ci="4" mb="1" cb="3"/><line nr="182" mi="0" ci="9" mb="1" cb="1"/><line nr="183" mi="20" ci="0" mb="0" cb="0"/><line nr="184" mi="5" ci="0" mb="0" cb="0"/><line nr="185" mi="0" ci="8" mb="0" cb="0"/><line nr="186" mi="0" ci="10" mb="0" cb="0"/><line nr="187" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="9" mb="1" cb="1"/><line nr="191" mi="20" ci="0" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="193" mi="0" ci="7" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="0" ci="1" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="9" mb="0" cb="0"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="204" mi="0" ci="6" mb="0" cb="0"/><line nr="205" mi="0" ci="8" mb="0" cb="0"/><line nr="209" mi="0" ci="15" mb="0" cb="0"/><line nr="213" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="83" covered="334"/><counter type="BRANCH" missed="9" covered="38"/><counter type="LINE" missed="9" covered="67"/><counter type="COMPLEXITY" missed="10" covered="23"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AlignmentIteratorReverse.java"><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="11" mb="0" cb="2"/><line nr="92" mi="0" ci="4" mb="0" cb="2"/><line nr="93" mi="0" ci="10" mb="0" cb="2"/><line nr="94" mi="0" ci="7" mb="0" cb="2"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="2"/><line nr="98" mi="0" ci="3" mb="1" cb="3"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="7" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="9" mb="0" cb="2"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="133"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="2" covered="29"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AlignmentTrimmer.java"><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="2"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="1" cb="1"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="2"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="3"/><line nr="67" mi="0" ci="9" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="4"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="11" mb="0" cb="2"/><line nr="85" mi="0" ci="11" mb="0" cb="2"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="2"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="15" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="8" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="2"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="4"/><line nr="126" mi="0" ci="9" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="10" mb="1" cb="3"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="8" mb="1" cb="3"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="7" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="4"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="11" mb="0" cb="2"/><line nr="154" mi="0" ci="11" mb="0" cb="2"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="2"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="15" mb="0" cb="0"/><line nr="165" mi="0" ci="7" mb="0" cb="0"/><line nr="166" mi="0" ci="8" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="2"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="1" cb="1"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="6" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="2"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="3"/><line nr="211" mi="0" ci="9" mb="0" cb="0"/><line nr="212" mi="0" ci="1" mb="0" cb="0"/><line nr="216" mi="0" ci="5" mb="0" cb="0"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="220" mi="0" ci="5" mb="0" cb="0"/><line nr="221" mi="0" ci="7" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="4"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="2"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="11" mb="0" cb="0"/><line nr="240" mi="0" ci="7" mb="0" cb="0"/><line nr="241" mi="0" ci="9" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="260" mi="0" ci="2" mb="0" cb="0"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><line nr="262" mi="0" ci="6" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="2"/><line nr="267" mi="0" ci="3" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="0" cb="4"/><line nr="270" mi="0" ci="9" mb="0" cb="0"/><line nr="271" mi="0" ci="1" mb="0" cb="0"/><line nr="274" mi="0" ci="10" mb="1" cb="3"/><line nr="275" mi="0" ci="6" mb="0" cb="0"/><line nr="277" mi="0" ci="5" mb="0" cb="0"/><line nr="278" mi="0" ci="1" mb="0" cb="0"/><line nr="281" mi="0" ci="8" mb="1" cb="3"/><line nr="282" mi="0" ci="6" mb="0" cb="0"/><line nr="284" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="0" ci="1" mb="0" cb="0"/><line nr="288" mi="0" ci="5" mb="0" cb="0"/><line nr="289" mi="0" ci="7" mb="0" cb="0"/><line nr="292" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="5" mb="0" cb="4"/><line nr="296" mi="0" ci="2" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><line nr="299" mi="0" ci="3" mb="0" cb="0"/><line nr="301" mi="0" ci="1" mb="0" cb="0"/><line nr="303" mi="0" ci="3" mb="0" cb="2"/><line nr="304" mi="0" ci="2" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="0"/><line nr="308" mi="0" ci="11" mb="0" cb="0"/><line nr="309" mi="0" ci="7" mb="0" cb="0"/><line nr="310" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="570"/><counter type="BRANCH" missed="6" covered="72"/><counter type="LINE" missed="3" covered="128"/><counter type="COMPLEXITY" missed="7" covered="42"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SubstitutionMatrix.java"><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="2"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="1" cb="1"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="2"/><line nr="51" mi="0" ci="11" mb="0" cb="0"/><line nr="53" mi="0" ci="9" mb="1" cb="1"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="2" ci="3" mb="1" cb="1"/><line nr="62" mi="2" ci="7" mb="2" cb="2"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="69"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="3" covered="14"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IO.java"/><sourcefile name="AlignmentElement.java"><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="11" mb="1" cb="5"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="2"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="2"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="2"/><line nr="48" mi="0" ci="8" mb="0" cb="0"/><line nr="57" mi="14" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="2" cb="0"/><line nr="63" mi="5" ci="0" mb="2" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="10" ci="0" mb="2" cb="0"/><line nr="66" mi="6" ci="0" mb="2" cb="0"/><line nr="67" mi="5" ci="0" mb="2" cb="0"/><line nr="72" mi="20" ci="0" mb="0" cb="0"/><line nr="77" mi="24" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="96" covered="56"/><counter type="BRANCH" missed="11" covered="11"/><counter type="LINE" missed="10" covered="14"/><counter type="COMPLEXITY" missed="10" covered="8"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BandedAligner.java"><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="2"/><line nr="33" mi="0" ci="11" mb="0" cb="0"/><line nr="35" mi="0" ci="11" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LinearGapAlignmentScoring.java"><line nr="39" mi="16" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="1" cb="1"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="1" cb="1"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="17" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="2"/><line nr="98" mi="2" ci="7" mb="2" cb="2"/><line nr="99" mi="2" ci="4" mb="1" cb="1"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="1" ci="8" mb="1" cb="1"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="7" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="8" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="10" mb="0" cb="0"/><line nr="171" mi="5" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="126"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="10" covered="28"/><counter type="COMPLEXITY" missed="9" covered="13"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="BLASTMatrix.java"><line nr="26" mi="0" ci="40" mb="0" cb="0"/><line nr="27" mi="0" ci="48" mb="0" cb="0"/><line nr="28" mi="0" ci="7" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="2"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="1" cb="1"/><line nr="34" mi="0" ci="15" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="131"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AlignerCustom.java"><line nr="27" mi="5" ci="6" mb="1" cb="1"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="2"/><line nr="68" mi="0" ci="7" mb="0" cb="2"/><line nr="69" mi="0" ci="8" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="2"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="2"/><line nr="75" mi="0" ci="7" mb="0" cb="2"/><line nr="76" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="2"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="2"/><line nr="88" mi="0" ci="7" mb="0" cb="2"/><line nr="89" mi="0" ci="9" mb="0" cb="0"/><line nr="90" mi="0" ci="9" mb="0" cb="0"/><line nr="91" mi="0" ci="10" mb="0" cb="0"/><line nr="92" mi="0" ci="10" mb="0" cb="0"/><line nr="93" mi="0" ci="15" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="2"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="4"/><line nr="107" mi="0" ci="5" mb="0" cb="4"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="4"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="11" mb="0" cb="4"/><line nr="112" mi="0" ci="10" mb="0" cb="0"/><line nr="113" mi="0" ci="10" mb="0" cb="2"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="2"/><line nr="116" mi="0" ci="8" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="9" mb="0" cb="2"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="2"/><line nr="122" mi="0" ci="11" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="9" mb="1" cb="1"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="1" cb="1"/><line nr="127" mi="0" ci="13" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="31" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="2"/><line nr="156" mi="0" ci="7" mb="0" cb="2"/><line nr="157" mi="0" ci="8" mb="0" cb="0"/><line nr="159" mi="0" ci="7" mb="0" cb="2"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="2"/><line nr="163" mi="0" ci="7" mb="0" cb="2"/><line nr="164" mi="0" ci="8" mb="0" cb="0"/><line nr="166" mi="0" ci="7" mb="0" cb="2"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="7" mb="0" cb="2"/><line nr="176" mi="0" ci="7" mb="0" cb="2"/><line nr="177" mi="0" ci="13" mb="0" cb="0"/><line nr="178" mi="0" ci="12" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="10" mb="0" cb="0"/><line nr="181" mi="0" ci="10" mb="0" cb="0"/><line nr="182" mi="0" ci="15" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="2"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="4"/><line nr="196" mi="0" ci="5" mb="0" cb="4"/><line nr="197" mi="0" ci="1" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="4"/><line nr="199" mi="0" ci="1" mb="0" cb="0"/><line nr="200" mi="0" ci="11" mb="0" cb="4"/><line nr="201" mi="0" ci="14" mb="0" cb="0"/><line nr="202" mi="0" ci="14" mb="0" cb="2"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="2"/><line nr="205" mi="0" ci="12" mb="0" cb="0"/><line nr="206" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="9" mb="0" cb="2"/><line nr="209" mi="0" ci="6" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="0" cb="2"/><line nr="211" mi="0" ci="19" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="9" mb="1" cb="1"/><line nr="214" mi="0" ci="6" mb="0" cb="0"/><line nr="215" mi="0" ci="5" mb="1" cb="1"/><line nr="216" mi="0" ci="19" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="4" ci="0" mb="0" cb="0"/><line nr="222" mi="0" ci="39" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="2" cb="2"/><line nr="238" mi="18" ci="0" mb="0" cb="0"/><line nr="240" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="246" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="251" mi="0" ci="7" mb="0" cb="2"/><line nr="255" mi="0" ci="10" mb="0" cb="0"/><line nr="256" mi="0" ci="9" mb="0" cb="2"/><line nr="257" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="261" mi="0" ci="7" mb="0" cb="2"/><line nr="265" mi="0" ci="10" mb="0" cb="0"/><line nr="266" mi="0" ci="9" mb="0" cb="2"/><line nr="267" mi="0" ci="5" mb="0" cb="0"/><line nr="268" mi="0" ci="5" mb="0" cb="0"/><line nr="271" mi="0" ci="5" mb="0" cb="0"/><line nr="272" mi="0" ci="5" mb="0" cb="0"/><line nr="273" mi="0" ci="5" mb="0" cb="0"/><line nr="277" mi="0" ci="6" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="0" cb="0"/><line nr="280" mi="0" ci="7" mb="0" cb="2"/><line nr="281" mi="0" ci="7" mb="0" cb="2"/><line nr="282" mi="0" ci="9" mb="0" cb="0"/><line nr="283" mi="0" ci="9" mb="0" cb="0"/><line nr="285" mi="0" ci="19" mb="0" cb="0"/><line nr="286" mi="0" ci="19" mb="0" cb="0"/><line nr="288" mi="0" ci="9" mb="0" cb="0"/><line nr="289" mi="0" ci="9" mb="0" cb="0"/><line nr="290" mi="0" ci="6" mb="0" cb="0"/><line nr="291" mi="0" ci="9" mb="0" cb="0"/><line nr="293" mi="0" ci="3" mb="0" cb="2"/><line nr="294" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="2" mb="0" cb="0"/><line nr="296" mi="0" ci="2" mb="0" cb="0"/><line nr="301" mi="0" ci="5" mb="0" cb="0"/><line nr="303" mi="0" ci="2" mb="0" cb="0"/><line nr="304" mi="0" ci="2" mb="0" cb="0"/><line nr="305" mi="0" ci="9" mb="0" cb="0"/><line nr="308" mi="0" ci="4" mb="0" cb="0"/><line nr="309" mi="0" ci="4" mb="0" cb="4"/><line nr="314" mi="4" ci="6" mb="2" cb="4"/><line nr="315" mi="0" ci="14" mb="0" cb="6"/><line nr="316" mi="0" ci="2" mb="0" cb="2"/><line nr="317" mi="0" ci="2" mb="0" cb="0"/><line nr="318" mi="0" ci="10" mb="0" cb="2"/><line nr="319" mi="0" ci="2" mb="0" cb="0"/><line nr="320" mi="0" ci="8" mb="0" cb="0"/><line nr="322" mi="0" ci="7" mb="0" cb="0"/><line nr="324" mi="0" ci="11" mb="0" cb="0"/><line nr="325" mi="0" ci="2" mb="0" cb="0"/><line nr="326" mi="0" ci="12" mb="0" cb="4"/><line nr="327" mi="0" ci="2" mb="0" cb="2"/><line nr="328" mi="0" ci="2" mb="0" cb="0"/><line nr="329" mi="0" ci="10" mb="0" cb="2"/><line nr="330" mi="0" ci="2" mb="0" cb="0"/><line nr="331" mi="0" ci="8" mb="0" cb="0"/><line nr="333" mi="0" ci="7" mb="0" cb="0"/><line nr="335" mi="0" ci="13" mb="0" cb="0"/><line nr="336" mi="0" ci="2" mb="0" cb="0"/><line nr="337" mi="0" ci="8" mb="0" cb="4"/><line nr="338" mi="0" ci="19" mb="1" cb="1"/><line nr="339" mi="0" ci="5" mb="0" cb="0"/><line nr="340" mi="0" ci="3" mb="0" cb="2"/><line nr="341" mi="0" ci="8" mb="0" cb="0"/><line nr="342" mi="0" ci="1" mb="0" cb="0"/><line nr="343" mi="0" ci="2" mb="0" cb="0"/><line nr="345" mi="0" ci="5" mb="1" cb="3"/><line nr="346" mi="0" ci="1" mb="0" cb="0"/><line nr="347" mi="0" ci="5" mb="2" cb="2"/><line nr="348" mi="0" ci="1" mb="0" cb="0"/><line nr="349" mi="4" ci="0" mb="0" cb="0"/><line nr="353" mi="0" ci="6" mb="0" cb="0"/><line nr="355" mi="0" ci="35" mb="0" cb="0"/><line nr="368" mi="0" ci="4" mb="2" cb="2"/><line nr="369" mi="18" ci="0" mb="0" cb="0"/><line nr="371" mi="0" ci="4" mb="0" cb="0"/><line nr="372" mi="0" ci="4" mb="0" cb="0"/><line nr="374" mi="0" ci="4" mb="0" cb="0"/><line nr="376" mi="0" ci="3" mb="0" cb="0"/><line nr="377" mi="0" ci="3" mb="0" cb="0"/><line nr="378" mi="0" ci="3" mb="0" cb="0"/><line nr="382" mi="0" ci="7" mb="0" cb="2"/><line nr="386" mi="0" ci="10" mb="0" cb="0"/><line nr="387" mi="0" ci="9" mb="0" cb="2"/><line nr="388" mi="0" ci="5" mb="0" cb="0"/><line nr="389" mi="0" ci="5" mb="0" cb="0"/><line nr="392" mi="0" ci="7" mb="0" cb="2"/><line nr="396" mi="0" ci="10" mb="0" cb="0"/><line nr="397" mi="0" ci="9" mb="0" cb="2"/><line nr="398" mi="0" ci="5" mb="0" cb="0"/><line nr="399" mi="0" ci="5" mb="0" cb="0"/><line nr="402" mi="0" ci="5" mb="0" cb="0"/><line nr="403" mi="0" ci="5" mb="0" cb="0"/><line nr="404" mi="0" ci="5" mb="0" cb="0"/><line nr="408" mi="0" ci="6" mb="0" cb="0"/><line nr="409" mi="0" ci="3" mb="0" cb="0"/><line nr="411" mi="0" ci="7" mb="0" cb="2"/><line nr="412" mi="0" ci="7" mb="0" cb="2"/><line nr="413" mi="0" ci="13" mb="0" cb="0"/><line nr="414" mi="0" ci="13" mb="0" cb="0"/><line nr="416" mi="0" ci="19" mb="0" cb="0"/><line nr="417" mi="0" ci="19" mb="0" cb="0"/><line nr="419" mi="0" ci="9" mb="0" cb="0"/><line nr="420" mi="0" ci="9" mb="0" cb="0"/><line nr="421" mi="0" ci="6" mb="0" cb="0"/><line nr="422" mi="0" ci="9" mb="0" cb="0"/><line nr="424" mi="0" ci="3" mb="0" cb="2"/><line nr="425" mi="0" ci="2" mb="0" cb="0"/><line nr="426" mi="0" ci="2" mb="0" cb="0"/><line nr="427" mi="0" ci="2" mb="0" cb="0"/><line nr="432" mi="0" ci="5" mb="0" cb="0"/><line nr="434" mi="0" ci="2" mb="0" cb="0"/><line nr="435" mi="0" ci="2" mb="0" cb="0"/><line nr="436" mi="0" ci="9" mb="0" cb="0"/><line nr="439" mi="0" ci="4" mb="0" cb="0"/><line nr="440" mi="0" ci="4" mb="0" cb="4"/><line nr="445" mi="4" ci="6" mb="2" cb="4"/><line nr="446" mi="0" ci="14" mb="0" cb="6"/><line nr="447" mi="0" ci="2" mb="0" cb="2"/><line nr="448" mi="0" ci="2" mb="0" cb="0"/><line nr="449" mi="0" ci="10" mb="0" cb="2"/><line nr="450" mi="0" ci="2" mb="0" cb="0"/><line nr="451" mi="0" ci="8" mb="0" cb="0"/><line nr="453" mi="0" ci="7" mb="0" cb="0"/><line nr="455" mi="0" ci="19" mb="0" cb="0"/><line nr="456" mi="0" ci="2" mb="0" cb="0"/><line nr="457" mi="0" ci="12" mb="0" cb="4"/><line nr="458" mi="0" ci="2" mb="0" cb="2"/><line nr="459" mi="0" ci="2" mb="0" cb="0"/><line nr="460" mi="0" ci="10" mb="0" cb="2"/><line nr="461" mi="0" ci="2" mb="0" cb="0"/><line nr="462" mi="0" ci="8" mb="0" cb="0"/><line nr="464" mi="0" ci="7" mb="0" cb="0"/><line nr="466" mi="0" ci="19" mb="0" cb="0"/><line nr="467" mi="0" ci="2" mb="0" cb="0"/><line nr="468" mi="0" ci="8" mb="0" cb="4"/><line nr="469" mi="0" ci="24" mb="1" cb="1"/><line nr="470" mi="0" ci="3" mb="0" cb="0"/><line nr="471" mi="0" ci="5" mb="0" cb="0"/><line nr="472" mi="0" ci="3" mb="0" cb="2"/><line nr="473" mi="0" ci="12" mb="0" cb="0"/><line nr="474" mi="0" ci="1" mb="0" cb="0"/><line nr="475" mi="0" ci="2" mb="0" cb="0"/><line nr="477" mi="0" ci="5" mb="1" cb="3"/><line nr="478" mi="0" ci="1" mb="0" cb="0"/><line nr="479" mi="0" ci="5" mb="2" cb="2"/><line nr="480" mi="0" ci="1" mb="0" cb="0"/><line nr="481" mi="4" ci="0" mb="0" cb="0"/><line nr="485" mi="0" ci="43" mb="0" cb="0"/><line nr="498" mi="0" ci="2" mb="0" cb="0"/><line nr="499" mi="0" ci="3" mb="0" cb="0"/><line nr="500" mi="0" ci="3" mb="0" cb="0"/><line nr="501" mi="0" ci="3" mb="0" cb="0"/><line nr="502" mi="0" ci="1" mb="0" cb="0"/><line nr="505" mi="0" ci="10" mb="0" cb="0"/><line nr="509" mi="0" ci="10" mb="0" cb="0"/><line nr="510" mi="0" ci="1" mb="0" cb="0"/><line nr="516" mi="0" ci="2" mb="0" cb="0"/><line nr="517" mi="0" ci="6" mb="0" cb="0"/><line nr="520" mi="0" ci="12" mb="0" cb="0"/><line nr="524" mi="0" ci="2" mb="0" cb="0"/><line nr="525" mi="0" ci="16" mb="0" cb="0"/><line nr="531" mi="0" ci="13" mb="0" cb="0"/><line nr="532" mi="0" ci="13" mb="0" cb="0"/><line nr="533" mi="0" ci="13" mb="0" cb="0"/><line nr="534" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="65" covered="1837"/><counter type="BRANCH" missed="21" covered="197"/><counter type="LINE" missed="6" covered="276"/><counter type="COMPLEXITY" missed="22" covered="100"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="Aligner.java"><line nr="22" mi="2" ci="6" mb="1" cb="1"/><line nr="30" mi="0" ci="3" mb="1" cb="1"/><line nr="31" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="7" mb="0" cb="2"/><line nr="35" mi="0" ci="15" mb="0" cb="2"/><line nr="36" mi="0" ci="8" mb="0" cb="0"/><line nr="37" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="10" mb="0" cb="0"/><line nr="48" mi="0" ci="23" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="1" cb="1"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="1" cb="1"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="2"/><line nr="60" mi="0" ci="7" mb="0" cb="2"/><line nr="61" mi="0" ci="10" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="11" mb="0" cb="0"/><line nr="72" mi="8" ci="0" mb="0" cb="0"/><line nr="73" mi="8" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="11" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="2"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="1" cb="1"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="1" cb="1"/><line nr="111" mi="0" ci="4" mb="1" cb="1"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="8" mb="0" cb="0"/><line nr="118" mi="0" ci="7" mb="0" cb="2"/><line nr="119" mi="0" ci="7" mb="0" cb="0"/><line nr="121" mi="0" ci="7" mb="0" cb="2"/><line nr="122" mi="0" ci="9" mb="0" cb="0"/><line nr="127" mi="0" ci="8" mb="0" cb="2"/><line nr="128" mi="0" ci="8" mb="0" cb="2"/><line nr="129" mi="0" ci="10" mb="0" cb="0"/><line nr="130" mi="0" ci="7" mb="0" cb="0"/><line nr="131" mi="0" ci="13" mb="0" cb="0"/><line nr="132" mi="0" ci="13" mb="0" cb="0"/><line nr="133" mi="0" ci="16" mb="0" cb="0"/><line nr="136" mi="0" ci="7" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="12" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="4"/><line nr="143" mi="0" ci="25" mb="0" cb="4"/><line nr="145" mi="0" ci="7" mb="0" cb="2"/><line nr="146" mi="0" ci="7" mb="0" cb="2"/><line nr="147" mi="0" ci="10" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="23" mb="0" cb="2"/><line nr="152" mi="0" ci="3" mb="0" cb="2"/><line nr="153" mi="0" ci="7" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="23" mb="1" cb="1"/><line nr="157" mi="0" ci="3" mb="1" cb="1"/><line nr="158" mi="0" ci="9" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="164" mi="0" ci="21" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="6" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="10" mb="0" cb="0"/><line nr="185" mi="0" ci="10" mb="0" cb="0"/><line nr="186" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="6" mb="0" cb="0"/><line nr="198" mi="0" ci="7" mb="0" cb="0"/><line nr="212" mi="0" ci="10" mb="2" cb="2"/><line nr="213" mi="5" ci="0" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="6" mb="0" cb="0"/><line nr="222" mi="0" ci="6" mb="0" cb="0"/><line nr="223" mi="0" ci="6" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="5" mb="0" cb="0"/><line nr="230" mi="0" ci="7" mb="0" cb="2"/><line nr="231" mi="0" ci="9" mb="0" cb="0"/><line nr="232" mi="0" ci="9" mb="0" cb="0"/><line nr="233" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="7" mb="0" cb="2"/><line nr="237" mi="0" ci="9" mb="0" cb="0"/><line nr="238" mi="0" ci="9" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="242" mi="0" ci="5" mb="0" cb="0"/><line nr="243" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="246" mi="0" ci="7" mb="0" cb="2"/><line nr="247" mi="0" ci="7" mb="0" cb="2"/><line nr="248" mi="0" ci="10" mb="0" cb="0"/><line nr="249" mi="0" ci="10" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="0" cb="0"/><line nr="252" mi="0" ci="10" mb="0" cb="0"/><line nr="253" mi="0" ci="10" mb="0" cb="0"/><line nr="254" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="0" ci="12" mb="0" cb="0"/><line nr="257" mi="0" ci="6" mb="0" cb="0"/><line nr="258" mi="0" ci="11" mb="0" cb="0"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="260" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="265" mi="0" ci="2" mb="0" cb="0"/><line nr="267" mi="0" ci="7" mb="0" cb="0"/><line nr="268" mi="0" ci="5" mb="0" cb="0"/><line nr="269" mi="0" ci="4" mb="0" cb="0"/><line nr="270" mi="0" ci="4" mb="0" cb="4"/><line nr="271" mi="4" ci="6" mb="2" cb="4"/><line nr="272" mi="0" ci="12" mb="0" cb="8"/><line nr="273" mi="0" ci="2" mb="0" cb="0"/><line nr="274" mi="0" ci="10" mb="0" cb="2"/><line nr="275" mi="0" ci="2" mb="0" cb="0"/><line nr="276" mi="0" ci="8" mb="0" cb="0"/><line nr="278" mi="0" ci="7" mb="0" cb="0"/><line nr="281" mi="0" ci="9" mb="0" cb="0"/><line nr="282" mi="0" ci="2" mb="0" cb="0"/><line nr="283" mi="0" ci="10" mb="1" cb="5"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="10" mb="0" cb="2"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="0" ci="8" mb="0" cb="0"/><line nr="289" mi="0" ci="7" mb="0" cb="0"/><line nr="292" mi="0" ci="11" mb="0" cb="0"/><line nr="293" mi="0" ci="2" mb="0" cb="0"/><line nr="294" mi="0" ci="12" mb="2" cb="2"/><line nr="295" mi="0" ci="6" mb="0" cb="0"/><line nr="296" mi="0" ci="9" mb="1" cb="1"/><line nr="297" mi="0" ci="9" mb="0" cb="0"/><line nr="298" mi="0" ci="11" mb="0" cb="2"/><line nr="299" mi="0" ci="16" mb="0" cb="0"/><line nr="301" mi="0" ci="1" mb="0" cb="0"/><line nr="302" mi="0" ci="2" mb="0" cb="0"/><line nr="304" mi="4" ci="0" mb="0" cb="0"/><line nr="307" mi="0" ci="10" mb="0" cb="0"/><line nr="308" mi="0" ci="14" mb="0" cb="0"/><line nr="333" mi="0" ci="3" mb="0" cb="2"/><line nr="334" mi="0" ci="6" mb="0" cb="0"/><line nr="335" mi="0" ci="3" mb="1" cb="1"/><line nr="336" mi="0" ci="6" mb="0" cb="0"/><line nr="337" mi="5" ci="0" mb="0" cb="0"/><line nr="349" mi="0" ci="10" mb="2" cb="2"/><line nr="350" mi="5" ci="0" mb="0" cb="0"/><line nr="352" mi="0" ci="5" mb="0" cb="0"/><line nr="353" mi="0" ci="5" mb="0" cb="0"/><line nr="354" mi="0" ci="8" mb="0" cb="0"/><line nr="359" mi="0" ci="2" mb="0" cb="0"/><line nr="360" mi="0" ci="2" mb="0" cb="0"/><line nr="361" mi="0" ci="2" mb="0" cb="0"/><line nr="363" mi="0" ci="8" mb="0" cb="2"/><line nr="364" mi="0" ci="8" mb="0" cb="2"/><line nr="365" mi="0" ci="10" mb="0" cb="0"/><line nr="366" mi="0" ci="7" mb="0" cb="0"/><line nr="367" mi="0" ci="13" mb="0" cb="0"/><line nr="368" mi="0" ci="13" mb="0" cb="0"/><line nr="369" mi="0" ci="18" mb="0" cb="0"/><line nr="371" mi="0" ci="25" mb="0" cb="4"/><line nr="372" mi="0" ci="4" mb="0" cb="0"/><line nr="373" mi="0" ci="4" mb="0" cb="0"/><line nr="374" mi="0" ci="12" mb="0" cb="0"/><line nr="380" mi="0" ci="3" mb="1" cb="1"/><line nr="381" mi="2" ci="0" mb="0" cb="0"/><line nr="383" mi="0" ci="7" mb="0" cb="0"/><line nr="385" mi="0" ci="4" mb="0" cb="0"/><line nr="386" mi="0" ci="4" mb="0" cb="0"/><line nr="388" mi="2" ci="2" mb="3" cb="1"/><line nr="389" mi="0" ci="25" mb="2" cb="2"/><line nr="391" mi="0" ci="7" mb="0" cb="2"/><line nr="392" mi="0" ci="7" mb="0" cb="2"/><line nr="393" mi="0" ci="10" mb="0" cb="0"/><line nr="395" mi="0" ci="8" mb="0" cb="2"/><line nr="396" mi="0" ci="1" mb="0" cb="0"/><line nr="398" mi="0" ci="1" mb="0" cb="0"/><line nr="399" mi="0" ci="2" mb="0" cb="0"/><line nr="400" mi="0" ci="23" mb="1" cb="1"/><line nr="402" mi="0" ci="3" mb="0" cb="2"/><line nr="403" mi="0" ci="7" mb="0" cb="0"/><line nr="405" mi="0" ci="10" mb="1" cb="1"/><line nr="406" mi="1" ci="0" mb="0" cb="0"/><line nr="408" mi="0" ci="2" mb="0" cb="0"/><line nr="409" mi="0" ci="23" mb="1" cb="1"/><line nr="411" mi="0" ci="3" mb="1" cb="1"/><line nr="412" mi="0" ci="9" mb="0" cb="0"/><line nr="414" mi="0" ci="10" mb="1" cb="1"/><line nr="415" mi="1" ci="0" mb="0" cb="0"/><line nr="417" mi="0" ci="2" mb="0" cb="0"/><line nr="419" mi="4" ci="0" mb="0" cb="0"/><line nr="422" mi="0" ci="2" mb="0" cb="0"/><line nr="423" mi="0" ci="2" mb="0" cb="0"/><line nr="425" mi="0" ci="19" mb="0" cb="0"/><line nr="439" mi="0" ci="10" mb="2" cb="2"/><line nr="440" mi="5" ci="0" mb="0" cb="0"/><line nr="443" mi="0" ci="3" mb="0" cb="0"/><line nr="444" mi="0" ci="3" mb="0" cb="0"/><line nr="445" mi="0" ci="4" mb="0" cb="0"/><line nr="446" mi="0" ci="4" mb="0" cb="0"/><line nr="448" mi="0" ci="6" mb="0" cb="0"/><line nr="449" mi="0" ci="6" mb="0" cb="0"/><line nr="450" mi="0" ci="6" mb="0" cb="0"/><line nr="453" mi="0" ci="3" mb="0" cb="0"/><line nr="454" mi="0" ci="5" mb="0" cb="0"/><line nr="457" mi="0" ci="7" mb="0" cb="2"/><line nr="458" mi="0" ci="5" mb="0" cb="0"/><line nr="460" mi="0" ci="7" mb="0" cb="2"/><line nr="461" mi="0" ci="5" mb="0" cb="0"/><line nr="463" mi="0" ci="2" mb="0" cb="0"/><line nr="464" mi="0" ci="2" mb="0" cb="0"/><line nr="465" mi="0" ci="2" mb="0" cb="0"/><line nr="467" mi="0" ci="7" mb="0" cb="2"/><line nr="468" mi="0" ci="7" mb="0" cb="2"/><line nr="469" mi="0" ci="10" mb="0" cb="0"/><line nr="470" mi="0" ci="10" mb="0" cb="0"/><line nr="471" mi="0" ci="3" mb="0" cb="0"/><line nr="473" mi="0" ci="10" mb="0" cb="0"/><line nr="474" mi="0" ci="10" mb="0" cb="0"/><line nr="475" mi="0" ci="3" mb="0" cb="0"/><line nr="477" mi="0" ci="13" mb="0" cb="0"/><line nr="478" mi="0" ci="6" mb="0" cb="0"/><line nr="479" mi="0" ci="11" mb="0" cb="0"/><line nr="480" mi="0" ci="4" mb="0" cb="0"/><line nr="481" mi="0" ci="1" mb="0" cb="0"/><line nr="483" mi="0" ci="11" mb="0" cb="4"/><line nr="484" mi="4" ci="7" mb="2" cb="2"/><line nr="485" mi="0" ci="2" mb="0" cb="0"/><line nr="486" mi="0" ci="2" mb="0" cb="0"/><line nr="487" mi="0" ci="5" mb="0" cb="0"/><line nr="492" mi="0" ci="3" mb="0" cb="2"/><line nr="493" mi="0" ci="2" mb="0" cb="0"/><line nr="495" mi="0" ci="2" mb="0" cb="0"/><line nr="496" mi="0" ci="2" mb="0" cb="0"/><line nr="498" mi="0" ci="7" mb="0" cb="0"/><line nr="499" mi="0" ci="5" mb="0" cb="0"/><line nr="500" mi="0" ci="4" mb="0" cb="0"/><line nr="501" mi="2" ci="2" mb="3" cb="1"/><line nr="502" mi="4" ci="6" mb="2" cb="4"/><line nr="503" mi="0" ci="12" mb="1" cb="7"/><line nr="504" mi="0" ci="2" mb="0" cb="0"/><line nr="505" mi="0" ci="10" mb="0" cb="2"/><line nr="506" mi="0" ci="2" mb="0" cb="0"/><line nr="507" mi="0" ci="8" mb="0" cb="0"/><line nr="509" mi="0" ci="7" mb="0" cb="0"/><line nr="511" mi="0" ci="2" mb="1" cb="1"/><line nr="512" mi="1" ci="0" mb="0" cb="0"/><line nr="514" mi="0" ci="9" mb="0" cb="0"/><line nr="515" mi="0" ci="2" mb="0" cb="0"/><line nr="516" mi="0" ci="10" mb="1" cb="5"/><line nr="517" mi="0" ci="2" mb="0" cb="0"/><line nr="518" mi="0" ci="10" mb="0" cb="2"/><line nr="519" mi="0" ci="2" mb="0" cb="0"/><line nr="520" mi="0" ci="8" mb="0" cb="0"/><line nr="522" mi="0" ci="7" mb="0" cb="0"/><line nr="524" mi="0" ci="2" mb="1" cb="1"/><line nr="525" mi="1" ci="0" mb="0" cb="0"/><line nr="527" mi="0" ci="11" mb="0" cb="0"/><line nr="528" mi="0" ci="2" mb="0" cb="0"/><line nr="529" mi="0" ci="12" mb="2" cb="2"/><line nr="530" mi="0" ci="6" mb="0" cb="0"/><line nr="531" mi="0" ci="9" mb="1" cb="1"/><line nr="532" mi="0" ci="9" mb="0" cb="0"/><line nr="533" mi="0" ci="11" mb="0" cb="2"/><line nr="534" mi="0" ci="16" mb="0" cb="0"/><line nr="536" mi="0" ci="2" mb="0" cb="2"/><line nr="537" mi="0" ci="1" mb="0" cb="0"/><line nr="539" mi="0" ci="1" mb="0" cb="0"/><line nr="540" mi="0" ci="2" mb="0" cb="0"/><line nr="542" mi="4" ci="0" mb="0" cb="0"/><line nr="546" mi="0" ci="4" mb="0" cb="0"/><line nr="547" mi="0" ci="4" mb="0" cb="0"/><line nr="549" mi="0" ci="19" mb="0" cb="0"/><counter type="INSTRUCTION" missed="124" covered="1787"/><counter type="BRANCH" missed="47" covered="161"/><counter type="LINE" missed="25" covered="263"/><counter type="COMPLEXITY" missed="46" covered="75"/><counter type="METHOD" missed="1" covered="16"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AlignmentCache.java"><line nr="30" mi="0" ci="3" mb="1" cb="1"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="1" cb="1"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="1" cb="1"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="2" cb="0"/><line nr="85" mi="4" ci="0" mb="2" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="10" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="2" cb="0"/><line nr="92" mi="10" ci="0" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="8" ci="0" mb="2" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="93" covered="24"/><counter type="BRANCH" missed="11" covered="3"/><counter type="LINE" missed="20" covered="8"/><counter type="COMPLEXITY" missed="12" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="BandedAffineAligner.java"><line nr="11" mi="2" ci="6" mb="1" cb="1"/><line nr="38" mi="0" ci="4" mb="0" cb="4"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="2"/><line nr="56" mi="0" ci="12" mb="0" cb="0"/><line nr="57" mi="0" ci="12" mb="0" cb="2"/><line nr="58" mi="0" ci="9" mb="0" cb="0"/><line nr="59" mi="0" ci="9" mb="0" cb="0"/><line nr="61" mi="0" ci="19" mb="0" cb="0"/><line nr="62" mi="0" ci="19" mb="0" cb="0"/><line nr="64" mi="0" ci="9" mb="0" cb="0"/><line nr="65" mi="0" ci="9" mb="0" cb="0"/><line nr="66" mi="0" ci="13" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="9" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="4"/><line nr="78" mi="4" ci="6" mb="2" cb="4"/><line nr="79" mi="0" ci="16" mb="0" cb="8"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="10" mb="0" cb="2"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="8" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="11" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="12" mb="1" cb="3"/><line nr="90" mi="0" ci="2" mb="0" cb="2"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="10" mb="0" cb="2"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="8" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="98" mi="0" ci="13" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="8" mb="2" cb="2"/><line nr="101" mi="0" ci="19" mb="1" cb="1"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="2"/><line nr="104" mi="0" ci="8" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="1" cb="3"/><line nr="121" mi="0" ci="11" mb="0" cb="0"/><line nr="123" mi="0" ci="6" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="7" mb="0" cb="2"/><line nr="144" mi="0" ci="12" mb="0" cb="0"/><line nr="145" mi="0" ci="12" mb="0" cb="2"/><line nr="146" mi="0" ci="9" mb="0" cb="0"/><line nr="147" mi="0" ci="9" mb="0" cb="0"/><line nr="149" mi="0" ci="19" mb="0" cb="0"/><line nr="150" mi="0" ci="19" mb="0" cb="0"/><line nr="152" mi="0" ci="9" mb="0" cb="0"/><line nr="153" mi="0" ci="9" mb="0" cb="0"/><line nr="154" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="9" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="2"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="9" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="4"/><line nr="173" mi="4" ci="6" mb="2" cb="4"/><line nr="174" mi="0" ci="14" mb="0" cb="6"/><line nr="175" mi="0" ci="2" mb="0" cb="2"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="10" mb="0" cb="2"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="8" mb="0" cb="0"/><line nr="181" mi="0" ci="7" mb="0" cb="0"/><line nr="183" mi="0" ci="11" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="12" mb="1" cb="3"/><line nr="186" mi="0" ci="2" mb="0" cb="2"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="10" mb="0" cb="2"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="8" mb="0" cb="0"/><line nr="192" mi="0" ci="7" mb="0" cb="0"/><line nr="194" mi="0" ci="13" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="8" mb="2" cb="2"/><line nr="197" mi="0" ci="19" mb="1" cb="1"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="2"/><line nr="200" mi="0" ci="8" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="207" mi="0" ci="6" mb="0" cb="0"/><line nr="209" mi="0" ci="11" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="1" cb="3"/><line nr="218" mi="0" ci="11" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="6" mb="0" cb="0"/><line nr="224" mi="0" ci="4" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="6" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="243" mi="0" ci="6" mb="0" cb="0"/><line nr="244" mi="0" ci="3" mb="0" cb="0"/><line nr="246" mi="0" ci="7" mb="0" cb="2"/><line nr="247" mi="0" ci="12" mb="0" cb="0"/><line nr="248" mi="0" ci="12" mb="0" cb="2"/><line nr="249" mi="0" ci="13" mb="0" cb="0"/><line nr="250" mi="0" ci="13" mb="0" cb="0"/><line nr="252" mi="0" ci="19" mb="0" cb="0"/><line nr="253" mi="0" ci="19" mb="0" cb="0"/><line nr="255" mi="0" ci="9" mb="0" cb="0"/><line nr="256" mi="0" ci="9" mb="0" cb="0"/><line nr="257" mi="0" ci="6" mb="0" cb="0"/><line nr="258" mi="0" ci="9" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="2"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="0" ci="2" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="9" mb="0" cb="0"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="4" mb="0" cb="4"/><line nr="275" mi="4" ci="6" mb="2" cb="4"/><line nr="276" mi="0" ci="14" mb="0" cb="6"/><line nr="277" mi="0" ci="2" mb="0" cb="2"/><line nr="278" mi="0" ci="2" mb="0" cb="0"/><line nr="279" mi="0" ci="10" mb="0" cb="2"/><line nr="280" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="0" ci="8" mb="0" cb="0"/><line nr="283" mi="0" ci="7" mb="0" cb="0"/><line nr="285" mi="0" ci="19" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="0" ci="12" mb="1" cb="3"/><line nr="288" mi="0" ci="2" mb="0" cb="2"/><line nr="289" mi="0" ci="2" mb="0" cb="0"/><line nr="290" mi="0" ci="10" mb="0" cb="2"/><line nr="291" mi="0" ci="2" mb="0" cb="0"/><line nr="292" mi="0" ci="8" mb="0" cb="0"/><line nr="294" mi="0" ci="7" mb="0" cb="0"/><line nr="296" mi="0" ci="19" mb="0" cb="0"/><line nr="297" mi="0" ci="2" mb="0" cb="0"/><line nr="298" mi="0" ci="8" mb="2" cb="2"/><line nr="299" mi="0" ci="24" mb="1" cb="1"/><line nr="300" mi="0" ci="3" mb="0" cb="0"/><line nr="301" mi="0" ci="5" mb="0" cb="0"/><line nr="302" mi="0" ci="3" mb="0" cb="2"/><line nr="303" mi="0" ci="12" mb="0" cb="0"/><line nr="304" mi="0" ci="1" mb="0" cb="0"/><line nr="305" mi="0" ci="2" mb="0" cb="0"/><line nr="307" mi="4" ci="0" mb="0" cb="0"/><line nr="310" mi="0" ci="19" mb="0" cb="0"/><line nr="319" mi="0" ci="4" mb="0" cb="0"/><line nr="320" mi="0" ci="4" mb="0" cb="0"/><line nr="322" mi="0" ci="6" mb="0" cb="0"/><line nr="324" mi="0" ci="3" mb="0" cb="0"/><line nr="325" mi="0" ci="3" mb="0" cb="0"/><line nr="326" mi="0" ci="3" mb="0" cb="0"/><line nr="331" mi="0" ci="3" mb="0" cb="0"/><line nr="333" mi="0" ci="7" mb="0" cb="2"/><line nr="334" mi="0" ci="12" mb="0" cb="0"/><line nr="335" mi="0" ci="12" mb="0" cb="2"/><line nr="336" mi="0" ci="9" mb="0" cb="0"/><line nr="337" mi="0" ci="9" mb="0" cb="0"/><line nr="339" mi="0" ci="19" mb="0" cb="0"/><line nr="340" mi="0" ci="19" mb="0" cb="0"/><line nr="342" mi="0" ci="9" mb="0" cb="0"/><line nr="343" mi="0" ci="9" mb="0" cb="0"/><line nr="344" mi="0" ci="13" mb="0" cb="0"/><line nr="348" mi="0" ci="6" mb="0" cb="0"/><line nr="350" mi="0" ci="2" mb="0" cb="0"/><line nr="351" mi="0" ci="9" mb="0" cb="2"/><line nr="352" mi="0" ci="6" mb="0" cb="2"/><line nr="353" mi="0" ci="5" mb="0" cb="0"/><line nr="354" mi="0" ci="4" mb="0" cb="0"/><line nr="355" mi="0" ci="4" mb="0" cb="0"/><line nr="358" mi="0" ci="2" mb="0" cb="0"/><line nr="359" mi="0" ci="9" mb="0" cb="2"/><line nr="360" mi="0" ci="6" mb="0" cb="2"/><line nr="361" mi="0" ci="5" mb="0" cb="0"/><line nr="362" mi="0" ci="4" mb="0" cb="0"/><line nr="363" mi="0" ci="4" mb="0" cb="0"/><line nr="366" mi="0" ci="3" mb="0" cb="0"/><line nr="367" mi="0" ci="2" mb="0" cb="0"/><line nr="368" mi="0" ci="2" mb="0" cb="0"/><line nr="369" mi="0" ci="9" mb="0" cb="0"/><line nr="372" mi="0" ci="4" mb="0" cb="0"/><line nr="373" mi="0" ci="4" mb="0" cb="4"/><line nr="374" mi="4" ci="6" mb="2" cb="4"/><line nr="375" mi="0" ci="14" mb="0" cb="6"/><line nr="376" mi="0" ci="2" mb="0" cb="2"/><line nr="377" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="0" ci="10" mb="0" cb="2"/><line nr="379" mi="0" ci="2" mb="0" cb="0"/><line nr="380" mi="0" ci="8" mb="0" cb="0"/><line nr="382" mi="0" ci="7" mb="0" cb="0"/><line nr="384" mi="0" ci="11" mb="0" cb="0"/><line nr="385" mi="0" ci="2" mb="0" cb="0"/><line nr="386" mi="0" ci="12" mb="1" cb="3"/><line nr="387" mi="0" ci="2" mb="0" cb="2"/><line nr="388" mi="0" ci="2" mb="0" cb="0"/><line nr="389" mi="0" ci="10" mb="0" cb="2"/><line nr="390" mi="0" ci="2" mb="0" cb="0"/><line nr="391" mi="0" ci="8" mb="0" cb="0"/><line nr="393" mi="0" ci="7" mb="0" cb="0"/><line nr="395" mi="0" ci="13" mb="0" cb="0"/><line nr="396" mi="0" ci="2" mb="0" cb="0"/><line nr="397" mi="0" ci="8" mb="2" cb="2"/><line nr="398" mi="0" ci="19" mb="1" cb="1"/><line nr="399" mi="0" ci="5" mb="0" cb="0"/><line nr="400" mi="0" ci="3" mb="0" cb="2"/><line nr="401" mi="0" ci="8" mb="0" cb="0"/><line nr="402" mi="0" ci="1" mb="0" cb="0"/><line nr="403" mi="0" ci="2" mb="0" cb="0"/><line nr="405" mi="4" ci="0" mb="0" cb="0"/><line nr="409" mi="0" ci="6" mb="0" cb="0"/><line nr="411" mi="0" ci="11" mb="0" cb="0"/><line nr="420" mi="0" ci="4" mb="0" cb="0"/><line nr="421" mi="0" ci="4" mb="0" cb="0"/><line nr="423" mi="0" ci="6" mb="0" cb="0"/><line nr="425" mi="0" ci="3" mb="0" cb="0"/><line nr="426" mi="0" ci="3" mb="0" cb="0"/><line nr="427" mi="0" ci="3" mb="0" cb="0"/><line nr="432" mi="0" ci="3" mb="0" cb="0"/><line nr="434" mi="0" ci="7" mb="0" cb="2"/><line nr="435" mi="0" ci="12" mb="0" cb="0"/><line nr="436" mi="0" ci="12" mb="0" cb="2"/><line nr="437" mi="0" ci="13" mb="0" cb="0"/><line nr="438" mi="0" ci="13" mb="0" cb="0"/><line nr="440" mi="0" ci="19" mb="0" cb="0"/><line nr="441" mi="0" ci="19" mb="0" cb="0"/><line nr="443" mi="0" ci="9" mb="0" cb="0"/><line nr="444" mi="0" ci="9" mb="0" cb="0"/><line nr="445" mi="0" ci="13" mb="0" cb="0"/><line nr="449" mi="0" ci="6" mb="0" cb="0"/><line nr="451" mi="0" ci="2" mb="0" cb="0"/><line nr="452" mi="0" ci="9" mb="0" cb="2"/><line nr="453" mi="0" ci="6" mb="0" cb="2"/><line nr="454" mi="0" ci="5" mb="0" cb="0"/><line nr="455" mi="0" ci="4" mb="0" cb="0"/><line nr="456" mi="0" ci="4" mb="0" cb="0"/><line nr="459" mi="0" ci="2" mb="0" cb="0"/><line nr="460" mi="0" ci="9" mb="0" cb="2"/><line nr="461" mi="0" ci="6" mb="0" cb="2"/><line nr="462" mi="0" ci="5" mb="0" cb="0"/><line nr="463" mi="0" ci="4" mb="0" cb="0"/><line nr="464" mi="0" ci="4" mb="0" cb="0"/><line nr="468" mi="0" ci="2" mb="0" cb="0"/><line nr="469" mi="0" ci="2" mb="0" cb="0"/><line nr="470" mi="0" ci="9" mb="0" cb="0"/><line nr="473" mi="0" ci="4" mb="0" cb="0"/><line nr="474" mi="0" ci="4" mb="0" cb="4"/><line nr="475" mi="4" ci="6" mb="2" cb="4"/><line nr="476" mi="0" ci="14" mb="0" cb="6"/><line nr="477" mi="0" ci="2" mb="0" cb="2"/><line nr="478" mi="0" ci="2" mb="0" cb="0"/><line nr="479" mi="0" ci="10" mb="0" cb="2"/><line nr="480" mi="0" ci="2" mb="0" cb="0"/><line nr="481" mi="0" ci="8" mb="0" cb="0"/><line nr="483" mi="0" ci="7" mb="0" cb="0"/><line nr="485" mi="0" ci="19" mb="0" cb="0"/><line nr="486" mi="0" ci="2" mb="0" cb="0"/><line nr="487" mi="0" ci="12" mb="1" cb="3"/><line nr="488" mi="0" ci="2" mb="0" cb="2"/><line nr="489" mi="0" ci="2" mb="0" cb="0"/><line nr="490" mi="0" ci="10" mb="0" cb="2"/><line nr="491" mi="0" ci="2" mb="0" cb="0"/><line nr="492" mi="0" ci="8" mb="0" cb="0"/><line nr="494" mi="0" ci="7" mb="0" cb="0"/><line nr="496" mi="0" ci="19" mb="0" cb="0"/><line nr="497" mi="0" ci="2" mb="0" cb="0"/><line nr="498" mi="0" ci="8" mb="2" cb="2"/><line nr="499" mi="0" ci="24" mb="1" cb="1"/><line nr="500" mi="0" ci="3" mb="0" cb="0"/><line nr="501" mi="0" ci="5" mb="0" cb="0"/><line nr="502" mi="0" ci="3" mb="0" cb="2"/><line nr="503" mi="0" ci="12" mb="0" cb="0"/><line nr="504" mi="0" ci="1" mb="0" cb="0"/><line nr="505" mi="0" ci="2" mb="0" cb="0"/><line nr="507" mi="4" ci="0" mb="0" cb="0"/><line nr="510" mi="0" ci="19" mb="0" cb="0"/><line nr="518" mi="0" ci="5" mb="0" cb="0"/><line nr="519" mi="0" ci="14" mb="0" cb="0"/><line nr="523" mi="0" ci="23" mb="0" cb="0"/><line nr="531" mi="0" ci="12" mb="0" cb="0"/><line nr="538" mi="0" ci="5" mb="0" cb="0"/><line nr="539" mi="0" ci="14" mb="0" cb="0"/><line nr="541" mi="0" ci="26" mb="0" cb="0"/><line nr="549" mi="12" ci="0" mb="0" cb="0"/><line nr="556" mi="0" ci="5" mb="0" cb="0"/><line nr="557" mi="0" ci="14" mb="0" cb="0"/><line nr="559" mi="0" ci="26" mb="0" cb="0"/><line nr="567" mi="0" ci="12" mb="0" cb="0"/><line nr="575" mi="0" ci="5" mb="0" cb="0"/><line nr="576" mi="0" ci="16" mb="0" cb="0"/><line nr="580" mi="0" ci="26" mb="0" cb="0"/><line nr="590" mi="0" ci="5" mb="0" cb="0"/><line nr="591" mi="0" ci="16" mb="0" cb="0"/><line nr="595" mi="0" ci="26" mb="0" cb="0"/><line nr="604" mi="0" ci="2" mb="0" cb="0"/><line nr="605" mi="0" ci="5" mb="0" cb="0"/><line nr="606" mi="0" ci="5" mb="0" cb="0"/><line nr="607" mi="0" ci="5" mb="0" cb="0"/><line nr="608" mi="0" ci="1" mb="0" cb="0"/><line nr="612" mi="0" ci="12" mb="0" cb="0"/><line nr="613" mi="0" ci="12" mb="0" cb="0"/><line nr="614" mi="0" ci="12" mb="0" cb="0"/><line nr="616" mi="0" ci="10" mb="0" cb="2"/><line nr="617" mi="0" ci="10" mb="0" cb="0"/><line nr="618" mi="0" ci="5" mb="0" cb="0"/><line nr="619" mi="0" ci="5" mb="0" cb="0"/><line nr="620" mi="0" ci="5" mb="0" cb="0"/><line nr="623" mi="0" ci="7" mb="0" cb="2"/><line nr="624" mi="0" ci="10" mb="0" cb="0"/><line nr="625" mi="0" ci="5" mb="0" cb="0"/><line nr="626" mi="0" ci="5" mb="0" cb="0"/><line nr="627" mi="0" ci="5" mb="0" cb="0"/><line nr="630" mi="0" ci="5" mb="0" cb="0"/><line nr="631" mi="0" ci="5" mb="0" cb="0"/><line nr="632" mi="0" ci="5" mb="0" cb="0"/><line nr="633" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="54" covered="2468"/><counter type="BRANCH" missed="33" covered="205"/><counter type="LINE" missed="6" covered="346"/><counter type="COMPLEXITY" missed="34" covered="101"/><counter type="METHOD" missed="1" covered="15"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="BandedSemiLocalResult.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MultiAlignmentHelper.java"><line nr="34" mi="2" ci="5" mb="1" cb="1"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="15" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="11" ci="0" mb="0" cb="0"/><line nr="89" mi="9" ci="0" mb="2" cb="0"/><line nr="90" mi="14" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="2"/><line nr="106" mi="0" ci="17" mb="0" cb="2"/><line nr="107" mi="0" ci="8" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="1" cb="1"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="1" cb="1"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="9" ci="0" mb="2" cb="0"/><line nr="147" mi="6" ci="0" mb="2" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="7" ci="0" mb="0" cb="0"/><line nr="157" mi="6" ci="0" mb="0" cb="0"/><line nr="161" mi="8" ci="0" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="2" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="3" ci="0" mb="2" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="4" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="8" ci="0" mb="0" cb="0"/><line nr="185" mi="0" ci="6" mb="0" cb="0"/><line nr="189" mi="0" ci="6" mb="0" cb="0"/><line nr="193" mi="6" ci="0" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="9" mb="0" cb="2"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="7" mb="0" cb="2"/><line nr="206" mi="0" ci="8" mb="0" cb="2"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="1" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="2"/><line nr="212" mi="0" ci="1" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="9" mb="0" cb="2"/><line nr="223" mi="0" ci="4" mb="0" cb="2"/><line nr="224" mi="0" ci="1" mb="0" cb="0"/><line nr="225" mi="0" ci="10" mb="0" cb="0"/><line nr="226" mi="0" ci="10" mb="0" cb="0"/><line nr="227" mi="0" ci="10" mb="0" cb="0"/><line nr="228" mi="0" ci="7" mb="0" cb="0"/><line nr="229" mi="0" ci="7" mb="0" cb="0"/><line nr="230" mi="0" ci="1" mb="0" cb="0"/><line nr="233" mi="0" ci="12" mb="0" cb="0"/><line nr="234" mi="0" ci="11" mb="0" cb="0"/><line nr="237" mi="0" ci="9" mb="0" cb="2"/><line nr="238" mi="0" ci="11" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="10" mb="0" cb="0"/><line nr="249" mi="0" ci="8" mb="0" cb="2"/><line nr="250" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="0" ci="7" mb="0" cb="0"/><line nr="252" mi="0" ci="9" mb="0" cb="0"/><line nr="254" mi="0" ci="2" mb="1" cb="1"/><line nr="255" mi="2" ci="0" mb="0" cb="0"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="260" mi="0" ci="16" mb="0" cb="2"/><line nr="261" mi="0" ci="2" mb="0" cb="2"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="263" mi="2" ci="14" mb="1" cb="1"/><line nr="264" mi="0" ci="3" mb="1" cb="1"/><line nr="265" mi="0" ci="4" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><line nr="270" mi="0" ci="9" mb="0" cb="2"/><line nr="271" mi="0" ci="4" mb="0" cb="2"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><line nr="273" mi="2" ci="7" mb="1" cb="1"/><line nr="274" mi="0" ci="5" mb="1" cb="1"/><line nr="275" mi="0" ci="6" mb="0" cb="0"/><line nr="276" mi="2" ci="0" mb="0" cb="0"/><line nr="280" mi="0" ci="4" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="16" mb="0" cb="2"/><line nr="286" mi="0" ci="5" mb="0" cb="0"/><line nr="287" mi="0" ci="4" mb="0" cb="0"/><line nr="288" mi="0" ci="8" mb="0" cb="2"/><line nr="289" mi="0" ci="19" mb="0" cb="0"/><line nr="290" mi="0" ci="2" mb="0" cb="0"/><line nr="294" mi="0" ci="4" mb="0" cb="0"/><line nr="298" mi="0" ci="2" mb="0" cb="0"/><line nr="299" mi="0" ci="16" mb="0" cb="2"/><line nr="300" mi="0" ci="5" mb="0" cb="0"/><line nr="301" mi="0" ci="4" mb="0" cb="0"/><line nr="302" mi="0" ci="8" mb="0" cb="2"/><line nr="303" mi="0" ci="19" mb="0" cb="0"/><line nr="304" mi="0" ci="2" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="0"/><line nr="315" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="3" mb="0" cb="0"/><line nr="317" mi="0" ci="3" mb="0" cb="0"/><line nr="318" mi="0" ci="3" mb="0" cb="0"/><line nr="319" mi="0" ci="3" mb="0" cb="0"/><line nr="320" mi="0" ci="1" mb="0" cb="0"/><line nr="325" mi="0" ci="4" mb="0" cb="0"/><line nr="326" mi="0" ci="4" mb="0" cb="0"/><line nr="328" mi="0" ci="7" mb="0" cb="0"/><line nr="330" mi="0" ci="7" mb="0" cb="2"/><line nr="331" mi="0" ci="4" mb="0" cb="0"/><line nr="333" mi="0" ci="12" mb="0" cb="0"/><line nr="334" mi="0" ci="7" mb="0" cb="2"/><line nr="335" mi="0" ci="17" mb="0" cb="0"/><line nr="337" mi="0" ci="5" mb="0" cb="0"/><line nr="339" mi="0" ci="7" mb="0" cb="2"/><line nr="340" mi="0" ci="18" mb="0" cb="0"/><line nr="342" mi="2" ci="19" mb="1" cb="1"/><line nr="345" mi="0" ci="7" mb="0" cb="2"/><line nr="346" mi="0" ci="33" mb="0" cb="2"/><line nr="349" mi="0" ci="3" mb="0" cb="0"/><line nr="351" mi="0" ci="7" mb="0" cb="2"/><line nr="352" mi="0" ci="18" mb="0" cb="0"/><line nr="353" mi="0" ci="20" mb="0" cb="0"/><line nr="354" mi="0" ci="7" mb="0" cb="2"/><line nr="355" mi="0" ci="27" mb="0" cb="0"/><line nr="357" mi="0" ci="3" mb="0" cb="0"/><line nr="359" mi="0" ci="15" mb="0" cb="0"/><line nr="360" mi="0" ci="7" mb="0" cb="2"/><line nr="361" mi="0" ci="5" mb="1" cb="1"/><line nr="362" mi="21" ci="0" mb="0" cb="0"/><line nr="364" mi="0" ci="4" mb="0" cb="0"/><line nr="365" mi="0" ci="8" mb="0" cb="2"/><line nr="366" mi="0" ci="2" mb="0" cb="2"/><line nr="367" mi="0" ci="4" mb="0" cb="0"/><line nr="368" mi="0" ci="6" mb="0" cb="0"/><line nr="370" mi="0" ci="3" mb="0" cb="0"/><line nr="373" mi="0" ci="9" mb="0" cb="0"/><line nr="374" mi="0" ci="10" mb="0" cb="0"/><line nr="378" mi="0" ci="5" mb="0" cb="0"/><line nr="379" mi="0" ci="6" mb="0" cb="0"/><line nr="384" mi="0" ci="16" mb="0" cb="2"/><line nr="385" mi="0" ci="5" mb="1" cb="1"/><line nr="386" mi="4" ci="0" mb="0" cb="0"/><line nr="388" mi="0" ci="3" mb="0" cb="0"/><line nr="389" mi="0" ci="3" mb="0" cb="0"/><line nr="391" mi="0" ci="3" mb="0" cb="0"/><line nr="392" mi="0" ci="3" mb="0" cb="0"/><line nr="393" mi="0" ci="3" mb="0" cb="0"/><line nr="394" mi="0" ci="3" mb="0" cb="0"/><line nr="395" mi="0" ci="3" mb="0" cb="0"/><line nr="397" mi="0" ci="4" mb="0" cb="0"/><line nr="398" mi="0" ci="3" mb="0" cb="0"/><line nr="400" mi="0" ci="4" mb="0" cb="0"/><line nr="401" mi="0" ci="3" mb="0" cb="0"/><line nr="403" mi="0" ci="7" mb="0" cb="2"/><line nr="404" mi="0" ci="8" mb="0" cb="0"/><line nr="405" mi="0" ci="6" mb="0" cb="0"/><line nr="406" mi="0" ci="7" mb="0" cb="0"/><line nr="407" mi="0" ci="6" mb="0" cb="0"/><line nr="408" mi="0" ci="6" mb="0" cb="0"/><line nr="411" mi="0" ci="3" mb="0" cb="0"/><line nr="413" mi="0" ci="5" mb="0" cb="0"/><line nr="416" mi="0" ci="7" mb="0" cb="2"/><line nr="417" mi="0" ci="7" mb="0" cb="2"/><line nr="418" mi="0" ci="14" mb="0" cb="2"/><line nr="419" mi="0" ci="2" mb="0" cb="2"/><line nr="420" mi="0" ci="1" mb="0" cb="0"/><line nr="422" mi="0" ci="2" mb="0" cb="0"/><line nr="425" mi="0" ci="7" mb="0" cb="2"/><line nr="426" mi="0" ci="10" mb="0" cb="2"/><line nr="427" mi="0" ci="10" mb="0" cb="2"/><line nr="428" mi="0" ci="2" mb="0" cb="2"/><line nr="429" mi="0" ci="7" mb="0" cb="0"/><line nr="430" mi="0" ci="5" mb="0" cb="0"/><line nr="431" mi="0" ci="7" mb="0" cb="0"/><line nr="432" mi="0" ci="3" mb="0" cb="0"/><line nr="436" mi="0" ci="2" mb="0" cb="0"/><line nr="437" mi="0" ci="7" mb="0" cb="2"/><line nr="438" mi="0" ci="14" mb="0" cb="2"/><line nr="439" mi="0" ci="9" mb="0" cb="2"/><line nr="440" mi="0" ci="3" mb="0" cb="2"/><line nr="441" mi="0" ci="2" mb="0" cb="0"/><line nr="442" mi="0" ci="12" mb="0" cb="0"/><line nr="443" mi="0" ci="12" mb="0" cb="0"/><line nr="444" mi="0" ci="7" mb="0" cb="0"/><line nr="445" mi="0" ci="7" mb="0" cb="0"/><line nr="446" mi="4" ci="6" mb="2" cb="2"/><line nr="447" mi="0" ci="3" mb="0" cb="0"/><line nr="450" mi="0" ci="2" mb="0" cb="2"/><line nr="451" mi="0" ci="4" mb="0" cb="0"/><line nr="452" mi="0" ci="5" mb="0" cb="0"/><line nr="454" mi="0" ci="8" mb="0" cb="2"/><line nr="455" mi="0" ci="4" mb="0" cb="2"/><line nr="456" mi="0" ci="6" mb="0" cb="0"/><line nr="457" mi="0" ci="9" mb="0" cb="0"/><line nr="458" mi="0" ci="7" mb="0" cb="0"/><line nr="462" mi="0" ci="4" mb="0" cb="0"/><line nr="463" mi="0" ci="4" mb="0" cb="0"/><line nr="464" mi="0" ci="3" mb="0" cb="0"/><line nr="466" mi="0" ci="7" mb="0" cb="2"/><line nr="467" mi="0" ci="4" mb="0" cb="2"/><line nr="468" mi="0" ci="1" mb="0" cb="0"/><line nr="470" mi="0" ci="4" mb="0" cb="0"/><line nr="471" mi="0" ci="4" mb="0" cb="0"/><line nr="473" mi="0" ci="2" mb="0" cb="0"/><line nr="475" mi="0" ci="4" mb="0" cb="2"/><line nr="476" mi="0" ci="4" mb="0" cb="0"/><line nr="477" mi="4" ci="5" mb="2" cb="2"/><line nr="478" mi="0" ci="7" mb="0" cb="2"/><line nr="481" mi="0" ci="2" mb="0" cb="2"/><line nr="482" mi="0" ci="4" mb="1" cb="2"/><line nr="484" mi="0" ci="4" mb="0" cb="0"/><line nr="485" mi="1" ci="8" mb="1" cb="1"/><line nr="486" mi="2" ci="1" mb="0" cb="0"/><line nr="488" mi="0" ci="12" mb="0" cb="0"/><line nr="489" mi="0" ci="7" mb="0" cb="0"/><line nr="490" mi="0" ci="1" mb="0" cb="0"/><line nr="492" mi="0" ci="6" mb="0" cb="0"/><line nr="493" mi="0" ci="9" mb="0" cb="0"/><line nr="494" mi="0" ci="7" mb="0" cb="0"/><line nr="495" mi="0" ci="1" mb="0" cb="0"/><line nr="497" mi="6" ci="0" mb="2" cb="0"/><line nr="499" mi="0" ci="8" mb="0" cb="0"/><line nr="501" mi="0" ci="3" mb="0" cb="2"/><line nr="502" mi="0" ci="8" mb="0" cb="0"/><line nr="504" mi="1" ci="11" mb="1" cb="1"/><line nr="506" mi="0" ci="12" mb="0" cb="0"/><line nr="507" mi="0" ci="7" mb="0" cb="0"/><line nr="510" mi="0" ci="1" mb="0" cb="0"/><line nr="512" mi="0" ci="1" mb="0" cb="0"/><line nr="514" mi="0" ci="3" mb="0" cb="0"/><line nr="515" mi="0" ci="3" mb="0" cb="0"/><line nr="516" mi="0" ci="3" mb="0" cb="0"/><line nr="517" mi="0" ci="7" mb="0" cb="2"/><line nr="518" mi="0" ci="7" mb="0" cb="0"/><line nr="519" mi="0" ci="9" mb="0" cb="0"/><line nr="520" mi="0" ci="7" mb="0" cb="0"/><line nr="523" mi="0" ci="11" mb="0" cb="0"/><line nr="528" mi="2" ci="0" mb="0" cb="0"/><line nr="529" mi="16" ci="0" mb="2" cb="0"/><line nr="530" mi="5" ci="0" mb="0" cb="0"/><line nr="531" mi="16" ci="0" mb="2" cb="0"/><line nr="532" mi="3" ci="0" mb="0" cb="0"/><line nr="533" mi="1" ci="0" mb="0" cb="0"/><line nr="536" mi="0" ci="3" mb="0" cb="0"/><line nr="537" mi="0" ci="3" mb="0" cb="0"/><line nr="538" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="246" covered="1460"/><counter type="BRANCH" missed="34" covered="123"/><counter type="LINE" missed="43" covered="246"/><counter type="COMPLEXITY" missed="43" covered="80"/><counter type="METHOD" missed="17" covered="27"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="BandedMatrix.java"><line nr="25" mi="2" ci="6" mb="1" cb="1"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="2"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="2"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="10" mb="0" cb="0"/><line nr="49" mi="0" ci="10" mb="0" cb="0"/><line nr="50" mi="0" ci="15" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="16" mb="0" cb="4"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="13" mb="0" cb="0"/><line nr="69" mi="0" ci="26" mb="1" cb="5"/><line nr="70" mi="0" ci="22" mb="0" cb="0"/><line nr="72" mi="0" ci="13" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="157"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractAlignmentScoring.java"><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="14" mb="0" cb="2"/><line nr="74" mi="0" ci="6" mb="0" cb="2"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="12" mb="0" cb="2"/><line nr="83" mi="0" ci="12" mb="0" cb="2"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="2"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="11" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="3" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="3" mb="1" cb="1"/><line nr="154" mi="2" ci="7" mb="2" cb="2"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="6" mb="1" cb="1"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="164"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="6" covered="34"/><counter type="COMPLEXITY" missed="9" covered="10"/><counter type="METHOD" missed="5" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AlignmentIteratorForward.java"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="11" mb="1" cb="3"/><line nr="75" mi="0" ci="7" mb="1" cb="1"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="2"/><line nr="98" mi="0" ci="3" mb="0" cb="2"/><line nr="99" mi="0" ci="4" mb="1" cb="3"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="7" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="11" mb="0" cb="2"/><line nr="123" mi="0" ci="12" mb="0" cb="2"/><line nr="126" mi="0" ci="12" mb="0" cb="4"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="150"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="1" covered="31"/><counter type="COMPLEXITY" missed="3" covered="16"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ScoringUtils.java"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="2"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="7" ci="0" mb="0" cb="0"/><line nr="50" mi="10" ci="0" mb="4" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="7" ci="0" mb="2" cb="0"/><line nr="55" mi="7" ci="0" mb="2" cb="0"/><line nr="56" mi="3" ci="0" mb="2" cb="0"/><line nr="57" mi="8" ci="0" mb="0" cb="0"/><line nr="58" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="7" ci="0" mb="0" cb="0"/><line nr="63" mi="10" ci="0" mb="4" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="7" ci="0" mb="2" cb="0"/><line nr="68" mi="8" ci="0" mb="0" cb="0"/><line nr="69" mi="6" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="1" cb="1"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="11" mb="0" cb="2"/><line nr="88" mi="0" ci="12" mb="0" cb="2"/><line nr="89" mi="0" ci="16" mb="2" cb="6"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="8" mb="0" cb="2"/><line nr="93" mi="0" ci="8" mb="0" cb="2"/><line nr="94" mi="0" ci="14" mb="0" cb="0"/><line nr="96" mi="0" ci="8" mb="0" cb="0"/><line nr="97" mi="0" ci="10" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="114" covered="138"/><counter type="BRANCH" missed="19" covered="17"/><counter type="LINE" missed="20" covered="20"/><counter type="COMPLEXITY" missed="13" covered="9"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BandedLinearAligner.java"><line nr="47" mi="0" ci="8" mb="4" cb="4"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="57" mi="0" ci="10" mb="0" cb="2"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="2"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="2"/><line nr="68" mi="0" ci="12" mb="0" cb="0"/><line nr="69" mi="0" ci="12" mb="0" cb="2"/><line nr="70" mi="0" ci="9" mb="0" cb="0"/><line nr="71" mi="0" ci="9" mb="0" cb="0"/><line nr="72" mi="0" ci="10" mb="0" cb="0"/><line nr="73" mi="0" ci="10" mb="0" cb="0"/><line nr="74" mi="0" ci="13" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="4"/><line nr="83" mi="0" ci="11" mb="0" cb="4"/><line nr="84" mi="0" ci="10" mb="0" cb="0"/><line nr="85" mi="0" ci="10" mb="0" cb="2"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="2"/><line nr="88" mi="0" ci="8" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="9" mb="0" cb="2"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="2"/><line nr="94" mi="0" ci="11" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="9" mb="1" cb="1"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="1" cb="1"/><line nr="99" mi="0" ci="13" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="8" mb="4" cb="4"/><line nr="133" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="8" mb="0" cb="0"/><line nr="142" mi="0" ci="10" mb="0" cb="2"/><line nr="143" mi="0" ci="8" mb="0" cb="0"/><line nr="145" mi="0" ci="7" mb="0" cb="2"/><line nr="146" mi="0" ci="8" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="0" cb="2"/><line nr="153" mi="0" ci="12" mb="0" cb="0"/><line nr="154" mi="0" ci="12" mb="0" cb="2"/><line nr="155" mi="0" ci="9" mb="0" cb="0"/><line nr="156" mi="0" ci="9" mb="0" cb="0"/><line nr="157" mi="0" ci="10" mb="0" cb="0"/><line nr="158" mi="0" ci="10" mb="0" cb="0"/><line nr="159" mi="0" ci="13" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="9" mb="0" cb="2"/><line nr="169" mi="0" ci="6" mb="0" cb="2"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="9" mb="0" cb="2"/><line nr="177" mi="0" ci="6" mb="0" cb="2"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="4"/><line nr="188" mi="0" ci="11" mb="0" cb="4"/><line nr="189" mi="0" ci="10" mb="0" cb="0"/><line nr="190" mi="0" ci="10" mb="0" cb="2"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="2"/><line nr="193" mi="0" ci="8" mb="0" cb="0"/><line nr="194" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="9" mb="0" cb="2"/><line nr="197" mi="0" ci="6" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="2"/><line nr="199" mi="0" ci="11" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="9" mb="1" cb="1"/><line nr="202" mi="0" ci="6" mb="0" cb="0"/><line nr="203" mi="0" ci="5" mb="1" cb="1"/><line nr="204" mi="0" ci="13" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="4" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="6" mb="0" cb="0"/><line nr="212" mi="0" ci="15" mb="0" cb="0"/><line nr="245" mi="0" ci="8" mb="4" cb="4"/><line nr="246" mi="4" ci="0" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="0" ci="8" mb="0" cb="0"/><line nr="255" mi="0" ci="10" mb="0" cb="2"/><line nr="256" mi="0" ci="8" mb="0" cb="0"/><line nr="258" mi="0" ci="7" mb="0" cb="2"/><line nr="259" mi="0" ci="8" mb="0" cb="0"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="265" mi="0" ci="7" mb="0" cb="2"/><line nr="266" mi="0" ci="12" mb="0" cb="0"/><line nr="267" mi="0" ci="12" mb="0" cb="2"/><line nr="268" mi="0" ci="13" mb="0" cb="0"/><line nr="269" mi="0" ci="12" mb="0" cb="0"/><line nr="270" mi="0" ci="1" mb="0" cb="0"/><line nr="271" mi="0" ci="10" mb="0" cb="0"/><line nr="272" mi="0" ci="10" mb="0" cb="0"/><line nr="273" mi="0" ci="13" mb="0" cb="0"/><line nr="278" mi="0" ci="4" mb="0" cb="0"/><line nr="279" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="0" ci="9" mb="0" cb="2"/><line nr="283" mi="0" ci="6" mb="0" cb="2"/><line nr="284" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="0" ci="2" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="0" ci="2" mb="0" cb="0"/><line nr="290" mi="0" ci="9" mb="0" cb="2"/><line nr="291" mi="0" ci="6" mb="0" cb="2"/><line nr="292" mi="0" ci="5" mb="0" cb="0"/><line nr="293" mi="0" ci="2" mb="0" cb="0"/><line nr="294" mi="0" ci="2" mb="0" cb="0"/><line nr="297" mi="0" ci="4" mb="0" cb="0"/><line nr="298" mi="0" ci="4" mb="0" cb="0"/><line nr="300" mi="0" ci="4" mb="0" cb="4"/><line nr="301" mi="0" ci="11" mb="0" cb="4"/><line nr="302" mi="0" ci="14" mb="0" cb="0"/><line nr="303" mi="0" ci="14" mb="0" cb="2"/><line nr="304" mi="0" ci="3" mb="0" cb="0"/><line nr="305" mi="0" ci="3" mb="0" cb="2"/><line nr="306" mi="0" ci="12" mb="0" cb="0"/><line nr="307" mi="0" ci="1" mb="0" cb="0"/><line nr="308" mi="0" ci="2" mb="0" cb="0"/><line nr="309" mi="0" ci="9" mb="0" cb="2"/><line nr="310" mi="0" ci="6" mb="0" cb="0"/><line nr="311" mi="0" ci="5" mb="0" cb="2"/><line nr="312" mi="0" ci="19" mb="0" cb="0"/><line nr="313" mi="0" ci="2" mb="0" cb="0"/><line nr="314" mi="0" ci="9" mb="1" cb="1"/><line nr="315" mi="0" ci="6" mb="0" cb="0"/><line nr="316" mi="0" ci="5" mb="1" cb="1"/><line nr="317" mi="0" ci="19" mb="0" cb="0"/><line nr="318" mi="0" ci="2" mb="0" cb="0"/><line nr="320" mi="4" ci="0" mb="0" cb="0"/><line nr="323" mi="0" ci="15" mb="0" cb="0"/><line nr="354" mi="0" ci="8" mb="4" cb="4"/><line nr="355" mi="4" ci="0" mb="0" cb="0"/><line nr="357" mi="0" ci="4" mb="0" cb="0"/><line nr="358" mi="0" ci="4" mb="0" cb="0"/><line nr="360" mi="0" ci="5" mb="0" cb="0"/><line nr="362" mi="0" ci="8" mb="0" cb="0"/><line nr="366" mi="0" ci="10" mb="0" cb="2"/><line nr="367" mi="0" ci="8" mb="0" cb="0"/><line nr="369" mi="0" ci="7" mb="0" cb="2"/><line nr="370" mi="0" ci="8" mb="0" cb="0"/><line nr="372" mi="0" ci="5" mb="0" cb="0"/><line nr="375" mi="0" ci="2" mb="0" cb="0"/><line nr="376" mi="0" ci="4" mb="0" cb="0"/><line nr="379" mi="0" ci="7" mb="0" cb="2"/><line nr="380" mi="0" ci="14" mb="0" cb="0"/><line nr="381" mi="0" ci="2" mb="0" cb="0"/><line nr="382" mi="0" ci="12" mb="0" cb="2"/><line nr="383" mi="0" ci="9" mb="0" cb="0"/><line nr="384" mi="0" ci="9" mb="0" cb="0"/><line nr="385" mi="0" ci="10" mb="0" cb="0"/><line nr="386" mi="0" ci="10" mb="0" cb="0"/><line nr="387" mi="0" ci="15" mb="0" cb="0"/><line nr="388" mi="0" ci="3" mb="0" cb="2"/><line nr="389" mi="0" ci="4" mb="0" cb="0"/><line nr="390" mi="0" ci="4" mb="0" cb="0"/><line nr="391" mi="0" ci="2" mb="0" cb="0"/><line nr="393" mi="0" ci="4" mb="0" cb="0"/><line nr="395" mi="0" ci="7" mb="0" cb="2"/><line nr="396" mi="0" ci="1" mb="0" cb="0"/><line nr="400" mi="0" ci="3" mb="0" cb="0"/><line nr="402" mi="0" ci="4" mb="0" cb="0"/><line nr="403" mi="0" ci="4" mb="0" cb="0"/><line nr="405" mi="0" ci="4" mb="0" cb="4"/><line nr="406" mi="0" ci="11" mb="0" cb="4"/><line nr="407" mi="0" ci="10" mb="0" cb="0"/><line nr="408" mi="0" ci="10" mb="0" cb="2"/><line nr="409" mi="0" ci="3" mb="0" cb="0"/><line nr="410" mi="0" ci="3" mb="0" cb="2"/><line nr="411" mi="0" ci="8" mb="0" cb="0"/><line nr="412" mi="0" ci="1" mb="0" cb="0"/><line nr="413" mi="0" ci="2" mb="0" cb="0"/><line nr="414" mi="0" ci="9" mb="0" cb="2"/><line nr="415" mi="0" ci="6" mb="0" cb="0"/><line nr="416" mi="0" ci="5" mb="0" cb="2"/><line nr="417" mi="0" ci="11" mb="0" cb="0"/><line nr="418" mi="0" ci="2" mb="0" cb="0"/><line nr="419" mi="0" ci="9" mb="1" cb="1"/><line nr="420" mi="0" ci="6" mb="0" cb="0"/><line nr="421" mi="0" ci="5" mb="1" cb="1"/><line nr="422" mi="0" ci="13" mb="0" cb="0"/><line nr="423" mi="0" ci="2" mb="0" cb="0"/><line nr="425" mi="4" ci="0" mb="0" cb="0"/><line nr="428" mi="0" ci="6" mb="0" cb="0"/><line nr="430" mi="0" ci="15" mb="0" cb="0"/><line nr="457" mi="0" ci="8" mb="4" cb="4"/><line nr="458" mi="4" ci="0" mb="0" cb="0"/><line nr="460" mi="0" ci="4" mb="0" cb="0"/><line nr="461" mi="0" ci="4" mb="0" cb="0"/><line nr="463" mi="0" ci="5" mb="0" cb="0"/><line nr="465" mi="0" ci="8" mb="0" cb="0"/><line nr="469" mi="0" ci="10" mb="0" cb="2"/><line nr="470" mi="0" ci="8" mb="0" cb="0"/><line nr="472" mi="0" ci="7" mb="0" cb="2"/><line nr="473" mi="0" ci="8" mb="0" cb="0"/><line nr="475" mi="0" ci="5" mb="0" cb="0"/><line nr="478" mi="0" ci="2" mb="0" cb="0"/><line nr="479" mi="0" ci="4" mb="0" cb="0"/><line nr="482" mi="0" ci="7" mb="0" cb="2"/><line nr="483" mi="0" ci="12" mb="0" cb="0"/><line nr="484" mi="0" ci="2" mb="0" cb="0"/><line nr="485" mi="0" ci="12" mb="0" cb="2"/><line nr="486" mi="0" ci="13" mb="0" cb="0"/><line nr="487" mi="0" ci="12" mb="0" cb="0"/><line nr="488" mi="0" ci="1" mb="0" cb="0"/><line nr="489" mi="0" ci="10" mb="0" cb="0"/><line nr="490" mi="0" ci="10" mb="0" cb="0"/><line nr="491" mi="0" ci="15" mb="0" cb="0"/><line nr="492" mi="0" ci="3" mb="0" cb="2"/><line nr="493" mi="0" ci="4" mb="0" cb="0"/><line nr="494" mi="0" ci="4" mb="0" cb="0"/><line nr="495" mi="0" ci="2" mb="0" cb="0"/><line nr="497" mi="0" ci="4" mb="0" cb="0"/><line nr="499" mi="0" ci="7" mb="0" cb="2"/><line nr="500" mi="0" ci="1" mb="0" cb="0"/><line nr="503" mi="0" ci="4" mb="0" cb="0"/><line nr="504" mi="0" ci="4" mb="0" cb="0"/><line nr="506" mi="0" ci="4" mb="0" cb="4"/><line nr="507" mi="0" ci="11" mb="0" cb="4"/><line nr="508" mi="0" ci="14" mb="0" cb="0"/><line nr="509" mi="0" ci="14" mb="0" cb="2"/><line nr="510" mi="0" ci="3" mb="0" cb="0"/><line nr="511" mi="0" ci="3" mb="0" cb="2"/><line nr="512" mi="0" ci="12" mb="0" cb="0"/><line nr="513" mi="0" ci="1" mb="0" cb="0"/><line nr="514" mi="0" ci="2" mb="0" cb="0"/><line nr="515" mi="0" ci="9" mb="0" cb="2"/><line nr="516" mi="0" ci="6" mb="0" cb="0"/><line nr="517" mi="0" ci="5" mb="0" cb="2"/><line nr="518" mi="0" ci="19" mb="0" cb="0"/><line nr="519" mi="0" ci="2" mb="0" cb="0"/><line nr="520" mi="0" ci="9" mb="1" cb="1"/><line nr="521" mi="0" ci="6" mb="0" cb="0"/><line nr="522" mi="0" ci="5" mb="1" cb="1"/><line nr="523" mi="0" ci="19" mb="0" cb="0"/><line nr="524" mi="0" ci="2" mb="0" cb="0"/><line nr="526" mi="4" ci="0" mb="0" cb="0"/><line nr="529" mi="0" ci="15" mb="0" cb="0"/><line nr="546" mi="0" ci="12" mb="0" cb="0"/><line nr="567" mi="0" ci="5" mb="0" cb="0"/><line nr="568" mi="0" ci="11" mb="0" cb="0"/><line nr="569" mi="0" ci="1" mb="0" cb="0"/><line nr="570" mi="0" ci="24" mb="0" cb="0"/><line nr="573" mi="0" ci="1" mb="0" cb="0"/><line nr="600" mi="0" ci="5" mb="0" cb="0"/><line nr="601" mi="0" ci="13" mb="0" cb="0"/><line nr="603" mi="0" ci="1" mb="0" cb="0"/><line nr="604" mi="0" ci="28" mb="0" cb="0"/><line nr="608" mi="0" ci="1" mb="0" cb="0"/><line nr="633" mi="0" ci="5" mb="0" cb="0"/><line nr="634" mi="0" ci="13" mb="0" cb="0"/><line nr="636" mi="0" ci="1" mb="0" cb="0"/><line nr="637" mi="0" ci="28" mb="0" cb="0"/><line nr="641" mi="0" ci="1" mb="0" cb="0"/><line nr="669" mi="0" ci="8" mb="0" cb="0"/><line nr="670" mi="0" ci="4" mb="0" cb="0"/><line nr="671" mi="0" ci="4" mb="0" cb="0"/><line nr="672" mi="0" ci="5" mb="0" cb="0"/><line nr="673" mi="0" ci="12" mb="0" cb="0"/><line nr="674" mi="0" ci="1" mb="0" cb="0"/><line nr="675" mi="0" ci="28" mb="0" cb="0"/><line nr="679" mi="0" ci="1" mb="0" cb="0"/><line nr="702" mi="0" ci="13" mb="0" cb="0"/><line nr="726" mi="0" ci="8" mb="0" cb="0"/><line nr="727" mi="0" ci="4" mb="0" cb="0"/><line nr="728" mi="0" ci="4" mb="0" cb="0"/><line nr="729" mi="0" ci="6" mb="0" cb="0"/><line nr="730" mi="0" ci="6" mb="0" cb="0"/><line nr="731" mi="0" ci="2" mb="0" cb="0"/><line nr="732" mi="0" ci="2" mb="0" cb="0"/><line nr="733" mi="0" ci="5" mb="0" cb="0"/><line nr="734" mi="0" ci="12" mb="0" cb="0"/><line nr="736" mi="0" ci="1" mb="0" cb="0"/><line nr="737" mi="0" ci="28" mb="0" cb="0"/><line nr="741" mi="0" ci="1" mb="0" cb="0"/><line nr="761" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="40" covered="2037"/><counter type="BRANCH" missed="30" covered="174"/><counter type="LINE" missed="10" covered="291"/><counter type="COMPLEXITY" missed="30" covered="85"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Alignment.java"><line nr="64" mi="0" ci="14" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="14" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="10" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="2"/><line nr="86" mi="0" ci="4" mb="1" cb="1"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="22" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="1" cb="1"/><line nr="91" mi="16" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="8" mb="1" cb="1"/><line nr="93" mi="25" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="1" cb="1"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="9" mb="0" cb="0"/><line nr="120" mi="0" ci="11" mb="0" cb="0"/><line nr="129" mi="0" ci="11" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="5" mb="1" cb="1"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="2"/><line nr="203" mi="0" ci="14" mb="0" cb="0"/><line nr="204" mi="0" ci="10" mb="0" cb="0"/><line nr="218" mi="0" ci="5" mb="1" cb="1"/><line nr="219" mi="2" ci="0" mb="0" cb="0"/><line nr="221" mi="0" ci="11" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="224" mi="0" ci="10" mb="0" cb="2"/><line nr="235" mi="6" ci="0" mb="0" cb="0"/><line nr="236" mi="6" ci="0" mb="0" cb="0"/><line nr="238" mi="6" ci="0" mb="4" cb="0"/><line nr="239" mi="2" ci="0" mb="0" cb="0"/><line nr="241" mi="6" ci="0" mb="0" cb="0"/><line nr="252" mi="6" ci="0" mb="0" cb="0"/><line nr="253" mi="6" ci="0" mb="0" cb="0"/><line nr="255" mi="6" ci="0" mb="4" cb="0"/><line nr="256" mi="2" ci="0" mb="0" cb="0"/><line nr="258" mi="6" ci="0" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="0" cb="0"/><line nr="277" mi="0" ci="18" mb="0" cb="0"/><line nr="287" mi="4" ci="0" mb="0" cb="0"/><line nr="289" mi="3" ci="0" mb="0" cb="0"/><line nr="290" mi="3" ci="0" mb="2" cb="0"/><line nr="291" mi="3" ci="0" mb="0" cb="0"/><line nr="292" mi="2" ci="0" mb="2" cb="0"/><line nr="293" mi="2" ci="0" mb="0" cb="0"/><line nr="295" mi="1" ci="0" mb="0" cb="0"/><line nr="296" mi="1" ci="0" mb="0" cb="0"/><line nr="298" mi="10" ci="0" mb="0" cb="0"/><line nr="307" mi="0" ci="4" mb="0" cb="0"/><line nr="309" mi="0" ci="11" mb="0" cb="0"/><line nr="310" mi="0" ci="11" mb="0" cb="0"/><line nr="312" mi="0" ci="4" mb="0" cb="0"/><line nr="313" mi="0" ci="4" mb="0" cb="0"/><line nr="315" mi="0" ci="4" mb="0" cb="0"/><line nr="317" mi="0" ci="3" mb="0" cb="0"/><line nr="318" mi="0" ci="3" mb="0" cb="2"/><line nr="319" mi="0" ci="3" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="4"/><line nr="322" mi="0" ci="4" mb="0" cb="0"/><line nr="323" mi="0" ci="4" mb="0" cb="0"/><line nr="324" mi="0" ci="8" mb="0" cb="0"/><line nr="325" mi="0" ci="6" mb="0" cb="0"/><line nr="326" mi="0" ci="5" mb="0" cb="0"/><line nr="327" mi="0" ci="1" mb="0" cb="0"/><line nr="330" mi="0" ci="4" mb="0" cb="0"/><line nr="331" mi="0" ci="6" mb="0" cb="0"/><line nr="332" mi="0" ci="8" mb="0" cb="0"/><line nr="333" mi="0" ci="4" mb="0" cb="0"/><line nr="334" mi="0" ci="5" mb="0" cb="0"/><line nr="335" mi="0" ci="1" mb="0" cb="0"/><line nr="338" mi="0" ci="6" mb="0" cb="0"/><line nr="339" mi="0" ci="4" mb="0" cb="0"/><line nr="340" mi="0" ci="4" mb="0" cb="0"/><line nr="341" mi="0" ci="6" mb="0" cb="0"/><line nr="342" mi="0" ci="5" mb="0" cb="0"/><line nr="343" mi="0" ci="1" mb="0" cb="0"/><line nr="346" mi="0" ci="4" mb="0" cb="0"/><line nr="347" mi="0" ci="4" mb="0" cb="0"/><line nr="348" mi="0" ci="6" mb="0" cb="0"/><line nr="349" mi="0" ci="4" mb="0" cb="0"/><line nr="350" mi="0" ci="4" mb="0" cb="0"/><line nr="351" mi="0" ci="5" mb="0" cb="0"/><line nr="354" mi="0" ci="1" mb="0" cb="0"/><line nr="356" mi="0" ci="8" mb="0" cb="0"/><line nr="357" mi="0" ci="8" mb="0" cb="0"/><line nr="367" mi="16" ci="0" mb="0" cb="0"/><line nr="376" mi="0" ci="5" mb="0" cb="0"/><line nr="385" mi="0" ci="4" mb="0" cb="0"/><line nr="386" mi="0" ci="12" mb="0" cb="2"/><line nr="387" mi="0" ci="5" mb="0" cb="0"/><line nr="388" mi="0" ci="6" mb="0" cb="0"/><line nr="389" mi="0" ci="1" mb="0" cb="0"/><line nr="390" mi="0" ci="3" mb="0" cb="0"/><line nr="395" mi="0" ci="4" mb="0" cb="0"/><line nr="399" mi="26" ci="0" mb="0" cb="0"/><line nr="400" mi="20" ci="0" mb="0" cb="0"/><line nr="405" mi="2" ci="3" mb="1" cb="1"/><line nr="406" mi="2" ci="7" mb="2" cb="2"/><line nr="408" mi="0" ci="3" mb="0" cb="0"/><line nr="410" mi="2" ci="6" mb="1" cb="1"/><line nr="411" mi="2" ci="6" mb="1" cb="1"/><line nr="412" mi="2" ci="6" mb="1" cb="1"/><line nr="413" mi="2" ci="6" mb="1" cb="1"/><line nr="414" mi="2" ci="6" mb="1" cb="1"/><line nr="416" mi="0" ci="2" mb="0" cb="0"/><line nr="421" mi="4" ci="0" mb="0" cb="0"/><line nr="422" mi="8" ci="0" mb="0" cb="0"/><line nr="423" mi="8" ci="0" mb="0" cb="0"/><line nr="424" mi="8" ci="0" mb="0" cb="0"/><line nr="425" mi="15" ci="0" mb="2" cb="0"/><line nr="426" mi="2" ci="0" mb="0" cb="0"/><line nr="430" mi="0" ci="3" mb="1" cb="1"/><line nr="431" mi="2" ci="0" mb="0" cb="0"/><line nr="432" mi="0" ci="2" mb="1" cb="1"/><line nr="433" mi="0" ci="4" mb="0" cb="0"/><line nr="434" mi="2" ci="0" mb="0" cb="0"/><line nr="437" mi="2" ci="6" mb="1" cb="1"/><line nr="438" mi="0" ci="3" mb="0" cb="0"/><line nr="439" mi="0" ci="6" mb="0" cb="0"/><line nr="440" mi="0" ci="6" mb="0" cb="0"/><line nr="442" mi="0" ci="5" mb="0" cb="0"/><line nr="443" mi="0" ci="8" mb="2" cb="2"/><line nr="444" mi="4" ci="0" mb="0" cb="0"/><line nr="445" mi="0" ci="1" mb="0" cb="0"/><line nr="450" mi="0" ci="2" mb="0" cb="0"/><line nr="452" mi="0" ci="6" mb="0" cb="0"/><line nr="454" mi="0" ci="7" mb="0" cb="2"/><line nr="455" mi="0" ci="2" mb="0" cb="0"/><line nr="457" mi="0" ci="7" mb="0" cb="2"/><line nr="458" mi="0" ci="7" mb="0" cb="2"/><line nr="459" mi="4" ci="9" mb="2" cb="2"/><line nr="460" mi="0" ci="2" mb="0" cb="0"/><line nr="462" mi="0" ci="10" mb="0" cb="0"/><line nr="463" mi="0" ci="9" mb="0" cb="0"/><line nr="464" mi="0" ci="4" mb="0" cb="0"/><line nr="468" mi="0" ci="7" mb="0" cb="0"/><line nr="470" mi="0" ci="3" mb="0" cb="2"/><line nr="471" mi="0" ci="2" mb="0" cb="0"/><line nr="473" mi="0" ci="3" mb="0" cb="2"/><line nr="474" mi="0" ci="3" mb="0" cb="0"/><line nr="477" mi="0" ci="4" mb="0" cb="2"/><line nr="478" mi="0" ci="6" mb="0" cb="0"/><line nr="479" mi="0" ci="9" mb="0" cb="0"/><line nr="482" mi="0" ci="3" mb="0" cb="0"/><line nr="483" mi="0" ci="3" mb="0" cb="2"/><line nr="484" mi="0" ci="1" mb="0" cb="0"/><line nr="485" mi="0" ci="16" mb="0" cb="2"/><line nr="486" mi="0" ci="6" mb="0" cb="2"/><line nr="487" mi="0" ci="3" mb="0" cb="2"/><line nr="488" mi="0" ci="6" mb="0" cb="0"/><line nr="489" mi="0" ci="2" mb="0" cb="0"/><line nr="492" mi="0" ci="1" mb="0" cb="0"/><line nr="493" mi="0" ci="16" mb="1" cb="1"/><line nr="494" mi="0" ci="6" mb="0" cb="2"/><line nr="495" mi="0" ci="3" mb="1" cb="1"/><line nr="496" mi="0" ci="6" mb="0" cb="0"/><line nr="497" mi="0" ci="2" mb="0" cb="0"/><line nr="502" mi="0" ci="17" mb="0" cb="0"/><line nr="506" mi="0" ci="3" mb="0" cb="0"/><line nr="507" mi="0" ci="3" mb="0" cb="0"/><line nr="508" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="292" covered="743"/><counter type="BRANCH" missed="37" covered="59"/><counter type="LINE" missed="38" covered="141"/><counter type="COMPLEXITY" missed="36" covered="44"/><counter type="METHOD" missed="6" covered="25"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AlignmentScoring.java"/><sourcefile name="ScoringMatrixIO.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="1" cb="1"/><line nr="45" mi="4" ci="0" mb="2" cb="0"/><line nr="46" mi="12" ci="0" mb="0" cb="0"/><line nr="48" mi="8" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="8" ci="0" mb="2" cb="0"/><line nr="53" mi="8" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="1" cb="1"/><line nr="59" mi="0" ci="4" mb="1" cb="1"/><line nr="60" mi="12" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="2"/><line nr="69" mi="0" ci="6" mb="0" cb="2"/><line nr="70" mi="0" ci="8" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="2"/><line nr="72" mi="0" ci="8" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="1" cb="1"/><line nr="76" mi="12" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="1" cb="1"/><line nr="79" mi="12" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="14" mb="0" cb="0"/><line nr="84" mi="12" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="1" cb="1"/><line nr="92" mi="0" ci="23" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="9" ci="0" mb="2" cb="0"/><line nr="96" mi="7" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="9" ci="0" mb="0" cb="0"/><line nr="100" mi="13" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="203" mi="0" ci="8" mb="0" cb="0"/><line nr="207" mi="0" ci="11" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="5" mb="0" cb="2"/><line nr="219" mi="0" ci="4" mb="0" cb="2"/><line nr="220" mi="0" ci="1" mb="0" cb="0"/><line nr="223" mi="0" ci="4" mb="0" cb="2"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="8" mb="0" cb="2"/><line nr="226" mi="0" ci="6" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="231" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="22" mb="0" cb="2"/><line nr="235" mi="0" ci="8" mb="0" cb="2"/><line nr="236" mi="0" ci="22" mb="0" cb="2"/><line nr="237" mi="0" ci="11" mb="0" cb="0"/><line nr="245" mi="0" ci="16" mb="0" cb="2"/><line nr="246" mi="0" ci="3" mb="1" cb="1"/><line nr="247" mi="5" ci="0" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="3" mb="1" cb="1"/><line nr="254" mi="3" ci="0" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="2"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="7" mb="0" cb="0"/><line nr="267" mi="0" ci="4" mb="1" cb="1"/><line nr="268" mi="4" ci="0" mb="0" cb="0"/><line nr="269" mi="0" ci="4" mb="0" cb="0"/><line nr="270" mi="0" ci="6" mb="1" cb="3"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="162" covered="323"/><counter type="BRANCH" missed="16" covered="36"/><counter type="LINE" missed="22" covered="52"/><counter type="COMPLEXITY" missed="14" covered="20"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="AlignmentIterator.java"/><sourcefile name="AlignmentElementType.java"><line nr="18" mi="0" ci="20" mb="0" cb="0"/><line nr="19" mi="0" ci="7" mb="0" cb="0"/><line nr="20" mi="0" ci="7" mb="0" cb="0"/><line nr="21" mi="0" ci="7" mb="0" cb="0"/><line nr="22" mi="0" ci="7" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AlignmentHelper.java"><line nr="33" mi="0" ci="8" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="2"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="2"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="29" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="17" mb="0" cb="2"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="17" mb="0" cb="0"/><line nr="63" mi="0" ci="10" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="10" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="0" cb="2"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="10" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="12" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="7" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="24" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="7" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="26" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="14" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="24" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="4" ci="0" mb="0" cb="0"/><line nr="160" mi="8" ci="0" mb="2" cb="0"/><line nr="161" mi="19" ci="0" mb="2" cb="0"/><line nr="162" mi="31" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="7" mb="0" cb="0"/><line nr="167" mi="0" ci="6" mb="0" cb="0"/><line nr="168" mi="0" ci="26" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="9" mb="0" cb="2"/><line nr="175" mi="0" ci="5" mb="0" cb="2"/><line nr="176" mi="0" ci="7" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="18" mb="0" cb="0"/><line nr="189" mi="0" ci="13" mb="0" cb="0"/><line nr="193" mi="0" ci="8" mb="0" cb="2"/><line nr="197" mi="0" ci="10" mb="0" cb="2"/><counter type="INSTRUCTION" missed="94" covered="443"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="10" covered="57"/><counter type="COMPLEXITY" missed="9" covered="25"/><counter type="METHOD" missed="7" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BandedAlignerParameters.java"><line nr="33" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="10" ci="0" mb="0" cb="0"/><line nr="90" mi="5" ci="0" mb="2" cb="0"/><line nr="91" mi="9" ci="0" mb="4" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="7" ci="0" mb="2" cb="0"/><line nr="96" mi="7" ci="0" mb="2" cb="0"/><line nr="97" mi="8" ci="0" mb="2" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="7" ci="0" mb="0" cb="0"/><line nr="106" mi="7" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="107" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CachedIntArray.java"><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="8" mb="0" cb="4"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1853" covered="13434"/><counter type="BRANCH" missed="324" covered="1210"/><counter type="LINE" missed="298" covered="2131"/><counter type="COMPLEXITY" missed="356" covered="713"/><counter type="METHOD" missed="78" covered="215"/><counter type="CLASS" missed="2" covered="37"/></package><package name="com/milaboratory/core/io"><class name="com/milaboratory/core/io/CompressionType" sourcefilename="CompressionType.java"><method name="detectCompressionType" desc="(Ljava/io/File;)Lcom/milaboratory/core/io/CompressionType;" line="29"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="detectCompressionType" desc="(Ljava/lang/String;)Lcom/milaboratory/core/io/CompressionType;" line="33"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createInputStream" desc="(Ljava/io/InputStream;)Ljava/io/InputStream;" line="43"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createInputStream" desc="(Ljava/io/InputStream;I)Ljava/io/InputStream;" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createOutputStream" desc="(Ljava/io/OutputStream;)Ljava/io/OutputStream;" line="51"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createOutputStream" desc="(Ljava/io/OutputStream;I)Ljava/io/OutputStream;" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createInputStream" desc="(Lcom/milaboratory/core/io/CompressionType;Ljava/io/InputStream;I)Ljava/io/InputStream;" line="59"><counter type="INSTRUCTION" missed="22" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createOutputStream" desc="(Lcom/milaboratory/core/io/CompressionType;Ljava/io/OutputStream;I)Ljava/io/OutputStream;" line="76"><counter type="INSTRUCTION" missed="22" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="56" covered="90"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="13" covered="16"/><counter type="COMPLEXITY" missed="7" covered="10"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CompressionType.java"><line nr="25" mi="0" ci="16" mb="0" cb="0"/><line nr="26" mi="0" ci="18" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="2"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="1" cb="1"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="2" cb="2"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="8" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="2" cb="2"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="8" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="56" covered="90"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="13" covered="16"/><counter type="COMPLEXITY" missed="7" covered="10"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="56" covered="90"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="13" covered="16"/><counter type="COMPLEXITY" missed="7" covered="10"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></package><package name="com/milaboratory/primitivio"><class name="com/milaboratory/primitivio/TypeSerializationHelper" sourcefilename="TypeSerializationHelper.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/primitivio/Serializer;)V" line="21"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSerializer" desc="()Lcom/milaboratory/primitivio/Serializer;" line="26"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/primitivio/PipeReader" sourcefilename="PipeReader.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/String;)V" line="29"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/io/File;)V" line="34"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/io/FileInputStream;)V" line="39"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/io/InputStream;)V" line="44"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="take" desc="()Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/primitivio/PrimitivO" sourcefilename="PrimitivO.java"><method name="&lt;init&gt;" desc="()V" line="82"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/DataOutput;)V" line="86"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/DataOutput;Lcom/milaboratory/primitivio/SerializersManager;Lgnu/trove/map/custom_hash/TObjectIntCustomHashMap;Lgnu/trove/map/TObjectIntMap;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/DataOutput;Lcom/milaboratory/primitivio/SerializersManager;)V" line="102"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isClosed" desc="()Z" line="108"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getState" desc="()Lcom/milaboratory/primitivio/PrimitivOState;" line="116"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="substituteStream" desc="(Ljava/io/OutputStream;)Lcom/milaboratory/primitivio/PrimitivO;" line="127"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="substituteStream" desc="(Ljava/io/DataOutput;)Lcom/milaboratory/primitivio/PrimitivO;" line="135"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSerializersManager" desc="()Lcom/milaboratory/primitivio/SerializersManager;" line="141"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureCurrentReferencesInitialized" desc="()V" line="145"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putKnownObject" desc="(Ljava/lang/Object;)V" line="151"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putKnownReference" desc="(Ljava/lang/Object;)V" line="156"><counter type="INSTRUCTION" missed="6" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="166"><counter type="INSTRUCTION" missed="17" covered="54"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addCurrentReference" desc="(Ljava/lang/Object;)I" line="184"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeReference" desc="(Ljava/lang/Object;)V" line="191"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeObject" desc="(Ljava/lang/Object;Ljava/lang/Class;)V" line="196"><counter type="INSTRUCTION" missed="11" covered="83"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="3" covered="22"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeNull" desc="()V" line="243"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeNewObject" desc="()V" line="247"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeObjectReference" desc="(I)V" line="251"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeKnownObject" desc="(I)V" line="255"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeVarIntZigZag" desc="(I)V" line="259"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeVarInt" desc="(I)V" line="263"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeVarLongZigZag" desc="(J)V" line="267"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeVarLong" desc="(J)V" line="272"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeObject" desc="(Ljava/lang/Object;)V" line="281"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(I)V" line="290"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([B)V" line="299"><counter type="INSTRUCTION" missed="6" covered="6"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([BII)V" line="308"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeBoolean" desc="(Z)V" line="317"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeByte" desc="(I)V" line="326"><counter type="INSTRUCTION" missed="6" covered="6"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeShort" desc="(I)V" line="335"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeChar" desc="(I)V" line="344"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeInt" desc="(I)V" line="353"><counter type="INSTRUCTION" missed="6" covered="6"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeLong" desc="(J)V" line="362"><counter type="INSTRUCTION" missed="6" covered="6"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeFloat" desc="(F)V" line="371"><counter type="INSTRUCTION" missed="6" covered="6"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeDouble" desc="(D)V" line="380"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeBytes" desc="(Ljava/lang/String;)V" line="389"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeChars" desc="(Ljava/lang/String;)V" line="398"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeUTF" desc="(Ljava/lang/String;)V" line="407"><counter type="INSTRUCTION" missed="6" covered="6"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="415"><counter type="INSTRUCTION" missed="7" covered="16"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="236" covered="383"/><counter type="BRANCH" missed="14" covered="36"/><counter type="LINE" missed="75" covered="111"/><counter type="COMPLEXITY" missed="24" covered="42"/><counter type="METHOD" missed="14" covered="27"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/PrimitivI" sourcefilename="PrimitivI.java"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/DataInput;)V" line="43"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/DataInput;Lcom/milaboratory/primitivio/SerializersManager;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/DataInput;Lcom/milaboratory/primitivio/SerializersManager;Ljava/util/ArrayList;Ljava/util/ArrayList;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isClosed" desc="()Z" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSerializersManager" desc="()Lcom/milaboratory/primitivio/SerializersManager;" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getState" desc="()Lcom/milaboratory/primitivio/PrimitivIState;" line="73"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="substituteStream" desc="(Ljava/io/InputStream;)Lcom/milaboratory/primitivio/PrimitivI;" line="81"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="substituteStream" desc="(Ljava/io/DataInput;)Lcom/milaboratory/primitivio/PrimitivI;" line="89"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putKnownObject" desc="(Ljava/lang/Object;)V" line="96"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putKnownReference" desc="(Ljava/lang/Object;)V" line="101"><counter type="INSTRUCTION" missed="6" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readReference" desc="(Ljava/lang/Object;)V" line="110"><counter type="INSTRUCTION" missed="5" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="117"><counter type="INSTRUCTION" missed="17" covered="22"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readObject" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="127"><counter type="INSTRUCTION" missed="10" covered="112"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="2" covered="27"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readVarLongZigZag" desc="()J" line="172"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readVarLong" desc="()J" line="176"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readVarIntZigZag" desc="()I" line="187"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readVarInt" desc="()I" line="191"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readBytes" desc="(I)[B" line="202"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readFully" desc="([B)V" line="210"><counter type="INSTRUCTION" missed="6" covered="6"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readFully" desc="([BII)V" line="219"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skipBytes" desc="(I)I" line="228"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readBoolean" desc="()Z" line="237"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readByte" desc="()B" line="246"><counter type="INSTRUCTION" missed="6" covered="4"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readUnsignedByte" desc="()I" line="255"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readShort" desc="()S" line="264"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readUnsignedShort" desc="()I" line="273"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readChar" desc="()C" line="282"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readInt" desc="()I" line="291"><counter type="INSTRUCTION" missed="6" covered="4"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readLong" desc="()J" line="300"><counter type="INSTRUCTION" missed="6" covered="4"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readFloat" desc="()F" line="309"><counter type="INSTRUCTION" missed="6" covered="4"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readDouble" desc="()D" line="318"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readLine" desc="()Ljava/lang/String;" line="326"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readUTF" desc="()Ljava/lang/String;" line="332"><counter type="INSTRUCTION" missed="6" covered="4"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="340"><counter type="INSTRUCTION" missed="7" covered="16"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="228" covered="326"/><counter type="BRANCH" missed="11" covered="29"/><counter type="LINE" missed="61" covered="88"/><counter type="COMPLEXITY" missed="24" covered="32"/><counter type="METHOD" missed="15" covered="21"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/PReader" sourcefilename="PReader.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="32"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="36"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/FileInputStream;)V" line="26"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="46"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;J)V" line="26"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="()V" line="56"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ensureInitialized" desc="()V" line="59"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProgress" desc="()D" line="70"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFinished" desc="()Z" line="75"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="80"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="126" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/primitivio/DefaultSerializersProvider" sourcefilename="DefaultSerializersProvider.java"/><class name="com/milaboratory/primitivio/DefaultSerializersProviderImpl$ByteArraySerializer" sourcefilename="DefaultSerializersProviderImpl.java"><method name="write" desc="(Lcom/milaboratory/primitivio/PrimitivO;[B)V" line="154"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Lcom/milaboratory/primitivio/PrimitivI;)[B" line="160"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReference" desc="()Z" line="167"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handlesReference" desc="()Z" line="172"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/PrimitivOState" sourcefilename="PrimitivOState.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/primitivio/SerializersManager;Lgnu/trove/map/custom_hash/TObjectIntCustomHashMap;Lgnu/trove/map/TObjectIntMap;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createPrimitivO" desc="()Lcom/milaboratory/primitivio/PrimitivO;" line="58"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createPrimitivO" desc="(Ljava/io/DataOutput;)Lcom/milaboratory/primitivio/PrimitivO;" line="62"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createPrimitivO" desc="(Ljava/io/OutputStream;)Lcom/milaboratory/primitivio/PrimitivO;" line="66"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getManagerCopy" desc="()Lcom/milaboratory/primitivio/SerializersManager;" line="70"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKnownReferencesCopy" desc="()Lgnu/trove/map/custom_hash/TObjectIntCustomHashMap;" line="74"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKnownObjectsCopy" desc="()Lgnu/trove/map/TObjectIntMap;" line="80"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newKnownReferenceHashMap" desc="()Lgnu/trove/map/custom_hash/TObjectIntCustomHashMap;" line="86"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newKnownObjectHashMap" desc="()Lgnu/trove/map/TObjectIntMap;" line="91"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="88"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/PrimitivIO" sourcefilename="PrimitivIO.java"><method name="dummySerializer" desc="()Lcom/milaboratory/primitivio/Serializer;" line="26"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/PrimitivIO$1" sourcefilename="PrimitivIO.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Lcom/milaboratory/primitivio/PrimitivO;Ljava/lang/Object;)V" line="29"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Lcom/milaboratory/primitivio/PrimitivI;)Ljava/lang/Object;" line="34"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReference" desc="()Z" line="39"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handlesReference" desc="()Z" line="44"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="5"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/DefaultSerializersProviderImpl$ArraySerializer" sourcefilename="DefaultSerializersProviderImpl.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="299"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Lcom/milaboratory/primitivio/PrimitivO;Ljava/lang/Object;)V" line="305"><counter type="INSTRUCTION" missed="6" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Lcom/milaboratory/primitivio/PrimitivI;)Ljava/lang/Object;" line="317"><counter type="INSTRUCTION" missed="5" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReference" desc="()Z" line="337"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handlesReference" desc="()Z" line="342"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="63"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="17"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/DefaultSerializersProviderImpl$EnumSerializer" sourcefilename="DefaultSerializersProviderImpl.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="207"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Lcom/milaboratory/primitivio/PrimitivO;Ljava/lang/Object;)V" line="215"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Lcom/milaboratory/primitivio/PrimitivI;)Ljava/lang/Object;" line="221"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReference" desc="()Z" line="226"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handlesReference" desc="()Z" line="231"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="38"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/Serializer" sourcefilename="Serializer.java"/><class name="com/milaboratory/primitivio/DefaultSerializersProviderImpl$IntArraySerializer" sourcefilename="DefaultSerializersProviderImpl.java"><method name="write" desc="(Lcom/milaboratory/primitivio/PrimitivO;[I)V" line="127"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Lcom/milaboratory/primitivio/PrimitivI;)[I" line="134"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReference" desc="()Z" line="142"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handlesReference" desc="()Z" line="147"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/PWriter" sourcefilename="PWriter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="27"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="31"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;)V" line="35"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/primitivio/PrimitivO;)V" line="23"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="beforeClose" desc="()V" line="43"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="()V" line="46"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ensureInitialized" desc="()V" line="49"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="60"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/primitivio/Util" sourcefilename="Util.java"><method name="findSerializableParent" desc="(Ljava/lang/Class;ZZ)Ljava/lang/Class;" line="28"><counter type="INSTRUCTION" missed="0" covered="112"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeList" desc="(Ljava/util/List;Ljava/lang/String;)V" line="63"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeList" desc="(Ljava/util/List;Ljava/io/File;)V" line="69"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeList" desc="(Ljava/util/List;Ljava/io/OutputStream;)V" line="75"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeList" desc="(Ljava/util/List;Lcom/milaboratory/primitivio/PrimitivO;)V" line="79"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readList" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/List;" line="85"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readList" desc="(Ljava/lang/Class;Ljava/io/File;)Ljava/util/List;" line="91"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readList" desc="(Ljava/lang/Class;Ljava/io/InputStream;)Ljava/util/List;" line="97"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readList" desc="(Ljava/lang/Class;Lcom/milaboratory/primitivio/PrimitivI;)Ljava/util/List;" line="101"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeMap" desc="(Ljava/util/Map;Lcom/milaboratory/primitivio/PrimitivO;)V" line="109"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readEnumMap" desc="(Lcom/milaboratory/primitivio/PrimitivI;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/EnumMap;" line="117"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readMap" desc="(Lcom/milaboratory/primitivio/PrimitivI;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Map;" line="128"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zigZagEncodeLong" desc="(J)J" line="139"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zigZagDecodeLong" desc="(J)J" line="143"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zigZagEncodeInt" desc="(I)I" line="147"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zigZagDecodeInt" desc="(I)I" line="151"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="192" covered="148"/><counter type="BRANCH" missed="11" covered="21"/><counter type="LINE" missed="42" covered="24"/><counter type="COMPLEXITY" missed="17" covered="15"/><counter type="METHOD" missed="11" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/DefaultSerializersProviderImpl$BooleanArraySerializer" sourcefilename="DefaultSerializersProviderImpl.java"><method name="write" desc="(Lcom/milaboratory/primitivio/PrimitivO;[Z)V" line="179"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Lcom/milaboratory/primitivio/PrimitivI;)[Z" line="186"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReference" desc="()Z" line="194"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handlesReference" desc="()Z" line="199"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/primitivio/DefaultSerializersProviderImpl$LongSerializer" sourcefilename="DefaultSerializersProviderImpl.java"><method name="write" desc="(Lcom/milaboratory/primitivio/PrimitivO;Ljava/lang/Long;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Lcom/milaboratory/primitivio/PrimitivI;)Ljava/lang/Long;" line="88"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReference" desc="()Z" line="93"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handlesReference" desc="()Z" line="98"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/HasPrimitivIOState" sourcefilename="HasPrimitivIOState.java"/><class name="com/milaboratory/primitivio/DefaultSerializersProviderImpl$IntegerSerializer" sourcefilename="DefaultSerializersProviderImpl.java"><method name="write" desc="(Lcom/milaboratory/primitivio/PrimitivO;Ljava/lang/Integer;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Lcom/milaboratory/primitivio/PrimitivI;)Ljava/lang/Integer;" line="66"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReference" desc="()Z" line="71"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handlesReference" desc="()Z" line="76"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/SerializersManager" sourcefilename="SerializersManager.java"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/primitivio/DefaultSerializersProvider;Ljava/util/HashMap;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSerializer" desc="(Ljava/lang/Class;)Lcom/milaboratory/primitivio/Serializer;" line="44"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerCustomSerializer" desc="(Ljava/lang/Class;Lcom/milaboratory/primitivio/Serializer;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAndRegisterSerializer" desc="(Ljava/lang/Class;)Lcom/milaboratory/primitivio/Serializer;" line="65"><counter type="INSTRUCTION" missed="14" covered="61"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSerializer0" desc="(Ljava/lang/Class;Z)Lcom/milaboratory/primitivio/Serializer;" line="90"><counter type="INSTRUCTION" missed="45" covered="90"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="4" covered="19"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/milaboratory/primitivio/SerializersManager;" line="131"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instantiate" desc="(Ljava/lang/Class;)Lcom/milaboratory/primitivio/Serializer;" line="138"><counter type="INSTRUCTION" missed="6" covered="30"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findRoot" desc="(Ljava/lang/Class;)Ljava/lang/Class;" line="155"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllSerializableInTree" desc="(Ljava/lang/Class;)Ljava/util/List;" line="174"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAllSerializableInTree" desc="(Ljava/lang/Class;Ljava/util/List;)V" line="180"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findRealRoot" desc="(Ljava/lang/Class;)Ljava/lang/Class;" line="192"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="65" covered="370"/><counter type="BRANCH" missed="9" covered="45"/><counter type="LINE" missed="7" covered="84"/><counter type="COMPLEXITY" missed="9" covered="30"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/CustomSerializerImpl" sourcefilename="CustomSerializerImpl.java"><method name="&lt;init&gt;" desc="(Ljava/util/HashMap;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Lcom/milaboratory/primitivio/PrimitivO;Ljava/lang/Object;)V" line="35"><counter type="INSTRUCTION" missed="15" covered="45"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Lcom/milaboratory/primitivio/PrimitivI;)Ljava/lang/Object;" line="60"><counter type="INSTRUCTION" missed="3" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReference" desc="()Z" line="80"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handlesReference" desc="()Z" line="85"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="98"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="3" covered="25"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/JSONSerializer" sourcefilename="JSONSerializer.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/util/function/Function;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Lcom/milaboratory/primitivio/PrimitivO;Ljava/lang/Object;)V" line="53"><counter type="INSTRUCTION" missed="11" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Lcom/milaboratory/primitivio/PrimitivI;)Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="12" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReference" desc="()Z" line="77"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handlesReference" desc="()Z" line="82"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="40"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="14"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/CustomSerializerImpl$TypeInfo" sourcefilename="CustomSerializerImpl.java"><method name="&lt;init&gt;" desc="(BLcom/milaboratory/primitivio/Serializer;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/DefaultSerializersProviderImpl$CustomEnumSerializer" sourcefilename="DefaultSerializersProviderImpl.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;[Ljava/lang/Enum;)V" line="242"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Lcom/milaboratory/primitivio/PrimitivO;Ljava/lang/Object;)V" line="249"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Lcom/milaboratory/primitivio/PrimitivI;)Ljava/lang/Object;" line="254"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReference" desc="()Z" line="259"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handlesReference" desc="()Z" line="264"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/primitivio/PrimitivIOStateBuilder" sourcefilename="PrimitivIOStateBuilder.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="registerCustomSerializer" desc="(Ljava/lang/Class;Lcom/milaboratory/primitivio/Serializer;)V" line="29"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putKnownReference" desc="(Ljava/lang/Object;)V" line="34"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putKnownObject" desc="(Ljava/lang/Object;)V" line="39"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIState" desc="()Lcom/milaboratory/primitivio/PrimitivIState;" line="43"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOState" desc="()Lcom/milaboratory/primitivio/PrimitivOState;" line="47"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="92" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/primitivio/DefaultSerializersProviderImpl" sourcefilename="DefaultSerializersProviderImpl.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSerializer" desc="(Ljava/lang/Class;Lcom/milaboratory/primitivio/SerializersManager;)Lcom/milaboratory/primitivio/Serializer;" line="24"><counter type="INSTRUCTION" missed="19" covered="71"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="5" covered="17"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="74"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="5" covered="18"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/DefaultSerializersProviderImpl$UUIDSerializer" sourcefilename="DefaultSerializersProviderImpl.java"><method name="write" desc="(Lcom/milaboratory/primitivio/PrimitivO;Ljava/util/UUID;)V" line="271"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Lcom/milaboratory/primitivio/PrimitivI;)Ljava/util/UUID;" line="277"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReference" desc="()Z" line="284"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handlesReference" desc="()Z" line="289"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/primitivio/DefaultSerializersProviderImpl$StringSerializer" sourcefilename="DefaultSerializersProviderImpl.java"><method name="write" desc="(Lcom/milaboratory/primitivio/PrimitivO;Ljava/lang/String;)V" line="105"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Lcom/milaboratory/primitivio/PrimitivI;)Ljava/lang/String;" line="110"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReference" desc="()Z" line="115"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handlesReference" desc="()Z" line="120"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/PipeWriter" sourcefilename="PipeWriter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="26"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="30"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;)V" line="34"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/Object;)V" line="39"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="beforeClose" desc="()V" line="54"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/primitivio/PipeDataInputReader" sourcefilename="PipeDataInputReader.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Lcom/milaboratory/primitivio/PrimitivI;)V" line="11"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Lcom/milaboratory/primitivio/PrimitivI;J)V" line="14"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="22"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="take" desc="()Ljava/lang/Object;" line="27"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/primitivio/PrimitivIState" sourcefilename="PrimitivIState.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/primitivio/SerializersManager;Ljava/util/ArrayList;Ljava/util/ArrayList;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createPrimitivI" desc="()Lcom/milaboratory/primitivio/PrimitivI;" line="47"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createPrimitivI" desc="(Ljava/io/DataInput;)Lcom/milaboratory/primitivio/PrimitivI;" line="51"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createPrimitivI" desc="(Ljava/io/InputStream;)Lcom/milaboratory/primitivio/PrimitivI;" line="55"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="58"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="HasPrimitivIOState.java"/><sourcefile name="PrimitivIState.java"><line nr="31" mi="0" ci="14" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="7" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="18" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="58"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JSONSerializer.java"><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="1" cb="1"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="3" ci="6" mb="1" cb="1"/><line nr="67" mi="3" ci="3" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="40"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="14"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PrimitivI.java"><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="9" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="10" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="10" ci="0" mb="0" cb="0"/><line nr="81" mi="7" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="2" cb="0"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="11" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="1" cb="1"/><line nr="102" mi="6" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="1" cb="1"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="12" mb="0" cb="2"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="1" cb="1"/><line nr="120" mi="10" ci="0" mb="2" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="2"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="2"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="2"/><line nr="133" mi="0" ci="7" mb="0" cb="2"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="2"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="2"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="2"/><line nr="149" mi="0" ci="9" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="1" cb="1"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="9" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="1" cb="1"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="2"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="8" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="6" mb="0" cb="2"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="8" mb="0" cb="0"/><line nr="196" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="2"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="3" ci="0" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="0" cb="0"/><line nr="204" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="1" ci="0" mb="0" cb="0"/><line nr="212" mi="5" ci="0" mb="0" cb="0"/><line nr="213" mi="0" ci="1" mb="0" cb="0"/><line nr="214" mi="0" ci="1" mb="0" cb="0"/><line nr="219" mi="6" ci="0" mb="0" cb="0"/><line nr="220" mi="1" ci="0" mb="0" cb="0"/><line nr="221" mi="5" ci="0" mb="0" cb="0"/><line nr="222" mi="1" ci="0" mb="0" cb="0"/><line nr="223" mi="1" ci="0" mb="0" cb="0"/><line nr="228" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="1" ci="0" mb="0" cb="0"/><line nr="230" mi="5" ci="0" mb="0" cb="0"/><line nr="237" mi="4" ci="0" mb="0" cb="0"/><line nr="238" mi="1" ci="0" mb="0" cb="0"/><line nr="239" mi="5" ci="0" mb="0" cb="0"/><line nr="246" mi="0" ci="4" mb="0" cb="0"/><line nr="247" mi="1" ci="0" mb="0" cb="0"/><line nr="248" mi="5" ci="0" mb="0" cb="0"/><line nr="255" mi="4" ci="0" mb="0" cb="0"/><line nr="256" mi="1" ci="0" mb="0" cb="0"/><line nr="257" mi="5" ci="0" mb="0" cb="0"/><line nr="264" mi="4" ci="0" mb="0" cb="0"/><line nr="265" mi="1" ci="0" mb="0" cb="0"/><line nr="266" mi="5" ci="0" mb="0" cb="0"/><line nr="273" mi="4" ci="0" mb="0" cb="0"/><line nr="274" mi="1" ci="0" mb="0" cb="0"/><line nr="275" mi="5" ci="0" mb="0" cb="0"/><line nr="282" mi="4" ci="0" mb="0" cb="0"/><line nr="283" mi="1" ci="0" mb="0" cb="0"/><line nr="284" mi="5" ci="0" mb="0" cb="0"/><line nr="291" mi="0" ci="4" mb="0" cb="0"/><line nr="292" mi="1" ci="0" mb="0" cb="0"/><line nr="293" mi="5" ci="0" mb="0" cb="0"/><line nr="300" mi="0" ci="4" mb="0" cb="0"/><line nr="301" mi="1" ci="0" mb="0" cb="0"/><line nr="302" mi="5" ci="0" mb="0" cb="0"/><line nr="309" mi="0" ci="4" mb="0" cb="0"/><line nr="310" mi="1" ci="0" mb="0" cb="0"/><line nr="311" mi="5" ci="0" mb="0" cb="0"/><line nr="318" mi="4" ci="0" mb="0" cb="0"/><line nr="319" mi="1" ci="0" mb="0" cb="0"/><line nr="320" mi="5" ci="0" mb="0" cb="0"/><line nr="326" mi="4" ci="0" mb="0" cb="0"/><line nr="332" mi="0" ci="4" mb="0" cb="0"/><line nr="333" mi="1" ci="0" mb="0" cb="0"/><line nr="334" mi="5" ci="0" mb="0" cb="0"/><line nr="340" mi="0" ci="3" mb="1" cb="1"/><line nr="341" mi="1" ci="0" mb="0" cb="0"/><line nr="343" mi="0" ci="3" mb="0" cb="0"/><line nr="344" mi="0" ci="4" mb="1" cb="1"/><line nr="345" mi="0" ci="4" mb="0" cb="0"/><line nr="346" mi="1" ci="0" mb="0" cb="0"/><line nr="347" mi="5" ci="0" mb="0" cb="0"/><line nr="348" mi="0" ci="1" mb="0" cb="0"/><line nr="349" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="228" covered="326"/><counter type="BRANCH" missed="11" covered="29"/><counter type="LINE" missed="61" covered="88"/><counter type="COMPLEXITY" missed="24" covered="32"/><counter type="METHOD" missed="15" covered="21"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PrimitivOState.java"><line nr="38" mi="0" ci="14" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="11" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="88"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Util.java"><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="8" mb="0" cb="6"/><line nr="32" mi="0" ci="2" mb="0" cb="2"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="2"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="2"/><line nr="42" mi="0" ci="2" mb="0" cb="2"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="20" mb="0" cb="0"/><line nr="49" mi="0" ci="17" mb="0" cb="2"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="2"/><line nr="52" mi="0" ci="5" mb="1" cb="3"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="20" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="10" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="10" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="6" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="9" ci="0" mb="2" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="10" ci="0" mb="0" cb="0"/><line nr="86" mi="6" ci="0" mb="0" cb="0"/><line nr="91" mi="10" ci="0" mb="0" cb="0"/><line nr="92" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="7" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="2" cb="0"/><line nr="104" mi="7" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="11" ci="0" mb="2" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="2" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="2" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="8" mb="0" cb="0"/><line nr="143" mi="0" ci="10" mb="0" cb="0"/><line nr="147" mi="0" ci="8" mb="0" cb="0"/><line nr="151" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="192" covered="148"/><counter type="BRANCH" missed="11" covered="21"/><counter type="LINE" missed="42" covered="24"/><counter type="COMPLEXITY" missed="17" covered="15"/><counter type="METHOD" missed="11" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultSerializersProviderImpl.java"><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="2"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="2"/><line nr="27" mi="0" ci="3" mb="0" cb="2"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="1" cb="1"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="2" cb="0"/><line nr="32" mi="5" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="10" mb="1" cb="1"/><line nr="40" mi="0" ci="3" mb="0" cb="2"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="2"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="2"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="1" cb="1"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="1" cb="1"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="16" mb="0" cb="2"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="8" mb="0" cb="2"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="0" cb="0"/><line nr="180" mi="8" ci="0" mb="2" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="1" ci="0" mb="0" cb="0"/><line nr="186" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="8" ci="0" mb="2" cb="0"/><line nr="188" mi="5" ci="0" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="2" ci="0" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="6" mb="0" cb="0"/><line nr="210" mi="0" ci="10" mb="0" cb="0"/><line nr="211" mi="0" ci="1" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="221" mi="0" ci="6" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="2" ci="0" mb="0" cb="0"/><line nr="242" mi="2" ci="0" mb="0" cb="0"/><line nr="243" mi="3" ci="0" mb="0" cb="0"/><line nr="244" mi="3" ci="0" mb="0" cb="0"/><line nr="245" mi="1" ci="0" mb="0" cb="0"/><line nr="249" mi="5" ci="0" mb="0" cb="0"/><line nr="254" mi="6" ci="0" mb="0" cb="0"/><line nr="259" mi="2" ci="0" mb="0" cb="0"/><line nr="264" mi="2" ci="0" mb="0" cb="0"/><line nr="271" mi="4" ci="0" mb="0" cb="0"/><line nr="272" mi="4" ci="0" mb="0" cb="0"/><line nr="273" mi="1" ci="0" mb="0" cb="0"/><line nr="277" mi="3" ci="0" mb="0" cb="0"/><line nr="278" mi="3" ci="0" mb="0" cb="0"/><line nr="279" mi="6" ci="0" mb="0" cb="0"/><line nr="284" mi="2" ci="0" mb="0" cb="0"/><line nr="289" mi="2" ci="0" mb="0" cb="0"/><line nr="299" mi="0" ci="2" mb="0" cb="0"/><line nr="300" mi="0" ci="3" mb="0" cb="0"/><line nr="301" mi="0" ci="1" mb="0" cb="0"/><line nr="305" mi="0" ci="3" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="0"/><line nr="307" mi="0" ci="7" mb="0" cb="2"/><line nr="308" mi="0" ci="3" mb="1" cb="1"/><line nr="309" mi="6" ci="0" mb="0" cb="0"/><line nr="311" mi="0" ci="7" mb="0" cb="0"/><line nr="313" mi="0" ci="1" mb="0" cb="0"/><line nr="317" mi="0" ci="3" mb="0" cb="0"/><line nr="319" mi="0" ci="3" mb="1" cb="1"/><line nr="320" mi="5" ci="0" mb="0" cb="0"/><line nr="327" mi="0" ci="7" mb="0" cb="0"/><line nr="329" mi="0" ci="7" mb="0" cb="2"/><line nr="330" mi="0" ci="7" mb="0" cb="0"/><line nr="332" mi="0" ci="2" mb="0" cb="0"/><line nr="337" mi="0" ci="2" mb="0" cb="0"/><line nr="342" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="122" covered="280"/><counter type="BRANCH" missed="12" covered="26"/><counter type="LINE" missed="34" covered="78"/><counter type="COMPLEXITY" missed="23" covered="41"/><counter type="METHOD" missed="14" covered="31"/><counter type="CLASS" missed="3" covered="8"/></sourcefile><sourcefile name="CustomSerializerImpl.java"><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="11" mb="0" cb="2"/><line nr="30" mi="0" ci="8" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="2"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="1" cb="1"/><line nr="43" mi="12" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="1" cb="1"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="1" cb="1"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="107"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="3" covered="29"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="SerializersManager.java"><line nr="34" mi="0" ci="8" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="2"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="2"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="2"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="2"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="1" cb="1"/><line nr="71" mi="14" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="2"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="2"/><line nr="83" mi="0" ci="13" mb="0" cb="2"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="1" cb="1"/><line nr="93" mi="14" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="2"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="2"/><line nr="101" mi="0" ci="2" mb="1" cb="1"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="2"/><line nr="108" mi="0" ci="2" mb="1" cb="1"/><line nr="109" mi="14" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="1" cb="1"/><line nr="115" mi="0" ci="9" mb="0" cb="0"/><line nr="118" mi="0" ci="16" mb="0" cb="2"/><line nr="119" mi="0" ci="15" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="1" cb="1"/><line nr="124" mi="12" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="11" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="1" cb="1"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="2" cb="2"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="2"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="8" mb="0" cb="2"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="2"/><line nr="165" mi="0" ci="22" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="2"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="2"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="17" mb="0" cb="2"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="0" cb="2"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="65" covered="370"/><counter type="BRANCH" missed="9" covered="45"/><counter type="LINE" missed="7" covered="84"/><counter type="COMPLEXITY" missed="9" covered="30"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypeSerializationHelper.java"><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PReader.java"><line nr="26" mi="12" ci="0" mb="0" cb="0"/><line nr="27" mi="6" ci="0" mb="0" cb="0"/><line nr="32" mi="6" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="10" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="42" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="6" ci="0" mb="0" cb="0"/><line nr="51" mi="7" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="2" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="2" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="11" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="6" ci="0" mb="2" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="126" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PrimitivIOStateBuilder.java"><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="5" ci="0" mb="0" cb="0"/><line nr="25" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="6" ci="0" mb="0" cb="0"/><line nr="29" mi="5" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="10" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="9" ci="0" mb="2" cb="0"/><line nr="49" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="2" cb="0"/><line nr="53" mi="8" ci="0" mb="0" cb="0"/><line nr="55" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="92" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PipeDataInputReader.java"><line nr="11" mi="5" ci="0" mb="0" cb="0"/><line nr="12" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="2" ci="0" mb="0" cb="0"/><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="1" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="27" mi="5" ci="0" mb="2" cb="0"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="6" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PrimitivO.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="6" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="9" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="2" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="10" ci="0" mb="0" cb="0"/><line nr="127" mi="7" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="2" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="11" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="2"/><line nr="146" mi="0" ci="8" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="8" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="1" cb="1"/><line nr="157" mi="6" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="8" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="10" mb="1" cb="3"/><line nr="167" mi="0" ci="16" mb="0" cb="2"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="10" mb="0" cb="2"/><line nr="171" mi="0" ci="6" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="1" cb="1"/><line nr="177" mi="10" ci="0" mb="2" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="6" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="1" cb="1"/><line nr="199" mi="3" ci="0" mb="2" cb="0"/><line nr="200" mi="3" ci="0" mb="0" cb="0"/><line nr="202" mi="5" ci="0" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="2"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="2"/><line nr="212" mi="0" ci="14" mb="0" cb="4"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="219" mi="0" ci="8" mb="0" cb="2"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="1" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="7" mb="0" cb="2"/><line nr="229" mi="0" ci="6" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="0" cb="2"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="6" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="2"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="240" mi="0" ci="1" mb="0" cb="0"/><line nr="243" mi="3" ci="0" mb="0" cb="0"/><line nr="244" mi="1" ci="0" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="251" mi="0" ci="7" mb="0" cb="0"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="255" mi="0" ci="9" mb="0" cb="0"/><line nr="256" mi="0" ci="1" mb="0" cb="0"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="260" mi="0" ci="1" mb="0" cb="0"/><line nr="263" mi="0" ci="6" mb="0" cb="0"/><line nr="264" mi="0" ci="1" mb="0" cb="0"/><line nr="267" mi="0" ci="4" mb="0" cb="0"/><line nr="268" mi="0" ci="1" mb="0" cb="0"/><line nr="272" mi="0" ci="5" mb="0" cb="0"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="4" mb="0" cb="2"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="0" ci="3" mb="0" cb="0"/><line nr="277" mi="0" ci="4" mb="0" cb="2"/><line nr="278" mi="0" ci="1" mb="0" cb="0"/><line nr="281" mi="0" ci="2" mb="0" cb="2"/><line nr="282" mi="0" ci="4" mb="0" cb="0"/><line nr="284" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="0" ci="1" mb="0" cb="0"/><line nr="290" mi="4" ci="0" mb="0" cb="0"/><line nr="291" mi="1" ci="0" mb="0" cb="0"/><line nr="292" mi="5" ci="0" mb="0" cb="0"/><line nr="293" mi="1" ci="0" mb="0" cb="0"/><line nr="294" mi="1" ci="0" mb="0" cb="0"/><line nr="299" mi="0" ci="4" mb="0" cb="0"/><line nr="300" mi="1" ci="0" mb="0" cb="0"/><line nr="301" mi="5" ci="0" mb="0" cb="0"/><line nr="302" mi="0" ci="1" mb="0" cb="0"/><line nr="303" mi="0" ci="1" mb="0" cb="0"/><line nr="308" mi="6" ci="0" mb="0" cb="0"/><line nr="309" mi="1" ci="0" mb="0" cb="0"/><line nr="310" mi="5" ci="0" mb="0" cb="0"/><line nr="311" mi="1" ci="0" mb="0" cb="0"/><line nr="312" mi="1" ci="0" mb="0" cb="0"/><line nr="317" mi="4" ci="0" mb="0" cb="0"/><line nr="318" mi="1" ci="0" mb="0" cb="0"/><line nr="319" mi="5" ci="0" mb="0" cb="0"/><line nr="320" mi="1" ci="0" mb="0" cb="0"/><line nr="321" mi="1" ci="0" mb="0" cb="0"/><line nr="326" mi="0" ci="4" mb="0" cb="0"/><line nr="327" mi="1" ci="0" mb="0" cb="0"/><line nr="328" mi="5" ci="0" mb="0" cb="0"/><line nr="329" mi="0" ci="1" mb="0" cb="0"/><line nr="330" mi="0" ci="1" mb="0" cb="0"/><line nr="335" mi="4" ci="0" mb="0" cb="0"/><line nr="336" mi="1" ci="0" mb="0" cb="0"/><line nr="337" mi="5" ci="0" mb="0" cb="0"/><line nr="338" mi="1" ci="0" mb="0" cb="0"/><line nr="339" mi="1" ci="0" mb="0" cb="0"/><line nr="344" mi="4" ci="0" mb="0" cb="0"/><line nr="345" mi="1" ci="0" mb="0" cb="0"/><line nr="346" mi="5" ci="0" mb="0" cb="0"/><line nr="347" mi="1" ci="0" mb="0" cb="0"/><line nr="348" mi="1" ci="0" mb="0" cb="0"/><line nr="353" mi="0" ci="4" mb="0" cb="0"/><line nr="354" mi="1" ci="0" mb="0" cb="0"/><line nr="355" mi="5" ci="0" mb="0" cb="0"/><line nr="356" mi="0" ci="1" mb="0" cb="0"/><line nr="357" mi="0" ci="1" mb="0" cb="0"/><line nr="362" mi="0" ci="4" mb="0" cb="0"/><line nr="363" mi="1" ci="0" mb="0" cb="0"/><line nr="364" mi="5" ci="0" mb="0" cb="0"/><line nr="365" mi="0" ci="1" mb="0" cb="0"/><line nr="366" mi="0" ci="1" mb="0" cb="0"/><line nr="371" mi="0" ci="4" mb="0" cb="0"/><line nr="372" mi="1" ci="0" mb="0" cb="0"/><line nr="373" mi="5" ci="0" mb="0" cb="0"/><line nr="374" mi="0" ci="1" mb="0" cb="0"/><line nr="375" mi="0" ci="1" mb="0" cb="0"/><line nr="380" mi="4" ci="0" mb="0" cb="0"/><line nr="381" mi="1" ci="0" mb="0" cb="0"/><line nr="382" mi="5" ci="0" mb="0" cb="0"/><line nr="383" mi="1" ci="0" mb="0" cb="0"/><line nr="384" mi="1" ci="0" mb="0" cb="0"/><line nr="389" mi="4" ci="0" mb="0" cb="0"/><line nr="390" mi="1" ci="0" mb="0" cb="0"/><line nr="391" mi="5" ci="0" mb="0" cb="0"/><line nr="392" mi="1" ci="0" mb="0" cb="0"/><line nr="393" mi="1" ci="0" mb="0" cb="0"/><line nr="398" mi="4" ci="0" mb="0" cb="0"/><line nr="399" mi="1" ci="0" mb="0" cb="0"/><line nr="400" mi="5" ci="0" mb="0" cb="0"/><line nr="401" mi="1" ci="0" mb="0" cb="0"/><line nr="402" mi="1" ci="0" mb="0" cb="0"/><line nr="407" mi="0" ci="4" mb="0" cb="0"/><line nr="408" mi="1" ci="0" mb="0" cb="0"/><line nr="409" mi="5" ci="0" mb="0" cb="0"/><line nr="410" mi="0" ci="1" mb="0" cb="0"/><line nr="411" mi="0" ci="1" mb="0" cb="0"/><line nr="415" mi="0" ci="3" mb="1" cb="1"/><line nr="416" mi="1" ci="0" mb="0" cb="0"/><line nr="418" mi="0" ci="3" mb="0" cb="0"/><line nr="419" mi="0" ci="4" mb="1" cb="1"/><line nr="420" mi="0" ci="4" mb="0" cb="0"/><line nr="421" mi="1" ci="0" mb="0" cb="0"/><line nr="422" mi="5" ci="0" mb="0" cb="0"/><line nr="423" mi="0" ci="1" mb="0" cb="0"/><line nr="424" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="236" covered="383"/><counter type="BRANCH" missed="14" covered="36"/><counter type="LINE" missed="75" covered="111"/><counter type="COMPLEXITY" missed="24" covered="42"/><counter type="METHOD" missed="14" covered="27"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PipeWriter.java"><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="2" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="2" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultSerializersProvider.java"/><sourcefile name="Serializer.java"/><sourcefile name="PipeReader.java"><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="2" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PWriter.java"><line nr="23" mi="6" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="10" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="10" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="6" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="2" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="2" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="2" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PrimitivIO.java"><line nr="26" mi="0" ci="7" mb="0" cb="0"/><line nr="29" mi="5" ci="0" mb="0" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="9"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="1338" covered="1809"/><counter type="BRANCH" missed="86" covered="166"/><counter type="LINE" missed="356" covered="457"/><counter type="COMPLEXITY" missed="160" covered="189"/><counter type="METHOD" missed="100" covered="123"/><counter type="CLASS" missed="10" covered="19"/></package><package name="com/milaboratory/core/alignment/blast"><class name="com/milaboratory/core/alignment/blast/NBlastHitExt" sourcefilename="NBlastHitExt.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/Alignment;DDDLcom/milaboratory/core/Range;Ljava/lang/String;Ljava/lang/String;)V" line="9"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/blast/BlastAlignerExt" sourcefilename="BlastAlignerExt.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/blast/BlastDB;)V" line="9"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/blast/BlastDB;Lcom/milaboratory/core/alignment/blast/BlastAlignerParameters;)V" line="13"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createHit" desc="(Lcom/milaboratory/core/alignment/Alignment;DDDLcom/milaboratory/core/Range;Ljava/lang/String;Ljava/lang/String;)Lcom/milaboratory/core/alignment/blast/BlastHitExt;" line="18"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/blast/BlastAlignerExtAbstract" sourcefilename="BlastAlignerExtAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/blast/BlastDB;)V" line="38"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/blast/BlastDB;Lcom/milaboratory/core/alignment/blast/BlastAlignerParameters;)V" line="35"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setConcurrentBlastProcessCount" desc="(I)V" line="55"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="align" desc="(Lcc/redberry/pipe/OutputPort;Lcom/milaboratory/core/alignment/batch/SequenceExtractor;)Lcc/redberry/pipe/OutputPort;" line="60"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="align" desc="(Lcc/redberry/pipe/OutputPort;)Lcc/redberry/pipe/OutputPort;" line="65"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/blast/Blast" sourcefilename="Blast.java"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setBlastPath" desc="(Ljava/lang/String;)V" line="45"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBlastAlphabet" desc="(Lcom/milaboratory/core/sequence/Alphabet;)Ljava/lang/String;" line="56"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBlastCommand" desc="(Lcom/milaboratory/core/sequence/Alphabet;)Ljava/lang/String;" line="64"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessBuilder" desc="(Ljava/util/List;)Ljava/lang/ProcessBuilder;" line="72"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProcessBuilder" desc="([Ljava/lang/String;)Ljava/lang/ProcessBuilder;" line="77"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBlastCommand" desc="(Ljava/lang/String;Z)Ljava/lang/String;" line="82"><counter type="INSTRUCTION" missed="18" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBlastAvailable" desc="()Z" line="94"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createPathFor" desc="(Ljava/lang/String;)Ljava/lang/String;" line="98"><counter type="INSTRUCTION" missed="18" covered="17"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkCmd" desc="(Ljava/lang/String;)Z" line="110"><counter type="INSTRUCTION" missed="8" covered="17"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="5" covered="20"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="130" covered="81"/><counter type="BRANCH" missed="20" covered="8"/><counter type="LINE" missed="28" covered="19"/><counter type="COMPLEXITY" missed="19" covered="6"/><counter type="METHOD" missed="6" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/blast/AABlastHit" sourcefilename="AABlastHit.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/Alignment;Ljava/lang/Object;Lcom/milaboratory/core/alignment/blast/BlastHit;)V" line="9"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/Alignment;Ljava/lang/Object;DDDLcom/milaboratory/core/Range;Ljava/lang/String;Ljava/lang/String;)V" line="13"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/blast/BlastAlignerAbstract" sourcefilename="BlastAlignerAbstract.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/blast/BlastAlignerParameters;)V" line="17"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setConcurrentBlastProcessCount" desc="(I)V" line="44"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="align" desc="(Lcc/redberry/pipe/OutputPort;Lcom/milaboratory/core/alignment/batch/SequenceExtractor;)Lcc/redberry/pipe/OutputPort;" line="49"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="align" desc="(Lcc/redberry/pipe/OutputPort;)Lcc/redberry/pipe/OutputPort;" line="56"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ensureInit" desc="()V" line="62"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addReference" desc="(Lcom/milaboratory/core/sequence/Sequence;Ljava/lang/Object;)V" line="72"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="127" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/blast/BlastAlignerAbstract$ResultsConverter" sourcefilename="BlastAlignerAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/blast/BlastAlignerAbstract;)V" line="90"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="process" desc="(Lcom/milaboratory/core/alignment/batch/PipedAlignmentResult;)Lcom/milaboratory/core/alignment/batch/PipedAlignmentResult;" line="93"><counter type="INSTRUCTION" missed="72" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="78" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/blast/AABlastHitExt" sourcefilename="AABlastHitExt.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/Alignment;DDDLcom/milaboratory/core/Range;Ljava/lang/String;Ljava/lang/String;)V" line="9"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/blast/BlastAlignerExtAbstract$BlastResultsFetcher" sourcefilename="BlastAlignerExtAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/blast/BlastAlignerExtAbstract;Lcc/redberry/pipe/InputPort;Ljava/util/concurrent/ConcurrentMap;Ljava/io/InputStream;)V" line="148"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="()V" line="158"><counter type="INSTRUCTION" missed="106" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseLine" desc="(Ljava/lang/String;)Lcom/milaboratory/core/alignment/blast/BlastHitExt;" line="199"><counter type="INSTRUCTION" missed="127" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="254" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="51" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/blast/BlastAlignerExtAbstract$BlastWorker" sourcefilename="BlastAlignerExtAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/blast/BlastAlignerExtAbstract;Lcc/redberry/pipe/OutputPort;Lcom/milaboratory/core/alignment/batch/SequenceExtractor;)V" line="75"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="85"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="take" desc="()Lcom/milaboratory/core/alignment/batch/PipedAlignmentResult;" line="91"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/blast/AABlastAligner" sourcefilename="AABlastAligner.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/blast/BlastAlignerParameters;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createHit" desc="(Lcom/milaboratory/core/alignment/Alignment;Ljava/lang/Object;Lcom/milaboratory/core/alignment/blast/BlastHit;)Lcom/milaboratory/core/alignment/blast/AABlastHit;" line="16"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/blast/NBlastAlignerExt" sourcefilename="NBlastAlignerExt.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/blast/BlastDB;)V" line="9"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/blast/BlastDB;Lcom/milaboratory/core/alignment/blast/BlastAlignerParameters;)V" line="13"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createHit" desc="(Lcom/milaboratory/core/alignment/Alignment;DDDLcom/milaboratory/core/Range;Ljava/lang/String;Ljava/lang/String;)Lcom/milaboratory/core/alignment/blast/NBlastHitExt;" line="19"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/blast/BlastDB$LineMatch" sourcefilename="BlastDB.java"><method name="&lt;init&gt;" desc="(ILjava/util/regex/Matcher;)V" line="205"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/blast/BlastAlignerParameters" sourcefilename="BlastAlignerParameters.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumThreads" desc="()I" line="20"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setNumThreads" desc="(I)V" line="24"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumAlignments" desc="()I" line="28"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setNumAlignments" desc="(I)V" line="32"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBatchSize" desc="()I" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setBatchSize" desc="(I)V" line="40"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBlastTask" desc="()Lcom/milaboratory/core/alignment/blast/BlastTask;" line="44"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setBlastTask" desc="(Lcom/milaboratory/core/alignment/blast/BlastTask;)V" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEValue" desc="()D" line="52"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setEValue" desc="(D)V" line="56"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWordSize" desc="()I" line="60"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setWordSize" desc="(I)V" line="64"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGapOpen" desc="()I" line="68"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setGapOpen" desc="(I)V" line="72"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGapExtend" desc="()I" line="76"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setGapExtend" desc="(I)V" line="80"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMatrix" desc="()Ljava/lang/String;" line="84"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMatrix" desc="(Ljava/lang/String;)V" line="88"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPenalty" desc="()I" line="92"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPenalty" desc="(I)V" line="96"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReward" desc="()I" line="100"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setReward" desc="(I)V" line="104"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="chechAlphabet" desc="(Lcom/milaboratory/core/sequence/Alphabet;)V" line="108"><counter type="INSTRUCTION" missed="23" covered="4"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEnvVariablesTo" desc="(Ljava/lang/ProcessBuilder;)V" line="113"><counter type="INSTRUCTION" missed="8" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addArgumentsTo" desc="(Ljava/util/List;)V" line="118"><counter type="INSTRUCTION" missed="159" covered="39"/><counter type="BRANCH" missed="10" covered="10"/><counter type="LINE" missed="10" covered="11"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="267" covered="84"/><counter type="BRANCH" missed="14" covered="12"/><counter type="LINE" missed="45" covered="23"/><counter type="COMPLEXITY" missed="35" covered="4"/><counter type="METHOD" missed="22" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/blast/BlastStrand" sourcefilename="BlastStrand.java"><method name="getOptionValue" desc="()Ljava/lang/String;" line="7"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/blast/BlastDB" sourcefilename="BlastDB.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;JJLcom/milaboratory/core/sequence/Alphabet;Ljava/util/List;Z)V" line="31"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retriveSequenceById" desc="(Ljava/lang/String;)Lcom/milaboratory/core/sequence/Sequence;" line="43"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAlphabet" desc="()Lcom/milaboratory/core/sequence/Alphabet;" line="58"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTitle" desc="()Ljava/lang/String;" line="66"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVolumes" desc="()Ljava/util/List;" line="70"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRecordsCount" desc="()J" line="74"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLettersCount" desc="()J" line="78"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLinePatterns" desc="()[Ljava/util/regex/Pattern;" line="82"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="finalize" desc="()V" line="94"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/String;)Lcom/milaboratory/core/alignment/blast/BlastDB;" line="116"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/String;Z)Lcom/milaboratory/core/alignment/blast/BlastDB;" line="121"><counter type="INSTRUCTION" missed="243" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="36" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="85"><counter type="INSTRUCTION" missed="99" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="498" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="77" covered="0"/><counter type="COMPLEXITY" missed="27" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/blast/NBlastHit" sourcefilename="NBlastHit.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/Alignment;Ljava/lang/Object;Lcom/milaboratory/core/alignment/blast/BlastHit;)V" line="9"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/Alignment;Ljava/lang/Object;DDDLcom/milaboratory/core/Range;Ljava/lang/String;Ljava/lang/String;)V" line="13"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/blast/BlastAligner" sourcefilename="BlastAligner.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/blast/BlastAlignerParameters;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createHit" desc="(Lcom/milaboratory/core/alignment/Alignment;Ljava/lang/Object;Lcom/milaboratory/core/alignment/blast/BlastHit;)Lcom/milaboratory/core/alignment/blast/BlastHit;" line="16"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/blast/BlastHitExt" sourcefilename="BlastHitExt.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/Alignment;DDDLcom/milaboratory/core/Range;Ljava/lang/String;Ljava/lang/String;)V" line="9"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTitle" desc="()Ljava/lang/String;" line="14"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/blast/BlastAlignerExtAbstract$BlastWorkerSingle" sourcefilename="BlastAlignerExtAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/blast/BlastAlignerExtAbstract;Lcc/redberry/pipe/OutputPort;Lcom/milaboratory/core/alignment/batch/SequenceExtractor;Lcc/redberry/pipe/InputPort;)V" line="100"><counter type="INSTRUCTION" missed="103" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="134"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="114" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/blast/AABlastAlignerExt" sourcefilename="AABlastAlignerExt.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/blast/BlastDB;)V" line="9"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/blast/BlastDB;Lcom/milaboratory/core/alignment/blast/BlastAlignerParameters;)V" line="13"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createHit" desc="(Lcom/milaboratory/core/alignment/Alignment;DDDLcom/milaboratory/core/Range;Ljava/lang/String;Ljava/lang/String;)Lcom/milaboratory/core/alignment/blast/AABlastHitExt;" line="19"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/blast/NBlastAligner" sourcefilename="NBlastAligner.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/blast/BlastAlignerParameters;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createHit" desc="(Lcom/milaboratory/core/alignment/Alignment;Ljava/lang/Object;Lcom/milaboratory/core/alignment/blast/BlastHit;)Lcom/milaboratory/core/alignment/blast/NBlastHit;" line="16"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/blast/BlastAlignerExtAbstract$BlastSequencePusher" sourcefilename="BlastAlignerExtAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/blast/BlastAlignerExtAbstract;Lcc/redberry/pipe/OutputPort;Lcom/milaboratory/core/alignment/batch/SequenceExtractor;Ljava/util/concurrent/ConcurrentMap;Ljava/io/OutputStream;)V" line="234"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="()V" line="253"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/blast/BlastDBBuilder" sourcefilename="BlastDBBuilder.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTmpDBPath" desc="()Ljava/nio/file/Path;" line="21"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIdFasta" desc="(I)Ljava/lang/String;" line="27"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIdKey" desc="(I)Ljava/lang/String;" line="31"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="(Ljava/util/List;)Lcom/milaboratory/core/alignment/blast/BlastDB;" line="35"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="(Ljava/util/List;Z)Lcom/milaboratory/core/alignment/blast/BlastDB;" line="39"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="(Ljava/util/List;ZLjava/nio/file/Path;Z)Lcom/milaboratory/core/alignment/blast/BlastDB;" line="45"><counter type="INSTRUCTION" missed="143" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="186" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/blast/BlastTask" sourcefilename="BlastTask.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILcom/milaboratory/core/sequence/Alphabet;Ljava/lang/String;)V" line="20"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="100" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="111" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/blast/BlastHit" sourcefilename="BlastHit.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/Alignment;Ljava/lang/Object;Lcom/milaboratory/core/alignment/blast/BlastHit;)V" line="14"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/Alignment;Ljava/lang/Object;DDDLcom/milaboratory/core/Range;Ljava/lang/String;Ljava/lang/String;)V" line="25"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSubjectRange" desc="()Lcom/milaboratory/core/Range;" line="35"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getScore" desc="()D" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBitScore" desc="()D" line="43"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEValue" desc="()D" line="47"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSubjectId" desc="()Ljava/lang/String;" line="51"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSubjectTitle" desc="()Ljava/lang/String;" line="55"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="60"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="102" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="BlastAlignerExt.java"><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="10" mi="1" ci="0" mb="0" cb="0"/><line nr="13" mi="4" ci="0" mb="0" cb="0"/><line nr="14" mi="1" ci="0" mb="0" cb="0"/><line nr="18" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AABlastHit.java"><line nr="9" mi="5" ci="0" mb="0" cb="0"/><line nr="10" mi="1" ci="0" mb="0" cb="0"/><line nr="13" mi="10" ci="0" mb="0" cb="0"/><line nr="14" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AABlastAlignerExt.java"><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="10" mi="1" ci="0" mb="0" cb="0"/><line nr="13" mi="4" ci="0" mb="0" cb="0"/><line nr="14" mi="1" ci="0" mb="0" cb="0"/><line nr="19" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BlastHit.java"><line nr="14" mi="4" ci="0" mb="0" cb="0"/><line nr="15" mi="4" ci="0" mb="0" cb="0"/><line nr="16" mi="4" ci="0" mb="0" cb="0"/><line nr="17" mi="4" ci="0" mb="0" cb="0"/><line nr="18" mi="4" ci="0" mb="0" cb="0"/><line nr="19" mi="4" ci="0" mb="0" cb="0"/><line nr="20" mi="4" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="27" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="102" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BlastAlignerParameters.java"><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="9" mb="0" cb="0"/><line nr="15" mi="0" ci="9" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="3" mb="3" cb="1"/><line nr="109" mi="18" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="1" cb="1"/><line nr="114" mi="8" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="1" cb="1"/><line nr="119" mi="16" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="1" cb="1"/><line nr="121" mi="16" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="1" cb="1"/><line nr="123" mi="16" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="1" cb="1"/><line nr="125" mi="16" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="1" cb="1"/><line nr="127" mi="16" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="1" cb="1"/><line nr="129" mi="16" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="1" cb="1"/><line nr="131" mi="16" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="1" cb="1"/><line nr="133" mi="16" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="1" cb="1"/><line nr="135" mi="16" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="1" cb="1"/><line nr="137" mi="15" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="267" covered="84"/><counter type="BRANCH" missed="14" covered="12"/><counter type="LINE" missed="45" covered="23"/><counter type="COMPLEXITY" missed="35" covered="4"/><counter type="METHOD" missed="22" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AABlastHitExt.java"><line nr="9" mi="9" ci="0" mb="0" cb="0"/><line nr="10" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NBlastHitExt.java"><line nr="9" mi="9" ci="0" mb="0" cb="0"/><line nr="10" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NBlastHit.java"><line nr="9" mi="5" ci="0" mb="0" cb="0"/><line nr="10" mi="1" ci="0" mb="0" cb="0"/><line nr="13" mi="10" ci="0" mb="0" cb="0"/><line nr="14" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BlastDBBuilder.java"><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="2" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="11" ci="0" mb="0" cb="0"/><line nr="31" mi="9" ci="0" mb="0" cb="0"/><line nr="35" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="2" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="2" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="35" ci="0" mb="0" cb="0"/><line nr="59" mi="14" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="8" ci="0" mb="2" cb="0"/><line nr="63" mi="8" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="2" cb="0"/><line nr="67" mi="12" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="186" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AABlastAligner.java"><line nr="7" mi="2" ci="0" mb="0" cb="0"/><line nr="8" mi="1" ci="0" mb="0" cb="0"/><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="1" ci="0" mb="0" cb="0"/><line nr="16" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Blast.java"><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="1" cb="1"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="8" mb="1" cb="1"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="2" cb="0"/><line nr="46" mi="9" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="2" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="2" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="2" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="2" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="10" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="2"/><line nr="85" mi="0" ci="8" mb="0" cb="0"/><line nr="87" mi="4" ci="2" mb="3" cb="1"/><line nr="88" mi="14" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="2" ci="8" mb="1" cb="1"/><line nr="98" mi="0" ci="9" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="1" cb="1"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="14" ci="3" mb="3" cb="1"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="14" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="130" covered="81"/><counter type="BRANCH" missed="20" covered="8"/><counter type="LINE" missed="28" covered="19"/><counter type="COMPLEXITY" missed="19" covered="6"/><counter type="METHOD" missed="6" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BlastDB.java"><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="26" ci="0" mb="0" cb="0"/><line nr="44" mi="8" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="2" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="2" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="38" ci="0" mb="0" cb="0"/><line nr="89" mi="38" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="2" cb="0"/><line nr="95" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="20" ci="0" mb="2" cb="0"/><line nr="98" mi="17" ci="0" mb="2" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="6" ci="0" mb="0" cb="0"/><line nr="110" mi="5" ci="0" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="20" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="6" ci="0" mb="0" cb="0"/><line nr="124" mi="6" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="2" cb="0"/><line nr="126" mi="12" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="8" ci="0" mb="2" cb="0"/><line nr="157" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="6" ci="0" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="2" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="8" ci="0" mb="0" cb="0"/><line nr="163" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="2" cb="0"/><line nr="167" mi="1" ci="0" mb="0" cb="0"/><line nr="169" mi="4" ci="0" mb="2" cb="0"/><line nr="170" mi="14" ci="0" mb="0" cb="0"/><line nr="172" mi="7" ci="0" mb="0" cb="0"/><line nr="173" mi="11" ci="0" mb="0" cb="0"/><line nr="174" mi="11" ci="0" mb="0" cb="0"/><line nr="176" mi="14" ci="0" mb="0" cb="0"/><line nr="177" mi="8" ci="0" mb="2" cb="0"/><line nr="178" mi="9" ci="0" mb="0" cb="0"/><line nr="180" mi="5" ci="0" mb="0" cb="0"/><line nr="184" mi="15" ci="0" mb="0" cb="0"/><line nr="185" mi="15" ci="0" mb="0" cb="0"/><line nr="187" mi="8" ci="0" mb="4" cb="0"/><line nr="188" mi="5" ci="0" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="2" cb="0"/><line nr="191" mi="3" ci="0" mb="0" cb="0"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="11" ci="0" mb="0" cb="0"/><line nr="196" mi="1" ci="0" mb="0" cb="0"/><line nr="197" mi="5" ci="0" mb="0" cb="0"/><line nr="205" mi="2" ci="0" mb="0" cb="0"/><line nr="206" mi="3" ci="0" mb="0" cb="0"/><line nr="207" mi="3" ci="0" mb="0" cb="0"/><line nr="208" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="507" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="81" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="BlastAligner.java"><line nr="7" mi="2" ci="0" mb="0" cb="0"/><line nr="8" mi="1" ci="0" mb="0" cb="0"/><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="1" ci="0" mb="0" cb="0"/><line nr="16" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BlastAlignerExtAbstract.java"><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="9" ci="0" mb="2" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="0" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="7" ci="0" mb="2" cb="0"/><line nr="80" mi="13" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="17" ci="0" mb="2" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="21" ci="0" mb="0" cb="0"/><line nr="111" mi="10" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="10" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="9" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="2" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="9" ci="0" mb="0" cb="0"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="6" ci="0" mb="2" cb="0"/><line nr="164" mi="4" ci="0" mb="2" cb="0"/><line nr="165" mi="10" ci="0" mb="0" cb="0"/><line nr="166" mi="6" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="2" cb="0"/><line nr="168" mi="6" ci="0" mb="0" cb="0"/><line nr="169" mi="5" ci="0" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="2" cb="0"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="5" ci="0" mb="2" cb="0"/><line nr="173" mi="2" ci="0" mb="2" cb="0"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="6" ci="0" mb="0" cb="0"/><line nr="179" mi="6" ci="0" mb="4" cb="0"/><line nr="180" mi="2" ci="0" mb="2" cb="0"/><line nr="181" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="8" ci="0" mb="0" cb="0"/><line nr="185" mi="2" ci="0" mb="0" cb="0"/><line nr="186" mi="3" ci="0" mb="0" cb="0"/><line nr="189" mi="1" ci="0" mb="0" cb="0"/><line nr="190" mi="5" ci="0" mb="0" cb="0"/><line nr="193" mi="4" ci="0" mb="0" cb="0"/><line nr="195" mi="1" ci="0" mb="0" cb="0"/><line nr="199" mi="4" ci="0" mb="0" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="5" ci="0" mb="0" cb="0"/><line nr="202" mi="5" ci="0" mb="0" cb="0"/><line nr="203" mi="5" ci="0" mb="0" cb="0"/><line nr="204" mi="5" ci="0" mb="0" cb="0"/><line nr="205" mi="5" ci="0" mb="0" cb="0"/><line nr="206" mi="5" ci="0" mb="0" cb="0"/><line nr="207" mi="5" ci="0" mb="0" cb="0"/><line nr="208" mi="5" ci="0" mb="0" cb="0"/><line nr="209" mi="5" ci="0" mb="0" cb="0"/><line nr="210" mi="5" ci="0" mb="0" cb="0"/><line nr="211" mi="8" ci="0" mb="0" cb="0"/><line nr="214" mi="12" ci="0" mb="0" cb="0"/><line nr="217" mi="12" ci="0" mb="0" cb="0"/><line nr="218" mi="12" ci="0" mb="0" cb="0"/><line nr="219" mi="3" ci="0" mb="0" cb="0"/><line nr="222" mi="10" ci="0" mb="0" cb="0"/><line nr="225" mi="10" ci="0" mb="0" cb="0"/><line nr="226" mi="4" ci="0" mb="0" cb="0"/><line nr="234" mi="5" ci="0" mb="0" cb="0"/><line nr="242" mi="5" ci="0" mb="0" cb="0"/><line nr="243" mi="3" ci="0" mb="0" cb="0"/><line nr="244" mi="3" ci="0" mb="0" cb="0"/><line nr="245" mi="3" ci="0" mb="0" cb="0"/><line nr="246" mi="7" ci="0" mb="0" cb="0"/><line nr="247" mi="1" ci="0" mb="0" cb="0"/><line nr="253" mi="6" ci="0" mb="2" cb="0"/><line nr="254" mi="5" ci="0" mb="0" cb="0"/><line nr="255" mi="11" ci="0" mb="0" cb="0"/><line nr="256" mi="6" ci="0" mb="0" cb="0"/><line nr="257" mi="5" ci="0" mb="0" cb="0"/><line nr="258" mi="1" ci="0" mb="0" cb="0"/><line nr="260" mi="3" ci="0" mb="0" cb="0"/><line nr="261" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="549" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="113" covered="0"/><counter type="COMPLEXITY" missed="29" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="5" covered="0"/></sourcefile><sourcefile name="BlastTask.java"><line nr="7" mi="36" ci="0" mb="0" cb="0"/><line nr="8" mi="8" ci="0" mb="0" cb="0"/><line nr="9" mi="8" ci="0" mb="0" cb="0"/><line nr="10" mi="8" ci="0" mb="0" cb="0"/><line nr="11" mi="8" ci="0" mb="0" cb="0"/><line nr="12" mi="8" ci="0" mb="0" cb="0"/><line nr="13" mi="8" ci="0" mb="0" cb="0"/><line nr="14" mi="8" ci="0" mb="0" cb="0"/><line nr="15" mi="8" ci="0" mb="0" cb="0"/><line nr="20" mi="4" ci="0" mb="0" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="111" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NBlastAlignerExt.java"><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="10" mi="1" ci="0" mb="0" cb="0"/><line nr="13" mi="4" ci="0" mb="0" cb="0"/><line nr="14" mi="1" ci="0" mb="0" cb="0"/><line nr="19" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BlastStrand.java"><line nr="3" mi="16" ci="0" mb="0" cb="0"/><line nr="4" mi="18" ci="0" mb="0" cb="0"/><line nr="7" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NBlastAligner.java"><line nr="7" mi="2" ci="0" mb="0" cb="0"/><line nr="8" mi="1" ci="0" mb="0" cb="0"/><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="1" ci="0" mb="0" cb="0"/><line nr="16" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BlastHitExt.java"><line nr="9" mi="10" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BlastAlignerAbstract.java"><line nr="17" mi="5" ci="0" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="19" mi="5" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="33" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="6" ci="0" mb="0" cb="0"/><line nr="51" mi="8" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="8" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="2" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="9" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="2" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><line nr="82" mi="6" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><line nr="93" mi="7" ci="0" mb="0" cb="0"/><line nr="94" mi="11" ci="0" mb="2" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="7" ci="0" mb="0" cb="0"/><line nr="97" mi="6" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="101" mi="8" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="9" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="205" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="46" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="2266" covered="165"/><counter type="BRANCH" missed="106" covered="20"/><counter type="LINE" missed="430" covered="42"/><counter type="COMPLEXITY" missed="175" covered="10"/><counter type="METHOD" missed="113" covered="9"/><counter type="CLASS" missed="24" covered="2"/></package><package name="org/apache/commons/io/filefilter"><class name="org/apache/commons/io/filefilter/PrefixFileFilter" sourcefilename="PrefixFileFilter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="61"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V" line="73"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;)V" line="91"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V" line="103"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="120"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V" line="133"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="149"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="167"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="182"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="197" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/filefilter/HiddenFileFilter" sourcefilename="HiddenFileFilter.java"><method name="&lt;init&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="76"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/filefilter/WildcardFileFilter" sourcefilename="WildcardFileFilter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="65"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V" line="75"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;)V" line="91"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V" line="102"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="119"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V" line="130"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="148"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="164"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="180"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="197" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/filefilter/MagicNumberFileFilter" sourcefilename="MagicNumberFileFilter.java"><method name="&lt;init&gt;" desc="([B)V" line="112"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="137"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;J)V" line="160"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([BJ)V" line="200"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="234"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="262"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="171" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/filefilter/IOFileFilter" sourcefilename="IOFileFilter.java"/><class name="org/apache/commons/io/filefilter/CanWriteFileFilter" sourcefilename="CanWriteFileFilter.java"><method name="&lt;init&gt;" desc="()V" line="68"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="80"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/filefilter/CanReadFileFilter" sourcefilename="CanReadFileFilter.java"><method name="&lt;init&gt;" desc="()V" line="80"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="92"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="68"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/filefilter/ConditionalFileFilter" sourcefilename="ConditionalFileFilter.java"/><class name="org/apache/commons/io/filefilter/RegexFileFilter" sourcefilename="RegexFileFilter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="56"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V" line="71"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="89"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/regex/Pattern;)V" line="102"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="119"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="72" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/filefilter/NotFileFilter" sourcefilename="NotFileFilter.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;)V" line="41"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="56"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="68"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="78"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/filefilter/SizeFileFilter" sourcefilename="SizeFileFilter.java"><method name="&lt;init&gt;" desc="(J)V" line="58"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(JZ)V" line="70"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="92"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="103"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/filefilter/SuffixFileFilter" sourcefilename="SuffixFileFilter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="62"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V" line="74"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;)V" line="92"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V" line="104"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="121"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V" line="134"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="150"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="168"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="183"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="197" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/filefilter/WildcardFilter" sourcefilename="WildcardFilter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="64"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;)V" line="77"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="92"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="109"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="130"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="126" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/filefilter/FileFilterUtils" sourcefilename="FileFilterUtils.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="filter" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;" line="77"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="filter" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)[Ljava/io/File;" line="122"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="filterList" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/List;" line="152"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="filterList" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/List;" line="181"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="filterSet" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/Set;" line="212"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="filterSet" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/Set;" line="243"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="filter" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;" line="270"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prefixFileFilter" desc="(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="294"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prefixFileFilter" desc="(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="307"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="suffixFileFilter" desc="(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="318"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="suffixFileFilter" desc="(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="331"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nameFileFilter" desc="(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="342"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nameFileFilter" desc="(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="355"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="directoryFileFilter" desc="()Lorg/apache/commons/io/filefilter/IOFileFilter;" line="365"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fileFileFilter" desc="()Lorg/apache/commons/io/filefilter/IOFileFilter;" line="375"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="andFileFilter" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="391"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="orFileFilter" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="406"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="and" desc="([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="421"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="or" desc="([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="436"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toList" desc="([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;" line="449"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notFileFilter" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="470"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="trueFileFilter" desc="()Lorg/apache/commons/io/filefilter/IOFileFilter;" line="481"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="falseFileFilter" desc="()Lorg/apache/commons/io/filefilter/IOFileFilter;" line="491"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asFileFilter" desc="(Ljava/io/FileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="504"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asFileFilter" desc="(Ljava/io/FilenameFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="516"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ageFileFilter" desc="(J)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="530"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ageFileFilter" desc="(JZ)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="543"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ageFileFilter" desc="(Ljava/util/Date;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="556"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ageFileFilter" desc="(Ljava/util/Date;Z)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="569"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ageFileFilter" desc="(Ljava/io/File;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="583"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ageFileFilter" desc="(Ljava/io/File;Z)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="597"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sizeFileFilter" desc="(J)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="610"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sizeFileFilter" desc="(JZ)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="623"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sizeRangeFileFilter" desc="(JJ)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="637"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="magicNumberFileFilter" desc="(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="658"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="magicNumberFileFilter" desc="(Ljava/lang/String;J)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="679"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="magicNumberFileFilter" desc="([B)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="698"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="magicNumberFileFilter" desc="([BJ)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="719"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeCVSAware" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="741"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeSVNAware" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="758"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeDirectoryOnly" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="775"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeFileOnly" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="790"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="724"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="432" covered="0"/><counter type="BRANCH" missed="34" covered="0"/><counter type="LINE" missed="87" covered="0"/><counter type="COMPLEXITY" missed="61" covered="0"/><counter type="METHOD" missed="44" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/filefilter/NameFileFilter" sourcefilename="NameFileFilter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="59"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V" line="69"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;)V" line="87"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V" line="97"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="114"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V" line="125"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="142"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="160"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="175"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="197" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/filefilter/AbstractFileFilter" sourcefilename="AbstractFileFilter.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="41"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="53"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="63"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/filefilter/DelegateFileFilter" sourcefilename="DelegateFileFilter.java"><method name="&lt;init&gt;" desc="(Ljava/io/FilenameFilter;)V" line="46"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/FileFilter;)V" line="59"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="75"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="91"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="105"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/filefilter/TrueFileFilter" sourcefilename="TrueFileFilter.java"><method name="&lt;init&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="59"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="71"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/filefilter/AndFileFilter" sourcefilename="AndFileFilter.java"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="62"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V" line="77"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addFileFilter" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;)V" line="91"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFileFilters" desc="()Ljava/util/List;" line="99"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFileFilter" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;)Z" line="107"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFileFilters" desc="(Ljava/util/List;)V" line="115"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="124"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="140"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="158"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="178" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="47" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/filefilter/FileFileFilter" sourcefilename="FileFileFilter.java"><method name="&lt;init&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="60"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/filefilter/AgeFileFilter" sourcefilename="AgeFileFilter.java"><method name="&lt;init&gt;" desc="(J)V" line="66"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(JZ)V" line="77"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Date;)V" line="89"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Date;Z)V" line="101"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="112"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Z)V" line="126"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="144"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="155"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="76" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/filefilter/DirectoryFileFilter" sourcefilename="DirectoryFileFilter.java"><method name="&lt;init&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="71"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/filefilter/FalseFileFilter" sourcefilename="FalseFileFilter.java"><method name="&lt;init&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="60"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="72"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/filefilter/OrFileFilter" sourcefilename="OrFileFilter.java"><method name="&lt;init&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="60"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V" line="75"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addFileFilter" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;)V" line="89"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFileFilters" desc="()Ljava/util/List;" line="97"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFileFilter" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;)Z" line="105"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFileFilters" desc="(Ljava/util/List;)V" line="113"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="122"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="135"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="150"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="166" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="43" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/filefilter/EmptyFileFilter" sourcefilename="EmptyFileFilter.java"><method name="&lt;init&gt;" desc="()V" line="67"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="79"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="59"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="OrFileFilter.java"><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="2" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="4" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="11" ci="0" mb="2" cb="0"/><line nr="123" mi="4" ci="0" mb="2" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="11" ci="0" mb="2" cb="0"/><line nr="136" mi="5" ci="0" mb="2" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="2" cb="0"/><line nr="154" mi="9" ci="0" mb="2" cb="0"/><line nr="155" mi="2" ci="0" mb="2" cb="0"/><line nr="156" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="9" ci="0" mb="2" cb="0"/><line nr="162" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="166" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="43" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CanWriteFileFilter.java"><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="6" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="RegexFileFilter.java"><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="2" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="2" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="4" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="2" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="2" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="72" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CanReadFileFilter.java"><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="7" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="WildcardFileFilter.java"><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="2" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="8" ci="0" mb="0" cb="0"/><line nr="80" mi="7" ci="0" mb="2" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="2" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="8" ci="0" mb="0" cb="0"/><line nr="108" mi="7" ci="0" mb="2" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="2" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="8" ci="0" mb="0" cb="0"/><line nr="135" mi="7" ci="0" mb="2" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="17" ci="0" mb="2" cb="0"/><line nr="149" mi="6" ci="0" mb="2" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="17" ci="0" mb="2" cb="0"/><line nr="166" mi="6" ci="0" mb="2" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="4" ci="0" mb="0" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="2" cb="0"/><line nr="184" mi="9" ci="0" mb="2" cb="0"/><line nr="185" mi="2" ci="0" mb="2" cb="0"/><line nr="186" mi="4" ci="0" mb="0" cb="0"/><line nr="188" mi="7" ci="0" mb="0" cb="0"/><line nr="191" mi="4" ci="0" mb="0" cb="0"/><line nr="192" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="197" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FalseFileFilter.java"><line nr="37" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PrefixFileFilter.java"><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="2" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="78" mi="7" ci="0" mb="2" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="2" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="8" ci="0" mb="0" cb="0"/><line nr="109" mi="7" ci="0" mb="2" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="2" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="8" ci="0" mb="0" cb="0"/><line nr="138" mi="7" ci="0" mb="2" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="17" ci="0" mb="2" cb="0"/><line nr="151" mi="6" ci="0" mb="2" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="17" ci="0" mb="2" cb="0"/><line nr="168" mi="6" ci="0" mb="2" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="5" ci="0" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="2" cb="0"/><line nr="186" mi="9" ci="0" mb="2" cb="0"/><line nr="187" mi="2" ci="0" mb="2" cb="0"/><line nr="188" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="7" ci="0" mb="0" cb="0"/><line nr="193" mi="4" ci="0" mb="0" cb="0"/><line nr="194" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="197" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AgeFileFilter.java"><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="5" ci="0" mb="0" cb="0"/><line nr="145" mi="11" ci="0" mb="4" cb="0"/><line nr="155" mi="7" ci="0" mb="2" cb="0"/><line nr="156" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="76" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DelegateFileFilter.java"><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="2" cb="0"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="2" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="2" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="2" cb="0"/><line nr="92" mi="6" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="11" ci="0" mb="2" cb="0"/><line nr="106" mi="14" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TrueFileFilter.java"><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NotFileFilter.java"><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="2" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="9" ci="0" mb="2" cb="0"/><line nr="68" mi="10" ci="0" mb="2" cb="0"/><line nr="78" mi="16" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FileFilterUtils.java"><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="2" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="2" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="16" ci="0" mb="2" cb="0"/><line nr="85" mi="2" ci="0" mb="2" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="2" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="7" ci="0" mb="0" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="123" mi="7" ci="0" mb="0" cb="0"/><line nr="152" mi="8" ci="0" mb="0" cb="0"/><line nr="181" mi="4" ci="0" mb="0" cb="0"/><line nr="182" mi="3" ci="0" mb="0" cb="0"/><line nr="212" mi="4" ci="0" mb="0" cb="0"/><line nr="213" mi="6" ci="0" mb="0" cb="0"/><line nr="243" mi="8" ci="0" mb="0" cb="0"/><line nr="270" mi="2" ci="0" mb="2" cb="0"/><line nr="271" mi="5" ci="0" mb="0" cb="0"/><line nr="273" mi="2" ci="0" mb="2" cb="0"/><line nr="274" mi="10" ci="0" mb="2" cb="0"/><line nr="275" mi="2" ci="0" mb="2" cb="0"/><line nr="276" mi="5" ci="0" mb="0" cb="0"/><line nr="278" mi="4" ci="0" mb="2" cb="0"/><line nr="279" mi="4" ci="0" mb="0" cb="0"/><line nr="281" mi="1" ci="0" mb="0" cb="0"/><line nr="283" mi="2" ci="0" mb="0" cb="0"/><line nr="294" mi="5" ci="0" mb="0" cb="0"/><line nr="307" mi="6" ci="0" mb="0" cb="0"/><line nr="318" mi="5" ci="0" mb="0" cb="0"/><line nr="331" mi="6" ci="0" mb="0" cb="0"/><line nr="342" mi="5" ci="0" mb="0" cb="0"/><line nr="355" mi="6" ci="0" mb="0" cb="0"/><line nr="365" mi="2" ci="0" mb="0" cb="0"/><line nr="375" mi="2" ci="0" mb="0" cb="0"/><line nr="391" mi="6" ci="0" mb="0" cb="0"/><line nr="406" mi="6" ci="0" mb="0" cb="0"/><line nr="421" mi="6" ci="0" mb="0" cb="0"/><line nr="436" mi="6" ci="0" mb="0" cb="0"/><line nr="449" mi="2" ci="0" mb="2" cb="0"/><line nr="450" mi="5" ci="0" mb="0" cb="0"/><line nr="452" mi="6" ci="0" mb="0" cb="0"/><line nr="453" mi="8" ci="0" mb="2" cb="0"/><line nr="454" mi="4" ci="0" mb="2" cb="0"/><line nr="455" mi="14" ci="0" mb="0" cb="0"/><line nr="457" mi="6" ci="0" mb="0" cb="0"/><line nr="459" mi="2" ci="0" mb="0" cb="0"/><line nr="470" mi="5" ci="0" mb="0" cb="0"/><line nr="481" mi="2" ci="0" mb="0" cb="0"/><line nr="491" mi="2" ci="0" mb="0" cb="0"/><line nr="504" mi="5" ci="0" mb="0" cb="0"/><line nr="516" mi="5" ci="0" mb="0" cb="0"/><line nr="530" mi="5" ci="0" mb="0" cb="0"/><line nr="543" mi="6" ci="0" mb="0" cb="0"/><line nr="556" mi="5" ci="0" mb="0" cb="0"/><line nr="569" mi="6" ci="0" mb="0" cb="0"/><line nr="583" mi="5" ci="0" mb="0" cb="0"/><line nr="597" mi="6" ci="0" mb="0" cb="0"/><line nr="610" mi="5" ci="0" mb="0" cb="0"/><line nr="623" mi="6" ci="0" mb="0" cb="0"/><line nr="637" mi="6" ci="0" mb="0" cb="0"/><line nr="638" mi="8" ci="0" mb="0" cb="0"/><line nr="639" mi="6" ci="0" mb="0" cb="0"/><line nr="658" mi="5" ci="0" mb="0" cb="0"/><line nr="679" mi="6" ci="0" mb="0" cb="0"/><line nr="698" mi="5" ci="0" mb="0" cb="0"/><line nr="719" mi="6" ci="0" mb="0" cb="0"/><line nr="724" mi="6" ci="0" mb="0" cb="0"/><line nr="725" mi="8" ci="0" mb="0" cb="0"/><line nr="728" mi="7" ci="0" mb="0" cb="0"/><line nr="729" mi="8" ci="0" mb="0" cb="0"/><line nr="741" mi="2" ci="0" mb="2" cb="0"/><line nr="742" mi="2" ci="0" mb="0" cb="0"/><line nr="744" mi="12" ci="0" mb="0" cb="0"/><line nr="758" mi="2" ci="0" mb="2" cb="0"/><line nr="759" mi="2" ci="0" mb="0" cb="0"/><line nr="761" mi="12" ci="0" mb="0" cb="0"/><line nr="775" mi="2" ci="0" mb="2" cb="0"/><line nr="776" mi="2" ci="0" mb="0" cb="0"/><line nr="778" mi="6" ci="0" mb="0" cb="0"/><line nr="790" mi="2" ci="0" mb="2" cb="0"/><line nr="791" mi="2" ci="0" mb="0" cb="0"/><line nr="793" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="432" covered="0"/><counter type="BRANCH" missed="34" covered="0"/><counter type="LINE" missed="87" covered="0"/><counter type="COMPLEXITY" missed="61" covered="0"/><counter type="METHOD" missed="44" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="HiddenFileFilter.java"><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NameFileFilter.java"><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="2" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="8" ci="0" mb="0" cb="0"/><line nr="74" mi="7" ci="0" mb="2" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="2" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="8" ci="0" mb="0" cb="0"/><line nr="103" mi="7" ci="0" mb="2" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="2" cb="0"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="8" ci="0" mb="0" cb="0"/><line nr="130" mi="7" ci="0" mb="2" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="0" cb="0"/><line nr="143" mi="17" ci="0" mb="2" cb="0"/><line nr="144" mi="6" ci="0" mb="2" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="17" ci="0" mb="2" cb="0"/><line nr="161" mi="6" ci="0" mb="2" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="5" ci="0" mb="0" cb="0"/><line nr="177" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="2" cb="0"/><line nr="179" mi="9" ci="0" mb="2" cb="0"/><line nr="180" mi="2" ci="0" mb="2" cb="0"/><line nr="181" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="7" ci="0" mb="0" cb="0"/><line nr="186" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="197" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SuffixFileFilter.java"><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="2" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="8" ci="0" mb="0" cb="0"/><line nr="79" mi="7" ci="0" mb="2" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="2" cb="0"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="8" ci="0" mb="0" cb="0"/><line nr="110" mi="7" ci="0" mb="2" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="2" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="8" ci="0" mb="0" cb="0"/><line nr="139" mi="7" ci="0" mb="2" cb="0"/><line nr="140" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="17" ci="0" mb="2" cb="0"/><line nr="152" mi="6" ci="0" mb="2" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="17" ci="0" mb="2" cb="0"/><line nr="169" mi="6" ci="0" mb="2" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="4" ci="0" mb="0" cb="0"/><line nr="184" mi="5" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="3" ci="0" mb="2" cb="0"/><line nr="187" mi="9" ci="0" mb="2" cb="0"/><line nr="188" mi="2" ci="0" mb="2" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="191" mi="7" ci="0" mb="0" cb="0"/><line nr="194" mi="4" ci="0" mb="0" cb="0"/><line nr="195" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="197" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FileFileFilter.java"><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SizeFileFilter.java"><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="2" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="10" ci="0" mb="2" cb="0"/><line nr="93" mi="11" ci="0" mb="4" cb="0"/><line nr="103" mi="7" ci="0" mb="2" cb="0"/><line nr="104" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IOFileFilter.java"/><sourcefile name="AndFileFilter.java"><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="2" cb="0"/><line nr="64" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="6" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="4" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="6" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="4" ci="0" mb="2" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="11" ci="0" mb="2" cb="0"/><line nr="128" mi="4" ci="0" mb="2" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="4" ci="0" mb="2" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="11" ci="0" mb="2" cb="0"/><line nr="144" mi="5" ci="0" mb="2" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="4" ci="0" mb="0" cb="0"/><line nr="159" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="2" cb="0"/><line nr="162" mi="9" ci="0" mb="2" cb="0"/><line nr="163" mi="2" ci="0" mb="2" cb="0"/><line nr="164" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="5" ci="0" mb="0" cb="0"/><line nr="167" mi="9" ci="0" mb="2" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="178" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="47" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="EmptyFileFilter.java"><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="2" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="9" ci="0" mb="4" cb="0"/><line nr="83" mi="9" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="WildcardFilter.java"><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="2" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="8" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="2" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="8" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="2" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="8" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="9" ci="0" mb="4" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="17" ci="0" mb="2" cb="0"/><line nr="114" mi="4" ci="0" mb="2" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="2" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="17" ci="0" mb="2" cb="0"/><line nr="135" mi="5" ci="0" mb="2" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="126" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MagicNumberFileFilter.java"><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="2" ci="0" mb="2" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="2" cb="0"/><line nr="165" mi="5" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="2" cb="0"/><line nr="168" mi="5" ci="0" mb="0" cb="0"/><line nr="171" mi="5" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="1" ci="0" mb="0" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="2" ci="0" mb="2" cb="0"/><line nr="202" mi="5" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="2" cb="0"/><line nr="205" mi="5" ci="0" mb="0" cb="0"/><line nr="207" mi="4" ci="0" mb="2" cb="0"/><line nr="208" mi="5" ci="0" mb="0" cb="0"/><line nr="211" mi="5" ci="0" mb="0" cb="0"/><line nr="212" mi="8" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="1" ci="0" mb="0" cb="0"/><line nr="234" mi="8" ci="0" mb="6" cb="0"/><line nr="236" mi="8" ci="0" mb="0" cb="0"/><line nr="237" mi="5" ci="0" mb="0" cb="0"/><line nr="238" mi="4" ci="0" mb="0" cb="0"/><line nr="239" mi="4" ci="0" mb="0" cb="0"/><line nr="240" mi="5" ci="0" mb="2" cb="0"/><line nr="241" mi="4" ci="0" mb="0" cb="0"/><line nr="243" mi="7" ci="0" mb="0" cb="0"/><line nr="246" mi="1" ci="0" mb="0" cb="0"/><line nr="251" mi="2" ci="0" mb="0" cb="0"/><line nr="262" mi="6" ci="0" mb="0" cb="0"/><line nr="263" mi="4" ci="0" mb="0" cb="0"/><line nr="264" mi="9" ci="0" mb="0" cb="0"/><line nr="266" mi="4" ci="0" mb="0" cb="0"/><line nr="267" mi="5" ci="0" mb="0" cb="0"/><line nr="268" mi="4" ci="0" mb="0" cb="0"/><line nr="269" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="171" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractFileFilter.java"><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="53" mi="8" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DirectoryFileFilter.java"><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ConditionalFileFilter.java"/><counter type="INSTRUCTION" missed="2373" covered="0"/><counter type="BRANCH" missed="278" covered="0"/><counter type="LINE" missed="554" covered="0"/><counter type="COMPLEXITY" missed="306" covered="0"/><counter type="METHOD" missed="167" covered="0"/><counter type="CLASS" missed="23" covered="0"/></package><package name="com/milaboratory/core/sequence"><class name="com/milaboratory/core/sequence/UnsafeFactory" sourcefilename="UnsafeFactory.java"><method name="fastqParse" desc="([BIIIBJZ)Lcom/milaboratory/core/sequence/NSequenceWithQuality;" line="39"><counter type="INSTRUCTION" missed="39" covered="80"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="3" covered="16"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="80"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="3" covered="16"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/SequenceQuality" sourcefilename="SequenceQuality.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="71"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/milaboratory/core/io/sequence/fastq/QualityFormat;)V" line="83"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([B)V" line="92"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([BZ)V" line="99"><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asArray" desc="()[B" line="111"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="log10ProbabilityOfErrorAt" desc="(I)F" line="121"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="probabilityOfErrorAt" desc="(I)F" line="131"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value" desc="(I)B" line="141"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minValue" desc="()B" line="150"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="meanValue" desc="()B" line="166"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverse" desc="()Lcom/milaboratory/core/sequence/SequenceQuality;" line="181"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRange" desc="(II)Lcom/milaboratory/core/sequence/SequenceQuality;" line="193"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRange" desc="(Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/sequence/SequenceQuality;" line="204"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="217"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBuilder" desc="()Lcom/milaboratory/core/sequence/SequenceQualityBuilder;" line="222"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="concatenate" desc="([Lcom/milaboratory/core/sequence/SequenceQuality;)Lcom/milaboratory/core/sequence/SequenceQuality;" line="226"><counter type="INSTRUCTION" missed="72" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeTo" desc="(Lcom/milaboratory/core/io/sequence/fastq/QualityFormat;[BI)V" line="247"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(I)[B" line="259"><counter type="INSTRUCTION" missed="4" covered="34"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Lcom/milaboratory/core/io/sequence/fastq/QualityFormat;)[B" line="275"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeToString" desc="(I)Ljava/lang/String;" line="285"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="290"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="295"><counter type="INSTRUCTION" missed="4" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="303"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUniformQuality" desc="(BI)Lcom/milaboratory/core/sequence/SequenceQuality;" line="313"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseCopy" desc="([B)[B" line="326"><counter type="INSTRUCTION" missed="4" covered="31"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Lcom/milaboratory/core/io/sequence/fastq/QualityFormat;[BIIZ)Lcom/milaboratory/core/sequence/SequenceQuality;" line="349"><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="(Lcom/milaboratory/core/io/sequence/fastq/QualityFormat;[BZ)Lcom/milaboratory/core/sequence/SequenceQuality;" line="377"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="314" covered="221"/><counter type="BRANCH" missed="42" covered="18"/><counter type="LINE" missed="49" covered="45"/><counter type="COMPLEXITY" missed="38" covered="21"/><counter type="METHOD" missed="12" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/AminoAcidAlphabet" sourcefilename="AminoAcidAlphabet.java"><method name="&lt;init&gt;" desc="()V" line="253"><counter type="INSTRUCTION" missed="0" covered="113"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="symbolToCode" desc="(C)B" line="269"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createUnsafe" desc="([B)Lcom/milaboratory/core/sequence/AminoAcidSequence;" line="278"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="143"><counter type="INSTRUCTION" missed="0" covered="575"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="703"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="33"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/NucleotideAlphabet" sourcefilename="NucleotideAlphabet.java"><method name="&lt;init&gt;" desc="()V" line="187"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="complementCode" desc="(B)B" line="204"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="complementCode" desc="(Lcom/milaboratory/core/sequence/Wildcard;)B" line="214"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="complementWildcard" desc="(B)Lcom/milaboratory/core/sequence/Wildcard;" line="224"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="complementWildcard" desc="(Lcom/milaboratory/core/sequence/Wildcard;)Lcom/milaboratory/core/sequence/Wildcard;" line="234"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="symbolByteFromCode" desc="(B)B" line="245"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="byteSymbolToCode" desc="(B)B" line="250"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createUnsafe" desc="([B)Lcom/milaboratory/core/sequence/NucleotideSequence;" line="255"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComplement1" desc="(B)B" line="262"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComplementMask" desc="(Lcom/milaboratory/core/sequence/Wildcard;)J" line="266"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="104"><counter type="INSTRUCTION" missed="0" covered="880"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="997"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="3" covered="35"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/ArraySeqBuilder" sourcefilename="ArraySeqBuilder.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([BI)V" line="22"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="34"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureInternalCapacity" desc="(I)V" line="38"><counter type="INSTRUCTION" missed="6" covered="38"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureCapacity" desc="(I)Lcom/milaboratory/core/sequence/ArraySeqBuilder;" line="51"><counter type="INSTRUCTION" missed="11" covered="21"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAndDestroy" desc="()Lcom/milaboratory/core/sequence/AbstractSeq;" line="70"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(B)Lcom/milaboratory/core/sequence/ArraySeqBuilder;" line="83"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Lcom/milaboratory/core/sequence/AbstractSeq;)Lcom/milaboratory/core/sequence/ArraySeqBuilder;" line="90"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="156"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="8" covered="34"/><counter type="COMPLEXITY" missed="5" covered="14"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/IO$AlphabetSerializer" sourcefilename="IO.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Lcom/milaboratory/primitivio/PrimitivO;Lcom/milaboratory/core/sequence/Alphabet;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Lcom/milaboratory/primitivio/PrimitivI;)Lcom/milaboratory/core/sequence/Alphabet;" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReference" desc="()Z" line="48"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handlesReference" desc="()Z" line="53"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/SequenceBuilder" sourcefilename="SequenceBuilder.java"/><class name="com/milaboratory/core/sequence/NucleotideSequence" sourcefilename="NucleotideSequence.java"><method name="getOneLetterSequence" desc="(B)Lcom/milaboratory/core/sequence/NucleotideSequence;" line="124"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="134"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([C)V" line="144"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([B)V" line="153"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([BZ)V" line="157"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRange" desc="(Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/sequence/NucleotideSequence;" line="163"><counter type="INSTRUCTION" missed="12" covered="55"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReverseComplement" desc="()Lcom/milaboratory/core/sequence/NucleotideSequence;" line="189"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsWildcards" desc="(II)Z" line="198"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsWildcards" desc="()Z" line="210"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAlphabet" desc="()Lcom/milaboratory/core/sequence/NucleotideAlphabet;" line="215"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromSequence" desc="([BII)Lcom/milaboratory/core/sequence/NucleotideSequence;" line="227"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="transformToRC" desc="([BII)[B" line="234"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWildcard" desc="(B)Z" line="244"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="2" covered="226"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="78" covered="348"/><counter type="BRANCH" missed="16" covered="16"/><counter type="LINE" missed="13" covered="46"/><counter type="COMPLEXITY" missed="17" covered="13"/><counter type="METHOD" missed="5" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/NSeq" sourcefilename="NSeq.java"/><class name="com/milaboratory/core/sequence/IO" sourcefilename="IO.java"/><class name="com/milaboratory/core/sequence/SeqBuilder" sourcefilename="SeqBuilder.java"/><class name="com/milaboratory/core/sequence/IO$SQSeqDeserializer" sourcefilename="IO.java"><method name="&lt;init&gt;" desc="()V" line="200"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserialize" desc="(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/milaboratory/core/sequence/SequenceQuality;" line="203"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/NSequenceWithQuality" sourcefilename="NSequenceWithQuality.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/SequenceQuality;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;B)V" line="60"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReverseComplement" desc="()Lcom/milaboratory/core/sequence/NSequenceWithQuality;" line="74"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberOfSequences" desc="()I" line="79"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)Lcom/milaboratory/core/sequence/NSequenceWithQuality;" line="84"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRange" desc="(II)Lcom/milaboratory/core/sequence/NSequenceWithQuality;" line="91"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRange" desc="(Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/sequence/NSequenceWithQuality;" line="96"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBuilder" desc="()Lcom/milaboratory/core/sequence/NSequenceWithQualityBuilder;" line="101"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="concatenate" desc="(Lcom/milaboratory/core/sequence/NSequenceWithQuality;)Lcom/milaboratory/core/sequence/NSequenceWithQuality;" line="106"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="57" covered="54"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="12"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="6" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/IO$SequenceSerializer" sourcefilename="IO.java"><method name="&lt;init&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Lcom/milaboratory/primitivio/PrimitivO;Lcom/milaboratory/core/sequence/Sequence;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Lcom/milaboratory/primitivio/PrimitivI;)Lcom/milaboratory/core/sequence/Sequence;" line="66"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReference" desc="()Z" line="72"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handlesReference" desc="()Z" line="77"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/IO$NSeqDeserializer" sourcefilename="IO.java"><method name="&lt;init&gt;" desc="()V" line="167"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserialize" desc="(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/milaboratory/core/sequence/NucleotideSequence;" line="170"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/AbstractArrayAlphabet" sourcefilename="AbstractArrayAlphabet.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;BILcom/milaboratory/core/sequence/Wildcard;[Lcom/milaboratory/core/sequence/Wildcard;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createBuilder" desc="()Lcom/milaboratory/core/sequence/SequenceBuilder;" line="30"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/Alphabets$Serializer" sourcefilename="Alphabets.java"><method name="&lt;init&gt;" desc="()V" line="124"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serialize" desc="(Lcom/milaboratory/core/sequence/Alphabet;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V" line="127"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/TranslationParameters" sourcefilename="TranslationParameters.java"><method name="&lt;init&gt;" desc="(BLjava/lang/Boolean;Z)V" line="37"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFrame" desc="()B" line="44"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFromLeft" desc="()Ljava/lang/Boolean;" line="48"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isIncludeIncomplete" desc="()Z" line="52"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToLeftBound" desc="(I)Lcom/milaboratory/core/sequence/TranslationParameters;" line="61"><counter type="INSTRUCTION" missed="11" covered="30"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="3" covered="12"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withIncompleteCodon" desc="(I)Lcom/milaboratory/core/sequence/TranslationParameters;" line="93"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withoutIncompleteCodon" desc="(I)Lcom/milaboratory/core/sequence/TranslationParameters;" line="111"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="125"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="138"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="146"><counter type="INSTRUCTION" missed="17" covered="9"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPreDefinedParameters" desc="()Ljava/util/Collection;" line="167"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="97"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="119" covered="179"/><counter type="BRANCH" missed="31" covered="15"/><counter type="LINE" missed="25" covered="41"/><counter type="COMPLEXITY" missed="26" covered="13"/><counter type="METHOD" missed="6" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/AminoAcidSequence" sourcefilename="AminoAcidSequence.java"><method name="&lt;init&gt;" desc="([B)V" line="53"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([BZ)V" line="67"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAlphabet" desc="()Lcom/milaboratory/core/sequence/AminoAcidAlphabet;" line="73"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containStops" desc="()Z" line="82"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="numberOfStops" desc="()I" line="94"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translate" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;I)Lcom/milaboratory/core/sequence/AminoAcidSequence;" line="110"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translate" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;)Lcom/milaboratory/core/sequence/AminoAcidSequence;" line="120"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertAAPositionToNt" desc="(IILcom/milaboratory/core/sequence/TranslationParameters;)I" line="129"><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertAAPositionToNtFromCenter" desc="(II)I" line="157"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertAAPositionToNtFromLeft" desc="(II)I" line="161"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertAAPositionToNtFromRight" desc="(II)I" line="165"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertNtPositionToAA" desc="(IILcom/milaboratory/core/sequence/TranslationParameters;)Lcom/milaboratory/core/sequence/AminoAcidSequence$AminoAcidSequencePosition;" line="170"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertNtPositionToAAFromRight" desc="(II)Lcom/milaboratory/core/sequence/AminoAcidSequence$AminoAcidSequencePosition;" line="202"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertNtPositionToAAFromLeft" desc="(II)Lcom/milaboratory/core/sequence/AminoAcidSequence$AminoAcidSequencePosition;" line="214"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertNtPositionToAAFromCenter" desc="(II)Lcom/milaboratory/core/sequence/AminoAcidSequence$AminoAcidSequencePosition;" line="226"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/sequence/TranslationParameters;)Lcom/milaboratory/core/sequence/AminoAcidSequence;" line="240"><counter type="INSTRUCTION" missed="1" covered="153"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translateFromRight" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;)Lcom/milaboratory/core/sequence/AminoAcidSequence;" line="285"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateFromLeft" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;)Lcom/milaboratory/core/sequence/AminoAcidSequence;" line="305"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translateFromCenter" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;)Lcom/milaboratory/core/sequence/AminoAcidSequence;" line="328"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="127" covered="366"/><counter type="BRANCH" missed="14" covered="52"/><counter type="LINE" missed="22" covered="76"/><counter type="COMPLEXITY" missed="19" covered="35"/><counter type="METHOD" missed="10" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/IO$SequenceQualitySerializer" sourcefilename="IO.java"><method name="&lt;init&gt;" desc="()V" line="111"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Lcom/milaboratory/primitivio/PrimitivO;Lcom/milaboratory/core/sequence/SequenceQuality;)V" line="114"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Lcom/milaboratory/primitivio/PrimitivI;)Lcom/milaboratory/core/sequence/SequenceQuality;" line="119"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReference" desc="()Z" line="124"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handlesReference" desc="()Z" line="129"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/IO$SQSeqSerializer" sourcefilename="IO.java"><method name="&lt;init&gt;" desc="()V" line="191"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serialize" desc="(Lcom/milaboratory/core/sequence/SequenceQuality;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V" line="196"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/Wildcard" sourcefilename="Wildcard.java"><method name="&lt;init&gt;" desc="(CB)V" line="68"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(CBI[B)V" line="79"><counter type="INSTRUCTION" missed="13" covered="88"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="3" covered="20"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSymbol" desc="()C" line="117"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBasicMask" desc="()J" line="129"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="basicSize" desc="()I" line="139"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="150"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBasic" desc="()Z" line="161"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMatchingCode" desc="(I)B" line="171"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCode" desc="()B" line="180"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(B)Z" line="190"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersectsWith" desc="(Lcom/milaboratory/core/sequence/Wildcard;)Z" line="213"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUniformlyDistributedBasicCode" desc="(J)B" line="224"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="169"/><counter type="BRANCH" missed="4" covered="20"/><counter type="LINE" missed="5" covered="34"/><counter type="COMPLEXITY" missed="5" covered="19"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/Sequence" sourcefilename="Sequence.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asArray" desc="()[B" line="59"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="symbolAt" desc="(I)C" line="72"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toMotif" desc="()Lcom/milaboratory/core/motif/Motif;" line="83"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containWildcards" desc="()Z" line="87"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSequence" desc="()Lcom/milaboratory/core/sequence/Sequence;" line="95"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBuilder" desc="()Lcom/milaboratory/core/sequence/SequenceBuilder;" line="100"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="105"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="122"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="131"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareTo" desc="(Lcom/milaboratory/core/sequence/Sequence;)I" line="139"><counter type="INSTRUCTION" missed="20" covered="31"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="7" covered="7"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(Lcom/milaboratory/core/sequence/Sequence;)I" line="167"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="160" covered="93"/><counter type="BRANCH" missed="32" covered="10"/><counter type="LINE" missed="40" covered="18"/><counter type="COMPLEXITY" missed="23" covered="10"/><counter type="METHOD" missed="5" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/Seq" sourcefilename="Seq.java"/><class name="com/milaboratory/core/sequence/IO$NSeqSerializer" sourcefilename="IO.java"><method name="&lt;init&gt;" desc="()V" line="158"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serialize" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V" line="163"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/IO$AASeqDeserializer" sourcefilename="IO.java"><method name="&lt;init&gt;" desc="()V" line="183"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserialize" desc="(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/milaboratory/core/sequence/AminoAcidSequence;" line="186"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/SequenceQualityBuilder" sourcefilename="SequenceQualityBuilder.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([BI)V" line="26"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createUnsafe" desc="([B)Lcom/milaboratory/core/sequence/SequenceQuality;" line="31"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnsafe" desc="(Lcom/milaboratory/core/sequence/SequenceQuality;)[B" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/milaboratory/core/sequence/SequenceQualityBuilder;" line="41"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="12"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/Alphabet" sourcefilename="Alphabet.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;BILcom/milaboratory/core/sequence/Wildcard;[Lcom/milaboratory/core/sequence/Wildcard;)V" line="111"><counter type="INSTRUCTION" missed="24" covered="136"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="3" covered="24"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="158"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="basicSize" desc="()I" line="167"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWildcard" desc="(B)Z" line="177"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="codeToWildcard" desc="(B)Lcom/milaboratory/core/sequence/Wildcard;" line="189"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="symbolToWildcard" desc="(C)Lcom/milaboratory/core/sequence/Wildcard;" line="199"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllWildcards" desc="()Ljava/util/List;" line="208"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWildcardForAnyLetter" desc="()Lcom/milaboratory/core/sequence/Wildcard;" line="217"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maskToWildcard" desc="(J)Lcom/milaboratory/core/sequence/Wildcard;" line="227"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="codeToSymbol" desc="(B)C" line="239"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="symbolToCode" desc="(C)B" line="250"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="symbolToCodeWithException" desc="(C)B" line="262"><counter type="INSTRUCTION" missed="14" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEmptySequence" desc="()Lcom/milaboratory/core/sequence/Sequence;" line="281"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAlphabetName" desc="()Ljava/lang/String;" line="297"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()B" line="308"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/lang/String;)Lcom/milaboratory/core/sequence/Sequence;" line="318"><counter type="INSTRUCTION" missed="21" covered="30"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="335"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="344"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="356"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeReplace" desc="()Ljava/lang/Object;" line="362"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="83" covered="256"/><counter type="BRANCH" missed="7" covered="19"/><counter type="LINE" missed="8" covered="52"/><counter type="COMPLEXITY" missed="10" covered="23"/><counter type="METHOD" missed="3" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/IO$NSequenceWithQualitySerializer" sourcefilename="IO.java"><method name="&lt;init&gt;" desc="()V" line="133"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Lcom/milaboratory/primitivio/PrimitivO;Lcom/milaboratory/core/sequence/NSequenceWithQuality;)V" line="136"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Lcom/milaboratory/primitivio/PrimitivI;)Lcom/milaboratory/core/sequence/NSequenceWithQuality;" line="142"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReference" desc="()Z" line="149"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handlesReference" desc="()Z" line="154"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/NSequenceWithQualityBuilder" sourcefilename="NSequenceWithQualityBuilder.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/SequenceBuilder;Lcom/milaboratory/core/sequence/SequenceQualityBuilder;)V" line="29"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ensureCapacity" desc="(I)Lcom/milaboratory/core/sequence/NSequenceWithQualityBuilder;" line="41"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createAndDestroy" desc="()Lcom/milaboratory/core/sequence/NSequenceWithQuality;" line="48"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(Lcom/milaboratory/core/sequence/NSequenceWithQuality;)Lcom/milaboratory/core/sequence/NSequenceWithQualityBuilder;" line="53"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/milaboratory/core/sequence/NSequenceWithQualityBuilder;" line="60"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/sequence/GeneticCode" sourcefilename="GeneticCode.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAminoAcid" desc="(BBB)B" line="59"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAminoAcid" desc="(I)B" line="63"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="([BILcom/milaboratory/core/sequence/NucleotideSequence;II)V" line="67"><counter type="INSTRUCTION" missed="5" covered="56"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBasicAminoAcid" desc="(BBB)B" line="83"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBasicAminoAcid" desc="(I)B" line="87"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="basicTranslate" desc="([BILcom/milaboratory/core/sequence/NucleotideSequence;II)V" line="91"><counter type="INSTRUCTION" missed="73" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="127"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="81" covered="213"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="13" covered="38"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/IO$AASeqSerializer" sourcefilename="IO.java"><method name="&lt;init&gt;" desc="()V" line="174"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serialize" desc="(Lcom/milaboratory/core/sequence/AminoAcidSequence;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V" line="179"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/AbstractArraySequence" sourcefilename="AbstractArraySequence.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([C)V" line="32"><counter type="INSTRUCTION" missed="7" covered="2"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([B)V" line="36"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="codeAt" desc="(I)B" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="50"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asArray" desc="()[B" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRange" desc="(II)Lcom/milaboratory/core/sequence/AbstractArraySequence;" line="60"><counter type="INSTRUCTION" missed="4" covered="26"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="69"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="76"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dataFromChars" desc="(Lcom/milaboratory/core/sequence/Alphabet;[C)[B" line="82"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="132"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="3" covered="25"/><counter type="COMPLEXITY" missed="4" covered="15"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/AbstractSeq" sourcefilename="AbstractSeq.java"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRange" desc="(Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/sequence/AbstractSeq;" line="23"><counter type="INSTRUCTION" missed="5" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="concatenate" desc="(Lcom/milaboratory/core/sequence/AbstractSeq;)Lcom/milaboratory/core/sequence/AbstractSeq;" line="30"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="29"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/Alphabet$AlphabetSerialization" sourcefilename="Alphabet.java"><method name="&lt;init&gt;" desc="()V" line="368"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(B)V" line="372"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readResolve" desc="()Ljava/lang/Object;" line="378"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="10"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/MultiNSequenceWithQualityImpl" sourcefilename="MultiNSequenceWithQualityImpl.java"><method name="&lt;init&gt;" desc="([Lcom/milaboratory/core/sequence/NSequenceWithQuality;)V" line="21"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="numberOfSequences" desc="()I" line="27"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)Lcom/milaboratory/core/sequence/NSequenceWithQuality;" line="32"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/sequence/AminoAcidSequence$AminoAcidSequencePosition" sourcefilename="AminoAcidSequence.java"><method name="&lt;init&gt;" desc="(II)V" line="347"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="floor" desc="()I" line="353"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ceil" desc="()I" line="357"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="362"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="367"><counter type="INSTRUCTION" missed="7" covered="22"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="378"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="32"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="6" covered="9"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/SequencesUtils" sourcefilename="SequencesUtils.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="belongsToAlphabet" desc="(Lcom/milaboratory/core/sequence/Alphabet;Ljava/lang/String;)Z" line="41"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="possibleAlphabets" desc="(Ljava/lang/String;)Ljava/util/Set;" line="56"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mismatchCount" desc="(Lcom/milaboratory/core/sequence/Sequence;ILcom/milaboratory/core/sequence/Sequence;II)I" line="78"><counter type="INSTRUCTION" missed="4" covered="35"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="concatenate" desc="([Lcom/milaboratory/core/sequence/Seq;)Lcom/milaboratory/core/sequence/Seq;" line="96"><counter type="INSTRUCTION" missed="9" covered="60"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wildcardsToRandomBasic" desc="(Lcom/milaboratory/core/sequence/Sequence;J)Lcom/milaboratory/core/sequence/Sequence;" line="127"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertNSequenceToBit2Array" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;)Lcom/milaboratory/util/Bit2Array;" line="146"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertBit2ArrayToNSequence" desc="(Lcom/milaboratory/util/Bit2Array;)Lcom/milaboratory/core/sequence/NucleotideSequence;" line="160"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findLongestHomopolymer" desc="(Lcom/milaboratory/core/sequence/Sequence;)Lcom/milaboratory/core/Range;" line="170"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="71" covered="233"/><counter type="BRANCH" missed="10" covered="30"/><counter type="LINE" missed="14" covered="45"/><counter type="COMPLEXITY" missed="10" covered="19"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/MultiNSequenceWithQuality" sourcefilename="MultiNSequenceWithQuality.java"/><class name="com/milaboratory/core/sequence/Alphabets$Deserializer" sourcefilename="Alphabets.java"><method name="&lt;init&gt;" desc="()V" line="107"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserialize" desc="(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/milaboratory/core/sequence/Alphabet;" line="110"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEmptyValue" desc="(Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/milaboratory/core/sequence/Alphabet;" line="115"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNullValue" desc="(Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/milaboratory/core/sequence/Alphabet;" line="120"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/ArraySequenceBuilder" sourcefilename="ArraySequenceBuilder.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/AbstractArrayAlphabet;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([BILcom/milaboratory/core/sequence/AbstractArrayAlphabet;)V" line="30"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createUnsafe" desc="([B)Lcom/milaboratory/core/sequence/AbstractArraySequence;" line="36"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnsafe" desc="(Lcom/milaboratory/core/sequence/AbstractArraySequence;)[B" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IB)Lcom/milaboratory/core/sequence/ArraySequenceBuilder;" line="46"><counter type="INSTRUCTION" missed="4" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(B)Lcom/milaboratory/core/sequence/ArraySequenceBuilder;" line="54"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/milaboratory/core/sequence/ArraySequenceBuilder;" line="61"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="([B)Lcom/milaboratory/core/sequence/SequenceBuilder;" line="66"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureCapacity" desc="(I)Lcom/milaboratory/core/sequence/ArraySequenceBuilder;" line="76"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="82"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="80"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="7" covered="18"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/Alphabets" sourcefilename="Alphabets.java"><method name="register" desc="(Lcom/milaboratory/core/sequence/Alphabet;)V" line="50"><counter type="INSTRUCTION" missed="10" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getByName" desc="(Ljava/lang/String;)Lcom/milaboratory/core/sequence/Alphabet;" line="69"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getByFirstLetterOfName" desc="(C)Lcom/milaboratory/core/sequence/Alphabet;" line="79"><counter type="INSTRUCTION" missed="12" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getById" desc="(B)Lcom/milaboratory/core/sequence/Alphabet;" line="93"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAll" desc="()Ljava/util/Collection;" line="102"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="66"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/SequenceWithQuality" sourcefilename="SequenceWithQuality.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/sequence/SequenceQuality;)V" line="42"><counter type="INSTRUCTION" missed="5" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSequence" desc="()Lcom/milaboratory/core/sequence/Sequence;" line="55"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQuality" desc="()Lcom/milaboratory/core/sequence/SequenceQuality;" line="64"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubSequence" desc="(II)Lcom/milaboratory/core/sequence/SequenceWithQuality;" line="78"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSubSequence" desc="(Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/sequence/SequenceWithQuality;" line="91"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="101"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="106"><counter type="INSTRUCTION" missed="3" covered="30"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="117"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPrettyString" desc="()Ljava/lang/String;" line="128"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="135"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="77" covered="54"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="11" covered="13"/><counter type="COMPLEXITY" missed="10" covered="6"/><counter type="METHOD" missed="5" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Seq.java"/><sourcefile name="ArraySequenceBuilder.java"><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="2" cb="2"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="11" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="17" ci="0" mb="2" cb="0"/><line nr="66" mi="0" ci="3" mb="1" cb="1"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="9" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="37" covered="80"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="7" covered="18"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NucleotideAlphabet.java"><line nr="104" mi="0" ci="41" mb="0" cb="0"/><line nr="108" mi="0" ci="41" mb="0" cb="0"/><line nr="112" mi="0" ci="41" mb="0" cb="0"/><line nr="116" mi="0" ci="41" mb="0" cb="0"/><line nr="122" mi="0" ci="69" mb="0" cb="0"/><line nr="128" mi="0" ci="57" mb="0" cb="0"/><line nr="132" mi="0" ci="57" mb="0" cb="0"/><line nr="136" mi="0" ci="57" mb="0" cb="0"/><line nr="140" mi="0" ci="57" mb="0" cb="0"/><line nr="144" mi="0" ci="57" mb="0" cb="0"/><line nr="148" mi="0" ci="57" mb="0" cb="0"/><line nr="154" mi="0" ci="65" mb="0" cb="0"/><line nr="158" mi="0" ci="65" mb="0" cb="0"/><line nr="162" mi="0" ci="65" mb="0" cb="0"/><line nr="166" mi="0" ci="65" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="68" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="5" ci="0" mb="0" cb="0"/><line nr="224" mi="4" ci="0" mb="0" cb="0"/><line nr="234" mi="5" ci="0" mb="0" cb="0"/><line nr="245" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="0" ci="5" mb="0" cb="0"/><line nr="255" mi="0" ci="6" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="267" mi="0" ci="8" mb="0" cb="2"/><line nr="268" mi="0" ci="11" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><line nr="273" mi="0" ci="8" mb="0" cb="0"/><line nr="274" mi="0" ci="4" mb="0" cb="0"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="0" ci="8" mb="0" cb="2"/><line nr="277" mi="0" ci="7" mb="0" cb="0"/><line nr="278" mi="0" ci="4" mb="0" cb="0"/><line nr="279" mi="0" ci="5" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="997"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="3" covered="35"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SequenceQuality.java"><line nr="34" mi="2" ci="5" mb="1" cb="1"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="10" mb="0" cb="2"/><line nr="74" mi="0" ci="9" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="4" ci="4" mb="2" cb="2"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="9" ci="0" mb="0" cb="0"/><line nr="131" mi="12" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="2" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="17" ci="0" mb="2" cb="0"/><line nr="155" mi="3" ci="0" mb="2" cb="0"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="166" mi="4" ci="0" mb="2" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="17" ci="0" mb="2" cb="0"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="7" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="8" mb="0" cb="0"/><line nr="193" mi="8" ci="0" mb="0" cb="0"/><line nr="204" mi="8" ci="0" mb="0" cb="0"/><line nr="205" mi="3" ci="0" mb="2" cb="0"/><line nr="206" mi="2" ci="0" mb="0" cb="0"/><line nr="207" mi="6" ci="0" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="226" mi="3" ci="0" mb="2" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="228" mi="3" ci="0" mb="0" cb="0"/><line nr="229" mi="16" ci="0" mb="2" cb="0"/><line nr="230" mi="5" ci="0" mb="0" cb="0"/><line nr="231" mi="5" ci="0" mb="0" cb="0"/><line nr="232" mi="3" ci="0" mb="0" cb="0"/><line nr="233" mi="16" ci="0" mb="2" cb="0"/><line nr="234" mi="8" ci="0" mb="0" cb="0"/><line nr="235" mi="5" ci="0" mb="0" cb="0"/><line nr="237" mi="6" ci="0" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="9" mb="0" cb="2"/><line nr="249" mi="0" ci="11" mb="0" cb="0"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="259" mi="0" ci="5" mb="2" cb="2"/><line nr="260" mi="4" ci="0" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="263" mi="0" ci="9" mb="0" cb="2"/><line nr="264" mi="0" ci="13" mb="0" cb="0"/><line nr="265" mi="0" ci="2" mb="0" cb="0"/><line nr="275" mi="5" ci="0" mb="0" cb="0"/><line nr="285" mi="0" ci="7" mb="0" cb="0"/><line nr="290" mi="0" ci="8" mb="0" cb="0"/><line nr="295" mi="2" ci="3" mb="1" cb="1"/><line nr="296" mi="2" ci="7" mb="2" cb="2"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="6" mb="0" cb="0"/><line nr="303" mi="0" ci="4" mb="0" cb="0"/><line nr="313" mi="0" ci="3" mb="0" cb="0"/><line nr="314" mi="0" ci="3" mb="0" cb="0"/><line nr="315" mi="0" ci="6" mb="0" cb="0"/><line nr="326" mi="0" ci="4" mb="0" cb="0"/><line nr="327" mi="0" ci="5" mb="0" cb="0"/><line nr="328" mi="0" ci="9" mb="0" cb="2"/><line nr="330" mi="0" ci="6" mb="0" cb="0"/><line nr="332" mi="4" ci="5" mb="2" cb="2"/><line nr="334" mi="0" ci="2" mb="0" cb="0"/><line nr="349" mi="10" ci="0" mb="6" cb="0"/><line nr="350" mi="4" ci="0" mb="0" cb="0"/><line nr="352" mi="3" ci="0" mb="0" cb="0"/><line nr="353" mi="3" ci="0" mb="0" cb="0"/><line nr="354" mi="3" ci="0" mb="0" cb="0"/><line nr="355" mi="3" ci="0" mb="0" cb="0"/><line nr="356" mi="2" ci="0" mb="0" cb="0"/><line nr="357" mi="7" ci="0" mb="2" cb="0"/><line nr="358" mi="10" ci="0" mb="0" cb="0"/><line nr="360" mi="12" ci="0" mb="6" cb="0"/><line nr="362" mi="21" ci="0" mb="0" cb="0"/><line nr="364" mi="6" ci="0" mb="0" cb="0"/><line nr="377" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="314" covered="221"/><counter type="BRANCH" missed="42" covered="18"/><counter type="LINE" missed="49" covered="45"/><counter type="COMPLEXITY" missed="38" covered="21"/><counter type="METHOD" missed="12" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SequenceQualityBuilder.java"><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="4" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="12"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SeqBuilder.java"/><sourcefile name="MultiNSequenceWithQualityImpl.java"><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="5" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Alphabets.java"><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="1" cb="1"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="1" cb="1"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="11" mb="1" cb="1"/><line nr="81" mi="0" ci="7" mb="0" cb="2"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="12" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="85"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="4" covered="21"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="IO.java"><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="9" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="8" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="8" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="8" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="197" mi="0" ci="1" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="153"/><counter type="LINE" missed="1" covered="43"/><counter type="COMPLEXITY" missed="1" covered="31"/><counter type="METHOD" missed="1" covered="31"/><counter type="CLASS" missed="0" covered="10"/></sourcefile><sourcefile name="SequenceBuilder.java"/><sourcefile name="NSeq.java"/><sourcefile name="Sequence.java"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="9" ci="0" mb="2" cb="0"/><line nr="61" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="2"/><line nr="88" mi="0" ci="7" mb="1" cb="1"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="2" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="2" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="5" ci="0" mb="2" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="2" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="9" ci="0" mb="2" cb="0"/><line nr="115" mi="7" ci="0" mb="2" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="8" ci="0" mb="0" cb="0"/><line nr="124" mi="9" ci="0" mb="2" cb="0"/><line nr="125" mi="8" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="8" mb="0" cb="2"/><line nr="133" mi="0" ci="9" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="1" cb="1"/><line nr="140" mi="4" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="1" cb="1"/><line nr="142" mi="5" ci="0" mb="2" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="8" mb="0" cb="2"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="1" cb="1"/><line nr="151" mi="3" ci="0" mb="2" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="3" ci="0" mb="2" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="6" ci="0" mb="0" cb="0"/><line nr="171" mi="7" ci="0" mb="2" cb="0"/><line nr="172" mi="8" ci="0" mb="2" cb="0"/><line nr="173" mi="9" ci="0" mb="2" cb="0"/><line nr="174" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="160" covered="93"/><counter type="BRANCH" missed="32" covered="10"/><counter type="LINE" missed="40" covered="18"/><counter type="COMPLEXITY" missed="23" covered="10"/><counter type="METHOD" missed="5" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractSeq.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="1" cb="1"/><line nr="24" mi="5" ci="0" mb="0" cb="0"/><line nr="25" mi="0" ci="8" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="29"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NSequenceWithQualityBuilder.java"><line nr="26" mi="7" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="12" ci="0" mb="0" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SequencesUtils.java"><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="8" mb="0" cb="2"/><line nr="42" mi="0" ci="7" mb="0" cb="2"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="10" mb="0" cb="2"/><line nr="58" mi="0" ci="4" mb="0" cb="2"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="12" mb="2" cb="2"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="2"/><line nr="83" mi="0" ci="11" mb="0" cb="2"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="1" cb="1"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="1" cb="1"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="16" mb="0" cb="2"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="108" mi="0" ci="16" mb="0" cb="2"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="6" mb="0" cb="0"/><line nr="129" mi="0" ci="8" mb="0" cb="2"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="2"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="9" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="2" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="6" ci="0" mb="0" cb="0"/><line nr="149" mi="8" ci="0" mb="2" cb="0"/><line nr="150" mi="6" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="6" ci="0" mb="0" cb="0"/><line nr="161" mi="8" ci="0" mb="2" cb="0"/><line nr="162" mi="7" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="6" mb="0" cb="0"/><line nr="172" mi="0" ci="8" mb="0" cb="2"/><line nr="173" mi="0" ci="5" mb="0" cb="2"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="2"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="12" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="71" covered="233"/><counter type="BRANCH" missed="10" covered="30"/><counter type="LINE" missed="14" covered="45"/><counter type="COMPLEXITY" missed="10" covered="19"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnsafeFactory.java"><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="2"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="1" cb="1"/><line nr="55" mi="7" ci="0" mb="2" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="29" ci="0" mb="2" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="4"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="80"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="3" covered="16"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GeneticCode.java"><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="8" mb="0" cb="2"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="0" ci="8" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="0" cb="2"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="10" mb="0" cb="0"/><line nr="54" mi="0" ci="8" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="11" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="1" cb="1"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="7" mb="0" cb="2"/><line nr="74" mi="0" ci="17" mb="0" cb="0"/><line nr="75" mi="0" ci="12" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="11" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="2" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="7" ci="0" mb="2" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="7" ci="0" mb="2" cb="0"/><line nr="100" mi="17" ci="0" mb="0" cb="0"/><line nr="101" mi="12" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="8" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="81" covered="213"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="13" covered="38"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MultiNSequenceWithQuality.java"/><sourcefile name="Alphabet.java"><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="9" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="16" mb="0" cb="2"/><line nr="131" mi="0" ci="7" mb="1" cb="3"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="7" mb="1" cb="1"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="7" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="8" mb="0" cb="0"/><line nr="138" mi="0" ci="9" mb="0" cb="0"/><line nr="139" mi="0" ci="7" mb="0" cb="0"/><line nr="143" mi="0" ci="9" mb="0" cb="2"/><line nr="144" mi="0" ci="6" mb="1" cb="1"/><line nr="145" mi="14" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="8" mb="0" cb="2"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="8" ci="0" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="3" ci="0" mb="0" cb="0"/><line nr="227" mi="0" ci="6" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="3" mb="1" cb="1"/><line nr="264" mi="14" ci="0" mb="0" cb="0"/><line nr="265" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="0" ci="3" mb="0" cb="2"/><line nr="282" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="3" mb="1" cb="1"/><line nr="284" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="0" ci="3" mb="0" cb="0"/><line nr="286" mi="0" ci="3" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="308" mi="0" ci="3" mb="0" cb="0"/><line nr="318" mi="0" ci="6" mb="0" cb="0"/><line nr="319" mi="0" ci="8" mb="0" cb="2"/><line nr="320" mi="0" ci="6" mb="0" cb="0"/><line nr="321" mi="0" ci="3" mb="1" cb="1"/><line nr="322" mi="21" ci="0" mb="0" cb="0"/><line nr="323" mi="0" ci="4" mb="0" cb="0"/><line nr="325" mi="0" ci="3" mb="0" cb="0"/><line nr="335" mi="12" ci="0" mb="0" cb="0"/><line nr="344" mi="0" ci="3" mb="0" cb="0"/><line nr="356" mi="1" ci="6" mb="1" cb="1"/><line nr="362" mi="0" ci="6" mb="0" cb="0"/><line nr="368" mi="2" ci="0" mb="0" cb="0"/><line nr="369" mi="3" ci="0" mb="0" cb="0"/><line nr="370" mi="1" ci="0" mb="0" cb="0"/><line nr="372" mi="0" ci="2" mb="0" cb="0"/><line nr="373" mi="0" ci="3" mb="0" cb="0"/><line nr="374" mi="0" ci="1" mb="0" cb="0"/><line nr="378" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="89" covered="266"/><counter type="BRANCH" missed="7" covered="19"/><counter type="LINE" missed="11" covered="56"/><counter type="COMPLEXITY" missed="11" covered="25"/><counter type="METHOD" missed="4" covered="19"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ArraySeqBuilder.java"><line nr="22" mi="3" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="1" cb="1"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="2"/><line nr="41" mi="0" ci="2" mb="1" cb="1"/><line nr="42" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="2"/><line nr="46" mi="0" ci="16" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="1" cb="1"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="2"/><line nr="54" mi="0" ci="3" mb="0" cb="2"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="1" cb="1"/><line nr="57" mi="6" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="2"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="2"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="8" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="7" mb="0" cb="0"/><line nr="84" mi="0" ci="11" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="2"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="11" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="156"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="8" covered="34"/><counter type="COMPLEXITY" missed="5" covered="14"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractArraySequence.java"><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="7" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="4"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="2" cb="2"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="9" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="2"/><line nr="70" mi="2" ci="7" mb="2" cb="2"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="8" mb="0" cb="2"/><line nr="84" mi="0" ci="11" mb="0" cb="2"/><line nr="85" mi="0" ci="16" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="132"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="3" covered="25"/><counter type="COMPLEXITY" missed="4" covered="15"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NucleotideSequence.java"><line nr="30" mi="2" ci="5" mb="1" cb="1"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="10" mb="0" cb="0"/><line nr="54" mi="0" ci="10" mb="0" cb="0"/><line nr="59" mi="0" ci="10" mb="0" cb="0"/><line nr="64" mi="0" ci="10" mb="0" cb="0"/><line nr="69" mi="0" ci="10" mb="0" cb="0"/><line nr="74" mi="0" ci="10" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="84" mi="0" ci="10" mb="0" cb="0"/><line nr="89" mi="0" ci="10" mb="0" cb="0"/><line nr="94" mi="0" ci="10" mb="0" cb="0"/><line nr="99" mi="0" ci="10" mb="0" cb="0"/><line nr="104" mi="0" ci="10" mb="0" cb="0"/><line nr="109" mi="0" ci="10" mb="0" cb="0"/><line nr="114" mi="0" ci="10" mb="0" cb="0"/><line nr="119" mi="0" ci="10" mb="0" cb="0"/><line nr="121" mi="0" ci="64" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="4" ci="4" mb="2" cb="2"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="7" mb="2" cb="2"/><line nr="164" mi="0" ci="9" mb="2" cb="2"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="2"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="2"/><line nr="171" mi="3" ci="4" mb="1" cb="1"/><line nr="172" mi="5" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="2"/><line nr="176" mi="0" ci="6" mb="0" cb="0"/><line nr="177" mi="0" ci="6" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="189" mi="0" ci="12" mb="0" cb="0"/><line nr="198" mi="7" ci="0" mb="2" cb="0"/><line nr="199" mi="5" ci="0" mb="2" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="6" ci="0" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="3" ci="0" mb="0" cb="0"/><line nr="228" mi="7" ci="0" mb="2" cb="0"/><line nr="229" mi="11" ci="0" mb="0" cb="0"/><line nr="230" mi="6" ci="0" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="11" mb="0" cb="2"/><line nr="237" mi="0" ci="6" mb="0" cb="0"/><line nr="238" mi="0" ci="7" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="7" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="78" covered="348"/><counter type="BRANCH" missed="16" covered="16"/><counter type="LINE" missed="13" covered="46"/><counter type="COMPLEXITY" missed="17" covered="13"/><counter type="METHOD" missed="5" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SequenceWithQuality.java"><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="1" cb="1"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="8" ci="0" mb="0" cb="0"/><line nr="91" mi="13" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="2"/><line nr="107" mi="2" ci="7" mb="2" cb="2"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="11" mb="1" cb="1"/><line nr="112" mi="1" ci="4" mb="1" cb="1"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="8" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="130" mi="11" ci="0" mb="0" cb="0"/><line nr="135" mi="12" ci="0" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="77" covered="54"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="11" covered="13"/><counter type="COMPLEXITY" missed="10" covered="6"/><counter type="METHOD" missed="5" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractArrayAlphabet.java"><line nr="25" mi="0" ci="7" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AminoAcidAlphabet.java"><line nr="143" mi="0" ci="13" mb="0" cb="0"/><line nr="147" mi="0" ci="17" mb="0" cb="0"/><line nr="151" mi="0" ci="17" mb="0" cb="0"/><line nr="155" mi="0" ci="21" mb="0" cb="0"/><line nr="159" mi="0" ci="21" mb="0" cb="0"/><line nr="163" mi="0" ci="17" mb="0" cb="0"/><line nr="167" mi="0" ci="17" mb="0" cb="0"/><line nr="171" mi="0" ci="17" mb="0" cb="0"/><line nr="175" mi="0" ci="21" mb="0" cb="0"/><line nr="179" mi="0" ci="17" mb="0" cb="0"/><line nr="183" mi="0" ci="21" mb="0" cb="0"/><line nr="187" mi="0" ci="17" mb="0" cb="0"/><line nr="191" mi="0" ci="21" mb="0" cb="0"/><line nr="195" mi="0" ci="17" mb="0" cb="0"/><line nr="199" mi="0" ci="21" mb="0" cb="0"/><line nr="203" mi="0" ci="17" mb="0" cb="0"/><line nr="207" mi="0" ci="17" mb="0" cb="0"/><line nr="211" mi="0" ci="17" mb="0" cb="0"/><line nr="215" mi="0" ci="17" mb="0" cb="0"/><line nr="219" mi="0" ci="17" mb="0" cb="0"/><line nr="223" mi="0" ci="17" mb="0" cb="0"/><line nr="227" mi="0" ci="13" mb="0" cb="0"/><line nr="233" mi="0" ci="105" mb="0" cb="0"/><line nr="237" mi="0" ci="25" mb="0" cb="0"/><line nr="241" mi="0" ci="25" mb="0" cb="0"/><line nr="245" mi="0" ci="25" mb="0" cb="0"/><line nr="250" mi="0" ci="5" mb="0" cb="0"/><line nr="253" mi="0" ci="112" mb="0" cb="0"/><line nr="264" mi="0" ci="1" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="2"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="278" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="703"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="33"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AminoAcidSequence.java"><line nr="35" mi="2" ci="5" mb="1" cb="1"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="4" ci="4" mb="2" cb="2"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="17" ci="0" mb="2" cb="0"/><line nr="83" mi="2" ci="0" mb="2" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="17" ci="0" mb="2" cb="0"/><line nr="96" mi="2" ci="0" mb="2" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="16" ci="0" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="2" cb="0"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="6" ci="0" mb="0" cb="0"/><line nr="124" mi="7" ci="0" mb="0" cb="0"/><line nr="125" mi="6" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="2"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="2"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="8" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="2"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="2"/><line nr="143" mi="0" ci="3" mb="0" cb="2"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="4"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="165" mi="5" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="2"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="6" mb="0" cb="0"/><line nr="176" mi="0" ci="12" mb="0" cb="2"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="2"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="6" mb="0" cb="4"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="2"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="8" mb="0" cb="4"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="8" mb="0" cb="0"/><line nr="189" mi="0" ci="6" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="2"/><line nr="241" mi="1" ci="12" mb="1" cb="1"/><line nr="242" mi="0" ci="5" mb="0" cb="0"/><line nr="243" mi="0" ci="6" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="8" mb="0" cb="0"/><line nr="246" mi="0" ci="16" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="2"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="0" ci="5" mb="0" cb="2"/><line nr="250" mi="0" ci="15" mb="0" cb="2"/><line nr="251" mi="0" ci="6" mb="0" cb="4"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="0" ci="3" mb="0" cb="0"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="0" ci="6" mb="0" cb="4"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="257" mi="0" ci="10" mb="0" cb="0"/><line nr="258" mi="0" ci="7" mb="0" cb="0"/><line nr="259" mi="0" ci="6" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="2"/><line nr="261" mi="0" ci="7" mb="0" cb="0"/><line nr="262" mi="0" ci="1" mb="0" cb="0"/><line nr="263" mi="0" ci="7" mb="0" cb="0"/><line nr="264" mi="0" ci="6" mb="0" cb="0"/><line nr="285" mi="4" ci="0" mb="0" cb="0"/><line nr="305" mi="4" ci="0" mb="0" cb="0"/><line nr="328" mi="4" ci="0" mb="0" cb="0"/><line nr="347" mi="0" ci="2" mb="0" cb="0"/><line nr="348" mi="0" ci="3" mb="0" cb="0"/><line nr="349" mi="0" ci="4" mb="0" cb="0"/><line nr="350" mi="0" ci="1" mb="0" cb="0"/><line nr="353" mi="3" ci="0" mb="0" cb="0"/><line nr="357" mi="11" ci="0" mb="2" cb="0"/><line nr="362" mi="17" ci="0" mb="0" cb="0"/><line nr="367" mi="2" ci="3" mb="1" cb="1"/><line nr="368" mi="2" ci="3" mb="1" cb="1"/><line nr="370" mi="0" ci="3" mb="0" cb="0"/><line nr="372" mi="2" ci="5" mb="1" cb="1"/><line nr="373" mi="1" ci="8" mb="1" cb="1"/><line nr="378" mi="3" ci="0" mb="0" cb="0"/><line nr="379" mi="7" ci="0" mb="0" cb="0"/><line nr="380" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="177" covered="398"/><counter type="BRANCH" missed="20" covered="56"/><counter type="LINE" missed="28" covered="85"/><counter type="COMPLEXITY" missed="28" covered="37"/><counter type="METHOD" missed="14" covered="13"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Wildcard.java"><line nr="68" mi="11" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="2" cb="2"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="9" mb="1" cb="3"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="2"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="1" cb="1"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="2"/><line nr="104" mi="0" ci="7" mb="0" cb="0"/><line nr="105" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="8" mb="0" cb="2"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="14" mb="0" cb="2"/><line nr="213" mi="0" ci="12" mb="0" cb="2"/><line nr="224" mi="0" ci="3" mb="0" cb="2"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="0" cb="0"/><line nr="228" mi="0" ci="7" mb="0" cb="2"/><line nr="229" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="169"/><counter type="BRANCH" missed="4" covered="20"/><counter type="LINE" missed="5" covered="34"/><counter type="COMPLEXITY" missed="5" covered="19"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TranslationParameters.java"><line nr="24" mi="0" ci="7" mb="0" cb="0"/><line nr="25" mi="0" ci="7" mb="0" cb="0"/><line nr="26" mi="0" ci="7" mb="0" cb="0"/><line nr="27" mi="0" ci="7" mb="0" cb="0"/><line nr="28" mi="0" ci="7" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="1" cb="1"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="1" cb="1"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="2"/><line nr="67" mi="0" ci="2" mb="1" cb="3"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="1" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="1" cb="3"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="4" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="4" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="5" ci="0" mb="2" cb="0"/><line nr="126" mi="9" ci="0" mb="4" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="7" ci="0" mb="2" cb="0"/><line nr="131" mi="7" ci="0" mb="2" cb="0"/><line nr="132" mi="17" ci="0" mb="6" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="13" mb="0" cb="2"/><line nr="140" mi="0" ci="11" mb="0" cb="2"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="1" cb="1"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="17" ci="0" mb="2" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="119" covered="179"/><counter type="BRANCH" missed="31" covered="15"/><counter type="LINE" missed="25" covered="41"/><counter type="COMPLEXITY" missed="26" covered="13"/><counter type="METHOD" missed="6" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NSequenceWithQuality.java"><line nr="36" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="10" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="11" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="2" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="16" ci="0" mb="0" cb="0"/><line nr="96" mi="13" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="6" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="57" covered="54"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="12"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="6" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1512" covered="4668"/><counter type="BRANCH" missed="198" covered="252"/><counter type="LINE" missed="272" covered="671"/><counter type="COMPLEXITY" missed="221" covered="285"/><counter type="METHOD" missed="84" covered="193"/><counter type="CLASS" missed="2" covered="35"/></package><package name="com/milaboratory/core/io/sequence/fastq"><class name="com/milaboratory/core/io/sequence/fastq/FastqRecordsReader$1" sourcefilename="FastqRecordsReader.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="262"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([BII)I" line="266"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="271"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/fastq/FastqRecordsReader$2" sourcefilename="FastqRecordsReader.java"><method name="&lt;init&gt;" desc="(Ljava/io/RandomAccessFile;)V" line="277"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([BII)I" line="281"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="286"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="14"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/fastq/QualityFormat" sourcefilename="QualityFormat.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;IBBBLjava/lang/String;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMinValue" desc="()B" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxValue" desc="()B" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOffset" desc="()B" line="55"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromName" desc="(Ljava/lang/String;)Lcom/milaboratory/core/io/sequence/fastq/QualityFormat;" line="59"><counter type="INSTRUCTION" missed="16" covered="11"/><counter type="BRANCH" missed="2" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="75"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="72"/><counter type="BRANCH" missed="2" covered="1"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/fastq/SingleFastqIndexer" sourcefilename="SingleFastqIndexer.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/io/sequence/fastq/SingleFastqReader;J)V" line="30"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTotalSize" desc="(J)Lcom/milaboratory/core/io/sequence/fastq/SingleFastqReader;" line="36"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProgress" desc="()D" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFinished" desc="()Z" line="46"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="take" desc="()Lcom/milaboratory/core/io/sequence/SingleRead;" line="51"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberOfReads" desc="()J" line="60"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="65"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createIndex" desc="()Lcom/milaboratory/core/io/util/FileIndex;" line="69"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readToEnd" desc="()Lcom/milaboratory/core/io/sequence/fastq/SingleFastqIndexer;" line="74"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="51"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="8" covered="11"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/fastq/FastqRecordsReader" sourcefilename="FastqRecordsReader.java"><method name="&lt;init&gt;" desc="(ZLjava/io/RandomAccessFile;IZZ)V" line="60"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ZLjava/io/InputStream;IZZ)V" line="68"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ZLcom/milaboratory/core/io/sequence/fastq/FastqRecordsReader$InputDataWrapper;IZZ)V" line="37"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createRead" desc="(JLcom/milaboratory/core/io/sequence/fastq/QualityFormat;)Lcom/milaboratory/core/io/sequence/SingleRead;" line="90"><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fillBuffer" desc="(I)V" line="109"><counter type="INSTRUCTION" missed="12" covered="81"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextRecord" desc="(Z)Z" line="133"><counter type="INSTRUCTION" missed="43" covered="196"/><counter type="BRANCH" missed="12" covered="44"/><counter type="LINE" missed="12" covered="50"/><counter type="COMPLEXITY" missed="11" covered="18"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="223"><counter type="INSTRUCTION" missed="7" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetBuffer" desc="()V" line="238"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/io/InputStream;)Lcom/milaboratory/core/io/sequence/fastq/FastqRecordsReader$InputDataWrapper;" line="262"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/io/RandomAccessFile;)Lcom/milaboratory/core/io/sequence/fastq/FastqRecordsReader$InputDataWrapper;" line="277"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="62" covered="434"/><counter type="BRANCH" missed="19" covered="57"/><counter type="LINE" missed="18" covered="93"/><counter type="COMPLEXITY" missed="17" covered="31"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/fastq/SingleFastqWriter" sourcefilename="SingleFastqWriter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="38"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="42"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Lcom/milaboratory/core/io/sequence/fastq/QualityFormat;Lcom/milaboratory/core/io/CompressionType;)V" line="50"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/milaboratory/core/io/sequence/fastq/QualityFormat;Lcom/milaboratory/core/io/CompressionType;)V" line="54"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;Lcom/milaboratory/core/io/sequence/fastq/QualityFormat;Lcom/milaboratory/core/io/CompressionType;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;Lcom/milaboratory/core/io/sequence/fastq/QualityFormat;Lcom/milaboratory/core/io/CompressionType;I)V" line="61"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Lcom/milaboratory/core/io/sequence/SingleRead;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="156"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flushIfNeededToWrite" desc="(I)V" line="102"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="109"><counter type="INSTRUCTION" missed="6" covered="13"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="119"><counter type="INSTRUCTION" missed="6" covered="7"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="56" covered="217"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="13" covered="40"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="4" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/fastq/PairedFastqReader" sourcefilename="PairedFastqReader.java"><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/io/File;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="36"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/io/File;ZZ)V" line="42"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;ZZ)V" line="48"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/io/File;Z)V" line="54"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Z)V" line="60"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/io/File;Lcom/milaboratory/core/io/sequence/fastq/QualityFormat;Lcom/milaboratory/core/io/CompressionType;)V" line="66"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/milaboratory/core/io/sequence/fastq/QualityFormat;Lcom/milaboratory/core/io/CompressionType;)V" line="72"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/io/File;Lcom/milaboratory/core/io/sequence/fastq/QualityFormat;Lcom/milaboratory/core/io/CompressionType;ZZ)V" line="79"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/milaboratory/core/io/sequence/fastq/QualityFormat;Lcom/milaboratory/core/io/CompressionType;ZZ)V" line="88"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/io/InputStream;Lcom/milaboratory/core/io/sequence/fastq/QualityFormat;Lcom/milaboratory/core/io/CompressionType;ZIZZ)V" line="98"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/io/InputStream;)V" line="103"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/io/InputStream;Z)V" line="107"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/io/InputStream;Lcom/milaboratory/core/io/CompressionType;)V" line="111"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/io/sequence/fastq/SingleFastqReader;Lcom/milaboratory/core/io/sequence/fastq/SingleFastqReader;)V" line="115"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="271" covered="24"/><counter type="LINE" missed="26" covered="4"/><counter type="COMPLEXITY" missed="13" covered="2"/><counter type="METHOD" missed="13" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/fastq/WrongQualityFormat" sourcefilename="WrongQualityFormat.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="25"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/io/sequence/fastq/SingleFastqReader" sourcefilename="SingleFastqReader.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ZZ)V" line="65"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Z)V" line="79"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="89"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/milaboratory/core/io/CompressionType;)V" line="100"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/milaboratory/core/io/sequence/fastq/QualityFormat;Lcom/milaboratory/core/io/CompressionType;)V" line="112"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;ZZ)V" line="126"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Z)V" line="140"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Lcom/milaboratory/core/io/CompressionType;)V" line="161"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Lcom/milaboratory/core/io/sequence/fastq/QualityFormat;Lcom/milaboratory/core/io/CompressionType;)V" line="173"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Lcom/milaboratory/core/io/CompressionType;)V" line="184"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="194"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Z)V" line="204"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Lcom/milaboratory/core/io/sequence/fastq/QualityFormat;Lcom/milaboratory/core/io/CompressionType;)V" line="216"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Lcom/milaboratory/core/io/sequence/fastq/QualityFormat;Lcom/milaboratory/core/io/CompressionType;ZIZZ)V" line="238"><counter type="INSTRUCTION" missed="15" covered="66"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="4" covered="17"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTotalSize" desc="(J)Lcom/milaboratory/core/io/sequence/fastq/SingleFastqReader;" line="274"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQualityFormat" desc="()Lcom/milaboratory/core/io/sequence/fastq/QualityFormat;" line="279"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProgress" desc="()D" line="285"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFinished" desc="()Z" line="290"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="take" desc="()Lcom/milaboratory/core/io/sequence/SingleRead;" line="295"><counter type="INSTRUCTION" missed="26" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberOfReads" desc="()J" line="311"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="320"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="guessFormat" desc="()Lcom/milaboratory/core/io/sequence/fastq/QualityFormat;" line="324"><counter type="INSTRUCTION" missed="4" covered="62"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="187" covered="219"/><counter type="BRANCH" missed="17" covered="27"/><counter type="LINE" missed="32" covered="49"/><counter type="COMPLEXITY" missed="26" covered="20"/><counter type="METHOD" missed="13" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/fastq/RandomAccessFastqReader" sourcefilename="RandomAccessFastqReader.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="45"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Z)V" line="58"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;ZZ)V" line="72"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Lcom/milaboratory/core/io/util/FileIndex;ZZ)V" line="86"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/RandomAccessFile;Lcom/milaboratory/core/io/util/FileIndex;ZZ)V" line="99"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberOfReads" desc="()J" line="107"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="take" desc="()Lcom/milaboratory/core/io/sequence/SingleRead;" line="112"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="take" desc="(J)Lcom/milaboratory/core/io/sequence/SingleRead;" line="119"><counter type="INSTRUCTION" missed="8" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="take0" desc="()Lcom/milaboratory/core/io/sequence/SingleRead;" line="131"><counter type="INSTRUCTION" missed="24" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skip" desc="()V" line="144"><counter type="INSTRUCTION" missed="24" covered="7"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetBufferOnSeek" desc="()V" line="155"><counter type="INSTRUCTION" missed="6" covered="5"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="163"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="119" covered="70"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="21" covered="18"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="6" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/fastq/RandomAccessPairedFastqReader" sourcefilename="RandomAccessPairedFastqReader.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="35"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/RandomAccessFile;Lcom/milaboratory/core/io/util/FileIndex;Ljava/io/RandomAccessFile;Lcom/milaboratory/core/io/util/FileIndex;)V" line="40"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V" line="46"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/RandomAccessFile;Lcom/milaboratory/core/io/util/FileIndex;Ljava/io/RandomAccessFile;Lcom/milaboratory/core/io/util/FileIndex;ZZ)V" line="53"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/io/sequence/fastq/RandomAccessFastqReader;Lcom/milaboratory/core/io/sequence/fastq/RandomAccessFastqReader;)V" line="57"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberOfReads" desc="()J" line="67"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="seekToRecord" desc="(J)V" line="71"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="take" desc="(J)Lcom/milaboratory/core/io/sequence/PairedRead;" line="76"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="take" desc="()Lcom/milaboratory/core/io/sequence/PairedRead;" line="86"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="96"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="184" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="35" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/io/sequence/fastq/FastqRecordsReader$InputDataWrapper" sourcefilename="FastqRecordsReader.java"><method name="readFully" desc="([BII)I" line="248"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/fastq/PairedFastqWriter" sourcefilename="PairedFastqWriter.java"><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/io/File;)V" line="30"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="34"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/milaboratory/core/io/sequence/fastq/QualityFormat;Lcom/milaboratory/core/io/CompressionType;)V" line="38"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/io/sequence/fastq/SingleFastqWriter;Lcom/milaboratory/core/io/sequence/fastq/SingleFastqWriter;)V" line="42"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Lcom/milaboratory/core/io/sequence/PairedRead;)V" line="48"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="54"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="69"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="135" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="QualityFormat.java"><line nr="23" mi="0" ci="12" mb="0" cb="0"/><line nr="29" mi="0" ci="10" mb="0" cb="0"/><line nr="35" mi="0" ci="10" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="9" mb="2" cb="1"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="14" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="72"/><counter type="BRANCH" missed="2" covered="1"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WrongQualityFormat.java"><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="1" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PairedFastqReader.java"><line nr="31" mi="0" ci="10" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="10" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="14" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="14" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="14" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="14" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="28" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="28" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="28" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="28" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="22" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="18" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="20" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="20" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="12" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="271" covered="24"/><counter type="LINE" missed="26" covered="4"/><counter type="COMPLEXITY" missed="13" covered="2"/><counter type="METHOD" missed="13" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RandomAccessPairedFastqReader.java"><line nr="29" mi="8" ci="0" mb="2" cb="0"/><line nr="35" mi="8" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="8" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="16" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="16" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="7" ci="0" mb="2" cb="0"/><line nr="59" mi="5" ci="0" mb="2" cb="0"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="4" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="10" ci="0" mb="6" cb="0"/><line nr="81" mi="14" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="4" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="10" ci="0" mb="6" cb="0"/><line nr="91" mi="14" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="184" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="35" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SingleFastqReader.java"><line nr="35" mi="2" ci="5" mb="1" cb="1"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="13" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="12" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="16" ci="0" mb="2" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="13" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="12" ci="0" mb="0" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><line nr="173" mi="16" ci="0" mb="2" cb="0"/><line nr="174" mi="1" ci="0" mb="0" cb="0"/><line nr="184" mi="9" ci="0" mb="0" cb="0"/><line nr="185" mi="1" ci="0" mb="0" cb="0"/><line nr="194" mi="0" ci="9" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="204" mi="9" ci="0" mb="0" cb="0"/><line nr="205" mi="1" ci="0" mb="0" cb="0"/><line nr="216" mi="0" ci="9" mb="0" cb="0"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="238" mi="0" ci="2" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="1" cb="1"/><line nr="241" mi="4" ci="0" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="0" cb="2"/><line nr="244" mi="0" ci="7" mb="0" cb="0"/><line nr="246" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="6" mb="0" cb="0"/><line nr="251" mi="0" ci="10" mb="0" cb="0"/><line nr="252" mi="0" ci="10" mb="0" cb="0"/><line nr="255" mi="0" ci="2" mb="0" cb="2"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="258" mi="0" ci="4" mb="0" cb="0"/><line nr="260" mi="0" ci="2" mb="1" cb="1"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="1" cb="1"/><line nr="265" mi="2" ci="0" mb="2" cb="0"/><line nr="266" mi="5" ci="0" mb="0" cb="0"/><line nr="268" mi="4" ci="0" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="1" mb="0" cb="0"/><line nr="274" mi="3" ci="0" mb="0" cb="0"/><line nr="275" mi="2" ci="0" mb="0" cb="0"/><line nr="279" mi="4" ci="5" mb="2" cb="2"/><line nr="280" mi="0" ci="3" mb="0" cb="0"/><line nr="285" mi="18" ci="0" mb="2" cb="0"/><line nr="290" mi="5" ci="0" mb="0" cb="0"/><line nr="295" mi="0" ci="5" mb="1" cb="1"/><line nr="296" mi="2" ci="0" mb="0" cb="0"/><line nr="299" mi="0" ci="5" mb="0" cb="2"/><line nr="300" mi="0" ci="2" mb="0" cb="0"/><line nr="301" mi="1" ci="0" mb="0" cb="0"/><line nr="302" mi="23" ci="0" mb="0" cb="0"/><line nr="305" mi="0" ci="1" mb="0" cb="0"/><line nr="306" mi="0" ci="13" mb="0" cb="0"/><line nr="311" mi="3" ci="0" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="0"/><line nr="321" mi="0" ci="1" mb="0" cb="0"/><line nr="324" mi="0" ci="4" mb="0" cb="0"/><line nr="327" mi="0" ci="5" mb="0" cb="2"/><line nr="329" mi="0" ci="11" mb="0" cb="2"/><line nr="330" mi="0" ci="6" mb="0" cb="0"/><line nr="331" mi="0" ci="12" mb="0" cb="2"/><line nr="332" mi="0" ci="12" mb="0" cb="2"/><line nr="337" mi="0" ci="4" mb="1" cb="3"/><line nr="338" mi="2" ci="0" mb="0" cb="0"/><line nr="340" mi="0" ci="2" mb="0" cb="2"/><line nr="341" mi="0" ci="2" mb="0" cb="0"/><line nr="342" mi="0" ci="2" mb="1" cb="1"/><line nr="343" mi="0" ci="2" mb="0" cb="0"/><line nr="345" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="187" covered="219"/><counter type="BRANCH" missed="17" covered="27"/><counter type="LINE" missed="32" covered="49"/><counter type="COMPLEXITY" missed="26" covered="20"/><counter type="METHOD" missed="13" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RandomAccessFastqReader.java"><line nr="45" mi="11" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="11" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="11" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="10" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="10" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="6" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="2" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="1" cb="1"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="2"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="23" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="8" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="1" ci="0" mb="0" cb="0"/><line nr="146" mi="23" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="119" covered="70"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="21" covered="18"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="6" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PairedFastqWriter.java"><line nr="30" mi="10" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="10" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="22" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="12" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="7" ci="0" mb="0" cb="0"/><line nr="49" mi="7" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="17" ci="0" mb="2" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="2" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="17" ci="0" mb="2" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="2" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="135" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SingleFastqIndexer.java"><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="2"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="16" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="9" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="2" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="51"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="8" covered="11"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SingleFastqWriter.java"><line nr="38" mi="10" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="10" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="9" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="9" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="11" mb="0" cb="0"/><line nr="73" mi="0" ci="7" mb="0" cb="2"/><line nr="74" mi="0" ci="14" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="11" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="2"/><line nr="86" mi="0" ci="14" mb="0" cb="0"/><line nr="88" mi="0" ci="11" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="11" mb="0" cb="0"/><line nr="93" mi="0" ci="11" mb="0" cb="0"/><line nr="95" mi="0" ci="8" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="11" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="1" cb="1"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="56" covered="217"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="13" covered="40"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="4" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FastqRecordsReader.java"><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="2"/><line nr="91" mi="0" ci="36" mb="0" cb="0"/><line nr="101" mi="0" ci="16" mb="0" cb="0"/><line nr="102" mi="0" ci="16" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="1" cb="1"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="2"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="2"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="1" cb="1"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="2"/><line nr="123" mi="0" ci="12" mb="0" cb="0"/><line nr="124" mi="0" ci="18" mb="0" cb="0"/><line nr="125" mi="2" ci="12" mb="1" cb="1"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="3" ci="3" mb="3" cb="1"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="1" cb="1"/><line nr="138" mi="4" ci="0" mb="2" cb="0"/><line nr="139" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="2"/><line nr="144" mi="0" ci="2" mb="1" cb="1"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="2"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="2"/><line nr="154" mi="0" ci="2" mb="0" cb="2"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="7" mb="1" cb="1"/><line nr="160" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="12" mb="0" cb="4"/><line nr="168" mi="0" ci="5" mb="0" cb="2"/><line nr="169" mi="0" ci="2" mb="1" cb="1"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="12" mb="0" cb="4"/><line nr="176" mi="0" ci="5" mb="0" cb="2"/><line nr="177" mi="0" ci="2" mb="1" cb="1"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="2"/><line nr="184" mi="0" ci="2" mb="1" cb="1"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="6" mb="1" cb="1"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="193" mi="0" ci="12" mb="0" cb="4"/><line nr="194" mi="0" ci="5" mb="0" cb="2"/><line nr="195" mi="0" ci="2" mb="1" cb="1"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="197" mi="0" ci="1" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="12" mb="0" cb="4"/><line nr="203" mi="0" ci="5" mb="0" cb="2"/><line nr="204" mi="0" ci="2" mb="1" cb="1"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="11" mb="1" cb="1"/><line nr="211" mi="5" ci="0" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="6" mb="1" cb="1"/><line nr="224" mi="1" ci="0" mb="0" cb="0"/><line nr="229" mi="0" ci="5" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="1" ci="0" mb="0" cb="0"/><line nr="233" mi="5" ci="0" mb="0" cb="0"/><line nr="234" mi="0" ci="1" mb="0" cb="0"/><line nr="235" mi="0" ci="1" mb="0" cb="0"/><line nr="238" mi="0" ci="6" mb="0" cb="0"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="240" mi="0" ci="1" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="250" mi="0" ci="6" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="2"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="0" cb="0"/><line nr="254" mi="0" ci="4" mb="0" cb="0"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="0" ci="2" mb="0" cb="2"/><line nr="257" mi="0" ci="2" mb="0" cb="0"/><line nr="262" mi="0" ci="12" mb="0" cb="0"/><line nr="266" mi="0" ci="7" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="0" ci="1" mb="0" cb="0"/><line nr="277" mi="0" ci="12" mb="0" cb="0"/><line nr="281" mi="0" ci="7" mb="0" cb="0"/><line nr="286" mi="3" ci="0" mb="0" cb="0"/><line nr="287" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="66" covered="494"/><counter type="BRANCH" missed="19" covered="61"/><counter type="LINE" missed="20" covered="106"/><counter type="COMPLEXITY" missed="18" covered="39"/><counter type="METHOD" missed="1" covered="16"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><counter type="INSTRUCTION" missed="1071" covered="1147"/><counter type="BRANCH" missed="78" covered="99"/><counter type="LINE" missed="192" covered="243"/><counter type="COMPLEXITY" missed="117" covered="88"/><counter type="METHOD" missed="64" covered="52"/><counter type="CLASS" missed="3" covered="10"/></package><package name="com/milaboratory/core/alignment/kaligner1"><class name="com/milaboratory/core/alignment/kaligner1/AbstractKAlignerParameters" sourcefilename="AbstractKAlignerParameters.java"/><class name="com/milaboratory/core/alignment/kaligner1/KAlignmentHit" sourcefilename="KAlignmentHit.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/kaligner1/KAlignmentResult;I)V" line="46"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRecordPayload" desc="()Ljava/lang/Object;" line="61"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()I" line="65"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateAlignment" desc="()V" line="69"><counter type="INSTRUCTION" missed="8" covered="532"/><counter type="BRANCH" missed="7" covered="55"/><counter type="LINE" missed="0" covered="116"/><counter type="COMPLEXITY" missed="7" covered="25"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKMersHit" desc="()Lcom/milaboratory/core/alignment/kaligner1/KMappingHit;" line="268"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAlignment" desc="()Lcom/milaboratory/core/alignment/Alignment;" line="272"><counter type="INSTRUCTION" missed="5" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResult" desc="()Lcom/milaboratory/core/alignment/kaligner1/KAlignmentResult;" line="278"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHitSequence" desc="()Lcom/milaboratory/core/sequence/NucleotideSequence;" line="282"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printHitAlignment" desc="(Lcom/milaboratory/core/alignment/kaligner1/KAlignmentHit;)V" line="286"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="spaces" desc="(I)Ljava/lang/String;" line="302"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="115" covered="574"/><counter type="BRANCH" missed="13" covered="57"/><counter type="LINE" missed="19" covered="126"/><counter type="COMPLEXITY" missed="16" covered="30"/><counter type="METHOD" missed="5" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner1/KAlignmentResultP" sourcefilename="KAlignmentResultP.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lcom/milaboratory/core/alignment/kaligner1/KAligner;Lcom/milaboratory/core/alignment/kaligner1/KMappingResult;Lcom/milaboratory/core/sequence/NucleotideSequence;II)V" line="30"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQuery" desc="()Ljava/lang/Object;" line="37"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/kaligner1/KAlignmentResult$2" sourcefilename="KAlignmentResult.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lcom/milaboratory/core/alignment/kaligner1/KAlignmentHit;Lcom/milaboratory/core/alignment/kaligner1/KAlignmentHit;)I" line="53"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner1/KAlignmentResult$1" sourcefilename="KAlignmentResult.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lcom/milaboratory/core/alignment/kaligner1/KAlignmentHit;Lcom/milaboratory/core/alignment/kaligner1/KAlignmentHit;)I" line="41"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner1/KMappingResult" sourcefilename="KMappingResult.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/util/IntArrayList;Ljava/util/List;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSeedsCount" desc="()I" line="51"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSeedPosition" desc="(I)I" line="55"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHits" desc="()Ljava/util/List;" line="59"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="9"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner1/KAlignmentResult" sourcefilename="KAlignmentResult.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/kaligner1/KAligner;Lcom/milaboratory/core/alignment/kaligner1/KMappingResult;Lcom/milaboratory/core/sequence/NucleotideSequence;II)V" line="90"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAligner" desc="()Lcom/milaboratory/core/alignment/kaligner1/KAligner;" line="107"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMappingResult" desc="()Lcom/milaboratory/core/alignment/kaligner1/KMappingResult;" line="116"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasHits" desc="()Z" line="125"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBestHit" desc="()Lcom/milaboratory/core/alignment/kaligner1/KAlignmentHit;" line="137"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHits" desc="()Ljava/util/List;" line="149"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTarget" desc="()Lcom/milaboratory/core/sequence/NucleotideSequence;" line="158"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTargetFrom" desc="()I" line="167"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTargetTo" desc="()I" line="176"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_calculateAllAlignments" desc="()V" line="183"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sortAccordingToMapperScores" desc="()V" line="191"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateAllAlignments" desc="()V" line="198"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="refresh" desc="()V" line="206"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sortHits" desc="(DDI)V" line="218"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="235"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="179"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="8" covered="36"/><counter type="COMPLEXITY" missed="7" covered="17"/><counter type="METHOD" missed="6" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner1/KMapper$Info" sourcefilename="KMapper.java"/><class name="com/milaboratory/core/alignment/kaligner1/KMapper" sourcefilename="KMapper.java"><method name="&lt;init&gt;" desc="(IIIFFIFFFIZZ)V" line="114"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(III[[I[IFFFFFIIZZIIZ[I[IIIILcom/milaboratory/util/BitArray;)V" line="114"><counter type="INSTRUCTION" missed="92" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createFromParameters" desc="(Lcom/milaboratory/core/alignment/kaligner1/KAlignerParameters;)Lcom/milaboratory/core/alignment/kaligner1/KMapper;" line="218"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFloatingLeftBound" desc="(Z)Lcom/milaboratory/core/alignment/kaligner1/KMapper;" line="227"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFloatingRightBound" desc="(Z)Lcom/milaboratory/core/alignment/kaligner1/KMapper;" line="234"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBestOffset" desc="(Lcom/milaboratory/util/IntArrayList;III)I" line="245"><counter type="INSTRUCTION" missed="4" covered="102"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxIndex" desc="([I)I" line="281"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addKmer" desc="(III)V" line="295"><counter type="INSTRUCTION" missed="5" covered="57"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addReference" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;)I" line="311"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addReference" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;II)I" line="328"><counter type="INSTRUCTION" missed="0" covered="168"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureBuilt" desc="()V" line="372"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getScoreFromOffsets" desc="(Lcom/milaboratory/util/IntArrayList;Lcom/milaboratory/core/alignment/kaligner1/KMapper$Info;)V" line="390"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="align" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;)Lcom/milaboratory/core/alignment/kaligner1/KMappingResult;" line="416"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="align" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;II)Lcom/milaboratory/core/alignment/kaligner1/KMappingResult;" line="431"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="align" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;IILcom/milaboratory/util/BitArray;)Lcom/milaboratory/core/alignment/kaligner1/KMappingResult;" line="447"><counter type="INSTRUCTION" missed="7" covered="809"/><counter type="BRANCH" missed="3" covered="103"/><counter type="LINE" missed="2" covered="127"/><counter type="COMPLEXITY" missed="3" covered="51"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKValue" desc="()I" line="704"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAbsoluteMinScore" desc="()F" line="713"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaxDistance" desc="()I" line="722"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinDistance" desc="()I" line="731"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaxIndels" desc="()I" line="740"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRelativeMinScore" desc="()F" line="749"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRecordSizeSummaryStatistics" desc="()Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;" line="756"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="764"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="284" covered="1421"/><counter type="BRANCH" missed="11" covered="153"/><counter type="LINE" missed="44" covered="236"/><counter type="COMPLEXITY" missed="21" covered="85"/><counter type="METHOD" missed="11" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner1/KAlignerParameters$1" sourcefilename="KAlignerParameters.java"><method name="&lt;init&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner1/KAlignerParameters" sourcefilename="KAlignerParameters.java"><method name="getByName" desc="(Ljava/lang/String;)Lcom/milaboratory/core/alignment/kaligner1/KAlignerParameters;" line="61"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAvailableNames" desc="()Ljava/util/Set;" line="73"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="140"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IZZFFFFFIIIIIFFILcom/milaboratory/core/alignment/LinearGapAlignmentScoring;)V" line="180"><counter type="INSTRUCTION" missed="5" covered="59"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAligner" desc="()Lcom/milaboratory/core/alignment/kaligner1/KAligner;" line="204"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMapperKValue" desc="()I" line="213"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMapperKValue" desc="(I)Lcom/milaboratory/core/alignment/kaligner1/KAlignerParameters;" line="223"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperAbsoluteMinScore" desc="()F" line="234"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMapperAbsoluteMinScore" desc="(F)Lcom/milaboratory/core/alignment/kaligner1/KAlignerParameters;" line="245"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperRelativeMinScore" desc="()F" line="257"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMapperRelativeMinScore" desc="(F)Lcom/milaboratory/core/alignment/kaligner1/KAlignerParameters;" line="268"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperMatchScore" desc="()F" line="278"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMapperMatchScore" desc="(F)Lcom/milaboratory/core/alignment/kaligner1/KAlignerParameters;" line="289"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperMismatchPenalty" desc="()F" line="299"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMapperMismatchPenalty" desc="(F)Lcom/milaboratory/core/alignment/kaligner1/KAlignerParameters;" line="310"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMinAlignmentLength" desc="()I" line="320"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMinAlignmentLength" desc="(I)Lcom/milaboratory/core/alignment/kaligner1/KAlignerParameters;" line="330"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxAdjacentIndels" desc="()I" line="340"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMaxAdjacentIndels" desc="(I)Lcom/milaboratory/core/alignment/kaligner1/KAlignerParameters;" line="350"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperMinSeedsDistance" desc="()I" line="361"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMapperMinSeedsDistance" desc="(I)Lcom/milaboratory/core/alignment/kaligner1/KAlignerParameters;" line="372"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperMaxSeedsDistance" desc="()I" line="383"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMapperMaxSeedsDistance" desc="(I)Lcom/milaboratory/core/alignment/kaligner1/KAlignerParameters;" line="394"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAlignmentStopPenalty" desc="()I" line="405"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAlignmentStopPenalty" desc="(I)Lcom/milaboratory/core/alignment/kaligner1/KAlignerParameters;" line="416"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getScoring" desc="()Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;" line="427"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setScoring" desc="(Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;)Lcom/milaboratory/core/alignment/kaligner1/KAlignerParameters;" line="437"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFloatingLeftBound" desc="()Z" line="450"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFloatingLeftBound" desc="(Z)Lcom/milaboratory/core/alignment/kaligner1/KAlignerParameters;" line="461"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFloatingRightBound" desc="()Z" line="472"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFloatingRightBound" desc="(Z)Lcom/milaboratory/core/alignment/kaligner1/KAlignerParameters;" line="483"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperOffsetShiftPenalty" desc="()F" line="493"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMapperOffsetShiftPenalty" desc="(F)Lcom/milaboratory/core/alignment/kaligner1/KAlignerParameters;" line="503"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAbsoluteMinScore" desc="()F" line="513"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAbsoluteMinScore" desc="(F)Lcom/milaboratory/core/alignment/kaligner1/KAlignerParameters;" line="523"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRelativeMinScore" desc="()F" line="535"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRelativeMinScore" desc="(F)Lcom/milaboratory/core/alignment/kaligner1/KAlignerParameters;" line="546"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxHits" desc="()I" line="557"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMaxHits" desc="(I)Lcom/milaboratory/core/alignment/kaligner1/KAlignerParameters;" line="567"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/milaboratory/core/alignment/kaligner1/KAlignerParameters;" line="574"><counter type="INSTRUCTION" missed="6" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="585"><counter type="INSTRUCTION" missed="32" covered="91"/><counter type="BRANCH" missed="17" covered="17"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="17" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="610"><counter type="INSTRUCTION" missed="145" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="630"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="6" covered="21"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="220" covered="342"/><counter type="BRANCH" missed="37" covered="23"/><counter type="LINE" missed="27" covered="107"/><counter type="COMPLEXITY" missed="33" covered="41"/><counter type="METHOD" missed="3" covered="41"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner1/KAligner" sourcefilename="KAligner.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/kaligner1/KAlignerParameters;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/kaligner1/KAlignerParameters;Z)V" line="71"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/kaligner1/KMapper;Lcom/milaboratory/core/alignment/kaligner1/KAlignerParameters;Ljava/util/List;Lgnu/trove/map/hash/TIntObjectHashMap;ZI)V" line="71"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setThreadCount" desc="(I)V" line="127"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addReference" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;)I" line="137"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFilter" desc="(Lcc/redberry/primitives/Filter;)Lcom/milaboratory/util/BitArray;" line="142"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addReference" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;II)I" line="164"><counter type="INSTRUCTION" missed="9" covered="24"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReference" desc="(I)Lcom/milaboratory/core/sequence/NucleotideSequence;" line="179"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFloatingLeftBound" desc="(Z)Lcom/milaboratory/core/alignment/kaligner1/KAligner;" line="185"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFloatingRightBound" desc="(Z)Lcom/milaboratory/core/alignment/kaligner1/KAligner;" line="195"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="align" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;)Lcom/milaboratory/core/alignment/kaligner1/KAlignmentResult;" line="224"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="align" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;II)Lcom/milaboratory/core/alignment/kaligner1/KAlignmentResult;" line="252"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="align" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;IIZLcom/milaboratory/util/BitArray;)Lcom/milaboratory/core/alignment/kaligner1/KAlignmentResult;" line="284"><counter type="INSTRUCTION" missed="2" covered="38"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="align" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;IILcom/milaboratory/util/BitArray;)Lcom/milaboratory/core/alignment/batch/AlignmentResult;" line="302"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="align" desc="(Lcc/redberry/pipe/OutputPort;Lcom/milaboratory/core/alignment/batch/SequenceExtractor;)Lcc/redberry/pipe/OutputPort;" line="308"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="align" desc="(Lcc/redberry/pipe/OutputPort;)Lcc/redberry/pipe/OutputPort;" line="326"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addReference" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;Ljava/lang/Object;)V" line="343"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrapPipe" desc="(Lcc/redberry/pipe/Processor;Lcc/redberry/pipe/OutputPort;)Lcc/redberry/pipe/OutputPort;" line="348"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="202" covered="139"/><counter type="BRANCH" missed="21" covered="7"/><counter type="LINE" missed="42" covered="30"/><counter type="COMPLEXITY" missed="22" covered="11"/><counter type="METHOD" missed="9" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner1/KMappingHit" sourcefilename="KMappingHit.java"><method name="&lt;init&gt;" desc="(IIFII)V" line="53"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFrom" desc="()I" line="62"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTo" desc="()I" line="66"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="71"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="78"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="92"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="94" covered="18"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="14" covered="7"/><counter type="COMPLEXITY" missed="12" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner1/KAligner$1" sourcefilename="KAligner.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/kaligner1/KAligner;Lcom/milaboratory/core/alignment/batch/SequenceExtractor;)V" line="311"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="process" desc="(Ljava/lang/Object;)Lcom/milaboratory/core/alignment/kaligner1/KAlignmentResultP;" line="314"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/alignment/kaligner1/KAligner$2" sourcefilename="KAligner.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/kaligner1/KAligner;)V" line="329"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="process" desc="(Lcom/milaboratory/core/alignment/batch/HasSequence;)Lcom/milaboratory/core/alignment/kaligner1/KAlignmentResultP;" line="332"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="KMappingResult.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="9"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KMappingHit.java"><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="20" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="2" cb="0"/><line nr="79" mi="9" ci="0" mb="4" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="7" ci="0" mb="2" cb="0"/><line nr="84" mi="7" ci="0" mb="2" cb="0"/><line nr="85" mi="8" ci="0" mb="2" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="7" ci="0" mb="0" cb="0"/><line nr="94" mi="15" ci="0" mb="2" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="94" covered="18"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="14" covered="7"/><counter type="COMPLEXITY" missed="12" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KAligner.java"><line nr="44" mi="2" ci="6" mb="1" cb="1"/><line nr="71" mi="3" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="7" mb="0" cb="0"/><line nr="142" mi="7" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="2" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="5" ci="0" mb="2" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="1" cb="1"/><line nr="165" mi="5" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="7" mb="0" cb="0"/><line nr="167" mi="4" ci="7" mb="2" cb="2"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="6" mb="0" cb="0"/><line nr="185" mi="5" ci="0" mb="2" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="4" ci="0" mb="0" cb="0"/><line nr="188" mi="4" ci="0" mb="0" cb="0"/><line nr="189" mi="17" ci="0" mb="0" cb="0"/><line nr="195" mi="5" ci="0" mb="2" cb="0"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="197" mi="4" ci="0" mb="0" cb="0"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="199" mi="17" ci="0" mb="0" cb="0"/><line nr="224" mi="0" ci="7" mb="0" cb="0"/><line nr="252" mi="0" ci="8" mb="0" cb="0"/><line nr="284" mi="0" ci="8" mb="0" cb="0"/><line nr="287" mi="0" ci="2" mb="0" cb="2"/><line nr="288" mi="0" ci="10" mb="0" cb="0"/><line nr="290" mi="0" ci="10" mb="0" cb="0"/><line nr="292" mi="0" ci="3" mb="1" cb="1"/><line nr="293" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="2" ci="0" mb="0" cb="0"/><line nr="297" mi="0" ci="2" mb="0" cb="0"/><line nr="302" mi="8" ci="0" mb="0" cb="0"/><line nr="308" mi="3" ci="0" mb="2" cb="0"/><line nr="309" mi="5" ci="0" mb="0" cb="0"/><line nr="311" mi="15" ci="0" mb="0" cb="0"/><line nr="314" mi="6" ci="0" mb="0" cb="0"/><line nr="315" mi="6" ci="0" mb="0" cb="0"/><line nr="316" mi="12" ci="0" mb="0" cb="0"/><line nr="321" mi="5" ci="0" mb="0" cb="0"/><line nr="326" mi="3" ci="0" mb="2" cb="0"/><line nr="327" mi="5" ci="0" mb="0" cb="0"/><line nr="329" mi="11" ci="0" mb="0" cb="0"/><line nr="332" mi="4" ci="0" mb="0" cb="0"/><line nr="333" mi="6" ci="0" mb="0" cb="0"/><line nr="334" mi="12" ci="0" mb="0" cb="0"/><line nr="338" mi="5" ci="0" mb="0" cb="0"/><line nr="343" mi="0" ci="4" mb="0" cb="0"/><line nr="344" mi="0" ci="6" mb="0" cb="0"/><line nr="345" mi="0" ci="1" mb="0" cb="0"/><line nr="348" mi="4" ci="0" mb="2" cb="0"/><line nr="349" mi="4" ci="0" mb="0" cb="0"/><line nr="351" mi="9" ci="0" mb="2" cb="0"/><line nr="353" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="263" covered="139"/><counter type="BRANCH" missed="21" covered="7"/><counter type="LINE" missed="48" covered="30"/><counter type="COMPLEXITY" missed="26" covered="11"/><counter type="METHOD" missed="13" covered="10"/><counter type="CLASS" missed="2" covered="1"/></sourcefile><sourcefile name="KAlignmentHit.java"><line nr="31" mi="2" ci="6" mb="1" cb="1"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="10" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="9" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="8" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="1" cb="1"/><line nr="92" mi="0" ci="8" mb="0" cb="2"/><line nr="93" mi="0" ci="3" mb="1" cb="1"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="2"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="2"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="2"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="2"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="2"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="2"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="2"/><line nr="137" mi="0" ci="11" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="14" mb="0" cb="0"/><line nr="148" mi="4" ci="10" mb="2" cb="4"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="7" mb="0" cb="2"/><line nr="155" mi="0" ci="8" mb="0" cb="2"/><line nr="156" mi="0" ci="3" mb="1" cb="1"/><line nr="157" mi="0" ci="7" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="4" ci="17" mb="2" cb="2"/><line nr="165" mi="0" ci="4" mb="0" cb="4"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="4"/><line nr="173" mi="0" ci="10" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="7" mb="0" cb="0"/><line nr="187" mi="0" ci="6" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="6" mb="0" cb="0"/><line nr="191" mi="0" ci="6" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="2"/><line nr="194" mi="0" ci="8" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="2"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="2"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="0" ci="6" mb="0" cb="2"/><line nr="203" mi="0" ci="9" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="2"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="2"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="2"/><line nr="212" mi="0" ci="11" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="5" mb="0" cb="0"/><line nr="216" mi="0" ci="6" mb="0" cb="0"/><line nr="218" mi="0" ci="14" mb="0" cb="0"/><line nr="221" mi="0" ci="5" mb="0" cb="0"/><line nr="222" mi="0" ci="5" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="0"/><line nr="252" mi="0" ci="17" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="2"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="2"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="265" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="9" ci="0" mb="0" cb="0"/><line nr="272" mi="0" ci="3" mb="1" cb="1"/><line nr="273" mi="5" ci="0" mb="0" cb="0"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="3" ci="0" mb="0" cb="0"/><line nr="282" mi="7" ci="0" mb="0" cb="0"/><line nr="286" mi="7" ci="0" mb="0" cb="0"/><line nr="287" mi="3" ci="0" mb="0" cb="0"/><line nr="288" mi="4" ci="0" mb="0" cb="0"/><line nr="289" mi="5" ci="0" mb="0" cb="0"/><line nr="290" mi="2" ci="0" mb="0" cb="0"/><line nr="291" mi="11" ci="0" mb="2" cb="0"/><line nr="292" mi="11" ci="0" mb="2" cb="0"/><line nr="293" mi="7" ci="0" mb="0" cb="0"/><line nr="294" mi="13" ci="0" mb="0" cb="0"/><line nr="295" mi="4" ci="0" mb="0" cb="0"/><line nr="298" mi="2" ci="0" mb="0" cb="0"/><line nr="299" mi="1" ci="0" mb="0" cb="0"/><line nr="302" mi="3" ci="0" mb="0" cb="0"/><line nr="303" mi="3" ci="0" mb="0" cb="0"/><line nr="304" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="115" covered="574"/><counter type="BRANCH" missed="13" covered="57"/><counter type="LINE" missed="19" covered="126"/><counter type="COMPLEXITY" missed="16" covered="30"/><counter type="METHOD" missed="5" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KMapper.java"><line nr="42" mi="2" ci="6" mb="1" cb="1"/><line nr="114" mi="3" ci="3" mb="0" cb="0"/><line nr="115" mi="8" ci="8" mb="0" cb="0"/><line nr="116" mi="6" ci="6" mb="0" cb="0"/><line nr="117" mi="3" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="8" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="2" ci="0" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="0" cb="0"/><line nr="186" mi="3" ci="0" mb="0" cb="0"/><line nr="187" mi="3" ci="0" mb="0" cb="0"/><line nr="188" mi="3" ci="0" mb="0" cb="0"/><line nr="189" mi="3" ci="0" mb="0" cb="0"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="3" ci="0" mb="0" cb="0"/><line nr="192" mi="3" ci="0" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="194" mi="3" ci="0" mb="0" cb="0"/><line nr="195" mi="3" ci="0" mb="0" cb="0"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="197" mi="3" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><line nr="200" mi="3" ci="0" mb="0" cb="0"/><line nr="201" mi="3" ci="0" mb="0" cb="0"/><line nr="202" mi="3" ci="0" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="0" cb="0"/><line nr="205" mi="3" ci="0" mb="0" cb="0"/><line nr="206" mi="3" ci="0" mb="0" cb="0"/><line nr="207" mi="3" ci="0" mb="0" cb="0"/><line nr="208" mi="1" ci="0" mb="0" cb="0"/><line nr="218" mi="0" ci="8" mb="0" cb="0"/><line nr="219" mi="0" ci="6" mb="0" cb="0"/><line nr="220" mi="0" ci="6" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="228" mi="49" ci="0" mb="0" cb="0"/><line nr="234" mi="2" ci="0" mb="0" cb="0"/><line nr="235" mi="49" ci="0" mb="0" cb="0"/><line nr="245" mi="0" ci="4" mb="0" cb="2"/><line nr="246" mi="0" ci="6" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="4" mb="0" cb="0"/><line nr="250" mi="0" ci="5" mb="0" cb="0"/><line nr="251" mi="0" ci="5" mb="0" cb="0"/><line nr="252" mi="0" ci="9" mb="0" cb="2"/><line nr="253" mi="0" ci="6" mb="0" cb="0"/><line nr="254" mi="0" ci="5" mb="0" cb="2"/><line nr="255" mi="0" ci="8" mb="0" cb="4"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="257" mi="0" ci="4" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="260" mi="0" ci="2" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="9" mb="0" cb="0"/><line nr="266" mi="0" ci="8" mb="0" cb="4"/><line nr="267" mi="0" ci="5" mb="0" cb="0"/><line nr="269" mi="4" ci="8" mb="3" cb="3"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="0" ci="7" mb="0" cb="0"/><line nr="282" mi="0" ci="5" mb="0" cb="0"/><line nr="283" mi="0" ci="8" mb="0" cb="2"/><line nr="284" mi="0" ci="5" mb="0" cb="2"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="10" mb="0" cb="2"/><line nr="296" mi="0" ci="20" mb="0" cb="0"/><line nr="298" mi="0" ci="6" mb="1" cb="1"/><line nr="299" mi="5" ci="0" mb="0" cb="0"/><line nr="301" mi="0" ci="20" mb="0" cb="0"/><line nr="302" mi="0" ci="1" mb="0" cb="0"/><line nr="311" mi="0" ci="7" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="0" cb="0"/><line nr="331" mi="0" ci="6" mb="0" cb="2"/><line nr="332" mi="0" ci="13" mb="0" cb="0"/><line nr="333" mi="0" ci="13" mb="0" cb="0"/><line nr="335" mi="0" ci="8" mb="0" cb="0"/><line nr="336" mi="0" ci="5" mb="0" cb="0"/><line nr="337" mi="0" ci="6" mb="0" cb="0"/><line nr="340" mi="0" ci="7" mb="0" cb="0"/><line nr="341" mi="0" ci="7" mb="0" cb="0"/><line nr="343" mi="0" ci="2" mb="0" cb="0"/><line nr="344" mi="0" ci="9" mb="0" cb="0"/><line nr="345" mi="0" ci="9" mb="0" cb="0"/><line nr="347" mi="0" ci="5" mb="0" cb="0"/><line nr="348" mi="0" ci="8" mb="0" cb="2"/><line nr="349" mi="0" ci="10" mb="0" cb="0"/><line nr="350" mi="0" ci="5" mb="0" cb="0"/><line nr="352" mi="0" ci="7" mb="0" cb="2"/><line nr="354" mi="0" ci="17" mb="0" cb="0"/><line nr="357" mi="0" ci="18" mb="1" cb="3"/><line nr="359" mi="0" ci="1" mb="0" cb="0"/><line nr="361" mi="0" ci="7" mb="0" cb="0"/><line nr="364" mi="0" ci="2" mb="0" cb="0"/><line nr="372" mi="0" ci="3" mb="0" cb="2"/><line nr="373" mi="0" ci="4" mb="0" cb="0"/><line nr="374" mi="0" ci="3" mb="0" cb="2"/><line nr="375" mi="0" ci="9" mb="0" cb="2"/><line nr="376" mi="0" ci="13" mb="0" cb="0"/><line nr="377" mi="0" ci="7" mb="0" cb="0"/><line nr="378" mi="0" ci="7" mb="0" cb="0"/><line nr="379" mi="0" ci="7" mb="0" cb="0"/><line nr="380" mi="0" ci="3" mb="0" cb="0"/><line nr="381" mi="0" ci="3" mb="0" cb="0"/><line nr="383" mi="0" ci="3" mb="0" cb="0"/><line nr="384" mi="0" ci="1" mb="0" cb="0"/><line nr="390" mi="0" ci="2" mb="0" cb="0"/><line nr="392" mi="0" ci="5" mb="0" cb="0"/><line nr="393" mi="0" ci="7" mb="0" cb="0"/><line nr="395" mi="0" ci="9" mb="0" cb="2"/><line nr="396" mi="0" ci="8" mb="0" cb="0"/><line nr="397" mi="0" ci="13" mb="0" cb="8"/><line nr="399" mi="0" ci="1" mb="0" cb="0"/><line nr="402" mi="0" ci="3" mb="0" cb="0"/><line nr="403" mi="0" ci="3" mb="0" cb="0"/><line nr="404" mi="0" ci="1" mb="0" cb="0"/><line nr="416" mi="0" ci="8" mb="0" cb="0"/><line nr="431" mi="7" ci="0" mb="0" cb="0"/><line nr="447" mi="0" ci="2" mb="0" cb="0"/><line nr="449" mi="0" ci="2" mb="1" cb="1"/><line nr="450" mi="0" ci="3" mb="0" cb="0"/><line nr="452" mi="0" ci="4" mb="0" cb="0"/><line nr="454" mi="0" ci="6" mb="1" cb="1"/><line nr="455" mi="6" ci="0" mb="0" cb="0"/><line nr="457" mi="0" ci="12" mb="0" cb="0"/><line nr="458" mi="0" ci="2" mb="0" cb="0"/><line nr="459" mi="0" ci="3" mb="0" cb="0"/><line nr="461" mi="0" ci="2" mb="0" cb="0"/><line nr="463" mi="0" ci="21" mb="0" cb="2"/><line nr="464" mi="0" ci="4" mb="0" cb="0"/><line nr="467" mi="0" ci="6" mb="0" cb="0"/><line nr="469" mi="0" ci="4" mb="0" cb="0"/><line nr="472" mi="0" ci="4" mb="0" cb="0"/><line nr="476" mi="0" ci="8" mb="0" cb="2"/><line nr="477" mi="0" ci="2" mb="0" cb="0"/><line nr="478" mi="0" ci="14" mb="0" cb="2"/><line nr="479" mi="0" ci="8" mb="0" cb="0"/><line nr="481" mi="0" ci="4" mb="0" cb="0"/><line nr="482" mi="0" ci="6" mb="0" cb="2"/><line nr="483" mi="0" ci="1" mb="0" cb="0"/><line nr="485" mi="0" ci="19" mb="0" cb="2"/><line nr="486" mi="0" ci="5" mb="0" cb="0"/><line nr="489" mi="0" ci="4" mb="1" cb="1"/><line nr="490" mi="1" ci="0" mb="0" cb="0"/><line nr="492" mi="0" ci="5" mb="0" cb="0"/><line nr="494" mi="0" ci="4" mb="0" cb="2"/><line nr="495" mi="0" ci="6" mb="0" cb="0"/><line nr="497" mi="0" ci="16" mb="0" cb="0"/><line nr="503" mi="0" ci="5" mb="0" cb="0"/><line nr="507" mi="0" ci="9" mb="0" cb="2"/><line nr="508" mi="0" ci="19" mb="0" cb="4"/><line nr="511" mi="0" ci="4" mb="0" cb="0"/><line nr="513" mi="0" ci="6" mb="0" cb="0"/><line nr="516" mi="0" ci="5" mb="0" cb="0"/><line nr="517" mi="0" ci="13" mb="0" cb="0"/><line nr="520" mi="0" ci="4" mb="0" cb="0"/><line nr="521" mi="0" ci="9" mb="0" cb="2"/><line nr="522" mi="0" ci="7" mb="0" cb="2"/><line nr="523" mi="0" ci="3" mb="0" cb="2"/><line nr="524" mi="0" ci="4" mb="0" cb="0"/><line nr="525" mi="0" ci="3" mb="0" cb="2"/><line nr="526" mi="0" ci="4" mb="0" cb="0"/><line nr="527" mi="0" ci="1" mb="0" cb="0"/><line nr="533" mi="0" ci="3" mb="0" cb="2"/><line nr="534" mi="0" ci="2" mb="0" cb="0"/><line nr="537" mi="0" ci="8" mb="0" cb="0"/><line nr="540" mi="0" ci="6" mb="0" cb="2"/><line nr="541" mi="0" ci="13" mb="0" cb="0"/><line nr="545" mi="0" ci="5" mb="0" cb="0"/><line nr="550" mi="0" ci="2" mb="0" cb="0"/><line nr="551" mi="0" ci="9" mb="0" cb="2"/><line nr="552" mi="0" ci="5" mb="0" cb="0"/><line nr="556" mi="0" ci="8" mb="0" cb="0"/><line nr="557" mi="0" ci="4" mb="0" cb="0"/><line nr="558" mi="0" ci="12" mb="0" cb="2"/><line nr="560" mi="0" ci="7" mb="0" cb="0"/><line nr="561" mi="0" ci="4" mb="0" cb="0"/><line nr="564" mi="0" ci="14" mb="0" cb="4"/><line nr="565" mi="0" ci="5" mb="0" cb="0"/><line nr="566" mi="0" ci="11" mb="0" cb="0"/><line nr="569" mi="0" ci="17" mb="0" cb="4"/><line nr="571" mi="0" ci="3" mb="0" cb="2"/><line nr="572" mi="0" ci="10" mb="0" cb="0"/><line nr="577" mi="0" ci="2" mb="0" cb="0"/><line nr="578" mi="0" ci="2" mb="0" cb="0"/><line nr="579" mi="0" ci="10" mb="0" cb="2"/><line nr="580" mi="0" ci="6" mb="0" cb="2"/><line nr="581" mi="0" ci="3" mb="0" cb="2"/><line nr="586" mi="0" ci="43" mb="0" cb="10"/><line nr="589" mi="0" ci="5" mb="0" cb="0"/><line nr="590" mi="0" ci="2" mb="0" cb="0"/><line nr="592" mi="0" ci="2" mb="0" cb="0"/><line nr="593" mi="0" ci="2" mb="0" cb="0"/><line nr="598" mi="0" ci="2" mb="0" cb="0"/><line nr="599" mi="0" ci="17" mb="0" cb="2"/><line nr="600" mi="0" ci="3" mb="0" cb="2"/><line nr="601" mi="0" ci="6" mb="0" cb="0"/><line nr="603" mi="0" ci="5" mb="0" cb="0"/><line nr="606" mi="0" ci="3" mb="0" cb="2"/><line nr="607" mi="0" ci="2" mb="0" cb="0"/><line nr="608" mi="0" ci="9" mb="0" cb="2"/><line nr="609" mi="0" ci="6" mb="0" cb="2"/><line nr="610" mi="0" ci="3" mb="0" cb="2"/><line nr="611" mi="0" ci="2" mb="0" cb="0"/><line nr="612" mi="0" ci="1" mb="0" cb="0"/><line nr="616" mi="0" ci="30" mb="0" cb="2"/><line nr="618" mi="0" ci="5" mb="0" cb="0"/><line nr="619" mi="0" ci="2" mb="0" cb="0"/><line nr="620" mi="0" ci="1" mb="0" cb="0"/><line nr="623" mi="0" ci="8" mb="0" cb="0"/><line nr="624" mi="0" ci="1" mb="0" cb="0"/><line nr="629" mi="0" ci="3" mb="0" cb="2"/><line nr="630" mi="0" ci="2" mb="0" cb="0"/><line nr="631" mi="0" ci="10" mb="0" cb="2"/><line nr="632" mi="0" ci="6" mb="0" cb="2"/><line nr="633" mi="0" ci="3" mb="0" cb="2"/><line nr="634" mi="0" ci="2" mb="0" cb="0"/><line nr="635" mi="0" ci="1" mb="0" cb="0"/><line nr="639" mi="0" ci="30" mb="0" cb="2"/><line nr="641" mi="0" ci="5" mb="0" cb="0"/><line nr="642" mi="0" ci="2" mb="0" cb="0"/><line nr="643" mi="0" ci="1" mb="0" cb="0"/><line nr="646" mi="0" ci="14" mb="0" cb="0"/><line nr="650" mi="0" ci="2" mb="0" cb="0"/><line nr="651" mi="0" ci="2" mb="0" cb="0"/><line nr="653" mi="0" ci="10" mb="0" cb="2"/><line nr="654" mi="0" ci="6" mb="0" cb="2"/><line nr="655" mi="0" ci="12" mb="0" cb="0"/><line nr="656" mi="0" ci="3" mb="0" cb="2"/><line nr="657" mi="0" ci="2" mb="0" cb="0"/><line nr="658" mi="0" ci="3" mb="0" cb="0"/><line nr="659" mi="0" ci="3" mb="0" cb="2"/><line nr="661" mi="0" ci="6" mb="0" cb="0"/><line nr="664" mi="0" ci="17" mb="0" cb="0"/><line nr="665" mi="0" ci="2" mb="0" cb="0"/><line nr="666" mi="0" ci="2" mb="0" cb="0"/><line nr="671" mi="0" ci="3" mb="0" cb="0"/><line nr="673" mi="0" ci="5" mb="0" cb="2"/><line nr="674" mi="0" ci="4" mb="0" cb="0"/><line nr="676" mi="0" ci="5" mb="0" cb="2"/><line nr="677" mi="0" ci="3" mb="0" cb="0"/><line nr="685" mi="0" ci="6" mb="0" cb="0"/><line nr="686" mi="0" ci="9" mb="0" cb="2"/><line nr="687" mi="0" ci="5" mb="0" cb="0"/><line nr="688" mi="0" ci="6" mb="0" cb="2"/><line nr="689" mi="0" ci="4" mb="0" cb="0"/><line nr="694" mi="0" ci="6" mb="0" cb="0"/><line nr="704" mi="0" ci="3" mb="0" cb="0"/><line nr="713" mi="3" ci="0" mb="0" cb="0"/><line nr="722" mi="3" ci="0" mb="0" cb="0"/><line nr="731" mi="3" ci="0" mb="0" cb="0"/><line nr="740" mi="3" ci="0" mb="0" cb="0"/><line nr="749" mi="3" ci="0" mb="0" cb="0"/><line nr="756" mi="4" ci="0" mb="0" cb="0"/><line nr="757" mi="17" ci="0" mb="2" cb="0"/><line nr="758" mi="4" ci="0" mb="0" cb="0"/><line nr="759" mi="2" ci="0" mb="0" cb="0"/><line nr="764" mi="3" ci="0" mb="0" cb="0"/><line nr="765" mi="20" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="284" covered="1421"/><counter type="BRANCH" missed="11" covered="153"/><counter type="LINE" missed="44" covered="236"/><counter type="COMPLEXITY" missed="21" covered="85"/><counter type="METHOD" missed="11" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KAlignmentResultP.java"><line nr="30" mi="7" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="KAlignerParameters.java"><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="1" cb="1"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="2" cb="2"/><line nr="199" mi="5" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="204" mi="5" ci="0" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="246" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="0"/><line nr="290" mi="0" ci="2" mb="0" cb="0"/><line nr="299" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="3" mb="0" cb="0"/><line nr="311" mi="0" ci="2" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="0"/><line nr="330" mi="0" ci="3" mb="0" cb="0"/><line nr="331" mi="0" ci="2" mb="0" cb="0"/><line nr="340" mi="0" ci="3" mb="0" cb="0"/><line nr="350" mi="0" ci="3" mb="0" cb="0"/><line nr="351" mi="0" ci="2" mb="0" cb="0"/><line nr="361" mi="0" ci="3" mb="0" cb="0"/><line nr="372" mi="0" ci="3" mb="0" cb="0"/><line nr="373" mi="0" ci="2" mb="0" cb="0"/><line nr="383" mi="0" ci="3" mb="0" cb="0"/><line nr="394" mi="0" ci="3" mb="0" cb="0"/><line nr="395" mi="0" ci="2" mb="0" cb="0"/><line nr="405" mi="0" ci="3" mb="0" cb="0"/><line nr="416" mi="0" ci="3" mb="0" cb="0"/><line nr="417" mi="0" ci="2" mb="0" cb="0"/><line nr="427" mi="0" ci="3" mb="0" cb="0"/><line nr="437" mi="0" ci="5" mb="2" cb="2"/><line nr="438" mi="5" ci="0" mb="0" cb="0"/><line nr="439" mi="0" ci="3" mb="0" cb="0"/><line nr="440" mi="0" ci="2" mb="0" cb="0"/><line nr="450" mi="0" ci="3" mb="0" cb="0"/><line nr="461" mi="0" ci="3" mb="0" cb="0"/><line nr="462" mi="0" ci="2" mb="0" cb="0"/><line nr="472" mi="0" ci="3" mb="0" cb="0"/><line nr="483" mi="0" ci="3" mb="0" cb="0"/><line nr="484" mi="0" ci="2" mb="0" cb="0"/><line nr="493" mi="0" ci="3" mb="0" cb="0"/><line nr="503" mi="0" ci="3" mb="0" cb="0"/><line nr="504" mi="0" ci="2" mb="0" cb="0"/><line nr="513" mi="0" ci="3" mb="0" cb="0"/><line nr="523" mi="0" ci="3" mb="0" cb="0"/><line nr="524" mi="0" ci="2" mb="0" cb="0"/><line nr="535" mi="0" ci="3" mb="0" cb="0"/><line nr="546" mi="0" ci="3" mb="0" cb="0"/><line nr="547" mi="0" ci="2" mb="0" cb="0"/><line nr="557" mi="0" ci="3" mb="0" cb="0"/><line nr="567" mi="0" ci="3" mb="0" cb="0"/><line nr="568" mi="0" ci="2" mb="0" cb="0"/><line nr="574" mi="0" ci="4" mb="0" cb="0"/><line nr="575" mi="0" ci="3" mb="1" cb="1"/><line nr="576" mi="0" ci="5" mb="0" cb="0"/><line nr="577" mi="0" ci="2" mb="0" cb="0"/><line nr="578" mi="1" ci="0" mb="0" cb="0"/><line nr="579" mi="5" ci="0" mb="0" cb="0"/><line nr="585" mi="2" ci="3" mb="1" cb="1"/><line nr="586" mi="2" ci="7" mb="2" cb="2"/><line nr="588" mi="0" ci="3" mb="0" cb="0"/><line nr="590" mi="2" ci="5" mb="1" cb="1"/><line nr="591" mi="2" ci="5" mb="1" cb="1"/><line nr="592" mi="2" ci="6" mb="1" cb="1"/><line nr="593" mi="2" ci="5" mb="1" cb="1"/><line nr="594" mi="2" ci="6" mb="1" cb="1"/><line nr="595" mi="2" ci="5" mb="1" cb="1"/><line nr="596" mi="2" ci="5" mb="1" cb="1"/><line nr="597" mi="2" ci="5" mb="1" cb="1"/><line nr="598" mi="2" ci="6" mb="1" cb="1"/><line nr="599" mi="2" ci="5" mb="1" cb="1"/><line nr="600" mi="2" ci="6" mb="1" cb="1"/><line nr="601" mi="2" ci="6" mb="1" cb="1"/><line nr="602" mi="2" ci="5" mb="1" cb="1"/><line nr="603" mi="2" ci="6" mb="1" cb="1"/><line nr="605" mi="0" ci="2" mb="0" cb="0"/><line nr="610" mi="3" ci="0" mb="0" cb="0"/><line nr="611" mi="11" ci="0" mb="2" cb="0"/><line nr="612" mi="11" ci="0" mb="2" cb="0"/><line nr="613" mi="15" ci="0" mb="2" cb="0"/><line nr="614" mi="15" ci="0" mb="2" cb="0"/><line nr="615" mi="15" ci="0" mb="2" cb="0"/><line nr="616" mi="15" ci="0" mb="2" cb="0"/><line nr="617" mi="15" ci="0" mb="2" cb="0"/><line nr="618" mi="7" ci="0" mb="0" cb="0"/><line nr="619" mi="7" ci="0" mb="0" cb="0"/><line nr="620" mi="7" ci="0" mb="0" cb="0"/><line nr="621" mi="7" ci="0" mb="0" cb="0"/><line nr="622" mi="7" ci="0" mb="0" cb="0"/><line nr="623" mi="8" ci="0" mb="0" cb="0"/><line nr="624" mi="2" ci="0" mb="0" cb="0"/><line nr="630" mi="11" ci="0" mb="0" cb="0"/><line nr="631" mi="1" ci="0" mb="0" cb="0"/><line nr="632" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="220" covered="345"/><counter type="BRANCH" missed="37" covered="23"/><counter type="LINE" missed="27" covered="108"/><counter type="COMPLEXITY" missed="33" covered="42"/><counter type="METHOD" missed="3" covered="42"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AbstractKAlignerParameters.java"/><sourcefile name="KAlignmentResult.java"><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="8" mb="0" cb="0"/><line nr="97" mi="0" ci="9" mb="0" cb="2"/><line nr="98" mi="0" ci="9" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="8" mb="0" cb="2"/><line nr="137" mi="0" ci="4" mb="1" cb="1"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="3" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><line nr="183" mi="0" ci="11" mb="0" cb="2"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="191" mi="4" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="10" mb="0" cb="0"/><line nr="208" mi="0" ci="1" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="0" cb="2"/><line nr="220" mi="0" ci="1" mb="0" cb="0"/><line nr="221" mi="0" ci="13" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="2"/><line nr="224" mi="0" ci="13" mb="0" cb="0"/><line nr="226" mi="0" ci="10" mb="0" cb="2"/><line nr="227" mi="0" ci="11" mb="0" cb="2"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="1" mb="0" cb="0"/><line nr="235" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="193"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="10" covered="38"/><counter type="COMPLEXITY" missed="8" covered="20"/><counter type="METHOD" missed="7" covered="13"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><counter type="INSTRUCTION" missed="1036" covered="2699"/><counter type="BRANCH" missed="97" covered="255"/><counter type="LINE" missed="170" covered="549"/><counter type="COMPLEXITY" missed="121" covered="190"/><counter type="METHOD" missed="49" covered="86"/><counter type="CLASS" missed="3" covered="10"/></package><package name="com/milaboratory/core/alignment/kaligner2"><class name="com/milaboratory/core/alignment/kaligner2/KMapper2$ThreadLocalCache" sourcefilename="KMapper2.java"><method name="&lt;init&gt;" desc="(IIIIIII)V" line="1249"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="1266"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner2/OffsetPacksAccumulator" sourcefilename="OffsetPacksAccumulator.java"><method name="&lt;init&gt;" desc="(IIIIII)V" line="44"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="59"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateInitialPartitioning" desc="(Lcom/milaboratory/util/IntArrayList;)V" line="65"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateInitialPartitioning" desc="([I)V" line="69"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateInitialPartitioning" desc="([III)V" line="76"><counter type="INSTRUCTION" missed="12" covered="565"/><counter type="BRANCH" missed="9" covered="55"/><counter type="LINE" missed="0" covered="80"/><counter type="COMPLEXITY" missed="9" covered="24"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recalculateScores" desc="([III)V" line="203"><counter type="INSTRUCTION" missed="8" covered="168"/><counter type="BRANCH" missed="6" covered="22"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="finished" desc="(I)V" line="257"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberOfClusters" desc="()I" line="265"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="270"><counter type="INSTRUCTION" missed="72" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Lcom/milaboratory/util/IntArrayList;Lcom/milaboratory/util/IntArrayList;[I)Ljava/lang/String;" line="284"><counter type="INSTRUCTION" missed="90" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="192" covered="825"/><counter type="BRANCH" missed="20" covered="80"/><counter type="LINE" missed="22" covered="137"/><counter type="COMPLEXITY" missed="21" covered="40"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner2/KAlignerParameters2" sourcefilename="KAlignerParameters2.java"><method name="&lt;init&gt;" desc="()V" line="130"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IIZZIIIFIIIIIIIIIIIFILcom/milaboratory/core/alignment/AffineGapAlignmentScoring;)V" line="138"><counter type="INSTRUCTION" missed="5" covered="74"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="25"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAligner" desc="()Lcom/milaboratory/core/alignment/kaligner2/KAligner2;" line="167"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperNValue" desc="()I" line="176"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMapperNValue" desc="(I)Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;" line="186"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperKValue" desc="()I" line="191"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMapperKValue" desc="(I)Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;" line="195"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperAbsoluteMinClusterScore" desc="()I" line="206"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMapperAbsoluteMinClusterScore" desc="(I)Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;" line="217"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperRelativeMinScore" desc="()F" line="229"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMapperRelativeMinScore" desc="(F)Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;" line="240"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperMatchScore" desc="()I" line="250"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMapperMatchScore" desc="(I)Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;" line="261"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperMismatchScore" desc="()I" line="271"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMapperMismatchScore" desc="(I)Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;" line="282"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperOffsetShiftScore" desc="()I" line="292"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMapperOffsetShiftScore" desc="(I)Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;" line="302"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperExtraClusterScore" desc="()I" line="308"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMapperExtraClusterScore" desc="(I)Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;" line="313"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperMinSeedsDistance" desc="()I" line="324"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMapperMinSeedsDistance" desc="(I)Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;" line="335"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperMaxSeedsDistance" desc="()I" line="346"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMapperMaxSeedsDistance" desc="(I)Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;" line="357"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperSlotCount" desc="()I" line="365"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMapperSlotCount" desc="(I)Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;" line="372"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperMaxClusterIndels" desc="()I" line="380"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMapperMaxClusterIndels" desc="(I)Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;" line="387"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperKMersPerPosition" desc="()I" line="416"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMapperKMersPerPosition" desc="(I)Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;" line="443"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperMaxClusters" desc="()I" line="451"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMapperMaxClusters" desc="(I)Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;" line="458"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAlignmentStopPenalty" desc="()I" line="469"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAlignmentStopPenalty" desc="(I)Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;" line="480"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getScoring" desc="()Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;" line="491"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setScoring" desc="(Lcom/milaboratory/core/alignment/AffineGapAlignmentScoring;)Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;" line="501"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFloatingLeftBound" desc="()Z" line="514"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFloatingLeftBound" desc="(Z)Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;" line="525"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFloatingRightBound" desc="()Z" line="536"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFloatingRightBound" desc="(Z)Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;" line="547"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMapperAbsoluteMinScore" desc="()I" line="555"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMapperAbsoluteMinScore" desc="(I)Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;" line="562"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAbsoluteMinScore" desc="()I" line="572"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAbsoluteMinScore" desc="(I)Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;" line="582"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRelativeMinScore" desc="()F" line="593"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRelativeMinScore" desc="(F)Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;" line="604"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxHits" desc="()I" line="615"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMaxHits" desc="(I)Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;" line="625"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;" line="632"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="643"><counter type="INSTRUCTION" missed="45" covered="117"/><counter type="BRANCH" missed="25" covered="23"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="24" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="672"><counter type="INSTRUCTION" missed="161" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="697"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="253" covered="377"/><counter type="BRANCH" missed="40" covered="28"/><counter type="LINE" missed="32" covered="116"/><counter type="COMPLEXITY" missed="37" covered="48"/><counter type="METHOD" missed="4" covered="47"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner2/KAligner2" sourcefilename="KAligner2.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;Lcom/milaboratory/core/alignment/kaligner2/KAligner2Statistics;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/kaligner2/KMapper2;Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;Ljava/util/List;Lgnu/trove/map/hash/TIntObjectHashMap;Lcom/milaboratory/core/alignment/kaligner2/KAligner2Statistics;)V" line="66"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFloatingLeftBound" desc="(Z)Lcom/milaboratory/core/alignment/kaligner2/KAligner2;" line="77"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFloatingRightBound" desc="(Z)Lcom/milaboratory/core/alignment/kaligner2/KAligner2;" line="87"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addReference" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;)I" line="101"><counter type="INSTRUCTION" missed="9" covered="22"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFilter" desc="(Lcc/redberry/primitives/Filter;)Lcom/milaboratory/util/BitArray;" line="111"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReference" desc="(I)Lcom/milaboratory/core/sequence/NucleotideSequence;" line="128"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addReference" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;Ljava/lang/Object;)V" line="133"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="align" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;)Lcom/milaboratory/core/alignment/kaligner2/KAlignmentResult2;" line="138"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="align" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;II)Lcom/milaboratory/core/alignment/kaligner2/KAlignmentResult2;" line="143"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="align" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;IILcom/milaboratory/util/BitArray;)Lcom/milaboratory/core/alignment/kaligner2/KAlignmentResult2;" line="148"><counter type="INSTRUCTION" missed="16" covered="531"/><counter type="BRANCH" missed="9" covered="53"/><counter type="LINE" missed="1" covered="97"/><counter type="COMPLEXITY" missed="9" covered="23"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="133" covered="621"/><counter type="BRANCH" missed="21" covered="57"/><counter type="LINE" missed="26" covered="118"/><counter type="COMPLEXITY" missed="21" covered="31"/><counter type="METHOD" missed="4" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner2/KMappingResult2" sourcefilename="KMappingResult2.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/util/IntArrayList;Ljava/util/List;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSeedsCount" desc="()I" line="54"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSeedPosition" desc="(I)I" line="58"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHits" desc="()Ljava/util/List;" line="62"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner2/KMapper2$1" sourcefilename="KMapper2.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/kaligner2/KMapper2;)V" line="153"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialValue" desc="()Lcom/milaboratory/core/alignment/kaligner2/KMapper2$ThreadLocalCache;" line="156"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner2/KMapper2$2" sourcefilename="KMapper2.java"><method name="&lt;init&gt;" desc="()V" line="639"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lcom/milaboratory/core/alignment/kaligner2/KMappingHit2;Lcom/milaboratory/core/alignment/kaligner2/KMappingHit2;)I" line="642"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner2/KAligner2Statistics$State" sourcefilename="KAligner2Statistics.java"><method name="&lt;init&gt;" desc="()V" line="225"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCurrentTop" desc="()Z" line="231"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="235"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner2/KMapper2" sourcefilename="KMapper2.java"><method name="&lt;init&gt;" desc="(IIIIIIIFIIIIIIIZZ)V" line="185"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(IIIIIIIFIIIIIIIZZLcom/milaboratory/core/alignment/kaligner2/KAligner2Statistics;)V" line="141"><counter type="INSTRUCTION" missed="23" covered="161"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="2" covered="35"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(III[[[I[[IIIIIIIIIIFZZIIZIIILcom/milaboratory/util/BitArray;Lcom/milaboratory/core/alignment/kaligner2/KAligner2Statistics;)V" line="141"><counter type="INSTRUCTION" missed="96" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createFromParameters" desc="(Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;)Lcom/milaboratory/core/alignment/kaligner2/KMapper2;" line="300"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFloatingLeftBound" desc="(Z)Lcom/milaboratory/core/alignment/kaligner2/KMapper2;" line="304"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFloatingRightBound" desc="(Z)Lcom/milaboratory/core/alignment/kaligner2/KMapper2;" line="313"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createFromParameters" desc="(Lcom/milaboratory/core/alignment/kaligner2/KAlignerParameters2;Lcom/milaboratory/core/alignment/kaligner2/KAligner2Statistics;)Lcom/milaboratory/core/alignment/kaligner2/KMapper2;" line="330"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addKmer" desc="(IIII)V" line="346"><counter type="INSTRUCTION" missed="35" covered="102"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addReference" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;)I" line="368"><counter type="INSTRUCTION" missed="10" covered="141"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="2" covered="24"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureBuilt" desc="()V" line="422"><counter type="INSTRUCTION" missed="0" covered="105"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="align" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;)Lcom/milaboratory/core/alignment/kaligner2/KMappingResult2;" line="455"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="align" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;II)Lcom/milaboratory/core/alignment/kaligner2/KMappingResult2;" line="470"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="align" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;IILcom/milaboratory/util/BitArray;)Lcom/milaboratory/core/alignment/kaligner2/KMappingResult2;" line="486"><counter type="INSTRUCTION" missed="21" covered="366"/><counter type="BRANCH" missed="8" covered="48"/><counter type="LINE" missed="6" covered="69"/><counter type="COMPLEXITY" missed="7" covered="22"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateHit" desc="(ILcom/milaboratory/util/IntArrayList;Lcom/milaboratory/util/IntArrayList;)Lcom/milaboratory/core/alignment/kaligner2/KMappingHit2;" line="650"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="truncateClusterFromRight" desc="(ZLcom/milaboratory/util/IntArrayList;Lcom/milaboratory/util/IntArrayList;[IIII)Z" line="675"><counter type="INSTRUCTION" missed="17" covered="188"/><counter type="BRANCH" missed="11" covered="31"/><counter type="LINE" missed="2" covered="36"/><counter type="COMPLEXITY" missed="10" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="truncateClusterFromLeft" desc="(ZLcom/milaboratory/util/IntArrayList;Lcom/milaboratory/util/IntArrayList;[IIII)Z" line="773"><counter type="INSTRUCTION" missed="17" covered="188"/><counter type="BRANCH" missed="10" covered="32"/><counter type="LINE" missed="2" covered="36"/><counter type="COMPLEXITY" missed="9" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateHit" desc="(I[IIILcom/milaboratory/util/IntArrayList;)Lcom/milaboratory/core/alignment/kaligner2/KMappingHit2;" line="852"><counter type="INSTRUCTION" missed="47" covered="935"/><counter type="BRANCH" missed="18" covered="110"/><counter type="LINE" missed="6" covered="172"/><counter type="COMPLEXITY" missed="17" covered="48"/><counter type="METHOD" missed="0" covered="1"/></method><method name="crosses" desc="(Lcom/milaboratory/util/IntArrayList;[III)Z" line="1124"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="positionInTarget" desc="(Lcom/milaboratory/util/IntArrayList;I)I" line="1130"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNValue" desc="()I" line="1140"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKValue" desc="()I" line="1144"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAbsoluteMinClusterScore" desc="()I" line="1153"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExtraClusterScore" desc="()I" line="1157"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaxDistance" desc="()I" line="1166"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinDistance" desc="()I" line="1175"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRelativeMinScore" desc="()F" line="1184"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="index" desc="(I)I" line="1188"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="(I)I" line="1192"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="record" desc="(II)I" line="1196"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recordToString" desc="(ILcom/milaboratory/util/IntArrayList;)Ljava/lang/String;" line="1200"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inDelta" desc="(III)Z" line="1204"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCombinationMask" desc="([I)I" line="1209"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRecordSizeSummaryStatistics" desc="()Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;" line="1219"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="1228"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="finalize" desc="()V" line="1277"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="503" covered="2363"/><counter type="BRANCH" missed="62" covered="276"/><counter type="LINE" missed="68" covered="430"/><counter type="COMPLEXITY" missed="68" covered="137"/><counter type="METHOD" missed="12" covered="24"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner2/KAligner2Statistics" sourcefilename="KAligner2Statistics.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="172"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextQuery" desc="()V" line="68"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterCandidatesArrayDone" desc="([Lcom/milaboratory/util/IntArrayList;)V" line="74"><counter type="INSTRUCTION" missed="10" covered="68"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="3" covered="14"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialClusters" desc="(ILcom/milaboratory/util/IntArrayList;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trimmingEvent" desc="(Lcom/milaboratory/core/alignment/kaligner2/KAligner2Statistics$ClusterTrimmingType;)V" line="120"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="afterTrimming" desc="(ILcom/milaboratory/util/IntArrayList;)V" line="128"><counter type="INSTRUCTION" missed="4" covered="37"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterUntangling" desc="(Lcom/milaboratory/util/IntArrayList;)V" line="145"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reRunBecauseOfMicroTangling" desc="()V" line="161"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="kMappingResults" desc="(Lcom/milaboratory/core/alignment/kaligner2/KMappingResult2;)V" line="165"><counter type="INSTRUCTION" missed="15" covered="64"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="5" covered="13"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="kAlignerResult" desc="(Lcom/milaboratory/core/alignment/kaligner2/KAlignmentResult2;)V" line="194"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="210"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="countClusters" desc="(Lcom/milaboratory/util/IntArrayList;)I" line="217"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="62" covered="493"/><counter type="BRANCH" missed="10" covered="26"/><counter type="LINE" missed="18" covered="83"/><counter type="COMPLEXITY" missed="12" covered="19"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner2/KMapper2$ArrList" sourcefilename="KMapper2.java"><method name="&lt;init&gt;" desc="()V" line="1233"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeRange" desc="(II)V" line="1238"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner2/KAligner2Statistics$1" sourcefilename="KAligner2Statistics.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/kaligner2/KAligner2Statistics;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialValue" desc="()Lcom/milaboratory/core/alignment/kaligner2/KAligner2Statistics$State;" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner2/KMappingHit2" sourcefilename="KMappingHit2.java"><method name="&lt;init&gt;" desc="(I[I[II)V" line="60"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexById" desc="(I)I" line="68"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offsetById" desc="(I)I" line="72"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="77"><counter type="INSTRUCTION" missed="4" covered="105"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="132"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner2/KAlignmentHit2" sourcefilename="KAlignmentHit2.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/kaligner2/KAlignmentResult2;ILcom/milaboratory/core/alignment/Alignment;Ljava/lang/Object;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTargetId" desc="()I" line="37"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMappingHit" desc="()Lcom/milaboratory/core/alignment/kaligner2/KMappingHit2;" line="41"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAlignment" desc="()Lcom/milaboratory/core/alignment/Alignment;" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRecordPayload" desc="()Ljava/lang/Object;" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="21"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner2/KAligner2$1" sourcefilename="KAligner2.java"><method name="&lt;init&gt;" desc="()V" line="327"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lcom/milaboratory/core/alignment/kaligner2/KAlignmentHit2;Lcom/milaboratory/core/alignment/kaligner2/KAlignmentHit2;)I" line="330"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner2/KAlignmentResult2" sourcefilename="KAlignmentResult2.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/alignment/kaligner2/KMappingResult2;Ljava/util/List;Lcom/milaboratory/core/sequence/NucleotideSequence;II)V" line="46"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHits" desc="()Ljava/util/List;" line="56"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBestHit" desc="()Lcom/milaboratory/core/alignment/kaligner2/KAlignmentHit2;" line="61"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasHits" desc="()Z" line="66"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="39"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/alignment/kaligner2/KAligner2Statistics$ClusterTrimmingType" sourcefilename="KAligner2Statistics.java"><method name="&lt;clinit&gt;" desc="()V" line="241"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="OffsetPacksAccumulator.java"><line nr="25" mi="2" ci="6" mb="1" cb="1"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="2"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="9" mb="0" cb="2"/><line nr="87" mi="0" ci="10" mb="0" cb="2"/><line nr="88" mi="0" ci="22" mb="0" cb="4"/><line nr="89" mi="0" ci="9" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="11" mb="1" cb="1"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="11" mb="1" cb="1"/><line nr="101" mi="0" ci="8" mb="0" cb="2"/><line nr="102" mi="0" ci="6" mb="0" cb="2"/><line nr="103" mi="0" ci="12" mb="0" cb="2"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="7" mb="0" cb="0"/><line nr="110" mi="0" ci="7" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="0" cb="0"/><line nr="112" mi="0" ci="7" mb="0" cb="0"/><line nr="113" mi="0" ci="7" mb="0" cb="0"/><line nr="114" mi="0" ci="8" mb="0" cb="0"/><line nr="117" mi="0" ci="11" mb="0" cb="2"/><line nr="122" mi="0" ci="11" mb="0" cb="2"/><line nr="123" mi="0" ci="10" mb="0" cb="2"/><line nr="124" mi="0" ci="16" mb="0" cb="2"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="9" mb="1" cb="1"/><line nr="131" mi="0" ci="10" mb="0" cb="2"/><line nr="132" mi="0" ci="16" mb="0" cb="2"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="4" ci="10" mb="2" cb="2"/><line nr="138" mi="0" ci="24" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="2"/><line nr="142" mi="0" ci="7" mb="0" cb="0"/><line nr="143" mi="0" ci="7" mb="0" cb="0"/><line nr="144" mi="0" ci="14" mb="0" cb="0"/><line nr="145" mi="0" ci="14" mb="0" cb="0"/><line nr="146" mi="0" ci="7" mb="0" cb="0"/><line nr="147" mi="0" ci="10" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="9" mb="0" cb="2"/><line nr="156" mi="0" ci="6" mb="0" cb="2"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="6" mb="0" cb="2"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="4" ci="4" mb="2" cb="2"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="7" mb="0" cb="0"/><line nr="173" mi="0" ci="7" mb="0" cb="0"/><line nr="174" mi="0" ci="8" mb="0" cb="0"/><line nr="175" mi="0" ci="7" mb="0" cb="0"/><line nr="176" mi="0" ci="7" mb="0" cb="0"/><line nr="177" mi="0" ci="7" mb="0" cb="0"/><line nr="178" mi="0" ci="7" mb="0" cb="0"/><line nr="181" mi="0" ci="11" mb="0" cb="2"/><line nr="182" mi="0" ci="8" mb="0" cb="2"/><line nr="183" mi="0" ci="5" mb="0" cb="2"/><line nr="185" mi="0" ci="10" mb="0" cb="2"/><line nr="186" mi="0" ci="9" mb="0" cb="0"/><line nr="187" mi="0" ci="7" mb="0" cb="0"/><line nr="190" mi="4" ci="15" mb="2" cb="2"/><line nr="192" mi="0" ci="14" mb="0" cb="0"/><line nr="196" mi="0" ci="9" mb="0" cb="2"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="203" mi="0" ci="11" mb="0" cb="2"/><line nr="204" mi="0" ci="7" mb="0" cb="0"/><line nr="205" mi="4" ci="5" mb="2" cb="2"/><line nr="207" mi="0" ci="7" mb="0" cb="0"/><line nr="208" mi="4" ci="5" mb="2" cb="2"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="9" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="11" mb="1" cb="3"/><line nr="219" mi="0" ci="1" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="2"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="2"/><line nr="229" mi="0" ci="1" mb="0" cb="0"/><line nr="231" mi="0" ci="2" mb="0" cb="0"/><line nr="232" mi="0" ci="13" mb="0" cb="4"/><line nr="233" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="0" ci="9" mb="0" cb="2"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="240" mi="0" ci="5" mb="0" cb="2"/><line nr="242" mi="0" ci="17" mb="0" cb="0"/><line nr="245" mi="0" ci="2" mb="1" cb="1"/><line nr="246" mi="0" ci="4" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="14" mb="0" cb="0"/><line nr="254" mi="0" ci="1" mb="0" cb="0"/><line nr="257" mi="0" ci="9" mb="0" cb="2"/><line nr="258" mi="0" ci="1" mb="0" cb="0"/><line nr="260" mi="0" ci="11" mb="0" cb="0"/><line nr="261" mi="0" ci="7" mb="0" cb="0"/><line nr="262" mi="0" ci="1" mb="0" cb="0"/><line nr="265" mi="0" ci="6" mb="0" cb="0"/><line nr="270" mi="4" ci="0" mb="0" cb="0"/><line nr="271" mi="9" ci="0" mb="0" cb="0"/><line nr="272" mi="2" ci="0" mb="0" cb="0"/><line nr="273" mi="9" ci="0" mb="2" cb="0"/><line nr="274" mi="12" ci="0" mb="0" cb="0"/><line nr="275" mi="11" ci="0" mb="0" cb="0"/><line nr="276" mi="11" ci="0" mb="0" cb="0"/><line nr="277" mi="11" ci="0" mb="0" cb="0"/><line nr="280" mi="3" ci="0" mb="0" cb="0"/><line nr="284" mi="4" ci="0" mb="0" cb="0"/><line nr="285" mi="11" ci="0" mb="0" cb="0"/><line nr="286" mi="2" ci="0" mb="0" cb="0"/><line nr="287" mi="8" ci="0" mb="2" cb="0"/><line nr="288" mi="6" ci="0" mb="0" cb="0"/><line nr="289" mi="6" ci="0" mb="0" cb="0"/><line nr="290" mi="12" ci="0" mb="0" cb="0"/><line nr="291" mi="14" ci="0" mb="0" cb="0"/><line nr="292" mi="14" ci="0" mb="0" cb="0"/><line nr="293" mi="10" ci="0" mb="0" cb="0"/><line nr="296" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="192" covered="825"/><counter type="BRANCH" missed="20" covered="80"/><counter type="LINE" missed="22" covered="137"/><counter type="COMPLEXITY" missed="21" covered="40"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KAlignmentHit2.java"><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="10" ci="0" mb="0" cb="0"/><line nr="41" mi="9" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="21"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KAligner2Statistics.java"><line nr="31" mi="2" ci="6" mb="1" cb="1"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="14" mb="0" cb="0"/><line nr="44" mi="0" ci="14" mb="0" cb="0"/><line nr="46" mi="0" ci="14" mb="0" cb="0"/><line nr="48" mi="0" ci="14" mb="0" cb="0"/><line nr="50" mi="0" ci="14" mb="0" cb="0"/><line nr="52" mi="0" ci="12" mb="0" cb="0"/><line nr="54" mi="0" ci="15" mb="0" cb="0"/><line nr="55" mi="0" ci="14" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="41" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="11" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="2"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="1" cb="1"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="10" mb="0" cb="4"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="1" cb="1"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="8" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="2"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="2" cb="0"/><line nr="124" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="1" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="4" ci="6" mb="2" cb="2"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="8" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="2"/><line nr="139" mi="0" ci="8" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="8" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="2"/><line nr="152" mi="0" ci="8" mb="0" cb="0"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="2"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="10" mb="0" cb="0"/><line nr="169" mi="0" ci="10" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="1" cb="1"/><line nr="173" mi="4" ci="0" mb="0" cb="0"/><line nr="174" mi="3" ci="0" mb="0" cb="0"/><line nr="175" mi="1" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="7" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="1" cb="1"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="185" mi="0" ci="7" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="1" cb="1"/><line nr="188" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="10" mb="0" cb="0"/><line nr="198" mi="0" ci="10" mb="0" cb="0"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="204" mi="0" ci="8" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="210" mi="3" ci="0" mb="0" cb="0"/><line nr="211" mi="1" ci="0" mb="0" cb="0"/><line nr="212" mi="5" ci="0" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="0" ci="8" mb="0" cb="2"/><line nr="219" mi="0" ci="7" mb="0" cb="2"/><line nr="220" mi="0" ci="1" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="9" mb="0" cb="2"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="1" mb="0" cb="0"/><line nr="241" mi="0" ci="20" mb="0" cb="0"/><line nr="242" mi="0" ci="24" mb="0" cb="0"/><counter type="INSTRUCTION" missed="62" covered="569"/><counter type="BRANCH" missed="10" covered="28"/><counter type="LINE" missed="18" covered="93"/><counter type="COMPLEXITY" missed="12" covered="26"/><counter type="METHOD" missed="3" covered="16"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="KAligner2.java"><line nr="28" mi="2" ci="5" mb="1" cb="1"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="2" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="15" ci="0" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="2" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="15" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="1" cb="1"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="4" ci="7" mb="2" cb="2"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="7" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="2" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="2" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="8" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="7" mb="0" cb="0"/><line nr="143" mi="0" ci="7" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="2"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="8" mb="0" cb="2"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="2"/><line nr="167" mi="0" ci="6" mb="0" cb="2"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="9" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="2"/><line nr="172" mi="0" ci="3" mb="1" cb="1"/><line nr="173" mi="4" ci="0" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="9" mb="0" cb="2"/><line nr="182" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="0" ci="7" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="8" mb="0" cb="0"/><line nr="189" mi="0" ci="6" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="4" ci="4" mb="2" cb="2"/><line nr="195" mi="0" ci="3" mb="0" cb="2"/><line nr="196" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="5" mb="0" cb="2"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="6" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="5" mb="0" cb="2"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="2"/><line nr="214" mi="0" ci="15" mb="0" cb="0"/><line nr="219" mi="0" ci="16" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="9" mb="0" cb="2"/><line nr="232" mi="0" ci="8" mb="0" cb="0"/><line nr="233" mi="0" ci="6" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="2" mb="0" cb="0"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="4" ci="19" mb="2" cb="4"/><line nr="243" mi="0" ci="4" mb="0" cb="4"/><line nr="244" mi="0" ci="1" mb="0" cb="0"/><line nr="246" mi="4" ci="6" mb="3" cb="3"/><line nr="253" mi="0" ci="12" mb="0" cb="0"/><line nr="258" mi="0" ci="4" mb="0" cb="0"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="267" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="5" mb="0" cb="0"/><line nr="271" mi="0" ci="4" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="2"/><line nr="274" mi="0" ci="6" mb="0" cb="0"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="0" ci="4" mb="0" cb="0"/><line nr="277" mi="0" ci="5" mb="0" cb="2"/><line nr="278" mi="0" ci="5" mb="0" cb="0"/><line nr="280" mi="0" ci="6" mb="0" cb="0"/><line nr="281" mi="0" ci="4" mb="0" cb="0"/><line nr="282" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="2"/><line nr="284" mi="0" ci="4" mb="0" cb="0"/><line nr="287" mi="0" ci="4" mb="0" cb="2"/><line nr="288" mi="0" ci="15" mb="0" cb="0"/><line nr="293" mi="0" ci="16" mb="0" cb="0"/><line nr="299" mi="0" ci="5" mb="0" cb="0"/><line nr="300" mi="0" ci="5" mb="0" cb="0"/><line nr="302" mi="0" ci="3" mb="0" cb="0"/><line nr="303" mi="0" ci="24" mb="0" cb="0"/><line nr="307" mi="0" ci="6" mb="0" cb="0"/><line nr="308" mi="0" ci="2" mb="0" cb="0"/><line nr="311" mi="0" ci="3" mb="0" cb="0"/><line nr="312" mi="0" ci="9" mb="0" cb="0"/><line nr="313" mi="0" ci="8" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="0"/><line nr="315" mi="0" ci="11" mb="1" cb="3"/><line nr="316" mi="0" ci="10" mb="0" cb="2"/><line nr="317" mi="0" ci="1" mb="0" cb="0"/><line nr="318" mi="0" ci="4" mb="0" cb="2"/><line nr="319" mi="0" ci="5" mb="0" cb="0"/><line nr="321" mi="0" ci="3" mb="0" cb="2"/><line nr="322" mi="0" ci="4" mb="0" cb="0"/><line nr="324" mi="0" ci="2" mb="0" cb="0"/><line nr="327" mi="0" ci="8" mb="0" cb="0"/><line nr="330" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="133" covered="634"/><counter type="BRANCH" missed="21" covered="57"/><counter type="LINE" missed="26" covered="119"/><counter type="COMPLEXITY" missed="21" covered="33"/><counter type="METHOD" missed="4" covered="11"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="KMappingHit2.java"><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="9" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="17" mb="0" cb="2"/><line nr="84" mi="0" ci="11" mb="0" cb="4"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="4" ci="32" mb="2" cb="2"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="132"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KAlignmentResult2.java"><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="2" ci="10" mb="1" cb="1"/><line nr="66" mi="0" ci="8" mb="0" cb="2"/><counter type="INSTRUCTION" missed="2" covered="39"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KMapper2.java"><line nr="49" mi="2" ci="5" mb="1" cb="1"/><line nr="141" mi="3" ci="3" mb="0" cb="0"/><line nr="142" mi="6" ci="6" mb="0" cb="0"/><line nr="143" mi="3" ci="3" mb="0" cb="0"/><line nr="153" mi="6" ci="12" mb="0" cb="0"/><line nr="156" mi="0" ci="25" mb="0" cb="0"/><line nr="185" mi="20" ci="0" mb="0" cb="0"/><line nr="188" mi="1" ci="0" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="5" mb="1" cb="1"/><line nr="213" mi="18" ci="0" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="16" mb="0" cb="2"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="12" mb="2" cb="6"/><line nr="225" mi="5" ci="0" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="6" mb="0" cb="0"/><line nr="230" mi="0" ci="11" mb="0" cb="2"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="12" mb="0" cb="0"/><line nr="233" mi="0" ci="12" mb="0" cb="0"/><line nr="234" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="3" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="246" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="0"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="2" ci="0" mb="0" cb="0"/><line nr="265" mi="3" ci="0" mb="0" cb="0"/><line nr="266" mi="3" ci="0" mb="0" cb="0"/><line nr="267" mi="3" ci="0" mb="0" cb="0"/><line nr="268" mi="3" ci="0" mb="0" cb="0"/><line nr="269" mi="3" ci="0" mb="0" cb="0"/><line nr="270" mi="3" ci="0" mb="0" cb="0"/><line nr="271" mi="3" ci="0" mb="0" cb="0"/><line nr="272" mi="3" ci="0" mb="0" cb="0"/><line nr="273" mi="3" ci="0" mb="0" cb="0"/><line nr="274" mi="3" ci="0" mb="0" cb="0"/><line nr="275" mi="3" ci="0" mb="0" cb="0"/><line nr="276" mi="3" ci="0" mb="0" cb="0"/><line nr="277" mi="3" ci="0" mb="0" cb="0"/><line nr="278" mi="3" ci="0" mb="0" cb="0"/><line nr="279" mi="3" ci="0" mb="0" cb="0"/><line nr="280" mi="3" ci="0" mb="0" cb="0"/><line nr="281" mi="3" ci="0" mb="0" cb="0"/><line nr="282" mi="3" ci="0" mb="0" cb="0"/><line nr="283" mi="3" ci="0" mb="0" cb="0"/><line nr="284" mi="3" ci="0" mb="0" cb="0"/><line nr="285" mi="3" ci="0" mb="0" cb="0"/><line nr="286" mi="3" ci="0" mb="0" cb="0"/><line nr="287" mi="3" ci="0" mb="0" cb="0"/><line nr="288" mi="3" ci="0" mb="0" cb="0"/><line nr="289" mi="3" ci="0" mb="0" cb="0"/><line nr="290" mi="1" ci="0" mb="0" cb="0"/><line nr="300" mi="0" ci="4" mb="0" cb="0"/><line nr="304" mi="2" ci="0" mb="0" cb="0"/><line nr="305" mi="53" ci="0" mb="0" cb="0"/><line nr="313" mi="2" ci="0" mb="0" cb="0"/><line nr="314" mi="53" ci="0" mb="0" cb="0"/><line nr="330" mi="0" ci="10" mb="0" cb="0"/><line nr="331" mi="0" ci="4" mb="0" cb="0"/><line nr="332" mi="0" ci="2" mb="0" cb="0"/><line nr="333" mi="0" ci="2" mb="0" cb="0"/><line nr="334" mi="0" ci="2" mb="0" cb="0"/><line nr="335" mi="0" ci="4" mb="0" cb="0"/><line nr="336" mi="0" ci="4" mb="0" cb="0"/><line nr="337" mi="0" ci="2" mb="0" cb="0"/><line nr="338" mi="0" ci="4" mb="0" cb="0"/><line nr="339" mi="0" ci="5" mb="0" cb="0"/><line nr="346" mi="0" ci="7" mb="0" cb="2"/><line nr="347" mi="0" ci="9" mb="0" cb="0"/><line nr="348" mi="0" ci="14" mb="1" cb="1"/><line nr="349" mi="26" ci="0" mb="0" cb="0"/><line nr="351" mi="0" ci="5" mb="1" cb="1"/><line nr="352" mi="5" ci="0" mb="0" cb="0"/><line nr="354" mi="4" ci="42" mb="1" cb="5"/><line nr="355" mi="0" ci="3" mb="1" cb="1"/><line nr="357" mi="0" ci="21" mb="0" cb="0"/><line nr="358" mi="0" ci="1" mb="0" cb="0"/><line nr="368" mi="0" ci="3" mb="1" cb="1"/><line nr="369" mi="5" ci="0" mb="0" cb="0"/><line nr="372" mi="0" ci="4" mb="1" cb="1"/><line nr="373" mi="5" ci="0" mb="0" cb="0"/><line nr="376" mi="0" ci="3" mb="0" cb="0"/><line nr="378" mi="0" ci="8" mb="0" cb="0"/><line nr="381" mi="0" ci="7" mb="0" cb="0"/><line nr="382" mi="0" ci="7" mb="0" cb="0"/><line nr="385" mi="0" ci="9" mb="0" cb="0"/><line nr="387" mi="0" ci="6" mb="0" cb="0"/><line nr="388" mi="0" ci="8" mb="0" cb="0"/><line nr="389" mi="0" ci="11" mb="0" cb="2"/><line nr="390" mi="0" ci="3" mb="0" cb="0"/><line nr="392" mi="0" ci="2" mb="0" cb="0"/><line nr="393" mi="0" ci="8" mb="0" cb="2"/><line nr="394" mi="0" ci="6" mb="0" cb="2"/><line nr="395" mi="0" ci="8" mb="0" cb="0"/><line nr="396" mi="0" ci="6" mb="0" cb="0"/><line nr="398" mi="0" ci="7" mb="0" cb="2"/><line nr="400" mi="0" ci="2" mb="0" cb="0"/><line nr="401" mi="0" ci="8" mb="0" cb="2"/><line nr="402" mi="0" ci="6" mb="0" cb="2"/><line nr="403" mi="0" ci="10" mb="0" cb="0"/><line nr="410" mi="0" ci="6" mb="0" cb="0"/><line nr="412" mi="0" ci="1" mb="0" cb="0"/><line nr="414" mi="0" ci="2" mb="0" cb="0"/><line nr="422" mi="0" ci="3" mb="0" cb="2"/><line nr="423" mi="0" ci="4" mb="0" cb="0"/><line nr="424" mi="0" ci="3" mb="1" cb="1"/><line nr="425" mi="0" ci="3" mb="0" cb="0"/><line nr="426" mi="0" ci="8" mb="0" cb="0"/><line nr="427" mi="0" ci="11" mb="0" cb="2"/><line nr="428" mi="0" ci="3" mb="0" cb="0"/><line nr="429" mi="0" ci="11" mb="0" cb="2"/><line nr="430" mi="0" ci="7" mb="0" cb="2"/><line nr="431" mi="0" ci="19" mb="0" cb="0"/><line nr="432" mi="0" ci="8" mb="0" cb="0"/><line nr="434" mi="0" ci="7" mb="0" cb="0"/><line nr="435" mi="0" ci="1" mb="0" cb="0"/><line nr="437" mi="0" ci="7" mb="0" cb="0"/><line nr="438" mi="0" ci="3" mb="0" cb="0"/><line nr="440" mi="0" ci="3" mb="0" cb="0"/><line nr="442" mi="0" ci="3" mb="0" cb="0"/><line nr="443" mi="0" ci="1" mb="0" cb="0"/><line nr="455" mi="0" ci="7" mb="0" cb="0"/><line nr="470" mi="0" ci="7" mb="0" cb="0"/><line nr="486" mi="0" ci="2" mb="0" cb="0"/><line nr="488" mi="0" ci="2" mb="1" cb="1"/><line nr="489" mi="0" ci="3" mb="0" cb="0"/><line nr="491" mi="0" ci="5" mb="0" cb="0"/><line nr="492" mi="0" ci="2" mb="0" cb="0"/><line nr="494" mi="0" ci="4" mb="0" cb="0"/><line nr="497" mi="0" ci="6" mb="1" cb="1"/><line nr="498" mi="6" ci="0" mb="0" cb="0"/><line nr="501" mi="3" ci="0" mb="2" cb="0"/><line nr="502" mi="4" ci="0" mb="0" cb="0"/><line nr="504" mi="2" ci="0" mb="0" cb="0"/><line nr="508" mi="0" ci="3" mb="0" cb="0"/><line nr="509" mi="0" ci="2" mb="0" cb="0"/><line nr="512" mi="0" ci="3" mb="0" cb="0"/><line nr="515" mi="0" ci="2" mb="0" cb="0"/><line nr="516" mi="0" ci="21" mb="0" cb="2"/><line nr="517" mi="0" ci="4" mb="0" cb="0"/><line nr="520" mi="0" ci="6" mb="0" cb="0"/><line nr="523" mi="0" ci="3" mb="0" cb="0"/><line nr="528" mi="0" ci="3" mb="0" cb="0"/><line nr="530" mi="0" ci="7" mb="0" cb="0"/><line nr="531" mi="0" ci="5" mb="0" cb="0"/><line nr="534" mi="0" ci="8" mb="0" cb="2"/><line nr="535" mi="0" ci="2" mb="0" cb="0"/><line nr="537" mi="0" ci="2" mb="0" cb="0"/><line nr="539" mi="0" ci="8" mb="0" cb="2"/><line nr="540" mi="0" ci="4" mb="0" cb="2"/><line nr="541" mi="0" ci="2" mb="0" cb="0"/><line nr="542" mi="0" ci="5" mb="0" cb="2"/><line nr="543" mi="0" ci="9" mb="0" cb="0"/><line nr="544" mi="0" ci="5" mb="0" cb="0"/><line nr="547" mi="0" ci="2" mb="0" cb="0"/><line nr="548" mi="0" ci="5" mb="0" cb="2"/><line nr="549" mi="0" ci="12" mb="0" cb="0"/><line nr="552" mi="0" ci="6" mb="0" cb="0"/><line nr="554" mi="0" ci="2" mb="0" cb="0"/><line nr="555" mi="0" ci="8" mb="0" cb="2"/><line nr="556" mi="0" ci="6" mb="0" cb="2"/><line nr="557" mi="0" ci="12" mb="0" cb="0"/><line nr="559" mi="0" ci="8" mb="0" cb="0"/><line nr="564" mi="0" ci="2" mb="0" cb="0"/><line nr="565" mi="0" ci="8" mb="0" cb="2"/><line nr="566" mi="0" ci="4" mb="0" cb="0"/><line nr="567" mi="0" ci="9" mb="0" cb="4"/><line nr="568" mi="0" ci="1" mb="0" cb="0"/><line nr="571" mi="0" ci="3" mb="0" cb="0"/><line nr="574" mi="0" ci="4" mb="1" cb="1"/><line nr="575" mi="1" ci="0" mb="0" cb="0"/><line nr="578" mi="0" ci="3" mb="0" cb="0"/><line nr="585" mi="4" ci="17" mb="1" cb="5"/><line nr="586" mi="0" ci="8" mb="1" cb="1"/><line nr="589" mi="0" ci="11" mb="0" cb="0"/><line nr="594" mi="0" ci="3" mb="0" cb="2"/><line nr="595" mi="0" ci="4" mb="0" cb="0"/><line nr="598" mi="0" ci="9" mb="0" cb="0"/><line nr="602" mi="0" ci="8" mb="0" cb="2"/><line nr="604" mi="0" ci="4" mb="1" cb="1"/><line nr="605" mi="1" ci="0" mb="0" cb="0"/><line nr="608" mi="0" ci="8" mb="0" cb="2"/><line nr="609" mi="0" ci="1" mb="0" cb="0"/><line nr="612" mi="0" ci="8" mb="0" cb="0"/><line nr="615" mi="0" ci="2" mb="0" cb="2"/><line nr="616" mi="0" ci="4" mb="0" cb="0"/><line nr="619" mi="0" ci="3" mb="0" cb="0"/><line nr="621" mi="0" ci="3" mb="0" cb="2"/><line nr="622" mi="0" ci="14" mb="0" cb="0"/><line nr="623" mi="0" ci="2" mb="0" cb="0"/><line nr="624" mi="0" ci="6" mb="0" cb="2"/><line nr="625" mi="0" ci="7" mb="0" cb="2"/><line nr="626" mi="0" ci="1" mb="0" cb="0"/><line nr="627" mi="0" ci="5" mb="0" cb="0"/><line nr="630" mi="0" ci="6" mb="0" cb="0"/><line nr="633" mi="0" ci="3" mb="0" cb="2"/><line nr="634" mi="0" ci="4" mb="0" cb="0"/><line nr="636" mi="0" ci="2" mb="0" cb="0"/><line nr="639" mi="0" ci="8" mb="0" cb="0"/><line nr="642" mi="0" ci="6" mb="0" cb="0"/><line nr="650" mi="0" ci="10" mb="0" cb="0"/><line nr="675" mi="0" ci="3" mb="1" cb="1"/><line nr="676" mi="8" ci="0" mb="2" cb="0"/><line nr="678" mi="0" ci="6" mb="0" cb="0"/><line nr="679" mi="0" ci="6" mb="0" cb="0"/><line nr="680" mi="0" ci="4" mb="0" cb="0"/><line nr="681" mi="0" ci="3" mb="0" cb="0"/><line nr="682" mi="0" ci="3" mb="0" cb="0"/><line nr="683" mi="0" ci="3" mb="0" cb="0"/><line nr="686" mi="4" ci="5" mb="2" cb="2"/><line nr="689" mi="0" ci="2" mb="0" cb="0"/><line nr="690" mi="0" ci="11" mb="1" cb="3"/><line nr="694" mi="0" ci="5" mb="0" cb="2"/><line nr="696" mi="0" ci="8" mb="0" cb="4"/><line nr="697" mi="0" ci="1" mb="0" cb="0"/><line nr="699" mi="0" ci="5" mb="0" cb="0"/><line nr="700" mi="0" ci="5" mb="0" cb="0"/><line nr="701" mi="0" ci="6" mb="0" cb="2"/><line nr="705" mi="0" ci="9" mb="0" cb="2"/><line nr="706" mi="0" ci="5" mb="0" cb="2"/><line nr="707" mi="0" ci="11" mb="1" cb="1"/><line nr="709" mi="1" ci="0" mb="0" cb="0"/><line nr="712" mi="4" ci="8" mb="2" cb="2"/><line nr="715" mi="0" ci="9" mb="0" cb="4"/><line nr="716" mi="0" ci="1" mb="0" cb="0"/><line nr="719" mi="0" ci="14" mb="0" cb="0"/><line nr="720" mi="0" ci="6" mb="0" cb="0"/><line nr="723" mi="0" ci="2" mb="1" cb="1"/><line nr="724" mi="0" ci="4" mb="0" cb="0"/><line nr="725" mi="0" ci="2" mb="0" cb="0"/><line nr="726" mi="0" ci="2" mb="0" cb="0"/><line nr="727" mi="0" ci="2" mb="0" cb="0"/><line nr="731" mi="0" ci="11" mb="1" cb="3"/><line nr="736" mi="0" ci="6" mb="0" cb="0"/><line nr="737" mi="0" ci="6" mb="0" cb="0"/><line nr="740" mi="0" ci="4" mb="0" cb="2"/><line nr="742" mi="0" ci="6" mb="0" cb="0"/><line nr="744" mi="0" ci="2" mb="0" cb="0"/><line nr="748" mi="0" ci="2" mb="0" cb="0"/><line nr="773" mi="0" ci="3" mb="1" cb="1"/><line nr="774" mi="8" ci="0" mb="2" cb="0"/><line nr="776" mi="0" ci="6" mb="0" cb="0"/><line nr="777" mi="0" ci="6" mb="0" cb="0"/><line nr="778" mi="0" ci="4" mb="0" cb="0"/><line nr="779" mi="0" ci="3" mb="0" cb="0"/><line nr="780" mi="0" ci="3" mb="0" cb="0"/><line nr="781" mi="0" ci="3" mb="0" cb="0"/><line nr="784" mi="4" ci="5" mb="2" cb="2"/><line nr="787" mi="0" ci="2" mb="0" cb="0"/><line nr="788" mi="0" ci="11" mb="1" cb="3"/><line nr="792" mi="0" ci="5" mb="0" cb="2"/><line nr="794" mi="0" ci="8" mb="0" cb="4"/><line nr="795" mi="0" ci="1" mb="0" cb="0"/><line nr="797" mi="0" ci="5" mb="0" cb="0"/><line nr="798" mi="0" ci="5" mb="0" cb="0"/><line nr="799" mi="0" ci="6" mb="0" cb="2"/><line nr="803" mi="0" ci="9" mb="0" cb="2"/><line nr="804" mi="0" ci="5" mb="0" cb="2"/><line nr="805" mi="0" ci="11" mb="1" cb="1"/><line nr="807" mi="1" ci="0" mb="0" cb="0"/><line nr="810" mi="4" ci="8" mb="2" cb="2"/><line nr="813" mi="0" ci="9" mb="0" cb="4"/><line nr="814" mi="0" ci="1" mb="0" cb="0"/><line nr="817" mi="0" ci="14" mb="0" cb="0"/><line nr="818" mi="0" ci="6" mb="0" cb="0"/><line nr="821" mi="0" ci="2" mb="0" cb="2"/><line nr="822" mi="0" ci="4" mb="0" cb="0"/><line nr="823" mi="0" ci="2" mb="0" cb="0"/><line nr="824" mi="0" ci="2" mb="0" cb="0"/><line nr="825" mi="0" ci="2" mb="0" cb="0"/><line nr="829" mi="0" ci="11" mb="1" cb="3"/><line nr="834" mi="0" ci="6" mb="0" cb="0"/><line nr="835" mi="0" ci="6" mb="0" cb="0"/><line nr="838" mi="0" ci="4" mb="0" cb="2"/><line nr="840" mi="0" ci="6" mb="0" cb="0"/><line nr="842" mi="0" ci="2" mb="0" cb="0"/><line nr="846" mi="0" ci="2" mb="0" cb="0"/><line nr="852" mi="0" ci="5" mb="0" cb="0"/><line nr="853" mi="0" ci="3" mb="0" cb="0"/><line nr="854" mi="0" ci="5" mb="0" cb="0"/><line nr="856" mi="0" ci="3" mb="0" cb="0"/><line nr="857" mi="0" ci="9" mb="0" cb="4"/><line nr="858" mi="0" ci="2" mb="0" cb="0"/><line nr="861" mi="0" ci="3" mb="0" cb="2"/><line nr="862" mi="0" ci="5" mb="0" cb="0"/><line nr="866" mi="0" ci="8" mb="0" cb="2"/><line nr="867" mi="0" ci="7" mb="0" cb="2"/><line nr="868" mi="0" ci="10" mb="0" cb="2"/><line nr="869" mi="0" ci="7" mb="0" cb="2"/><line nr="870" mi="0" ci="1" mb="0" cb="0"/><line nr="871" mi="0" ci="7" mb="0" cb="2"/><line nr="872" mi="0" ci="1" mb="0" cb="0"/><line nr="874" mi="0" ci="4" mb="0" cb="0"/><line nr="875" mi="0" ci="9" mb="0" cb="0"/><line nr="876" mi="0" ci="9" mb="0" cb="0"/><line nr="877" mi="0" ci="9" mb="0" cb="0"/><line nr="878" mi="0" ci="9" mb="0" cb="0"/><line nr="880" mi="0" ci="3" mb="0" cb="2"/><line nr="882" mi="0" ci="4" mb="0" cb="0"/><line nr="883" mi="0" ci="4" mb="0" cb="0"/><line nr="884" mi="0" ci="4" mb="0" cb="0"/><line nr="885" mi="0" ci="4" mb="0" cb="0"/><line nr="886" mi="0" ci="4" mb="0" cb="0"/><line nr="887" mi="0" ci="4" mb="0" cb="0"/><line nr="888" mi="0" ci="4" mb="0" cb="0"/><line nr="889" mi="0" ci="4" mb="0" cb="0"/><line nr="890" mi="0" ci="4" mb="0" cb="0"/><line nr="893" mi="0" ci="3" mb="0" cb="2"/><line nr="894" mi="0" ci="3" mb="0" cb="2"/><line nr="895" mi="0" ci="11" mb="0" cb="2"/><line nr="896" mi="0" ci="6" mb="0" cb="0"/><line nr="897" mi="0" ci="1" mb="0" cb="0"/><line nr="899" mi="0" ci="6" mb="0" cb="0"/><line nr="900" mi="0" ci="1" mb="0" cb="0"/><line nr="903" mi="0" ci="11" mb="0" cb="2"/><line nr="904" mi="0" ci="10" mb="0" cb="2"/><line nr="905" mi="0" ci="1" mb="0" cb="0"/><line nr="906" mi="0" ci="10" mb="0" cb="2"/><line nr="907" mi="0" ci="1" mb="0" cb="0"/><line nr="912" mi="0" ci="2" mb="0" cb="0"/><line nr="913" mi="0" ci="2" mb="0" cb="0"/><line nr="914" mi="0" ci="10" mb="0" cb="0"/><line nr="915" mi="0" ci="10" mb="0" cb="0"/><line nr="916" mi="0" ci="10" mb="0" cb="0"/><line nr="917" mi="0" ci="10" mb="0" cb="0"/><line nr="919" mi="0" ci="3" mb="0" cb="2"/><line nr="921" mi="0" ci="4" mb="0" cb="0"/><line nr="922" mi="0" ci="4" mb="0" cb="0"/><line nr="923" mi="0" ci="4" mb="0" cb="0"/><line nr="924" mi="0" ci="4" mb="0" cb="0"/><line nr="925" mi="0" ci="4" mb="0" cb="0"/><line nr="926" mi="0" ci="4" mb="0" cb="0"/><line nr="927" mi="0" ci="4" mb="0" cb="0"/><line nr="928" mi="0" ci="4" mb="0" cb="0"/><line nr="929" mi="0" ci="4" mb="0" cb="0"/><line nr="933" mi="0" ci="3" mb="0" cb="2"/><line nr="934" mi="0" ci="3" mb="0" cb="2"/><line nr="935" mi="0" ci="11" mb="0" cb="2"/><line nr="936" mi="0" ci="7" mb="0" cb="0"/><line nr="938" mi="0" ci="7" mb="0" cb="0"/><line nr="940" mi="0" ci="11" mb="0" cb="2"/><line nr="941" mi="0" ci="11" mb="0" cb="0"/><line nr="943" mi="0" ci="10" mb="0" cb="0"/><line nr="949" mi="0" ci="3" mb="0" cb="2"/><line nr="950" mi="0" ci="5" mb="0" cb="0"/><line nr="953" mi="0" ci="2" mb="0" cb="0"/><line nr="955" mi="0" ci="5" mb="0" cb="0"/><line nr="956" mi="0" ci="8" mb="0" cb="2"/><line nr="957" mi="0" ci="13" mb="0" cb="2"/><line nr="958" mi="0" ci="8" mb="0" cb="2"/><line nr="959" mi="0" ci="1" mb="0" cb="0"/><line nr="960" mi="0" ci="6" mb="0" cb="0"/><line nr="961" mi="0" ci="6" mb="0" cb="0"/><line nr="965" mi="0" ci="2" mb="0" cb="2"/><line nr="966" mi="0" ci="2" mb="0" cb="0"/><line nr="968" mi="0" ci="3" mb="0" cb="0"/><line nr="969" mi="0" ci="2" mb="0" cb="0"/><line nr="970" mi="0" ci="8" mb="0" cb="2"/><line nr="971" mi="0" ci="7" mb="0" cb="2"/><line nr="972" mi="0" ci="16" mb="0" cb="0"/><line nr="973" mi="4" ci="5" mb="2" cb="2"/><line nr="974" mi="0" ci="2" mb="0" cb="0"/><line nr="976" mi="0" ci="5" mb="0" cb="0"/><line nr="978" mi="0" ci="3" mb="0" cb="0"/><line nr="979" mi="0" ci="3" mb="0" cb="0"/><line nr="980" mi="0" ci="2" mb="0" cb="0"/><line nr="981" mi="0" ci="2" mb="0" cb="0"/><line nr="984" mi="0" ci="15" mb="0" cb="2"/><line nr="985" mi="0" ci="2" mb="0" cb="0"/><line nr="986" mi="0" ci="2" mb="0" cb="0"/><line nr="987" mi="0" ci="8" mb="0" cb="2"/><line nr="989" mi="0" ci="5" mb="0" cb="0"/><line nr="990" mi="0" ci="8" mb="0" cb="2"/><line nr="991" mi="0" ci="7" mb="1" cb="1"/><line nr="992" mi="9" ci="0" mb="0" cb="0"/><line nr="993" mi="1" ci="0" mb="0" cb="0"/><line nr="996" mi="0" ci="8" mb="0" cb="2"/><line nr="997" mi="0" ci="4" mb="0" cb="0"/><line nr="998" mi="0" ci="7" mb="1" cb="1"/><line nr="999" mi="1" ci="0" mb="0" cb="0"/><line nr="1000" mi="0" ci="20" mb="0" cb="2"/><line nr="1001" mi="0" ci="8" mb="1" cb="1"/><line nr="1002" mi="10" ci="16" mb="2" cb="2"/><line nr="1003" mi="8" ci="0" mb="2" cb="0"/><line nr="1008" mi="0" ci="3" mb="0" cb="0"/><line nr="1009" mi="0" ci="8" mb="0" cb="0"/><line nr="1012" mi="0" ci="3" mb="0" cb="2"/><line nr="1013" mi="0" ci="3" mb="0" cb="0"/><line nr="1014" mi="0" ci="2" mb="0" cb="0"/><line nr="1018" mi="0" ci="2" mb="0" cb="0"/><line nr="1019" mi="0" ci="2" mb="0" cb="0"/><line nr="1020" mi="0" ci="3" mb="0" cb="0"/><line nr="1021" mi="0" ci="2" mb="0" cb="0"/><line nr="1022" mi="0" ci="2" mb="0" cb="0"/><line nr="1025" mi="0" ci="3" mb="0" cb="2"/><line nr="1026" mi="0" ci="4" mb="0" cb="0"/><line nr="1028" mi="0" ci="4" mb="0" cb="0"/><line nr="1029" mi="0" ci="8" mb="0" cb="2"/><line nr="1030" mi="0" ci="4" mb="0" cb="0"/><line nr="1031" mi="0" ci="17" mb="0" cb="0"/><line nr="1033" mi="0" ci="2" mb="0" cb="0"/><line nr="1035" mi="0" ci="8" mb="0" cb="2"/><line nr="1036" mi="0" ci="5" mb="0" cb="0"/><line nr="1037" mi="0" ci="2" mb="0" cb="2"/><line nr="1038" mi="0" ci="4" mb="0" cb="0"/><line nr="1039" mi="0" ci="5" mb="0" cb="0"/><line nr="1042" mi="0" ci="6" mb="0" cb="0"/><line nr="1043" mi="4" ci="5" mb="2" cb="2"/><line nr="1045" mi="0" ci="6" mb="0" cb="0"/><line nr="1046" mi="4" ci="5" mb="2" cb="2"/><line nr="1049" mi="0" ci="3" mb="0" cb="0"/><line nr="1051" mi="0" ci="9" mb="0" cb="0"/><line nr="1052" mi="0" ci="3" mb="0" cb="0"/><line nr="1054" mi="0" ci="3" mb="0" cb="0"/><line nr="1056" mi="0" ci="11" mb="1" cb="3"/><line nr="1058" mi="0" ci="1" mb="0" cb="0"/><line nr="1059" mi="0" ci="4" mb="0" cb="2"/><line nr="1060" mi="0" ci="4" mb="0" cb="0"/><line nr="1061" mi="0" ci="3" mb="0" cb="0"/><line nr="1062" mi="0" ci="3" mb="0" cb="0"/><line nr="1064" mi="0" ci="2" mb="0" cb="0"/><line nr="1065" mi="0" ci="5" mb="0" cb="0"/><line nr="1067" mi="0" ci="4" mb="0" cb="2"/><line nr="1068" mi="0" ci="1" mb="0" cb="0"/><line nr="1070" mi="0" ci="2" mb="0" cb="0"/><line nr="1071" mi="0" ci="13" mb="0" cb="4"/><line nr="1072" mi="0" ci="1" mb="0" cb="0"/><line nr="1073" mi="0" ci="9" mb="0" cb="2"/><line nr="1074" mi="0" ci="2" mb="0" cb="0"/><line nr="1075" mi="0" ci="2" mb="0" cb="0"/><line nr="1076" mi="0" ci="3" mb="0" cb="0"/><line nr="1079" mi="0" ci="5" mb="0" cb="2"/><line nr="1082" mi="0" ci="8" mb="0" cb="2"/><line nr="1084" mi="0" ci="4" mb="0" cb="0"/><line nr="1085" mi="1" ci="6" mb="1" cb="1"/><line nr="1086" mi="0" ci="12" mb="0" cb="0"/><line nr="1089" mi="0" ci="3" mb="1" cb="1"/><line nr="1090" mi="3" ci="0" mb="0" cb="0"/><line nr="1093" mi="0" ci="10" mb="0" cb="0"/><line nr="1096" mi="0" ci="17" mb="0" cb="0"/><line nr="1098" mi="0" ci="2" mb="1" cb="1"/><line nr="1099" mi="0" ci="4" mb="0" cb="0"/><line nr="1100" mi="0" ci="3" mb="0" cb="0"/><line nr="1101" mi="0" ci="2" mb="0" cb="0"/><line nr="1102" mi="0" ci="2" mb="0" cb="0"/><line nr="1104" mi="0" ci="1" mb="0" cb="0"/><line nr="1107" mi="0" ci="8" mb="0" cb="0"/><line nr="1108" mi="0" ci="4" mb="0" cb="0"/><line nr="1111" mi="0" ci="3" mb="0" cb="2"/><line nr="1112" mi="0" ci="10" mb="0" cb="0"/><line nr="1114" mi="0" ci="3" mb="0" cb="2"/><line nr="1115" mi="0" ci="14" mb="0" cb="0"/><line nr="1117" mi="0" ci="4" mb="1" cb="1"/><line nr="1118" mi="2" ci="0" mb="0" cb="0"/><line nr="1120" mi="0" ci="10" mb="0" cb="0"/><line nr="1124" mi="0" ci="17" mb="0" cb="2"/><line nr="1125" mi="0" ci="11" mb="0" cb="2"/><line nr="1130" mi="0" ci="8" mb="0" cb="0"/><line nr="1140" mi="0" ci="3" mb="0" cb="0"/><line nr="1144" mi="0" ci="3" mb="0" cb="0"/><line nr="1153" mi="3" ci="0" mb="0" cb="0"/><line nr="1157" mi="3" ci="0" mb="0" cb="0"/><line nr="1166" mi="3" ci="0" mb="0" cb="0"/><line nr="1175" mi="3" ci="0" mb="0" cb="0"/><line nr="1184" mi="3" ci="0" mb="0" cb="0"/><line nr="1188" mi="0" ci="4" mb="0" cb="0"/><line nr="1192" mi="0" ci="4" mb="0" cb="0"/><line nr="1196" mi="0" ci="6" mb="0" cb="0"/><line nr="1200" mi="23" ci="0" mb="0" cb="0"/><line nr="1204" mi="0" ci="4" mb="0" cb="0"/><line nr="1205" mi="0" ci="11" mb="0" cb="4"/><line nr="1209" mi="0" ci="2" mb="0" cb="0"/><line nr="1210" mi="0" ci="16" mb="0" cb="2"/><line nr="1211" mi="0" ci="6" mb="0" cb="0"/><line nr="1212" mi="0" ci="2" mb="0" cb="0"/><line nr="1219" mi="4" ci="0" mb="0" cb="0"/><line nr="1220" mi="17" ci="0" mb="2" cb="0"/><line nr="1221" mi="16" ci="0" mb="2" cb="0"/><line nr="1222" mi="4" ci="0" mb="0" cb="0"/><line nr="1223" mi="2" ci="0" mb="0" cb="0"/><line nr="1228" mi="3" ci="0" mb="0" cb="0"/><line nr="1229" mi="20" ci="0" mb="0" cb="0"/><line nr="1233" mi="0" ci="2" mb="0" cb="0"/><line nr="1234" mi="0" ci="1" mb="0" cb="0"/><line nr="1238" mi="0" ci="4" mb="0" cb="0"/><line nr="1239" mi="0" ci="1" mb="0" cb="0"/><line nr="1249" mi="0" ci="2" mb="0" cb="0"/><line nr="1250" mi="0" ci="5" mb="0" cb="0"/><line nr="1251" mi="0" ci="5" mb="0" cb="0"/><line nr="1252" mi="0" ci="5" mb="0" cb="0"/><line nr="1253" mi="0" ci="5" mb="0" cb="0"/><line nr="1255" mi="0" ci="4" mb="0" cb="0"/><line nr="1257" mi="0" ci="7" mb="0" cb="2"/><line nr="1258" mi="0" ci="7" mb="0" cb="0"/><line nr="1260" mi="0" ci="11" mb="0" cb="0"/><line nr="1263" mi="0" ci="1" mb="0" cb="0"/><line nr="1266" mi="0" ci="3" mb="0" cb="0"/><line nr="1267" mi="0" ci="3" mb="0" cb="0"/><line nr="1268" mi="0" ci="3" mb="0" cb="0"/><line nr="1269" mi="0" ci="3" mb="0" cb="0"/><line nr="1270" mi="0" ci="17" mb="0" cb="2"/><line nr="1271" mi="0" ci="2" mb="0" cb="0"/><line nr="1272" mi="0" ci="1" mb="0" cb="0"/><line nr="1277" mi="0" ci="2" mb="0" cb="0"/><line nr="1278" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="503" covered="2495"/><counter type="BRANCH" missed="62" covered="280"/><counter type="LINE" missed="68" covered="453"/><counter type="COMPLEXITY" missed="68" covered="147"/><counter type="METHOD" missed="12" covered="32"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="KAlignerParameters2.java"><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="1" cb="3"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="0" cb="0"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="302" mi="0" ci="3" mb="0" cb="0"/><line nr="303" mi="0" ci="2" mb="0" cb="0"/><line nr="308" mi="0" ci="3" mb="0" cb="0"/><line nr="313" mi="0" ci="3" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="0"/><line nr="324" mi="0" ci="3" mb="0" cb="0"/><line nr="335" mi="0" ci="3" mb="0" cb="0"/><line nr="336" mi="0" ci="2" mb="0" cb="0"/><line nr="346" mi="0" ci="3" mb="0" cb="0"/><line nr="357" mi="0" ci="3" mb="0" cb="0"/><line nr="358" mi="0" ci="2" mb="0" cb="0"/><line nr="365" mi="0" ci="3" mb="0" cb="0"/><line nr="372" mi="0" ci="3" mb="0" cb="0"/><line nr="373" mi="0" ci="2" mb="0" cb="0"/><line nr="380" mi="0" ci="3" mb="0" cb="0"/><line nr="387" mi="0" ci="3" mb="0" cb="0"/><line nr="388" mi="0" ci="2" mb="0" cb="0"/><line nr="416" mi="0" ci="3" mb="0" cb="0"/><line nr="443" mi="0" ci="3" mb="0" cb="0"/><line nr="444" mi="0" ci="2" mb="0" cb="0"/><line nr="451" mi="0" ci="3" mb="0" cb="0"/><line nr="458" mi="0" ci="3" mb="0" cb="0"/><line nr="459" mi="0" ci="2" mb="0" cb="0"/><line nr="469" mi="3" ci="0" mb="0" cb="0"/><line nr="480" mi="0" ci="3" mb="0" cb="0"/><line nr="481" mi="0" ci="2" mb="0" cb="0"/><line nr="491" mi="0" ci="3" mb="0" cb="0"/><line nr="501" mi="0" ci="5" mb="2" cb="2"/><line nr="502" mi="5" ci="0" mb="0" cb="0"/><line nr="503" mi="0" ci="3" mb="0" cb="0"/><line nr="504" mi="0" ci="2" mb="0" cb="0"/><line nr="514" mi="0" ci="3" mb="0" cb="0"/><line nr="525" mi="0" ci="3" mb="0" cb="0"/><line nr="526" mi="0" ci="2" mb="0" cb="0"/><line nr="536" mi="0" ci="3" mb="0" cb="0"/><line nr="547" mi="0" ci="3" mb="0" cb="0"/><line nr="548" mi="0" ci="2" mb="0" cb="0"/><line nr="555" mi="0" ci="3" mb="0" cb="0"/><line nr="562" mi="0" ci="3" mb="0" cb="0"/><line nr="563" mi="0" ci="2" mb="0" cb="0"/><line nr="572" mi="0" ci="3" mb="0" cb="0"/><line nr="582" mi="0" ci="3" mb="0" cb="0"/><line nr="583" mi="0" ci="2" mb="0" cb="0"/><line nr="593" mi="0" ci="3" mb="0" cb="0"/><line nr="604" mi="0" ci="3" mb="0" cb="0"/><line nr="605" mi="0" ci="2" mb="0" cb="0"/><line nr="615" mi="0" ci="3" mb="0" cb="0"/><line nr="625" mi="0" ci="3" mb="0" cb="0"/><line nr="626" mi="0" ci="2" mb="0" cb="0"/><line nr="632" mi="4" ci="0" mb="0" cb="0"/><line nr="633" mi="3" ci="0" mb="2" cb="0"/><line nr="634" mi="5" ci="0" mb="0" cb="0"/><line nr="635" mi="2" ci="0" mb="0" cb="0"/><line nr="636" mi="1" ci="0" mb="0" cb="0"/><line nr="637" mi="5" ci="0" mb="0" cb="0"/><line nr="643" mi="2" ci="3" mb="1" cb="1"/><line nr="644" mi="2" ci="7" mb="2" cb="2"/><line nr="646" mi="0" ci="3" mb="0" cb="0"/><line nr="648" mi="2" ci="5" mb="1" cb="1"/><line nr="649" mi="2" ci="5" mb="1" cb="1"/><line nr="650" mi="2" ci="5" mb="1" cb="1"/><line nr="651" mi="2" ci="5" mb="1" cb="1"/><line nr="652" mi="2" ci="5" mb="1" cb="1"/><line nr="653" mi="2" ci="5" mb="1" cb="1"/><line nr="654" mi="2" ci="5" mb="1" cb="1"/><line nr="655" mi="2" ci="5" mb="1" cb="1"/><line nr="656" mi="2" ci="5" mb="1" cb="1"/><line nr="657" mi="2" ci="5" mb="1" cb="1"/><line nr="658" mi="2" ci="5" mb="1" cb="1"/><line nr="659" mi="2" ci="6" mb="1" cb="1"/><line nr="660" mi="2" ci="5" mb="1" cb="1"/><line nr="661" mi="2" ci="5" mb="1" cb="1"/><line nr="662" mi="2" ci="5" mb="1" cb="1"/><line nr="663" mi="2" ci="5" mb="1" cb="1"/><line nr="664" mi="2" ci="6" mb="1" cb="1"/><line nr="665" mi="2" ci="5" mb="1" cb="1"/><line nr="666" mi="5" ci="12" mb="4" cb="2"/><line nr="672" mi="3" ci="0" mb="0" cb="0"/><line nr="673" mi="11" ci="0" mb="2" cb="0"/><line nr="674" mi="11" ci="0" mb="2" cb="0"/><line nr="675" mi="7" ci="0" mb="0" cb="0"/><line nr="676" mi="7" ci="0" mb="0" cb="0"/><line nr="677" mi="7" ci="0" mb="0" cb="0"/><line nr="678" mi="7" ci="0" mb="0" cb="0"/><line nr="679" mi="7" ci="0" mb="0" cb="0"/><line nr="680" mi="7" ci="0" mb="0" cb="0"/><line nr="681" mi="7" ci="0" mb="0" cb="0"/><line nr="682" mi="7" ci="0" mb="0" cb="0"/><line nr="683" mi="15" ci="0" mb="2" cb="0"/><line nr="684" mi="7" ci="0" mb="0" cb="0"/><line nr="685" mi="7" ci="0" mb="0" cb="0"/><line nr="686" mi="7" ci="0" mb="0" cb="0"/><line nr="687" mi="7" ci="0" mb="0" cb="0"/><line nr="688" mi="15" ci="0" mb="2" cb="0"/><line nr="689" mi="7" ci="0" mb="0" cb="0"/><line nr="690" mi="13" ci="0" mb="2" cb="0"/><line nr="691" mi="2" ci="0" mb="0" cb="0"/><line nr="697" mi="11" ci="0" mb="0" cb="0"/><line nr="698" mi="1" ci="0" mb="0" cb="0"/><line nr="699" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="253" covered="377"/><counter type="BRANCH" missed="40" covered="28"/><counter type="LINE" missed="32" covered="116"/><counter type="COMPLEXITY" missed="37" covered="48"/><counter type="METHOD" missed="4" covered="47"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KMappingResult2.java"><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="10" mb="0" cb="2"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1172" covered="5124"/><counter type="BRANCH" missed="156" covered="486"/><counter type="LINE" missed="169" covered="967"/><counter type="COMPLEXITY" missed="165" covered="313"/><counter type="METHOD" missed="29" covered="128"/><counter type="CLASS" missed="0" covered="17"/></package><package name="org/apache/commons/io/serialization"><class name="org/apache/commons/io/serialization/ValidatingObjectInputStream" sourcefilename="ValidatingObjectInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="46"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateClassName" desc="(Ljava/lang/String;)V" line="68"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invalidClassNameFound" desc="(Ljava/lang/String;)V" line="95"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveClass" desc="(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;" line="100"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="([Ljava/lang/Class;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;" line="112"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reject" desc="([Ljava/lang/Class;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;" line="126"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="([Ljava/lang/String;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;" line="141"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reject" desc="([Ljava/lang/String;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;" line="156"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/util/regex/Pattern;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;" line="170"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reject" desc="(Ljava/util/regex/Pattern;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;" line="182"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/apache/commons/io/serialization/ClassNameMatcher;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;" line="194"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reject" desc="(Lorg/apache/commons/io/serialization/ClassNameMatcher;)Lorg/apache/commons/io/serialization/ValidatingObjectInputStream;" line="206"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="230" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="40" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/serialization/WildcardClassNameMatcher" sourcefilename="WildcardClassNameMatcher.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="39"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matches" desc="(Ljava/lang/String;)Z" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/serialization/RegexpClassNameMatcher" sourcefilename="RegexpClassNameMatcher.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="39"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/regex/Pattern;)V" line="48"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matches" desc="(Ljava/lang/String;)Z" line="57"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/serialization/ClassNameMatcher" sourcefilename="ClassNameMatcher.java"/><class name="org/apache/commons/io/serialization/FullClassNameMatcher" sourcefilename="FullClassNameMatcher.java"><method name="&lt;init&gt;" desc="([Ljava/lang/String;)V" line="41"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matches" desc="(Ljava/lang/String;)Z" line="47"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="ValidatingObjectInputStream.java"><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="11" ci="0" mb="2" cb="0"/><line nr="69" mi="4" ci="0" mb="2" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="11" ci="0" mb="2" cb="0"/><line nr="76" mi="4" ci="0" mb="2" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="2" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="12" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="16" ci="0" mb="2" cb="0"/><line nr="113" mi="14" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="16" ci="0" mb="2" cb="0"/><line nr="127" mi="14" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="16" ci="0" mb="2" cb="0"/><line nr="142" mi="8" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="16" ci="0" mb="2" cb="0"/><line nr="157" mi="8" ci="0" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="8" ci="0" mb="0" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="8" ci="0" mb="0" cb="0"/><line nr="183" mi="2" ci="0" mb="0" cb="0"/><line nr="194" mi="5" ci="0" mb="0" cb="0"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="206" mi="5" ci="0" mb="0" cb="0"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="230" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="40" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="RegexpClassNameMatcher.java"><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="2" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ClassNameMatcher.java"/><sourcefile name="FullClassNameMatcher.java"><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="8" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="WildcardClassNameMatcher.java"><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="281" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="56" covered="0"/><counter type="COMPLEXITY" missed="29" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="4" covered="0"/></package><package name="com/milaboratory/core/merger"><class name="com/milaboratory/core/merger/PairedReadMergingResult" sourcefilename="PairedReadMergingResult.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/io/sequence/PairedRead;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/io/sequence/PairedRead;Lcom/milaboratory/core/sequence/NSequenceWithQuality;IIZILcom/milaboratory/core/merger/MergerParameters$IdentityType;D)V" line="61"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSuccessful" desc="()Z" line="73"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOriginalRead" desc="()Lcom/milaboratory/core/io/sequence/PairedRead;" line="77"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOverlappedSequence" desc="()Lcom/milaboratory/core/sequence/NSequenceWithQuality;" line="81"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOverlap" desc="()I" line="85"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOffset" desc="()I" line="89"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getErrors" desc="()I" line="93"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIdentity" desc="()D" line="97"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIdentityType" desc="()Lcom/milaboratory/core/merger/MergerParameters$IdentityType;" line="101"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="score" desc="()I" line="105"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReversed" desc="()Z" line="109"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="114"><counter type="INSTRUCTION" missed="10" covered="35"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="128"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="137"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="99" covered="99"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="14" covered="29"/><counter type="COMPLEXITY" missed="16" covered="6"/><counter type="METHOD" missed="10" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/merger/MergerParameters" sourcefilename="MergerParameters.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/merger/QualityMergingAlgorithm;Lcom/milaboratory/core/PairedEndReadsLayout;ILjava/lang/Integer;DLcom/milaboratory/core/merger/MergerParameters$IdentityType;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMinimalOverlap" desc="()I" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinimalIdentity" desc="()D" line="61"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaxQuality" desc="()I" line="65"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQualityMergingAlgorithm" desc="()Lcom/milaboratory/core/merger/QualityMergingAlgorithm;" line="69"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPartsLayout" desc="()Lcom/milaboratory/core/PairedEndReadsLayout;" line="73"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIdentityType" desc="()Lcom/milaboratory/core/merger/MergerParameters$IdentityType;" line="77"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="overrideReadsLayout" desc="(Lcom/milaboratory/core/PairedEndReadsLayout;)Lcom/milaboratory/core/merger/MergerParameters;" line="81"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="overrideMinimalIdentity" desc="(D)Lcom/milaboratory/core/merger/MergerParameters;" line="85"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="90"><counter type="INSTRUCTION" missed="15" covered="47"/><counter type="BRANCH" missed="9" covered="9"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="107"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="131" covered="73"/><counter type="BRANCH" missed="15" covered="11"/><counter type="LINE" missed="16" covered="17"/><counter type="COMPLEXITY" missed="21" covered="3"/><counter type="METHOD" missed="9" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/merger/QualityMergingAlgorithm" sourcefilename="QualityMergingAlgorithm.java"><method name="getFromCLIName" desc="(Ljava/lang/String;)Lcom/milaboratory/core/merger/QualityMergingAlgorithm;" line="23"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="44"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/merger/MismatchOnlyPairedReadMerger" sourcefilename="MismatchOnlyPairedReadMerger.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/merger/MergerParameters;)V" line="55"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(IDILcom/milaboratory/core/merger/QualityMergingAlgorithm;Lcom/milaboratory/core/PairedEndReadsLayout;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IDLcom/milaboratory/core/merger/MergerParameters$IdentityType;ILcom/milaboratory/core/merger/QualityMergingAlgorithm;Lcom/milaboratory/core/PairedEndReadsLayout;)V" line="88"><counter type="INSTRUCTION" missed="4" covered="49"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="merge" desc="(Lcom/milaboratory/core/sequence/NSequenceWithQuality;Lcom/milaboratory/core/sequence/NSequenceWithQuality;)Lcom/milaboratory/core/merger/PairedReadMergingResult;" line="106"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="merge" desc="(Lcom/milaboratory/core/sequence/NSequenceWithQuality;Lcom/milaboratory/core/sequence/NSequenceWithQuality;Lcom/milaboratory/core/io/sequence/PairedRead;)Lcom/milaboratory/core/merger/PairedReadMergingResult;" line="112"><counter type="INSTRUCTION" missed="14" covered="227"/><counter type="BRANCH" missed="7" covered="21"/><counter type="LINE" missed="1" covered="42"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="identity" desc="(Lcom/milaboratory/core/merger/MergerParameters$IdentityType;Lcom/milaboratory/core/sequence/NSequenceWithQuality;ILcom/milaboratory/core/sequence/NSequenceWithQuality;II)D" line="202"><counter type="INSTRUCTION" missed="99" covered="30"/><counter type="BRANCH" missed="13" covered="2"/><counter type="LINE" missed="17" covered="4"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="process" desc="(Lcom/milaboratory/core/io/sequence/PairedRead;)Lcom/milaboratory/core/merger/PairedReadMergingResult;" line="235"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overlap" desc="(Lcom/milaboratory/core/sequence/NSequenceWithQuality;Lcom/milaboratory/core/sequence/NSequenceWithQuality;I)Lcom/milaboratory/core/sequence/NSequenceWithQuality;" line="247"><counter type="INSTRUCTION" missed="8" covered="181"/><counter type="BRANCH" missed="6" covered="26"/><counter type="LINE" missed="1" covered="39"/><counter type="COMPLEXITY" missed="6" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="148" covered="516"/><counter type="BRANCH" missed="29" covered="52"/><counter type="LINE" missed="24" covered="104"/><counter type="COMPLEXITY" missed="25" covered="26"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/merger/MergerParameters$IdentityType" sourcefilename="MergerParameters.java"><method name="&lt;clinit&gt;" desc="()V" line="117"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="MismatchOnlyPairedReadMerger.java"><line nr="34" mi="2" ci="6" mb="1" cb="1"/><line nr="55" mi="13" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="2" cb="2"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="10" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="6" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="10" mb="2" cb="2"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="17" mb="0" cb="2"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="7" mb="0" cb="2"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="2"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="8" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="7" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="6" mb="0" cb="2"/><line nr="154" mi="0" ci="8" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="9" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="2"/><line nr="164" mi="3" ci="19" mb="1" cb="1"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="8" mb="0" cb="0"/><line nr="177" mi="0" ci="11" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="2"/><line nr="182" mi="0" ci="7" mb="0" cb="0"/><line nr="183" mi="1" ci="21" mb="1" cb="1"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="5" ci="4" mb="3" cb="3"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="2" mb="0" cb="2"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="1" cb="1"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="0" ci="8" mb="0" cb="0"/><line nr="205" mi="0" ci="5" mb="2" cb="1"/><line nr="207" mi="0" ci="15" mb="0" cb="0"/><line nr="209" mi="12" ci="0" mb="4" cb="0"/><line nr="210" mi="4" ci="0" mb="0" cb="0"/><line nr="212" mi="4" ci="0" mb="0" cb="0"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="214" mi="7" ci="0" mb="2" cb="0"/><line nr="215" mi="3" ci="0" mb="0" cb="0"/><line nr="216" mi="6" ci="0" mb="0" cb="0"/><line nr="217" mi="5" ci="0" mb="0" cb="0"/><line nr="218" mi="11" ci="0" mb="2" cb="0"/><line nr="219" mi="5" ci="0" mb="0" cb="0"/><line nr="220" mi="1" ci="0" mb="0" cb="0"/><line nr="222" mi="5" ci="0" mb="0" cb="0"/><line nr="224" mi="4" ci="0" mb="2" cb="0"/><line nr="225" mi="8" ci="0" mb="0" cb="0"/><line nr="226" mi="8" ci="0" mb="0" cb="0"/><line nr="229" mi="12" ci="0" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="237" mi="0" ci="6" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="1" cb="1"/><line nr="248" mi="4" ci="0" mb="0" cb="0"/><line nr="251" mi="0" ci="5" mb="0" cb="2"/><line nr="253" mi="0" ci="8" mb="0" cb="0"/><line nr="254" mi="0" ci="8" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="258" mi="0" ci="2" mb="0" cb="0"/><line nr="259" mi="0" ci="7" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="264" mi="0" ci="7" mb="0" cb="2"/><line nr="265" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="269" mi="0" ci="6" mb="0" cb="4"/><line nr="270" mi="0" ci="5" mb="0" cb="0"/><line nr="271" mi="0" ci="6" mb="0" cb="0"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="0" ci="6" mb="0" cb="4"/><line nr="277" mi="0" ci="6" mb="0" cb="0"/><line nr="278" mi="0" ci="5" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="2"/><line nr="280" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="0" ci="3" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="0" cb="2"/><line nr="283" mi="0" ci="6" mb="1" cb="2"/><line nr="286" mi="0" ci="8" mb="0" cb="0"/><line nr="289" mi="0" ci="6" mb="0" cb="0"/><line nr="292" mi="0" ci="6" mb="1" cb="2"/><line nr="295" mi="0" ci="3" mb="0" cb="2"/><line nr="296" mi="0" ci="2" mb="0" cb="0"/><line nr="297" mi="0" ci="8" mb="0" cb="0"/><line nr="299" mi="0" ci="7" mb="0" cb="0"/><line nr="300" mi="0" ci="1" mb="0" cb="0"/><line nr="303" mi="0" ci="3" mb="1" cb="1"/><line nr="304" mi="0" ci="2" mb="0" cb="0"/><line nr="305" mi="0" ci="2" mb="0" cb="0"/><line nr="311" mi="4" ci="5" mb="2" cb="2"/><line nr="313" mi="0" ci="4" mb="0" cb="0"/><line nr="314" mi="0" ci="4" mb="0" cb="0"/><line nr="317" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="148" covered="516"/><counter type="BRANCH" missed="29" covered="52"/><counter type="LINE" missed="24" covered="104"/><counter type="COMPLEXITY" missed="25" covered="26"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PairedReadMergingResult.java"><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="7" mb="0" cb="2"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="13" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="3" mb="1" cb="1"/><line nr="115" mi="2" ci="7" mb="2" cb="2"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="2" ci="5" mb="1" cb="1"/><line nr="120" mi="2" ci="5" mb="1" cb="1"/><line nr="121" mi="2" ci="6" mb="1" cb="1"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="129" mi="8" ci="0" mb="0" cb="0"/><line nr="130" mi="7" ci="0" mb="0" cb="0"/><line nr="131" mi="7" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="27" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="99" covered="99"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="14" covered="29"/><counter type="COMPLEXITY" missed="16" covered="6"/><counter type="METHOD" missed="10" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QualityMergingAlgorithm.java"><line nr="18" mi="0" ci="20" mb="0" cb="0"/><line nr="19" mi="0" ci="12" mb="0" cb="0"/><line nr="20" mi="0" ci="12" mb="0" cb="0"/><line nr="23" mi="16" ci="0" mb="2" cb="0"/><line nr="24" mi="5" ci="0" mb="2" cb="0"/><line nr="25" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="44"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MergerParameters.java"><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="2"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="16" ci="0" mb="0" cb="0"/><line nr="85" mi="16" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="3" mb="1" cb="1"/><line nr="91" mi="2" ci="7" mb="2" cb="2"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="2" ci="5" mb="1" cb="1"/><line nr="96" mi="2" ci="5" mb="1" cb="1"/><line nr="97" mi="2" ci="6" mb="1" cb="1"/><line nr="98" mi="2" ci="5" mb="1" cb="1"/><line nr="99" mi="2" ci="5" mb="1" cb="1"/><line nr="100" mi="1" ci="8" mb="1" cb="1"/><line nr="107" mi="9" ci="0" mb="2" cb="0"/><line nr="108" mi="13" ci="0" mb="2" cb="0"/><line nr="109" mi="7" ci="0" mb="0" cb="0"/><line nr="110" mi="7" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="11" ci="0" mb="0" cb="0"/><line nr="113" mi="13" ci="0" mb="2" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="12" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="131" covered="97"/><counter type="BRANCH" missed="15" covered="11"/><counter type="LINE" missed="16" covered="20"/><counter type="COMPLEXITY" missed="21" covered="4"/><counter type="METHOD" missed="9" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="403" covered="756"/><counter type="BRANCH" missed="54" covered="71"/><counter type="LINE" missed="58" covered="156"/><counter type="COMPLEXITY" missed="65" covered="37"/><counter type="METHOD" missed="22" covered="16"/><counter type="CLASS" missed="0" covered="5"/></package><package name="org/apache/commons/io"><class name="org/apache/commons/io/FileUtils" sourcefilename="FileUtils.java"><method name="&lt;init&gt;" desc="()V" line="85"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFile" desc="(Ljava/io/File;[Ljava/lang/String;)Ljava/io/File;" line="190"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFile" desc="([Ljava/lang/String;)Ljava/io/File;" line="211"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTempDirectoryPath" desc="()Ljava/lang/String;" line="233"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTempDirectory" desc="()Ljava/io/File;" line="244"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUserDirectoryPath" desc="()Ljava/lang/String;" line="255"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUserDirectory" desc="()Ljava/io/File;" line="266"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="openInputStream" desc="(Ljava/io/File;)Ljava/io/FileInputStream;" line="289"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="openOutputStream" desc="(Ljava/io/File;)Ljava/io/FileOutputStream;" line="324"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="openOutputStream" desc="(Ljava/io/File;Z)Ljava/io/FileOutputStream;" line="350"><counter type="INSTRUCTION" missed="42" covered="26"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="byteCountToDisplaySize" desc="(Ljava/math/BigInteger;)Ljava/lang/String;" line="388"><counter type="INSTRUCTION" missed="126" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="byteCountToDisplaySize" desc="(J)Ljava/lang/String;" line="422"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="touch" desc="(Ljava/io/File;)V" line="439"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertFileCollectionToFileArray" desc="(Ljava/util/Collection;)[Ljava/io/File;" line="458"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="innerListFiles" desc="(Ljava/util/Collection;Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Z)V" line="473"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listFiles" desc="(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Collection;" line="517"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateListFilesParameters" desc="(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;)V" line="540"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setUpEffectiveFileFilter" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="555"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setUpEffectiveDirFilter" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="565"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listFilesAndDirs" desc="(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Collection;" line="590"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterateFiles" desc="(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Iterator;" line="625"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterateFilesAndDirs" desc="(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Iterator;" line="650"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSuffixes" desc="([Ljava/lang/String;)[Ljava/lang/String;" line="662"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listFiles" desc="(Ljava/io/File;[Ljava/lang/String;Z)Ljava/util/Collection;" line="683"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterateFiles" desc="(Ljava/io/File;[Ljava/lang/String;Z)Ljava/util/Iterator;" line="708"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contentEquals" desc="(Ljava/io/File;Ljava/io/File;)Z" line="728"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contentEqualsIgnoreEOL" desc="(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Z" line="779"><counter type="INSTRUCTION" missed="82" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toFile" desc="(Ljava/net/URL;)Ljava/io/File;" line="825"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeUrl" desc="(Ljava/lang/String;)Ljava/lang/String;" line="849"><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toFiles" desc="([Ljava/net/URL;)[Ljava/io/File;" line="901"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toURLs" desc="([Ljava/io/File;)[Ljava/net/URL;" line="929"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyFileToDirectory" desc="(Ljava/io/File;Ljava/io/File;)V" line="961"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyFileToDirectory" desc="(Ljava/io/File;Ljava/io/File;Z)V" line="993"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyFile" desc="(Ljava/io/File;Ljava/io/File;)V" line="1028"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyFile" desc="(Ljava/io/File;Ljava/io/File;Z)V" line="1060"><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyFile" desc="(Ljava/io/File;Ljava/io/OutputStream;)J" line="1093"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCopyFile" desc="(Ljava/io/File;Ljava/io/File;Z)V" line="1117"><counter type="INSTRUCTION" missed="125" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyDirectoryToDirectory" desc="(Ljava/io/File;Ljava/io/File;)V" line="1175"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyDirectory" desc="(Ljava/io/File;Ljava/io/File;)V" line="1215"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyDirectory" desc="(Ljava/io/File;Ljava/io/File;Z)V" line="1246"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyDirectory" desc="(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;)V" line="1295"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyDirectory" desc="(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V" line="1346"><counter type="INSTRUCTION" missed="107" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkFileRequirements" desc="(Ljava/io/File;Ljava/io/File;)V" line="1376"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCopyDirectory" desc="(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V" line="1402"><counter type="INSTRUCTION" missed="132" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyURLToFile" desc="(Ljava/net/URL;Ljava/io/File;)V" line="1456"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyURLToFile" desc="(Ljava/net/URL;Ljava/io/File;II)V" line="1481"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyInputStreamToFile" desc="(Ljava/io/InputStream;Ljava/io/File;)V" line="1505"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyToFile" desc="(Ljava/io/InputStream;Ljava/io/File;)V" line="1528"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyToDirectory" desc="(Ljava/io/File;Ljava/io/File;)V" line="1560"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyToDirectory" desc="(Ljava/lang/Iterable;Ljava/io/File;)V" line="1595"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deleteDirectory" desc="(Ljava/io/File;)V" line="1612"><counter type="INSTRUCTION" missed="17" covered="12"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteQuietly" desc="(Ljava/io/File;)Z" line="1643"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="directoryContains" desc="(Ljava/io/File;Ljava/io/File;)Z" line="1685"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cleanDirectory" desc="(Ljava/io/File;)V" line="1716"><counter type="INSTRUCTION" missed="5" covered="28"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="verifiedListFiles" desc="(Ljava/io/File;)[Ljava/io/File;" line="1739"><counter type="INSTRUCTION" missed="40" covered="13"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="5" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="waitFor" desc="(Ljava/io/File;I)Z" line="1769"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readFileToString" desc="(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/lang/String;" line="1805"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readFileToString" desc="(Ljava/io/File;Ljava/lang/String;)Ljava/lang/String;" line="1822"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readFileToString" desc="(Ljava/io/File;)Ljava/lang/String;" line="1838"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readFileToByteArray" desc="(Ljava/io/File;)[B" line="1851"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readLines" desc="(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/util/List;" line="1869"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readLines" desc="(Ljava/io/File;Ljava/lang/String;)Ljava/util/List;" line="1886"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readLines" desc="(Ljava/io/File;)Ljava/util/List;" line="1901"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lineIterator" desc="(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/io/LineIterator;" line="1936"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lineIterator" desc="(Ljava/io/File;)Lorg/apache/commons/io/LineIterator;" line="1963"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeStringToFile" desc="(Ljava/io/File;Ljava/lang/String;Ljava/nio/charset/Charset;)V" line="1983"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeStringToFile" desc="(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V" line="1999"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeStringToFile" desc="(Ljava/io/File;Ljava/lang/String;Ljava/nio/charset/Charset;Z)V" line="2015"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeStringToFile" desc="(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Z)V" line="2035"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeStringToFile" desc="(Ljava/io/File;Ljava/lang/String;)V" line="2048"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeStringToFile" desc="(Ljava/io/File;Ljava/lang/String;Z)V" line="2064"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/io/File;Ljava/lang/CharSequence;)V" line="2078"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/io/File;Ljava/lang/CharSequence;Z)V" line="2094"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/io/File;Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)V" line="2107"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/io/File;Ljava/lang/CharSequence;Ljava/lang/String;)V" line="2121"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/io/File;Ljava/lang/CharSequence;Ljava/nio/charset/Charset;Z)V" line="2137"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/io/File;Ljava/lang/CharSequence;Ljava/lang/String;Z)V" line="2156"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeByteArrayToFile" desc="(Ljava/io/File;[B)V" line="2171"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeByteArrayToFile" desc="(Ljava/io/File;[BZ)V" line="2186"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeByteArrayToFile" desc="(Ljava/io/File;[BII)V" line="2203"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeByteArrayToFile" desc="(Ljava/io/File;[BIIZ)V" line="2222"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeLines" desc="(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;)V" line="2244"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeLines" desc="(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;Z)V" line="2263"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeLines" desc="(Ljava/io/File;Ljava/util/Collection;)V" line="2277"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeLines" desc="(Ljava/io/File;Ljava/util/Collection;Z)V" line="2293"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeLines" desc="(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;)V" line="2314"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeLines" desc="(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;Z)V" line="2334"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeLines" desc="(Ljava/io/File;Ljava/util/Collection;Ljava/lang/String;)V" line="2352"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeLines" desc="(Ljava/io/File;Ljava/util/Collection;Ljava/lang/String;Z)V" line="2370"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forceDelete" desc="(Ljava/io/File;)V" line="2390"><counter type="INSTRUCTION" missed="31" covered="10"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="5" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forceDeleteOnExit" desc="(Ljava/io/File;)V" line="2414"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deleteDirectoryOnExit" desc="(Ljava/io/File;)V" line="2429"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cleanDirectoryOnExit" desc="(Ljava/io/File;)V" line="2447"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forceMkdir" desc="(Ljava/io/File;)V" line="2475"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forceMkdirParent" desc="(Ljava/io/File;)V" line="2507"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sizeOf" desc="(Ljava/io/File;)J" line="2539"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sizeOfAsBigInteger" desc="(Ljava/io/File;)Ljava/math/BigInteger;" line="2572"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sizeOfDirectory" desc="(Ljava/io/File;)J" line="2598"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sizeOfDirectory0" desc="(Ljava/io/File;)J" line="2610"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sizeOf0" desc="(Ljava/io/File;)J" line="2640"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sizeOfDirectoryAsBigInteger" desc="(Ljava/io/File;)Ljava/math/BigInteger;" line="2656"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sizeOfDirectoryBig0" desc="(Ljava/io/File;)Ljava/math/BigInteger;" line="2669"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sizeOfBig0" desc="(Ljava/io/File;)Ljava/math/BigInteger;" line="2696"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkDirectory" desc="(Ljava/io/File;)V" line="2710"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFileNewer" desc="(Ljava/io/File;Ljava/io/File;)Z" line="2733"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFileNewer" desc="(Ljava/io/File;Ljava/util/Date;)Z" line="2756"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFileNewer" desc="(Ljava/io/File;J)Z" line="2775"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFileOlder" desc="(Ljava/io/File;Ljava/io/File;)Z" line="2800"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFileOlder" desc="(Ljava/io/File;Ljava/util/Date;)Z" line="2823"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFileOlder" desc="(Ljava/io/File;J)Z" line="2842"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checksumCRC32" desc="(Ljava/io/File;)J" line="2864"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checksum" desc="(Ljava/io/File;Ljava/util/zip/Checksum;)Ljava/util/zip/Checksum;" line="2887"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="moveDirectory" desc="(Ljava/io/File;Ljava/io/File;)V" line="2910"><counter type="INSTRUCTION" missed="127" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="moveDirectoryToDirectory" desc="(Ljava/io/File;Ljava/io/File;Z)V" line="2954"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="moveFile" desc="(Ljava/io/File;Ljava/io/File;)V" line="2988"><counter type="INSTRUCTION" missed="116" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="moveFileToDirectory" desc="(Ljava/io/File;Ljava/io/File;Z)V" line="3032"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="moveToDirectory" desc="(Ljava/io/File;Ljava/io/File;Z)V" line="3068"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSymlink" desc="(Ljava/io/File;)Z" line="3104"><counter type="INSTRUCTION" missed="5" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="98"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2971" covered="160"/><counter type="BRANCH" missed="394" covered="20"/><counter type="LINE" missed="608" covered="47"/><counter type="COMPLEXITY" missed="314" covered="12"/><counter type="METHOD" missed="109" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/FilenameUtils" sourcefilename="FilenameUtils.java"><method name="&lt;init&gt;" desc="()V" line="129"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSystemWindows" desc="()Z" line="139"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSeparator" desc="(C)Z" line="150"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="normalize" desc="(Ljava/lang/String;)Ljava/lang/String;" line="195"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="normalize" desc="(Ljava/lang/String;Z)Ljava/lang/String;" line="242"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="normalizeNoEndSeparator" desc="(Ljava/lang/String;)Ljava/lang/String;" line="289"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="normalizeNoEndSeparator" desc="(Ljava/lang/String;Z)Ljava/lang/String;" line="336"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doNormalize" desc="(Ljava/lang/String;CZ)Ljava/lang/String;" line="349"><counter type="INSTRUCTION" missed="306" covered="0"/><counter type="BRANCH" missed="60" covered="0"/><counter type="LINE" missed="53" covered="0"/><counter type="COMPLEXITY" missed="31" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="concat" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="486"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="directoryContains" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="535"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="separatorsToUnix" desc="(Ljava/lang/String;)Ljava/lang/String;" line="558"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="separatorsToWindows" desc="(Ljava/lang/String;)Ljava/lang/String;" line="571"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="separatorsToSystem" desc="(Ljava/lang/String;)Ljava/lang/String;" line="584"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPrefixLength" desc="(Ljava/lang/String;)I" line="634"><counter type="INSTRUCTION" missed="170" covered="0"/><counter type="BRANCH" missed="52" covered="0"/><counter type="LINE" missed="39" covered="0"/><counter type="COMPLEXITY" missed="27" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indexOfLastSeparator" desc="(Ljava/lang/String;)I" line="702"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indexOfExtension" desc="(Ljava/lang/String;)I" line="725"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPrefix" desc="(Ljava/lang/String;)Ljava/lang/String;" line="764"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPath" desc="(Ljava/lang/String;)Ljava/lang/String;" line="804"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPathNoEndSeparator" desc="(Ljava/lang/String;)Ljava/lang/String;" line="832"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doGetPath" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="843"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFullPath" desc="(Ljava/lang/String;)Ljava/lang/String;" line="886"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFullPathNoEndSeparator" desc="(Ljava/lang/String;)Ljava/lang/String;" line="916"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doGetFullPath" desc="(Ljava/lang/String;Z)Ljava/lang/String;" line="927"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="(Ljava/lang/String;)Ljava/lang/String;" line="971"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="failIfNullBytePresent" desc="(Ljava/lang/String;)V" line="986"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBaseName" desc="(Ljava/lang/String;)Ljava/lang/String;" line="1014"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExtension" desc="(Ljava/lang/String;)Ljava/lang/String;" line="1036"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeExtension" desc="(Ljava/lang/String;)Ljava/lang/String;" line="1066"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="1092"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equalsOnSystem" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="1107"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equalsNormalized" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="1123"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equalsNormalizedOnSystem" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="1140"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z" line="1158"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isExtension" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="1189"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isExtension" desc="(Ljava/lang/String;[Ljava/lang/String;)Z" line="1214"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isExtension" desc="(Ljava/lang/String;Ljava/util/Collection;)Z" line="1244"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wildcardMatch" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="1285"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wildcardMatchOnSystem" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="1311"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wildcardMatch" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z" line="1329"><counter type="INSTRUCTION" missed="158" covered="0"/><counter type="BRANCH" missed="36" covered="0"/><counter type="LINE" missed="43" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="splitOnTokens" desc="(Ljava/lang/String;)[Ljava/lang/String;" line="1422"><counter type="INSTRUCTION" missed="100" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="96"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1356" covered="0"/><counter type="BRANCH" missed="304" covered="0"/><counter type="LINE" missed="324" covered="0"/><counter type="COMPLEXITY" missed="193" covered="0"/><counter type="METHOD" missed="41" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/Charsets" sourcefilename="Charsets.java"><method name="&lt;init&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requiredCharsets" desc="()Ljava/util/SortedMap;" line="76"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCharset" desc="(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;" line="94"><counter type="INSTRUCTION" missed="2" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toCharset" desc="(Ljava/lang/String;)Ljava/nio/charset/Charset;" line="107"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="120"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="56" covered="17"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="10" covered="7"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/FileCleaningTracker$Tracker" sourcefilename="FileCleaningTracker.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/apache/commons/io/FileDeleteStrategy;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V" line="262"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPath" desc="()Ljava/lang/String;" line="273"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="delete" desc="()Z" line="283"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/FileCleaner" sourcefilename="FileCleaner.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="track" desc="(Ljava/io/File;Ljava/lang/Object;)V" line="57"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="track" desc="(Ljava/io/File;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V" line="73"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="track" desc="(Ljava/lang/String;Ljava/lang/Object;)V" line="88"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="track" desc="(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V" line="104"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTrackCount" desc="()I" line="117"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitWhenFinished" desc="()V" line="145"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="()Lorg/apache/commons/io/FileCleaningTracker;" line="157"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/IOExceptionWithCause" sourcefilename="IOExceptionWithCause.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="49"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="63"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/ByteOrderMark" sourcefilename="ByteOrderMark.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;[I)V" line="76"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCharsetName" desc="()Ljava/lang/String;" line="94"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="length" desc="()I" line="103"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)I" line="113"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBytes" desc="()[B" line="122"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="138"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="161"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="175"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="96" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="295" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="46" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/DirectoryWalker$CancelException" sourcefilename="DirectoryWalker.java"><method name="&lt;init&gt;" desc="(Ljava/io/File;I)V" line="606"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/io/File;I)V" line="619"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFile" desc="()Ljava/io/File;" line="630"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDepth" desc="()I" line="639"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/ThreadMonitor" sourcefilename="ThreadMonitor.java"><method name="start" desc="(J)Ljava/lang/Thread;" line="54"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="start" desc="(Ljava/lang/Thread;J)Ljava/lang/Thread;" line="67"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stop" desc="(Ljava/lang/Thread;)V" line="83"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Thread;J)V" line="94"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="()V" line="108"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sleep" desc="(J)V" line="125"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/ByteOrderParser" sourcefilename="ByteOrderParser.java"><method name="parseByteOrder" desc="(Ljava/lang/String;)Ljava/nio/ByteOrder;" line="56"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/FileDeleteStrategy" sourcefilename="FileDeleteStrategy.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="55"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deleteQuietly" desc="(Ljava/io/File;)Z" line="71"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="delete" desc="(Ljava/io/File;)V" line="92"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doDelete" desc="(Ljava/io/File;)Z" line="114"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="125"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/IOUtils" sourcefilename="IOUtils.java"><method name="&lt;init&gt;" desc="()V" line="175"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="(Ljava/net/URLConnection;)V" line="187"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="closeQuietly" desc="(Ljava/io/Reader;)V" line="221"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="closeQuietly" desc="(Ljava/io/Writer;)V" line="252"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="closeQuietly" desc="(Ljava/io/InputStream;)V" line="284"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="closeQuietly" desc="(Ljava/io/OutputStream;)V" line="317"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="closeQuietly" desc="(Ljava/io/Closeable;)V" line="362"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="closeQuietly" desc="([Ljava/io/Closeable;)V" line="419"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="closeQuietly" desc="(Ljava/net/Socket;)V" line="456"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="closeQuietly" desc="(Ljava/nio/channels/Selector;)V" line="494"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="closeQuietly" desc="(Ljava/net/ServerSocket;)V" line="532"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBufferedInputStream" desc="(Ljava/io/InputStream;)Ljava/io/InputStream;" line="563"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBufferedInputStream" desc="(Ljava/io/InputStream;I)Ljava/io/InputStream;" line="589"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBufferedReader" desc="(Ljava/io/Reader;)Ljava/io/BufferedReader;" line="603"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBufferedReader" desc="(Ljava/io/Reader;I)Ljava/io/BufferedReader;" line="618"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buffer" desc="(Ljava/io/Reader;)Ljava/io/BufferedReader;" line="631"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buffer" desc="(Ljava/io/Reader;I)Ljava/io/BufferedReader;" line="645"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buffer" desc="(Ljava/io/Writer;)Ljava/io/BufferedWriter;" line="658"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buffer" desc="(Ljava/io/Writer;I)Ljava/io/BufferedWriter;" line="672"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buffer" desc="(Ljava/io/OutputStream;)Ljava/io/BufferedOutputStream;" line="686"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buffer" desc="(Ljava/io/OutputStream;I)Ljava/io/BufferedOutputStream;" line="705"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buffer" desc="(Ljava/io/InputStream;)Ljava/io/BufferedInputStream;" line="723"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buffer" desc="(Ljava/io/InputStream;I)Ljava/io/BufferedInputStream;" line="742"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByteArray" desc="(Ljava/io/InputStream;)[B" line="764"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByteArray" desc="(Ljava/io/InputStream;J)[B" line="789"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByteArray" desc="(Ljava/io/InputStream;I)[B" line="811"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByteArray" desc="(Ljava/io/Reader;)[B" line="849"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByteArray" desc="(Ljava/io/Reader;Ljava/nio/charset/Charset;)[B" line="867"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByteArray" desc="(Ljava/io/Reader;Ljava/lang/String;)[B" line="894"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByteArray" desc="(Ljava/lang/String;)[B" line="912"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByteArray" desc="(Ljava/net/URI;)[B" line="925"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByteArray" desc="(Ljava/net/URL;)[B" line="938"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByteArray" desc="(Ljava/net/URLConnection;)[B" line="956"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCharArray" desc="(Ljava/io/InputStream;)[C" line="980"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCharArray" desc="(Ljava/io/InputStream;Ljava/nio/charset/Charset;)[C" line="999"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCharArray" desc="(Ljava/io/InputStream;Ljava/lang/String;)[C" line="1025"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCharArray" desc="(Ljava/io/Reader;)[C" line="1041"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Ljava/io/InputStream;)Ljava/lang/String;" line="1064"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Ljava/lang/String;" line="1083"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;" line="1110"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Ljava/io/Reader;)Ljava/lang/String;" line="1125"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Ljava/net/URI;)Ljava/lang/String;" line="1142"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Ljava/net/URI;Ljava/nio/charset/Charset;)Ljava/lang/String;" line="1155"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Ljava/net/URI;Ljava/lang/String;)Ljava/lang/String;" line="1171"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Ljava/net/URL;)Ljava/lang/String;" line="1185"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Ljava/net/URL;Ljava/nio/charset/Charset;)Ljava/lang/String;" line="1198"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Ljava/net/URL;Ljava/lang/String;)Ljava/lang/String;" line="1216"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="([B)Ljava/lang/String;" line="1232"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="([BLjava/lang/String;)Ljava/lang/String;" line="1249"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resourceToString" desc="(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;" line="1272"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resourceToString" desc="(Ljava/lang/String;Ljava/nio/charset/Charset;Ljava/lang/ClassLoader;)Ljava/lang/String;" line="1293"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resourceToByteArray" desc="(Ljava/lang/String;)[B" line="1311"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resourceToByteArray" desc="(Ljava/lang/String;Ljava/lang/ClassLoader;)[B" line="1330"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resourceToURL" desc="(Ljava/lang/String;)Ljava/net/URL;" line="1348"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resourceToURL" desc="(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/net/URL;" line="1369"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readLines" desc="(Ljava/io/InputStream;)Ljava/util/List;" line="1397"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readLines" desc="(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Ljava/util/List;" line="1415"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readLines" desc="(Ljava/io/InputStream;Ljava/lang/String;)Ljava/util/List;" line="1440"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readLines" desc="(Ljava/io/Reader;)Ljava/util/List;" line="1457"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lineIterator" desc="(Ljava/io/Reader;)Lorg/apache/commons/io/LineIterator;" line="1498"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lineIterator" desc="(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Lorg/apache/commons/io/LineIterator;" line="1532"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lineIterator" desc="(Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/io/LineIterator;" line="1569"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toInputStream" desc="(Ljava/lang/CharSequence;)Ljava/io/InputStream;" line="1585"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toInputStream" desc="(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Ljava/io/InputStream;" line="1598"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toInputStream" desc="(Ljava/lang/CharSequence;Ljava/lang/String;)Ljava/io/InputStream;" line="1618"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toInputStream" desc="(Ljava/lang/String;)Ljava/io/InputStream;" line="1634"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toInputStream" desc="(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/io/InputStream;" line="1647"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toInputStream" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;" line="1667"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([BLjava/io/OutputStream;)V" line="1686"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeChunked" desc="([BLjava/io/OutputStream;)V" line="1705"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([BLjava/io/Writer;)V" line="1733"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([BLjava/io/Writer;Ljava/nio/charset/Charset;)V" line="1751"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([BLjava/io/Writer;Ljava/lang/String;)V" line="1777"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([CLjava/io/Writer;)V" line="1794"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeChunked" desc="([CLjava/io/Writer;)V" line="1812"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([CLjava/io/OutputStream;)V" line="1842"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([CLjava/io/OutputStream;Ljava/nio/charset/Charset;)V" line="1861"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([CLjava/io/OutputStream;Ljava/lang/String;)V" line="1888"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/CharSequence;Ljava/io/Writer;)V" line="1904"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/CharSequence;Ljava/io/OutputStream;)V" line="1926"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/CharSequence;Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V" line="1944"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/CharSequence;Ljava/io/OutputStream;Ljava/lang/String;)V" line="1969"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/String;Ljava/io/Writer;)V" line="1985"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/String;Ljava/io/OutputStream;)V" line="2007"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/String;Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V" line="2024"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)V" line="2049"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/StringBuffer;Ljava/io/Writer;)V" line="2068"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/StringBuffer;Ljava/io/OutputStream;)V" line="2090"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/StringBuffer;Ljava/io/OutputStream;Ljava/lang/String;)V" line="2115"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeLines" desc="(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;)V" line="2139"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeLines" desc="(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V" line="2157"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeLines" desc="(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)V" line="2193"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeLines" desc="(Ljava/util/Collection;Ljava/lang/String;Ljava/io/Writer;)V" line="2209"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/io/InputStream;Ljava/io/OutputStream;)I" line="2246"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/io/InputStream;Ljava/io/OutputStream;I)J" line="2270"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyLarge" desc="(Ljava/io/InputStream;Ljava/io/OutputStream;)J" line="2291"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyLarge" desc="(Ljava/io/InputStream;Ljava/io/OutputStream;[B)J" line="2312"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyLarge" desc="(Ljava/io/InputStream;Ljava/io/OutputStream;JJ)J" line="2347"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyLarge" desc="(Ljava/io/InputStream;Ljava/io/OutputStream;JJ[B)J" line="2376"><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/io/InputStream;Ljava/io/Writer;)V" line="2419"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/io/InputStream;Ljava/io/Writer;Ljava/nio/charset/Charset;)V" line="2440"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/io/InputStream;Ljava/io/Writer;Ljava/lang/String;)V" line="2468"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/io/Reader;Ljava/io/Writer;)I" line="2493"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyLarge" desc="(Ljava/io/Reader;Ljava/io/Writer;)J" line="2516"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyLarge" desc="(Ljava/io/Reader;Ljava/io/Writer;[C)J" line="2535"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyLarge" desc="(Ljava/io/Reader;Ljava/io/Writer;JJ)J" line="2565"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyLarge" desc="(Ljava/io/Reader;Ljava/io/Writer;JJ[C)J" line="2590"><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/io/Reader;Ljava/io/OutputStream;)V" line="2636"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/io/Reader;Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V" line="2664"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/io/Reader;Ljava/io/OutputStream;Ljava/lang/String;)V" line="2699"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contentEquals" desc="(Ljava/io/InputStream;Ljava/io/InputStream;)Z" line="2721"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contentEquals" desc="(Ljava/io/Reader;Ljava/io/Reader;)Z" line="2761"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contentEqualsIgnoreEOL" desc="(Ljava/io/Reader;Ljava/io/Reader;)Z" line="2797"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skip" desc="(Ljava/io/InputStream;J)J" line="2834"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skip" desc="(Ljava/nio/channels/ReadableByteChannel;J)J" line="2870"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skip" desc="(Ljava/io/Reader;J)J" line="2909"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skipFully" desc="(Ljava/io/InputStream;J)V" line="2952"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skipFully" desc="(Ljava/nio/channels/ReadableByteChannel;J)V" line="2972"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skipFully" desc="(Ljava/io/Reader;J)V" line="3001"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Ljava/io/Reader;[CII)I" line="3024"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Ljava/io/Reader;[C)I" line="3052"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Ljava/io/InputStream;[BII)I" line="3071"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Ljava/io/InputStream;[B)I" line="3099"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)I" line="3116"><counter type="INSTRUCTION" missed="1" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readFully" desc="(Ljava/io/Reader;[CII)V" line="3143"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readFully" desc="(Ljava/io/Reader;[C)V" line="3163"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readFully" desc="(Ljava/io/InputStream;[BII)V" line="3183"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readFully" desc="(Ljava/io/InputStream;[B)V" line="3203"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readFully" desc="(Ljava/io/InputStream;I)[B" line="3221"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readFully" desc="(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V" line="3239"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="121"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1778" covered="50"/><counter type="BRANCH" missed="222" covered="4"/><counter type="LINE" missed="435" covered="15"/><counter type="COMPLEXITY" missed="240" covered="4"/><counter type="METHOD" missed="128" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/TaggedIOException" sourcefilename="TaggedIOException.java"><method name="isTaggedWith" desc="(Ljava/lang/Throwable;Ljava/lang/Object;)Z" line="66"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="throwCauseIfTaggedWith" desc="(Ljava/lang/Throwable;Ljava/lang/Object;)V" line="95"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/IOException;Ljava/io/Serializable;)V" line="112"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTag" desc="()Ljava/io/Serializable;" line="122"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCause" desc="()Ljava/io/IOException;" line="133"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/FileExistsException" sourcefilename="FileExistsException.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="47"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="56"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/DirectoryWalker" sourcefilename="DirectoryWalker.java"><method name="&lt;init&gt;" desc="()V" line="266"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/FileFilter;I)V" line="281"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;I)V" line="300"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="walk" desc="(Ljava/io/File;Ljava/util/Collection;)V" line="330"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="walk" desc="(Ljava/io/File;ILjava/util/Collection;)V" line="351"><counter type="INSTRUCTION" missed="108" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkIfCancelled" desc="(Ljava/io/File;ILjava/util/Collection;)V" line="395"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleIsCancelled" desc="(Ljava/io/File;ILjava/util/Collection;)Z" line="438"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleCancelled" desc="(Ljava/io/File;Ljava/util/Collection;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V" line="457"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleStart" desc="(Ljava/io/File;Ljava/util/Collection;)V" line="472"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleDirectory" desc="(Ljava/io/File;ILjava/util/Collection;)Z" line="492"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleDirectoryStart" desc="(Ljava/io/File;ILjava/util/Collection;)V" line="508"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="filterDirectoryContents" desc="(Ljava/io/File;I[Ljava/io/File;)[Ljava/io/File;" line="524"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleFile" desc="(Ljava/io/File;ILjava/util/Collection;)V" line="539"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleRestricted" desc="(Ljava/io/File;ILjava/util/Collection;)V" line="554"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleDirectoryEnd" desc="(Ljava/io/File;ILjava/util/Collection;)V" line="569"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleEnd" desc="(Ljava/util/Collection;)V" line="581"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="221" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="57" covered="0"/><counter type="COMPLEXITY" missed="29" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/EndianUtils" sourcefilename="EndianUtils.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="swapShort" desc="(S)S" line="57"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="swapInteger" desc="(I)I" line="67"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="swapLong" desc="(J)J" line="80"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="swapFloat" desc="(F)F" line="97"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="swapDouble" desc="(D)D" line="106"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeSwappedShort" desc="([BIS)V" line="119"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readSwappedShort" desc="([BI)S" line="131"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readSwappedUnsignedShort" desc="([BI)I" line="144"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeSwappedInteger" desc="([BII)V" line="156"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readSwappedInteger" desc="([BI)I" line="170"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readSwappedUnsignedInteger" desc="([BI)J" line="185"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeSwappedLong" desc="([BIJ)V" line="202"><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readSwappedLong" desc="([BI)J" line="220"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeSwappedFloat" desc="([BIF)V" line="233"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readSwappedFloat" desc="([BI)F" line="244"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeSwappedDouble" desc="([BID)V" line="255"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readSwappedDouble" desc="([BI)D" line="266"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeSwappedShort" desc="(Ljava/io/OutputStream;S)V" line="279"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readSwappedShort" desc="(Ljava/io/InputStream;)S" line="293"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readSwappedUnsignedShort" desc="(Ljava/io/InputStream;)I" line="307"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeSwappedInteger" desc="(Ljava/io/OutputStream;I)V" line="324"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readSwappedInteger" desc="(Ljava/io/InputStream;)I" line="340"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readSwappedUnsignedInteger" desc="(Ljava/io/InputStream;)J" line="361"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeSwappedLong" desc="(Ljava/io/OutputStream;J)V" line="385"><counter type="INSTRUCTION" missed="73" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readSwappedLong" desc="(Ljava/io/InputStream;)J" line="405"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeSwappedFloat" desc="(Ljava/io/OutputStream;F)V" line="422"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readSwappedFloat" desc="(Ljava/io/InputStream;)F" line="435"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeSwappedDouble" desc="(Ljava/io/OutputStream;D)V" line="448"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readSwappedDouble" desc="(Ljava/io/InputStream;)D" line="461"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Ljava/io/InputStream;)I" line="473"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="749" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="87" covered="0"/><counter type="COMPLEXITY" missed="33" covered="0"/><counter type="METHOD" missed="31" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/FileSystemUtils" sourcefilename="FileSystemUtils.java"><method name="&lt;init&gt;" desc="()V" line="116"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="freeSpace" desc="(Ljava/lang/String;)J" line="148"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="freeSpaceKb" desc="(Ljava/lang/String;)J" line="179"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="freeSpaceKb" desc="(Ljava/lang/String;J)J" line="210"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="freeSpaceKb" desc="()J" line="229"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="freeSpaceKb" desc="(J)J" line="250"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="freeSpaceOS" desc="(Ljava/lang/String;IZJ)J" line="275"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="9" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="freeSpaceWindows" desc="(Ljava/lang/String;J)J" line="304"><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseDir" desc="(Ljava/lang/String;Ljava/lang/String;)J" line="347"><counter type="INSTRUCTION" missed="100" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="freeSpaceUnix" desc="(Ljava/lang/String;ZZJ)J" line="400"><counter type="INSTRUCTION" missed="162" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseBytes" desc="(Ljava/lang/String;Ljava/lang/String;)J" line="457"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="performCommand" desc="([Ljava/lang/String;IJ)Ljava/util/List;" line="492"><counter type="INSTRUCTION" missed="159" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="46" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="openProcess" desc="([Ljava/lang/String;)Ljava/lang/Process;" line="573"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="103" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="748" covered="0"/><counter type="BRANCH" missed="101" covered="0"/><counter type="LINE" missed="162" covered="0"/><counter type="COMPLEXITY" missed="66" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/FileCleaningTracker$Reaper" sourcefilename="FileCleaningTracker.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/io/FileCleaningTracker;)V" line="208"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="()V" line="221"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/FileDeleteStrategy$ForceFileDeleteStrategy" sourcefilename="FileDeleteStrategy.java"><method name="&lt;init&gt;" desc="()V" line="135"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doDelete" desc="(Ljava/io/File;)Z" line="151"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/HexDump" sourcefilename="HexDump.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dump" desc="([BJLjava/io/OutputStream;I)V" line="76"><counter type="INSTRUCTION" missed="147" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dump" desc="(Ljava/lang/StringBuilder;J)Ljava/lang/StringBuilder;" line="141"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dump" desc="(Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;" line="156"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="121"><counter type="INSTRUCTION" missed="106" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="301" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="39" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/IOCase" sourcefilename="IOCase.java"><method name="forName" desc="(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;" line="80"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;Z)V" line="97"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readResolve" desc="()Ljava/lang/Object;" line="109"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="119"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCaseSensitive" desc="()Z" line="128"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkCompareTo" desc="(Ljava/lang/String;Ljava/lang/String;)I" line="144"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkEquals" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="162"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkStartsWith" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="180"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkEndsWith" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="195"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkIndexOf" desc="(Ljava/lang/String;ILjava/lang/String;)I" line="215"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkRegionMatches" desc="(Ljava/lang/String;ILjava/lang/String;)Z" line="239"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="250"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="216" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/LineIterator" sourcefilename="LineIterator.java"><method name="&lt;init&gt;" desc="(Ljava/io/Reader;)V" line="59"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNext" desc="()Z" line="89"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidLine" desc="(Ljava/lang/String;)Z" line="123"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()Ljava/lang/String;" line="134"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nextLine" desc="()Ljava/lang/String;" line="144"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="163"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="()V" line="177"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="closeQuietly" desc="(Lorg/apache/commons/io/LineIterator;)V" line="192"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="117" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/FileCleaningTracker" sourcefilename="FileCleaningTracker.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="track" desc="(Ljava/io/File;Ljava/lang/Object;)V" line="79"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="track" desc="(Ljava/io/File;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V" line="93"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="track" desc="(Ljava/lang/String;Ljava/lang/Object;)V" line="109"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="track" desc="(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V" line="123"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addTracker" desc="(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V" line="139"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTrackCount" desc="()I" line="157"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDeleteFailures" desc="()Ljava/util/List;" line="167"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitWhenFinished" desc="()V" line="194"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="120" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/CopyUtils" sourcefilename="CopyUtils.java"><method name="&lt;init&gt;" desc="()V" line="122"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="([BLjava/io/OutputStream;)V" line="136"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="([BLjava/io/Writer;)V" line="155"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="([BLjava/io/Writer;Ljava/lang/String;)V" line="175"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/io/InputStream;Ljava/io/OutputStream;)I" line="196"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/io/Reader;Ljava/io/Writer;)I" line="221"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/io/InputStream;Ljava/io/Writer;)V" line="250"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/io/InputStream;Ljava/io/Writer;Ljava/lang/String;)V" line="269"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/io/Reader;Ljava/io/OutputStream;)V" line="293"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/io/Reader;Ljava/io/OutputStream;Ljava/lang/String;)V" line="316"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/lang/String;Ljava/io/OutputStream;)V" line="342"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)V" line="368"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/lang/String;Ljava/io/Writer;)V" line="388"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="166" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="49" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="FileUtils.java"><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="6" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="2" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="193" mi="2" ci="0" mb="2" cb="0"/><line nr="194" mi="5" ci="0" mb="0" cb="0"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="197" mi="16" ci="0" mb="2" cb="0"/><line nr="198" mi="6" ci="0" mb="0" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="211" mi="2" ci="0" mb="2" cb="0"/><line nr="212" mi="5" ci="0" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="0" cb="0"/><line nr="215" mi="16" ci="0" mb="2" cb="0"/><line nr="216" mi="2" ci="0" mb="2" cb="0"/><line nr="217" mi="6" ci="0" mb="0" cb="0"/><line nr="219" mi="6" ci="0" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="0" cb="0"/><line nr="233" mi="3" ci="0" mb="0" cb="0"/><line nr="244" mi="5" ci="0" mb="0" cb="0"/><line nr="255" mi="3" ci="0" mb="0" cb="0"/><line nr="266" mi="5" ci="0" mb="0" cb="0"/><line nr="289" mi="3" ci="0" mb="2" cb="0"/><line nr="290" mi="3" ci="0" mb="2" cb="0"/><line nr="291" mi="14" ci="0" mb="0" cb="0"/><line nr="293" mi="3" ci="0" mb="2" cb="0"/><line nr="294" mi="14" ci="0" mb="0" cb="0"/><line nr="297" mi="14" ci="0" mb="0" cb="0"/><line nr="299" mi="5" ci="0" mb="0" cb="0"/><line nr="324" mi="4" ci="0" mb="0" cb="0"/><line nr="350" mi="0" ci="3" mb="0" cb="2"/><line nr="351" mi="0" ci="3" mb="1" cb="1"/><line nr="352" mi="14" ci="0" mb="0" cb="0"/><line nr="354" mi="0" ci="3" mb="1" cb="1"/><line nr="355" mi="14" ci="0" mb="0" cb="0"/><line nr="358" mi="0" ci="3" mb="0" cb="0"/><line nr="359" mi="0" ci="2" mb="1" cb="1"/><line nr="360" mi="0" ci="6" mb="2" cb="2"/><line nr="361" mi="14" ci="0" mb="0" cb="0"/><line nr="365" mi="0" ci="6" mb="0" cb="0"/><line nr="388" mi="6" ci="0" mb="2" cb="0"/><line nr="389" mi="13" ci="0" mb="0" cb="0"/><line nr="390" mi="6" ci="0" mb="2" cb="0"/><line nr="391" mi="13" ci="0" mb="0" cb="0"/><line nr="392" mi="6" ci="0" mb="2" cb="0"/><line nr="393" mi="13" ci="0" mb="0" cb="0"/><line nr="394" mi="6" ci="0" mb="2" cb="0"/><line nr="395" mi="13" ci="0" mb="0" cb="0"/><line nr="396" mi="6" ci="0" mb="2" cb="0"/><line nr="397" mi="13" ci="0" mb="0" cb="0"/><line nr="398" mi="6" ci="0" mb="2" cb="0"/><line nr="399" mi="13" ci="0" mb="0" cb="0"/><line nr="401" mi="10" ci="0" mb="0" cb="0"/><line nr="403" mi="2" ci="0" mb="0" cb="0"/><line nr="422" mi="4" ci="0" mb="0" cb="0"/><line nr="439" mi="3" ci="0" mb="2" cb="0"/><line nr="440" mi="3" ci="0" mb="0" cb="0"/><line nr="442" mi="4" ci="0" mb="0" cb="0"/><line nr="443" mi="2" ci="0" mb="2" cb="0"/><line nr="444" mi="12" ci="0" mb="0" cb="0"/><line nr="446" mi="1" ci="0" mb="0" cb="0"/><line nr="458" mi="7" ci="0" mb="0" cb="0"/><line nr="473" mi="4" ci="0" mb="0" cb="0"/><line nr="475" mi="2" ci="0" mb="2" cb="0"/><line nr="476" mi="16" ci="0" mb="2" cb="0"/><line nr="477" mi="3" ci="0" mb="2" cb="0"/><line nr="478" mi="2" ci="0" mb="2" cb="0"/><line nr="479" mi="4" ci="0" mb="0" cb="0"/><line nr="481" mi="6" ci="0" mb="0" cb="0"/><line nr="483" mi="4" ci="0" mb="0" cb="0"/><line nr="487" mi="1" ci="0" mb="0" cb="0"/><line nr="517" mi="3" ci="0" mb="0" cb="0"/><line nr="519" mi="3" ci="0" mb="0" cb="0"/><line nr="520" mi="3" ci="0" mb="0" cb="0"/><line nr="523" mi="4" ci="0" mb="0" cb="0"/><line nr="524" mi="13" ci="0" mb="0" cb="0"/><line nr="525" mi="2" ci="0" mb="0" cb="0"/><line nr="526" mi="2" ci="0" mb="0" cb="0"/><line nr="540" mi="3" ci="0" mb="2" cb="0"/><line nr="541" mi="12" ci="0" mb="0" cb="0"/><line nr="543" mi="2" ci="0" mb="2" cb="0"/><line nr="544" mi="5" ci="0" mb="0" cb="0"/><line nr="546" mi="1" ci="0" mb="0" cb="0"/><line nr="555" mi="13" ci="0" mb="0" cb="0"/><line nr="565" mi="16" ci="0" mb="2" cb="0"/><line nr="590" mi="3" ci="0" mb="0" cb="0"/><line nr="592" mi="3" ci="0" mb="0" cb="0"/><line nr="593" mi="3" ci="0" mb="0" cb="0"/><line nr="596" mi="4" ci="0" mb="0" cb="0"/><line nr="597" mi="3" ci="0" mb="2" cb="0"/><line nr="598" mi="4" ci="0" mb="0" cb="0"/><line nr="600" mi="13" ci="0" mb="0" cb="0"/><line nr="601" mi="2" ci="0" mb="0" cb="0"/><line nr="602" mi="2" ci="0" mb="0" cb="0"/><line nr="625" mi="6" ci="0" mb="0" cb="0"/><line nr="650" mi="6" ci="0" mb="0" cb="0"/><line nr="662" mi="4" ci="0" mb="0" cb="0"/><line nr="663" mi="8" ci="0" mb="2" cb="0"/><line nr="664" mi="13" ci="0" mb="0" cb="0"/><line nr="666" mi="2" ci="0" mb="0" cb="0"/><line nr="683" mi="2" ci="0" mb="2" cb="0"/><line nr="684" mi="3" ci="0" mb="0" cb="0"/><line nr="686" mi="3" ci="0" mb="0" cb="0"/><line nr="687" mi="5" ci="0" mb="0" cb="0"/><line nr="689" mi="9" ci="0" mb="2" cb="0"/><line nr="708" mi="6" ci="0" mb="0" cb="0"/><line nr="728" mi="3" ci="0" mb="0" cb="0"/><line nr="729" mi="4" ci="0" mb="2" cb="0"/><line nr="730" mi="2" ci="0" mb="0" cb="0"/><line nr="733" mi="2" ci="0" mb="2" cb="0"/><line nr="735" mi="2" ci="0" mb="0" cb="0"/><line nr="738" mi="6" ci="0" mb="4" cb="0"/><line nr="740" mi="5" ci="0" mb="0" cb="0"/><line nr="743" mi="6" ci="0" mb="2" cb="0"/><line nr="745" mi="2" ci="0" mb="0" cb="0"/><line nr="748" mi="6" ci="0" mb="2" cb="0"/><line nr="750" mi="2" ci="0" mb="0" cb="0"/><line nr="753" mi="9" ci="0" mb="0" cb="0"/><line nr="754" mi="5" ci="0" mb="0" cb="0"/><line nr="755" mi="6" ci="0" mb="0" cb="0"/><line nr="779" mi="3" ci="0" mb="0" cb="0"/><line nr="780" mi="4" ci="0" mb="2" cb="0"/><line nr="781" mi="2" ci="0" mb="0" cb="0"/><line nr="784" mi="2" ci="0" mb="2" cb="0"/><line nr="786" mi="2" ci="0" mb="0" cb="0"/><line nr="789" mi="6" ci="0" mb="4" cb="0"/><line nr="791" mi="5" ci="0" mb="0" cb="0"/><line nr="794" mi="6" ci="0" mb="2" cb="0"/><line nr="796" mi="2" ci="0" mb="0" cb="0"/><line nr="799" mi="12" ci="0" mb="2" cb="0"/><line nr="800" mi="12" ci="0" mb="0" cb="0"/><line nr="802" mi="8" ci="0" mb="2" cb="0"/><line nr="803" mi="12" ci="0" mb="0" cb="0"/><line nr="805" mi="6" ci="0" mb="0" cb="0"/><line nr="825" mi="7" ci="0" mb="4" cb="0"/><line nr="826" mi="2" ci="0" mb="0" cb="0"/><line nr="828" mi="6" ci="0" mb="0" cb="0"/><line nr="829" mi="3" ci="0" mb="0" cb="0"/><line nr="830" mi="5" ci="0" mb="0" cb="0"/><line nr="849" mi="2" ci="0" mb="0" cb="0"/><line nr="850" mi="6" ci="0" mb="4" cb="0"/><line nr="851" mi="3" ci="0" mb="0" cb="0"/><line nr="852" mi="4" ci="0" mb="0" cb="0"/><line nr="853" mi="3" ci="0" mb="0" cb="0"/><line nr="854" mi="5" ci="0" mb="2" cb="0"/><line nr="855" mi="5" ci="0" mb="2" cb="0"/><line nr="858" mi="12" ci="0" mb="0" cb="0"/><line nr="859" mi="4" ci="0" mb="0" cb="0"/><line nr="860" mi="1" ci="0" mb="0" cb="0"/><line nr="861" mi="8" ci="0" mb="4" cb="0"/><line nr="863" mi="1" ci="0" mb="0" cb="0"/><line nr="867" mi="3" ci="0" mb="2" cb="0"/><line nr="868" mi="3" ci="0" mb="0" cb="0"/><line nr="869" mi="7" ci="0" mb="0" cb="0"/><line nr="870" mi="3" ci="0" mb="0" cb="0"/><line nr="874" mi="8" ci="0" mb="0" cb="0"/><line nr="876" mi="3" ci="0" mb="0" cb="0"/><line nr="878" mi="2" ci="0" mb="0" cb="0"/><line nr="901" mi="5" ci="0" mb="4" cb="0"/><line nr="902" mi="2" ci="0" mb="0" cb="0"/><line nr="904" mi="4" ci="0" mb="0" cb="0"/><line nr="905" mi="8" ci="0" mb="2" cb="0"/><line nr="906" mi="4" ci="0" mb="0" cb="0"/><line nr="907" mi="2" ci="0" mb="2" cb="0"/><line nr="908" mi="5" ci="0" mb="2" cb="0"/><line nr="909" mi="12" ci="0" mb="0" cb="0"/><line nr="912" mi="5" ci="0" mb="0" cb="0"/><line nr="915" mi="2" ci="0" mb="0" cb="0"/><line nr="929" mi="4" ci="0" mb="0" cb="0"/><line nr="931" mi="8" ci="0" mb="2" cb="0"/><line nr="932" mi="8" ci="0" mb="0" cb="0"/><line nr="935" mi="2" ci="0" mb="0" cb="0"/><line nr="961" mi="4" ci="0" mb="0" cb="0"/><line nr="962" mi="1" ci="0" mb="0" cb="0"/><line nr="993" mi="2" ci="0" mb="2" cb="0"/><line nr="994" mi="5" ci="0" mb="0" cb="0"/><line nr="996" mi="6" ci="0" mb="4" cb="0"/><line nr="997" mi="14" ci="0" mb="0" cb="0"/><line nr="999" mi="7" ci="0" mb="0" cb="0"/><line nr="1000" mi="4" ci="0" mb="0" cb="0"/><line nr="1001" mi="1" ci="0" mb="0" cb="0"/><line nr="1028" mi="4" ci="0" mb="0" cb="0"/><line nr="1029" mi="1" ci="0" mb="0" cb="0"/><line nr="1060" mi="3" ci="0" mb="0" cb="0"/><line nr="1061" mi="3" ci="0" mb="2" cb="0"/><line nr="1062" mi="14" ci="0" mb="0" cb="0"/><line nr="1064" mi="6" ci="0" mb="2" cb="0"/><line nr="1065" mi="18" ci="0" mb="0" cb="0"/><line nr="1067" mi="3" ci="0" mb="0" cb="0"/><line nr="1068" mi="2" ci="0" mb="2" cb="0"/><line nr="1069" mi="6" ci="0" mb="4" cb="0"/><line nr="1070" mi="14" ci="0" mb="0" cb="0"/><line nr="1073" mi="6" ci="0" mb="4" cb="0"/><line nr="1074" mi="14" ci="0" mb="0" cb="0"/><line nr="1076" mi="4" ci="0" mb="0" cb="0"/><line nr="1077" mi="1" ci="0" mb="0" cb="0"/><line nr="1093" mi="7" ci="0" mb="0" cb="0"/><line nr="1094" mi="6" ci="0" mb="0" cb="0"/><line nr="1117" mi="6" ci="0" mb="4" cb="0"/><line nr="1118" mi="14" ci="0" mb="0" cb="0"/><line nr="1121" mi="13" ci="0" mb="0" cb="0"/><line nr="1122" mi="3" ci="0" mb="0" cb="0"/><line nr="1123" mi="5" ci="0" mb="0" cb="0"/><line nr="1124" mi="3" ci="0" mb="0" cb="0"/><line nr="1125" mi="3" ci="0" mb="0" cb="0"/><line nr="1126" mi="2" ci="0" mb="0" cb="0"/><line nr="1127" mi="2" ci="0" mb="0" cb="0"/><line nr="1128" mi="4" ci="0" mb="2" cb="0"/><line nr="1129" mi="4" ci="0" mb="0" cb="0"/><line nr="1130" mi="8" ci="0" mb="2" cb="0"/><line nr="1131" mi="6" ci="0" mb="0" cb="0"/><line nr="1132" mi="4" ci="0" mb="2" cb="0"/><line nr="1133" mi="1" ci="0" mb="0" cb="0"/><line nr="1135" mi="4" ci="0" mb="0" cb="0"/><line nr="1136" mi="1" ci="0" mb="0" cb="0"/><line nr="1139" mi="3" ci="0" mb="0" cb="0"/><line nr="1140" mi="3" ci="0" mb="0" cb="0"/><line nr="1141" mi="4" ci="0" mb="2" cb="0"/><line nr="1142" mi="24" ci="0" mb="0" cb="0"/><line nr="1145" mi="2" ci="0" mb="2" cb="0"/><line nr="1146" mi="5" ci="0" mb="0" cb="0"/><line nr="1148" mi="1" ci="0" mb="0" cb="0"/><line nr="1175" mi="2" ci="0" mb="2" cb="0"/><line nr="1176" mi="5" ci="0" mb="0" cb="0"/><line nr="1178" mi="6" ci="0" mb="4" cb="0"/><line nr="1179" mi="14" ci="0" mb="0" cb="0"/><line nr="1181" mi="2" ci="0" mb="2" cb="0"/><line nr="1182" mi="5" ci="0" mb="0" cb="0"/><line nr="1184" mi="6" ci="0" mb="4" cb="0"/><line nr="1185" mi="14" ci="0" mb="0" cb="0"/><line nr="1187" mi="9" ci="0" mb="0" cb="0"/><line nr="1188" mi="1" ci="0" mb="0" cb="0"/><line nr="1215" mi="4" ci="0" mb="0" cb="0"/><line nr="1216" mi="1" ci="0" mb="0" cb="0"/><line nr="1246" mi="5" ci="0" mb="0" cb="0"/><line nr="1247" mi="1" ci="0" mb="0" cb="0"/><line nr="1295" mi="5" ci="0" mb="0" cb="0"/><line nr="1296" mi="1" ci="0" mb="0" cb="0"/><line nr="1346" mi="3" ci="0" mb="0" cb="0"/><line nr="1347" mi="3" ci="0" mb="2" cb="0"/><line nr="1348" mi="14" ci="0" mb="0" cb="0"/><line nr="1350" mi="6" ci="0" mb="2" cb="0"/><line nr="1351" mi="18" ci="0" mb="0" cb="0"/><line nr="1355" mi="2" ci="0" mb="0" cb="0"/><line nr="1356" mi="6" ci="0" mb="2" cb="0"/><line nr="1357" mi="9" ci="0" mb="2" cb="0"/><line nr="1358" mi="5" ci="0" mb="4" cb="0"/><line nr="1359" mi="6" ci="0" mb="0" cb="0"/><line nr="1360" mi="16" ci="0" mb="2" cb="0"/><line nr="1361" mi="7" ci="0" mb="0" cb="0"/><line nr="1362" mi="5" ci="0" mb="0" cb="0"/><line nr="1366" mi="6" ci="0" mb="0" cb="0"/><line nr="1367" mi="1" ci="0" mb="0" cb="0"/><line nr="1376" mi="2" ci="0" mb="2" cb="0"/><line nr="1377" mi="5" ci="0" mb="0" cb="0"/><line nr="1379" mi="2" ci="0" mb="2" cb="0"/><line nr="1380" mi="5" ci="0" mb="0" cb="0"/><line nr="1382" mi="3" ci="0" mb="2" cb="0"/><line nr="1383" mi="14" ci="0" mb="0" cb="0"/><line nr="1385" mi="1" ci="0" mb="0" cb="0"/><line nr="1402" mi="9" ci="0" mb="2" cb="0"/><line nr="1403" mi="2" ci="0" mb="2" cb="0"/><line nr="1404" mi="12" ci="0" mb="0" cb="0"/><line nr="1406" mi="3" ci="0" mb="2" cb="0"/><line nr="1407" mi="3" ci="0" mb="2" cb="0"/><line nr="1408" mi="14" ci="0" mb="0" cb="0"/><line nr="1411" mi="6" ci="0" mb="4" cb="0"/><line nr="1412" mi="14" ci="0" mb="0" cb="0"/><line nr="1415" mi="3" ci="0" mb="2" cb="0"/><line nr="1416" mi="14" ci="0" mb="0" cb="0"/><line nr="1418" mi="16" ci="0" mb="2" cb="0"/><line nr="1419" mi="7" ci="0" mb="0" cb="0"/><line nr="1420" mi="7" ci="0" mb="4" cb="0"/><line nr="1421" mi="3" ci="0" mb="2" cb="0"/><line nr="1422" mi="7" ci="0" mb="0" cb="0"/><line nr="1424" mi="4" ci="0" mb="0" cb="0"/><line nr="1430" mi="2" ci="0" mb="2" cb="0"/><line nr="1431" mi="5" ci="0" mb="0" cb="0"/><line nr="1433" mi="1" ci="0" mb="0" cb="0"/><line nr="1456" mi="4" ci="0" mb="0" cb="0"/><line nr="1457" mi="1" ci="0" mb="0" cb="0"/><line nr="1481" mi="3" ci="0" mb="0" cb="0"/><line nr="1482" mi="3" ci="0" mb="0" cb="0"/><line nr="1483" mi="3" ci="0" mb="0" cb="0"/><line nr="1484" mi="4" ci="0" mb="0" cb="0"/><line nr="1485" mi="1" ci="0" mb="0" cb="0"/><line nr="1505" mi="4" ci="0" mb="0" cb="0"/><line nr="1506" mi="3" ci="0" mb="0" cb="0"/><line nr="1508" mi="1" ci="0" mb="0" cb="0"/><line nr="1528" mi="6" ci="0" mb="0" cb="0"/><line nr="1529" mi="3" ci="0" mb="0" cb="0"/><line nr="1530" mi="4" ci="0" mb="0" cb="0"/><line nr="1532" mi="1" ci="0" mb="0" cb="0"/><line nr="1560" mi="2" ci="0" mb="2" cb="0"/><line nr="1561" mi="5" ci="0" mb="0" cb="0"/><line nr="1563" mi="3" ci="0" mb="2" cb="0"/><line nr="1564" mi="4" ci="0" mb="0" cb="0"/><line nr="1565" mi="3" ci="0" mb="2" cb="0"/><line nr="1566" mi="4" ci="0" mb="0" cb="0"/><line nr="1568" mi="14" ci="0" mb="0" cb="0"/><line nr="1570" mi="1" ci="0" mb="0" cb="0"/><line nr="1595" mi="2" ci="0" mb="2" cb="0"/><line nr="1596" mi="5" ci="0" mb="0" cb="0"/><line nr="1598" mi="10" ci="0" mb="2" cb="0"/><line nr="1599" mi="3" ci="0" mb="0" cb="0"/><line nr="1600" mi="1" ci="0" mb="0" cb="0"/><line nr="1601" mi="1" ci="0" mb="0" cb="0"/><line nr="1612" mi="0" ci="3" mb="1" cb="1"/><line nr="1613" mi="1" ci="0" mb="0" cb="0"/><line nr="1616" mi="0" ci="3" mb="1" cb="1"/><line nr="1617" mi="0" ci="2" mb="0" cb="0"/><line nr="1620" mi="0" ci="3" mb="1" cb="1"/><line nr="1621" mi="11" ci="0" mb="0" cb="0"/><line nr="1623" mi="5" ci="0" mb="0" cb="0"/><line nr="1625" mi="0" ci="1" mb="0" cb="0"/><line nr="1643" mi="2" ci="0" mb="2" cb="0"/><line nr="1644" mi="2" ci="0" mb="0" cb="0"/><line nr="1647" mi="3" ci="0" mb="2" cb="0"/><line nr="1648" mi="2" ci="0" mb="0" cb="0"/><line nr="1650" mi="1" ci="0" mb="0" cb="0"/><line nr="1651" mi="1" ci="0" mb="0" cb="0"/><line nr="1654" mi="3" ci="0" mb="0" cb="0"/><line nr="1655" mi="1" ci="0" mb="0" cb="0"/><line nr="1656" mi="2" ci="0" mb="0" cb="0"/><line nr="1685" mi="2" ci="0" mb="2" cb="0"/><line nr="1686" mi="5" ci="0" mb="0" cb="0"/><line nr="1689" mi="3" ci="0" mb="2" cb="0"/><line nr="1690" mi="12" ci="0" mb="0" cb="0"/><line nr="1693" mi="2" ci="0" mb="2" cb="0"/><line nr="1694" mi="2" ci="0" mb="0" cb="0"/><line nr="1697" mi="6" ci="0" mb="4" cb="0"/><line nr="1698" mi="2" ci="0" mb="0" cb="0"/><line nr="1702" mi="3" ci="0" mb="0" cb="0"/><line nr="1703" mi="3" ci="0" mb="0" cb="0"/><line nr="1705" mi="4" ci="0" mb="0" cb="0"/><line nr="1716" mi="0" ci="3" mb="0" cb="0"/><line nr="1718" mi="0" ci="2" mb="0" cb="0"/><line nr="1719" mi="0" ci="16" mb="0" cb="2"/><line nr="1721" mi="0" ci="2" mb="0" cb="0"/><line nr="1722" mi="1" ci="0" mb="0" cb="0"/><line nr="1723" mi="2" ci="0" mb="0" cb="0"/><line nr="1724" mi="0" ci="1" mb="0" cb="0"/><line nr="1727" mi="0" ci="3" mb="1" cb="1"/><line nr="1728" mi="2" ci="0" mb="0" cb="0"/><line nr="1730" mi="0" ci="1" mb="0" cb="0"/><line nr="1739" mi="0" ci="3" mb="1" cb="1"/><line nr="1740" mi="9" ci="0" mb="0" cb="0"/><line nr="1741" mi="5" ci="0" mb="0" cb="0"/><line nr="1744" mi="0" ci="3" mb="1" cb="1"/><line nr="1745" mi="9" ci="0" mb="0" cb="0"/><line nr="1746" mi="5" ci="0" mb="0" cb="0"/><line nr="1749" mi="0" ci="3" mb="0" cb="0"/><line nr="1750" mi="0" ci="2" mb="1" cb="1"/><line nr="1751" mi="12" ci="0" mb="0" cb="0"/><line nr="1753" mi="0" ci="2" mb="0" cb="0"/><line nr="1769" mi="7" ci="0" mb="0" cb="0"/><line nr="1770" mi="2" ci="0" mb="0" cb="0"/><line nr="1772" mi="3" ci="0" mb="2" cb="0"/><line nr="1773" mi="4" ci="0" mb="0" cb="0"/><line nr="1774" mi="4" ci="0" mb="2" cb="0"/><line nr="1775" mi="4" ci="0" mb="0" cb="0"/><line nr="1778" mi="4" ci="0" mb="0" cb="0"/><line nr="1779" mi="1" ci="0" mb="0" cb="0"/><line nr="1780" mi="2" ci="0" mb="0" cb="0"/><line nr="1781" mi="1" ci="0" mb="0" cb="0"/><line nr="1782" mi="1" ci="0" mb="0" cb="0"/><line nr="1783" mi="2" ci="0" mb="0" cb="0"/><line nr="1784" mi="1" ci="0" mb="0" cb="0"/><line nr="1786" mi="2" ci="0" mb="2" cb="0"/><line nr="1787" mi="2" ci="0" mb="0" cb="0"/><line nr="1790" mi="2" ci="0" mb="0" cb="0"/><line nr="1805" mi="5" ci="0" mb="0" cb="0"/><line nr="1806" mi="7" ci="0" mb="0" cb="0"/><line nr="1822" mi="5" ci="0" mb="0" cb="0"/><line nr="1838" mi="4" ci="0" mb="0" cb="0"/><line nr="1851" mi="5" ci="0" mb="0" cb="0"/><line nr="1852" mi="3" ci="0" mb="0" cb="0"/><line nr="1854" mi="13" ci="0" mb="2" cb="0"/><line nr="1869" mi="5" ci="0" mb="0" cb="0"/><line nr="1870" mi="7" ci="0" mb="0" cb="0"/><line nr="1886" mi="5" ci="0" mb="0" cb="0"/><line nr="1901" mi="4" ci="0" mb="0" cb="0"/><line nr="1936" mi="2" ci="0" mb="0" cb="0"/><line nr="1938" mi="3" ci="0" mb="0" cb="0"/><line nr="1939" mi="4" ci="0" mb="0" cb="0"/><line nr="1940" mi="1" ci="0" mb="0" cb="0"/><line nr="1942" mi="2" ci="0" mb="2" cb="0"/><line nr="1943" mi="2" ci="0" mb="0" cb="0"/><line nr="1946" mi="1" ci="0" mb="0" cb="0"/><line nr="1947" mi="3" ci="0" mb="0" cb="0"/><line nr="1948" mi="1" ci="0" mb="0" cb="0"/><line nr="1949" mi="2" ci="0" mb="0" cb="0"/><line nr="1963" mi="4" ci="0" mb="0" cb="0"/><line nr="1983" mi="5" ci="0" mb="0" cb="0"/><line nr="1984" mi="1" ci="0" mb="0" cb="0"/><line nr="1999" mi="5" ci="0" mb="0" cb="0"/><line nr="2000" mi="1" ci="0" mb="0" cb="0"/><line nr="2015" mi="0" ci="6" mb="0" cb="0"/><line nr="2016" mi="0" ci="4" mb="0" cb="0"/><line nr="2018" mi="0" ci="1" mb="0" cb="0"/><line nr="2035" mi="6" ci="0" mb="0" cb="0"/><line nr="2036" mi="1" ci="0" mb="0" cb="0"/><line nr="2048" mi="5" ci="0" mb="0" cb="0"/><line nr="2049" mi="1" ci="0" mb="0" cb="0"/><line nr="2064" mi="5" ci="0" mb="0" cb="0"/><line nr="2065" mi="1" ci="0" mb="0" cb="0"/><line nr="2078" mi="5" ci="0" mb="0" cb="0"/><line nr="2079" mi="1" ci="0" mb="0" cb="0"/><line nr="2094" mi="5" ci="0" mb="0" cb="0"/><line nr="2095" mi="1" ci="0" mb="0" cb="0"/><line nr="2107" mi="0" ci="5" mb="0" cb="0"/><line nr="2108" mi="0" ci="1" mb="0" cb="0"/><line nr="2121" mi="5" ci="0" mb="0" cb="0"/><line nr="2122" mi="1" ci="0" mb="0" cb="0"/><line nr="2137" mi="2" ci="5" mb="1" cb="1"/><line nr="2138" mi="0" ci="5" mb="0" cb="0"/><line nr="2139" mi="0" ci="1" mb="0" cb="0"/><line nr="2156" mi="6" ci="0" mb="0" cb="0"/><line nr="2157" mi="1" ci="0" mb="0" cb="0"/><line nr="2171" mi="4" ci="0" mb="0" cb="0"/><line nr="2172" mi="1" ci="0" mb="0" cb="0"/><line nr="2186" mi="7" ci="0" mb="0" cb="0"/><line nr="2187" mi="1" ci="0" mb="0" cb="0"/><line nr="2203" mi="6" ci="0" mb="0" cb="0"/><line nr="2204" mi="1" ci="0" mb="0" cb="0"/><line nr="2222" mi="6" ci="0" mb="0" cb="0"/><line nr="2223" mi="5" ci="0" mb="0" cb="0"/><line nr="2225" mi="1" ci="0" mb="0" cb="0"/><line nr="2244" mi="6" ci="0" mb="0" cb="0"/><line nr="2245" mi="1" ci="0" mb="0" cb="0"/><line nr="2263" mi="6" ci="0" mb="0" cb="0"/><line nr="2264" mi="1" ci="0" mb="0" cb="0"/><line nr="2277" mi="6" ci="0" mb="0" cb="0"/><line nr="2278" mi="1" ci="0" mb="0" cb="0"/><line nr="2293" mi="6" ci="0" mb="0" cb="0"/><line nr="2294" mi="1" ci="0" mb="0" cb="0"/><line nr="2314" mi="6" ci="0" mb="0" cb="0"/><line nr="2315" mi="1" ci="0" mb="0" cb="0"/><line nr="2334" mi="9" ci="0" mb="0" cb="0"/><line nr="2335" mi="5" ci="0" mb="0" cb="0"/><line nr="2337" mi="1" ci="0" mb="0" cb="0"/><line nr="2352" mi="6" ci="0" mb="0" cb="0"/><line nr="2353" mi="1" ci="0" mb="0" cb="0"/><line nr="2370" mi="6" ci="0" mb="0" cb="0"/><line nr="2371" mi="1" ci="0" mb="0" cb="0"/><line nr="2390" mi="0" ci="3" mb="1" cb="1"/><line nr="2391" mi="3" ci="0" mb="0" cb="0"/><line nr="2393" mi="0" ci="3" mb="0" cb="0"/><line nr="2394" mi="0" ci="3" mb="1" cb="1"/><line nr="2395" mi="2" ci="0" mb="2" cb="0"/><line nr="2396" mi="12" ci="0" mb="0" cb="0"/><line nr="2398" mi="9" ci="0" mb="0" cb="0"/><line nr="2400" mi="5" ci="0" mb="0" cb="0"/><line nr="2403" mi="0" ci="1" mb="0" cb="0"/><line nr="2414" mi="3" ci="0" mb="2" cb="0"/><line nr="2415" mi="3" ci="0" mb="0" cb="0"/><line nr="2417" mi="2" ci="0" mb="0" cb="0"/><line nr="2419" mi="1" ci="0" mb="0" cb="0"/><line nr="2429" mi="3" ci="0" mb="2" cb="0"/><line nr="2430" mi="1" ci="0" mb="0" cb="0"/><line nr="2433" mi="2" ci="0" mb="0" cb="0"/><line nr="2434" mi="3" ci="0" mb="2" cb="0"/><line nr="2435" mi="2" ci="0" mb="0" cb="0"/><line nr="2437" mi="1" ci="0" mb="0" cb="0"/><line nr="2447" mi="3" ci="0" mb="0" cb="0"/><line nr="2449" mi="2" ci="0" mb="0" cb="0"/><line nr="2450" mi="16" ci="0" mb="2" cb="0"/><line nr="2452" mi="2" ci="0" mb="0" cb="0"/><line nr="2453" mi="1" ci="0" mb="0" cb="0"/><line nr="2454" mi="2" ci="0" mb="0" cb="0"/><line nr="2455" mi="1" ci="0" mb="0" cb="0"/><line nr="2458" mi="3" ci="0" mb="2" cb="0"/><line nr="2459" mi="2" ci="0" mb="0" cb="0"/><line nr="2461" mi="1" ci="0" mb="0" cb="0"/><line nr="2475" mi="3" ci="0" mb="2" cb="0"/><line nr="2476" mi="3" ci="0" mb="2" cb="0"/><line nr="2477" mi="11" ci="0" mb="0" cb="0"/><line nr="2482" mi="5" ci="0" mb="0" cb="0"/><line nr="2485" mi="3" ci="0" mb="2" cb="0"/><line nr="2488" mi="3" ci="0" mb="2" cb="0"/><line nr="2489" mi="9" ci="0" mb="0" cb="0"/><line nr="2491" mi="5" ci="0" mb="0" cb="0"/><line nr="2495" mi="1" ci="0" mb="0" cb="0"/><line nr="2507" mi="3" ci="0" mb="0" cb="0"/><line nr="2508" mi="2" ci="0" mb="2" cb="0"/><line nr="2509" mi="1" ci="0" mb="0" cb="0"/><line nr="2511" mi="2" ci="0" mb="0" cb="0"/><line nr="2512" mi="1" ci="0" mb="0" cb="0"/><line nr="2539" mi="3" ci="0" mb="2" cb="0"/><line nr="2540" mi="9" ci="0" mb="0" cb="0"/><line nr="2541" mi="5" ci="0" mb="0" cb="0"/><line nr="2544" mi="3" ci="0" mb="2" cb="0"/><line nr="2545" mi="3" ci="0" mb="0" cb="0"/><line nr="2547" mi="3" ci="0" mb="0" cb="0"/><line nr="2572" mi="3" ci="0" mb="2" cb="0"/><line nr="2573" mi="9" ci="0" mb="0" cb="0"/><line nr="2574" mi="5" ci="0" mb="0" cb="0"/><line nr="2577" mi="3" ci="0" mb="2" cb="0"/><line nr="2578" mi="3" ci="0" mb="0" cb="0"/><line nr="2580" mi="4" ci="0" mb="0" cb="0"/><line nr="2598" mi="2" ci="0" mb="0" cb="0"/><line nr="2599" mi="3" ci="0" mb="0" cb="0"/><line nr="2610" mi="3" ci="0" mb="0" cb="0"/><line nr="2611" mi="2" ci="0" mb="2" cb="0"/><line nr="2612" mi="2" ci="0" mb="0" cb="0"/><line nr="2614" mi="2" ci="0" mb="0" cb="0"/><line nr="2616" mi="16" ci="0" mb="2" cb="0"/><line nr="2618" mi="3" ci="0" mb="2" cb="0"/><line nr="2619" mi="5" ci="0" mb="0" cb="0"/><line nr="2620" mi="4" ci="0" mb="2" cb="0"/><line nr="2621" mi="1" ci="0" mb="0" cb="0"/><line nr="2624" mi="1" ci="0" mb="0" cb="0"/><line nr="2626" mi="1" ci="0" mb="0" cb="0"/><line nr="2629" mi="2" ci="0" mb="0" cb="0"/><line nr="2640" mi="3" ci="0" mb="2" cb="0"/><line nr="2641" mi="3" ci="0" mb="0" cb="0"/><line nr="2643" mi="3" ci="0" mb="0" cb="0"/><line nr="2656" mi="2" ci="0" mb="0" cb="0"/><line nr="2657" mi="3" ci="0" mb="0" cb="0"/><line nr="2669" mi="3" ci="0" mb="0" cb="0"/><line nr="2670" mi="2" ci="0" mb="2" cb="0"/><line nr="2671" mi="2" ci="0" mb="0" cb="0"/><line nr="2673" mi="2" ci="0" mb="0" cb="0"/><line nr="2675" mi="16" ci="0" mb="2" cb="0"/><line nr="2677" mi="3" ci="0" mb="2" cb="0"/><line nr="2678" mi="5" ci="0" mb="0" cb="0"/><line nr="2680" mi="1" ci="0" mb="0" cb="0"/><line nr="2682" mi="1" ci="0" mb="0" cb="0"/><line nr="2685" mi="2" ci="0" mb="0" cb="0"/><line nr="2696" mi="3" ci="0" mb="2" cb="0"/><line nr="2697" mi="3" ci="0" mb="0" cb="0"/><line nr="2699" mi="4" ci="0" mb="0" cb="0"/><line nr="2710" mi="3" ci="0" mb="2" cb="0"/><line nr="2711" mi="12" ci="0" mb="0" cb="0"/><line nr="2713" mi="3" ci="0" mb="2" cb="0"/><line nr="2714" mi="12" ci="0" mb="0" cb="0"/><line nr="2716" mi="1" ci="0" mb="0" cb="0"/><line nr="2733" mi="2" ci="0" mb="2" cb="0"/><line nr="2734" mi="5" ci="0" mb="0" cb="0"/><line nr="2736" mi="3" ci="0" mb="2" cb="0"/><line nr="2737" mi="14" ci="0" mb="0" cb="0"/><line nr="2740" mi="5" ci="0" mb="0" cb="0"/><line nr="2756" mi="2" ci="0" mb="2" cb="0"/><line nr="2757" mi="5" ci="0" mb="0" cb="0"/><line nr="2759" mi="5" ci="0" mb="0" cb="0"/><line nr="2775" mi="2" ci="0" mb="2" cb="0"/><line nr="2776" mi="5" ci="0" mb="0" cb="0"/><line nr="2778" mi="3" ci="0" mb="2" cb="0"/><line nr="2779" mi="2" ci="0" mb="0" cb="0"/><line nr="2781" mi="9" ci="0" mb="2" cb="0"/><line nr="2800" mi="2" ci="0" mb="2" cb="0"/><line nr="2801" mi="5" ci="0" mb="0" cb="0"/><line nr="2803" mi="3" ci="0" mb="2" cb="0"/><line nr="2804" mi="14" ci="0" mb="0" cb="0"/><line nr="2807" mi="5" ci="0" mb="0" cb="0"/><line nr="2823" mi="2" ci="0" mb="2" cb="0"/><line nr="2824" mi="5" ci="0" mb="0" cb="0"/><line nr="2826" mi="5" ci="0" mb="0" cb="0"/><line nr="2842" mi="2" ci="0" mb="2" cb="0"/><line nr="2843" mi="5" ci="0" mb="0" cb="0"/><line nr="2845" mi="3" ci="0" mb="2" cb="0"/><line nr="2846" mi="2" ci="0" mb="0" cb="0"/><line nr="2848" mi="9" ci="0" mb="2" cb="0"/><line nr="2864" mi="4" ci="0" mb="0" cb="0"/><line nr="2865" mi="4" ci="0" mb="0" cb="0"/><line nr="2866" mi="3" ci="0" mb="0" cb="0"/><line nr="2887" mi="3" ci="0" mb="2" cb="0"/><line nr="2888" mi="5" ci="0" mb="0" cb="0"/><line nr="2890" mi="11" ci="0" mb="0" cb="0"/><line nr="2891" mi="6" ci="0" mb="0" cb="0"/><line nr="2893" mi="2" ci="0" mb="0" cb="0"/><line nr="2910" mi="2" ci="0" mb="2" cb="0"/><line nr="2911" mi="5" ci="0" mb="0" cb="0"/><line nr="2913" mi="2" ci="0" mb="2" cb="0"/><line nr="2914" mi="5" ci="0" mb="0" cb="0"/><line nr="2916" mi="3" ci="0" mb="2" cb="0"/><line nr="2917" mi="14" ci="0" mb="0" cb="0"/><line nr="2919" mi="3" ci="0" mb="2" cb="0"/><line nr="2920" mi="14" ci="0" mb="0" cb="0"/><line nr="2922" mi="3" ci="0" mb="2" cb="0"/><line nr="2923" mi="14" ci="0" mb="0" cb="0"/><line nr="2925" mi="4" ci="0" mb="0" cb="0"/><line nr="2926" mi="2" ci="0" mb="2" cb="0"/><line nr="2927" mi="13" ci="0" mb="2" cb="0"/><line nr="2928" mi="16" ci="0" mb="0" cb="0"/><line nr="2930" mi="3" ci="0" mb="0" cb="0"/><line nr="2931" mi="2" ci="0" mb="0" cb="0"/><line nr="2932" mi="3" ci="0" mb="2" cb="0"/><line nr="2933" mi="18" ci="0" mb="0" cb="0"/><line nr="2937" mi="1" ci="0" mb="0" cb="0"/><line nr="2954" mi="2" ci="0" mb="2" cb="0"/><line nr="2955" mi="5" ci="0" mb="0" cb="0"/><line nr="2957" mi="2" ci="0" mb="2" cb="0"/><line nr="2958" mi="5" ci="0" mb="0" cb="0"/><line nr="2960" mi="5" ci="0" mb="4" cb="0"/><line nr="2961" mi="3" ci="0" mb="0" cb="0"/><line nr="2963" mi="3" ci="0" mb="2" cb="0"/><line nr="2964" mi="18" ci="0" mb="0" cb="0"/><line nr="2967" mi="3" ci="0" mb="2" cb="0"/><line nr="2968" mi="14" ci="0" mb="0" cb="0"/><line nr="2970" mi="8" ci="0" mb="0" cb="0"/><line nr="2972" mi="1" ci="0" mb="0" cb="0"/><line nr="2988" mi="2" ci="0" mb="2" cb="0"/><line nr="2989" mi="5" ci="0" mb="0" cb="0"/><line nr="2991" mi="2" ci="0" mb="2" cb="0"/><line nr="2992" mi="5" ci="0" mb="0" cb="0"/><line nr="2994" mi="3" ci="0" mb="2" cb="0"/><line nr="2995" mi="14" ci="0" mb="0" cb="0"/><line nr="2997" mi="3" ci="0" mb="2" cb="0"/><line nr="2998" mi="14" ci="0" mb="0" cb="0"/><line nr="3000" mi="3" ci="0" mb="2" cb="0"/><line nr="3001" mi="14" ci="0" mb="0" cb="0"/><line nr="3003" mi="3" ci="0" mb="2" cb="0"/><line nr="3004" mi="14" ci="0" mb="0" cb="0"/><line nr="3006" mi="4" ci="0" mb="0" cb="0"/><line nr="3007" mi="2" ci="0" mb="2" cb="0"/><line nr="3008" mi="3" ci="0" mb="0" cb="0"/><line nr="3009" mi="3" ci="0" mb="2" cb="0"/><line nr="3010" mi="3" ci="0" mb="0" cb="0"/><line nr="3011" mi="18" ci="0" mb="0" cb="0"/><line nr="3015" mi="1" ci="0" mb="0" cb="0"/><line nr="3032" mi="2" ci="0" mb="2" cb="0"/><line nr="3033" mi="5" ci="0" mb="0" cb="0"/><line nr="3035" mi="2" ci="0" mb="2" cb="0"/><line nr="3036" mi="5" ci="0" mb="0" cb="0"/><line nr="3038" mi="5" ci="0" mb="4" cb="0"/><line nr="3039" mi="3" ci="0" mb="0" cb="0"/><line nr="3041" mi="3" ci="0" mb="2" cb="0"/><line nr="3042" mi="18" ci="0" mb="0" cb="0"/><line nr="3045" mi="3" ci="0" mb="2" cb="0"/><line nr="3046" mi="14" ci="0" mb="0" cb="0"/><line nr="3048" mi="8" ci="0" mb="0" cb="0"/><line nr="3049" mi="1" ci="0" mb="0" cb="0"/><line nr="3068" mi="2" ci="0" mb="2" cb="0"/><line nr="3069" mi="5" ci="0" mb="0" cb="0"/><line nr="3071" mi="2" ci="0" mb="2" cb="0"/><line nr="3072" mi="5" ci="0" mb="0" cb="0"/><line nr="3074" mi="3" ci="0" mb="2" cb="0"/><line nr="3075" mi="14" ci="0" mb="0" cb="0"/><line nr="3077" mi="3" ci="0" mb="2" cb="0"/><line nr="3078" mi="5" ci="0" mb="0" cb="0"/><line nr="3080" mi="4" ci="0" mb="0" cb="0"/><line nr="3082" mi="1" ci="0" mb="0" cb="0"/><line nr="3104" mi="0" ci="2" mb="1" cb="1"/><line nr="3105" mi="5" ci="0" mb="0" cb="0"/><line nr="3107" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2971" covered="160"/><counter type="BRANCH" missed="394" covered="20"/><counter type="LINE" missed="608" covered="47"/><counter type="COMPLEXITY" missed="314" covered="12"/><counter type="METHOD" missed="109" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TaggedIOException.java"><line nr="66" mi="10" ci="0" mb="4" cb="0"/><line nr="68" mi="5" ci="0" mb="2" cb="0"/><line nr="95" mi="4" ci="0" mb="2" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DirectoryWalker.java"><line nr="266" mi="4" ci="0" mb="0" cb="0"/><line nr="267" mi="1" ci="0" mb="0" cb="0"/><line nr="281" mi="2" ci="0" mb="0" cb="0"/><line nr="282" mi="3" ci="0" mb="0" cb="0"/><line nr="283" mi="3" ci="0" mb="0" cb="0"/><line nr="284" mi="1" ci="0" mb="0" cb="0"/><line nr="300" mi="2" ci="0" mb="0" cb="0"/><line nr="301" mi="4" ci="0" mb="4" cb="0"/><line nr="302" mi="4" ci="0" mb="0" cb="0"/><line nr="304" mi="6" ci="0" mb="2" cb="0"/><line nr="305" mi="6" ci="0" mb="2" cb="0"/><line nr="306" mi="3" ci="0" mb="0" cb="0"/><line nr="307" mi="3" ci="0" mb="0" cb="0"/><line nr="308" mi="13" ci="0" mb="0" cb="0"/><line nr="310" mi="3" ci="0" mb="0" cb="0"/><line nr="311" mi="1" ci="0" mb="0" cb="0"/><line nr="330" mi="2" ci="0" mb="2" cb="0"/><line nr="331" mi="5" ci="0" mb="0" cb="0"/><line nr="334" mi="4" ci="0" mb="0" cb="0"/><line nr="335" mi="5" ci="0" mb="0" cb="0"/><line nr="336" mi="3" ci="0" mb="0" cb="0"/><line nr="337" mi="1" ci="0" mb="0" cb="0"/><line nr="338" mi="5" ci="0" mb="0" cb="0"/><line nr="339" mi="1" ci="0" mb="0" cb="0"/><line nr="340" mi="1" ci="0" mb="0" cb="0"/><line nr="351" mi="5" ci="0" mb="0" cb="0"/><line nr="352" mi="6" ci="0" mb="2" cb="0"/><line nr="353" mi="5" ci="0" mb="0" cb="0"/><line nr="354" mi="4" ci="0" mb="0" cb="0"/><line nr="355" mi="7" ci="0" mb="4" cb="0"/><line nr="356" mi="5" ci="0" mb="0" cb="0"/><line nr="357" mi="11" ci="0" mb="2" cb="0"/><line nr="358" mi="6" ci="0" mb="0" cb="0"/><line nr="359" mi="2" ci="0" mb="2" cb="0"/><line nr="360" mi="6" ci="0" mb="0" cb="0"/><line nr="362" mi="16" ci="0" mb="2" cb="0"/><line nr="363" mi="3" ci="0" mb="2" cb="0"/><line nr="364" mi="6" ci="0" mb="0" cb="0"/><line nr="366" mi="5" ci="0" mb="0" cb="0"/><line nr="367" mi="5" ci="0" mb="0" cb="0"/><line nr="368" mi="5" ci="0" mb="0" cb="0"/><line nr="373" mi="5" ci="0" mb="0" cb="0"/><line nr="375" mi="5" ci="0" mb="0" cb="0"/><line nr="376" mi="1" ci="0" mb="0" cb="0"/><line nr="395" mi="6" ci="0" mb="2" cb="0"/><line nr="396" mi="6" ci="0" mb="0" cb="0"/><line nr="398" mi="1" ci="0" mb="0" cb="0"/><line nr="438" mi="2" ci="0" mb="0" cb="0"/><line nr="457" mi="2" ci="0" mb="0" cb="0"/><line nr="472" mi="1" ci="0" mb="0" cb="0"/><line nr="492" mi="2" ci="0" mb="0" cb="0"/><line nr="508" mi="1" ci="0" mb="0" cb="0"/><line nr="524" mi="2" ci="0" mb="0" cb="0"/><line nr="539" mi="1" ci="0" mb="0" cb="0"/><line nr="554" mi="1" ci="0" mb="0" cb="0"/><line nr="569" mi="1" ci="0" mb="0" cb="0"/><line nr="581" mi="1" ci="0" mb="0" cb="0"/><line nr="606" mi="5" ci="0" mb="0" cb="0"/><line nr="607" mi="1" ci="0" mb="0" cb="0"/><line nr="619" mi="3" ci="0" mb="0" cb="0"/><line nr="620" mi="3" ci="0" mb="0" cb="0"/><line nr="621" mi="3" ci="0" mb="0" cb="0"/><line nr="622" mi="1" ci="0" mb="0" cb="0"/><line nr="630" mi="3" ci="0" mb="0" cb="0"/><line nr="639" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="243" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="65" covered="0"/><counter type="COMPLEXITY" missed="33" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="FileCleaner.java"><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FileExistsException.java"><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="12" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FileCleaningTracker.java"><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="58" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="2" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="2" cb="0"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="2" cb="0"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="2" cb="0"/><line nr="143" mi="6" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="12" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="3" ci="0" mb="0" cb="0"/><line nr="194" mi="3" ci="0" mb="0" cb="0"/><line nr="195" mi="3" ci="0" mb="2" cb="0"/><line nr="196" mi="5" ci="0" mb="0" cb="0"/><line nr="197" mi="3" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="200" mi="1" ci="0" mb="0" cb="0"/><line nr="208" mi="3" ci="0" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="210" mi="3" ci="0" mb="0" cb="0"/><line nr="211" mi="3" ci="0" mb="0" cb="0"/><line nr="212" mi="1" ci="0" mb="0" cb="0"/><line nr="221" mi="9" ci="0" mb="4" cb="0"/><line nr="224" mi="6" ci="0" mb="0" cb="0"/><line nr="225" mi="6" ci="0" mb="0" cb="0"/><line nr="226" mi="3" ci="0" mb="2" cb="0"/><line nr="227" mi="7" ci="0" mb="0" cb="0"/><line nr="229" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="1" ci="0" mb="0" cb="0"/><line nr="231" mi="1" ci="0" mb="0" cb="0"/><line nr="232" mi="1" ci="0" mb="0" cb="0"/><line nr="234" mi="1" ci="0" mb="0" cb="0"/><line nr="262" mi="4" ci="0" mb="0" cb="0"/><line nr="263" mi="3" ci="0" mb="0" cb="0"/><line nr="264" mi="7" ci="0" mb="2" cb="0"/><line nr="265" mi="1" ci="0" mb="0" cb="0"/><line nr="273" mi="3" ci="0" mb="0" cb="0"/><line nr="283" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="197" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="53" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="Charsets.java"><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="6" ci="0" mb="0" cb="0"/><line nr="78" mi="6" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="0" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><line nr="81" mi="6" ci="0" mb="0" cb="0"/><line nr="82" mi="6" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="4" mb="1" cb="1"/><line nr="107" mi="7" ci="0" mb="2" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="56" covered="17"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="10" covered="7"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IOExceptionWithCause.java"><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FileSystemUtils.java"><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="2" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="2" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="2" cb="0"/><line nr="85" mi="4" ci="0" mb="2" cb="0"/><line nr="86" mi="4" ci="0" mb="2" cb="0"/><line nr="87" mi="4" ci="0" mb="2" cb="0"/><line nr="88" mi="4" ci="0" mb="2" cb="0"/><line nr="89" mi="4" ci="0" mb="2" cb="0"/><line nr="90" mi="4" ci="0" mb="2" cb="0"/><line nr="91" mi="2" ci="0" mb="2" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="6" ci="0" mb="2" cb="0"/><line nr="94" mi="4" ci="0" mb="2" cb="0"/><line nr="95" mi="2" ci="0" mb="2" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="6" ci="0" mb="2" cb="0"/><line nr="99" mi="2" ci="0" mb="2" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="7" ci="0" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="0" cb="0"/><line nr="210" mi="7" ci="0" mb="0" cb="0"/><line nr="229" mi="3" ci="0" mb="0" cb="0"/><line nr="250" mi="8" ci="0" mb="0" cb="0"/><line nr="275" mi="2" ci="0" mb="2" cb="0"/><line nr="276" mi="5" ci="0" mb="0" cb="0"/><line nr="278" mi="2" ci="0" mb="5" cb="0"/><line nr="280" mi="14" ci="0" mb="2" cb="0"/><line nr="282" mi="7" ci="0" mb="0" cb="0"/><line nr="284" mi="7" ci="0" mb="0" cb="0"/><line nr="286" mi="5" ci="0" mb="0" cb="0"/><line nr="288" mi="5" ci="0" mb="0" cb="0"/><line nr="304" mi="4" ci="0" mb="0" cb="0"/><line nr="305" mi="2" ci="0" mb="2" cb="0"/><line nr="306" mi="5" ci="0" mb="0" cb="0"/><line nr="308" mi="8" ci="0" mb="4" cb="0"/><line nr="309" mi="11" ci="0" mb="0" cb="0"/><line nr="313" mi="22" ci="0" mb="0" cb="0"/><line nr="316" mi="6" ci="0" mb="0" cb="0"/><line nr="322" mi="9" ci="0" mb="2" cb="0"/><line nr="323" mi="5" ci="0" mb="0" cb="0"/><line nr="324" mi="3" ci="0" mb="2" cb="0"/><line nr="325" mi="5" ci="0" mb="0" cb="0"/><line nr="329" mi="14" ci="0" mb="0" cb="0"/><line nr="347" mi="2" ci="0" mb="0" cb="0"/><line nr="348" mi="2" ci="0" mb="0" cb="0"/><line nr="349" mi="5" ci="0" mb="0" cb="0"/><line nr="350" mi="2" ci="0" mb="2" cb="0"/><line nr="351" mi="4" ci="0" mb="0" cb="0"/><line nr="352" mi="3" ci="0" mb="2" cb="0"/><line nr="355" mi="4" ci="0" mb="0" cb="0"/><line nr="356" mi="1" ci="0" mb="0" cb="0"/><line nr="358" mi="1" ci="0" mb="0" cb="0"/><line nr="359" mi="1" ci="0" mb="0" cb="0"/><line nr="360" mi="2" ci="0" mb="2" cb="0"/><line nr="361" mi="4" ci="0" mb="0" cb="0"/><line nr="362" mi="9" ci="0" mb="6" cb="0"/><line nr="365" mi="4" ci="0" mb="0" cb="0"/><line nr="366" mi="1" ci="0" mb="0" cb="0"/><line nr="368" mi="1" ci="0" mb="0" cb="0"/><line nr="369" mi="1" ci="0" mb="0" cb="0"/><line nr="370" mi="2" ci="0" mb="2" cb="0"/><line nr="371" mi="14" ci="0" mb="0" cb="0"/><line nr="377" mi="8" ci="0" mb="0" cb="0"/><line nr="378" mi="8" ci="0" mb="2" cb="0"/><line nr="379" mi="10" ci="0" mb="4" cb="0"/><line nr="380" mi="5" ci="0" mb="0" cb="0"/><line nr="383" mi="6" ci="0" mb="0" cb="0"/><line nr="400" mi="3" ci="0" mb="2" cb="0"/><line nr="401" mi="5" ci="0" mb="0" cb="0"/><line nr="405" mi="2" ci="0" mb="0" cb="0"/><line nr="406" mi="2" ci="0" mb="2" cb="0"/><line nr="407" mi="9" ci="0" mb="0" cb="0"/><line nr="409" mi="2" ci="0" mb="2" cb="0"/><line nr="410" mi="9" ci="0" mb="0" cb="0"/><line nr="412" mi="1" ci="0" mb="0" cb="0"/><line nr="413" mi="29" ci="0" mb="2" cb="0"/><line nr="416" mi="6" ci="0" mb="0" cb="0"/><line nr="417" mi="4" ci="0" mb="2" cb="0"/><line nr="419" mi="20" ci="0" mb="0" cb="0"/><line nr="423" mi="5" ci="0" mb="0" cb="0"/><line nr="426" mi="6" ci="0" mb="0" cb="0"/><line nr="427" mi="4" ci="0" mb="2" cb="0"/><line nr="429" mi="8" ci="0" mb="4" cb="0"/><line nr="430" mi="5" ci="0" mb="0" cb="0"/><line nr="431" mi="6" ci="0" mb="0" cb="0"/><line nr="432" mi="1" ci="0" mb="0" cb="0"/><line nr="433" mi="18" ci="0" mb="0" cb="0"/><line nr="438" mi="3" ci="0" mb="0" cb="0"/><line nr="440" mi="3" ci="0" mb="0" cb="0"/><line nr="441" mi="3" ci="0" mb="0" cb="0"/><line nr="442" mi="3" ci="0" mb="0" cb="0"/><line nr="443" mi="5" ci="0" mb="0" cb="0"/><line nr="457" mi="3" ci="0" mb="0" cb="0"/><line nr="458" mi="4" ci="0" mb="2" cb="0"/><line nr="459" mi="18" ci="0" mb="0" cb="0"/><line nr="463" mi="2" ci="0" mb="0" cb="0"/><line nr="465" mi="1" ci="0" mb="0" cb="0"/><line nr="466" mi="19" ci="0" mb="0" cb="0"/><line nr="492" mi="5" ci="0" mb="0" cb="0"/><line nr="493" mi="2" ci="0" mb="0" cb="0"/><line nr="494" mi="2" ci="0" mb="0" cb="0"/><line nr="495" mi="2" ci="0" mb="0" cb="0"/><line nr="496" mi="2" ci="0" mb="0" cb="0"/><line nr="497" mi="2" ci="0" mb="0" cb="0"/><line nr="500" mi="3" ci="0" mb="0" cb="0"/><line nr="502" mi="4" ci="0" mb="0" cb="0"/><line nr="503" mi="3" ci="0" mb="0" cb="0"/><line nr="504" mi="3" ci="0" mb="0" cb="0"/><line nr="505" mi="3" ci="0" mb="0" cb="0"/><line nr="507" mi="9" ci="0" mb="0" cb="0"/><line nr="508" mi="3" ci="0" mb="0" cb="0"/><line nr="509" mi="6" ci="0" mb="4" cb="0"/><line nr="510" mi="5" ci="0" mb="0" cb="0"/><line nr="511" mi="4" ci="0" mb="0" cb="0"/><line nr="512" mi="4" ci="0" mb="0" cb="0"/><line nr="515" mi="3" ci="0" mb="0" cb="0"/><line nr="517" mi="2" ci="0" mb="0" cb="0"/><line nr="519" mi="3" ci="0" mb="2" cb="0"/><line nr="521" mi="8" ci="0" mb="0" cb="0"/><line nr="522" mi="5" ci="0" mb="0" cb="0"/><line nr="523" mi="5" ci="0" mb="0" cb="0"/><line nr="525" mi="3" ci="0" mb="2" cb="0"/><line nr="527" mi="8" ci="0" mb="0" cb="0"/><line nr="529" mi="5" ci="0" mb="0" cb="0"/><line nr="532" mi="2" ci="0" mb="0" cb="0"/><line nr="533" mi="2" ci="0" mb="0" cb="0"/><line nr="535" mi="2" ci="0" mb="0" cb="0"/><line nr="536" mi="2" ci="0" mb="0" cb="0"/><line nr="538" mi="2" ci="0" mb="2" cb="0"/><line nr="539" mi="2" ci="0" mb="0" cb="0"/><line nr="540" mi="2" ci="0" mb="0" cb="0"/><line nr="543" mi="2" ci="0" mb="2" cb="0"/><line nr="544" mi="2" ci="0" mb="0" cb="0"/><line nr="545" mi="2" ci="0" mb="0" cb="0"/><line nr="548" mi="4" ci="0" mb="0" cb="0"/><line nr="550" mi="1" ci="0" mb="0" cb="0"/><line nr="551" mi="8" ci="0" mb="0" cb="0"/><line nr="553" mi="10" ci="0" mb="0" cb="0"/><line nr="555" mi="2" ci="0" mb="0" cb="0"/><line nr="556" mi="2" ci="0" mb="0" cb="0"/><line nr="557" mi="2" ci="0" mb="0" cb="0"/><line nr="558" mi="2" ci="0" mb="0" cb="0"/><line nr="559" mi="2" ci="0" mb="2" cb="0"/><line nr="560" mi="2" ci="0" mb="0" cb="0"/><line nr="573" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="748" covered="0"/><counter type="BRANCH" missed="101" covered="0"/><counter type="LINE" missed="162" covered="0"/><counter type="COMPLEXITY" missed="66" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FilenameUtils.java"><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="2" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="7" ci="0" mb="2" cb="0"/><line nr="150" mi="10" ci="0" mb="4" cb="0"/><line nr="195" mi="5" ci="0" mb="0" cb="0"/><line nr="242" mi="6" ci="0" mb="2" cb="0"/><line nr="243" mi="5" ci="0" mb="0" cb="0"/><line nr="289" mi="5" ci="0" mb="0" cb="0"/><line nr="336" mi="6" ci="0" mb="2" cb="0"/><line nr="337" mi="5" ci="0" mb="0" cb="0"/><line nr="349" mi="2" ci="0" mb="2" cb="0"/><line nr="350" mi="2" ci="0" mb="0" cb="0"/><line nr="353" mi="2" ci="0" mb="0" cb="0"/><line nr="355" mi="3" ci="0" mb="0" cb="0"/><line nr="356" mi="2" ci="0" mb="2" cb="0"/><line nr="357" mi="2" ci="0" mb="0" cb="0"/><line nr="359" mi="3" ci="0" mb="0" cb="0"/><line nr="360" mi="2" ci="0" mb="2" cb="0"/><line nr="361" mi="2" ci="0" mb="0" cb="0"/><line nr="364" mi="5" ci="0" mb="0" cb="0"/><line nr="365" mi="7" ci="0" mb="0" cb="0"/><line nr="368" mi="7" ci="0" mb="2" cb="0"/><line nr="369" mi="8" ci="0" mb="2" cb="0"/><line nr="370" mi="5" ci="0" mb="2" cb="0"/><line nr="371" mi="4" ci="0" mb="0" cb="0"/><line nr="376" mi="2" ci="0" mb="0" cb="0"/><line nr="377" mi="7" ci="0" mb="2" cb="0"/><line nr="378" mi="5" ci="0" mb="0" cb="0"/><line nr="379" mi="2" ci="0" mb="0" cb="0"/><line nr="383" mi="9" ci="0" mb="2" cb="0"/><line nr="384" mi="12" ci="0" mb="4" cb="0"/><line nr="385" mi="10" ci="0" mb="0" cb="0"/><line nr="386" mi="1" ci="0" mb="0" cb="0"/><line nr="387" mi="1" ci="0" mb="0" cb="0"/><line nr="392" mi="9" ci="0" mb="2" cb="0"/><line nr="393" mi="24" ci="0" mb="8" cb="0"/><line nr="395" mi="5" ci="0" mb="2" cb="0"/><line nr="396" mi="2" ci="0" mb="0" cb="0"/><line nr="398" mi="12" ci="0" mb="0" cb="0"/><line nr="399" mi="1" ci="0" mb="0" cb="0"/><line nr="400" mi="1" ci="0" mb="0" cb="0"/><line nr="406" mi="9" ci="0" mb="2" cb="0"/><line nr="407" mi="31" ci="0" mb="10" cb="0"/><line nr="409" mi="5" ci="0" mb="2" cb="0"/><line nr="410" mi="2" ci="0" mb="0" cb="0"/><line nr="412" mi="5" ci="0" mb="2" cb="0"/><line nr="413" mi="2" ci="0" mb="0" cb="0"/><line nr="416" mi="9" ci="0" mb="2" cb="0"/><line nr="417" mi="5" ci="0" mb="2" cb="0"/><line nr="419" mi="12" ci="0" mb="0" cb="0"/><line nr="420" mi="6" ci="0" mb="0" cb="0"/><line nr="421" mi="4" ci="0" mb="0" cb="0"/><line nr="422" mi="1" ci="0" mb="0" cb="0"/><line nr="426" mi="10" ci="0" mb="0" cb="0"/><line nr="427" mi="8" ci="0" mb="0" cb="0"/><line nr="428" mi="4" ci="0" mb="0" cb="0"/><line nr="432" mi="2" ci="0" mb="2" cb="0"/><line nr="433" mi="2" ci="0" mb="0" cb="0"/><line nr="435" mi="3" ci="0" mb="2" cb="0"/><line nr="436" mi="7" ci="0" mb="0" cb="0"/><line nr="438" mi="4" ci="0" mb="4" cb="0"/><line nr="439" mi="7" ci="0" mb="0" cb="0"/><line nr="441" mi="9" ci="0" mb="0" cb="0"/><line nr="486" mi="3" ci="0" mb="0" cb="0"/><line nr="487" mi="2" ci="0" mb="2" cb="0"/><line nr="488" mi="2" ci="0" mb="0" cb="0"/><line nr="490" mi="2" ci="0" mb="2" cb="0"/><line nr="491" mi="3" ci="0" mb="0" cb="0"/><line nr="493" mi="2" ci="0" mb="2" cb="0"/><line nr="494" mi="2" ci="0" mb="0" cb="0"/><line nr="496" mi="3" ci="0" mb="0" cb="0"/><line nr="497" mi="2" ci="0" mb="2" cb="0"/><line nr="498" mi="3" ci="0" mb="0" cb="0"/><line nr="500" mi="6" ci="0" mb="0" cb="0"/><line nr="501" mi="3" ci="0" mb="2" cb="0"/><line nr="502" mi="10" ci="0" mb="0" cb="0"/><line nr="504" mi="12" ci="0" mb="0" cb="0"/><line nr="535" mi="2" ci="0" mb="2" cb="0"/><line nr="536" mi="5" ci="0" mb="0" cb="0"/><line nr="539" mi="2" ci="0" mb="2" cb="0"/><line nr="540" mi="2" ci="0" mb="0" cb="0"/><line nr="543" mi="5" ci="0" mb="2" cb="0"/><line nr="544" mi="2" ci="0" mb="0" cb="0"/><line nr="547" mi="5" ci="0" mb="0" cb="0"/><line nr="558" mi="7" ci="0" mb="4" cb="0"/><line nr="559" mi="2" ci="0" mb="0" cb="0"/><line nr="561" mi="5" ci="0" mb="0" cb="0"/><line nr="571" mi="7" ci="0" mb="4" cb="0"/><line nr="572" mi="2" ci="0" mb="0" cb="0"/><line nr="574" mi="5" ci="0" mb="0" cb="0"/><line nr="584" mi="2" ci="0" mb="2" cb="0"/><line nr="585" mi="2" ci="0" mb="0" cb="0"/><line nr="587" mi="2" ci="0" mb="2" cb="0"/><line nr="588" mi="3" ci="0" mb="0" cb="0"/><line nr="590" mi="3" ci="0" mb="0" cb="0"/><line nr="634" mi="2" ci="0" mb="2" cb="0"/><line nr="635" mi="2" ci="0" mb="0" cb="0"/><line nr="637" mi="3" ci="0" mb="0" cb="0"/><line nr="638" mi="2" ci="0" mb="2" cb="0"/><line nr="639" mi="2" ci="0" mb="0" cb="0"/><line nr="641" mi="4" ci="0" mb="0" cb="0"/><line nr="642" mi="3" ci="0" mb="2" cb="0"/><line nr="643" mi="2" ci="0" mb="0" cb="0"/><line nr="645" mi="3" ci="0" mb="2" cb="0"/><line nr="646" mi="3" ci="0" mb="2" cb="0"/><line nr="647" mi="2" ci="0" mb="0" cb="0"/><line nr="649" mi="7" ci="0" mb="2" cb="0"/><line nr="651" mi="3" ci="0" mb="2" cb="0"/><line nr="652" mi="5" ci="0" mb="0" cb="0"/><line nr="653" mi="5" ci="0" mb="0" cb="0"/><line nr="654" mi="6" ci="0" mb="4" cb="0"/><line nr="655" mi="4" ci="0" mb="0" cb="0"/><line nr="657" mi="7" ci="0" mb="2" cb="0"/><line nr="658" mi="7" ci="0" mb="2" cb="0"/><line nr="659" mi="6" ci="0" mb="0" cb="0"/><line nr="661" mi="4" ci="0" mb="0" cb="0"/><line nr="662" mi="3" ci="0" mb="2" cb="0"/><line nr="663" mi="3" ci="0" mb="0" cb="0"/><line nr="664" mi="6" ci="0" mb="4" cb="0"/><line nr="665" mi="8" ci="0" mb="4" cb="0"/><line nr="666" mi="2" ci="0" mb="0" cb="0"/><line nr="668" mi="2" ci="0" mb="0" cb="0"/><line nr="669" mi="3" ci="0" mb="2" cb="0"/><line nr="670" mi="2" ci="0" mb="0" cb="0"/><line nr="672" mi="2" ci="0" mb="0" cb="0"/><line nr="674" mi="6" ci="0" mb="4" cb="0"/><line nr="675" mi="5" ci="0" mb="0" cb="0"/><line nr="676" mi="5" ci="0" mb="0" cb="0"/><line nr="677" mi="12" ci="0" mb="8" cb="0"/><line nr="678" mi="2" ci="0" mb="0" cb="0"/><line nr="680" mi="7" ci="0" mb="2" cb="0"/><line nr="681" mi="7" ci="0" mb="2" cb="0"/><line nr="682" mi="6" ci="0" mb="0" cb="0"/><line nr="684" mi="7" ci="0" mb="2" cb="0"/><line nr="702" mi="2" ci="0" mb="2" cb="0"/><line nr="703" mi="2" ci="0" mb="0" cb="0"/><line nr="705" mi="4" ci="0" mb="0" cb="0"/><line nr="706" mi="4" ci="0" mb="0" cb="0"/><line nr="707" mi="4" ci="0" mb="0" cb="0"/><line nr="725" mi="2" ci="0" mb="2" cb="0"/><line nr="726" mi="2" ci="0" mb="0" cb="0"/><line nr="728" mi="4" ci="0" mb="0" cb="0"/><line nr="729" mi="3" ci="0" mb="0" cb="0"/><line nr="730" mi="7" ci="0" mb="2" cb="0"/><line nr="764" mi="2" ci="0" mb="2" cb="0"/><line nr="765" mi="2" ci="0" mb="0" cb="0"/><line nr="767" mi="3" ci="0" mb="0" cb="0"/><line nr="768" mi="2" ci="0" mb="2" cb="0"/><line nr="769" mi="2" ci="0" mb="0" cb="0"/><line nr="771" mi="4" ci="0" mb="2" cb="0"/><line nr="772" mi="9" ci="0" mb="0" cb="0"/><line nr="773" mi="9" ci="0" mb="0" cb="0"/><line nr="775" mi="5" ci="0" mb="0" cb="0"/><line nr="776" mi="2" ci="0" mb="0" cb="0"/><line nr="777" mi="2" ci="0" mb="0" cb="0"/><line nr="804" mi="4" ci="0" mb="0" cb="0"/><line nr="832" mi="4" ci="0" mb="0" cb="0"/><line nr="843" mi="2" ci="0" mb="2" cb="0"/><line nr="844" mi="2" ci="0" mb="0" cb="0"/><line nr="846" mi="3" ci="0" mb="0" cb="0"/><line nr="847" mi="2" ci="0" mb="2" cb="0"/><line nr="848" mi="2" ci="0" mb="0" cb="0"/><line nr="850" mi="3" ci="0" mb="0" cb="0"/><line nr="851" mi="4" ci="0" mb="0" cb="0"/><line nr="852" mi="9" ci="0" mb="6" cb="0"/><line nr="853" mi="2" ci="0" mb="0" cb="0"/><line nr="855" mi="5" ci="0" mb="0" cb="0"/><line nr="856" mi="2" ci="0" mb="0" cb="0"/><line nr="857" mi="2" ci="0" mb="0" cb="0"/><line nr="886" mi="4" ci="0" mb="0" cb="0"/><line nr="916" mi="4" ci="0" mb="0" cb="0"/><line nr="927" mi="2" ci="0" mb="2" cb="0"/><line nr="928" mi="2" ci="0" mb="0" cb="0"/><line nr="930" mi="3" ci="0" mb="0" cb="0"/><line nr="931" mi="2" ci="0" mb="2" cb="0"/><line nr="932" mi="2" ci="0" mb="0" cb="0"/><line nr="934" mi="4" ci="0" mb="2" cb="0"/><line nr="935" mi="2" ci="0" mb="2" cb="0"/><line nr="936" mi="3" ci="0" mb="0" cb="0"/><line nr="938" mi="2" ci="0" mb="0" cb="0"/><line nr="941" mi="3" ci="0" mb="0" cb="0"/><line nr="942" mi="2" ci="0" mb="2" cb="0"/><line nr="943" mi="5" ci="0" mb="0" cb="0"/><line nr="945" mi="8" ci="0" mb="2" cb="0"/><line nr="946" mi="2" ci="0" mb="2" cb="0"/><line nr="947" mi="1" ci="0" mb="0" cb="0"/><line nr="949" mi="5" ci="0" mb="0" cb="0"/><line nr="971" mi="2" ci="0" mb="2" cb="0"/><line nr="972" mi="2" ci="0" mb="0" cb="0"/><line nr="974" mi="2" ci="0" mb="0" cb="0"/><line nr="975" mi="3" ci="0" mb="0" cb="0"/><line nr="976" mi="6" ci="0" mb="0" cb="0"/><line nr="986" mi="3" ci="0" mb="0" cb="0"/><line nr="987" mi="7" ci="0" mb="2" cb="0"/><line nr="988" mi="4" ci="0" mb="2" cb="0"/><line nr="989" mi="5" ci="0" mb="0" cb="0"/><line nr="993" mi="1" ci="0" mb="0" cb="0"/><line nr="1014" mi="4" ci="0" mb="0" cb="0"/><line nr="1036" mi="2" ci="0" mb="2" cb="0"/><line nr="1037" mi="2" ci="0" mb="0" cb="0"/><line nr="1039" mi="3" ci="0" mb="0" cb="0"/><line nr="1040" mi="3" ci="0" mb="2" cb="0"/><line nr="1041" mi="2" ci="0" mb="0" cb="0"/><line nr="1043" mi="6" ci="0" mb="0" cb="0"/><line nr="1066" mi="2" ci="0" mb="2" cb="0"/><line nr="1067" mi="2" ci="0" mb="0" cb="0"/><line nr="1069" mi="2" ci="0" mb="0" cb="0"/><line nr="1071" mi="3" ci="0" mb="0" cb="0"/><line nr="1072" mi="3" ci="0" mb="2" cb="0"/><line nr="1073" mi="2" ci="0" mb="0" cb="0"/><line nr="1075" mi="5" ci="0" mb="0" cb="0"/><line nr="1092" mi="6" ci="0" mb="0" cb="0"/><line nr="1107" mi="6" ci="0" mb="0" cb="0"/><line nr="1123" mi="6" ci="0" mb="0" cb="0"/><line nr="1140" mi="6" ci="0" mb="0" cb="0"/><line nr="1158" mi="4" ci="0" mb="4" cb="0"/><line nr="1159" mi="8" ci="0" mb="4" cb="0"/><line nr="1161" mi="2" ci="0" mb="2" cb="0"/><line nr="1162" mi="3" ci="0" mb="0" cb="0"/><line nr="1163" mi="3" ci="0" mb="0" cb="0"/><line nr="1164" mi="4" ci="0" mb="4" cb="0"/><line nr="1165" mi="5" ci="0" mb="0" cb="0"/><line nr="1169" mi="2" ci="0" mb="2" cb="0"/><line nr="1170" mi="2" ci="0" mb="0" cb="0"/><line nr="1172" mi="5" ci="0" mb="0" cb="0"/><line nr="1189" mi="2" ci="0" mb="2" cb="0"/><line nr="1190" mi="2" ci="0" mb="0" cb="0"/><line nr="1192" mi="2" ci="0" mb="0" cb="0"/><line nr="1194" mi="5" ci="0" mb="4" cb="0"/><line nr="1195" mi="8" ci="0" mb="2" cb="0"/><line nr="1197" mi="3" ci="0" mb="0" cb="0"/><line nr="1198" mi="4" ci="0" mb="0" cb="0"/><line nr="1214" mi="2" ci="0" mb="2" cb="0"/><line nr="1215" mi="2" ci="0" mb="0" cb="0"/><line nr="1217" mi="2" ci="0" mb="0" cb="0"/><line nr="1219" mi="5" ci="0" mb="4" cb="0"/><line nr="1220" mi="8" ci="0" mb="2" cb="0"/><line nr="1222" mi="3" ci="0" mb="0" cb="0"/><line nr="1223" mi="16" ci="0" mb="2" cb="0"/><line nr="1224" mi="4" ci="0" mb="2" cb="0"/><line nr="1225" mi="2" ci="0" mb="0" cb="0"/><line nr="1228" mi="2" ci="0" mb="0" cb="0"/><line nr="1244" mi="2" ci="0" mb="2" cb="0"/><line nr="1245" mi="2" ci="0" mb="0" cb="0"/><line nr="1247" mi="2" ci="0" mb="0" cb="0"/><line nr="1249" mi="5" ci="0" mb="4" cb="0"/><line nr="1250" mi="8" ci="0" mb="2" cb="0"/><line nr="1252" mi="3" ci="0" mb="0" cb="0"/><line nr="1253" mi="10" ci="0" mb="2" cb="0"/><line nr="1254" mi="4" ci="0" mb="2" cb="0"/><line nr="1255" mi="2" ci="0" mb="0" cb="0"/><line nr="1257" mi="1" ci="0" mb="0" cb="0"/><line nr="1258" mi="2" ci="0" mb="0" cb="0"/><line nr="1285" mi="5" ci="0" mb="0" cb="0"/><line nr="1311" mi="5" ci="0" mb="0" cb="0"/><line nr="1329" mi="4" ci="0" mb="4" cb="0"/><line nr="1330" mi="2" ci="0" mb="0" cb="0"/><line nr="1332" mi="4" ci="0" mb="4" cb="0"/><line nr="1333" mi="2" ci="0" mb="0" cb="0"/><line nr="1335" mi="2" ci="0" mb="2" cb="0"/><line nr="1336" mi="2" ci="0" mb="0" cb="0"/><line nr="1338" mi="3" ci="0" mb="0" cb="0"/><line nr="1339" mi="2" ci="0" mb="0" cb="0"/><line nr="1340" mi="2" ci="0" mb="0" cb="0"/><line nr="1341" mi="2" ci="0" mb="0" cb="0"/><line nr="1342" mi="4" ci="0" mb="0" cb="0"/><line nr="1346" mi="3" ci="0" mb="2" cb="0"/><line nr="1347" mi="4" ci="0" mb="0" cb="0"/><line nr="1348" mi="4" ci="0" mb="0" cb="0"/><line nr="1349" mi="4" ci="0" mb="0" cb="0"/><line nr="1350" mi="2" ci="0" mb="0" cb="0"/><line nr="1354" mi="4" ci="0" mb="2" cb="0"/><line nr="1356" mi="6" ci="0" mb="2" cb="0"/><line nr="1358" mi="1" ci="0" mb="0" cb="0"/><line nr="1359" mi="4" ci="0" mb="2" cb="0"/><line nr="1360" mi="1" ci="0" mb="0" cb="0"/><line nr="1362" mi="3" ci="0" mb="0" cb="0"/><line nr="1364" mi="6" ci="0" mb="2" cb="0"/><line nr="1366" mi="2" ci="0" mb="0" cb="0"/><line nr="1367" mi="6" ci="0" mb="2" cb="0"/><line nr="1368" mi="4" ci="0" mb="0" cb="0"/><line nr="1373" mi="2" ci="0" mb="2" cb="0"/><line nr="1375" mi="8" ci="0" mb="0" cb="0"/><line nr="1376" mi="3" ci="0" mb="2" cb="0"/><line nr="1378" mi="1" ci="0" mb="0" cb="0"/><line nr="1380" mi="10" ci="0" mb="0" cb="0"/><line nr="1381" mi="2" ci="0" mb="2" cb="0"/><line nr="1382" mi="13" ci="0" mb="0" cb="0"/><line nr="1384" mi="1" ci="0" mb="0" cb="0"/><line nr="1386" mi="8" ci="0" mb="2" cb="0"/><line nr="1388" mi="1" ci="0" mb="0" cb="0"/><line nr="1393" mi="7" ci="0" mb="0" cb="0"/><line nr="1394" mi="2" ci="0" mb="0" cb="0"/><line nr="1397" mi="2" ci="0" mb="0" cb="0"/><line nr="1401" mi="8" ci="0" mb="4" cb="0"/><line nr="1402" mi="2" ci="0" mb="0" cb="0"/><line nr="1405" mi="3" ci="0" mb="2" cb="0"/><line nr="1407" mi="2" ci="0" mb="0" cb="0"/><line nr="1422" mi="10" ci="0" mb="4" cb="0"/><line nr="1423" mi="7" ci="0" mb="0" cb="0"/><line nr="1426" mi="3" ci="0" mb="0" cb="0"/><line nr="1427" mi="4" ci="0" mb="0" cb="0"/><line nr="1428" mi="4" ci="0" mb="0" cb="0"/><line nr="1429" mi="2" ci="0" mb="0" cb="0"/><line nr="1430" mi="16" ci="0" mb="2" cb="0"/><line nr="1431" mi="6" ci="0" mb="4" cb="0"/><line nr="1432" mi="3" ci="0" mb="2" cb="0"/><line nr="1433" mi="5" ci="0" mb="0" cb="0"/><line nr="1434" mi="3" ci="0" mb="0" cb="0"/><line nr="1436" mi="3" ci="0" mb="2" cb="0"/><line nr="1437" mi="5" ci="0" mb="0" cb="0"/><line nr="1438" mi="3" ci="0" mb="2" cb="0"/><line nr="1439" mi="5" ci="0" mb="0" cb="0"/><line nr="1442" mi="4" ci="0" mb="0" cb="0"/><line nr="1444" mi="2" ci="0" mb="0" cb="0"/><line nr="1446" mi="3" ci="0" mb="2" cb="0"/><line nr="1447" mi="5" ci="0" mb="0" cb="0"/><line nr="1450" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1356" covered="0"/><counter type="BRANCH" missed="304" covered="0"/><counter type="LINE" missed="324" covered="0"/><counter type="COMPLEXITY" missed="193" covered="0"/><counter type="METHOD" missed="41" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="EndianUtils.java"><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="17" ci="0" mb="0" cb="0"/><line nr="67" mi="32" ci="0" mb="0" cb="0"/><line nr="80" mi="64" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="11" ci="0" mb="0" cb="0"/><line nr="120" mi="11" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="21" ci="0" mb="0" cb="0"/><line nr="144" mi="20" ci="0" mb="0" cb="0"/><line nr="156" mi="11" ci="0" mb="0" cb="0"/><line nr="157" mi="11" ci="0" mb="0" cb="0"/><line nr="158" mi="11" ci="0" mb="0" cb="0"/><line nr="159" mi="11" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="170" mi="40" ci="0" mb="0" cb="0"/><line nr="185" mi="31" ci="0" mb="0" cb="0"/><line nr="189" mi="9" ci="0" mb="0" cb="0"/><line nr="191" mi="8" ci="0" mb="0" cb="0"/><line nr="202" mi="12" ci="0" mb="0" cb="0"/><line nr="203" mi="12" ci="0" mb="0" cb="0"/><line nr="204" mi="12" ci="0" mb="0" cb="0"/><line nr="205" mi="12" ci="0" mb="0" cb="0"/><line nr="206" mi="12" ci="0" mb="0" cb="0"/><line nr="207" mi="12" ci="0" mb="0" cb="0"/><line nr="208" mi="12" ci="0" mb="0" cb="0"/><line nr="209" mi="12" ci="0" mb="0" cb="0"/><line nr="210" mi="1" ci="0" mb="0" cb="0"/><line nr="220" mi="5" ci="0" mb="0" cb="0"/><line nr="221" mi="7" ci="0" mb="0" cb="0"/><line nr="222" mi="8" ci="0" mb="0" cb="0"/><line nr="233" mi="5" ci="0" mb="0" cb="0"/><line nr="234" mi="1" ci="0" mb="0" cb="0"/><line nr="244" mi="5" ci="0" mb="0" cb="0"/><line nr="255" mi="5" ci="0" mb="0" cb="0"/><line nr="256" mi="1" ci="0" mb="0" cb="0"/><line nr="266" mi="5" ci="0" mb="0" cb="0"/><line nr="279" mi="8" ci="0" mb="0" cb="0"/><line nr="280" mi="8" ci="0" mb="0" cb="0"/><line nr="281" mi="1" ci="0" mb="0" cb="0"/><line nr="293" mi="8" ci="0" mb="0" cb="0"/><line nr="294" mi="7" ci="0" mb="0" cb="0"/><line nr="307" mi="3" ci="0" mb="0" cb="0"/><line nr="308" mi="3" ci="0" mb="0" cb="0"/><line nr="310" mi="12" ci="0" mb="0" cb="0"/><line nr="324" mi="8" ci="0" mb="0" cb="0"/><line nr="325" mi="8" ci="0" mb="0" cb="0"/><line nr="326" mi="8" ci="0" mb="0" cb="0"/><line nr="327" mi="8" ci="0" mb="0" cb="0"/><line nr="328" mi="1" ci="0" mb="0" cb="0"/><line nr="340" mi="3" ci="0" mb="0" cb="0"/><line nr="341" mi="3" ci="0" mb="0" cb="0"/><line nr="342" mi="3" ci="0" mb="0" cb="0"/><line nr="343" mi="3" ci="0" mb="0" cb="0"/><line nr="345" mi="24" ci="0" mb="0" cb="0"/><line nr="361" mi="3" ci="0" mb="0" cb="0"/><line nr="362" mi="3" ci="0" mb="0" cb="0"/><line nr="363" mi="3" ci="0" mb="0" cb="0"/><line nr="364" mi="3" ci="0" mb="0" cb="0"/><line nr="366" mi="19" ci="0" mb="0" cb="0"/><line nr="370" mi="5" ci="0" mb="0" cb="0"/><line nr="372" mi="8" ci="0" mb="0" cb="0"/><line nr="385" mi="9" ci="0" mb="0" cb="0"/><line nr="386" mi="9" ci="0" mb="0" cb="0"/><line nr="387" mi="9" ci="0" mb="0" cb="0"/><line nr="388" mi="9" ci="0" mb="0" cb="0"/><line nr="389" mi="9" ci="0" mb="0" cb="0"/><line nr="390" mi="9" ci="0" mb="0" cb="0"/><line nr="391" mi="9" ci="0" mb="0" cb="0"/><line nr="392" mi="9" ci="0" mb="0" cb="0"/><line nr="393" mi="1" ci="0" mb="0" cb="0"/><line nr="405" mi="3" ci="0" mb="0" cb="0"/><line nr="406" mi="7" ci="0" mb="2" cb="0"/><line nr="407" mi="6" ci="0" mb="0" cb="0"/><line nr="409" mi="4" ci="0" mb="0" cb="0"/><line nr="422" mi="4" ci="0" mb="0" cb="0"/><line nr="423" mi="1" ci="0" mb="0" cb="0"/><line nr="435" mi="4" ci="0" mb="0" cb="0"/><line nr="448" mi="4" ci="0" mb="0" cb="0"/><line nr="449" mi="1" ci="0" mb="0" cb="0"/><line nr="461" mi="4" ci="0" mb="0" cb="0"/><line nr="473" mi="3" ci="0" mb="0" cb="0"/><line nr="475" mi="3" ci="0" mb="2" cb="0"/><line nr="476" mi="5" ci="0" mb="0" cb="0"/><line nr="479" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="749" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="87" covered="0"/><counter type="COMPLEXITY" missed="33" covered="0"/><counter type="METHOD" missed="31" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IOUtils.java"><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="9" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="176" mi="1" ci="0" mb="0" cb="0"/><line nr="187" mi="3" ci="0" mb="2" cb="0"/><line nr="188" mi="3" ci="0" mb="0" cb="0"/><line nr="190" mi="1" ci="0" mb="0" cb="0"/><line nr="221" mi="2" ci="0" mb="0" cb="0"/><line nr="222" mi="1" ci="0" mb="0" cb="0"/><line nr="252" mi="2" ci="0" mb="0" cb="0"/><line nr="253" mi="1" ci="0" mb="0" cb="0"/><line nr="284" mi="2" ci="0" mb="0" cb="0"/><line nr="285" mi="1" ci="0" mb="0" cb="0"/><line nr="317" mi="2" ci="0" mb="0" cb="0"/><line nr="318" mi="1" ci="0" mb="0" cb="0"/><line nr="362" mi="2" ci="0" mb="2" cb="0"/><line nr="363" mi="2" ci="0" mb="0" cb="0"/><line nr="365" mi="1" ci="0" mb="0" cb="0"/><line nr="367" mi="1" ci="0" mb="0" cb="0"/><line nr="368" mi="1" ci="0" mb="0" cb="0"/><line nr="419" mi="2" ci="0" mb="2" cb="0"/><line nr="420" mi="1" ci="0" mb="0" cb="0"/><line nr="422" mi="16" ci="0" mb="2" cb="0"/><line nr="423" mi="2" ci="0" mb="0" cb="0"/><line nr="425" mi="1" ci="0" mb="0" cb="0"/><line nr="456" mi="2" ci="0" mb="2" cb="0"/><line nr="458" mi="2" ci="0" mb="0" cb="0"/><line nr="459" mi="1" ci="0" mb="0" cb="0"/><line nr="461" mi="1" ci="0" mb="0" cb="0"/><line nr="463" mi="1" ci="0" mb="0" cb="0"/><line nr="494" mi="2" ci="0" mb="2" cb="0"/><line nr="496" mi="2" ci="0" mb="0" cb="0"/><line nr="497" mi="1" ci="0" mb="0" cb="0"/><line nr="499" mi="1" ci="0" mb="0" cb="0"/><line nr="501" mi="1" ci="0" mb="0" cb="0"/><line nr="532" mi="2" ci="0" mb="2" cb="0"/><line nr="534" mi="2" ci="0" mb="0" cb="0"/><line nr="535" mi="1" ci="0" mb="0" cb="0"/><line nr="537" mi="1" ci="0" mb="0" cb="0"/><line nr="539" mi="1" ci="0" mb="0" cb="0"/><line nr="563" mi="3" ci="0" mb="0" cb="0"/><line nr="589" mi="4" ci="0" mb="0" cb="0"/><line nr="603" mi="11" ci="0" mb="2" cb="0"/><line nr="618" mi="12" ci="0" mb="2" cb="0"/><line nr="631" mi="11" ci="0" mb="2" cb="0"/><line nr="645" mi="12" ci="0" mb="2" cb="0"/><line nr="658" mi="11" ci="0" mb="2" cb="0"/><line nr="672" mi="12" ci="0" mb="2" cb="0"/><line nr="686" mi="2" ci="0" mb="2" cb="0"/><line nr="687" mi="4" ci="0" mb="0" cb="0"/><line nr="689" mi="11" ci="0" mb="2" cb="0"/><line nr="705" mi="2" ci="0" mb="2" cb="0"/><line nr="706" mi="4" ci="0" mb="0" cb="0"/><line nr="708" mi="12" ci="0" mb="2" cb="0"/><line nr="723" mi="2" ci="0" mb="2" cb="0"/><line nr="724" mi="4" ci="0" mb="0" cb="0"/><line nr="726" mi="11" ci="0" mb="2" cb="0"/><line nr="742" mi="2" ci="0" mb="2" cb="0"/><line nr="743" mi="4" ci="0" mb="0" cb="0"/><line nr="745" mi="12" ci="0" mb="2" cb="0"/><line nr="764" mi="6" ci="0" mb="0" cb="0"/><line nr="765" mi="4" ci="0" mb="0" cb="0"/><line nr="766" mi="5" ci="0" mb="0" cb="0"/><line nr="789" mi="4" ci="0" mb="2" cb="0"/><line nr="790" mi="12" ci="0" mb="0" cb="0"/><line nr="793" mi="5" ci="0" mb="0" cb="0"/><line nr="811" mi="2" ci="0" mb="2" cb="0"/><line nr="812" mi="12" ci="0" mb="0" cb="0"/><line nr="815" mi="2" ci="0" mb="2" cb="0"/><line nr="816" mi="3" ci="0" mb="0" cb="0"/><line nr="819" mi="3" ci="0" mb="0" cb="0"/><line nr="820" mi="2" ci="0" mb="0" cb="0"/><line nr="823" mi="14" ci="0" mb="4" cb="0"/><line nr="824" mi="5" ci="0" mb="0" cb="0"/><line nr="827" mi="3" ci="0" mb="2" cb="0"/><line nr="828" mi="16" ci="0" mb="0" cb="0"/><line nr="831" mi="2" ci="0" mb="0" cb="0"/><line nr="849" mi="4" ci="0" mb="0" cb="0"/><line nr="867" mi="6" ci="0" mb="0" cb="0"/><line nr="868" mi="4" ci="0" mb="0" cb="0"/><line nr="869" mi="5" ci="0" mb="0" cb="0"/><line nr="894" mi="5" ci="0" mb="0" cb="0"/><line nr="912" mi="4" ci="0" mb="0" cb="0"/><line nr="925" mi="4" ci="0" mb="0" cb="0"/><line nr="938" mi="3" ci="0" mb="0" cb="0"/><line nr="940" mi="5" ci="0" mb="0" cb="0"/><line nr="942" mi="2" ci="0" mb="0" cb="0"/><line nr="956" mi="5" ci="0" mb="0" cb="0"/><line nr="957" mi="5" ci="0" mb="0" cb="0"/><line nr="980" mi="4" ci="0" mb="0" cb="0"/><line nr="999" mi="4" ci="0" mb="0" cb="0"/><line nr="1000" mi="4" ci="0" mb="0" cb="0"/><line nr="1001" mi="3" ci="0" mb="0" cb="0"/><line nr="1025" mi="5" ci="0" mb="0" cb="0"/><line nr="1041" mi="4" ci="0" mb="0" cb="0"/><line nr="1042" mi="4" ci="0" mb="0" cb="0"/><line nr="1043" mi="3" ci="0" mb="0" cb="0"/><line nr="1064" mi="4" ci="0" mb="0" cb="0"/><line nr="1083" mi="6" ci="0" mb="0" cb="0"/><line nr="1084" mi="4" ci="0" mb="0" cb="0"/><line nr="1085" mi="5" ci="0" mb="0" cb="0"/><line nr="1110" mi="5" ci="0" mb="0" cb="0"/><line nr="1125" mi="6" ci="0" mb="0" cb="0"/><line nr="1126" mi="4" ci="0" mb="0" cb="0"/><line nr="1127" mi="5" ci="0" mb="0" cb="0"/><line nr="1142" mi="4" ci="0" mb="0" cb="0"/><line nr="1155" mi="6" ci="0" mb="0" cb="0"/><line nr="1171" mi="5" ci="0" mb="0" cb="0"/><line nr="1185" mi="4" ci="0" mb="0" cb="0"/><line nr="1198" mi="5" ci="0" mb="0" cb="0"/><line nr="1199" mi="6" ci="0" mb="0" cb="0"/><line nr="1216" mi="5" ci="0" mb="0" cb="0"/><line nr="1232" mi="6" ci="0" mb="0" cb="0"/><line nr="1249" mi="7" ci="0" mb="0" cb="0"/><line nr="1272" mi="5" ci="0" mb="0" cb="0"/><line nr="1293" mi="6" ci="0" mb="0" cb="0"/><line nr="1311" mi="4" ci="0" mb="0" cb="0"/><line nr="1330" mi="5" ci="0" mb="0" cb="0"/><line nr="1348" mi="4" ci="0" mb="0" cb="0"/><line nr="1369" mi="10" ci="0" mb="2" cb="0"/><line nr="1371" mi="2" ci="0" mb="2" cb="0"/><line nr="1372" mi="12" ci="0" mb="0" cb="0"/><line nr="1375" mi="2" ci="0" mb="0" cb="0"/><line nr="1397" mi="4" ci="0" mb="0" cb="0"/><line nr="1415" mi="7" ci="0" mb="0" cb="0"/><line nr="1416" mi="3" ci="0" mb="0" cb="0"/><line nr="1440" mi="5" ci="0" mb="0" cb="0"/><line nr="1457" mi="3" ci="0" mb="0" cb="0"/><line nr="1458" mi="4" ci="0" mb="0" cb="0"/><line nr="1459" mi="3" ci="0" mb="0" cb="0"/><line nr="1460" mi="2" ci="0" mb="2" cb="0"/><line nr="1461" mi="4" ci="0" mb="0" cb="0"/><line nr="1462" mi="4" ci="0" mb="0" cb="0"/><line nr="1464" mi="2" ci="0" mb="0" cb="0"/><line nr="1498" mi="5" ci="0" mb="0" cb="0"/><line nr="1532" mi="10" ci="0" mb="0" cb="0"/><line nr="1569" mi="5" ci="0" mb="0" cb="0"/><line nr="1585" mi="4" ci="0" mb="0" cb="0"/><line nr="1598" mi="5" ci="0" mb="0" cb="0"/><line nr="1618" mi="5" ci="0" mb="0" cb="0"/><line nr="1634" mi="4" ci="0" mb="0" cb="0"/><line nr="1647" mi="8" ci="0" mb="0" cb="0"/><line nr="1667" mi="5" ci="0" mb="0" cb="0"/><line nr="1668" mi="5" ci="0" mb="0" cb="0"/><line nr="1686" mi="2" ci="0" mb="2" cb="0"/><line nr="1687" mi="3" ci="0" mb="0" cb="0"/><line nr="1689" mi="1" ci="0" mb="0" cb="0"/><line nr="1705" mi="2" ci="0" mb="2" cb="0"/><line nr="1706" mi="3" ci="0" mb="0" cb="0"/><line nr="1707" mi="2" ci="0" mb="0" cb="0"/><line nr="1708" mi="2" ci="0" mb="2" cb="0"/><line nr="1709" mi="4" ci="0" mb="0" cb="0"/><line nr="1710" mi="5" ci="0" mb="0" cb="0"/><line nr="1711" mi="4" ci="0" mb="0" cb="0"/><line nr="1712" mi="4" ci="0" mb="0" cb="0"/><line nr="1713" mi="1" ci="0" mb="0" cb="0"/><line nr="1715" mi="1" ci="0" mb="0" cb="0"/><line nr="1733" mi="4" ci="0" mb="0" cb="0"/><line nr="1734" mi="1" ci="0" mb="0" cb="0"/><line nr="1751" mi="2" ci="0" mb="2" cb="0"/><line nr="1752" mi="8" ci="0" mb="0" cb="0"/><line nr="1754" mi="1" ci="0" mb="0" cb="0"/><line nr="1777" mi="5" ci="0" mb="0" cb="0"/><line nr="1778" mi="1" ci="0" mb="0" cb="0"/><line nr="1794" mi="2" ci="0" mb="2" cb="0"/><line nr="1795" mi="3" ci="0" mb="0" cb="0"/><line nr="1797" mi="1" ci="0" mb="0" cb="0"/><line nr="1812" mi="2" ci="0" mb="2" cb="0"/><line nr="1813" mi="3" ci="0" mb="0" cb="0"/><line nr="1814" mi="2" ci="0" mb="0" cb="0"/><line nr="1815" mi="2" ci="0" mb="2" cb="0"/><line nr="1816" mi="4" ci="0" mb="0" cb="0"/><line nr="1817" mi="5" ci="0" mb="0" cb="0"/><line nr="1818" mi="4" ci="0" mb="0" cb="0"/><line nr="1819" mi="4" ci="0" mb="0" cb="0"/><line nr="1820" mi="1" ci="0" mb="0" cb="0"/><line nr="1822" mi="1" ci="0" mb="0" cb="0"/><line nr="1842" mi="4" ci="0" mb="0" cb="0"/><line nr="1843" mi="1" ci="0" mb="0" cb="0"/><line nr="1861" mi="2" ci="0" mb="2" cb="0"/><line nr="1862" mi="9" ci="0" mb="0" cb="0"/><line nr="1864" mi="1" ci="0" mb="0" cb="0"/><line nr="1888" mi="5" ci="0" mb="0" cb="0"/><line nr="1889" mi="1" ci="0" mb="0" cb="0"/><line nr="1904" mi="2" ci="0" mb="2" cb="0"/><line nr="1905" mi="4" ci="0" mb="0" cb="0"/><line nr="1907" mi="1" ci="0" mb="0" cb="0"/><line nr="1926" mi="4" ci="0" mb="0" cb="0"/><line nr="1927" mi="1" ci="0" mb="0" cb="0"/><line nr="1944" mi="2" ci="0" mb="2" cb="0"/><line nr="1945" mi="5" ci="0" mb="0" cb="0"/><line nr="1947" mi="1" ci="0" mb="0" cb="0"/><line nr="1969" mi="5" ci="0" mb="0" cb="0"/><line nr="1970" mi="1" ci="0" mb="0" cb="0"/><line nr="1985" mi="2" ci="0" mb="2" cb="0"/><line nr="1986" mi="3" ci="0" mb="0" cb="0"/><line nr="1988" mi="1" ci="0" mb="0" cb="0"/><line nr="2007" mi="4" ci="0" mb="0" cb="0"/><line nr="2008" mi="1" ci="0" mb="0" cb="0"/><line nr="2024" mi="0" ci="2" mb="1" cb="1"/><line nr="2025" mi="0" ci="6" mb="0" cb="0"/><line nr="2027" mi="0" ci="1" mb="0" cb="0"/><line nr="2049" mi="5" ci="0" mb="0" cb="0"/><line nr="2050" mi="1" ci="0" mb="0" cb="0"/><line nr="2068" mi="2" ci="0" mb="2" cb="0"/><line nr="2069" mi="4" ci="0" mb="0" cb="0"/><line nr="2071" mi="1" ci="0" mb="0" cb="0"/><line nr="2090" mi="5" ci="0" mb="0" cb="0"/><line nr="2091" mi="1" ci="0" mb="0" cb="0"/><line nr="2115" mi="2" ci="0" mb="2" cb="0"/><line nr="2116" mi="7" ci="0" mb="0" cb="0"/><line nr="2118" mi="1" ci="0" mb="0" cb="0"/><line nr="2139" mi="5" ci="0" mb="0" cb="0"/><line nr="2140" mi="1" ci="0" mb="0" cb="0"/><line nr="2157" mi="2" ci="0" mb="2" cb="0"/><line nr="2158" mi="1" ci="0" mb="0" cb="0"/><line nr="2160" mi="2" ci="0" mb="2" cb="0"/><line nr="2161" mi="2" ci="0" mb="0" cb="0"/><line nr="2163" mi="3" ci="0" mb="0" cb="0"/><line nr="2164" mi="9" ci="0" mb="2" cb="0"/><line nr="2165" mi="2" ci="0" mb="2" cb="0"/><line nr="2166" mi="6" ci="0" mb="0" cb="0"/><line nr="2168" mi="5" ci="0" mb="0" cb="0"/><line nr="2169" mi="1" ci="0" mb="0" cb="0"/><line nr="2170" mi="1" ci="0" mb="0" cb="0"/><line nr="2193" mi="6" ci="0" mb="0" cb="0"/><line nr="2194" mi="1" ci="0" mb="0" cb="0"/><line nr="2209" mi="2" ci="0" mb="2" cb="0"/><line nr="2210" mi="1" ci="0" mb="0" cb="0"/><line nr="2212" mi="2" ci="0" mb="2" cb="0"/><line nr="2213" mi="2" ci="0" mb="0" cb="0"/><line nr="2215" mi="9" ci="0" mb="2" cb="0"/><line nr="2216" mi="2" ci="0" mb="2" cb="0"/><line nr="2217" mi="4" ci="0" mb="0" cb="0"/><line nr="2219" mi="3" ci="0" mb="0" cb="0"/><line nr="2220" mi="1" ci="0" mb="0" cb="0"/><line nr="2221" mi="1" ci="0" mb="0" cb="0"/><line nr="2246" mi="4" ci="0" mb="0" cb="0"/><line nr="2247" mi="4" ci="0" mb="2" cb="0"/><line nr="2248" mi="2" ci="0" mb="0" cb="0"/><line nr="2250" mi="3" ci="0" mb="0" cb="0"/><line nr="2270" mi="6" ci="0" mb="0" cb="0"/><line nr="2291" mi="5" ci="0" mb="0" cb="0"/><line nr="2312" mi="2" ci="0" mb="0" cb="0"/><line nr="2314" mi="7" ci="0" mb="2" cb="0"/><line nr="2315" mi="5" ci="0" mb="0" cb="0"/><line nr="2316" mi="6" ci="0" mb="0" cb="0"/><line nr="2318" mi="2" ci="0" mb="0" cb="0"/><line nr="2347" mi="8" ci="0" mb="0" cb="0"/><line nr="2376" mi="4" ci="0" mb="2" cb="0"/><line nr="2377" mi="3" ci="0" mb="0" cb="0"/><line nr="2379" mi="4" ci="0" mb="2" cb="0"/><line nr="2380" mi="2" ci="0" mb="0" cb="0"/><line nr="2382" mi="3" ci="0" mb="0" cb="0"/><line nr="2383" mi="2" ci="0" mb="0" cb="0"/><line nr="2384" mi="9" ci="0" mb="4" cb="0"/><line nr="2385" mi="3" ci="0" mb="0" cb="0"/><line nr="2388" mi="2" ci="0" mb="0" cb="0"/><line nr="2389" mi="11" ci="0" mb="4" cb="0"/><line nr="2390" mi="5" ci="0" mb="0" cb="0"/><line nr="2391" mi="5" ci="0" mb="0" cb="0"/><line nr="2392" mi="4" ci="0" mb="2" cb="0"/><line nr="2394" mi="9" ci="0" mb="0" cb="0"/><line nr="2397" mi="2" ci="0" mb="0" cb="0"/><line nr="2419" mi="4" ci="0" mb="0" cb="0"/><line nr="2420" mi="1" ci="0" mb="0" cb="0"/><line nr="2440" mi="7" ci="0" mb="0" cb="0"/><line nr="2441" mi="4" ci="0" mb="0" cb="0"/><line nr="2442" mi="1" ci="0" mb="0" cb="0"/><line nr="2468" mi="5" ci="0" mb="0" cb="0"/><line nr="2469" mi="1" ci="0" mb="0" cb="0"/><line nr="2493" mi="4" ci="0" mb="0" cb="0"/><line nr="2494" mi="4" ci="0" mb="2" cb="0"/><line nr="2495" mi="2" ci="0" mb="0" cb="0"/><line nr="2497" mi="3" ci="0" mb="0" cb="0"/><line nr="2516" mi="6" ci="0" mb="0" cb="0"/><line nr="2535" mi="2" ci="0" mb="0" cb="0"/><line nr="2537" mi="7" ci="0" mb="2" cb="0"/><line nr="2538" mi="5" ci="0" mb="0" cb="0"/><line nr="2539" mi="6" ci="0" mb="0" cb="0"/><line nr="2541" mi="2" ci="0" mb="0" cb="0"/><line nr="2565" mi="8" ci="0" mb="0" cb="0"/><line nr="2590" mi="4" ci="0" mb="2" cb="0"/><line nr="2591" mi="3" ci="0" mb="0" cb="0"/><line nr="2593" mi="4" ci="0" mb="2" cb="0"/><line nr="2594" mi="2" ci="0" mb="0" cb="0"/><line nr="2596" mi="3" ci="0" mb="0" cb="0"/><line nr="2597" mi="10" ci="0" mb="4" cb="0"/><line nr="2598" mi="3" ci="0" mb="0" cb="0"/><line nr="2601" mi="2" ci="0" mb="0" cb="0"/><line nr="2602" mi="11" ci="0" mb="4" cb="0"/><line nr="2603" mi="5" ci="0" mb="0" cb="0"/><line nr="2604" mi="5" ci="0" mb="0" cb="0"/><line nr="2605" mi="4" ci="0" mb="2" cb="0"/><line nr="2607" mi="10" ci="0" mb="0" cb="0"/><line nr="2610" mi="2" ci="0" mb="0" cb="0"/><line nr="2636" mi="4" ci="0" mb="0" cb="0"/><line nr="2637" mi="1" ci="0" mb="0" cb="0"/><line nr="2664" mi="7" ci="0" mb="0" cb="0"/><line nr="2665" mi="4" ci="0" mb="0" cb="0"/><line nr="2668" mi="2" ci="0" mb="0" cb="0"/><line nr="2669" mi="1" ci="0" mb="0" cb="0"/><line nr="2699" mi="5" ci="0" mb="0" cb="0"/><line nr="2700" mi="1" ci="0" mb="0" cb="0"/><line nr="2721" mi="3" ci="0" mb="2" cb="0"/><line nr="2722" mi="2" ci="0" mb="0" cb="0"/><line nr="2724" mi="3" ci="0" mb="2" cb="0"/><line nr="2725" mi="5" ci="0" mb="0" cb="0"/><line nr="2727" mi="3" ci="0" mb="2" cb="0"/><line nr="2728" mi="5" ci="0" mb="0" cb="0"/><line nr="2731" mi="3" ci="0" mb="0" cb="0"/><line nr="2732" mi="3" ci="0" mb="2" cb="0"/><line nr="2733" mi="3" ci="0" mb="0" cb="0"/><line nr="2734" mi="3" ci="0" mb="2" cb="0"/><line nr="2735" mi="2" ci="0" mb="0" cb="0"/><line nr="2737" mi="3" ci="0" mb="0" cb="0"/><line nr="2738" mi="1" ci="0" mb="0" cb="0"/><line nr="2740" mi="3" ci="0" mb="0" cb="0"/><line nr="2741" mi="7" ci="0" mb="2" cb="0"/><line nr="2761" mi="3" ci="0" mb="2" cb="0"/><line nr="2762" mi="2" ci="0" mb="0" cb="0"/><line nr="2765" mi="3" ci="0" mb="0" cb="0"/><line nr="2766" mi="3" ci="0" mb="0" cb="0"/><line nr="2768" mi="3" ci="0" mb="0" cb="0"/><line nr="2769" mi="3" ci="0" mb="2" cb="0"/><line nr="2770" mi="3" ci="0" mb="0" cb="0"/><line nr="2771" mi="3" ci="0" mb="2" cb="0"/><line nr="2772" mi="2" ci="0" mb="0" cb="0"/><line nr="2774" mi="3" ci="0" mb="0" cb="0"/><line nr="2775" mi="1" ci="0" mb="0" cb="0"/><line nr="2777" mi="3" ci="0" mb="0" cb="0"/><line nr="2778" mi="7" ci="0" mb="2" cb="0"/><line nr="2797" mi="3" ci="0" mb="2" cb="0"/><line nr="2798" mi="2" ci="0" mb="0" cb="0"/><line nr="2800" mi="3" ci="0" mb="0" cb="0"/><line nr="2801" mi="3" ci="0" mb="0" cb="0"/><line nr="2803" mi="3" ci="0" mb="0" cb="0"/><line nr="2804" mi="3" ci="0" mb="0" cb="0"/><line nr="2805" mi="8" ci="0" mb="6" cb="0"/><line nr="2806" mi="3" ci="0" mb="0" cb="0"/><line nr="2807" mi="4" ci="0" mb="0" cb="0"/><line nr="2809" mi="12" ci="0" mb="4" cb="0"/><line nr="2834" mi="4" ci="0" mb="2" cb="0"/><line nr="2835" mi="12" ci="0" mb="0" cb="0"/><line nr="2842" mi="2" ci="0" mb="2" cb="0"/><line nr="2843" mi="3" ci="0" mb="0" cb="0"/><line nr="2845" mi="2" ci="0" mb="0" cb="0"/><line nr="2846" mi="4" ci="0" mb="2" cb="0"/><line nr="2848" mi="10" ci="0" mb="0" cb="0"/><line nr="2849" mi="4" ci="0" mb="2" cb="0"/><line nr="2850" mi="1" ci="0" mb="0" cb="0"/><line nr="2852" mi="4" ci="0" mb="0" cb="0"/><line nr="2853" mi="1" ci="0" mb="0" cb="0"/><line nr="2854" mi="4" ci="0" mb="0" cb="0"/><line nr="2870" mi="4" ci="0" mb="2" cb="0"/><line nr="2871" mi="12" ci="0" mb="0" cb="0"/><line nr="2873" mi="6" ci="0" mb="0" cb="0"/><line nr="2874" mi="2" ci="0" mb="0" cb="0"/><line nr="2875" mi="4" ci="0" mb="2" cb="0"/><line nr="2876" mi="4" ci="0" mb="0" cb="0"/><line nr="2877" mi="7" ci="0" mb="0" cb="0"/><line nr="2878" mi="4" ci="0" mb="0" cb="0"/><line nr="2879" mi="3" ci="0" mb="2" cb="0"/><line nr="2880" mi="1" ci="0" mb="0" cb="0"/><line nr="2882" mi="5" ci="0" mb="0" cb="0"/><line nr="2883" mi="1" ci="0" mb="0" cb="0"/><line nr="2884" mi="4" ci="0" mb="0" cb="0"/><line nr="2909" mi="4" ci="0" mb="2" cb="0"/><line nr="2910" mi="12" ci="0" mb="0" cb="0"/><line nr="2917" mi="2" ci="0" mb="2" cb="0"/><line nr="2918" mi="3" ci="0" mb="0" cb="0"/><line nr="2920" mi="2" ci="0" mb="0" cb="0"/><line nr="2921" mi="4" ci="0" mb="2" cb="0"/><line nr="2923" mi="10" ci="0" mb="0" cb="0"/><line nr="2924" mi="4" ci="0" mb="2" cb="0"/><line nr="2925" mi="1" ci="0" mb="0" cb="0"/><line nr="2927" mi="4" ci="0" mb="0" cb="0"/><line nr="2928" mi="1" ci="0" mb="0" cb="0"/><line nr="2929" mi="4" ci="0" mb="0" cb="0"/><line nr="2952" mi="4" ci="0" mb="2" cb="0"/><line nr="2953" mi="12" ci="0" mb="0" cb="0"/><line nr="2955" mi="4" ci="0" mb="0" cb="0"/><line nr="2956" mi="4" ci="0" mb="2" cb="0"/><line nr="2957" mi="16" ci="0" mb="0" cb="0"/><line nr="2959" mi="1" ci="0" mb="0" cb="0"/><line nr="2972" mi="4" ci="0" mb="2" cb="0"/><line nr="2973" mi="12" ci="0" mb="0" cb="0"/><line nr="2975" mi="4" ci="0" mb="0" cb="0"/><line nr="2976" mi="4" ci="0" mb="2" cb="0"/><line nr="2977" mi="16" ci="0" mb="0" cb="0"/><line nr="2979" mi="1" ci="0" mb="0" cb="0"/><line nr="3001" mi="4" ci="0" mb="0" cb="0"/><line nr="3002" mi="4" ci="0" mb="2" cb="0"/><line nr="3003" mi="16" ci="0" mb="0" cb="0"/><line nr="3005" mi="1" ci="0" mb="0" cb="0"/><line nr="3024" mi="2" ci="0" mb="2" cb="0"/><line nr="3025" mi="12" ci="0" mb="0" cb="0"/><line nr="3027" mi="2" ci="0" mb="0" cb="0"/><line nr="3028" mi="2" ci="0" mb="2" cb="0"/><line nr="3029" mi="4" ci="0" mb="0" cb="0"/><line nr="3030" mi="8" ci="0" mb="0" cb="0"/><line nr="3031" mi="3" ci="0" mb="2" cb="0"/><line nr="3032" mi="1" ci="0" mb="0" cb="0"/><line nr="3034" mi="4" ci="0" mb="0" cb="0"/><line nr="3035" mi="1" ci="0" mb="0" cb="0"/><line nr="3036" mi="4" ci="0" mb="0" cb="0"/><line nr="3052" mi="7" ci="0" mb="0" cb="0"/><line nr="3071" mi="2" ci="0" mb="2" cb="0"/><line nr="3072" mi="12" ci="0" mb="0" cb="0"/><line nr="3074" mi="2" ci="0" mb="0" cb="0"/><line nr="3075" mi="2" ci="0" mb="2" cb="0"/><line nr="3076" mi="4" ci="0" mb="0" cb="0"/><line nr="3077" mi="8" ci="0" mb="0" cb="0"/><line nr="3078" mi="3" ci="0" mb="2" cb="0"/><line nr="3079" mi="1" ci="0" mb="0" cb="0"/><line nr="3081" mi="4" ci="0" mb="0" cb="0"/><line nr="3082" mi="1" ci="0" mb="0" cb="0"/><line nr="3083" mi="4" ci="0" mb="0" cb="0"/><line nr="3099" mi="7" ci="0" mb="0" cb="0"/><line nr="3116" mi="0" ci="3" mb="0" cb="0"/><line nr="3117" mi="0" ci="3" mb="0" cb="2"/><line nr="3118" mi="0" ci="4" mb="0" cb="0"/><line nr="3119" mi="0" ci="3" mb="1" cb="1"/><line nr="3120" mi="1" ci="0" mb="0" cb="0"/><line nr="3122" mi="0" ci="1" mb="0" cb="0"/><line nr="3123" mi="0" ci="5" mb="0" cb="0"/><line nr="3143" mi="6" ci="0" mb="0" cb="0"/><line nr="3144" mi="3" ci="0" mb="2" cb="0"/><line nr="3145" mi="16" ci="0" mb="0" cb="0"/><line nr="3147" mi="1" ci="0" mb="0" cb="0"/><line nr="3163" mi="6" ci="0" mb="0" cb="0"/><line nr="3164" mi="1" ci="0" mb="0" cb="0"/><line nr="3183" mi="6" ci="0" mb="0" cb="0"/><line nr="3184" mi="3" ci="0" mb="2" cb="0"/><line nr="3185" mi="16" ci="0" mb="0" cb="0"/><line nr="3187" mi="1" ci="0" mb="0" cb="0"/><line nr="3203" mi="6" ci="0" mb="0" cb="0"/><line nr="3204" mi="1" ci="0" mb="0" cb="0"/><line nr="3221" mi="3" ci="0" mb="0" cb="0"/><line nr="3222" mi="6" ci="0" mb="0" cb="0"/><line nr="3223" mi="2" ci="0" mb="0" cb="0"/><line nr="3239" mi="3" ci="0" mb="0" cb="0"/><line nr="3240" mi="4" ci="0" mb="0" cb="0"/><line nr="3241" mi="3" ci="0" mb="2" cb="0"/><line nr="3242" mi="16" ci="0" mb="0" cb="0"/><line nr="3244" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1778" covered="50"/><counter type="BRANCH" missed="222" covered="4"/><counter type="LINE" missed="435" covered="15"/><counter type="COMPLEXITY" missed="240" covered="4"/><counter type="METHOD" missed="128" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ByteOrderMark.java"><line nr="36" mi="19" ci="0" mb="0" cb="0"/><line nr="39" mi="15" ci="0" mb="0" cb="0"/><line nr="42" mi="15" ci="0" mb="0" cb="0"/><line nr="48" mi="23" ci="0" mb="0" cb="0"/><line nr="54" mi="24" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="4" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="4" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="8" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="9" ci="0" mb="2" cb="0"/><line nr="124" mi="8" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="3" ci="0" mb="2" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="6" ci="0" mb="2" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="9" ci="0" mb="2" cb="0"/><line nr="146" mi="8" ci="0" mb="2" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="17" ci="0" mb="2" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="6" ci="0" mb="0" cb="0"/><line nr="177" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="5" ci="0" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="0" cb="0"/><line nr="180" mi="9" ci="0" mb="2" cb="0"/><line nr="181" mi="2" ci="0" mb="2" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="11" ci="0" mb="0" cb="0"/><line nr="187" mi="4" ci="0" mb="0" cb="0"/><line nr="188" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="295" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="46" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ByteOrderParser.java"><line nr="56" mi="5" ci="0" mb="2" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="20" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LineIterator.java"><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="2" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="2" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="2" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="2" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="2" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="2" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="2" cb="0"/><line nr="145" mi="5" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="2" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="177" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="2" cb="0"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="1" ci="0" mb="0" cb="0"/><line nr="197" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="117" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FileDeleteStrategy.java"><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="4" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="7" ci="0" mb="4" cb="0"/><line nr="93" mi="12" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="12" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="73" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="HexDump.java"><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="6" ci="0" mb="4" cb="0"/><line nr="77" mi="17" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="2" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="8" ci="0" mb="2" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="2" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="6" ci="0" mb="0" cb="0"/><line nr="94" mi="7" ci="0" mb="2" cb="0"/><line nr="95" mi="3" ci="0" mb="2" cb="0"/><line nr="96" mi="9" ci="0" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="7" ci="0" mb="2" cb="0"/><line nr="103" mi="14" ci="0" mb="4" cb="0"/><line nr="104" mi="10" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="67" ci="0" mb="0" cb="0"/><line nr="128" mi="36" ci="0" mb="0" cb="0"/><line nr="141" mi="7" ci="0" mb="2" cb="0"/><line nr="142" mi="11" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="7" ci="0" mb="2" cb="0"/><line nr="157" mi="14" ci="0" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="301" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="39" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CopyUtils.java"><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="5" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="157" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="5" ci="0" mb="0" cb="0"/><line nr="176" mi="4" ci="0" mb="0" cb="0"/><line nr="177" mi="1" ci="0" mb="0" cb="0"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="197" mi="2" ci="0" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="7" ci="0" mb="2" cb="0"/><line nr="200" mi="5" ci="0" mb="0" cb="0"/><line nr="201" mi="5" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="221" mi="3" ci="0" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="0" cb="0"/><line nr="223" mi="2" ci="0" mb="0" cb="0"/><line nr="224" mi="7" ci="0" mb="2" cb="0"/><line nr="225" mi="5" ci="0" mb="0" cb="0"/><line nr="226" mi="5" ci="0" mb="0" cb="0"/><line nr="228" mi="2" ci="0" mb="0" cb="0"/><line nr="250" mi="6" ci="0" mb="0" cb="0"/><line nr="251" mi="4" ci="0" mb="0" cb="0"/><line nr="252" mi="1" ci="0" mb="0" cb="0"/><line nr="269" mi="6" ci="0" mb="0" cb="0"/><line nr="270" mi="4" ci="0" mb="0" cb="0"/><line nr="271" mi="1" ci="0" mb="0" cb="0"/><line nr="293" mi="6" ci="0" mb="0" cb="0"/><line nr="294" mi="4" ci="0" mb="0" cb="0"/><line nr="297" mi="2" ci="0" mb="0" cb="0"/><line nr="298" mi="1" ci="0" mb="0" cb="0"/><line nr="316" mi="6" ci="0" mb="0" cb="0"/><line nr="317" mi="4" ci="0" mb="0" cb="0"/><line nr="320" mi="2" ci="0" mb="0" cb="0"/><line nr="321" mi="1" ci="0" mb="0" cb="0"/><line nr="342" mi="5" ci="0" mb="0" cb="0"/><line nr="344" mi="6" ci="0" mb="0" cb="0"/><line nr="345" mi="4" ci="0" mb="0" cb="0"/><line nr="348" mi="2" ci="0" mb="0" cb="0"/><line nr="349" mi="1" ci="0" mb="0" cb="0"/><line nr="368" mi="5" ci="0" mb="0" cb="0"/><line nr="369" mi="6" ci="0" mb="0" cb="0"/><line nr="370" mi="4" ci="0" mb="0" cb="0"/><line nr="373" mi="2" ci="0" mb="0" cb="0"/><line nr="374" mi="1" ci="0" mb="0" cb="0"/><line nr="388" mi="3" ci="0" mb="0" cb="0"/><line nr="389" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="166" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="49" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ThreadMonitor.java"><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="2" cb="0"/><line nr="69" mi="6" ci="0" mb="0" cb="0"/><line nr="70" mi="7" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="2" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="2" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IOCase.java"><line nr="36" mi="16" ci="0" mb="0" cb="0"/><line nr="41" mi="8" ci="0" mb="0" cb="0"/><line nr="46" mi="8" ci="0" mb="0" cb="0"/><line nr="60" mi="12" ci="0" mb="2" cb="0"/><line nr="80" mi="16" ci="0" mb="2" cb="0"/><line nr="82" mi="5" ci="0" mb="2" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="12" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="4" ci="0" mb="4" cb="0"/><line nr="145" mi="5" ci="0" mb="0" cb="0"/><line nr="147" mi="11" ci="0" mb="2" cb="0"/><line nr="162" mi="4" ci="0" mb="4" cb="0"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="165" mi="11" ci="0" mb="2" cb="0"/><line nr="180" mi="14" ci="0" mb="2" cb="0"/><line nr="195" mi="3" ci="0" mb="0" cb="0"/><line nr="196" mi="16" ci="0" mb="2" cb="0"/><line nr="215" mi="6" ci="0" mb="0" cb="0"/><line nr="216" mi="3" ci="0" mb="2" cb="0"/><line nr="217" mi="7" ci="0" mb="2" cb="0"/><line nr="218" mi="6" ci="0" mb="2" cb="0"/><line nr="219" mi="2" ci="0" mb="0" cb="0"/><line nr="223" mi="2" ci="0" mb="0" cb="0"/><line nr="239" mi="14" ci="0" mb="2" cb="0"/><line nr="250" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="216" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="9477" covered="227"/><counter type="BRANCH" missed="1198" covered="25"/><counter type="LINE" missed="2038" covered="69"/><counter type="COMPLEXITY" missed="1052" covered="18"/><counter type="METHOD" missed="442" covered="15"/><counter type="CLASS" missed="21" covered="3"/></package><package name="com/milaboratory/core/mutations"><class name="com/milaboratory/core/mutations/Mutation$1" sourcefilename="Mutation.java"><method name="&lt;init&gt;" desc="()V" line="203"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(II)I" line="206"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/IO$AAMutationsDeserializer" sourcefilename="IO.java"><method name="deserialize" desc="(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/milaboratory/core/mutations/Mutations;" line="128"><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/IO$JsonMutationsDeserializer" sourcefilename="IO.java"><method name="&lt;init&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserialize" desc="(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/milaboratory/core/mutations/Mutations;" line="66"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createContextual" desc="(Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonDeserializer;" line="73"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/MutationsBuilder" sourcefilename="MutationsBuilder.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;Z[II)V" line="29"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;Z)V" line="29"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)I" line="49"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(II)V" line="57"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLast" desc="()I" line="61"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeLast" desc="()V" line="65"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureInternalCapacity" desc="(I)V" line="69"><counter type="INSTRUCTION" missed="9" covered="52"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureCapacity" desc="(I)Lcom/milaboratory/core/mutations/MutationsBuilder;" line="84"><counter type="INSTRUCTION" missed="16" covered="16"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAndDestroy" desc="()Lcom/milaboratory/core/mutations/Mutations;" line="98"><counter type="INSTRUCTION" missed="37" covered="65"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="3" covered="13"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Lcom/milaboratory/core/mutations/Mutations;)Lcom/milaboratory/core/mutations/MutationsBuilder;" line="122"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Lcom/milaboratory/core/mutations/MutationsBuilder;)Lcom/milaboratory/core/mutations/MutationsBuilder;" line="127"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(Lcom/milaboratory/core/mutations/Mutations;II)Lcom/milaboratory/core/mutations/MutationsBuilder;" line="136"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="([I)Lcom/milaboratory/core/mutations/MutationsBuilder;" line="144"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(I)Lcom/milaboratory/core/mutations/MutationsBuilder;" line="151"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendSubstitution" desc="(III)Lcom/milaboratory/core/mutations/MutationsBuilder;" line="157"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendDeletion" desc="(II)Lcom/milaboratory/core/mutations/MutationsBuilder;" line="161"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendInsertion" desc="(II)Lcom/milaboratory/core/mutations/MutationsBuilder;" line="165"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendInsertion" desc="(ILcom/milaboratory/core/sequence/Sequence;)Lcom/milaboratory/core/mutations/MutationsBuilder;" line="169"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendDeletion" desc="(IILcom/milaboratory/core/sequence/Sequence;)Lcom/milaboratory/core/mutations/MutationsBuilder;" line="176"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverseRange" desc="(II)Lcom/milaboratory/core/mutations/MutationsBuilder;" line="183"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/milaboratory/core/mutations/MutationsBuilder;" line="188"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="196"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="241" covered="256"/><counter type="BRANCH" missed="20" covered="30"/><counter type="LINE" missed="37" covered="57"/><counter type="COMPLEXITY" missed="23" covered="27"/><counter type="METHOD" missed="9" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/MutationType" sourcefilename="MutationType.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;II)V" line="26"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeFromRaw" desc="(I)Lcom/milaboratory/core/mutations/MutationType;" line="38"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="(I)Lcom/milaboratory/core/mutations/MutationType;" line="48"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="77"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/IO$MutationsSerializer" sourcefilename="IO.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Lcom/milaboratory/primitivio/PrimitivO;Lcom/milaboratory/core/mutations/Mutations;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Lcom/milaboratory/primitivio/PrimitivI;)Lcom/milaboratory/core/mutations/Mutations;" line="47"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReference" desc="()Z" line="53"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handlesReference" desc="()Z" line="58"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/CoverageCounter$1" sourcefilename="CoverageCounter.java"><method name="&lt;init&gt;" desc="(I)V" line="44"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="delta" desc="(I)J" line="47"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/mutations/MutationsUtil" sourcefilename="MutationsUtil.java"><method name="mutate" desc="(Lcom/milaboratory/core/sequence/NSequenceWithQuality;Lcom/milaboratory/core/mutations/Mutations;)Lcom/milaboratory/core/sequence/NSequenceWithQuality;" line="45"><counter type="INSTRUCTION" missed="57" covered="143"/><counter type="BRANCH" missed="6" covered="12"/><counter type="LINE" missed="5" covered="29"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shiftIndelsAtHomopolymers" desc="(Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/mutations/Mutations;)Lcom/milaboratory/core/mutations/Mutations;" line="100"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shiftIndelsAtHomopolymers" desc="(Lcom/milaboratory/core/sequence/Sequence;ILcom/milaboratory/core/mutations/Mutations;)Lcom/milaboratory/core/mutations/Mutations;" line="112"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shiftIndelsAtHomopolymers" desc="(Lcom/milaboratory/core/sequence/Sequence;[I)V" line="125"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shiftIndelsAtHomopolymers" desc="(Lcom/milaboratory/core/sequence/Sequence;I[I)V" line="137"><counter type="INSTRUCTION" missed="13" covered="64"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="check" desc="(Lcom/milaboratory/core/mutations/Mutations;)Z" line="161"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="check" desc="([I)Z" line="166"><counter type="INSTRUCTION" missed="6" covered="74"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSorted" desc="([I)Z" line="182"><counter type="INSTRUCTION" missed="2" covered="30"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCompatibleWithSequence" desc="(Lcom/milaboratory/core/sequence/Sequence;[I)Z" line="195"><counter type="INSTRUCTION" missed="4" covered="40"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assertCompatibleWithSequence" desc="(Lcom/milaboratory/core/sequence/Sequence;[I)V" line="207"><counter type="INSTRUCTION" missed="153" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMutationPatternStringForAlphabet" desc="(Lcom/milaboratory/core/sequence/Alphabet;)Ljava/lang/String;" line="225"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMutationPatternForAlphabet" desc="(Lcom/milaboratory/core/sequence/Alphabet;)Ljava/util/regex/Pattern;" line="239"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="([ILcom/milaboratory/core/sequence/Alphabet;)Ljava/lang/String;" line="260"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="([ILcom/milaboratory/core/sequence/Alphabet;Ljava/lang/String;)Ljava/lang/String;" line="278"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encodeFixed" desc="([ILcom/milaboratory/core/sequence/Alphabet;)Ljava/lang/String;" line="293"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decode" desc="(Ljava/lang/String;Lcom/milaboratory/core/sequence/Alphabet;)[I" line="308"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="btopDecode" desc="(Ljava/lang/String;Lcom/milaboratory/core/sequence/Alphabet;)[I" line="340"><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPositiveInteger" desc="(Ljava/lang/String;)Z" line="361"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nt2aa" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/mutations/Mutations;Lcom/milaboratory/core/sequence/TranslationParameters;)Lcom/milaboratory/core/mutations/Mutations;" line="373"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nt2aa" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/mutations/Mutations;Lcom/milaboratory/core/sequence/TranslationParameters;I)Lcom/milaboratory/core/mutations/Mutations;" line="379"><counter type="INSTRUCTION" missed="1" covered="174"/><counter type="BRANCH" missed="3" covered="31"/><counter type="LINE" missed="1" covered="36"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nt2IndividualAA" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/mutations/Mutations;Lcom/milaboratory/core/sequence/TranslationParameters;)[I" line="437"><counter type="INSTRUCTION" missed="2" covered="43"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nt2aaWithMapping" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/mutations/Mutations;Lcom/milaboratory/core/sequence/TranslationParameters;I)Lcom/milaboratory/core/mutations/MutationsUtil$MutationsWitMapping;" line="453"><counter type="INSTRUCTION" missed="3" covered="131"/><counter type="BRANCH" missed="4" covered="24"/><counter type="LINE" missed="2" covered="30"/><counter type="COMPLEXITY" missed="4" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nt2aaDetailed" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/mutations/Mutations;Lcom/milaboratory/core/sequence/TranslationParameters;I)[Lcom/milaboratory/core/mutations/MutationsUtil$MutationNt2AADescriptor;" line="520"><counter type="INSTRUCTION" missed="4" covered="52"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="300" covered="1098"/><counter type="BRANCH" missed="44" covered="142"/><counter type="LINE" missed="40" covered="216"/><counter type="COMPLEXITY" missed="41" covered="78"/><counter type="METHOD" missed="4" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/Mutations" sourcefilename="Mutations.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;Lcom/milaboratory/util/IntArrayList;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;Ljava/lang/String;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;[I)V" line="49"><counter type="INSTRUCTION" missed="5" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;[IZ)V" line="56"><counter type="INSTRUCTION" missed="8" covered="18"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="64"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAlphabet" desc="()Lcom/milaboratory/core/sequence/Alphabet;" line="68"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMutation" desc="(I)I" line="72"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRAWMutations" desc="()[I" line="76"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="80"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPositionByIndex" desc="(I)I" line="84"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFromAsCodeByIndex" desc="(I)B" line="88"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getToAsCodeByIndex" desc="(I)B" line="92"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFromAsSymbolByIndex" desc="(I)C" line="96"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getToAsSymbolByIndex" desc="(I)C" line="100"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRawTypeByIndex" desc="(I)I" line="104"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeByIndex" desc="(I)Lcom/milaboratory/core/mutations/MutationType;" line="108"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCompatibleWith" desc="(Lcom/milaboratory/core/sequence/Sequence;)Z" line="112"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mutate" desc="(Lcom/milaboratory/core/sequence/Sequence;)Lcom/milaboratory/core/sequence/Sequence;" line="116"><counter type="INSTRUCTION" missed="50" covered="116"/><counter type="BRANCH" missed="3" covered="18"/><counter type="LINE" missed="4" covered="26"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToSeq2Position" desc="(I)I" line="173"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="9"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToSeq1Position" desc="(I)I" line="208"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="0" covered="11"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLengthDelta" desc="()I" line="249"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="concat" desc="(Lcom/milaboratory/core/mutations/Mutations;)Lcom/milaboratory/core/mutations/Mutations;" line="268"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="combineWith" desc="(Lcom/milaboratory/core/mutations/Mutations;)Lcom/milaboratory/core/mutations/Mutations;" line="282"><counter type="INSTRUCTION" missed="13" covered="250"/><counter type="BRANCH" missed="4" covered="32"/><counter type="LINE" missed="3" covered="33"/><counter type="COMPLEXITY" missed="4" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="move" desc="(I)Lcom/milaboratory/core/mutations/Mutations;" line="352"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractRelativeMutationsForRange" desc="(Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/mutations/Mutations;" line="368"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractRelativeMutationsForRange" desc="(II)Lcom/milaboratory/core/mutations/Mutations;" line="390"><counter type="INSTRUCTION" missed="5" covered="84"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractAbsoluteMutationsForRange" desc="(Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/mutations/Mutations;" line="435"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractAbsoluteMutationsForRange" desc="(II)Lcom/milaboratory/core/mutations/Mutations;" line="453"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeMutationsInRanges" desc="([Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/mutations/Mutations;" line="481"><counter type="INSTRUCTION" missed="5" covered="42"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeMutationsInRange" desc="(Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/mutations/Mutations;" line="500"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeMutationsInRange" desc="(II)Lcom/milaboratory/core/mutations/Mutations;" line="519"><counter type="INSTRUCTION" missed="9" covered="99"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndexRange" desc="(II)J" line="556"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invert" desc="()Lcom/milaboratory/core/mutations/Mutations;" line="610"><counter type="INSTRUCTION" missed="2" covered="74"/><counter type="BRANCH" missed="1" covered="6"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countOfIndels" desc="()I" line="640"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="countOf" desc="(Lcom/milaboratory/core/mutations/MutationType;)I" line="652"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRange" desc="(II)Lcom/milaboratory/core/mutations/Mutations;" line="667"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="firsMutationPosition" desc="()I" line="671"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastMutationPosition" desc="()I" line="678"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMutatedRange" desc="()Lcom/milaboratory/core/Range;" line="685"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="692"><counter type="INSTRUCTION" missed="2" covered="57"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="705"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Ljava/lang/String;)Ljava/lang/String;" line="709"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeFixed" desc="()Ljava/lang/String;" line="713"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decodeNuc" desc="(Ljava/lang/String;)Lcom/milaboratory/core/mutations/Mutations;" line="717"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decodeAA" desc="(Ljava/lang/String;)Lcom/milaboratory/core/mutations/Mutations;" line="721"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decode" desc="(Ljava/lang/String;Lcom/milaboratory/core/sequence/Alphabet;)Lcom/milaboratory/core/mutations/Mutations;" line="725"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="730"><counter type="INSTRUCTION" missed="4" covered="26"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="739"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pabs" desc="(I)I" line="755"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="firstMutationWithPosition" desc="(I)I" line="759"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="firstMutationWithPosition" desc="(III)I" line="763"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendInCombine" desc="(Lcom/milaboratory/util/IntArrayList;I)V" line="787"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cfs" desc="(Lcom/milaboratory/util/IntArrayList;III)V" line="812"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="empty" desc="(Lcom/milaboratory/core/sequence/Alphabet;)Lcom/milaboratory/core/mutations/Mutations;" line="830"><counter type="INSTRUCTION" missed="7" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="312" covered="1378"/><counter type="BRANCH" missed="51" covered="180"/><counter type="LINE" missed="54" covered="265"/><counter type="COMPLEXITY" missed="52" covered="123"/><counter type="METHOD" missed="12" covered="43"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/SequenceWeighter" sourcefilename="SequenceWeighter.java"/><class name="com/milaboratory/core/mutations/MutationsCounter$Filter" sourcefilename="MutationsCounter.java"/><class name="com/milaboratory/core/mutations/MutationsUtil$MutationNt2AADescriptor" sourcefilename="MutationsUtil.java"><method name="&lt;init&gt;" desc="(III)V" line="538"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="546"><counter type="INSTRUCTION" missed="2" covered="32"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="44"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/CoverageCounter" sourcefilename="CoverageCounter.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/Range;)V" line="14"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(II)V" line="17"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="aggregate" desc="(Lcom/milaboratory/core/Range;Lcom/milaboratory/core/mutations/CoverageCounter$Provider;)V" line="24"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="aggregate" desc="(Lcom/milaboratory/core/Range;I)V" line="32"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="count" desc="(I)J" line="36"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="constantDelta" desc="(I)Lcom/milaboratory/core/mutations/CoverageCounter$Provider;" line="44"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/mutations/IO$NMutationsSerializer" sourcefilename="IO.java"><method name="serialize" desc="(Lcom/milaboratory/core/mutations/Mutations;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V" line="121"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/MutationsCounter$IntArrayHashingStrategy" sourcefilename="MutationsCounter.java"><method name="computeHashCode" desc="([I)I" line="115"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="([I[I)Z" line="120"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/IO" sourcefilename="IO.java"><method name="&lt;clinit&gt;" desc="()V" line="103"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/IO$NMutationsDeserializer" sourcefilename="IO.java"><method name="deserialize" desc="(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/milaboratory/core/mutations/Mutations;" line="111"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/IO$JsonMutationsSerializer" sourcefilename="IO.java"><method name="&lt;init&gt;" desc="()V" line="84"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serialize" desc="(Lcom/milaboratory/core/mutations/Mutations;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createContextual" desc="(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonSerializer;" line="92"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/MutationsEnumerator" sourcefilename="MutationsEnumerator.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/mutations/Mutations;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOffset" desc="()I" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLength" desc="()I" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lcom/milaboratory/core/mutations/MutationType;" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Z" line="30"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="103"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/MutationsCounter" sourcefilename="MutationsCounter.java"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="adjust" desc="(Lcom/milaboratory/core/mutations/Mutations;I)V" line="44"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="adjust" desc="(Lcom/milaboratory/core/mutations/Mutations;Lcom/milaboratory/core/mutations/MutationsEnumerator;I)V" line="50"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="adjust" desc="([IIII)V" line="54"><counter type="INSTRUCTION" missed="4" covered="24"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="(Lcom/milaboratory/core/sequence/Alphabet;Lcom/milaboratory/core/mutations/MutationsCounter$Filter;)Lcom/milaboratory/core/mutations/Mutations;" line="63"><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="adjustSingleMutation" desc="(II)V" line="91"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="adjustLongInsert" desc="([II)V" line="95"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextId" desc="()I" line="109"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="202"/><counter type="BRANCH" missed="4" covered="22"/><counter type="LINE" missed="0" covered="48"/><counter type="COMPLEXITY" missed="4" covered="18"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/Mutation" sourcefilename="Mutation.java"><method name="createInsertion" desc="(II)I" line="41"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createDeletion" desc="(II)I" line="45"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSubstitution" desc="(III)I" line="49"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createMutation" desc="(Lcom/milaboratory/core/mutations/MutationType;II)I" line="53"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMutation" desc="(III)I" line="57"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMutation" desc="(Lcom/milaboratory/core/mutations/MutationType;III)I" line="61"><counter type="INSTRUCTION" missed="4" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createMutation" desc="(IIII)I" line="68"><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPosition" desc="(I)I" line="75"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFrom" desc="(I)B" line="79"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFromSymbol" desc="(ILcom/milaboratory/core/sequence/Alphabet;)C" line="83"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTo" desc="(I)B" line="87"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getToSymbol" desc="(ILcom/milaboratory/core/sequence/Alphabet;)C" line="91"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRawTypeCode" desc="(I)I" line="102"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="(I)Lcom/milaboratory/core/mutations/MutationType;" line="106"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSubstitution" desc="(I)Z" line="119"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInsertion" desc="(I)Z" line="123"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDeletion" desc="(I)Z" line="127"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInDel" desc="(I)Z" line="131"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="move" desc="(II)I" line="136"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="(Lcom/milaboratory/core/sequence/Alphabet;I)Ljava/lang/String;" line="140"><counter type="INSTRUCTION" missed="2" covered="77"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(ILcom/milaboratory/core/sequence/Alphabet;)Ljava/lang/String;" line="177"><counter type="INSTRUCTION" missed="5" covered="57"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encodeFixed" desc="(ILcom/milaboratory/core/sequence/Alphabet;)Ljava/lang/String;" line="189"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="203"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="102" covered="267"/><counter type="BRANCH" missed="10" covered="22"/><counter type="LINE" missed="13" covered="34"/><counter type="COMPLEXITY" missed="13" covered="30"/><counter type="METHOD" missed="4" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/MutationsUtil$MutationsWitMapping" sourcefilename="MutationsUtil.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/mutations/Mutations;[I)V" line="556"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/CoverageCounter$Provider" sourcefilename="CoverageCounter.java"/><class name="com/milaboratory/core/mutations/IO$AAMutationsSerializer" sourcefilename="IO.java"><method name="serialize" desc="(Lcom/milaboratory/core/mutations/Mutations;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V" line="138"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/MutationConsensusBuilder" sourcefilename="MutationConsensusBuilder.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/Range;)V" line="14"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="aggregate" desc="(Lcom/milaboratory/core/alignment/Alignment;Lcom/milaboratory/core/mutations/CoverageCounter$Provider;)V" line="20"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="MutationsEnumerator.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="9" mb="0" cb="2"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="7" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="8" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="2"/><line nr="37" mi="0" ci="9" mb="0" cb="2"/><line nr="38" mi="0" ci="10" mb="0" cb="0"/><line nr="39" mi="0" ci="18" mb="0" cb="2"/><line nr="40" mi="0" ci="2" mb="0" cb="2"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="103"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MutationsBuilder.java"><line nr="26" mi="2" ci="6" mb="1" cb="1"/><line nr="29" mi="3" ci="3" mb="0" cb="0"/><line nr="30" mi="3" ci="3" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="1" cb="1"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="4"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="2"/><line nr="74" mi="4" ci="5" mb="2" cb="2"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="2"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="2"/><line nr="80" mi="0" ci="16" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="1" cb="1"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="1" cb="1"/><line nr="87" mi="0" ci="3" mb="1" cb="1"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="2" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="2"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="2"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="2"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="2"/><line nr="112" mi="0" ci="8" mb="0" cb="2"/><line nr="113" mi="0" ci="11" mb="1" cb="1"/><line nr="114" mi="14" ci="0" mb="0" cb="0"/><line nr="115" mi="9" ci="0" mb="0" cb="0"/><line nr="116" mi="14" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="8" mb="0" cb="0"/><line nr="122" mi="0" ci="7" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="2" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="7" ci="0" mb="0" cb="0"/><line nr="130" mi="10" ci="0" mb="0" cb="0"/><line nr="131" mi="7" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="2"/><line nr="138" mi="0" ci="9" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="7" ci="0" mb="0" cb="0"/><line nr="145" mi="16" ci="0" mb="2" cb="0"/><line nr="146" mi="11" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="11" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="7" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="6" mb="0" cb="0"/><line nr="169" mi="8" ci="0" mb="0" cb="0"/><line nr="170" mi="8" ci="0" mb="2" cb="0"/><line nr="171" mi="8" ci="0" mb="0" cb="0"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="176" mi="7" ci="0" mb="0" cb="0"/><line nr="177" mi="7" ci="0" mb="2" cb="0"/><line nr="178" mi="12" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="14" ci="0" mb="2" cb="0"/><line nr="190" mi="5" ci="0" mb="0" cb="0"/><line nr="196" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="241" covered="256"/><counter type="BRANCH" missed="20" covered="30"/><counter type="LINE" missed="37" covered="57"/><counter type="COMPLEXITY" missed="23" covered="27"/><counter type="METHOD" missed="9" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MutationsUtil.java"><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="1" cb="3"/><line nr="55" mi="0" ci="13" mb="1" cb="3"/><line nr="56" mi="0" ci="4" mb="1" cb="3"/><line nr="58" mi="0" ci="9" mb="1" cb="1"/><line nr="59" mi="20" ci="0" mb="0" cb="0"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="9" mb="1" cb="1"/><line nr="69" mi="20" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="1" cb="1"/><line nr="78" mi="7" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="15" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="89" mi="0" ci="10" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="8" mb="0" cb="2"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="1" cb="1"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="1" cb="1"/><line nr="144" mi="4" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="7" mb="1" cb="1"/><line nr="146" mi="0" ci="10" mb="1" cb="3"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="1" cb="1"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="7" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="8" mb="0" cb="2"/><line nr="167" mi="0" ci="2" mb="0" cb="2"/><line nr="168" mi="0" ci="17" mb="0" cb="4"/><line nr="169" mi="0" ci="8" mb="1" cb="1"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="17" mb="0" cb="4"/><line nr="172" mi="0" ci="6" mb="1" cb="1"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="0" ci="14" mb="1" cb="3"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="2"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="8" mb="0" cb="2"/><line nr="187" mi="0" ci="8" mb="1" cb="1"/><line nr="188" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="16" mb="0" cb="2"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="2"/><line nr="198" mi="0" ci="6" mb="1" cb="1"/><line nr="199" mi="2" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="10" mb="2" cb="2"/><line nr="201" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="16" ci="0" mb="2" cb="0"/><line nr="208" mi="3" ci="0" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="210" mi="6" ci="0" mb="0" cb="0"/><line nr="211" mi="3" ci="0" mb="2" cb="0"/><line nr="212" mi="6" ci="0" mb="2" cb="0"/><line nr="213" mi="33" ci="0" mb="0" cb="0"/><line nr="216" mi="4" ci="0" mb="2" cb="0"/><line nr="217" mi="33" ci="0" mb="0" cb="0"/><line nr="218" mi="6" ci="0" mb="2" cb="0"/><line nr="219" mi="39" ci="0" mb="0" cb="0"/><line nr="222" mi="1" ci="0" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><line nr="227" mi="0" ci="12" mb="0" cb="2"/><line nr="228" mi="0" ci="6" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="10" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="8" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="8" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="2"/><line nr="241" mi="0" ci="9" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="260" mi="0" ci="5" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="0" cb="2"/><line nr="279" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="16" mb="0" cb="2"/><line nr="284" mi="0" ci="6" mb="0" cb="0"/><line nr="285" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="0" ci="10" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="0"/><line nr="293" mi="4" ci="0" mb="0" cb="0"/><line nr="294" mi="16" ci="0" mb="2" cb="0"/><line nr="295" mi="6" ci="0" mb="0" cb="0"/><line nr="296" mi="4" ci="0" mb="0" cb="0"/><line nr="298" mi="3" ci="0" mb="2" cb="0"/><line nr="299" mi="7" ci="0" mb="0" cb="0"/><line nr="300" mi="3" ci="0" mb="0" cb="0"/><line nr="308" mi="0" ci="5" mb="0" cb="0"/><line nr="309" mi="0" ci="4" mb="0" cb="0"/><line nr="310" mi="0" ci="3" mb="0" cb="2"/><line nr="311" mi="0" ci="6" mb="1" cb="3"/><line nr="314" mi="0" ci="10" mb="0" cb="0"/><line nr="315" mi="0" ci="7" mb="0" cb="0"/><line nr="316" mi="0" ci="4" mb="0" cb="0"/><line nr="317" mi="0" ci="1" mb="0" cb="0"/><line nr="319" mi="0" ci="10" mb="0" cb="0"/><line nr="320" mi="0" ci="4" mb="0" cb="0"/><line nr="321" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="10" mb="0" cb="0"/><line nr="324" mi="0" ci="4" mb="0" cb="0"/><line nr="325" mi="0" ci="1" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="0" cb="0"/><line nr="331" mi="0" ci="4" mb="0" cb="0"/><line nr="340" mi="0" ci="4" mb="0" cb="0"/><line nr="341" mi="0" ci="4" mb="0" cb="0"/><line nr="342" mi="0" ci="2" mb="0" cb="0"/><line nr="343" mi="0" ci="3" mb="0" cb="2"/><line nr="344" mi="0" ci="3" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="0" cb="2"/><line nr="346" mi="0" ci="6" mb="0" cb="0"/><line nr="347" mi="0" ci="5" mb="0" cb="2"/><line nr="348" mi="0" ci="9" mb="0" cb="0"/><line nr="349" mi="0" ci="2" mb="0" cb="0"/><line nr="350" mi="0" ci="5" mb="0" cb="2"/><line nr="351" mi="0" ci="10" mb="0" cb="0"/><line nr="353" mi="0" ci="14" mb="0" cb="0"/><line nr="354" mi="0" ci="1" mb="0" cb="0"/><line nr="356" mi="0" ci="1" mb="0" cb="0"/><line nr="357" mi="0" ci="3" mb="0" cb="0"/><line nr="361" mi="0" ci="3" mb="1" cb="1"/><line nr="362" mi="2" ci="0" mb="0" cb="0"/><line nr="363" mi="0" ci="10" mb="0" cb="2"/><line nr="364" mi="0" ci="4" mb="0" cb="0"/><line nr="365" mi="0" ci="6" mb="0" cb="4"/><line nr="366" mi="0" ci="2" mb="0" cb="0"/><line nr="368" mi="0" ci="2" mb="0" cb="0"/><line nr="373" mi="0" ci="6" mb="0" cb="0"/><line nr="379" mi="0" ci="4" mb="0" cb="0"/><line nr="380" mi="0" ci="5" mb="0" cb="0"/><line nr="381" mi="0" ci="4" mb="0" cb="0"/><line nr="382" mi="0" ci="5" mb="0" cb="0"/><line nr="384" mi="0" ci="2" mb="0" cb="0"/><line nr="386" mi="0" ci="2" mb="0" cb="0"/><line nr="387" mi="0" ci="8" mb="0" cb="2"/><line nr="388" mi="0" ci="4" mb="0" cb="2"/><line nr="389" mi="0" ci="6" mb="0" cb="0"/><line nr="390" mi="0" ci="4" mb="0" cb="0"/><line nr="391" mi="0" ci="2" mb="0" cb="2"/><line nr="392" mi="0" ci="5" mb="0" cb="0"/><line nr="394" mi="0" ci="2" mb="0" cb="2"/><line nr="395" mi="0" ci="3" mb="0" cb="0"/><line nr="397" mi="0" ci="6" mb="0" cb="0"/><line nr="398" mi="0" ci="2" mb="1" cb="1"/><line nr="399" mi="1" ci="0" mb="0" cb="0"/><line nr="402" mi="0" ci="3" mb="0" cb="2"/><line nr="403" mi="0" ci="4" mb="0" cb="2"/><line nr="404" mi="0" ci="2" mb="0" cb="0"/><line nr="406" mi="0" ci="3" mb="0" cb="0"/><line nr="407" mi="0" ci="1" mb="0" cb="0"/><line nr="409" mi="0" ci="3" mb="0" cb="0"/><line nr="412" mi="0" ci="3" mb="0" cb="2"/><line nr="413" mi="0" ci="4" mb="1" cb="1"/><line nr="414" mi="0" ci="8" mb="0" cb="0"/><line nr="416" mi="0" ci="5" mb="0" cb="2"/><line nr="417" mi="0" ci="9" mb="0" cb="2"/><line nr="420" mi="0" ci="16" mb="1" cb="5"/><line nr="421" mi="0" ci="5" mb="0" cb="2"/><line nr="422" mi="0" ci="2" mb="0" cb="0"/><line nr="423" mi="0" ci="9" mb="0" cb="0"/><line nr="425" mi="0" ci="7" mb="0" cb="0"/><line nr="427" mi="0" ci="11" mb="0" cb="4"/><line nr="428" mi="0" ci="10" mb="0" cb="0"/><line nr="429" mi="0" ci="2" mb="0" cb="0"/><line nr="432" mi="0" ci="3" mb="0" cb="0"/><line nr="437" mi="0" ci="4" mb="0" cb="0"/><line nr="438" mi="0" ci="8" mb="0" cb="2"/><line nr="439" mi="0" ci="5" mb="0" cb="2"/><line nr="440" mi="0" ci="5" mb="0" cb="0"/><line nr="442" mi="0" ci="6" mb="0" cb="0"/><line nr="443" mi="0" ci="4" mb="0" cb="0"/><line nr="444" mi="2" ci="9" mb="1" cb="1"/><line nr="447" mi="0" ci="2" mb="0" cb="0"/><line nr="453" mi="0" ci="6" mb="0" cb="0"/><line nr="455" mi="0" ci="2" mb="1" cb="1"/><line nr="456" mi="2" ci="0" mb="0" cb="0"/><line nr="458" mi="0" ci="4" mb="0" cb="0"/><line nr="459" mi="0" ci="3" mb="0" cb="0"/><line nr="462" mi="0" ci="4" mb="0" cb="0"/><line nr="463" mi="0" ci="5" mb="0" cb="0"/><line nr="464" mi="0" ci="4" mb="0" cb="0"/><line nr="466" mi="0" ci="7" mb="0" cb="0"/><line nr="467" mi="0" ci="4" mb="0" cb="0"/><line nr="469" mi="0" ci="7" mb="0" cb="0"/><line nr="470" mi="0" ci="4" mb="0" cb="0"/><line nr="471" mi="0" ci="3" mb="0" cb="0"/><line nr="473" mi="0" ci="3" mb="0" cb="2"/><line nr="474" mi="0" ci="3" mb="0" cb="2"/><line nr="475" mi="0" ci="1" mb="0" cb="0"/><line nr="477" mi="0" ci="3" mb="0" cb="0"/><line nr="478" mi="0" ci="4" mb="0" cb="0"/><line nr="479" mi="0" ci="3" mb="0" cb="0"/><line nr="480" mi="0" ci="4" mb="0" cb="0"/><line nr="482" mi="0" ci="4" mb="1" cb="3"/><line nr="483" mi="1" ci="0" mb="0" cb="0"/><line nr="485" mi="0" ci="2" mb="1" cb="1"/><line nr="488" mi="0" ci="13" mb="0" cb="4"/><line nr="489" mi="0" ci="8" mb="0" cb="4"/><line nr="490" mi="0" ci="2" mb="0" cb="2"/><line nr="491" mi="0" ci="6" mb="0" cb="0"/><line nr="493" mi="0" ci="8" mb="0" cb="2"/><line nr="494" mi="0" ci="3" mb="0" cb="2"/><line nr="495" mi="0" ci="4" mb="1" cb="1"/><line nr="496" mi="0" ci="1" mb="0" cb="0"/><line nr="498" mi="0" ci="6" mb="0" cb="0"/><line nr="520" mi="0" ci="6" mb="0" cb="0"/><line nr="521" mi="0" ci="2" mb="1" cb="1"/><line nr="522" mi="2" ci="0" mb="0" cb="0"/><line nr="523" mi="0" ci="5" mb="0" cb="0"/><line nr="524" mi="0" ci="4" mb="0" cb="0"/><line nr="525" mi="0" ci="8" mb="0" cb="2"/><line nr="526" mi="2" ci="22" mb="1" cb="1"/><line nr="528" mi="0" ci="3" mb="0" cb="0"/><line nr="530" mi="0" ci="2" mb="0" cb="0"/><line nr="538" mi="0" ci="2" mb="0" cb="0"/><line nr="539" mi="0" ci="3" mb="0" cb="0"/><line nr="540" mi="0" ci="3" mb="0" cb="0"/><line nr="541" mi="0" ci="3" mb="0" cb="0"/><line nr="542" mi="0" ci="1" mb="0" cb="0"/><line nr="546" mi="0" ci="19" mb="0" cb="2"/><line nr="547" mi="2" ci="10" mb="1" cb="1"/><line nr="548" mi="0" ci="3" mb="0" cb="0"/><line nr="556" mi="0" ci="2" mb="0" cb="0"/><line nr="557" mi="0" ci="3" mb="0" cb="0"/><line nr="558" mi="0" ci="3" mb="0" cb="0"/><line nr="559" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="302" covered="1151"/><counter type="BRANCH" missed="45" covered="145"/><counter type="LINE" missed="40" covered="228"/><counter type="COMPLEXITY" missed="42" covered="82"/><counter type="METHOD" missed="4" covered="23"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="MutationType.java"><line nr="20" mi="0" ci="15" mb="0" cb="0"/><line nr="21" mi="0" ci="7" mb="0" cb="0"/><line nr="22" mi="0" ci="7" mb="0" cb="0"/><line nr="23" mi="0" ci="7" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="16" mb="0" cb="2"/><line nr="34" mi="0" ci="7" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="6" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="77"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MutationConsensusBuilder.java"><line nr="14" mi="2" ci="0" mb="0" cb="0"/><line nr="15" mi="6" ci="0" mb="0" cb="0"/><line nr="16" mi="5" ci="0" mb="0" cb="0"/><line nr="17" mi="1" ci="0" mb="0" cb="0"/><line nr="20" mi="6" ci="0" mb="0" cb="0"/><line nr="21" mi="6" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="2" cb="0"/><line nr="23" mi="9" ci="0" mb="0" cb="0"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Mutations.java"><line nr="33" mi="2" ci="5" mb="1" cb="1"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="1" cb="1"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="4" ci="4" mb="2" cb="2"/><line nr="58" mi="4" ci="5" mb="2" cb="2"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="8" mb="0" cb="2"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="7" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="7" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="17" mb="0" cb="2"/><line nr="118" mi="0" ci="4" mb="0" cb="3"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="9" mb="0" cb="4"/><line nr="131" mi="0" ci="15" mb="0" cb="4"/><line nr="132" mi="0" ci="4" mb="1" cb="3"/><line nr="134" mi="0" ci="9" mb="1" cb="1"/><line nr="135" mi="20" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="7" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="9" mb="1" cb="1"/><line nr="144" mi="20" ci="0" mb="0" cb="0"/><line nr="145" mi="5" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="7" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="17" mb="0" cb="2"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="2"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="3"/><line nr="183" mi="0" ci="3" mb="0" cb="2"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="186" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="1" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="6" mb="0" cb="0"/><line nr="211" mi="0" ci="17" mb="0" cb="2"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="3"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="218" mi="0" ci="1" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="1" mb="0" cb="0"/><line nr="222" mi="0" ci="1" mb="0" cb="0"/><line nr="226" mi="0" ci="6" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="4"/><line nr="229" mi="0" ci="8" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="2"/><line nr="232" mi="0" ci="6" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="239" mi="0" ci="6" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="0" cb="0"/><line nr="251" mi="0" ci="17" mb="0" cb="2"/><line nr="252" mi="0" ci="4" mb="0" cb="3"/><line nr="254" mi="0" ci="1" mb="0" cb="0"/><line nr="255" mi="0" ci="1" mb="0" cb="0"/><line nr="257" mi="0" ci="1" mb="0" cb="0"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="8" ci="0" mb="0" cb="0"/><line nr="269" mi="6" ci="0" mb="0" cb="0"/><line nr="270" mi="2" ci="0" mb="0" cb="0"/><line nr="271" mi="1" ci="0" mb="0" cb="0"/><line nr="272" mi="1" ci="0" mb="0" cb="0"/><line nr="282" mi="0" ci="11" mb="0" cb="0"/><line nr="285" mi="0" ci="6" mb="0" cb="0"/><line nr="287" mi="0" ci="9" mb="0" cb="2"/><line nr="289" mi="0" ci="6" mb="0" cb="0"/><line nr="291" mi="0" ci="9" mb="0" cb="2"/><line nr="292" mi="0" ci="9" mb="0" cb="2"/><line nr="293" mi="0" ci="9" mb="0" cb="2"/><line nr="294" mi="0" ci="3" mb="0" cb="2"/><line nr="295" mi="0" ci="11" mb="0" cb="0"/><line nr="297" mi="0" ci="6" mb="1" cb="3"/><line nr="299" mi="0" ci="14" mb="0" cb="4"/><line nr="300" mi="0" ci="11" mb="1" cb="1"/><line nr="301" mi="4" ci="0" mb="0" cb="0"/><line nr="303" mi="0" ci="6" mb="0" cb="2"/><line nr="304" mi="0" ci="15" mb="0" cb="0"/><line nr="306" mi="0" ci="2" mb="0" cb="0"/><line nr="308" mi="0" ci="6" mb="0" cb="0"/><line nr="309" mi="0" ci="1" mb="0" cb="0"/><line nr="310" mi="0" ci="1" mb="0" cb="0"/><line nr="312" mi="0" ci="14" mb="0" cb="4"/><line nr="314" mi="0" ci="11" mb="1" cb="1"/><line nr="315" mi="4" ci="0" mb="0" cb="0"/><line nr="317" mi="0" ci="6" mb="0" cb="2"/><line nr="318" mi="0" ci="11" mb="0" cb="2"/><line nr="319" mi="0" ci="16" mb="0" cb="0"/><line nr="320" mi="0" ci="6" mb="1" cb="1"/><line nr="321" mi="0" ci="10" mb="0" cb="0"/><line nr="323" mi="5" ci="0" mb="0" cb="0"/><line nr="325" mi="0" ci="2" mb="0" cb="0"/><line nr="328" mi="0" ci="6" mb="0" cb="0"/><line nr="330" mi="0" ci="1" mb="0" cb="0"/><line nr="332" mi="0" ci="1" mb="0" cb="0"/><line nr="333" mi="0" ci="6" mb="0" cb="0"/><line nr="339" mi="0" ci="5" mb="0" cb="2"/><line nr="340" mi="0" ci="11" mb="0" cb="0"/><line nr="342" mi="0" ci="9" mb="0" cb="0"/><line nr="352" mi="0" ci="5" mb="0" cb="0"/><line nr="353" mi="0" ci="9" mb="0" cb="2"/><line nr="354" mi="0" ci="9" mb="0" cb="0"/><line nr="355" mi="0" ci="8" mb="0" cb="0"/><line nr="368" mi="3" ci="0" mb="2" cb="0"/><line nr="369" mi="5" ci="0" mb="0" cb="0"/><line nr="371" mi="7" ci="0" mb="0" cb="0"/><line nr="390" mi="0" ci="3" mb="1" cb="1"/><line nr="391" mi="5" ci="0" mb="0" cb="0"/><line nr="393" mi="0" ci="5" mb="0" cb="0"/><line nr="396" mi="0" ci="4" mb="0" cb="2"/><line nr="397" mi="0" ci="4" mb="0" cb="0"/><line nr="400" mi="0" ci="5" mb="0" cb="0"/><line nr="401" mi="0" ci="5" mb="0" cb="0"/><line nr="404" mi="0" ci="9" mb="0" cb="6"/><line nr="405" mi="0" ci="2" mb="0" cb="0"/><line nr="408" mi="0" ci="5" mb="0" cb="0"/><line nr="412" mi="0" ci="3" mb="0" cb="2"/><line nr="413" mi="0" ci="3" mb="0" cb="0"/><line nr="415" mi="0" ci="5" mb="0" cb="0"/><line nr="418" mi="0" ci="14" mb="0" cb="2"/><line nr="419" mi="0" ci="9" mb="0" cb="0"/><line nr="421" mi="0" ci="8" mb="0" cb="0"/><line nr="435" mi="7" ci="0" mb="0" cb="0"/><line nr="453" mi="3" ci="0" mb="2" cb="0"/><line nr="454" mi="5" ci="0" mb="0" cb="0"/><line nr="456" mi="5" ci="0" mb="0" cb="0"/><line nr="459" mi="4" ci="0" mb="2" cb="0"/><line nr="460" mi="4" ci="0" mb="0" cb="0"/><line nr="463" mi="5" ci="0" mb="0" cb="0"/><line nr="464" mi="5" ci="0" mb="0" cb="0"/><line nr="467" mi="9" ci="0" mb="6" cb="0"/><line nr="468" mi="2" ci="0" mb="0" cb="0"/><line nr="470" mi="12" ci="0" mb="0" cb="0"/><line nr="481" mi="0" ci="2" mb="0" cb="0"/><line nr="482" mi="0" ci="2" mb="0" cb="0"/><line nr="483" mi="0" ci="2" mb="0" cb="0"/><line nr="484" mi="0" ci="16" mb="0" cb="2"/><line nr="485" mi="0" ci="4" mb="1" cb="1"/><line nr="486" mi="5" ci="0" mb="0" cb="0"/><line nr="487" mi="0" ci="6" mb="0" cb="0"/><line nr="488" mi="0" ci="5" mb="0" cb="0"/><line nr="489" mi="0" ci="3" mb="0" cb="0"/><line nr="491" mi="0" ci="2" mb="0" cb="0"/><line nr="500" mi="0" ci="7" mb="0" cb="0"/><line nr="519" mi="0" ci="3" mb="1" cb="1"/><line nr="520" mi="5" ci="0" mb="0" cb="0"/><line nr="523" mi="0" ci="3" mb="0" cb="2"/><line nr="524" mi="0" ci="2" mb="0" cb="0"/><line nr="527" mi="0" ci="5" mb="0" cb="0"/><line nr="530" mi="0" ci="5" mb="0" cb="0"/><line nr="531" mi="0" ci="5" mb="0" cb="0"/><line nr="533" mi="0" ci="7" mb="1" cb="3"/><line nr="534" mi="0" ci="4" mb="0" cb="0"/><line nr="537" mi="0" ci="9" mb="0" cb="0"/><line nr="540" mi="0" ci="6" mb="0" cb="0"/><line nr="543" mi="0" ci="2" mb="0" cb="0"/><line nr="544" mi="0" ci="7" mb="0" cb="2"/><line nr="545" mi="0" ci="8" mb="0" cb="0"/><line nr="546" mi="0" ci="9" mb="0" cb="2"/><line nr="547" mi="0" ci="10" mb="0" cb="0"/><line nr="549" mi="4" ci="6" mb="2" cb="2"/><line nr="551" mi="0" ci="8" mb="0" cb="0"/><line nr="556" mi="0" ci="3" mb="0" cb="2"/><line nr="557" mi="0" ci="2" mb="0" cb="0"/><line nr="560" mi="0" ci="4" mb="0" cb="0"/><line nr="561" mi="0" ci="2" mb="0" cb="2"/><line nr="562" mi="0" ci="5" mb="0" cb="0"/><line nr="566" mi="0" ci="21" mb="0" cb="6"/><line nr="569" mi="0" ci="2" mb="0" cb="0"/><line nr="572" mi="0" ci="8" mb="0" cb="0"/><line nr="573" mi="0" ci="2" mb="0" cb="2"/><line nr="574" mi="0" ci="5" mb="0" cb="0"/><line nr="576" mi="0" ci="21" mb="0" cb="6"/><line nr="579" mi="0" ci="2" mb="0" cb="0"/><line nr="582" mi="0" ci="8" mb="0" cb="0"/><line nr="610" mi="0" ci="4" mb="1" cb="1"/><line nr="611" mi="2" ci="0" mb="0" cb="0"/><line nr="613" mi="0" ci="5" mb="0" cb="0"/><line nr="614" mi="0" ci="2" mb="0" cb="0"/><line nr="615" mi="0" ci="9" mb="0" cb="2"/><line nr="616" mi="0" ci="6" mb="0" cb="0"/><line nr="617" mi="0" ci="6" mb="0" cb="0"/><line nr="618" mi="0" ci="6" mb="0" cb="0"/><line nr="619" mi="0" ci="6" mb="0" cb="0"/><line nr="620" mi="0" ci="2" mb="0" cb="3"/><line nr="622" mi="0" ci="1" mb="0" cb="0"/><line nr="623" mi="0" ci="2" mb="0" cb="0"/><line nr="624" mi="0" ci="1" mb="0" cb="0"/><line nr="625" mi="0" ci="1" mb="0" cb="0"/><line nr="627" mi="0" ci="1" mb="0" cb="0"/><line nr="628" mi="0" ci="2" mb="0" cb="0"/><line nr="629" mi="0" ci="1" mb="0" cb="0"/><line nr="630" mi="0" ci="1" mb="0" cb="0"/><line nr="634" mi="0" ci="10" mb="0" cb="0"/><line nr="636" mi="0" ci="8" mb="0" cb="0"/><line nr="640" mi="2" ci="0" mb="0" cb="0"/><line nr="641" mi="17" ci="0" mb="2" cb="0"/><line nr="642" mi="4" ci="0" mb="2" cb="0"/><line nr="645" mi="1" ci="0" mb="0" cb="0"/><line nr="648" mi="2" ci="0" mb="0" cb="0"/><line nr="652" mi="2" ci="0" mb="0" cb="0"/><line nr="653" mi="17" ci="0" mb="2" cb="0"/><line nr="654" mi="6" ci="0" mb="2" cb="0"/><line nr="655" mi="1" ci="0" mb="0" cb="0"/><line nr="656" mi="2" ci="0" mb="0" cb="0"/><line nr="667" mi="0" ci="11" mb="0" cb="0"/><line nr="671" mi="0" ci="3" mb="1" cb="1"/><line nr="672" mi="2" ci="0" mb="0" cb="0"/><line nr="674" mi="0" ci="6" mb="0" cb="0"/><line nr="678" mi="0" ci="3" mb="1" cb="1"/><line nr="679" mi="2" ci="0" mb="0" cb="0"/><line nr="681" mi="0" ci="10" mb="0" cb="0"/><line nr="685" mi="0" ci="3" mb="1" cb="1"/><line nr="686" mi="2" ci="0" mb="0" cb="0"/><line nr="687" mi="0" ci="8" mb="0" cb="0"/><line nr="692" mi="0" ci="4" mb="1" cb="1"/><line nr="693" mi="2" ci="0" mb="0" cb="0"/><line nr="695" mi="0" ci="4" mb="0" cb="0"/><line nr="696" mi="0" ci="4" mb="0" cb="0"/><line nr="697" mi="0" ci="17" mb="0" cb="2"/><line nr="698" mi="0" ci="14" mb="0" cb="0"/><line nr="699" mi="0" ci="7" mb="0" cb="0"/><line nr="700" mi="0" ci="4" mb="0" cb="0"/><line nr="701" mi="0" ci="3" mb="0" cb="0"/><line nr="705" mi="0" ci="6" mb="0" cb="0"/><line nr="709" mi="7" ci="0" mb="0" cb="0"/><line nr="713" mi="6" ci="0" mb="0" cb="0"/><line nr="717" mi="0" ci="4" mb="0" cb="0"/><line nr="721" mi="4" ci="0" mb="0" cb="0"/><line nr="725" mi="0" ci="9" mb="0" cb="0"/><line nr="730" mi="0" ci="5" mb="0" cb="2"/><line nr="731" mi="2" ci="7" mb="2" cb="2"/><line nr="732" mi="0" ci="3" mb="0" cb="0"/><line nr="733" mi="2" ci="5" mb="1" cb="1"/><line nr="734" mi="0" ci="6" mb="0" cb="0"/><line nr="739" mi="4" ci="0" mb="0" cb="0"/><line nr="740" mi="8" ci="0" mb="0" cb="0"/><line nr="741" mi="2" ci="0" mb="0" cb="0"/><line nr="755" mi="8" ci="0" mb="2" cb="0"/><line nr="759" mi="0" ci="8" mb="0" cb="0"/><line nr="763" mi="0" ci="2" mb="0" cb="0"/><line nr="764" mi="0" ci="4" mb="0" cb="0"/><line nr="766" mi="0" ci="3" mb="0" cb="2"/><line nr="767" mi="0" ci="6" mb="0" cb="0"/><line nr="768" mi="0" ci="7" mb="0" cb="0"/><line nr="770" mi="0" ci="3" mb="0" cb="2"/><line nr="771" mi="0" ci="5" mb="0" cb="0"/><line nr="772" mi="0" ci="3" mb="0" cb="2"/><line nr="773" mi="0" ci="5" mb="0" cb="0"/><line nr="777" mi="0" ci="12" mb="0" cb="4"/><line nr="778" mi="0" ci="2" mb="0" cb="0"/><line nr="780" mi="0" ci="2" mb="0" cb="0"/><line nr="782" mi="0" ci="1" mb="0" cb="0"/><line nr="783" mi="0" ci="5" mb="0" cb="0"/><line nr="787" mi="0" ci="6" mb="0" cb="4"/><line nr="788" mi="0" ci="4" mb="0" cb="0"/><line nr="790" mi="0" ci="3" mb="0" cb="0"/><line nr="792" mi="0" ci="3" mb="0" cb="2"/><line nr="793" mi="0" ci="4" mb="0" cb="0"/><line nr="796" mi="0" ci="3" mb="0" cb="0"/><line nr="797" mi="0" ci="3" mb="0" cb="0"/><line nr="799" mi="0" ci="4" mb="0" cb="2"/><line nr="800" mi="0" ci="5" mb="1" cb="3"/><line nr="801" mi="0" ci="8" mb="0" cb="0"/><line nr="802" mi="0" ci="6" mb="0" cb="2"/><line nr="803" mi="0" ci="5" mb="0" cb="4"/><line nr="804" mi="0" ci="8" mb="0" cb="0"/><line nr="806" mi="0" ci="3" mb="0" cb="0"/><line nr="809" mi="0" ci="1" mb="0" cb="0"/><line nr="812" mi="0" ci="3" mb="0" cb="2"/><line nr="813" mi="0" ci="4" mb="0" cb="0"/><line nr="815" mi="0" ci="10" mb="0" cb="0"/><line nr="816" mi="0" ci="1" mb="0" cb="0"/><line nr="821" mi="0" ci="7" mb="0" cb="0"/><line nr="826" mi="0" ci="8" mb="0" cb="0"/><line nr="830" mi="0" ci="3" mb="0" cb="2"/><line nr="831" mi="0" ci="2" mb="0" cb="0"/><line nr="832" mi="0" ci="3" mb="1" cb="1"/><line nr="833" mi="0" ci="2" mb="0" cb="0"/><line nr="835" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="312" covered="1378"/><counter type="BRANCH" missed="51" covered="180"/><counter type="LINE" missed="54" covered="265"/><counter type="COMPLEXITY" missed="52" covered="123"/><counter type="METHOD" missed="12" covered="43"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MutationsCounter.java"><line nr="30" mi="2" ci="6" mb="1" cb="1"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="2"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="9" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="4" ci="4" mb="2" cb="2"/><line nr="55" mi="0" ci="3" mb="0" cb="2"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="9" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="2"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="2"/><line nr="71" mi="0" ci="5" mb="0" cb="2"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="1" cb="1"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="2"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="10" mb="0" cb="2"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="9" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="2"/><line nr="96" mi="0" ci="12" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="2"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="9" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="209"/><counter type="BRANCH" missed="4" covered="22"/><counter type="LINE" missed="0" covered="50"/><counter type="COMPLEXITY" missed="4" covered="20"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="IO.java"><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="10" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="2"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="9" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="2"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="2"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="16" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="2"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="9" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="2"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="2"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="10" mb="1" cb="3"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="10" mb="2" cb="2"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="191"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="2" covered="45"/><counter type="COMPLEXITY" missed="4" covered="22"/><counter type="METHOD" missed="1" covered="15"/><counter type="CLASS" missed="0" covered="8"/></sourcefile><sourcefile name="CoverageCounter.java"><line nr="14" mi="6" ci="0" mb="0" cb="0"/><line nr="15" mi="1" ci="0" mb="0" cb="0"/><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="6" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><line nr="24" mi="6" ci="0" mb="0" cb="0"/><line nr="25" mi="8" ci="0" mb="4" cb="0"/><line nr="26" mi="4" ci="0" mb="0" cb="0"/><line nr="27" mi="7" ci="0" mb="2" cb="0"/><line nr="28" mi="10" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="5" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="11" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="Mutation.java"><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="57" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="1" cb="1"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="2" cb="2"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="12" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="9" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="1" cb="3"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="9" mb="0" cb="2"/><line nr="123" mi="0" ci="9" mb="0" cb="2"/><line nr="127" mi="0" ci="9" mb="0" cb="2"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="10" mb="0" cb="4"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="1" cb="3"/><line nr="142" mi="0" ci="19" mb="0" cb="0"/><line nr="143" mi="0" ci="9" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="19" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="20" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="1" cb="3"/><line nr="179" mi="0" ci="21" mb="0" cb="0"/><line nr="181" mi="0" ci="16" mb="0" cb="0"/><line nr="183" mi="0" ci="16" mb="0" cb="0"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="4" cb="0"/><line nr="191" mi="21" ci="0" mb="0" cb="0"/><line nr="193" mi="18" ci="0" mb="0" cb="0"/><line nr="195" mi="16" ci="0" mb="0" cb="0"/><line nr="197" mi="5" ci="0" mb="0" cb="0"/><line nr="203" mi="0" ci="8" mb="0" cb="0"/><line nr="206" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="102" covered="282"/><counter type="BRANCH" missed="10" covered="22"/><counter type="LINE" missed="13" covered="35"/><counter type="COMPLEXITY" missed="13" covered="32"/><counter type="METHOD" missed="4" covered="21"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="SequenceWeighter.java"/><counter type="INSTRUCTION" missed="1102" covered="3647"/><counter type="BRANCH" missed="141" covered="428"/><counter type="LINE" missed="175" covered="712"/><counter type="COMPLEXITY" missed="153" covered="320"/><counter type="METHOD" missed="41" covered="137"/><counter type="CLASS" missed="3" covered="19"/></package><package name="com/milaboratory/core/io/sequence"><class name="com/milaboratory/core/io/sequence/SequenceReaderCloseable" sourcefilename="SequenceReaderCloseable.java"/><class name="com/milaboratory/core/io/sequence/SequenceWriter" sourcefilename="SequenceWriter.java"/><class name="com/milaboratory/core/io/sequence/MultiRead" sourcefilename="MultiRead.java"><method name="&lt;init&gt;" desc="([Lcom/milaboratory/core/io/sequence/SingleRead;)V" line="33"><counter type="INSTRUCTION" missed="10" covered="29"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberOfReads" desc="()I" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRead" desc="(I)Lcom/milaboratory/core/io/sequence/SingleRead;" line="50"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()J" line="55"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="60"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapReads" desc="(Ljava/util/function/Function;)Lcom/milaboratory/core/io/sequence/MultiRead;" line="65"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapReadsWithIndex" desc="(Lcom/milaboratory/core/sequence/quality/FunctionWithIndex;)Lcom/milaboratory/core/io/sequence/MultiRead;" line="74"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="82"><counter type="INSTRUCTION" missed="4" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="92"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapReadsWithIndex$2" desc="(I)[Lcom/milaboratory/core/io/sequence/SingleRead;" line="77"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapReadsWithIndex$1" desc="(Lcom/milaboratory/core/sequence/quality/FunctionWithIndex;I)Lcom/milaboratory/core/io/sequence/SingleRead;" line="76"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapReads$0" desc="(I)[Lcom/milaboratory/core/io/sequence/SingleRead;" line="68"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="65" covered="63"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="12" covered="14"/><counter type="COMPLEXITY" missed="12" covered="6"/><counter type="METHOD" missed="7" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/MultiReader" sourcefilename="MultiReader.java"><method name="&lt;init&gt;" desc="([Lcom/milaboratory/core/io/sequence/SingleReader;)V" line="20"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="take" desc="()Lcom/milaboratory/core/io/sequence/MultiRead;" line="25"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/io/sequence/AbstractMultiReader" sourcefilename="AbstractMultiReader.java"><method name="&lt;init&gt;" desc="([Lcom/milaboratory/core/io/sequence/SingleReader;)V" line="29"><counter type="INSTRUCTION" missed="7" covered="71"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="takeReads" desc="()[Lcom/milaboratory/core/io/sequence/SingleRead;" line="48"><counter type="INSTRUCTION" missed="5" covered="56"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="71"><counter type="INSTRUCTION" missed="5" covered="27"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProgress" desc="()D" line="87"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFinished" desc="()Z" line="103"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="91" covered="154"/><counter type="BRANCH" missed="15" covered="21"/><counter type="LINE" missed="21" covered="30"/><counter type="COMPLEXITY" missed="12" covered="11"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/PairedSequenceWriter" sourcefilename="PairedSequenceWriter.java"/><class name="com/milaboratory/core/io/sequence/PairedReader" sourcefilename="PairedReader.java"><method name="&lt;init&gt;" desc="([Lcom/milaboratory/core/io/sequence/SingleReader;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="take" desc="()Lcom/milaboratory/core/io/sequence/PairedRead;" line="28"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/AbstractSequenceReader" sourcefilename="AbstractSequenceReader.java"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberOfReads" desc="()J" line="25"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addOneRead" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="13"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/SingleReader" sourcefilename="SingleReader.java"/><class name="com/milaboratory/core/io/sequence/IO$SequenceReadSerializer" sourcefilename="IO.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Lcom/milaboratory/primitivio/PrimitivO;Lcom/milaboratory/core/io/sequence/SequenceRead;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Lcom/milaboratory/primitivio/PrimitivI;)Lcom/milaboratory/core/io/sequence/SequenceRead;" line="45"><counter type="INSTRUCTION" missed="5" covered="64"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReference" desc="()Z" line="66"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handlesReference" desc="()Z" line="71"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="118"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="29"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/IllegalFileFormatException" sourcefilename="IllegalFileFormatException.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="28"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/io/sequence/SingleSequenceWriter" sourcefilename="SingleSequenceWriter.java"/><class name="com/milaboratory/core/io/sequence/SingleReadImpl" sourcefilename="SingleReadImpl.java"><method name="&lt;init&gt;" desc="(JLcom/milaboratory/core/sequence/NSequenceWithQuality;Ljava/lang/String;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberOfReads" desc="()I" line="40"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRead" desc="(I)Lcom/milaboratory/core/io/sequence/SingleRead;" line="45"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getId" desc="()J" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getData" desc="()Lcom/milaboratory/core/sequence/NSequenceWithQuality;" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="67"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="72"><counter type="INSTRUCTION" missed="7" covered="32"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="85"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="93"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="76" covered="53"/><counter type="BRANCH" missed="10" covered="6"/><counter type="LINE" missed="11" covered="15"/><counter type="COMPLEXITY" missed="13" covered="5"/><counter type="METHOD" missed="5" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/PairedRead" sourcefilename="PairedRead.java"><method name="&lt;init&gt;" desc="([Lcom/milaboratory/core/io/sequence/SingleRead;)V" line="28"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getR1" desc="()Lcom/milaboratory/core/io/sequence/SingleRead;" line="34"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getR2" desc="()Lcom/milaboratory/core/io/sequence/SingleRead;" line="38"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapReads" desc="(Ljava/util/function/Function;)Lcom/milaboratory/core/io/sequence/PairedRead;" line="43"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapReadsWithIndex" desc="(Lcom/milaboratory/core/sequence/quality/FunctionWithIndex;)Lcom/milaboratory/core/io/sequence/PairedRead;" line="51"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="73" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="8" covered="5"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/SequenceReadUtil" sourcefilename="SequenceReadUtil.java"><method name="construct" desc="([Lcom/milaboratory/core/io/sequence/SingleRead;)Lcom/milaboratory/core/io/sequence/SequenceRead;" line="7"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setReadId" desc="(JLcom/milaboratory/core/io/sequence/SequenceRead;)Lcom/milaboratory/core/io/sequence/SequenceRead;" line="19"><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/io/sequence/SingleRead" sourcefilename="SingleRead.java"><method name="mapReads" desc="(Ljava/util/function/Function;)Lcom/milaboratory/core/io/sequence/SingleRead;" line="36"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapSequence" desc="(Ljava/util/function/Function;)Lcom/milaboratory/core/io/sequence/SingleRead;" line="40"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapReadsWithIndex" desc="(Lcom/milaboratory/core/sequence/quality/FunctionWithIndex;)Lcom/milaboratory/core/io/sequence/SingleRead;" line="48"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/io/sequence/SequenceReader" sourcefilename="SequenceReader.java"/><class name="com/milaboratory/core/io/sequence/SequenceRead" sourcefilename="SequenceRead.java"><method name="mapReads" desc="(Ljava/util/function/Function;)Lcom/milaboratory/core/io/sequence/SequenceRead;" line="37"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapReadsWithIndex" desc="(Lcom/milaboratory/core/sequence/quality/FunctionWithIndex;)Lcom/milaboratory/core/io/sequence/SequenceRead;" line="44"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapReadsWithIndex$2" desc="(I)[Lcom/milaboratory/core/io/sequence/SingleRead;" line="47"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapReadsWithIndex$1" desc="(Lcom/milaboratory/core/sequence/quality/FunctionWithIndex;I)Lcom/milaboratory/core/io/sequence/SingleRead;" line="46"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapReads$0" desc="(I)[Lcom/milaboratory/core/io/sequence/SingleRead;" line="40"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/io/sequence/SingleReadLazy" sourcefilename="SingleReadLazy.java"><method name="&lt;init&gt;" desc="(J[BISSSSZB)V" line="48"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J[BISSSSZBLcom/milaboratory/core/sequence/NSequenceWithQuality;Ljava/lang/String;)V" line="63"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQualityOffset" desc="()B" line="78"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setReadId" desc="(J)Lcom/milaboratory/core/io/sequence/SingleReadLazy;" line="82"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDescription" desc="()Ljava/lang/String;" line="88"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getData" desc="()Lcom/milaboratory/core/sequence/NSequenceWithQuality;" line="95"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createDescription" desc="()Ljava/lang/String;" line="101"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createNSequenceWithQuality" desc="()Lcom/milaboratory/core/sequence/NSequenceWithQuality;" line="106"><counter type="INSTRUCTION" missed="27" covered="22"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberOfReads" desc="()I" line="116"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRead" desc="(I)Lcom/milaboratory/core/io/sequence/SingleRead;" line="121"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getId" desc="()J" line="128"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="133"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="(Lcom/milaboratory/core/io/sequence/fastq/QualityFormat;J[BISSSSZ)Lcom/milaboratory/core/io/sequence/SingleReadLazy;" line="145"><counter type="INSTRUCTION" missed="5" covered="32"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="156"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="147" covered="121"/><counter type="BRANCH" missed="15" covered="7"/><counter type="LINE" missed="30" covered="26"/><counter type="COMPLEXITY" missed="14" covered="11"/><counter type="METHOD" missed="6" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/sequence/IO" sourcefilename="IO.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="IllegalFileFormatException.java"><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SequenceReaderCloseable.java"/><sourcefile name="SequenceReader.java"/><sourcefile name="SingleReadLazy.java"><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="25" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="2"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="2"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="11" mb="0" cb="0"/><line nr="106" mi="0" ci="17" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="26" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="2" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="2"/><line nr="146" mi="0" ci="13" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="1" cb="1"/><line nr="149" mi="0" ci="13" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="156" mi="5" ci="0" mb="2" cb="0"/><line nr="157" mi="4" ci="0" mb="2" cb="0"/><line nr="159" mi="3" ci="0" mb="2" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="162" mi="8" ci="0" mb="2" cb="0"/><line nr="163" mi="6" ci="0" mb="2" cb="0"/><line nr="164" mi="8" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="147" covered="121"/><counter type="BRANCH" missed="15" covered="7"/><counter type="LINE" missed="30" covered="26"/><counter type="COMPLEXITY" missed="14" covered="11"/><counter type="METHOD" missed="6" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SequenceRead.java"><line nr="37" mi="8" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="10" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MultiReader.java"><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="2" ci="0" mb="2" cb="0"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractMultiReader.java"><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="16" mb="0" cb="2"/><line nr="31" mi="0" ci="2" mb="1" cb="1"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="16" mb="0" cb="2"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="1" cb="1"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="9" mb="0" cb="2"/><line nr="41" mi="0" ci="8" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="2"/><line nr="52" mi="0" ci="9" mb="0" cb="0"/><line nr="53" mi="0" ci="10" mb="0" cb="2"/><line nr="54" mi="0" ci="10" mb="0" cb="2"/><line nr="57" mi="0" ci="2" mb="0" cb="2"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="1" cb="1"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="17" mb="0" cb="2"/><line nr="74" mi="0" ci="2" mb="1" cb="1"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="1" cb="1"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="2" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="17" ci="0" mb="2" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="2" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="7" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="2" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="17" ci="0" mb="2" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="91" covered="154"/><counter type="BRANCH" missed="15" covered="21"/><counter type="LINE" missed="21" covered="30"/><counter type="COMPLEXITY" missed="12" covered="11"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MultiRead.java"><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="1" cb="1"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="8" mb="0" cb="2"/><line nr="38" mi="0" ci="7" mb="1" cb="1"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="6" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="10" ci="0" mb="0" cb="0"/><line nr="77" mi="6" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="3" mb="1" cb="1"/><line nr="83" mi="2" ci="7" mb="2" cb="2"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="65" covered="63"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="12" covered="14"/><counter type="COMPLEXITY" missed="12" covered="6"/><counter type="METHOD" missed="7" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SingleReadImpl.java"><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="2" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="3" mb="1" cb="1"/><line nr="73" mi="2" ci="2" mb="1" cb="1"/><line nr="75" mi="0" ci="3" mb="1" cb="1"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="10" mb="1" cb="1"/><line nr="79" mi="0" ci="6" mb="1" cb="1"/><line nr="80" mi="1" ci="5" mb="1" cb="1"/><line nr="85" mi="9" ci="0" mb="0" cb="0"/><line nr="86" mi="8" ci="0" mb="0" cb="0"/><line nr="87" mi="13" ci="0" mb="2" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="22" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="76" covered="53"/><counter type="BRANCH" missed="10" covered="6"/><counter type="LINE" missed="11" covered="15"/><counter type="COMPLEXITY" missed="13" covered="5"/><counter type="METHOD" missed="5" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractSequenceReader.java"><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="13"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SequenceReadUtil.java"><line nr="7" mi="3" ci="0" mb="2" cb="0"/><line nr="8" mi="4" ci="0" mb="0" cb="0"/><line nr="10" mi="4" ci="0" mb="2" cb="0"/><line nr="11" mi="4" ci="0" mb="0" cb="0"/><line nr="12" mi="4" ci="0" mb="2" cb="0"/><line nr="13" mi="5" ci="0" mb="0" cb="0"/><line nr="15" mi="5" ci="0" mb="0" cb="0"/><line nr="19" mi="5" ci="0" mb="2" cb="0"/><line nr="20" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="2" cb="0"/><line nr="23" mi="5" ci="0" mb="0" cb="0"/><line nr="25" mi="4" ci="0" mb="2" cb="0"/><line nr="26" mi="4" ci="0" mb="0" cb="0"/><line nr="27" mi="9" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="8" ci="0" mb="2" cb="0"/><line nr="33" mi="9" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="2" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SingleSequenceWriter.java"/><sourcefile name="PairedSequenceWriter.java"/><sourcefile name="SingleReader.java"/><sourcefile name="PairedReader.java"><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="2"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SequenceWriter.java"/><sourcefile name="IO.java"><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="2"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="8" mb="0" cb="2"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="2"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="2"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="9" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="1" cb="1"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="118"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="2" covered="29"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="SingleRead.java"><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="2" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="9" ci="0" mb="0" cb="0"/><line nr="48" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PairedRead.java"><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="1" cb="1"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="12" ci="0" mb="0" cb="0"/><line nr="44" mi="10" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="13" ci="0" mb="0" cb="0"/><line nr="52" mi="11" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="15" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="73" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="8" covered="5"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="657" covered="556"/><counter type="BRANCH" missed="67" covered="53"/><counter type="LINE" missed="130" covered="129"/><counter type="COMPLEXITY" missed="82" covered="50"/><counter type="METHOD" missed="39" covered="33"/><counter type="CLASS" missed="6" covered="8"/></package><package name="com/milaboratory/cli"><class name="com/milaboratory/cli/AppVersionInfo" sourcefilename="AppVersionInfo.java"><method name="&lt;init&gt;" desc="(Ljava/util/HashMap;Ljava/util/HashMap;)V" line="39"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="(Ljava/util/HashMap;Ljava/util/HashMap;)V" line="46"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lcom/milaboratory/cli/AppVersionInfo;" line="56"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getComponentVersions" desc="()Ljava/util/Map;" line="63"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getComponentStringVersions" desc="()Ljava/util/Map;" line="67"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="72"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="81"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="112" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/ABaseCommand" sourcefilename="ABaseCommand.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="28"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requestHelp" desc="(Z)V" line="38"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="throwValidationException" desc="(Ljava/lang/String;Z)V" line="44"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="throwValidationException" desc="(Ljava/lang/String;)V" line="49"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="throwExecutionException" desc="(Ljava/lang/String;)V" line="54"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCommandLineArguments" desc="()Ljava/lang/String;" line="58"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/ActionParametersWithOutput" sourcefilename="ActionParametersWithOutput.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isForceOverwrite" desc="()Z" line="31"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="()V" line="36"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleExistenceOfOutputFile" desc="(Ljava/lang/String;)V" line="51"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/ACommandWithSmartOverwriteWithSingleInput" sourcefilename="ACommandWithSmartOverwriteWithSingleInput.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/milaboratory/cli/BinaryFileInfoExtractor;Lcom/milaboratory/cli/PipelineConfigurationReader;)V" line="26"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIn" desc="(Ljava/lang/String;)V" line="34"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOut" desc="(Ljava/lang/String;)V" line="39"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOutputFiles" desc="()Ljava/util/List;" line="44"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInputFiles" desc="()Ljava/util/List;" line="49"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInputFileInfo" desc="()Lcom/milaboratory/cli/BinaryFileInfo;" line="56"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/CommandMain$VersionProvider" sourcefilename="CommandMain.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVersion" desc="()[Ljava/lang/String;" line="49"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/ActionHelpProvider" sourcefilename="ActionHelpProvider.java"/><class name="com/milaboratory/cli/PipelineConfiguration$IO" sourcefilename="PipelineConfiguration.java"><method name="&lt;init&gt;" desc="()V" line="191"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Lcom/milaboratory/primitivio/PrimitivO;Lcom/milaboratory/cli/PipelineConfiguration;)V" line="194"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Lcom/milaboratory/primitivio/PrimitivI;)Lcom/milaboratory/cli/PipelineConfiguration;" line="199"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReference" desc="()Z" line="205"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handlesReference" desc="()Z" line="210"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/PipelineConfiguration$PipelineStep" sourcefilename="PipelineConfiguration.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/cli/AppVersionInfo;[Lcom/milaboratory/util/LightFileDescriptor;Lcom/milaboratory/cli/ActionConfiguration;)V" line="132"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compatibleWith" desc="(Lcom/milaboratory/cli/PipelineConfiguration$PipelineStep;)Z" line="140"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="148"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="158"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="101" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/JCommanderBasedMain" sourcefilename="JCommanderBasedMain.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;[Lcom/milaboratory/cli/Action;)V" line="28"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOutputStream" desc="(Ljava/io/PrintStream;)V" line="44"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefaultPrintStream" desc="()Ljava/io/PrintStream;" line="49"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCommandLineArguments" desc="()Ljava/lang/String;" line="54"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPrintStackTrace" desc="()Z" line="64"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPrintStackTrace" desc="(Z)V" line="68"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reg" desc="(Lcom/milaboratory/cli/Action;)V" line="72"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)Lcom/milaboratory/cli/JCommanderBasedMain$ProcessResult;" line="77"><counter type="INSTRUCTION" missed="198" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="49" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addCommand" desc="(Lcom/beust/jcommander/JCommander;Lcom/milaboratory/cli/Action;)V" line="165"><counter type="INSTRUCTION" missed="88" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="changeAnnotationValue" desc="(Ljava/lang/annotation/Annotation;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="213"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMainParameters" desc="()Lcom/milaboratory/cli/JCommanderBasedMain$MainParameters;" line="236"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printGlobalHelp" desc="()V" line="243"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printActionHelp" desc="(Lcom/beust/jcommander/JCommander;Lcom/milaboratory/cli/Action;)V" line="254"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printException" desc="(Ljava/lang/RuntimeException;Lcom/beust/jcommander/JCommander;Lcom/milaboratory/cli/Action;)V" line="268"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printDeprecationNotes" desc="(Lcom/beust/jcommander/JCommander;Lcom/milaboratory/cli/Action;)V" line="276"><counter type="INSTRUCTION" missed="148" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setVersionInfoCallback" desc="(Ljava/lang/Runnable;)V" line="325"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setVersionInfoCallback" desc="(Ljava/lang/Runnable;Ljava/lang/Runnable;)V" line="340"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeVersionInfoCallback" desc="()V" line="350"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="750" covered="0"/><counter type="BRANCH" missed="92" covered="0"/><counter type="LINE" missed="175" covered="0"/><counter type="COMPLEXITY" missed="65" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/ACommand" sourcefilename="ACommand.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="25"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="warn" desc="(Ljava/lang/String;)V" line="43"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printWarn" desc="(Ljava/lang/String;)V" line="55"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInputFiles" desc="()Ljava/util/List;" line="61"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOutputFiles" desc="()Ljava/util/List;" line="66"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="()V" line="71"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="()V" line="83"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="114" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/DeprecatedParameter" sourcefilename="DeprecatedParameter.java"/><class name="com/milaboratory/cli/AppVersionInfo$OutputType" sourcefilename="AppVersionInfo.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;Z)V" line="89"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="84"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/AllowNoArguments" sourcefilename="AllowNoArguments.java"/><class name="com/milaboratory/cli/HiddenAction" sourcefilename="HiddenAction.java"/><class name="com/milaboratory/cli/PipelineConfigurationReader" sourcefilename="PipelineConfigurationReader.java"><method name="getPipelineConfiguration" desc="()Lcom/milaboratory/cli/PipelineConfiguration;" line="20"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/JCommanderBasedMain$ProcessResult" sourcefilename="JCommanderBasedMain.java"><method name="&lt;clinit&gt;" desc="()V" line="313"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/JCommanderBasedMain$1" sourcefilename="JCommanderBasedMain.java"><method name="&lt;init&gt;" desc="(Lcom/beust/jcommander/Parameter;)V" line="178"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hidden" desc="()Z" line="180"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/PipelineConfiguration$PipelineStep$IO" sourcefilename="PipelineConfiguration.java"><method name="&lt;init&gt;" desc="()V" line="163"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Lcom/milaboratory/primitivio/PrimitivO;Lcom/milaboratory/cli/PipelineConfiguration$PipelineStep;)V" line="166"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Lcom/milaboratory/primitivio/PrimitivI;)Lcom/milaboratory/cli/PipelineConfiguration$PipelineStep;" line="173"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReference" desc="()Z" line="181"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handlesReference" desc="()Z" line="186"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/ACommandSimpleExport" sourcefilename="ACommandSimpleExport.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="25"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInputFiles" desc="()Ljava/util/List;" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOutputFiles" desc="()Ljava/util/List;" line="41"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/ProcessException" sourcefilename="ProcessException.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="26"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/ACommandWithSmartOverwrite" sourcefilename="ACommandWithSmartOverwrite.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/milaboratory/cli/BinaryFileInfoExtractor;Lcom/milaboratory/cli/PipelineConfigurationReader;)V" line="27"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOutput" desc="()Ljava/lang/String;" line="44"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOutputFileInfo" desc="()Lcom/milaboratory/cli/BinaryFileInfo;" line="51"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="()V" line="61"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleExistenceOfOutputFile" desc="(Ljava/lang/String;)V" line="71"><counter type="INSTRUCTION" missed="130" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run0" desc="()V" line="116"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="201" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/JCommanderBasedMain$MainParameters" sourcefilename="JCommanderBasedMain.java"><method name="&lt;init&gt;" desc="()V" line="354"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="help" desc="()Z" line="359"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/PipelineConfigurationWriter" sourcefilename="PipelineConfigurationWriter.java"/><class name="com/milaboratory/cli/PipelineConfiguration" sourcefilename="PipelineConfiguration.java"><method name="&lt;init&gt;" desc="([Lcom/milaboratory/cli/PipelineConfiguration$PipelineStep;)V" line="44"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lastConfiguration" desc="()Lcom/milaboratory/cli/ActionConfiguration;" line="50"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compatibleWith" desc="(Lcom/milaboratory/cli/PipelineConfiguration;)Z" line="55"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="67"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="75"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendStep" desc="(Lcom/milaboratory/cli/PipelineConfiguration;Ljava/util/List;Lcom/milaboratory/cli/ActionConfiguration;Lcom/milaboratory/cli/AppVersionInfo;)Lcom/milaboratory/cli/PipelineConfiguration;" line="85"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mkInitial" desc="(Ljava/util/List;Lcom/milaboratory/cli/ActionConfiguration;Lcom/milaboratory/cli/AppVersionInfo;)Lcom/milaboratory/cli/PipelineConfiguration;" line="102"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mkInitial$4" desc="(I)[Lcom/milaboratory/util/LightFileDescriptor;" line="103"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mkInitial$3" desc="(Ljava/lang/String;)Lcom/milaboratory/util/LightFileDescriptor;" line="103"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$appendStep$2" desc="(I)[Lcom/milaboratory/cli/PipelineConfiguration$PipelineStep;" line="94"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$appendStep$1" desc="(I)[Lcom/milaboratory/util/LightFileDescriptor;" line="88"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$appendStep$0" desc="(Ljava/lang/String;)Lcom/milaboratory/util/LightFileDescriptor;" line="87"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="149" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/Action" sourcefilename="Action.java"/><class name="com/milaboratory/cli/ACommandWithOutput" sourcefilename="ACommandWithOutput.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="25"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setForce" desc="(Z)V" line="34"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="()V" line="42"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleExistenceOfOutputFile" desc="(Ljava/lang/String;)V" line="50"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/BinaryFileInfo" sourcefilename="BinaryFileInfo.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Z)V" line="36"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="44"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="54"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="87" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/ValidationException" sourcefilename="ValidationException.java"><method name="&lt;init&gt;" desc="(Lpicocli/CommandLine;Ljava/lang/String;Z)V" line="25"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/ActionParameters" sourcefilename="ActionParameters.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="help" desc="()Z" line="28"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="()V" line="31"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forceHideParameters" desc="()Ljava/util/List;" line="40"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/ActionConfiguration" sourcefilename="ActionConfiguration.java"><method name="versionId" desc="()Ljava/lang/String;" line="38"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compatibleWith" desc="(Lcom/milaboratory/cli/ActionConfiguration;)Z" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/CommandMain" sourcefilename="CommandMain.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="27"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="([Ljava/lang/String;)V" line="31"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requestHelp" desc="(Z)V" line="43"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/ActionHelper" sourcefilename="ActionHelper.java"/><class name="com/milaboratory/cli/BinaryFileInfoExtractor" sourcefilename="BinaryFileInfoExtractor.java"><method name="getFileInfo" desc="(Ljava/lang/String;)Lcom/milaboratory/cli/BinaryFileInfo;" line="24"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/JCommanderBasedMain$MainParametersWithVersion" sourcefilename="JCommanderBasedMain.java"><method name="&lt;init&gt;" desc="()V" line="363"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shortVersion" desc="()Z" line="371"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fullVersion" desc="()Z" line="375"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/cli/ActionParametersParser" sourcefilename="ActionParametersParser.java"/><sourcefile name="ACommandWithOutput.java"><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="2" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="11" ci="0" mb="2" cb="0"/><line nr="44" mi="7" ci="0" mb="2" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="2" cb="0"/><line nr="51" mi="13" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PipelineConfiguration.java"><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="10" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="2" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="2" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="9" ci="0" mb="2" cb="0"/><line nr="60" mi="10" ci="0" mb="2" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="2" cb="0"/><line nr="68" mi="9" ci="0" mb="4" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="8" ci="0" mb="0" cb="0"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="7" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="14" ci="0" mb="0" cb="0"/><line nr="104" mi="15" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="7" ci="0" mb="2" cb="0"/><line nr="141" mi="4" ci="0" mb="2" cb="0"/><line nr="142" mi="10" ci="0" mb="2" cb="0"/><line nr="143" mi="5" ci="0" mb="2" cb="0"/><line nr="148" mi="5" ci="0" mb="2" cb="0"/><line nr="149" mi="9" ci="0" mb="4" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="11" ci="0" mb="2" cb="0"/><line nr="152" mi="6" ci="0" mb="2" cb="0"/><line nr="153" mi="5" ci="0" mb="2" cb="0"/><line nr="158" mi="14" ci="0" mb="0" cb="0"/><line nr="159" mi="8" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="173" mi="5" ci="0" mb="0" cb="0"/><line nr="174" mi="5" ci="0" mb="0" cb="0"/><line nr="175" mi="5" ci="0" mb="0" cb="0"/><line nr="176" mi="7" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="191" mi="3" ci="0" mb="0" cb="0"/><line nr="194" mi="4" ci="0" mb="0" cb="0"/><line nr="195" mi="1" ci="0" mb="0" cb="0"/><line nr="199" mi="5" ci="0" mb="0" cb="0"/><line nr="200" mi="5" ci="0" mb="0" cb="0"/><line nr="205" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="314" covered="0"/><counter type="BRANCH" missed="34" covered="0"/><counter type="LINE" missed="65" covered="0"/><counter type="COMPLEXITY" missed="43" covered="0"/><counter type="METHOD" missed="26" covered="0"/><counter type="CLASS" missed="4" covered="0"/></sourcefile><sourcefile name="BinaryFileInfo.java"><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="2" cb="0"/><line nr="45" mi="9" ci="0" mb="4" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="7" ci="0" mb="2" cb="0"/><line nr="48" mi="15" ci="0" mb="6" cb="0"/><line nr="49" mi="16" ci="0" mb="4" cb="0"/><line nr="54" mi="20" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="87" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ACommandSimpleExport.java"><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="9" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AppVersionInfo.java"><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="2" cb="0"/><line nr="47" mi="7" ci="0" mb="0" cb="0"/><line nr="49" mi="26" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="2" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="2" cb="0"/><line nr="73" mi="9" ci="0" mb="4" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="11" ci="0" mb="2" cb="0"/><line nr="76" mi="5" ci="0" mb="2" cb="0"/><line nr="81" mi="14" ci="0" mb="0" cb="0"/><line nr="84" mi="12" ci="0" mb="0" cb="0"/><line nr="85" mi="16" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="151" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="PipelineConfigurationReader.java"><line nr="20" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="HiddenAction.java"/><sourcefile name="ActionParametersWithOutput.java"><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="2" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="11" ci="0" mb="2" cb="0"/><line nr="39" mi="4" ci="0" mb="2" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="2" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="2" cb="0"/><line nr="52" mi="14" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ActionParametersParser.java"/><sourcefile name="JCommanderBasedMain.java"><line nr="26" mi="8" ci="0" mb="2" cb="0"/><line nr="28" mi="5" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="16" ci="0" mb="2" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="17" ci="0" mb="2" cb="0"/><line nr="56" mi="3" ci="0" mb="2" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="7" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="2" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="12" ci="0" mb="2" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="6" ci="0" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="4" cb="0"/><line nr="99" mi="10" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="2" cb="0"/><line nr="105" mi="2" ci="0" mb="2" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="2" cb="0"/><line nr="112" mi="2" ci="0" mb="2" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="2" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="10" ci="0" mb="4" cb="0"/><line nr="125" mi="6" ci="0" mb="0" cb="0"/><line nr="126" mi="5" ci="0" mb="2" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="7" ci="0" mb="4" cb="0"/><line nr="139" mi="2" ci="0" mb="2" cb="0"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="13" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="6" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="2" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="3" ci="0" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="157" mi="1" ci="0" mb="0" cb="0"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="6" ci="0" mb="0" cb="0"/><line nr="170" mi="7" ci="0" mb="0" cb="0"/><line nr="172" mi="12" ci="0" mb="2" cb="0"/><line nr="173" mi="11" ci="0" mb="2" cb="0"/><line nr="174" mi="5" ci="0" mb="2" cb="0"/><line nr="175" mi="1" ci="0" mb="0" cb="0"/><line nr="177" mi="3" ci="0" mb="0" cb="0"/><line nr="178" mi="10" ci="0" mb="0" cb="0"/><line nr="180" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="5" ci="0" mb="0" cb="0"/><line nr="184" mi="3" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="3" ci="0" mb="0" cb="0"/><line nr="195" mi="10" ci="0" mb="4" cb="0"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="200" mi="1" ci="0" mb="0" cb="0"/><line nr="201" mi="5" ci="0" mb="0" cb="0"/><line nr="202" mi="1" ci="0" mb="0" cb="0"/><line nr="203" mi="1" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="216" mi="5" ci="0" mb="0" cb="0"/><line nr="217" mi="1" ci="0" mb="0" cb="0"/><line nr="218" mi="5" ci="0" mb="0" cb="0"/><line nr="219" mi="1" ci="0" mb="0" cb="0"/><line nr="220" mi="3" ci="0" mb="0" cb="0"/><line nr="223" mi="5" ci="0" mb="0" cb="0"/><line nr="224" mi="1" ci="0" mb="0" cb="0"/><line nr="225" mi="5" ci="0" mb="0" cb="0"/><line nr="226" mi="1" ci="0" mb="0" cb="0"/><line nr="227" mi="4" ci="0" mb="0" cb="0"/><line nr="228" mi="7" ci="0" mb="4" cb="0"/><line nr="229" mi="4" ci="0" mb="0" cb="0"/><line nr="231" mi="5" ci="0" mb="0" cb="0"/><line nr="232" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="11" ci="0" mb="2" cb="0"/><line nr="243" mi="6" ci="0" mb="0" cb="0"/><line nr="244" mi="4" ci="0" mb="0" cb="0"/><line nr="245" mi="12" ci="0" mb="2" cb="0"/><line nr="246" mi="6" ci="0" mb="2" cb="0"/><line nr="247" mi="3" ci="0" mb="0" cb="0"/><line nr="248" mi="4" ci="0" mb="0" cb="0"/><line nr="249" mi="3" ci="0" mb="0" cb="0"/><line nr="250" mi="4" ci="0" mb="0" cb="0"/><line nr="251" mi="1" ci="0" mb="0" cb="0"/><line nr="254" mi="4" ci="0" mb="0" cb="0"/><line nr="255" mi="3" ci="0" mb="2" cb="0"/><line nr="256" mi="4" ci="0" mb="2" cb="0"/><line nr="257" mi="5" ci="0" mb="0" cb="0"/><line nr="258" mi="4" ci="0" mb="0" cb="0"/><line nr="260" mi="5" ci="0" mb="0" cb="0"/><line nr="262" mi="5" ci="0" mb="0" cb="0"/><line nr="263" mi="4" ci="0" mb="0" cb="0"/><line nr="264" mi="1" ci="0" mb="0" cb="0"/><line nr="268" mi="12" ci="0" mb="0" cb="0"/><line nr="269" mi="3" ci="0" mb="2" cb="0"/><line nr="270" mi="7" ci="0" mb="0" cb="0"/><line nr="271" mi="3" ci="0" mb="2" cb="0"/><line nr="272" mi="4" ci="0" mb="0" cb="0"/><line nr="273" mi="1" ci="0" mb="0" cb="0"/><line nr="276" mi="7" ci="0" mb="0" cb="0"/><line nr="277" mi="3" ci="0" mb="0" cb="0"/><line nr="278" mi="3" ci="0" mb="0" cb="0"/><line nr="279" mi="18" ci="0" mb="2" cb="0"/><line nr="280" mi="5" ci="0" mb="0" cb="0"/><line nr="281" mi="2" ci="0" mb="2" cb="0"/><line nr="282" mi="1" ci="0" mb="0" cb="0"/><line nr="283" mi="5" ci="0" mb="0" cb="0"/><line nr="284" mi="2" ci="0" mb="2" cb="0"/><line nr="285" mi="1" ci="0" mb="0" cb="0"/><line nr="287" mi="4" ci="0" mb="0" cb="0"/><line nr="288" mi="2" ci="0" mb="2" cb="0"/><line nr="289" mi="1" ci="0" mb="0" cb="0"/><line nr="291" mi="2" ci="0" mb="0" cb="0"/><line nr="292" mi="10" ci="0" mb="2" cb="0"/><line nr="293" mi="7" ci="0" mb="2" cb="0"/><line nr="294" mi="2" ci="0" mb="0" cb="0"/><line nr="295" mi="1" ci="0" mb="0" cb="0"/><line nr="297" mi="5" ci="0" mb="4" cb="0"/><line nr="298" mi="1" ci="0" mb="0" cb="0"/><line nr="300" mi="13" ci="0" mb="0" cb="0"/><line nr="301" mi="4" ci="0" mb="2" cb="0"/><line nr="302" mi="15" ci="0" mb="0" cb="0"/><line nr="304" mi="9" ci="0" mb="0" cb="0"/><line nr="306" mi="9" ci="0" mb="0" cb="0"/><line nr="307" mi="10" ci="0" mb="0" cb="0"/><line nr="308" mi="3" ci="0" mb="0" cb="0"/><line nr="309" mi="2" ci="0" mb="0" cb="0"/><line nr="311" mi="1" ci="0" mb="0" cb="0"/><line nr="313" mi="20" ci="0" mb="0" cb="0"/><line nr="314" mi="24" ci="0" mb="0" cb="0"/><line nr="325" mi="2" ci="0" mb="2" cb="0"/><line nr="326" mi="4" ci="0" mb="0" cb="0"/><line nr="327" mi="3" ci="0" mb="0" cb="0"/><line nr="328" mi="3" ci="0" mb="0" cb="0"/><line nr="329" mi="1" ci="0" mb="0" cb="0"/><line nr="340" mi="4" ci="0" mb="4" cb="0"/><line nr="341" mi="4" ci="0" mb="0" cb="0"/><line nr="342" mi="3" ci="0" mb="0" cb="0"/><line nr="343" mi="3" ci="0" mb="0" cb="0"/><line nr="344" mi="1" ci="0" mb="0" cb="0"/><line nr="350" mi="3" ci="0" mb="0" cb="0"/><line nr="351" mi="3" ci="0" mb="0" cb="0"/><line nr="352" mi="1" ci="0" mb="0" cb="0"/><line nr="354" mi="3" ci="0" mb="0" cb="0"/><line nr="359" mi="3" ci="0" mb="0" cb="0"/><line nr="363" mi="2" ci="0" mb="0" cb="0"/><line nr="364" mi="3" ci="0" mb="0" cb="0"/><line nr="367" mi="4" ci="0" mb="0" cb="0"/><line nr="371" mi="3" ci="0" mb="0" cb="0"/><line nr="375" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="821" covered="0"/><counter type="BRANCH" missed="92" covered="0"/><counter type="LINE" missed="185" covered="0"/><counter type="COMPLEXITY" missed="73" covered="0"/><counter type="METHOD" missed="27" covered="0"/><counter type="CLASS" missed="5" covered="0"/></sourcefile><sourcefile name="ActionHelpProvider.java"/><sourcefile name="ActionConfiguration.java"><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ABaseCommand.java"><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="13" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="9" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="8" ci="0" mb="0" cb="0"/><line nr="58" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ACommand.java"><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="5" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="2" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="2" cb="0"/><line nr="48" mi="6" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="2" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="11" ci="0" mb="2" cb="0"/><line nr="72" mi="6" ci="0" mb="2" cb="0"/><line nr="73" mi="13" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="2" cb="0"/><line nr="85" mi="11" ci="0" mb="2" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="114" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ACommandWithSmartOverwriteWithSingleInput.java"><line nr="26" mi="5" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="9" ci="0" mb="2" cb="0"/><line nr="57" mi="3" ci="0" mb="2" cb="0"/><line nr="58" mi="7" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ACommandWithSmartOverwrite.java"><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="9" ci="0" mb="2" cb="0"/><line nr="52" mi="3" ci="0" mb="2" cb="0"/><line nr="53" mi="7" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="2" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="2" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="6" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="6" ci="0" mb="4" cb="0"/><line nr="82" mi="11" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="2" cb="0"/><line nr="86" mi="12" ci="0" mb="0" cb="0"/><line nr="90" mi="16" ci="0" mb="0" cb="0"/><line nr="93" mi="9" ci="0" mb="2" cb="0"/><line nr="95" mi="6" ci="0" mb="0" cb="0"/><line nr="96" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="6" ci="0" mb="2" cb="0"/><line nr="98" mi="19" ci="0" mb="0" cb="0"/><line nr="101" mi="10" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="2" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="2" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="201" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PipelineConfigurationWriter.java"/><sourcefile name="ValidationException.java"><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ActionParameters.java"><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DeprecatedParameter.java"/><sourcefile name="Action.java"/><sourcefile name="ActionHelper.java"/><sourcefile name="ProcessException.java"><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CommandMain.java"><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="13" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="2" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="BinaryFileInfoExtractor.java"><line nr="24" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AllowNoArguments.java"/><counter type="INSTRUCTION" missed="2011" covered="0"/><counter type="BRANCH" missed="220" covered="0"/><counter type="LINE" missed="454" covered="0"/><counter type="COMPLEXITY" missed="229" covered="0"/><counter type="METHOD" missed="119" covered="0"/><counter type="CLASS" missed="27" covered="0"/></package><package name="org/apache/commons/io/comparator"><class name="org/apache/commons/io/comparator/DirectoryFileComparator" sourcefilename="DirectoryFileComparator.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compare" desc="(Ljava/io/File;Ljava/io/File;)I" line="65"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="(Ljava/io/File;)I" line="75"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/comparator/SizeFileComparator" sourcefilename="SizeFileComparator.java"><method name="&lt;init&gt;" desc="()V" line="79"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Z)V" line="94"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compare" desc="(Ljava/io/File;Ljava/io/File;)I" line="111"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="140"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/comparator/LastModifiedFileComparator" sourcefilename="LastModifiedFileComparator.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compare" desc="(Ljava/io/File;Ljava/io/File;)I" line="70"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/comparator/ReverseComparator" sourcefilename="ReverseComparator.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="39"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compare" desc="(Ljava/io/File;Ljava/io/File;)I" line="56"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="66"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/comparator/PathFileComparator" sourcefilename="PathFileComparator.java"><method name="&lt;init&gt;" desc="()V" line="79"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/io/IOCase;)V" line="88"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compare" desc="(Ljava/io/File;Ljava/io/File;)I" line="105"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="115"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/comparator/DefaultFileComparator" sourcefilename="DefaultFileComparator.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compare" desc="(Ljava/io/File;Ljava/io/File;)I" line="66"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/comparator/AbstractFileComparator" sourcefilename="AbstractFileComparator.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="([Ljava/io/File;)[Ljava/io/File;" line="43"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="(Ljava/util/List;)Ljava/util/List;" line="60"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/comparator/ExtensionFileComparator" sourcefilename="ExtensionFileComparator.java"><method name="&lt;init&gt;" desc="()V" line="83"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/io/IOCase;)V" line="92"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compare" desc="(Ljava/io/File;Ljava/io/File;)I" line="109"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="121"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/comparator/NameFileComparator" sourcefilename="NameFileComparator.java"><method name="&lt;init&gt;" desc="()V" line="79"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/io/IOCase;)V" line="88"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compare" desc="(Ljava/io/File;Ljava/io/File;)I" line="104"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/comparator/CompositeFileComparator" sourcefilename="CompositeFileComparator.java"><method name="&lt;init&gt;" desc="([Ljava/util/Comparator;)V" line="56"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Iterable;)V" line="71"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compare" desc="(Ljava/io/File;Ljava/io/File;)I" line="93"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="110"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="137" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="AbstractFileComparator.java"><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="2" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="2" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ExtensionFileComparator.java"><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="6" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="7" ci="0" mb="2" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="121" mi="15" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PathFileComparator.java"><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="6" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="7" ci="0" mb="2" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="8" ci="0" mb="0" cb="0"/><line nr="115" mi="15" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NameFileComparator.java"><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="6" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="7" ci="0" mb="2" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="8" ci="0" mb="0" cb="0"/><line nr="114" mi="15" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DirectoryFileComparator.java"><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="8" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="2" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LastModifiedFileComparator.java"><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="6" ci="0" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="2" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="2" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultFileComparator.java"><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SizeFileComparator.java"><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="6" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="2" cb="0"/><line nr="113" mi="12" ci="0" mb="4" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="2" cb="0"/><line nr="119" mi="12" ci="0" mb="4" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="4" ci="0" mb="0" cb="0"/><line nr="124" mi="4" ci="0" mb="2" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="2" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="15" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ReverseComparator.java"><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="2" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="16" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CompositeFileComparator.java"><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="2" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="2" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="10" ci="0" mb="2" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="9" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="17" ci="0" mb="2" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="2" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="9" ci="0" mb="2" cb="0"/><line nr="114" mi="2" ci="0" mb="2" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="7" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="137" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="589" covered="0"/><counter type="BRANCH" missed="48" covered="0"/><counter type="LINE" missed="135" covered="0"/><counter type="COMPLEXITY" missed="66" covered="0"/><counter type="METHOD" missed="42" covered="0"/><counter type="CLASS" missed="10" covered="0"/></package><package name="com/milaboratory/core/motif"><class name="com/milaboratory/core/motif/BitapMatcherImpl" sourcefilename="BitapMatcherImpl.java"><method name="&lt;init&gt;" desc="(III)V" line="24"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberOfErrors" desc="()I" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/motif/Motif" sourcefilename="Motif.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;ILcom/milaboratory/util/BitArray;)V" line="39"><counter type="INSTRUCTION" missed="5" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Sequence;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="or" desc="(Lcom/milaboratory/core/motif/Motif;)Lcom/milaboratory/core/motif/Motif;" line="75"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBitapPattern" desc="()Lcom/milaboratory/core/motif/BitapPattern;" line="85"><counter type="INSTRUCTION" missed="5" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBitapPattern" desc="()Lcom/milaboratory/core/motif/BitapPattern;" line="91"><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="109"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allows" desc="(BI)Z" line="113"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Lcom/milaboratory/core/sequence/Sequence;I)Z" line="117"><counter type="INSTRUCTION" missed="4" covered="29"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="127"><counter type="INSTRUCTION" missed="8" covered="30"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="139"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dataConsistent" desc="(Lcom/milaboratory/util/BitArray;I)Z" line="147"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="72" covered="266"/><counter type="BRANCH" missed="12" covered="30"/><counter type="LINE" missed="13" covered="52"/><counter type="COMPLEXITY" missed="13" covered="19"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/motif/BitapMatcherFilter" sourcefilename="BitapMatcherFilter.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/motif/BitapMatcher;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findNext" desc="()I" line="53"><counter type="INSTRUCTION" missed="13" covered="54"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberOfErrors" desc="()I" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="130"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="2" covered="24"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/motif/BitapPattern$3" sourcefilename="BitapPattern.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/motif/BitapPattern;IIILcom/milaboratory/core/sequence/Sequence;)V" line="195"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findNext" desc="()I" line="198"><counter type="INSTRUCTION" missed="0" covered="162"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="174"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/motif/BitapPattern$2" sourcefilename="BitapPattern.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/motif/BitapPattern;IIILcom/milaboratory/core/sequence/Sequence;)V" line="119"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findNext" desc="()I" line="122"><counter type="INSTRUCTION" missed="0" covered="147"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="159"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/motif/BitapPattern$4" sourcefilename="BitapPattern.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/motif/BitapPattern;IIILcom/milaboratory/core/sequence/Sequence;)V" line="276"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findNext" desc="()I" line="279"><counter type="INSTRUCTION" missed="0" covered="164"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="176"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/motif/BitapMatcher" sourcefilename="BitapMatcher.java"/><class name="com/milaboratory/core/motif/MotifBuilder" sourcefilename="MotifBuilder.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;I)V" line="28"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAllowedLetter" desc="(IB)V" line="35"><counter type="INSTRUCTION" missed="4" covered="30"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAndDestroy" desc="()Lcom/milaboratory/core/motif/Motif;" line="43"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="63"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/motif/BitapPattern" sourcefilename="BitapPattern.java"><method name="&lt;init&gt;" desc="(I[J[J)V" line="31"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exactSearch" desc="(Lcom/milaboratory/core/sequence/Sequence;)I" line="38"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exactSearch" desc="(Lcom/milaboratory/core/sequence/Sequence;I)I" line="42"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exactSearch" desc="(Lcom/milaboratory/core/sequence/Sequence;II)I" line="46"><counter type="INSTRUCTION" missed="4" covered="49"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exactMatcher" desc="(Lcom/milaboratory/core/sequence/Sequence;II)Lcom/milaboratory/core/motif/BitapMatcher;" line="62"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="substitutionOnlyMatcherFirst" desc="(ILcom/milaboratory/core/sequence/Sequence;)Lcom/milaboratory/core/motif/BitapMatcher;" line="101"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substitutionOnlyMatcherFirst" desc="(ILcom/milaboratory/core/sequence/Sequence;II)Lcom/milaboratory/core/motif/BitapMatcher;" line="116"><counter type="INSTRUCTION" missed="4" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substitutionAndIndelMatcherLast" desc="(ILcom/milaboratory/core/sequence/Sequence;)Lcom/milaboratory/core/motif/BitapMatcher;" line="175"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substitutionAndIndelMatcherLast" desc="(ILcom/milaboratory/core/sequence/Sequence;II)Lcom/milaboratory/core/motif/BitapMatcher;" line="192"><counter type="INSTRUCTION" missed="4" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substitutionAndIndelMatcherFirst" desc="(ILcom/milaboratory/core/sequence/Sequence;)Lcom/milaboratory/core/motif/BitapMatcher;" line="257"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="substitutionAndIndelMatcherFirst" desc="(ILcom/milaboratory/core/sequence/Sequence;II)Lcom/milaboratory/core/motif/BitapMatcher;" line="273"><counter type="INSTRUCTION" missed="4" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="42" covered="148"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="8" covered="24"/><counter type="COMPLEXITY" missed="7" covered="11"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/motif/MotifUtils" sourcefilename="MotifUtils.java"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="twoSequenceMotif" desc="(Lcom/milaboratory/core/sequence/Sequence;ILcom/milaboratory/core/sequence/Sequence;II)Lcom/milaboratory/core/motif/Motif;" line="24"><counter type="INSTRUCTION" missed="8" covered="53"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="53"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/motif/BitapPattern$1" sourcefilename="BitapPattern.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/motif/BitapPattern;IILcom/milaboratory/core/sequence/Sequence;)V" line="65"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findNext" desc="()I" line="71"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberOfErrors" desc="()I" line="86"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="BitapMatcherFilter.java"><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="8" mb="0" cb="0"/><line nr="39" mi="0" ci="8" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="2"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="15" mb="0" cb="2"/><line nr="55" mi="0" ci="14" mb="1" cb="3"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="15" mb="0" cb="2"/><line nr="59" mi="11" ci="3" mb="3" cb="1"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="130"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="2" covered="24"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MotifUtils.java"><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="2" cb="2"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="2" cb="2"/><line nr="28" mi="0" ci="6" mb="1" cb="1"/><line nr="29" mi="0" ci="5" mb="1" cb="1"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="7" mb="0" cb="0"/><line nr="34" mi="0" ci="7" mb="0" cb="2"/><line nr="35" mi="0" ci="8" mb="0" cb="0"/><line nr="36" mi="0" ci="8" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="53"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BitapPattern.java"><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="1" cb="1"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="2"/><line nr="53" mi="0" ci="9" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="2"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="7" ci="0" mb="2" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="22" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="6" ci="0" mb="0" cb="0"/><line nr="72" mi="9" ci="0" mb="2" cb="0"/><line nr="73" mi="13" ci="0" mb="0" cb="0"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="75" mi="7" ci="0" mb="2" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="0"/><line nr="116" mi="0" ci="7" mb="1" cb="1"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="23" mb="0" cb="0"/><line nr="122" mi="0" ci="8" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="9" mb="0" cb="2"/><line nr="130" mi="0" ci="9" mb="0" cb="0"/><line nr="133" mi="0" ci="8" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="8" mb="0" cb="0"/><line nr="137" mi="0" ci="9" mb="0" cb="2"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="9" mb="0" cb="2"/><line nr="143" mi="0" ci="8" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="8" mb="0" cb="0"/><line nr="147" mi="0" ci="18" mb="0" cb="6"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="2"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="8" mb="0" cb="0"/><line nr="192" mi="0" ci="7" mb="1" cb="1"/><line nr="193" mi="4" ci="0" mb="0" cb="0"/><line nr="195" mi="0" ci="23" mb="0" cb="0"/><line nr="198" mi="0" ci="8" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="9" mb="0" cb="2"/><line nr="207" mi="0" ci="9" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="8" mb="0" cb="0"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="213" mi="0" ci="8" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="0" cb="0"/><line nr="216" mi="0" ci="9" mb="0" cb="2"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="9" mb="0" cb="2"/><line nr="222" mi="0" ci="5" mb="0" cb="0"/><line nr="223" mi="0" ci="8" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="8" mb="0" cb="0"/><line nr="226" mi="0" ci="14" mb="0" cb="0"/><line nr="227" mi="0" ci="11" mb="0" cb="4"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="5" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="0" cb="2"/><line nr="237" mi="0" ci="5" mb="0" cb="0"/><line nr="238" mi="0" ci="2" mb="0" cb="0"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="8" mb="0" cb="0"/><line nr="273" mi="0" ci="7" mb="1" cb="1"/><line nr="274" mi="4" ci="0" mb="0" cb="0"/><line nr="276" mi="0" ci="25" mb="0" cb="0"/><line nr="279" mi="0" ci="8" mb="0" cb="0"/><line nr="285" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="0" ci="9" mb="0" cb="2"/><line nr="288" mi="0" ci="9" mb="0" cb="0"/><line nr="291" mi="0" ci="5" mb="0" cb="0"/><line nr="292" mi="0" ci="8" mb="0" cb="0"/><line nr="293" mi="0" ci="5" mb="0" cb="0"/><line nr="294" mi="0" ci="8" mb="0" cb="0"/><line nr="295" mi="0" ci="5" mb="0" cb="0"/><line nr="297" mi="0" ci="9" mb="0" cb="2"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><line nr="299" mi="0" ci="2" mb="0" cb="0"/><line nr="302" mi="0" ci="9" mb="0" cb="2"/><line nr="303" mi="0" ci="5" mb="0" cb="0"/><line nr="304" mi="0" ci="8" mb="0" cb="0"/><line nr="305" mi="0" ci="5" mb="0" cb="0"/><line nr="306" mi="0" ci="8" mb="0" cb="0"/><line nr="307" mi="0" ci="14" mb="0" cb="0"/><line nr="308" mi="0" ci="11" mb="0" cb="4"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="2" mb="0" cb="0"/><line nr="312" mi="0" ci="5" mb="0" cb="0"/><line nr="313" mi="0" ci="2" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="0"/><line nr="317" mi="0" ci="2" mb="0" cb="2"/><line nr="318" mi="0" ci="5" mb="0" cb="0"/><line nr="319" mi="0" ci="2" mb="0" cb="0"/><line nr="322" mi="0" ci="6" mb="0" cb="0"/><line nr="323" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="126" covered="657"/><counter type="BRANCH" missed="10" covered="46"/><counter type="LINE" missed="20" covered="106"/><counter type="COMPLEXITY" missed="12" covered="36"/><counter type="METHOD" missed="5" covered="15"/><counter type="CLASS" missed="1" covered="4"/></sourcefile><sourcefile name="BitapMatcherImpl.java"><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="7" mb="0" cb="2"/><line nr="27" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MotifBuilder.java"><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="9" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="1" cb="1"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="8" mb="0" cb="2"/><line nr="39" mi="0" ci="11" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="63"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Motif.java"><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="1" cb="1"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="9" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="2"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="2"/><line nr="61" mi="0" ci="11" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="2" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="9" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="1" cb="1"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="2"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="2"/><line nr="100" mi="0" ci="8" mb="0" cb="2"/><line nr="101" mi="0" ci="6" mb="0" cb="2"/><line nr="102" mi="0" ci="11" mb="0" cb="0"/><line nr="103" mi="0" ci="16" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="10" mb="0" cb="0"/><line nr="117" mi="0" ci="9" mb="2" cb="2"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="8" mb="0" cb="2"/><line nr="120" mi="0" ci="8" mb="0" cb="2"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="2" ci="3" mb="1" cb="1"/><line nr="128" mi="2" ci="7" mb="2" cb="2"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="2" ci="5" mb="1" cb="1"/><line nr="133" mi="2" ci="6" mb="1" cb="1"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="7" ci="0" mb="0" cb="0"/><line nr="141" mi="8" ci="0" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="7" mb="0" cb="2"/><line nr="148" mi="0" ci="11" mb="1" cb="1"/><line nr="149" mi="0" ci="4" mb="0" cb="2"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="72" covered="266"/><counter type="BRANCH" missed="12" covered="30"/><counter type="LINE" missed="13" covered="52"/><counter type="COMPLEXITY" missed="13" covered="19"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BitapMatcher.java"/><counter type="INSTRUCTION" missed="226" covered="1200"/><counter type="BRANCH" missed="33" covered="99"/><counter type="LINE" missed="39" covered="212"/><counter type="COMPLEXITY" missed="36" covered="72"/><counter type="METHOD" missed="8" covered="34"/><counter type="CLASS" missed="1" covered="9"/></package><package name="org/apache/commons/io/input"><class name="org/apache/commons/io/input/ClosedInputStream" sourcefilename="ClosedInputStream.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()I" line="47"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/MessageDigestCalculatingInputStream$MessageDigestMaintainingObserver" sourcefilename="MessageDigestCalculatingInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/security/MessageDigest;)V" line="44"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="data" desc="(I)V" line="50"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="data" desc="([BII)V" line="55"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/CloseShieldInputStream" sourcefilename="CloseShieldInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/WindowsLineEndingInputStream" sourcefilename="WindowsLineEndingInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Z)V" line="29"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readWithUpdate" desc="()I" line="58"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="73"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eofGame" desc="()I" line="101"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="123"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mark" desc="(I)V" line="132"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="134" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="43" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/BoundedInputStream" sourcefilename="BoundedInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;J)V" line="46"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="75"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="87"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([B)I" line="104"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([BII)I" line="118"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skip" desc="(J)J" line="140"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="available" desc="()I" line="151"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="163"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="173"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="184"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mark" desc="(I)V" line="194"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="markSupported" desc="()Z" line="204"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPropagateClose" desc="()Z" line="216"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPropagateClose" desc="(Z)V" line="229"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="191" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/TailerListener" sourcefilename="TailerListener.java"/><class name="org/apache/commons/io/input/XmlStreamReaderException" sourcefilename="XmlStreamReaderException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="60"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="78"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBomEncoding" desc="()Ljava/lang/String;" line="92"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXmlGuessEncoding" desc="()Ljava/lang/String;" line="101"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXmlEncoding" desc="()Ljava/lang/String;" line="110"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContentTypeMime" desc="()Ljava/lang/String;" line="121"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContentTypeEncoding" desc="()Ljava/lang/String;" line="133"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/ProxyInputStream" sourcefilename="ProxyInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()I" line="58"><counter type="INSTRUCTION" missed="7" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([B)I" line="77"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([BII)I" line="98"><counter type="INSTRUCTION" missed="6" covered="15"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skip" desc="(J)J" line="117"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="available" desc="()I" line="132"><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="146"><counter type="INSTRUCTION" missed="4" covered="5"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mark" desc="(I)V" line="158"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="168"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="markSupported" desc="()Z" line="180"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="beforeRead" desc="(I)V" line="203"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterRead" desc="(I)V" line="224"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleIOException" desc="(Ljava/io/IOException;)V" line="236"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="78" covered="45"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="31" covered="16"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="6" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/MessageDigestCalculatingInputStream" sourcefilename="MessageDigestCalculatingInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/security/MessageDigest;)V" line="67"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/lang/String;)V" line="79"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="88"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessageDigest" desc="()Ljava/security/MessageDigest;" line="100"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/UnixLineEndingInputStream" sourcefilename="UnixLineEndingInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Z)V" line="30"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readWithUpdate" desc="()I" line="57"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="72"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eofGame" desc="(Z)I" line="100"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="117"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mark" desc="(I)V" line="126"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="116" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="35" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/CountingInputStream" sourcefilename="CountingInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skip" desc="(J)J" line="59"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="afterRead" desc="(I)V" line="72"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCount" desc="()I" line="89"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resetCount" desc="()I" line="107"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByteCount" desc="()J" line="125"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetByteCount" desc="()J" line="139"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="68" covered="18"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="14" covered="6"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/AutoCloseInputStream" sourcefilename="AutoCloseInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="46"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="64"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="afterRead" desc="(I)V" line="77"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="finalize" desc="()V" line="90"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/SwappedDataInputStream" sourcefilename="SwappedDataInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="47"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readBoolean" desc="()Z" line="60"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readByte" desc="()B" line="73"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readChar" desc="()C" line="86"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readDouble" desc="()D" line="99"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readFloat" desc="()F" line="112"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readFully" desc="([B)V" line="126"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readFully" desc="([BII)V" line="143"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readInt" desc="()I" line="169"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readLine" desc="()Ljava/lang/String;" line="182"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readLong" desc="()J" line="196"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readShort" desc="()S" line="209"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readUnsignedByte" desc="()I" line="222"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readUnsignedShort" desc="()I" line="235"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readUTF" desc="()Ljava/lang/String;" line="248"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skipBytes" desc="(I)I" line="263"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="102" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/TailerListenerAdapter" sourcefilename="TailerListenerAdapter.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="(Lorg/apache/commons/io/input/Tailer;)V" line="33"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fileNotFound" desc="()V" line="40"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fileRotated" desc="()V" line="50"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handle" desc="(Ljava/lang/String;)V" line="58"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handle" desc="(Ljava/lang/Exception;)V" line="66"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endOfFileReached" desc="()V" line="79"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/CharSequenceInputStream" sourcefilename="CharSequenceInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;I)V" line="62"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/CharSequence;Ljava/lang/String;I)V" line="88"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)V" line="100"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/CharSequence;Ljava/lang/String;)V" line="112"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fillBuffer" desc="()V" line="122"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([BII)I" line="132"><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="166"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([B)I" line="178"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skip" desc="(J)J" line="186"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="available" desc="()I" line="207"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="212"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mark" desc="(I)V" line="220"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="241"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="markSupported" desc="()Z" line="266"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="364" covered="0"/><counter type="BRANCH" missed="46" covered="0"/><counter type="LINE" missed="82" covered="0"/><counter type="COMPLEXITY" missed="37" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/BOMInputStream$1" sourcefilename="BOMInputStream.java"><method name="&lt;init&gt;" desc="()V" line="140"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compare" desc="(Lorg/apache/commons/io/ByteOrderMark;Lorg/apache/commons/io/ByteOrderMark;)I" line="144"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/XmlStreamReader" sourcefilename="XmlStreamReader.java"><method name="getDefaultEncoding" desc="()Ljava/lang/String;" line="121"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="137"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="152"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Z)V" line="183"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;ZLjava/lang/String;)V" line="215"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URL;)V" line="241"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URLConnection;Ljava/lang/String;)V" line="263"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/lang/String;)V" line="297"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/lang/String;ZLjava/lang/String;)V" line="335"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/lang/String;Z)V" line="378"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEncoding" desc="()Ljava/lang/String;" line="387"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([CII)I" line="400"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="410"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doRawStream" desc="(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Z)Ljava/lang/String;" line="425"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doHttpStream" desc="(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Ljava/lang/String;Z)Ljava/lang/String;" line="452"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doLenientDetection" desc="(Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;" line="478"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateRawEncoding" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="511"><counter type="INSTRUCTION" missed="275" covered="0"/><counter type="BRANCH" missed="52" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="27" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateHttpEncoding" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;" line="584"><counter type="INSTRUCTION" missed="265" covered="0"/><counter type="BRANCH" missed="38" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="20" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContentTypeMime" desc="(Ljava/lang/String;)Ljava/lang/String;" line="655"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContentTypeEncoding" desc="(Ljava/lang/String;)Ljava/lang/String;" line="679"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXmlProlog" desc="(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;" line="706"><counter type="INSTRUCTION" missed="143" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAppXml" desc="(Ljava/lang/String;)Z" line="760"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTextXml" desc="(Ljava/lang/String;)Z" line="775"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="86"><counter type="INSTRUCTION" missed="280" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1376" covered="0"/><counter type="BRANCH" missed="160" covered="0"/><counter type="LINE" missed="204" covered="0"/><counter type="COMPLEXITY" missed="104" covered="0"/><counter type="METHOD" missed="24" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/BOMInputStream" sourcefilename="BOMInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="110"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Z)V" line="122"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;[Lorg/apache/commons/io/ByteOrderMark;)V" line="134"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Z[Lorg/apache/commons/io/ByteOrderMark;)V" line="167"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasBOM" desc="()Z" line="187"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasBOM" desc="(Lorg/apache/commons/io/ByteOrderMark;)Z" line="202"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBOM" desc="()Lorg/apache/commons/io/ByteOrderMark;" line="217"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBOMCharsetName" desc="()Ljava/lang/String;" line="254"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readFirstBytes" desc="()I" line="268"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="find" desc="()Lorg/apache/commons/io/ByteOrderMark;" line="278"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matches" desc="(Lorg/apache/commons/io/ByteOrderMark;)Z" line="298"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="319"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([BII)I" line="338"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([B)I" line="363"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mark" desc="(I)V" line="374"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="387"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skip" desc="(J)J" line="406"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="140"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="360" covered="0"/><counter type="BRANCH" missed="56" covered="0"/><counter type="LINE" missed="75" covered="0"/><counter type="COMPLEXITY" missed="46" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/Tailer" sourcefilename="Tailer.java"><method name="&lt;init&gt;" desc="(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;)V" line="177"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;J)V" line="187"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;JZ)V" line="198"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;JZZ)V" line="211"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;JZI)V" line="224"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;JZZI)V" line="238"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/nio/charset/Charset;Lorg/apache/commons/io/input/TailerListener;JZZI)V" line="169"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;JZI)Lorg/apache/commons/io/input/Tailer;" line="279"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;JZZI)Lorg/apache/commons/io/input/Tailer;" line="296"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="(Ljava/io/File;Ljava/nio/charset/Charset;Lorg/apache/commons/io/input/TailerListener;JZZI)Lorg/apache/commons/io/input/Tailer;" line="314"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;JZ)Lorg/apache/commons/io/input/Tailer;" line="332"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;JZZ)Lorg/apache/commons/io/input/Tailer;" line="347"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;J)Lorg/apache/commons/io/input/Tailer;" line="359"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;)Lorg/apache/commons/io/input/Tailer;" line="371"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFile" desc="()Ljava/io/File;" line="380"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRun" desc="()Z" line="390"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDelay" desc="()J" line="399"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="()V" line="407"><counter type="INSTRUCTION" missed="177" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="57" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stop" desc="()V" line="503"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readLines" desc="(Ljava/io/RandomAccessFile;)J" line="514"><counter type="INSTRUCTION" missed="114" covered="0"/><counter type="BRANCH" missed="15" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="129"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="454" covered="0"/><counter type="BRANCH" missed="41" covered="0"/><counter type="LINE" missed="125" covered="0"/><counter type="COMPLEXITY" missed="42" covered="0"/><counter type="METHOD" missed="21" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/NullInputStream" sourcefilename="NullInputStream.java"><method name="&lt;init&gt;" desc="(J)V" line="82"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(JZZ)V" line="69"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPosition" desc="()J" line="108"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSize" desc="()J" line="117"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="available" desc="()I" line="127"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="145"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mark" desc="(I)V" line="159"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="markSupported" desc="()Z" line="173"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="188"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([B)I" line="211"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([BII)I" line="229"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="255"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skip" desc="(J)J" line="283"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="processByte" desc="()I" line="307"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="processBytes" desc="([BII)V" line="322"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doEndOfFile" desc="()I" line="333"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="279" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="69" covered="0"/><counter type="COMPLEXITY" missed="31" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/DemuxInputStream" sourcefilename="DemuxInputStream.java"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bindStream" desc="(Ljava/io/InputStream;)Ljava/io/InputStream;" line="42"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="56"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="73"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/ReversedLinesFileReader$FilePart" sourcefilename="ReversedLinesFileReader.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[B)V" line="222"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rollOver" desc="()Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;" line="252"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readLine" desc="()Ljava/lang/String;" line="277"><counter type="INSTRUCTION" missed="114" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createLeftOver" desc="()V" line="333"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNewLineMatchByteCount" desc="([BI)I" line="352"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="336" covered="0"/><counter type="BRANCH" missed="44" covered="0"/><counter type="LINE" missed="63" covered="0"/><counter type="COMPLEXITY" missed="27" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/ObservableInputStream$Observer" sourcefilename="ObservableInputStream.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="data" desc="(I)V" line="47"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="data" desc="([BII)V" line="58"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="finished" desc="()V" line="66"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="closed" desc="()V" line="71"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="error" desc="(Ljava/io/IOException;)V" line="77"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/CharSequenceReader" sourcefilename="CharSequenceReader.java"><method name="&lt;init&gt;" desc="(Ljava/lang/CharSequence;)V" line="44"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="53"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mark" desc="(I)V" line="64"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="markSupported" desc="()Z" line="74"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="85"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([CII)I" line="103"><counter type="INSTRUCTION" missed="73" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="131"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skip" desc="(J)J" line="142"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="163"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="172" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="20" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/InfiniteCircularInputStream" sourcefilename="InfiniteCircularInputStream.java"><method name="&lt;init&gt;" desc="([B)V" line="33"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="47"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/ReversedLinesFileReader" sourcefilename="ReversedLinesFileReader.java"><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="65"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/nio/charset/Charset;)V" line="79"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;ILjava/nio/charset/Charset;)V" line="52"><counter type="INSTRUCTION" missed="177" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;ILjava/lang/String;)V" line="165"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readLine" desc="()Ljava/lang/String;" line="176"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="203"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="234" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="51" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/BoundedReader" sourcefilename="BoundedReader.java"><method name="&lt;init&gt;" desc="(Ljava/io/Reader;I)V" line="45"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="72"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="83"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mark" desc="(I)V" line="102"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="119"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([CII)I" line="143"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="100" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/ProxyReader" sourcefilename="ProxyReader.java"><method name="&lt;init&gt;" desc="(Ljava/io/Reader;)V" line="44"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="56"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([C)I" line="75"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([CII)I" line="96"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Ljava/nio/CharBuffer;)I" line="116"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skip" desc="(J)J" line="135"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ready" desc="()Z" line="150"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="164"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mark" desc="(I)V" line="178"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="191"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="markSupported" desc="()Z" line="203"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="beforeRead" desc="(I)V" line="225"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="afterRead" desc="(I)V" line="245"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleIOException" desc="(Ljava/io/IOException;)V" line="257"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="153" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="57" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/BrokenInputStream" sourcefilename="BrokenInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/IOException;)V" line="43"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="62"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="available" desc="()I" line="73"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skip" desc="(J)J" line="85"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="95"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="105"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/TaggedInputStream" sourcefilename="TaggedInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="69"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCauseOf" desc="(Ljava/lang/Throwable;)Z" line="88"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="throwIfCauseOf" desc="(Ljava/lang/Throwable;)V" line="102"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleIOException" desc="(Ljava/io/IOException;)V" line="113"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/ReaderInputStream" sourcefilename="ReaderInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;)V" line="109"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V" line="120"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V" line="137"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;Ljava/nio/charset/Charset;)V" line="152"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;Ljava/lang/String;I)V" line="163"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;Ljava/lang/String;)V" line="174"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;)V" line="186"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fillBuffer" desc="()V" line="196"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([BII)I" line="227"><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([B)I" line="265"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="278"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="295"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="260" covered="0"/><counter type="BRANCH" missed="36" covered="0"/><counter type="LINE" missed="62" covered="0"/><counter type="COMPLEXITY" missed="30" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/NullReader" sourcefilename="NullReader.java"><method name="&lt;init&gt;" desc="(J)V" line="82"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(JZZ)V" line="69"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPosition" desc="()J" line="108"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSize" desc="()J" line="117"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="128"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mark" desc="(I)V" line="142"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="markSupported" desc="()Z" line="156"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="171"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([C)I" line="194"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([CII)I" line="212"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="238"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skip" desc="(J)J" line="266"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="processChar" desc="()I" line="290"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="processChars" desc="([CII)V" line="305"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doEndOfFile" desc="()I" line="316"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="258" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="63" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/ObservableInputStream" sourcefilename="ObservableInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="80"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/apache/commons/io/input/ObservableInputStream$Observer;)V" line="95"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Lorg/apache/commons/io/input/ObservableInputStream$Observer;)V" line="103"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllObservers" desc="()V" line="110"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="115"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([B)I" line="134"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([BII)I" line="153"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="noteDataBytes" desc="([BII)V" line="179"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="noteFinished" desc="()V" line="189"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="noteDataByte" desc="(I)V" line="201"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="noteError" desc="(Ljava/io/IOException;)V" line="214"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="noteClosed" desc="()V" line="224"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObservers" desc="()Ljava/util/List;" line="233"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="238"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="consume" desc="()V" line="257"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="233" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="82" covered="0"/><counter type="COMPLEXITY" missed="30" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/ClassLoaderObjectInputStream" sourcefilename="ClassLoaderObjectInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/lang/ClassLoader;Ljava/io/InputStream;)V" line="50"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveClass" desc="(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;" line="68"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveProxyClass" desc="([Ljava/lang/String;)Ljava/lang/Class;" line="89"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/TeeInputStream" sourcefilename="TeeInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/io/OutputStream;)V" line="62"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/io/OutputStream;Z)V" line="78"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="93"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="110"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([BII)I" line="129"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([B)I" line="146"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="WindowsLineEndingInputStream.java"><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="8" ci="0" mb="2" cb="0"/><line nr="60" mi="3" ci="0" mb="2" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="8" ci="0" mb="2" cb="0"/><line nr="64" mi="8" ci="0" mb="2" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="2" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="2" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="2" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="2" cb="0"/><line nr="85" mi="2" ci="0" mb="2" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="2" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="6" ci="0" mb="4" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="2" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="1" ci="0" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="134" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="43" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TaggedInputStream.java"><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="XmlStreamReader.java"><line nr="86" mi="23" ci="0" mb="0" cb="0"/><line nr="95" mi="249" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="6" ci="0" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="1" ci="0" mb="0" cb="0"/><line nr="183" mi="5" ci="0" mb="0" cb="0"/><line nr="184" mi="1" ci="0" mb="0" cb="0"/><line nr="215" mi="2" ci="0" mb="0" cb="0"/><line nr="216" mi="3" ci="0" mb="0" cb="0"/><line nr="217" mi="11" ci="0" mb="0" cb="0"/><line nr="218" mi="7" ci="0" mb="0" cb="0"/><line nr="219" mi="7" ci="0" mb="0" cb="0"/><line nr="220" mi="8" ci="0" mb="0" cb="0"/><line nr="221" mi="1" ci="0" mb="0" cb="0"/><line nr="241" mi="5" ci="0" mb="0" cb="0"/><line nr="242" mi="1" ci="0" mb="0" cb="0"/><line nr="263" mi="2" ci="0" mb="0" cb="0"/><line nr="264" mi="3" ci="0" mb="0" cb="0"/><line nr="265" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="3" ci="0" mb="0" cb="0"/><line nr="267" mi="3" ci="0" mb="0" cb="0"/><line nr="268" mi="11" ci="0" mb="0" cb="0"/><line nr="269" mi="7" ci="0" mb="0" cb="0"/><line nr="270" mi="5" ci="0" mb="4" cb="0"/><line nr="271" mi="9" ci="0" mb="0" cb="0"/><line nr="273" mi="7" ci="0" mb="0" cb="0"/><line nr="275" mi="8" ci="0" mb="0" cb="0"/><line nr="276" mi="1" ci="0" mb="0" cb="0"/><line nr="297" mi="5" ci="0" mb="0" cb="0"/><line nr="298" mi="1" ci="0" mb="0" cb="0"/><line nr="335" mi="2" ci="0" mb="0" cb="0"/><line nr="336" mi="3" ci="0" mb="0" cb="0"/><line nr="337" mi="11" ci="0" mb="0" cb="0"/><line nr="338" mi="7" ci="0" mb="0" cb="0"/><line nr="339" mi="8" ci="0" mb="0" cb="0"/><line nr="340" mi="8" ci="0" mb="0" cb="0"/><line nr="341" mi="1" ci="0" mb="0" cb="0"/><line nr="378" mi="6" ci="0" mb="0" cb="0"/><line nr="379" mi="1" ci="0" mb="0" cb="0"/><line nr="387" mi="3" ci="0" mb="0" cb="0"/><line nr="400" mi="7" ci="0" mb="0" cb="0"/><line nr="410" mi="3" ci="0" mb="0" cb="0"/><line nr="411" mi="1" ci="0" mb="0" cb="0"/><line nr="425" mi="3" ci="0" mb="0" cb="0"/><line nr="426" mi="3" ci="0" mb="0" cb="0"/><line nr="427" mi="4" ci="0" mb="0" cb="0"/><line nr="429" mi="6" ci="0" mb="0" cb="0"/><line nr="430" mi="1" ci="0" mb="0" cb="0"/><line nr="431" mi="2" ci="0" mb="2" cb="0"/><line nr="432" mi="5" ci="0" mb="0" cb="0"/><line nr="434" mi="2" ci="0" mb="0" cb="0"/><line nr="452" mi="3" ci="0" mb="0" cb="0"/><line nr="453" mi="3" ci="0" mb="0" cb="0"/><line nr="454" mi="4" ci="0" mb="0" cb="0"/><line nr="456" mi="8" ci="0" mb="0" cb="0"/><line nr="458" mi="1" ci="0" mb="0" cb="0"/><line nr="459" mi="2" ci="0" mb="2" cb="0"/><line nr="460" mi="5" ci="0" mb="0" cb="0"/><line nr="462" mi="2" ci="0" mb="0" cb="0"/><line nr="478" mi="6" ci="0" mb="4" cb="0"/><line nr="479" mi="5" ci="0" mb="0" cb="0"/><line nr="480" mi="9" ci="0" mb="0" cb="0"/><line nr="482" mi="7" ci="0" mb="0" cb="0"/><line nr="483" mi="4" ci="0" mb="0" cb="0"/><line nr="484" mi="1" ci="0" mb="0" cb="0"/><line nr="485" mi="2" ci="0" mb="0" cb="0"/><line nr="488" mi="3" ci="0" mb="0" cb="0"/><line nr="489" mi="2" ci="0" mb="2" cb="0"/><line nr="490" mi="3" ci="0" mb="0" cb="0"/><line nr="492" mi="2" ci="0" mb="2" cb="0"/><line nr="493" mi="8" ci="0" mb="2" cb="0"/><line nr="495" mi="2" ci="0" mb="0" cb="0"/><line nr="511" mi="2" ci="0" mb="2" cb="0"/><line nr="512" mi="4" ci="0" mb="4" cb="0"/><line nr="513" mi="8" ci="0" mb="2" cb="0"/><line nr="515" mi="6" ci="0" mb="2" cb="0"/><line nr="516" mi="6" ci="0" mb="4" cb="0"/><line nr="517" mi="2" ci="0" mb="0" cb="0"/><line nr="519" mi="2" ci="0" mb="0" cb="0"/><line nr="523" mi="4" ci="0" mb="2" cb="0"/><line nr="524" mi="6" ci="0" mb="4" cb="0"/><line nr="525" mi="17" ci="0" mb="0" cb="0"/><line nr="526" mi="8" ci="0" mb="0" cb="0"/><line nr="528" mi="6" ci="0" mb="4" cb="0"/><line nr="529" mi="17" ci="0" mb="0" cb="0"/><line nr="530" mi="8" ci="0" mb="0" cb="0"/><line nr="532" mi="2" ci="0" mb="0" cb="0"/><line nr="536" mi="8" ci="0" mb="4" cb="0"/><line nr="537" mi="6" ci="0" mb="4" cb="0"/><line nr="538" mi="17" ci="0" mb="0" cb="0"/><line nr="539" mi="8" ci="0" mb="0" cb="0"/><line nr="541" mi="10" ci="0" mb="6" cb="0"/><line nr="542" mi="17" ci="0" mb="0" cb="0"/><line nr="543" mi="8" ci="0" mb="0" cb="0"/><line nr="545" mi="2" ci="0" mb="0" cb="0"/><line nr="549" mi="8" ci="0" mb="4" cb="0"/><line nr="550" mi="6" ci="0" mb="4" cb="0"/><line nr="551" mi="17" ci="0" mb="0" cb="0"/><line nr="552" mi="8" ci="0" mb="0" cb="0"/><line nr="554" mi="10" ci="0" mb="6" cb="0"/><line nr="555" mi="17" ci="0" mb="0" cb="0"/><line nr="556" mi="8" ci="0" mb="0" cb="0"/><line nr="558" mi="2" ci="0" mb="0" cb="0"/><line nr="562" mi="17" ci="0" mb="0" cb="0"/><line nr="563" mi="8" ci="0" mb="0" cb="0"/><line nr="584" mi="4" ci="0" mb="4" cb="0"/><line nr="585" mi="2" ci="0" mb="0" cb="0"/><line nr="589" mi="3" ci="0" mb="0" cb="0"/><line nr="590" mi="3" ci="0" mb="0" cb="0"/><line nr="591" mi="3" ci="0" mb="0" cb="0"/><line nr="592" mi="3" ci="0" mb="0" cb="0"/><line nr="595" mi="4" ci="0" mb="4" cb="0"/><line nr="596" mi="25" ci="0" mb="0" cb="0"/><line nr="597" mi="10" ci="0" mb="0" cb="0"/><line nr="601" mi="2" ci="0" mb="2" cb="0"/><line nr="602" mi="2" ci="0" mb="2" cb="0"/><line nr="603" mi="6" ci="0" mb="0" cb="0"/><line nr="605" mi="8" ci="0" mb="2" cb="0"/><line nr="610" mi="8" ci="0" mb="4" cb="0"/><line nr="611" mi="2" ci="0" mb="2" cb="0"/><line nr="612" mi="25" ci="0" mb="0" cb="0"/><line nr="613" mi="10" ci="0" mb="0" cb="0"/><line nr="615" mi="2" ci="0" mb="0" cb="0"/><line nr="619" mi="4" ci="0" mb="2" cb="0"/><line nr="620" mi="6" ci="0" mb="4" cb="0"/><line nr="621" mi="2" ci="0" mb="0" cb="0"/><line nr="623" mi="25" ci="0" mb="0" cb="0"/><line nr="624" mi="10" ci="0" mb="0" cb="0"/><line nr="628" mi="8" ci="0" mb="4" cb="0"/><line nr="629" mi="2" ci="0" mb="2" cb="0"/><line nr="630" mi="25" ci="0" mb="0" cb="0"/><line nr="631" mi="10" ci="0" mb="0" cb="0"/><line nr="633" mi="2" ci="0" mb="0" cb="0"/><line nr="637" mi="4" ci="0" mb="2" cb="0"/><line nr="638" mi="6" ci="0" mb="4" cb="0"/><line nr="639" mi="2" ci="0" mb="0" cb="0"/><line nr="641" mi="25" ci="0" mb="0" cb="0"/><line nr="642" mi="10" ci="0" mb="0" cb="0"/><line nr="645" mi="2" ci="0" mb="0" cb="0"/><line nr="655" mi="2" ci="0" mb="0" cb="0"/><line nr="656" mi="2" ci="0" mb="2" cb="0"/><line nr="657" mi="4" ci="0" mb="0" cb="0"/><line nr="658" mi="2" ci="0" mb="2" cb="0"/><line nr="659" mi="6" ci="0" mb="0" cb="0"/><line nr="661" mi="2" ci="0" mb="0" cb="0"/><line nr="663" mi="3" ci="0" mb="0" cb="0"/><line nr="665" mi="2" ci="0" mb="0" cb="0"/><line nr="668" mi="1" ci="0" mb="0" cb="0"/><line nr="669" mi="2" ci="0" mb="0" cb="0"/><line nr="679" mi="2" ci="0" mb="0" cb="0"/><line nr="680" mi="2" ci="0" mb="2" cb="0"/><line nr="681" mi="4" ci="0" mb="0" cb="0"/><line nr="682" mi="3" ci="0" mb="2" cb="0"/><line nr="683" mi="6" ci="0" mb="0" cb="0"/><line nr="684" mi="4" ci="0" mb="0" cb="0"/><line nr="685" mi="9" ci="0" mb="2" cb="0"/><line nr="686" mi="8" ci="0" mb="2" cb="0"/><line nr="689" mi="2" ci="0" mb="0" cb="0"/><line nr="692" mi="5" ci="0" mb="0" cb="0"/><line nr="706" mi="2" ci="0" mb="0" cb="0"/><line nr="707" mi="2" ci="0" mb="2" cb="0"/><line nr="708" mi="3" ci="0" mb="0" cb="0"/><line nr="709" mi="3" ci="0" mb="0" cb="0"/><line nr="710" mi="2" ci="0" mb="0" cb="0"/><line nr="711" mi="2" ci="0" mb="0" cb="0"/><line nr="712" mi="6" ci="0" mb="0" cb="0"/><line nr="713" mi="2" ci="0" mb="0" cb="0"/><line nr="714" mi="2" ci="0" mb="0" cb="0"/><line nr="715" mi="9" ci="0" mb="6" cb="0"/><line nr="716" mi="4" ci="0" mb="0" cb="0"/><line nr="717" mi="4" ci="0" mb="0" cb="0"/><line nr="718" mi="6" ci="0" mb="0" cb="0"/><line nr="719" mi="8" ci="0" mb="0" cb="0"/><line nr="720" mi="5" ci="0" mb="0" cb="0"/><line nr="722" mi="3" ci="0" mb="2" cb="0"/><line nr="723" mi="3" ci="0" mb="2" cb="0"/><line nr="724" mi="5" ci="0" mb="0" cb="0"/><line nr="726" mi="14" ci="0" mb="0" cb="0"/><line nr="731" mi="2" ci="0" mb="0" cb="0"/><line nr="732" mi="2" ci="0" mb="2" cb="0"/><line nr="733" mi="2" ci="0" mb="0" cb="0"/><line nr="734" mi="9" ci="0" mb="0" cb="0"/><line nr="735" mi="4" ci="0" mb="0" cb="0"/><line nr="736" mi="4" ci="0" mb="0" cb="0"/><line nr="737" mi="3" ci="0" mb="0" cb="0"/><line nr="738" mi="2" ci="0" mb="2" cb="0"/><line nr="739" mi="4" ci="0" mb="0" cb="0"/><line nr="740" mi="4" ci="0" mb="0" cb="0"/><line nr="742" mi="4" ci="0" mb="0" cb="0"/><line nr="743" mi="3" ci="0" mb="2" cb="0"/><line nr="744" mi="5" ci="0" mb="0" cb="0"/><line nr="745" mi="8" ci="0" mb="0" cb="0"/><line nr="749" mi="2" ci="0" mb="0" cb="0"/><line nr="760" mi="5" ci="0" mb="2" cb="0"/><line nr="761" mi="4" ci="0" mb="2" cb="0"/><line nr="762" mi="4" ci="0" mb="2" cb="0"/><line nr="763" mi="4" ci="0" mb="2" cb="0"/><line nr="764" mi="9" ci="0" mb="4" cb="0"/><line nr="775" mi="5" ci="0" mb="2" cb="0"/><line nr="776" mi="4" ci="0" mb="2" cb="0"/><line nr="777" mi="4" ci="0" mb="2" cb="0"/><line nr="778" mi="9" ci="0" mb="4" cb="0"/><counter type="INSTRUCTION" missed="1376" covered="0"/><counter type="BRANCH" missed="160" covered="0"/><counter type="LINE" missed="204" covered="0"/><counter type="COMPLEXITY" missed="104" covered="0"/><counter type="METHOD" missed="24" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Tailer.java"><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="177" mi="5" ci="0" mb="0" cb="0"/><line nr="178" mi="1" ci="0" mb="0" cb="0"/><line nr="187" mi="6" ci="0" mb="0" cb="0"/><line nr="188" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="7" ci="0" mb="0" cb="0"/><line nr="199" mi="1" ci="0" mb="0" cb="0"/><line nr="211" mi="8" ci="0" mb="0" cb="0"/><line nr="212" mi="1" ci="0" mb="0" cb="0"/><line nr="224" mi="8" ci="0" mb="0" cb="0"/><line nr="225" mi="1" ci="0" mb="0" cb="0"/><line nr="238" mi="9" ci="0" mb="0" cb="0"/><line nr="239" mi="1" ci="0" mb="0" cb="0"/><line nr="253" mi="2" ci="0" mb="0" cb="0"/><line nr="254" mi="3" ci="0" mb="0" cb="0"/><line nr="255" mi="3" ci="0" mb="0" cb="0"/><line nr="256" mi="3" ci="0" mb="0" cb="0"/><line nr="258" mi="4" ci="0" mb="0" cb="0"/><line nr="261" mi="3" ci="0" mb="0" cb="0"/><line nr="262" mi="3" ci="0" mb="0" cb="0"/><line nr="263" mi="3" ci="0" mb="0" cb="0"/><line nr="264" mi="3" ci="0" mb="0" cb="0"/><line nr="265" mi="1" ci="0" mb="0" cb="0"/><line nr="279" mi="8" ci="0" mb="0" cb="0"/><line nr="296" mi="9" ci="0" mb="0" cb="0"/><line nr="314" mi="11" ci="0" mb="0" cb="0"/><line nr="315" mi="5" ci="0" mb="0" cb="0"/><line nr="316" mi="3" ci="0" mb="0" cb="0"/><line nr="317" mi="2" ci="0" mb="0" cb="0"/><line nr="318" mi="2" ci="0" mb="0" cb="0"/><line nr="332" mi="7" ci="0" mb="0" cb="0"/><line nr="347" mi="8" ci="0" mb="0" cb="0"/><line nr="359" mi="6" ci="0" mb="0" cb="0"/><line nr="371" mi="6" ci="0" mb="0" cb="0"/><line nr="380" mi="3" ci="0" mb="0" cb="0"/><line nr="390" mi="3" ci="0" mb="0" cb="0"/><line nr="399" mi="3" ci="0" mb="0" cb="0"/><line nr="407" mi="2" ci="0" mb="0" cb="0"/><line nr="409" mi="2" ci="0" mb="0" cb="0"/><line nr="410" mi="2" ci="0" mb="0" cb="0"/><line nr="412" mi="5" ci="0" mb="4" cb="0"/><line nr="414" mi="7" ci="0" mb="0" cb="0"/><line nr="415" mi="1" ci="0" mb="0" cb="0"/><line nr="416" mi="3" ci="0" mb="0" cb="0"/><line nr="417" mi="1" ci="0" mb="0" cb="0"/><line nr="418" mi="2" ci="0" mb="2" cb="0"/><line nr="419" mi="4" ci="0" mb="0" cb="0"/><line nr="422" mi="9" ci="0" mb="2" cb="0"/><line nr="423" mi="4" ci="0" mb="0" cb="0"/><line nr="424" mi="4" ci="0" mb="0" cb="0"/><line nr="427" mi="3" ci="0" mb="2" cb="0"/><line nr="428" mi="5" ci="0" mb="0" cb="0"/><line nr="430" mi="4" ci="0" mb="0" cb="0"/><line nr="431" mi="4" ci="0" mb="2" cb="0"/><line nr="433" mi="3" ci="0" mb="0" cb="0"/><line nr="436" mi="4" ci="0" mb="0" cb="0"/><line nr="437" mi="7" ci="0" mb="0" cb="0"/><line nr="441" mi="4" ci="0" mb="0" cb="0"/><line nr="442" mi="1" ci="0" mb="0" cb="0"/><line nr="443" mi="4" ci="0" mb="0" cb="0"/><line nr="444" mi="1" ci="0" mb="0" cb="0"/><line nr="445" mi="2" ci="0" mb="0" cb="0"/><line nr="446" mi="1" ci="0" mb="0" cb="0"/><line nr="448" mi="3" ci="0" mb="0" cb="0"/><line nr="449" mi="3" ci="0" mb="0" cb="0"/><line nr="450" mi="1" ci="0" mb="0" cb="0"/><line nr="451" mi="1" ci="0" mb="0" cb="0"/><line nr="455" mi="4" ci="0" mb="2" cb="0"/><line nr="457" mi="4" ci="0" mb="0" cb="0"/><line nr="458" mi="5" ci="0" mb="0" cb="0"/><line nr="459" mi="2" ci="0" mb="2" cb="0"/><line nr="464" mi="2" ci="0" mb="0" cb="0"/><line nr="465" mi="3" ci="0" mb="0" cb="0"/><line nr="468" mi="4" ci="0" mb="0" cb="0"/><line nr="469" mi="4" ci="0" mb="0" cb="0"/><line nr="472" mi="5" ci="0" mb="4" cb="0"/><line nr="473" mi="2" ci="0" mb="0" cb="0"/><line nr="475" mi="3" ci="0" mb="0" cb="0"/><line nr="476" mi="6" ci="0" mb="4" cb="0"/><line nr="477" mi="7" ci="0" mb="0" cb="0"/><line nr="478" mi="3" ci="0" mb="0" cb="0"/><line nr="480" mi="1" ci="0" mb="0" cb="0"/><line nr="481" mi="1" ci="0" mb="0" cb="0"/><line nr="482" mi="2" ci="0" mb="0" cb="0"/><line nr="483" mi="4" ci="0" mb="0" cb="0"/><line nr="484" mi="1" ci="0" mb="0" cb="0"/><line nr="485" mi="4" ci="0" mb="0" cb="0"/><line nr="488" mi="2" ci="0" mb="2" cb="0"/><line nr="489" mi="2" ci="0" mb="0" cb="0"/><line nr="492" mi="1" ci="0" mb="0" cb="0"/><line nr="493" mi="4" ci="0" mb="0" cb="0"/><line nr="494" mi="1" ci="0" mb="0" cb="0"/><line nr="495" mi="2" ci="0" mb="0" cb="0"/><line nr="497" mi="1" ci="0" mb="0" cb="0"/><line nr="503" mi="3" ci="0" mb="0" cb="0"/><line nr="504" mi="1" ci="0" mb="0" cb="0"/><line nr="514" mi="7" ci="0" mb="0" cb="0"/><line nr="515" mi="3" ci="0" mb="0" cb="0"/><line nr="516" mi="2" ci="0" mb="0" cb="0"/><line nr="518" mi="2" ci="0" mb="0" cb="0"/><line nr="519" mi="11" ci="0" mb="4" cb="0"/><line nr="520" mi="7" ci="0" mb="2" cb="0"/><line nr="521" mi="5" ci="0" mb="0" cb="0"/><line nr="522" mi="2" ci="0" mb="3" cb="0"/><line nr="524" mi="2" ci="0" mb="0" cb="0"/><line nr="525" mi="10" ci="0" mb="0" cb="0"/><line nr="526" mi="2" ci="0" mb="0" cb="0"/><line nr="527" mi="7" ci="0" mb="0" cb="0"/><line nr="528" mi="1" ci="0" mb="0" cb="0"/><line nr="530" mi="2" ci="0" mb="2" cb="0"/><line nr="531" mi="3" ci="0" mb="0" cb="0"/><line nr="533" mi="2" ci="0" mb="0" cb="0"/><line nr="534" mi="1" ci="0" mb="0" cb="0"/><line nr="536" mi="2" ci="0" mb="2" cb="0"/><line nr="537" mi="2" ci="0" mb="0" cb="0"/><line nr="538" mi="10" ci="0" mb="0" cb="0"/><line nr="539" mi="2" ci="0" mb="0" cb="0"/><line nr="540" mi="7" ci="0" mb="0" cb="0"/><line nr="542" mi="3" ci="0" mb="0" cb="0"/><line nr="545" mi="4" ci="0" mb="0" cb="0"/><line nr="548" mi="3" ci="0" mb="0" cb="0"/><line nr="550" mi="4" ci="0" mb="2" cb="0"/><line nr="551" mi="4" ci="0" mb="0" cb="0"/><line nr="554" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="454" covered="0"/><counter type="BRANCH" missed="41" covered="0"/><counter type="LINE" missed="125" covered="0"/><counter type="COMPLEXITY" missed="42" covered="0"/><counter type="METHOD" missed="21" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CloseShieldInputStream.java"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BoundedInputStream.java"><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="11" ci="0" mb="4" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="6" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="7" ci="0" mb="0" cb="0"/><line nr="118" mi="11" ci="0" mb="4" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="17" ci="0" mb="2" cb="0"/><line nr="122" mi="8" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="2" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="7" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="15" ci="0" mb="2" cb="0"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="6" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="11" ci="0" mb="4" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="2" cb="0"/><line nr="174" mi="3" ci="0" mb="0" cb="0"/><line nr="176" mi="1" ci="0" mb="0" cb="0"/><line nr="184" mi="3" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="1" ci="0" mb="0" cb="0"/><line nr="194" mi="4" ci="0" mb="0" cb="0"/><line nr="195" mi="4" ci="0" mb="0" cb="0"/><line nr="196" mi="1" ci="0" mb="0" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="216" mi="3" ci="0" mb="0" cb="0"/><line nr="229" mi="3" ci="0" mb="0" cb="0"/><line nr="230" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="191" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ProxyInputStream.java"><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="1" ci="7" mb="1" cb="1"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="2" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="4" ci="0" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="171" mi="1" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="180" mi="4" ci="0" mb="0" cb="0"/><line nr="203" mi="0" ci="1" mb="0" cb="0"/><line nr="224" mi="0" ci="1" mb="0" cb="0"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="78" covered="45"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="31" covered="16"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="6" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClosedInputStream.java"><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClassLoaderObjectInputStream.java"><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="7" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="8" ci="0" mb="2" cb="0"/><line nr="91" mi="10" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NullInputStream.java"><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="6" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="2" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="2" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="2" cb="0"/><line nr="160" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="188" mi="3" ci="0" mb="2" cb="0"/><line nr="189" mi="5" ci="0" mb="0" cb="0"/><line nr="191" mi="6" ci="0" mb="2" cb="0"/><line nr="192" mi="3" ci="0" mb="0" cb="0"/><line nr="194" mi="6" ci="0" mb="0" cb="0"/><line nr="195" mi="3" ci="0" mb="0" cb="0"/><line nr="211" mi="7" ci="0" mb="0" cb="0"/><line nr="229" mi="3" ci="0" mb="2" cb="0"/><line nr="230" mi="5" ci="0" mb="0" cb="0"/><line nr="232" mi="6" ci="0" mb="2" cb="0"/><line nr="233" mi="3" ci="0" mb="0" cb="0"/><line nr="235" mi="7" ci="0" mb="0" cb="0"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><line nr="237" mi="6" ci="0" mb="2" cb="0"/><line nr="238" mi="9" ci="0" mb="0" cb="0"/><line nr="239" mi="4" ci="0" mb="0" cb="0"/><line nr="241" mi="5" ci="0" mb="0" cb="0"/><line nr="242" mi="2" ci="0" mb="0" cb="0"/><line nr="255" mi="3" ci="0" mb="2" cb="0"/><line nr="256" mi="5" ci="0" mb="0" cb="0"/><line nr="258" mi="5" ci="0" mb="2" cb="0"/><line nr="259" mi="5" ci="0" mb="0" cb="0"/><line nr="261" mi="9" ci="0" mb="2" cb="0"/><line nr="262" mi="20" ci="0" mb="0" cb="0"/><line nr="266" mi="4" ci="0" mb="0" cb="0"/><line nr="267" mi="3" ci="0" mb="0" cb="0"/><line nr="268" mi="1" ci="0" mb="0" cb="0"/><line nr="283" mi="3" ci="0" mb="2" cb="0"/><line nr="284" mi="5" ci="0" mb="0" cb="0"/><line nr="286" mi="6" ci="0" mb="2" cb="0"/><line nr="287" mi="4" ci="0" mb="0" cb="0"/><line nr="289" mi="6" ci="0" mb="0" cb="0"/><line nr="290" mi="2" ci="0" mb="0" cb="0"/><line nr="291" mi="6" ci="0" mb="2" cb="0"/><line nr="292" mi="8" ci="0" mb="0" cb="0"/><line nr="293" mi="4" ci="0" mb="0" cb="0"/><line nr="295" mi="2" ci="0" mb="0" cb="0"/><line nr="307" mi="2" ci="0" mb="0" cb="0"/><line nr="322" mi="1" ci="0" mb="0" cb="0"/><line nr="333" mi="3" ci="0" mb="0" cb="0"/><line nr="334" mi="3" ci="0" mb="2" cb="0"/><line nr="335" mi="4" ci="0" mb="0" cb="0"/><line nr="337" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="279" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="69" covered="0"/><counter type="COMPLEXITY" missed="31" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NullReader.java"><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="2" cb="0"/><line nr="143" mi="5" ci="0" mb="0" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="2" cb="0"/><line nr="172" mi="5" ci="0" mb="0" cb="0"/><line nr="174" mi="6" ci="0" mb="2" cb="0"/><line nr="175" mi="3" ci="0" mb="0" cb="0"/><line nr="177" mi="6" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="0" cb="0"/><line nr="194" mi="7" ci="0" mb="0" cb="0"/><line nr="212" mi="3" ci="0" mb="2" cb="0"/><line nr="213" mi="5" ci="0" mb="0" cb="0"/><line nr="215" mi="6" ci="0" mb="2" cb="0"/><line nr="216" mi="3" ci="0" mb="0" cb="0"/><line nr="218" mi="7" ci="0" mb="0" cb="0"/><line nr="219" mi="2" ci="0" mb="0" cb="0"/><line nr="220" mi="6" ci="0" mb="2" cb="0"/><line nr="221" mi="9" ci="0" mb="0" cb="0"/><line nr="222" mi="4" ci="0" mb="0" cb="0"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><line nr="225" mi="2" ci="0" mb="0" cb="0"/><line nr="238" mi="3" ci="0" mb="2" cb="0"/><line nr="239" mi="5" ci="0" mb="0" cb="0"/><line nr="241" mi="5" ci="0" mb="2" cb="0"/><line nr="242" mi="5" ci="0" mb="0" cb="0"/><line nr="244" mi="9" ci="0" mb="2" cb="0"/><line nr="245" mi="20" ci="0" mb="0" cb="0"/><line nr="249" mi="4" ci="0" mb="0" cb="0"/><line nr="250" mi="3" ci="0" mb="0" cb="0"/><line nr="251" mi="1" ci="0" mb="0" cb="0"/><line nr="266" mi="3" ci="0" mb="2" cb="0"/><line nr="267" mi="5" ci="0" mb="0" cb="0"/><line nr="269" mi="6" ci="0" mb="2" cb="0"/><line nr="270" mi="4" ci="0" mb="0" cb="0"/><line nr="272" mi="6" ci="0" mb="0" cb="0"/><line nr="273" mi="2" ci="0" mb="0" cb="0"/><line nr="274" mi="6" ci="0" mb="2" cb="0"/><line nr="275" mi="8" ci="0" mb="0" cb="0"/><line nr="276" mi="4" ci="0" mb="0" cb="0"/><line nr="278" mi="2" ci="0" mb="0" cb="0"/><line nr="290" mi="2" ci="0" mb="0" cb="0"/><line nr="305" mi="1" ci="0" mb="0" cb="0"/><line nr="316" mi="3" ci="0" mb="0" cb="0"/><line nr="317" mi="3" ci="0" mb="2" cb="0"/><line nr="318" mi="4" ci="0" mb="0" cb="0"/><line nr="320" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="258" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="63" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DemuxInputStream.java"><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="6" ci="0" mb="0" cb="0"/><line nr="42" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="2" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="2" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CharSequenceReader.java"><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="7" ci="0" mb="2" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="6" ci="0" mb="2" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="11" ci="0" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="2" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="2" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="10" ci="0" mb="6" cb="0"/><line nr="110" mi="21" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="7" ci="0" mb="2" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="2" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="7" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="2" cb="0"/><line nr="143" mi="12" ci="0" mb="0" cb="0"/><line nr="146" mi="6" ci="0" mb="2" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="12" ci="0" mb="0" cb="0"/><line nr="150" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="172" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="20" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TailerListener.java"/><sourcefile name="XmlStreamReaderException.java"><line nr="60" mi="8" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="UnixLineEndingInputStream.java"><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="8" ci="0" mb="2" cb="0"/><line nr="59" mi="3" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="8" ci="0" mb="2" cb="0"/><line nr="63" mi="8" ci="0" mb="2" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="2" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="2" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="2" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="4" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="4" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="2" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="116" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="35" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TeeInputStream.java"><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="2" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="2" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="6" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="2" cb="0"/><line nr="131" mi="6" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="2" cb="0"/><line nr="148" mi="6" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ReversedLinesFileReader.java"><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="2" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="2" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="6" ci="0" mb="2" cb="0"/><line nr="112" mi="4" ci="0" mb="2" cb="0"/><line nr="113" mi="4" ci="0" mb="2" cb="0"/><line nr="114" mi="4" ci="0" mb="2" cb="0"/><line nr="115" mi="2" ci="0" mb="2" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="6" ci="0" mb="4" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="2" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="14" ci="0" mb="0" cb="0"/><line nr="130" mi="22" ci="0" mb="0" cb="0"/><line nr="132" mi="7" ci="0" mb="0" cb="0"/><line nr="135" mi="7" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="7" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="2" cb="0"/><line nr="139" mi="10" ci="0" mb="0" cb="0"/><line nr="141" mi="7" ci="0" mb="0" cb="0"/><line nr="142" mi="5" ci="0" mb="2" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="11" ci="0" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="6" ci="0" mb="0" cb="0"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="4" ci="0" mb="0" cb="0"/><line nr="177" mi="2" ci="0" mb="2" cb="0"/><line nr="178" mi="5" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="2" cb="0"/><line nr="180" mi="5" ci="0" mb="0" cb="0"/><line nr="188" mi="7" ci="0" mb="4" cb="0"/><line nr="189" mi="3" ci="0" mb="0" cb="0"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="0" cb="0"/><line nr="204" mi="1" ci="0" mb="0" cb="0"/><line nr="222" mi="5" ci="0" mb="0" cb="0"/><line nr="223" mi="3" ci="0" mb="0" cb="0"/><line nr="224" mi="9" ci="0" mb="2" cb="0"/><line nr="225" mi="4" ci="0" mb="0" cb="0"/><line nr="226" mi="8" ci="0" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="2" cb="0"/><line nr="230" mi="4" ci="0" mb="0" cb="0"/><line nr="231" mi="8" ci="0" mb="0" cb="0"/><line nr="232" mi="3" ci="0" mb="2" cb="0"/><line nr="233" mi="5" ci="0" mb="0" cb="0"/><line nr="237" mi="2" ci="0" mb="2" cb="0"/><line nr="238" mi="8" ci="0" mb="0" cb="0"/><line nr="240" mi="7" ci="0" mb="0" cb="0"/><line nr="241" mi="3" ci="0" mb="0" cb="0"/><line nr="242" mi="1" ci="0" mb="0" cb="0"/><line nr="252" mi="4" ci="0" mb="2" cb="0"/><line nr="253" mi="13" ci="0" mb="0" cb="0"/><line nr="257" mi="5" ci="0" mb="2" cb="0"/><line nr="258" mi="15" ci="0" mb="0" cb="0"/><line nr="261" mi="3" ci="0" mb="2" cb="0"/><line nr="262" mi="13" ci="0" mb="0" cb="0"/><line nr="263" mi="6" ci="0" mb="0" cb="0"/><line nr="265" mi="2" ci="0" mb="0" cb="0"/><line nr="277" mi="2" ci="0" mb="0" cb="0"/><line nr="280" mi="9" ci="0" mb="2" cb="0"/><line nr="282" mi="3" ci="0" mb="0" cb="0"/><line nr="283" mi="3" ci="0" mb="2" cb="0"/><line nr="285" mi="7" ci="0" mb="4" cb="0"/><line nr="288" mi="2" ci="0" mb="0" cb="0"/><line nr="289" mi="1" ci="0" mb="0" cb="0"/><line nr="293" mi="8" ci="0" mb="2" cb="0"/><line nr="294" mi="4" ci="0" mb="0" cb="0"/><line nr="295" mi="7" ci="0" mb="0" cb="0"/><line nr="297" mi="2" ci="0" mb="2" cb="0"/><line nr="298" mi="12" ci="0" mb="0" cb="0"/><line nr="300" mi="3" ci="0" mb="0" cb="0"/><line nr="301" mi="7" ci="0" mb="0" cb="0"/><line nr="303" mi="8" ci="0" mb="0" cb="0"/><line nr="305" mi="5" ci="0" mb="0" cb="0"/><line nr="306" mi="1" ci="0" mb="0" cb="0"/><line nr="310" mi="6" ci="0" mb="0" cb="0"/><line nr="313" mi="2" ci="0" mb="2" cb="0"/><line nr="314" mi="2" ci="0" mb="0" cb="0"/><line nr="315" mi="1" ci="0" mb="0" cb="0"/><line nr="320" mi="5" ci="0" mb="4" cb="0"/><line nr="322" mi="9" ci="0" mb="0" cb="0"/><line nr="323" mi="3" ci="0" mb="0" cb="0"/><line nr="326" mi="2" ci="0" mb="0" cb="0"/><line nr="333" mi="5" ci="0" mb="0" cb="0"/><line nr="334" mi="2" ci="0" mb="2" cb="0"/><line nr="336" mi="4" ci="0" mb="0" cb="0"/><line nr="337" mi="9" ci="0" mb="0" cb="0"/><line nr="339" mi="3" ci="0" mb="0" cb="0"/><line nr="341" mi="3" ci="0" mb="0" cb="0"/><line nr="342" mi="1" ci="0" mb="0" cb="0"/><line nr="352" mi="18" ci="0" mb="2" cb="0"/><line nr="353" mi="2" ci="0" mb="0" cb="0"/><line nr="354" mi="9" ci="0" mb="2" cb="0"/><line nr="355" mi="9" ci="0" mb="0" cb="0"/><line nr="356" mi="15" ci="0" mb="4" cb="0"/><line nr="358" mi="2" ci="0" mb="2" cb="0"/><line nr="359" mi="3" ci="0" mb="0" cb="0"/><line nr="362" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="570" covered="0"/><counter type="BRANCH" missed="76" covered="0"/><counter type="LINE" missed="114" covered="0"/><counter type="COMPLEXITY" missed="49" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="InfiniteCircularInputStream.java"><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="10" ci="0" mb="0" cb="0"/><line nr="48" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AutoCloseInputStream.java"><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="2" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ReaderInputStream.java"><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="4" ci="0" mb="0" cb="0"/><line nr="124" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="1" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="6" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="5" ci="0" mb="0" cb="0"/><line nr="175" mi="1" ci="0" mb="0" cb="0"/><line nr="186" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="1" ci="0" mb="0" cb="0"/><line nr="196" mi="10" ci="0" mb="6" cb="0"/><line nr="197" mi="4" ci="0" mb="0" cb="0"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="11" ci="0" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="2" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="206" mi="7" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="0" cb="0"/><line nr="211" mi="11" ci="0" mb="0" cb="0"/><line nr="212" mi="4" ci="0" mb="0" cb="0"/><line nr="213" mi="1" ci="0" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="2" cb="0"/><line nr="228" mi="5" ci="0" mb="0" cb="0"/><line nr="230" mi="10" ci="0" mb="6" cb="0"/><line nr="231" mi="21" ci="0" mb="0" cb="0"/><line nr="234" mi="2" ci="0" mb="0" cb="0"/><line nr="235" mi="2" ci="0" mb="2" cb="0"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><line nr="238" mi="2" ci="0" mb="2" cb="0"/><line nr="239" mi="4" ci="0" mb="2" cb="0"/><line nr="240" mi="6" ci="0" mb="0" cb="0"/><line nr="241" mi="7" ci="0" mb="0" cb="0"/><line nr="242" mi="4" ci="0" mb="0" cb="0"/><line nr="243" mi="4" ci="0" mb="0" cb="0"/><line nr="244" mi="4" ci="0" mb="0" cb="0"/><line nr="245" mi="1" ci="0" mb="0" cb="0"/><line nr="246" mi="2" ci="0" mb="0" cb="0"/><line nr="247" mi="7" ci="0" mb="4" cb="0"/><line nr="248" mi="1" ci="0" mb="0" cb="0"/><line nr="252" mi="9" ci="0" mb="4" cb="0"/><line nr="265" mi="7" ci="0" mb="0" cb="0"/><line nr="278" mi="4" ci="0" mb="2" cb="0"/><line nr="279" mi="6" ci="0" mb="0" cb="0"/><line nr="281" mi="2" ci="0" mb="0" cb="0"/><line nr="282" mi="7" ci="0" mb="4" cb="0"/><line nr="283" mi="2" ci="0" mb="0" cb="0"/><line nr="295" mi="3" ci="0" mb="0" cb="0"/><line nr="296" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="260" covered="0"/><counter type="BRANCH" missed="36" covered="0"/><counter type="LINE" missed="62" covered="0"/><counter type="COMPLEXITY" missed="30" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TailerListenerAdapter.java"><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CountingInputStream.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="1" cb="1"/><line nr="73" mi="0" ci="7" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="2" cb="0"/><line nr="91" mi="14" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="2" cb="0"/><line nr="109" mi="14" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="68" covered="18"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="14" covered="6"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BOMInputStream.java"><line nr="110" mi="10" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="10" ci="0" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="8" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="2" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="2" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="5" ci="0" mb="4" cb="0"/><line nr="169" mi="5" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="172" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="3" ci="0" mb="0" cb="0"/><line nr="175" mi="3" ci="0" mb="0" cb="0"/><line nr="177" mi="1" ci="0" mb="0" cb="0"/><line nr="187" mi="7" ci="0" mb="2" cb="0"/><line nr="202" mi="5" ci="0" mb="2" cb="0"/><line nr="203" mi="12" ci="0" mb="0" cb="0"/><line nr="205" mi="3" ci="0" mb="0" cb="0"/><line nr="206" mi="12" ci="0" mb="4" cb="0"/><line nr="217" mi="3" ci="0" mb="2" cb="0"/><line nr="218" mi="3" ci="0" mb="0" cb="0"/><line nr="220" mi="7" ci="0" mb="0" cb="0"/><line nr="221" mi="4" ci="0" mb="0" cb="0"/><line nr="223" mi="9" ci="0" mb="2" cb="0"/><line nr="224" mi="7" ci="0" mb="0" cb="0"/><line nr="225" mi="6" ci="0" mb="0" cb="0"/><line nr="226" mi="5" ci="0" mb="2" cb="0"/><line nr="227" mi="1" ci="0" mb="0" cb="0"/><line nr="231" mi="4" ci="0" mb="0" cb="0"/><line nr="232" mi="3" ci="0" mb="2" cb="0"/><line nr="233" mi="3" ci="0" mb="2" cb="0"/><line nr="234" mi="7" ci="0" mb="2" cb="0"/><line nr="235" mi="6" ci="0" mb="0" cb="0"/><line nr="237" mi="3" ci="0" mb="0" cb="0"/><line nr="242" mi="3" ci="0" mb="0" cb="0"/><line nr="254" mi="3" ci="0" mb="0" cb="0"/><line nr="255" mi="9" ci="0" mb="2" cb="0"/><line nr="268" mi="3" ci="0" mb="0" cb="0"/><line nr="269" mi="18" ci="0" mb="2" cb="0"/><line nr="278" mi="11" ci="0" mb="2" cb="0"/><line nr="279" mi="4" ci="0" mb="2" cb="0"/><line nr="280" mi="2" ci="0" mb="0" cb="0"/><line nr="282" mi="1" ci="0" mb="0" cb="0"/><line nr="283" mi="2" ci="0" mb="0" cb="0"/><line nr="298" mi="8" ci="0" mb="2" cb="0"/><line nr="299" mi="8" ci="0" mb="2" cb="0"/><line nr="300" mi="2" ci="0" mb="0" cb="0"/><line nr="303" mi="2" ci="0" mb="0" cb="0"/><line nr="319" mi="3" ci="0" mb="0" cb="0"/><line nr="320" mi="8" ci="0" mb="2" cb="0"/><line nr="338" mi="2" ci="0" mb="0" cb="0"/><line nr="339" mi="2" ci="0" mb="0" cb="0"/><line nr="340" mi="4" ci="0" mb="4" cb="0"/><line nr="341" mi="3" ci="0" mb="0" cb="0"/><line nr="342" mi="2" ci="0" mb="2" cb="0"/><line nr="343" mi="8" ci="0" mb="0" cb="0"/><line nr="344" mi="1" ci="0" mb="0" cb="0"/><line nr="345" mi="2" ci="0" mb="0" cb="0"/><line nr="348" mi="7" ci="0" mb="0" cb="0"/><line nr="349" mi="12" ci="0" mb="4" cb="0"/><line nr="363" mi="7" ci="0" mb="0" cb="0"/><line nr="374" mi="4" ci="0" mb="0" cb="0"/><line nr="375" mi="8" ci="0" mb="2" cb="0"/><line nr="376" mi="4" ci="0" mb="0" cb="0"/><line nr="377" mi="1" ci="0" mb="0" cb="0"/><line nr="387" mi="4" ci="0" mb="0" cb="0"/><line nr="388" mi="3" ci="0" mb="2" cb="0"/><line nr="389" mi="3" ci="0" mb="0" cb="0"/><line nr="392" mi="3" ci="0" mb="0" cb="0"/><line nr="393" mi="1" ci="0" mb="0" cb="0"/><line nr="406" mi="2" ci="0" mb="0" cb="0"/><line nr="407" mi="8" ci="0" mb="4" cb="0"/><line nr="408" mi="2" ci="0" mb="0" cb="0"/><line nr="410" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="381" covered="0"/><counter type="BRANCH" missed="60" covered="0"/><counter type="LINE" missed="82" covered="0"/><counter type="COMPLEXITY" missed="50" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="MessageDigestCalculatingInputStream.java"><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="6" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="6" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="BoundedReader.java"><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="6" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="2" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="11" ci="0" mb="4" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="6" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="7" ci="0" mb="2" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="2" cb="0"/><line nr="146" mi="6" ci="0" mb="2" cb="0"/><line nr="148" mi="7" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="100" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ObservableInputStream.java"><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="2" cb="0"/><line nr="123" mi="4" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="2" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="1" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="2" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="2" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="2" cb="0"/><line nr="146" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="6" ci="0" mb="0" cb="0"/><line nr="157" mi="1" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="2" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="2" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="2" ci="0" mb="2" cb="0"/><line nr="165" mi="5" ci="0" mb="0" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="11" ci="0" mb="2" cb="0"/><line nr="180" mi="5" ci="0" mb="0" cb="0"/><line nr="181" mi="1" ci="0" mb="0" cb="0"/><line nr="182" mi="1" ci="0" mb="0" cb="0"/><line nr="189" mi="11" ci="0" mb="2" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="191" mi="1" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="201" mi="11" ci="0" mb="2" cb="0"/><line nr="202" mi="3" ci="0" mb="0" cb="0"/><line nr="203" mi="1" ci="0" mb="0" cb="0"/><line nr="204" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="11" ci="0" mb="2" cb="0"/><line nr="215" mi="3" ci="0" mb="0" cb="0"/><line nr="216" mi="1" ci="0" mb="0" cb="0"/><line nr="217" mi="1" ci="0" mb="0" cb="0"/><line nr="224" mi="11" ci="0" mb="2" cb="0"/><line nr="225" mi="2" ci="0" mb="0" cb="0"/><line nr="226" mi="1" ci="0" mb="0" cb="0"/><line nr="227" mi="1" ci="0" mb="0" cb="0"/><line nr="233" mi="3" ci="0" mb="0" cb="0"/><line nr="238" mi="2" ci="0" mb="0" cb="0"/><line nr="240" mi="2" ci="0" mb="0" cb="0"/><line nr="241" mi="1" ci="0" mb="0" cb="0"/><line nr="242" mi="2" ci="0" mb="0" cb="0"/><line nr="243" mi="1" ci="0" mb="0" cb="0"/><line nr="244" mi="2" ci="0" mb="2" cb="0"/><line nr="245" mi="3" ci="0" mb="0" cb="0"/><line nr="247" mi="3" ci="0" mb="0" cb="0"/><line nr="249" mi="1" ci="0" mb="0" cb="0"/><line nr="257" mi="3" ci="0" mb="0" cb="0"/><line nr="259" mi="4" ci="0" mb="0" cb="0"/><line nr="260" mi="3" ci="0" mb="2" cb="0"/><line nr="261" mi="1" ci="0" mb="0" cb="0"/><line nr="263" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="242" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="88" covered="0"/><counter type="COMPLEXITY" missed="36" covered="0"/><counter type="METHOD" missed="21" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="ProxyReader.java"><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="8" ci="0" mb="2" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="8" ci="0" mb="2" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="7" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="8" ci="0" mb="2" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="167" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="179" mi="1" ci="0" mb="0" cb="0"/><line nr="180" mi="3" ci="0" mb="0" cb="0"/><line nr="181" mi="1" ci="0" mb="0" cb="0"/><line nr="182" mi="1" ci="0" mb="0" cb="0"/><line nr="191" mi="3" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="194" mi="1" ci="0" mb="0" cb="0"/><line nr="195" mi="1" ci="0" mb="0" cb="0"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="225" mi="1" ci="0" mb="0" cb="0"/><line nr="245" mi="1" ci="0" mb="0" cb="0"/><line nr="257" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="153" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="57" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CharSequenceInputStream.java"><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="2" cb="0"/><line nr="69" mi="16" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="123" mi="9" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="2" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="2" cb="0"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="8" ci="0" mb="4" cb="0"/><line nr="136" mi="21" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="2" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="8" ci="0" mb="4" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="2" cb="0"/><line nr="147" mi="4" ci="0" mb="2" cb="0"/><line nr="148" mi="6" ci="0" mb="0" cb="0"/><line nr="149" mi="7" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="1" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="8" ci="0" mb="4" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="10" ci="0" mb="4" cb="0"/><line nr="166" mi="4" ci="0" mb="2" cb="0"/><line nr="167" mi="6" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="8" ci="0" mb="4" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="7" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="7" ci="0" mb="4" cb="0"/><line nr="188" mi="3" ci="0" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="207" mi="8" ci="0" mb="0" cb="0"/><line nr="212" mi="1" ci="0" mb="0" cb="0"/><line nr="220" mi="5" ci="0" mb="0" cb="0"/><line nr="221" mi="5" ci="0" mb="0" cb="0"/><line nr="222" mi="4" ci="0" mb="0" cb="0"/><line nr="223" mi="4" ci="0" mb="0" cb="0"/><line nr="226" mi="1" ci="0" mb="0" cb="0"/><line nr="241" mi="4" ci="0" mb="2" cb="0"/><line nr="243" mi="4" ci="0" mb="2" cb="0"/><line nr="244" mi="4" ci="0" mb="0" cb="0"/><line nr="245" mi="4" ci="0" mb="0" cb="0"/><line nr="246" mi="4" ci="0" mb="0" cb="0"/><line nr="247" mi="5" ci="0" mb="0" cb="0"/><line nr="248" mi="6" ci="0" mb="2" cb="0"/><line nr="249" mi="4" ci="0" mb="0" cb="0"/><line nr="250" mi="5" ci="0" mb="0" cb="0"/><line nr="251" mi="3" ci="0" mb="0" cb="0"/><line nr="254" mi="6" ci="0" mb="2" cb="0"/><line nr="255" mi="19" ci="0" mb="0" cb="0"/><line nr="258" mi="6" ci="0" mb="0" cb="0"/><line nr="259" mi="3" ci="0" mb="0" cb="0"/><line nr="260" mi="3" ci="0" mb="0" cb="0"/><line nr="262" mi="1" ci="0" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="364" covered="0"/><counter type="BRANCH" missed="46" covered="0"/><counter type="LINE" missed="82" covered="0"/><counter type="COMPLEXITY" missed="37" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BrokenInputStream.java"><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SwappedDataInputStream.java"><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="8" ci="0" mb="2" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="6" ci="0" mb="0" cb="0"/><line nr="127" mi="1" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="2" cb="0"/><line nr="147" mi="6" ci="0" mb="0" cb="0"/><line nr="148" mi="6" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="2" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="1" ci="0" mb="0" cb="0"/><line nr="169" mi="4" ci="0" mb="0" cb="0"/><line nr="182" mi="5" ci="0" mb="0" cb="0"/><line nr="196" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="4" ci="0" mb="0" cb="0"/><line nr="222" mi="4" ci="0" mb="0" cb="0"/><line nr="235" mi="4" ci="0" mb="0" cb="0"/><line nr="248" mi="5" ci="0" mb="0" cb="0"/><line nr="263" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="102" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="5665" covered="81"/><counter type="BRANCH" missed="645" covered="2"/><counter type="LINE" missed="1322" covered="28"/><counter type="COMPLEXITY" missed="611" covered="14"/><counter type="METHOD" missed="287" covered="14"/><counter type="CLASS" missed="30" covered="4"/></package><package name="com/milaboratory/core/sequence/quality"><class name="com/milaboratory/core/sequence/quality/ReadTrimmerProcessor" sourcefilename="ReadTrimmerProcessor.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/quality/QualityTrimmerParameters;)V" line="37"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/quality/QualityTrimmerParameters;Lcom/milaboratory/core/sequence/quality/ReadTrimmerListener;)V" line="40"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="process" desc="(Lcom/milaboratory/core/io/sequence/SequenceRead;)Lcom/milaboratory/core/io/sequence/SequenceRead;" line="48"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$process$2" desc="(Lcom/milaboratory/core/io/sequence/SequenceRead;ILcom/milaboratory/core/io/sequence/SingleRead;)Lcom/milaboratory/core/io/sequence/SingleRead;" line="49"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$null$1" desc="(Lcom/milaboratory/core/io/sequence/SequenceRead;ILcom/milaboratory/core/sequence/NSequenceWithQuality;)Lcom/milaboratory/core/sequence/NSequenceWithQuality;" line="50"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$0" desc="(Lcom/milaboratory/core/io/sequence/SequenceRead;)Z" line="26"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/sequence/quality/SumQualityAggregator" sourcefilename="SumQualityAggregator.java"><method name="&lt;init&gt;" desc="(IB)V" line="26"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="aggregate" desc="(Lcom/milaboratory/core/sequence/SequenceQuality;)V" line="34"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQuality" desc="()Lcom/milaboratory/core/sequence/SequenceQuality;" line="45"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/sequence/quality/MaximalQualityAggregator" sourcefilename="MaximalQualityAggregator.java"><method name="&lt;init&gt;" desc="(I)V" line="23"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="aggregate" desc="(Lcom/milaboratory/core/sequence/SequenceQuality;)V" line="29"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQuality" desc="()Lcom/milaboratory/core/sequence/SequenceQuality;" line="37"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/sequence/quality/ReadTrimmerListener" sourcefilename="ReadTrimmerListener.java"/><class name="com/milaboratory/core/sequence/quality/QualityAggregationType$5" sourcefilename="QualityAggregationType.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)Lcom/milaboratory/core/sequence/quality/QualityAggregator;" line="46"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/sequence/quality/QualityAggregationType$3" sourcefilename="QualityAggregationType.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)Lcom/milaboratory/core/sequence/quality/QualityAggregator;" line="34"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/sequence/quality/QualityAggregationType$4" sourcefilename="QualityAggregationType.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)Lcom/milaboratory/core/sequence/quality/QualityAggregator;" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/sequence/quality/QualityAggregationType$1" sourcefilename="QualityAggregationType.java"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)Lcom/milaboratory/core/sequence/quality/QualityAggregator;" line="22"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/sequence/quality/QualityAggregationType$2" sourcefilename="QualityAggregationType.java"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)Lcom/milaboratory/core/sequence/quality/QualityAggregator;" line="28"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/sequence/quality/QualityAggregationType" sourcefilename="QualityAggregationType.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILcom/milaboratory/core/sequence/quality/QualityAggregationType$AF;)V" line="51"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="(I)Lcom/milaboratory/core/sequence/quality/QualityAggregator;" line="56"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="82" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/sequence/quality/MinimalQualityAggregator" sourcefilename="MinimalQualityAggregator.java"><method name="&lt;init&gt;" desc="(I)V" line="25"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="aggregate" desc="(Lcom/milaboratory/core/sequence/SequenceQuality;)V" line="32"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQuality" desc="()Lcom/milaboratory/core/sequence/SequenceQuality;" line="40"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/sequence/quality/QualityTrimmer" sourcefilename="QualityTrimmer.java"><method name="trim" desc="(Lcom/milaboratory/core/sequence/SequenceQuality;IIIZFI)I" line="55"><counter type="INSTRUCTION" missed="5" covered="242"/><counter type="BRANCH" missed="2" covered="58"/><counter type="LINE" missed="1" covered="39"/><counter type="COMPLEXITY" missed="2" covered="29"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trim" desc="(Lcom/milaboratory/core/sequence/SequenceQuality;IIIZLcom/milaboratory/core/sequence/quality/QualityTrimmerParameters;)I" line="158"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pabs" desc="(I)I" line="170"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extendRange" desc="(Lcom/milaboratory/core/sequence/SequenceQuality;Lcom/milaboratory/core/sequence/quality/QualityTrimmerParameters;Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/Range;" line="184"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateAllIslands" desc="(Lcom/milaboratory/core/sequence/SequenceQuality;Lcom/milaboratory/core/sequence/quality/QualityTrimmerParameters;)[Lcom/milaboratory/core/Range;" line="196"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findIslands" desc="(Lcom/milaboratory/core/sequence/SequenceQuality;Lcom/milaboratory/core/sequence/quality/QualityTrimmerParameters;IIZ)[Lcom/milaboratory/core/Range;" line="205"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findIslands" desc="(Lcom/milaboratory/core/sequence/SequenceQuality;Lcom/milaboratory/core/sequence/quality/QualityTrimmerParameters;IIZLjava/util/List;)V" line="224"><counter type="INSTRUCTION" missed="36" covered="120"/><counter type="BRANCH" missed="4" covered="22"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateIslandsFromInitialRange" desc="(Lcom/milaboratory/core/sequence/SequenceQuality;Lcom/milaboratory/core/sequence/quality/QualityTrimmerParameters;Lcom/milaboratory/core/Range;)[Lcom/milaboratory/core/Range;" line="270"><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trim" desc="(Lcom/milaboratory/core/sequence/SequenceQuality;Lcom/milaboratory/core/sequence/quality/QualityTrimmerParameters;)Lcom/milaboratory/core/Range;" line="293"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trim" desc="(Lcom/milaboratory/core/sequence/SequenceQuality;Lcom/milaboratory/core/sequence/quality/QualityTrimmerParameters;Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/Range;" line="309"><counter type="INSTRUCTION" missed="6" covered="46"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bestIsland" desc="(Lcom/milaboratory/core/sequence/SequenceQuality;Lcom/milaboratory/core/sequence/quality/QualityTrimmerParameters;)Lcom/milaboratory/core/Range;" line="330"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="119" covered="583"/><counter type="BRANCH" missed="21" covered="91"/><counter type="LINE" missed="19" covered="84"/><counter type="COMPLEXITY" missed="17" covered="51"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/quality/AverageQualityAggregator" sourcefilename="AverageQualityAggregator.java"><method name="&lt;init&gt;" desc="(I)V" line="29"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="arraySize" desc="()I" line="38"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="aggregate" desc="(Lcom/milaboratory/core/sequence/SequenceQuality;)V" line="43"><counter type="INSTRUCTION" missed="101" covered="324"/><counter type="BRANCH" missed="12" covered="27"/><counter type="LINE" missed="17" covered="45"/><counter type="COMPLEXITY" missed="8" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Lcom/milaboratory/core/sequence/SequenceQuality;I)J" line="147"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getState" desc="()B" line="160"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCount" desc="()J" line="164"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTotal" desc="(I)J" line="169"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add0" desc="(JJ)J" line="175"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add1" desc="(JJ)J" line="182"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add2" desc="(JJ)J" line="189"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add3" desc="(JJ)J" line="196"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQuality" desc="()Lcom/milaboratory/core/sequence/SequenceQuality;" line="201"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="105" covered="599"/><counter type="BRANCH" missed="12" covered="47"/><counter type="LINE" missed="18" covered="83"/><counter type="COMPLEXITY" missed="9" covered="34"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/sequence/quality/ReadTrimmerReport" sourcefilename="ReadTrimmerReport.java"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAlignments" desc="()J" line="31"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getR1LeftTrimmedEvents" desc="()J" line="36"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setR1LeftTrimmedEvents" desc="(J)V" line="40"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getR1RightTrimmedEvents" desc="()J" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setR1RightTrimmedEvents" desc="(J)V" line="49"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getR2LeftTrimmedEvents" desc="()J" line="54"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setR2LeftTrimmedEvents" desc="(J)V" line="58"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getR2RightTrimmedEvents" desc="()J" line="63"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setR2RightTrimmedEvents" desc="(J)V" line="67"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getR1LeftTrimmedNucleotides" desc="()J" line="72"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setR1LeftTrimmedNucleotides" desc="(J)V" line="76"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getR1RightTrimmedNucleotides" desc="()J" line="81"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setR1RightTrimmedNucleotides" desc="(J)V" line="85"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getR2LeftTrimmedNucleotides" desc="()J" line="90"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setR2LeftTrimmedNucleotides" desc="(J)V" line="94"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getR2RightTrimmedNucleotides" desc="()J" line="99"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setR2RightTrimmedNucleotides" desc="(J)V" line="103"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onSequence" desc="(Lcom/milaboratory/core/io/sequence/SequenceRead;ILcom/milaboratory/core/Range;Z)V" line="108"><counter type="INSTRUCTION" missed="101" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="213" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/sequence/quality/MiniMaxQualityAggregator" sourcefilename="MiniMaxQualityAggregator.java"><method name="&lt;init&gt;" desc="(I)V" line="24"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="aggregate" desc="(Lcom/milaboratory/core/sequence/SequenceQuality;)V" line="30"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQuality" desc="()Lcom/milaboratory/core/sequence/SequenceQuality;" line="35"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/sequence/quality/FunctionWithIndex" sourcefilename="FunctionWithIndex.java"/><class name="com/milaboratory/core/sequence/quality/QualityAggregator" sourcefilename="QualityAggregator.java"/><class name="com/milaboratory/core/sequence/quality/QualityAggregationType$AF" sourcefilename="QualityAggregationType.java"/><class name="com/milaboratory/core/sequence/quality/QualityTrimmerParameters" sourcefilename="QualityTrimmerParameters.java"><method name="&lt;init&gt;" desc="(FI)V" line="33"><counter type="INSTRUCTION" missed="5" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAverageQualityThreshold" desc="()F" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWindowSize" desc="()I" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="50"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="58"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="67"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="40"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="QualityTrimmerParameters.java"><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="1" cb="1"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="17" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="3" mb="1" cb="1"/><line nr="59" mi="2" ci="3" mb="1" cb="1"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="1" ci="14" mb="2" cb="2"/><line nr="67" mi="16" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="40"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QualityAggregationType.java"><line nr="18" mi="24" ci="0" mb="0" cb="0"/><line nr="19" mi="12" ci="0" mb="0" cb="0"/><line nr="22" mi="5" ci="0" mb="0" cb="0"/><line nr="25" mi="12" ci="0" mb="0" cb="0"/><line nr="28" mi="5" ci="0" mb="0" cb="0"/><line nr="31" mi="12" ci="0" mb="0" cb="0"/><line nr="34" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="12" ci="0" mb="0" cb="0"/><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="12" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="123" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="6" covered="0"/></sourcefile><sourcefile name="ReadTrimmerListener.java"/><sourcefile name="AverageQualityAggregator.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="15" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="1" cb="1"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="2" cb="3"/><line nr="50" mi="0" ci="7" mb="0" cb="2"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="2"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="2"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="9" mb="0" cb="2"/><line nr="64" mi="0" ci="42" mb="0" cb="0"/><line nr="69" mi="0" ci="8" mb="0" cb="2"/><line nr="70" mi="0" ci="42" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="7" mb="0" cb="2"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="2"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="2"/><line nr="92" mi="0" ci="11" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="9" mb="0" cb="2"/><line nr="98" mi="0" ci="24" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="2"/><line nr="102" mi="0" ci="24" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="0" cb="2"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="7" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="1" cb="1"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="4" ci="0" mb="2" cb="0"/><line nr="122" mi="11" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="9" ci="0" mb="2" cb="0"/><line nr="128" mi="13" ci="0" mb="0" cb="0"/><line nr="129" mi="8" ci="0" mb="2" cb="0"/><line nr="130" mi="15" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="7" ci="0" mb="2" cb="0"/><line nr="141" mi="13" ci="0" mb="0" cb="0"/><line nr="142" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="1" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="2"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="12" mb="0" cb="0"/><line nr="150" mi="0" ci="8" mb="0" cb="0"/><line nr="151" mi="0" ci="8" mb="0" cb="4"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="10" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="9" mb="0" cb="0"/><line nr="165" mi="0" ci="19" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="9" mb="0" cb="0"/><line nr="171" mi="0" ci="26" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="20" mb="0" cb="4"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="20" mb="0" cb="4"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="20" mb="0" cb="4"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="4" ci="0" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="8" mb="0" cb="2"/><line nr="204" mi="0" ci="14" mb="0" cb="0"/><line nr="205" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="105" covered="599"/><counter type="BRANCH" missed="12" covered="47"/><counter type="LINE" missed="18" covered="83"/><counter type="COMPLEXITY" missed="9" covered="34"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QualityAggregator.java"/><sourcefile name="MiniMaxQualityAggregator.java"><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="8" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ReadTrimmerReport.java"><line nr="25" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="5" ci="0" mb="0" cb="0"/><line nr="27" mi="6" ci="0" mb="0" cb="0"/><line nr="28" mi="7" ci="0" mb="0" cb="0"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="2" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="2" cb="0"/><line nr="114" mi="7" ci="0" mb="0" cb="0"/><line nr="115" mi="9" ci="0" mb="0" cb="0"/><line nr="116" mi="11" ci="0" mb="0" cb="0"/><line nr="117" mi="14" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="2" cb="0"/><line nr="120" mi="7" ci="0" mb="0" cb="0"/><line nr="121" mi="10" ci="0" mb="0" cb="0"/><line nr="123" mi="4" ci="0" mb="2" cb="0"/><line nr="124" mi="9" ci="0" mb="0" cb="0"/><line nr="125" mi="12" ci="0" mb="0" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="213" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FunctionWithIndex.java"/><sourcefile name="SumQualityAggregator.java"><line nr="26" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="6" ci="0" mb="2" cb="0"/><line nr="35" mi="4" ci="0" mb="0" cb="0"/><line nr="36" mi="8" ci="0" mb="2" cb="0"/><line nr="37" mi="7" ci="0" mb="2" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="16" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MaximalQualityAggregator.java"><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="4" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="6" ci="0" mb="2" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="8" ci="0" mb="2" cb="0"/><line nr="32" mi="13" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ReadTrimmerProcessor.java"><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="8" ci="0" mb="2" cb="0"/><line nr="27" mi="6" ci="0" mb="2" cb="0"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="6" ci="0" mb="0" cb="0"/><line nr="49" mi="7" ci="0" mb="0" cb="0"/><line nr="50" mi="6" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="2" cb="0"/><line nr="52" mi="9" ci="0" mb="2" cb="0"/><line nr="54" mi="3" ci="0" mb="2" cb="0"/><line nr="55" mi="7" ci="0" mb="2" cb="0"/><line nr="56" mi="2" ci="0" mb="2" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="8" ci="0" mb="4" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="QualityTrimmer.java"><line nr="30" mi="2" ci="6" mb="1" cb="1"/><line nr="55" mi="0" ci="3" mb="0" cb="2"/><line nr="56" mi="0" ci="7" mb="0" cb="2"/><line nr="58" mi="0" ci="6" mb="1" cb="3"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="9" mb="0" cb="2"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="2"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="8" mb="0" cb="4"/><line nr="87" mi="0" ci="7" mb="0" cb="2"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="4"/><line nr="92" mi="0" ci="9" mb="0" cb="4"/><line nr="93" mi="0" ci="10" mb="0" cb="4"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="9" mb="0" cb="4"/><line nr="101" mi="0" ci="16" mb="0" cb="6"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="15" mb="0" cb="8"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="9" mb="0" cb="2"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="9" mb="1" cb="3"/><line nr="130" mi="0" ci="10" mb="0" cb="4"/><line nr="134" mi="0" ci="8" mb="0" cb="2"/><line nr="158" mi="0" ci="11" mb="0" cb="0"/><line nr="170" mi="0" ci="9" mb="0" cb="2"/><line nr="184" mi="0" ci="10" mb="0" cb="0"/><line nr="185" mi="0" ci="13" mb="0" cb="0"/><line nr="186" mi="0" ci="8" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="197" mi="0" ci="7" mb="0" cb="0"/><line nr="198" mi="0" ci="6" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="7" mb="0" cb="0"/><line nr="207" mi="0" ci="6" mb="0" cb="0"/><line nr="224" mi="0" ci="6" mb="1" cb="3"/><line nr="226" mi="0" ci="13" mb="0" cb="4"/><line nr="228" mi="0" ci="6" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="2"/><line nr="233" mi="0" ci="1" mb="0" cb="0"/><line nr="236" mi="0" ci="16" mb="0" cb="4"/><line nr="238" mi="0" ci="8" mb="0" cb="0"/><line nr="241" mi="0" ci="7" mb="1" cb="1"/><line nr="242" mi="0" ci="3" mb="0" cb="2"/><line nr="243" mi="0" ci="15" mb="1" cb="3"/><line nr="244" mi="19" ci="0" mb="0" cb="0"/><line nr="246" mi="0" ci="14" mb="0" cb="0"/><line nr="248" mi="0" ci="13" mb="1" cb="3"/><line nr="249" mi="17" ci="0" mb="0" cb="0"/><line nr="251" mi="0" ci="9" mb="0" cb="0"/><line nr="254" mi="0" ci="4" mb="0" cb="0"/><line nr="255" mi="0" ci="1" mb="0" cb="0"/><line nr="256" mi="0" ci="1" mb="0" cb="0"/><line nr="270" mi="0" ci="10" mb="0" cb="0"/><line nr="271" mi="0" ci="13" mb="0" cb="0"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><line nr="273" mi="0" ci="10" mb="0" cb="0"/><line nr="274" mi="0" ci="6" mb="0" cb="2"/><line nr="275" mi="0" ci="10" mb="0" cb="0"/><line nr="276" mi="0" ci="7" mb="1" cb="1"/><line nr="277" mi="0" ci="8" mb="0" cb="0"/><line nr="278" mi="0" ci="6" mb="0" cb="0"/><line nr="293" mi="0" ci="10" mb="0" cb="0"/><line nr="309" mi="0" ci="13" mb="0" cb="0"/><line nr="310" mi="4" ci="6" mb="2" cb="2"/><line nr="311" mi="0" ci="4" mb="0" cb="2"/><line nr="312" mi="0" ci="2" mb="0" cb="0"/><line nr="313" mi="0" ci="10" mb="0" cb="0"/><line nr="314" mi="0" ci="3" mb="1" cb="1"/><line nr="316" mi="2" ci="0" mb="0" cb="0"/><line nr="317" mi="0" ci="8" mb="0" cb="0"/><line nr="330" mi="4" ci="0" mb="0" cb="0"/><line nr="331" mi="3" ci="0" mb="2" cb="0"/><line nr="332" mi="2" ci="0" mb="0" cb="0"/><line nr="334" mi="4" ci="0" mb="0" cb="0"/><line nr="335" mi="2" ci="0" mb="0" cb="0"/><line nr="336" mi="9" ci="0" mb="2" cb="0"/><line nr="337" mi="6" ci="0" mb="0" cb="0"/><line nr="339" mi="8" ci="0" mb="2" cb="0"/><line nr="340" mi="2" ci="0" mb="0" cb="0"/><line nr="341" mi="13" ci="0" mb="2" cb="0"/><line nr="342" mi="6" ci="0" mb="0" cb="0"/><line nr="344" mi="3" ci="0" mb="2" cb="0"/><line nr="345" mi="2" ci="0" mb="0" cb="0"/><line nr="346" mi="4" ci="0" mb="0" cb="0"/><line nr="350" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="119" covered="583"/><counter type="BRANCH" missed="21" covered="91"/><counter type="LINE" missed="19" covered="84"/><counter type="COMPLEXITY" missed="17" covered="51"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MinimalQualityAggregator.java"><line nr="25" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="4" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="6" ci="0" mb="2" cb="0"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="8" ci="0" mb="2" cb="0"/><line nr="35" mi="13" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="875" covered="1222"/><counter type="BRANCH" missed="78" covered="143"/><counter type="LINE" missed="160" covered="178"/><counter type="COMPLEXITY" missed="104" covered="89"/><counter type="METHOD" missed="55" covered="26"/><counter type="CLASS" missed="12" covered="3"/></package><package name="com/milaboratory/test"><class name="com/milaboratory/test/Read$1" sourcefilename="Read.java"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;)V" line="42"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="process" desc="(Lcom/milaboratory/core/io/sequence/SingleRead;)V" line="45"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/test/Read" sourcefilename="Read.java"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="31"><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="time" desc="(J)Ljava/lang/String;" line="60"><counter type="INSTRUCTION" missed="116" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="220" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Read.java"><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="8" ci="0" mb="0" cb="0"/><line nr="34" mi="14" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="6" ci="0" mb="2" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="42" mi="20" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="8" ci="0" mb="0" cb="0"/><line nr="47" mi="8" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="10" ci="0" mb="0" cb="0"/><line nr="53" mi="13" ci="0" mb="0" cb="0"/><line nr="54" mi="15" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="6" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="2" cb="0"/><line nr="62" mi="13" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="8" ci="0" mb="2" cb="0"/><line nr="66" mi="13" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="8" ci="0" mb="2" cb="0"/><line nr="70" mi="13" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="8" ci="0" mb="2" cb="0"/><line nr="74" mi="13" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="250" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="35" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="250" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="35" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="2" covered="0"/></package><package name="org/apache/commons/io/output"><class name="org/apache/commons/io/output/NullOutputStream" sourcefilename="NullOutputStream.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([BII)V" line="46"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(I)V" line="55"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([B)V" line="65"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/output/TeeOutputStream" sourcefilename="TeeOutputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;Ljava/io/OutputStream;)V" line="39"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([B)V" line="50"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([BII)V" line="63"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(I)V" line="74"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="84"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="102"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/output/XmlStreamWriter" sourcefilename="XmlStreamWriter.java"><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;)V" line="59"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;Ljava/lang/String;)V" line="46"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="83"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/lang/String;)V" line="96"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEncoding" desc="()Ljava/lang/String;" line="105"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefaultEncoding" desc="()Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="124"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="139"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detectEncoding" desc="([CII)V" line="154"><counter type="INSTRUCTION" missed="120" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([CII)V" line="211"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="218"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="215" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="53" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/output/ProxyWriter" sourcefilename="ProxyWriter.java"><method name="&lt;init&gt;" desc="(Ljava/io/Writer;)V" line="40"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(C)Ljava/io/Writer;" line="54"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(Ljava/lang/CharSequence;II)Ljava/io/Writer;" line="75"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(Ljava/lang/CharSequence;)Ljava/io/Writer;" line="94"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(I)V" line="116"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([C)V" line="132"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([CII)V" line="155"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/String;)V" line="171"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/String;II)V" line="194"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="209"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="222"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="beforeWrite" desc="(I)V" line="242"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="afterWrite" desc="(I)V" line="259"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleIOException" desc="(Ljava/io/IOException;)V" line="271"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="191" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="80" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/output/LockableFileWriter" sourcefilename="LockableFileWriter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="69"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Z)V" line="81"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ZLjava/lang/String;)V" line="94"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="106"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Z)V" line="118"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;ZLjava/lang/String;)V" line="133"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/nio/charset/Charset;)V" line="146"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/lang/String;)V" line="161"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V" line="177"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V" line="218"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="testLockDir" desc="(Ljava/io/File;)V" line="230"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createLock" desc="()V" line="246"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initWriter" desc="(Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;" line="266"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="289"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(I)V" line="303"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([C)V" line="313"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([CII)V" line="325"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/String;)V" line="335"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/String;II)V" line="347"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="356"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="253" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="70" covered="0"/><counter type="COMPLEXITY" missed="27" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/output/AppendableOutputStream" sourcefilename="AppendableOutputStream.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Appendable;)V" line="42"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(I)V" line="54"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAppendable" desc="()Ljava/lang/Appendable;" line="63"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/output/ProxyOutputStream" sourcefilename="ProxyOutputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(I)V" line="53"><counter type="INSTRUCTION" missed="4" covered="12"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([B)V" line="69"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([BII)V" line="88"><counter type="INSTRUCTION" missed="4" covered="14"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="103"><counter type="INSTRUCTION" missed="4" covered="5"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="116"><counter type="INSTRUCTION" missed="4" covered="5"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeWrite" desc="(I)V" line="136"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterWrite" desc="(I)V" line="153"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleIOException" desc="(Ljava/io/IOException;)V" line="165"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="42"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="17" covered="20"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/output/ChunkedWriter" sourcefilename="ChunkedWriter.java"><method name="&lt;init&gt;" desc="(Ljava/io/Writer;I)V" line="50"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Writer;)V" line="62"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([CII)V" line="75"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/output/NullWriter" sourcefilename="NullWriter.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(C)Ljava/io/Writer;" line="50"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(Ljava/lang/CharSequence;II)Ljava/io/Writer;" line="64"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(Ljava/lang/CharSequence;)Ljava/io/Writer;" line="76"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(I)V" line="86"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([C)V" line="95"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([CII)V" line="106"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/String;)V" line="115"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/String;II)V" line="126"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="132"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="138"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/output/CountingOutputStream" sourcefilename="CountingOutputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeWrite" desc="(I)V" line="53"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCount" desc="()I" line="68"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resetCount" desc="()I" line="86"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByteCount" desc="()J" line="104"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetByteCount" desc="()J" line="118"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="56" covered="18"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="6"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/output/ThresholdingOutputStream" sourcefilename="ThresholdingOutputStream.java"><method name="&lt;init&gt;" desc="(I)V" line="73"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(I)V" line="91"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([B)V" line="108"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([BII)V" line="127"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="142"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="157"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getThreshold" desc="()I" line="177"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByteCount" desc="()J" line="188"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isThresholdExceeded" desc="()Z" line="201"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkThreshold" desc="(I)V" line="220"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resetByteCount" desc="()V" line="233"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setByteCount" desc="(J)V" line="247"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="113" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/output/FileWriterWithEncoding" sourcefilename="FileWriterWithEncoding.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="65"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Z)V" line="79"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/nio/charset/Charset;)V" line="91"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/nio/charset/Charset;Z)V" line="105"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;)V" line="117"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;Z)V" line="131"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/lang/String;)V" line="143"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/lang/String;Z)V" line="156"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/nio/charset/Charset;)V" line="169"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/nio/charset/Charset;Z)V" line="182"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;)V" line="195"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V" line="209"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initWriter" desc="(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;" line="226"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(I)V" line="266"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([C)V" line="276"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([CII)V" line="288"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/String;)V" line="298"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/String;II)V" line="310"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="319"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="328"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="205" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="62" covered="0"/><counter type="COMPLEXITY" missed="26" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/output/CloseShieldOutputStream" sourcefilename="CloseShieldOutputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/output/BrokenOutputStream" sourcefilename="BrokenOutputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/IOException;)V" line="43"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(I)V" line="62"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="72"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="82"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/output/StringBuilderWriter" sourcefilename="StringBuilderWriter.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="50"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/StringBuilder;)V" line="61"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(C)Ljava/io/Writer;" line="73"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(Ljava/lang/CharSequence;)Ljava/io/Writer;" line="85"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(Ljava/lang/CharSequence;II)Ljava/io/Writer;" line="99"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="109"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="117"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/String;)V" line="127"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([CII)V" line="141"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBuilder" desc="()Ljava/lang/StringBuilder;" line="152"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="162"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="57" covered="22"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="17" covered="8"/><counter type="COMPLEXITY" missed="11" covered="4"/><counter type="METHOD" missed="8" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/output/DemuxOutputStream" sourcefilename="DemuxOutputStream.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bindStream" desc="(Ljava/io/OutputStream;)Ljava/io/OutputStream;" line="37"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="50"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="65"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(I)V" line="82"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/output/ChunkedOutputStream" sourcefilename="ChunkedOutputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;I)V" line="50"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;)V" line="63"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([BII)V" line="77"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/output/ClosedOutputStream" sourcefilename="ClosedOutputStream.java"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(I)V" line="47"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="57"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="8"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/output/ByteArrayOutputStream" sourcefilename="ByteArrayOutputStream.java"><method name="&lt;init&gt;" desc="()V" line="81"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="64"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="needNewBuffer" desc="(I)V" line="108"><counter type="INSTRUCTION" missed="76" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([BII)V" line="141"><counter type="INSTRUCTION" missed="82" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(I)V" line="173"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/io/InputStream;)I" line="194"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="215"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="229"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="235"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeTo" desc="(Ljava/io/OutputStream;)V" line="259"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBufferedInputStream" desc="(Ljava/io/InputStream;)Ljava/io/InputStream;" line="293"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBufferedInputStream" desc="(Ljava/io/InputStream;I)Ljava/io/InputStream;" line="322"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toInputStream" desc="()Ljava/io/InputStream;" line="338"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByteArray" desc="()[B" line="363"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="392"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Ljava/lang/String;)Ljava/lang/String;" line="405"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Ljava/nio/charset/Charset;)Ljava/lang/String;" line="418"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="516" covered="0"/><counter type="BRANCH" missed="46" covered="0"/><counter type="LINE" missed="119" covered="0"/><counter type="COMPLEXITY" missed="41" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/output/TaggedOutputStream" sourcefilename="TaggedOutputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;)V" line="69"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCauseOf" desc="(Ljava/lang/Exception;)Z" line="88"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="throwIfCauseOf" desc="(Ljava/lang/Exception;)V" line="102"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleIOException" desc="(Ljava/io/IOException;)V" line="113"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/output/DeferredFileOutputStream" sourcefilename="DeferredFileOutputStream.java"><method name="&lt;init&gt;" desc="(ILjava/io/File;)V" line="101"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(IILjava/io/File;)V" line="116"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;Ljava/lang/String;Ljava/io/File;)V" line="136"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(IILjava/lang/String;Ljava/lang/String;Ljava/io/File;)V" line="157"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;I)V" line="86"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStream" desc="()Ljava/io/OutputStream;" line="204"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thresholdReached" desc="()V" line="219"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInMemory" desc="()Z" line="247"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getData" desc="()[B" line="261"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFile" desc="()Ljava/io/File;" line="285"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="297"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeTo" desc="(Ljava/io/OutputStream;)V" line="314"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="188" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="53" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/output/WriterOutputStream" sourcefilename="WriterOutputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;)V" line="104"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;IZ)V" line="85"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V" line="143"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Writer;Ljava/nio/charset/Charset;)V" line="161"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Writer;Ljava/lang/String;IZ)V" line="178"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Writer;Ljava/lang/String;)V" line="190"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Writer;)V" line="203"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([BII)V" line="216"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([B)V" line="236"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(I)V" line="247"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="258"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="270"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="processInput" desc="(Z)V" line="283"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flushOutput" desc="()V" line="307"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkIbmJdkWithBrokenUTF16" desc="(Ljava/nio/charset/Charset;)V" line="319"><counter type="INSTRUCTION" missed="78" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="270" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="78" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="CloseShieldOutputStream.java"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ChunkedWriter.java"><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="2" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="2" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="StringBuilderWriter.java"><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="9" ci="0" mb="2" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="7" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="1" cb="1"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="2" cb="0"/><line nr="142" mi="7" ci="0" mb="0" cb="0"/><line nr="144" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="57" covered="22"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="17" covered="8"/><counter type="COMPLEXITY" missed="11" covered="4"/><counter type="METHOD" missed="8" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ThresholdingOutputStream.java"><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="6" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="8" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="6" ci="0" mb="0" cb="0"/><line nr="129" mi="7" ci="0" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="0" cb="0"/><line nr="143" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="177" mi="3" ci="0" mb="0" cb="0"/><line nr="188" mi="3" ci="0" mb="0" cb="0"/><line nr="201" mi="11" ci="0" mb="2" cb="0"/><line nr="220" mi="13" ci="0" mb="4" cb="0"/><line nr="222" mi="3" ci="0" mb="0" cb="0"/><line nr="223" mi="2" ci="0" mb="0" cb="0"/><line nr="225" mi="1" ci="0" mb="0" cb="0"/><line nr="233" mi="3" ci="0" mb="0" cb="0"/><line nr="234" mi="3" ci="0" mb="0" cb="0"/><line nr="235" mi="1" ci="0" mb="0" cb="0"/><line nr="247" mi="3" ci="0" mb="0" cb="0"/><line nr="248" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="113" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="WriterOutputStream.java"><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="1" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="1" ci="0" mb="0" cb="0"/><line nr="161" mi="6" ci="0" mb="0" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><line nr="178" mi="7" ci="0" mb="0" cb="0"/><line nr="179" mi="1" ci="0" mb="0" cb="0"/><line nr="190" mi="6" ci="0" mb="0" cb="0"/><line nr="191" mi="1" ci="0" mb="0" cb="0"/><line nr="203" mi="6" ci="0" mb="0" cb="0"/><line nr="204" mi="1" ci="0" mb="0" cb="0"/><line nr="216" mi="2" ci="0" mb="2" cb="0"/><line nr="217" mi="6" ci="0" mb="0" cb="0"/><line nr="218" mi="7" ci="0" mb="0" cb="0"/><line nr="219" mi="3" ci="0" mb="0" cb="0"/><line nr="220" mi="4" ci="0" mb="0" cb="0"/><line nr="221" mi="4" ci="0" mb="0" cb="0"/><line nr="222" mi="1" ci="0" mb="0" cb="0"/><line nr="223" mi="3" ci="0" mb="2" cb="0"/><line nr="224" mi="2" ci="0" mb="0" cb="0"/><line nr="226" mi="1" ci="0" mb="0" cb="0"/><line nr="236" mi="6" ci="0" mb="0" cb="0"/><line nr="237" mi="1" ci="0" mb="0" cb="0"/><line nr="247" mi="11" ci="0" mb="0" cb="0"/><line nr="248" mi="1" ci="0" mb="0" cb="0"/><line nr="258" mi="2" ci="0" mb="0" cb="0"/><line nr="259" mi="3" ci="0" mb="0" cb="0"/><line nr="260" mi="1" ci="0" mb="0" cb="0"/><line nr="270" mi="3" ci="0" mb="0" cb="0"/><line nr="271" mi="2" ci="0" mb="0" cb="0"/><line nr="272" mi="3" ci="0" mb="0" cb="0"/><line nr="273" mi="1" ci="0" mb="0" cb="0"/><line nr="283" mi="4" ci="0" mb="0" cb="0"/><line nr="286" mi="9" ci="0" mb="0" cb="0"/><line nr="287" mi="3" ci="0" mb="2" cb="0"/><line nr="288" mi="3" ci="0" mb="0" cb="0"/><line nr="289" mi="3" ci="0" mb="2" cb="0"/><line nr="290" mi="1" ci="0" mb="0" cb="0"/><line nr="294" mi="5" ci="0" mb="0" cb="0"/><line nr="298" mi="4" ci="0" mb="0" cb="0"/><line nr="299" mi="1" ci="0" mb="0" cb="0"/><line nr="307" mi="4" ci="0" mb="2" cb="0"/><line nr="308" mi="10" ci="0" mb="0" cb="0"/><line nr="309" mi="4" ci="0" mb="0" cb="0"/><line nr="311" mi="1" ci="0" mb="0" cb="0"/><line nr="319" mi="5" ci="0" mb="2" cb="0"/><line nr="320" mi="1" ci="0" mb="0" cb="0"/><line nr="322" mi="2" ci="0" mb="0" cb="0"/><line nr="323" mi="4" ci="0" mb="0" cb="0"/><line nr="325" mi="3" ci="0" mb="0" cb="0"/><line nr="326" mi="3" ci="0" mb="0" cb="0"/><line nr="327" mi="4" ci="0" mb="0" cb="0"/><line nr="328" mi="3" ci="0" mb="0" cb="0"/><line nr="329" mi="7" ci="0" mb="2" cb="0"/><line nr="330" mi="6" ci="0" mb="0" cb="0"/><line nr="331" mi="3" ci="0" mb="0" cb="0"/><line nr="333" mi="13" ci="0" mb="2" cb="0"/><line nr="334" mi="1" ci="0" mb="0" cb="0"/><line nr="335" mi="5" ci="0" mb="0" cb="0"/><line nr="337" mi="1" ci="0" mb="0" cb="0"/><line nr="338" mi="3" ci="0" mb="0" cb="0"/><line nr="340" mi="3" ci="0" mb="0" cb="0"/><line nr="341" mi="5" ci="0" mb="2" cb="0"/><line nr="342" mi="5" ci="0" mb="0" cb="0"/><line nr="346" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="270" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="78" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BrokenOutputStream.java"><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ChunkedOutputStream.java"><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="2" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="2" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="6" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DemuxOutputStream.java"><line nr="26" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="2" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="2" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="2" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FileWriterWithEncoding.java"><line nr="65" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="8" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="8" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="8" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="8" ci="0" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="143" mi="5" ci="0" mb="0" cb="0"/><line nr="144" mi="1" ci="0" mb="0" cb="0"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="6" ci="0" mb="0" cb="0"/><line nr="158" mi="1" ci="0" mb="0" cb="0"/><line nr="169" mi="5" ci="0" mb="0" cb="0"/><line nr="170" mi="1" ci="0" mb="0" cb="0"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="6" ci="0" mb="0" cb="0"/><line nr="184" mi="1" ci="0" mb="0" cb="0"/><line nr="195" mi="5" ci="0" mb="0" cb="0"/><line nr="196" mi="1" ci="0" mb="0" cb="0"/><line nr="209" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="6" ci="0" mb="0" cb="0"/><line nr="211" mi="1" ci="0" mb="0" cb="0"/><line nr="226" mi="2" ci="0" mb="2" cb="0"/><line nr="227" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="2" ci="0" mb="2" cb="0"/><line nr="230" mi="5" ci="0" mb="0" cb="0"/><line nr="232" mi="2" ci="0" mb="0" cb="0"/><line nr="233" mi="3" ci="0" mb="0" cb="0"/><line nr="235" mi="6" ci="0" mb="0" cb="0"/><line nr="236" mi="3" ci="0" mb="2" cb="0"/><line nr="237" mi="7" ci="0" mb="0" cb="0"/><line nr="238" mi="3" ci="0" mb="2" cb="0"/><line nr="239" mi="7" ci="0" mb="0" cb="0"/><line nr="241" mi="7" ci="0" mb="0" cb="0"/><line nr="243" mi="1" ci="0" mb="0" cb="0"/><line nr="245" mi="2" ci="0" mb="2" cb="0"/><line nr="246" mi="2" ci="0" mb="0" cb="0"/><line nr="248" mi="1" ci="0" mb="0" cb="0"/><line nr="249" mi="3" ci="0" mb="0" cb="0"/><line nr="250" mi="1" ci="0" mb="0" cb="0"/><line nr="251" mi="2" ci="0" mb="2" cb="0"/><line nr="252" mi="3" ci="0" mb="0" cb="0"/><line nr="254" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="4" ci="0" mb="0" cb="0"/><line nr="267" mi="1" ci="0" mb="0" cb="0"/><line nr="276" mi="4" ci="0" mb="0" cb="0"/><line nr="277" mi="1" ci="0" mb="0" cb="0"/><line nr="288" mi="6" ci="0" mb="0" cb="0"/><line nr="289" mi="1" ci="0" mb="0" cb="0"/><line nr="298" mi="4" ci="0" mb="0" cb="0"/><line nr="299" mi="1" ci="0" mb="0" cb="0"/><line nr="310" mi="6" ci="0" mb="0" cb="0"/><line nr="311" mi="1" ci="0" mb="0" cb="0"/><line nr="319" mi="3" ci="0" mb="0" cb="0"/><line nr="320" mi="1" ci="0" mb="0" cb="0"/><line nr="328" mi="3" ci="0" mb="0" cb="0"/><line nr="329" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="205" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="62" covered="0"/><counter type="COMPLEXITY" missed="26" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AppendableOutputStream.java"><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ClosedOutputStream.java"><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="14" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="8"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XmlStreamWriter.java"><line nr="46" mi="6" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="7" ci="0" mb="2" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="7" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="2" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="9" ci="0" mb="0" cb="0"/><line nr="127" mi="6" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="2" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="1" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="156" mi="6" ci="0" mb="2" cb="0"/><line nr="157" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="6" ci="0" mb="0" cb="0"/><line nr="162" mi="4" ci="0" mb="2" cb="0"/><line nr="163" mi="7" ci="0" mb="2" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="2" cb="0"/><line nr="168" mi="7" ci="0" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="2" cb="0"/><line nr="171" mi="6" ci="0" mb="0" cb="0"/><line nr="172" mi="12" ci="0" mb="0" cb="0"/><line nr="176" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="2" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="1" ci="0" mb="0" cb="0"/><line nr="187" mi="4" ci="0" mb="0" cb="0"/><line nr="189" mi="3" ci="0" mb="2" cb="0"/><line nr="191" mi="3" ci="0" mb="0" cb="0"/><line nr="192" mi="9" ci="0" mb="0" cb="0"/><line nr="193" mi="5" ci="0" mb="0" cb="0"/><line nr="194" mi="3" ci="0" mb="2" cb="0"/><line nr="195" mi="10" ci="0" mb="0" cb="0"/><line nr="199" mi="1" ci="0" mb="0" cb="0"/><line nr="211" mi="3" ci="0" mb="2" cb="0"/><line nr="212" mi="6" ci="0" mb="0" cb="0"/><line nr="214" mi="6" ci="0" mb="0" cb="0"/><line nr="216" mi="1" ci="0" mb="0" cb="0"/><line nr="218" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="215" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="53" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LockableFileWriter.java"><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="8" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="6" ci="0" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><line nr="146" mi="6" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="161" mi="6" ci="0" mb="0" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="0" cb="0"/><line nr="180" mi="3" ci="0" mb="2" cb="0"/><line nr="181" mi="3" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="2" cb="0"/><line nr="184" mi="5" ci="0" mb="0" cb="0"/><line nr="188" mi="2" ci="0" mb="2" cb="0"/><line nr="189" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="194" mi="15" ci="0" mb="0" cb="0"/><line nr="197" mi="2" ci="0" mb="0" cb="0"/><line nr="200" mi="7" ci="0" mb="0" cb="0"/><line nr="201" mi="1" ci="0" mb="0" cb="0"/><line nr="218" mi="7" ci="0" mb="0" cb="0"/><line nr="219" mi="1" ci="0" mb="0" cb="0"/><line nr="230" mi="3" ci="0" mb="2" cb="0"/><line nr="231" mi="8" ci="0" mb="0" cb="0"/><line nr="232" mi="5" ci="0" mb="0" cb="0"/><line nr="234" mi="3" ci="0" mb="2" cb="0"/><line nr="235" mi="8" ci="0" mb="0" cb="0"/><line nr="236" mi="5" ci="0" mb="0" cb="0"/><line nr="238" mi="1" ci="0" mb="0" cb="0"/><line nr="246" mi="4" ci="0" mb="0" cb="0"/><line nr="247" mi="4" ci="0" mb="2" cb="0"/><line nr="248" mi="9" ci="0" mb="0" cb="0"/><line nr="249" mi="7" ci="0" mb="0" cb="0"/><line nr="251" mi="3" ci="0" mb="0" cb="0"/><line nr="252" mi="3" ci="0" mb="0" cb="0"/><line nr="253" mi="1" ci="0" mb="0" cb="0"/><line nr="266" mi="3" ci="0" mb="0" cb="0"/><line nr="268" mi="10" ci="0" mb="0" cb="0"/><line nr="269" mi="2" ci="0" mb="0" cb="0"/><line nr="271" mi="1" ci="0" mb="0" cb="0"/><line nr="272" mi="4" ci="0" mb="0" cb="0"/><line nr="273" mi="2" ci="0" mb="2" cb="0"/><line nr="274" mi="3" ci="0" mb="0" cb="0"/><line nr="276" mi="2" ci="0" mb="0" cb="0"/><line nr="289" mi="3" ci="0" mb="0" cb="0"/><line nr="291" mi="4" ci="0" mb="0" cb="0"/><line nr="293" mi="1" ci="0" mb="0" cb="0"/><line nr="303" mi="4" ci="0" mb="0" cb="0"/><line nr="304" mi="1" ci="0" mb="0" cb="0"/><line nr="313" mi="4" ci="0" mb="0" cb="0"/><line nr="314" mi="1" ci="0" mb="0" cb="0"/><line nr="325" mi="6" ci="0" mb="0" cb="0"/><line nr="326" mi="1" ci="0" mb="0" cb="0"/><line nr="335" mi="4" ci="0" mb="0" cb="0"/><line nr="336" mi="1" ci="0" mb="0" cb="0"/><line nr="347" mi="6" ci="0" mb="0" cb="0"/><line nr="348" mi="1" ci="0" mb="0" cb="0"/><line nr="356" mi="3" ci="0" mb="0" cb="0"/><line nr="357" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="253" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="70" covered="0"/><counter type="COMPLEXITY" missed="27" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TaggedOutputStream.java"><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NullWriter.java"><line nr="33" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NullOutputStream.java"><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ByteArrayOutputStream.java"><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="2" cb="0"/><line nr="93" mi="12" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="8" ci="0" mb="2" cb="0"/><line nr="110" mi="8" ci="0" mb="0" cb="0"/><line nr="112" mi="6" ci="0" mb="0" cb="0"/><line nr="113" mi="9" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="2" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="11" ci="0" mb="0" cb="0"/><line nr="124" mi="8" ci="0" mb="0" cb="0"/><line nr="127" mi="6" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="129" mi="6" ci="0" mb="0" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><line nr="141" mi="18" ci="0" mb="10" cb="0"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="2" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="6" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="2" cb="0"/><line nr="155" mi="8" ci="0" mb="0" cb="0"/><line nr="156" mi="11" ci="0" mb="0" cb="0"/><line nr="157" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="2" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="1" ci="0" mb="0" cb="0"/><line nr="173" mi="6" ci="0" mb="0" cb="0"/><line nr="174" mi="5" ci="0" mb="2" cb="0"/><line nr="175" mi="6" ci="0" mb="0" cb="0"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="6" ci="0" mb="0" cb="0"/><line nr="179" mi="6" ci="0" mb="0" cb="0"/><line nr="180" mi="1" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="6" ci="0" mb="0" cb="0"/><line nr="196" mi="11" ci="0" mb="0" cb="0"/><line nr="197" mi="3" ci="0" mb="2" cb="0"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="199" mi="4" ci="0" mb="0" cb="0"/><line nr="200" mi="6" ci="0" mb="0" cb="0"/><line nr="201" mi="5" ci="0" mb="2" cb="0"/><line nr="202" mi="5" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="205" mi="12" ci="0" mb="0" cb="0"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><line nr="215" mi="3" ci="0" mb="0" cb="0"/><line nr="229" mi="1" ci="0" mb="0" cb="0"/><line nr="235" mi="3" ci="0" mb="0" cb="0"/><line nr="236" mi="3" ci="0" mb="0" cb="0"/><line nr="237" mi="3" ci="0" mb="0" cb="0"/><line nr="238" mi="3" ci="0" mb="2" cb="0"/><line nr="239" mi="9" ci="0" mb="0" cb="0"/><line nr="242" mi="3" ci="0" mb="0" cb="0"/><line nr="243" mi="7" ci="0" mb="0" cb="0"/><line nr="244" mi="3" ci="0" mb="0" cb="0"/><line nr="245" mi="3" ci="0" mb="0" cb="0"/><line nr="246" mi="3" ci="0" mb="0" cb="0"/><line nr="248" mi="1" ci="0" mb="0" cb="0"/><line nr="259" mi="3" ci="0" mb="0" cb="0"/><line nr="260" mi="11" ci="0" mb="2" cb="0"/><line nr="261" mi="5" ci="0" mb="0" cb="0"/><line nr="262" mi="5" ci="0" mb="0" cb="0"/><line nr="263" mi="4" ci="0" mb="0" cb="0"/><line nr="264" mi="2" ci="0" mb="2" cb="0"/><line nr="265" mi="1" ci="0" mb="0" cb="0"/><line nr="267" mi="1" ci="0" mb="0" cb="0"/><line nr="268" mi="1" ci="0" mb="0" cb="0"/><line nr="293" mi="4" ci="0" mb="0" cb="0"/><line nr="322" mi="5" ci="0" mb="0" cb="0"/><line nr="323" mi="4" ci="0" mb="0" cb="0"/><line nr="324" mi="3" ci="0" mb="0" cb="0"/><line nr="338" mi="3" ci="0" mb="0" cb="0"/><line nr="339" mi="2" ci="0" mb="2" cb="0"/><line nr="340" mi="4" ci="0" mb="0" cb="0"/><line nr="342" mi="7" ci="0" mb="0" cb="0"/><line nr="343" mi="11" ci="0" mb="2" cb="0"/><line nr="344" mi="5" ci="0" mb="0" cb="0"/><line nr="345" mi="9" ci="0" mb="0" cb="0"/><line nr="346" mi="4" ci="0" mb="0" cb="0"/><line nr="347" mi="2" ci="0" mb="2" cb="0"/><line nr="348" mi="1" ci="0" mb="0" cb="0"/><line nr="350" mi="1" ci="0" mb="0" cb="0"/><line nr="351" mi="3" ci="0" mb="0" cb="0"/><line nr="352" mi="6" ci="0" mb="0" cb="0"/><line nr="363" mi="3" ci="0" mb="0" cb="0"/><line nr="364" mi="2" ci="0" mb="2" cb="0"/><line nr="365" mi="2" ci="0" mb="0" cb="0"/><line nr="367" mi="3" ci="0" mb="0" cb="0"/><line nr="368" mi="2" ci="0" mb="0" cb="0"/><line nr="369" mi="11" ci="0" mb="2" cb="0"/><line nr="370" mi="5" ci="0" mb="0" cb="0"/><line nr="371" mi="6" ci="0" mb="0" cb="0"/><line nr="372" mi="4" ci="0" mb="0" cb="0"/><line nr="373" mi="4" ci="0" mb="0" cb="0"/><line nr="374" mi="2" ci="0" mb="2" cb="0"/><line nr="375" mi="1" ci="0" mb="0" cb="0"/><line nr="377" mi="1" ci="0" mb="0" cb="0"/><line nr="378" mi="2" ci="0" mb="0" cb="0"/><line nr="392" mi="7" ci="0" mb="0" cb="0"/><line nr="405" mi="7" ci="0" mb="0" cb="0"/><line nr="418" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="516" covered="0"/><counter type="BRANCH" missed="46" covered="0"/><counter type="LINE" missed="119" covered="0"/><counter type="COMPLEXITY" missed="41" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CountingOutputStream.java"><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="2" cb="0"/><line nr="70" mi="14" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="2" cb="0"/><line nr="88" mi="14" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="56" covered="18"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="6"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ProxyWriter.java"><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="7" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="2" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="2" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="4" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="1" ci="0" mb="0" cb="0"/><line nr="141" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="1" ci="0" mb="0" cb="0"/><line nr="143" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="156" mi="6" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="1" ci="0" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="161" mi="1" ci="0" mb="0" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="2" ci="0" mb="2" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><line nr="177" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="0" cb="0"/><line nr="179" mi="1" ci="0" mb="0" cb="0"/><line nr="180" mi="3" ci="0" mb="0" cb="0"/><line nr="181" mi="1" ci="0" mb="0" cb="0"/><line nr="182" mi="1" ci="0" mb="0" cb="0"/><line nr="194" mi="3" ci="0" mb="0" cb="0"/><line nr="195" mi="6" ci="0" mb="0" cb="0"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="197" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="1" ci="0" mb="0" cb="0"/><line nr="200" mi="1" ci="0" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="210" mi="1" ci="0" mb="0" cb="0"/><line nr="211" mi="3" ci="0" mb="0" cb="0"/><line nr="212" mi="1" ci="0" mb="0" cb="0"/><line nr="213" mi="1" ci="0" mb="0" cb="0"/><line nr="222" mi="3" ci="0" mb="0" cb="0"/><line nr="223" mi="1" ci="0" mb="0" cb="0"/><line nr="224" mi="3" ci="0" mb="0" cb="0"/><line nr="225" mi="1" ci="0" mb="0" cb="0"/><line nr="226" mi="1" ci="0" mb="0" cb="0"/><line nr="242" mi="1" ci="0" mb="0" cb="0"/><line nr="259" mi="1" ci="0" mb="0" cb="0"/><line nr="271" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="191" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="80" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TeeOutputStream.java"><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DeferredFileOutputStream.java"><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="8" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="8" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="2" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="8" ci="0" mb="0" cb="0"/><line nr="137" mi="2" ci="0" mb="2" cb="0"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="140" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="8" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="2" cb="0"/><line nr="159" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="2" ci="0" mb="2" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="0" cb="0"/><line nr="180" mi="3" ci="0" mb="0" cb="0"/><line nr="181" mi="3" ci="0" mb="0" cb="0"/><line nr="182" mi="3" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="185" mi="6" ci="0" mb="0" cb="0"/><line nr="186" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="1" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="0" cb="0"/><line nr="219" mi="3" ci="0" mb="2" cb="0"/><line nr="220" mi="9" ci="0" mb="0" cb="0"/><line nr="222" mi="3" ci="0" mb="0" cb="0"/><line nr="223" mi="6" ci="0" mb="0" cb="0"/><line nr="225" mi="4" ci="0" mb="0" cb="0"/><line nr="226" mi="1" ci="0" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="228" mi="2" ci="0" mb="0" cb="0"/><line nr="229" mi="1" ci="0" mb="0" cb="0"/><line nr="230" mi="3" ci="0" mb="0" cb="0"/><line nr="231" mi="3" ci="0" mb="0" cb="0"/><line nr="232" mi="1" ci="0" mb="0" cb="0"/><line nr="247" mi="7" ci="0" mb="2" cb="0"/><line nr="261" mi="3" ci="0" mb="2" cb="0"/><line nr="263" mi="4" ci="0" mb="0" cb="0"/><line nr="265" mi="2" ci="0" mb="0" cb="0"/><line nr="285" mi="3" ci="0" mb="0" cb="0"/><line nr="297" mi="2" ci="0" mb="0" cb="0"/><line nr="298" mi="3" ci="0" mb="0" cb="0"/><line nr="299" mi="1" ci="0" mb="0" cb="0"/><line nr="314" mi="3" ci="0" mb="2" cb="0"/><line nr="315" mi="5" ci="0" mb="0" cb="0"/><line nr="318" mi="3" ci="0" mb="2" cb="0"/><line nr="319" mi="5" ci="0" mb="0" cb="0"/><line nr="321" mi="8" ci="0" mb="0" cb="0"/><line nr="322" mi="4" ci="0" mb="0" cb="0"/><line nr="325" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="188" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="53" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ProxyOutputStream.java"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="7" ci="0" mb="2" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="42"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="17" covered="20"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="2408" covered="100"/><counter type="BRANCH" missed="169" covered="1"/><counter type="LINE" missed="702" covered="40"/><counter type="COMPLEXITY" missed="268" covered="18"/><counter type="METHOD" missed="183" covered="18"/><counter type="CLASS" missed="17" covered="5"/></package><package name="com/milaboratory/core/mutations/generator"><class name="com/milaboratory/core/mutations/generator/SubstitutionModel" sourcefilename="SubstitutionModel.java"><method name="&lt;init&gt;" desc="([D)V" line="31"><counter type="INSTRUCTION" missed="14" covered="137"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplyProbabilities" desc="(D)Lcom/milaboratory/core/mutations/generator/SubstitutionModel;" line="60"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sample" desc="(Lorg/apache/commons/math3/random/RandomGenerator;I)I" line="67"><counter type="INSTRUCTION" missed="4" covered="40"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sampleAsMutation" desc="(Lorg/apache/commons/math3/random/RandomGenerator;II)I" line="77"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTotalSubstitutionProbability" desc="(I)D" line="90"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProbability" desc="(II)D" line="94"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="105" covered="205"/><counter type="BRANCH" missed="20" covered="18"/><counter type="LINE" missed="15" covered="26"/><counter type="COMPLEXITY" missed="17" covered="9"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/generator/MutationsGenerator" sourcefilename="MutationsGenerator.java"><method name="generateMutations" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/mutations/generator/NucleotideMutationModel;Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/mutations/Mutations;" line="36"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateMutations" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/mutations/generator/NucleotideMutationModel;II)Lcom/milaboratory/core/mutations/Mutations;" line="42"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateMutations" desc="(Lcom/milaboratory/core/sequence/NucleotideSequence;Lcom/milaboratory/core/mutations/generator/NucleotideMutationModel;)Lcom/milaboratory/core/mutations/Mutations;" line="80"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="92"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/generator/SubstitutionModelBuilder" sourcefilename="SubstitutionModelBuilder.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;)V" line="25"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="28"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setProbability" desc="(IID)V" line="34"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/milaboratory/core/mutations/generator/SubstitutionModel;" line="38"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProbability" desc="(II)D" line="42"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="29"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/generator/SubstitutionModels" sourcefilename="SubstitutionModels.java"><method name="getEmpiricalNucleotideSubstitutionModel" desc="()Lcom/milaboratory/core/mutations/generator/SubstitutionModel;" line="27"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEmpiricalNucleotideSubstitutionModelWithNoise" desc="(Lorg/apache/commons/math3/random/RandomGenerator;DD)Lcom/milaboratory/core/mutations/generator/SubstitutionModel;" line="48"><counter type="INSTRUCTION" missed="156" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUniformNucleotideSubstitutionModel" desc="(D)Lcom/milaboratory/core/mutations/generator/SubstitutionModel;" line="71"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="156" covered="106"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="15" covered="20"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/generator/UniformMutationsGenerator" sourcefilename="UniformMutationsGenerator.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createUniformMutationAsObject" desc="(Lcom/milaboratory/core/sequence/Sequence;Lorg/apache/commons/math3/random/RandomGenerator;)Lcom/milaboratory/core/mutations/Mutations;" line="29"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createUniformMutation" desc="(Lcom/milaboratory/core/sequence/Sequence;Lorg/apache/commons/math3/random/RandomGenerator;)I" line="33"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createUniformMutationAsObject" desc="(Lcom/milaboratory/core/sequence/Sequence;Lorg/apache/commons/math3/random/RandomGenerator;Lcom/milaboratory/core/mutations/MutationType;)Lcom/milaboratory/core/mutations/Mutations;" line="39"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createUniformMutation" desc="(Lcom/milaboratory/core/sequence/Sequence;Lorg/apache/commons/math3/random/RandomGenerator;Lcom/milaboratory/core/mutations/MutationType;)I" line="44"><counter type="INSTRUCTION" missed="13" covered="73"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="119"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/generator/MutationModels" sourcefilename="MutationModels.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEmpiricalNucleotideMutationModel" desc="()Lcom/milaboratory/core/mutations/generator/NucleotideMutationModel;" line="24"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEmpiricalNucleotideMutationModelWithNoise" desc="(Lorg/apache/commons/math3/random/RandomGenerator;DD)Lcom/milaboratory/core/mutations/generator/NucleotideMutationModel;" line="30"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="7"/><counter type="LINE" missed="7" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/generator/GenericNucleotideMutationModel" sourcefilename="GenericNucleotideMutationModel.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/mutations/generator/SubstitutionModel;DD)V" line="32"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/mutations/generator/SubstitutionModel;DDJ)V" line="35"><counter type="INSTRUCTION" missed="6" covered="104"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([DD)V" line="59"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([DDJ)V" line="62"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateMutation" desc="(II)I" line="70"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplyProbabilities" desc="(D)Lcom/milaboratory/core/mutations/generator/GenericNucleotideMutationModel;" line="94"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reseed" desc="(J)V" line="111"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/milaboratory/core/mutations/generator/NucleotideMutationModel;" line="116"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="285"/><counter type="BRANCH" missed="6" covered="26"/><counter type="LINE" missed="0" covered="48"/><counter type="COMPLEXITY" missed="6" covered="19"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/mutations/generator/NucleotideMutationModel" sourcefilename="NucleotideMutationModel.java"/><sourcefile name="UniformMutationsGenerator.java"><line nr="24" mi="5" ci="5" mb="1" cb="1"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="14" mb="0" cb="0"/><line nr="33" mi="0" ci="9" mb="0" cb="0"/><line nr="39" mi="0" ci="15" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="1" cb="1"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="1" cb="3"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="13" mb="0" cb="0"/><line nr="55" mi="4" ci="5" mb="2" cb="2"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="119"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NucleotideMutationModel.java"/><sourcefile name="SubstitutionModel.java"><line nr="26" mi="2" ci="6" mb="1" cb="1"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="8" mb="0" cb="0"/><line nr="34" mi="0" ci="8" mb="1" cb="1"/><line nr="35" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="8" mb="0" cb="2"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="2"/><line nr="45" mi="0" ci="12" mb="0" cb="0"/><line nr="46" mi="0" ci="19" mb="1" cb="1"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="2"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="2"/><line nr="54" mi="0" ci="22" mb="0" cb="0"/><line nr="55" mi="6" ci="16" mb="4" cb="4"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="12" ci="0" mb="2" cb="0"/><line nr="62" mi="9" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="15" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="1" cb="1"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="4" ci="6" mb="2" cb="2"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="15" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="2" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="7" ci="0" mb="0" cb="0"/><line nr="82" mi="10" ci="0" mb="4" cb="0"/><line nr="83" mi="3" ci="0" mb="2" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="12" mb="0" cb="0"/><line nr="94" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="105" covered="205"/><counter type="BRANCH" missed="20" covered="18"/><counter type="LINE" missed="15" covered="26"/><counter type="COMPLEXITY" missed="17" covered="9"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SubstitutionModelBuilder.java"><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="10" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="29"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GenericNucleotideMutationModel.java"><line nr="26" mi="2" ci="6" mb="1" cb="1"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="7" mb="0" cb="2"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="11" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="2"/><line nr="49" mi="0" ci="3" mb="0" cb="2"/><line nr="50" mi="0" ci="19" mb="0" cb="0"/><line nr="52" mi="0" ci="15" mb="0" cb="0"/><line nr="54" mi="6" ci="16" mb="4" cb="4"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="2"/><line nr="73" mi="0" ci="7" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="2"/><line nr="76" mi="0" ci="13" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="1" cb="1"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="2"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="2"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="2"/><line nr="96" mi="0" ci="9" mb="0" cb="0"/><line nr="100" mi="0" ci="7" mb="0" cb="2"/><line nr="101" mi="0" ci="12" mb="0" cb="0"/><line nr="102" mi="0" ci="9" mb="0" cb="2"/><line nr="103" mi="0" ci="11" mb="0" cb="0"/><line nr="106" mi="0" ci="12" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="285"/><counter type="BRANCH" missed="6" covered="26"/><counter type="LINE" missed="0" covered="48"/><counter type="COMPLEXITY" missed="6" covered="19"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MutationModels.java"><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="6" ci="0" mb="0" cb="0"/><line nr="32" mi="5" ci="0" mb="0" cb="0"/><line nr="33" mi="8" ci="0" mb="0" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="7"/><counter type="LINE" missed="7" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MutationsGenerator.java"><line nr="36" mi="0" ci="8" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="2"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="2"/><line nr="47" mi="0" ci="3" mb="1" cb="3"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="2"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="2"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="2"/><line nr="72" mi="0" ci="3" mb="0" cb="2"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="92"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SubstitutionModels.java"><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="12" ci="0" mb="0" cb="0"/><line nr="51" mi="12" ci="0" mb="0" cb="0"/><line nr="52" mi="12" ci="0" mb="0" cb="0"/><line nr="54" mi="12" ci="0" mb="0" cb="0"/><line nr="55" mi="12" ci="0" mb="0" cb="0"/><line nr="56" mi="12" ci="0" mb="0" cb="0"/><line nr="58" mi="12" ci="0" mb="0" cb="0"/><line nr="59" mi="12" ci="0" mb="0" cb="0"/><line nr="60" mi="12" ci="0" mb="0" cb="0"/><line nr="62" mi="12" ci="0" mb="0" cb="0"/><line nr="63" mi="12" ci="0" mb="0" cb="0"/><line nr="64" mi="12" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="7" mb="0" cb="2"/><line nr="74" mi="0" ci="9" mb="0" cb="2"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="156" covered="106"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="15" covered="20"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="335" covered="843"/><counter type="BRANCH" missed="32" covered="70"/><counter type="LINE" missed="42" covered="146"/><counter type="COMPLEXITY" missed="35" covered="54"/><counter type="METHOD" missed="8" covered="28"/><counter type="CLASS" missed="0" covered="7"/></package><package name="com/milaboratory/core/io/binary"><class name="com/milaboratory/core/io/binary/RangeSerializer" sourcefilename="RangeSerializer.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Lcom/milaboratory/primitivio/PrimitivO;Lcom/milaboratory/core/Range;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Lcom/milaboratory/primitivio/PrimitivI;)Lcom/milaboratory/core/Range;" line="32"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReference" desc="()Z" line="38"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handlesReference" desc="()Z" line="43"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/binary/AlignmentSerializer" sourcefilename="AlignmentSerializer.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Lcom/milaboratory/primitivio/PrimitivO;Lcom/milaboratory/core/alignment/Alignment;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Lcom/milaboratory/primitivio/PrimitivI;)Lcom/milaboratory/core/alignment/Alignment;" line="38"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReference" desc="()Z" line="48"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handlesReference" desc="()Z" line="53"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="RangeSerializer.java"><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="7" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AlignmentSerializer.java"><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="9" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="2" covered="84"/><counter type="LINE" missed="1" covered="22"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="2"/></package><package name="com/milaboratory/primitivio/blocks"><class name="com/milaboratory/primitivio/blocks/PrimitivIOBlocksAbstract" sourcefilename="PrimitivIOBlocksAbstract.java"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/ExecutorService;I)V" line="36"><counter type="INSTRUCTION" missed="7" covered="46"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_ex" desc="(Ljava/lang/Throwable;)V" line="76"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkException" desc="()V" line="87"><counter type="INSTRUCTION" missed="14" covered="4"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAsyncChannel" desc="(Ljava/util/concurrent/ExecutorService;Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/AsynchronousFileChannel;" line="96"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAsyncChannel" desc="(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/AsynchronousFileChannel;" line="102"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runStatReporterIfDebug" desc="()V" line="127"><counter type="INSTRUCTION" missed="21" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="108"><counter type="INSTRUCTION" missed="5" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="55" covered="96"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="14" covered="26"/><counter type="COMPLEXITY" missed="9" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/blocks/PrimitivIBlocksStats" sourcefilename="PrimitivIBlocksStats.java"><method name="&lt;init&gt;" desc="(JJJJJJJJJJIIII)V" line="34"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="47"><counter type="INSTRUCTION" missed="2" covered="195"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="226"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/blocks/PrimitivIOBlocksUtil" sourcefilename="PrimitivIOBlocksUtil.java"><method name="defaultExecutorService" desc="()Ljava/util/concurrent/ExecutorService;" line="30"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="highLZ4Compressor" desc="()Lnet/jpountz/lz4/LZ4Compressor;" line="39"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fastLZ4Compressor" desc="()Lnet/jpountz/lz4/LZ4Compressor;" line="43"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultLZ4Compressor" desc="()Lnet/jpountz/lz4/LZ4Compressor;" line="47"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultLZ4Decompressor" desc="()Lnet/jpountz/lz4/LZ4FastDecompressor;" line="51"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/blocks/PrimitivIHeaderAction" sourcefilename="PrimitivIHeaderAction.java"/><class name="com/milaboratory/primitivio/blocks/PrimitivIBlocks$Block" sourcefilename="PrimitivIBlocks.java"><method name="&lt;init&gt;" desc="()V" line="664"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/blocks/PrimitivIOBlocksStatsAbstract" sourcefilename="PrimitivIOBlocksStatsAbstract.java"><method name="&lt;init&gt;" desc="(JJJIIII)V" line="31"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWallClockTime" desc="()J" line="42"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBlockCount" desc="()J" line="46"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObjectCount" desc="()J" line="50"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOngoingSerdes" desc="()I" line="54"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOngoingIOOps" desc="()I" line="58"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPendingOps" desc="()I" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConcurrency" desc="()I" line="66"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="33"/><counter type="LINE" missed="4" covered="12"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/blocks/PrimitivOBlocks$Writer" sourcefilename="PrimitivOBlocks.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/primitivio/blocks/PrimitivOBlocks;Ljava/nio/channels/AsynchronousByteChannel;Z)V" line="279"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParent" desc="()Lcom/milaboratory/primitivio/blocks/PrimitivOBlocks;" line="290"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/Object;)V" line="295"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="305"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="(Ljava/util/function/Consumer;)V" line="312"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="(Ljava/util/function/Consumer;Z)V" line="319"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/Object;)V" line="336"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sync" desc="()V" line="345"><counter type="INSTRUCTION" missed="5" covered="20"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPosition" desc="()J" line="359"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="acquireConcurrencyUnit" desc="()V" line="368"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scheduleIOOperation" desc="(Lcom/milaboratory/util/LambdaLatch;Lcom/milaboratory/util/LambdaLatch;Ljava/nio/ByteBuffer;)V" line="394"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stateOk" desc="()Z" line="439"><counter type="INSTRUCTION" missed="1" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeHeader" desc="(Lcom/milaboratory/primitivio/blocks/PrimitivIOBlockHeader;)V" line="443"><counter type="INSTRUCTION" missed="5" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeBlock" desc="(Ljava/util/List;)V" line="459"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="493"><counter type="INSTRUCTION" missed="7" covered="30"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChannel" desc="()Ljava/nio/channels/AsynchronousByteChannel;" line="518"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$writeBlock$3" desc="(JLjava/util/List;Lcom/milaboratory/util/LambdaLatch;Lcom/milaboratory/util/LambdaLatch;)V" line="467"><counter type="INSTRUCTION" missed="11" covered="30"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$scheduleIOOperation$2" desc="(Lcom/milaboratory/util/LambdaLatch;Ljava/nio/ByteBuffer;I)V" line="399"><counter type="INSTRUCTION" missed="7" covered="29"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$sync$1" desc="(Ljava/util/concurrent/CountDownLatch;Ljava/nio/channels/AsynchronousByteChannel;)V" line="347"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$run$0" desc="(ZLjava/util/function/Consumer;Lcom/milaboratory/util/LambdaLatch;)V" line="325"><counter type="INSTRUCTION" missed="5" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="72" covered="297"/><counter type="BRANCH" missed="11" covered="15"/><counter type="LINE" missed="25" covered="79"/><counter type="COMPLEXITY" missed="13" covered="20"/><counter type="METHOD" missed="4" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/blocks/PrimitivIOBlockHeader" sourcefilename="PrimitivIOBlockHeader.java"><method name="&lt;init&gt;" desc="([B)V" line="48"><counter type="INSTRUCTION" missed="9" covered="18"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkHeaderCorrectness" desc="()V" line="58"><counter type="INSTRUCTION" missed="5" covered="15"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLastBlock" desc="()Z" line="64"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCompressed" desc="()Z" line="68"><counter type="INSTRUCTION" missed="1" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCompressed" desc="()Lcom/milaboratory/primitivio/blocks/PrimitivIOBlockHeader;" line="72"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSpecial" desc="()Z" line="77"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSpecialLong" desc="(I)J" line="81"><counter type="INSTRUCTION" missed="9" covered="17"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSpecialLong" desc="(IJ)Lcom/milaboratory/primitivio/blocks/PrimitivIOBlockHeader;" line="89"><counter type="INSTRUCTION" missed="9" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSpecialInt" desc="(I)I" line="98"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSpecialInt" desc="(II)Lcom/milaboratory/primitivio/blocks/PrimitivIOBlockHeader;" line="106"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSpecialByte" desc="(I)B" line="115"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSpecialByte" desc="(IB)Lcom/milaboratory/primitivio/blocks/PrimitivIOBlockHeader;" line="123"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberOfObjects" desc="()I" line="132"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNumberOfObjects" desc="(I)Lcom/milaboratory/primitivio/blocks/PrimitivIOBlockHeader;" line="136"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUncompressedDataSize" desc="()I" line="141"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setUncompressedDataSize" desc="(I)Lcom/milaboratory/primitivio/blocks/PrimitivIOBlockHeader;" line="145"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDataSize" desc="()I" line="150"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDataSize" desc="(I)Lcom/milaboratory/primitivio/blocks/PrimitivIOBlockHeader;" line="154"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChecksum" desc="()I" line="159"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setChecksum" desc="(I)Lcom/milaboratory/primitivio/blocks/PrimitivIOBlockHeader;" line="163"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="header" desc="(B)Lcom/milaboratory/primitivio/blocks/PrimitivIOBlockHeader;" line="168"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dataBlockHeader" desc="()Lcom/milaboratory/primitivio/blocks/PrimitivIOBlockHeader;" line="174"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="specialHeader" desc="()Lcom/milaboratory/primitivio/blocks/PrimitivIOBlockHeader;" line="178"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastHeader" desc="()Lcom/milaboratory/primitivio/blocks/PrimitivIOBlockHeader;" line="182"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readHeaderNoCopy" desc="([B)Lcom/milaboratory/primitivio/blocks/PrimitivIOBlockHeader;" line="186"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readHeader" desc="([BI)Lcom/milaboratory/primitivio/blocks/PrimitivIOBlockHeader;" line="190"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeTo" desc="([BI)V" line="196"><counter type="INSTRUCTION" missed="5" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asByteBuffer" desc="()Ljava/nio/ByteBuffer;" line="202"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="207"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="215"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="220"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="232" covered="210"/><counter type="BRANCH" missed="44" covered="20"/><counter type="LINE" missed="45" covered="45"/><counter type="COMPLEXITY" missed="36" covered="28"/><counter type="METHOD" missed="8" covered="24"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/blocks/PrimitivIOBlocksAbstract$1" sourcefilename="PrimitivIOBlocksAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/primitivio/blocks/PrimitivIOBlocksAbstract;)V" line="129"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="()V" line="133"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/primitivio/blocks/PrimitivOBlocks$Writer$1" sourcefilename="PrimitivOBlocks.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/primitivio/blocks/PrimitivOBlocks$Writer;Lcom/milaboratory/util/LambdaLatch;JILcom/milaboratory/util/LambdaLatch;)V" line="413"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="completed" desc="(Ljava/lang/Integer;Ljava/lang/Object;)V" line="416"><counter type="INSTRUCTION" missed="22" covered="39"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="57"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/blocks/PrimitivOBlocks$CHAbstract" sourcefilename="PrimitivOBlocks.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/primitivio/blocks/PrimitivOBlocks;Lcom/milaboratory/util/LambdaLatch;)V" line="538"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="failed" desc="(Ljava/lang/Throwable;Ljava/lang/Object;)V" line="545"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="12"/><counter type="LINE" missed="5" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/blocks/PrimitivIBlocks$Reader" sourcefilename="PrimitivIBlocks.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks;Ljava/nio/channels/AsynchronousByteChannel;ILjava/util/function/Function;Z)V" line="284"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParent" desc="()Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks;" line="316"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readHeader" desc="()V" line="320"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readBlock" desc="()V" line="334"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_readHeader" desc="(Lcom/milaboratory/util/LambdaLatch;)V" line="399"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_readBlock" desc="(Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks$Block;Lcom/milaboratory/util/LambdaLatch;)V" line="453"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readBlocksIfNeeded" desc="()V" line="513"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setHeader" desc="([B)V" line="518"><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stateOk" desc="()Z" line="525"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextBlockOrClose" desc="()V" line="536"><counter type="INSTRUCTION" missed="33" covered="77"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="7" covered="20"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="take" desc="()Ljava/lang/Object;" line="583"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="602"><counter type="INSTRUCTION" missed="12" covered="34"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="4" covered="13"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChannel" desc="()Ljava/nio/channels/AsynchronousByteChannel;" line="629"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$readBlock$2" desc="(Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks$Block;Lcom/milaboratory/util/LambdaLatch;)V" line="349"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$null$1" desc="(Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks$Block;Lcom/milaboratory/util/LambdaLatch;)V" line="358"><counter type="INSTRUCTION" missed="13" covered="31"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="5" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$readHeader$0" desc="(Lcom/milaboratory/util/LambdaLatch;)V" line="326"><counter type="INSTRUCTION" missed="1" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="273"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="71" covered="405"/><counter type="BRANCH" missed="11" covered="37"/><counter type="LINE" missed="19" covered="112"/><counter type="COMPLEXITY" missed="13" covered="28"/><counter type="METHOD" missed="2" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/blocks/PrimitivOBlocksStats" sourcefilename="PrimitivOBlocksStats.java"><method name="&lt;init&gt;" desc="(JJJJJJJJJJJJIIII)V" line="40"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAverageUncompressedObjectSize" desc="()J" line="53"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="58"><counter type="INSTRUCTION" missed="2" covered="232"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="275"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="32"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/blocks/PrimitivIHeaderActions$2" sourcefilename="PrimitivIHeaderActions.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/blocks/PrimitivIHeaderActions$1" sourcefilename="PrimitivIHeaderActions.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/blocks/PrimitivIHeaderActions$3" sourcefilename="PrimitivIHeaderActions.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/blocks/PrimitivOBlocks" sourcefilename="PrimitivOBlocks.java"><method name="&lt;init&gt;" desc="(ILcom/milaboratory/primitivio/PrimitivOState;ILnet/jpountz/lz4/LZ4Compressor;)V" line="117"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/ExecutorService;ILcom/milaboratory/primitivio/PrimitivOState;ILnet/jpountz/lz4/LZ4Compressor;)V" line="131"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/Semaphore;Lcom/milaboratory/primitivio/PrimitivOState;ILnet/jpountz/lz4/LZ4Compressor;)V" line="93"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetStats" desc="()V" line="152"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockIsFull" desc="(I)Z" line="166"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serializeBlock" desc="(Ljava/util/List;)Ljava/nio/ByteBuffer;" line="180"><counter type="INSTRUCTION" missed="19" covered="165"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="3" covered="29"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAsyncChannel" desc="(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/AsynchronousFileChannel;" line="255"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newWriter" desc="(Ljava/nio/file/Path;)Lcom/milaboratory/primitivio/blocks/PrimitivOBlocks$Writer;" line="259"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newWriter" desc="(Ljava/nio/channels/AsynchronousFileChannel;J)Lcom/milaboratory/primitivio/blocks/PrimitivOBlocks$Writer;" line="263"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newWriter" desc="(Ljava/nio/channels/AsynchronousFileChannel;JZ)Lcom/milaboratory/primitivio/blocks/PrimitivOBlocks$Writer;" line="267"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newWriter" desc="(Ljava/nio/channels/AsynchronousByteChannel;Z)Lcom/milaboratory/primitivio/blocks/PrimitivOBlocks$Writer;" line="271"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStats" desc="()Lcom/milaboratory/primitivio/blocks/PrimitivOBlocksStats;" line="523"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="405"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="4" covered="64"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/blocks/PrimitivIHybrid" sourcefilename="PrimitivIHybrid.java"><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;I)V" line="96"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;Lcom/milaboratory/util/LambdaSemaphore;)V" line="100"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;Lcom/milaboratory/primitivio/PrimitivIState;I)V" line="104"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;Lcom/milaboratory/primitivio/PrimitivIState;Lcom/milaboratory/util/LambdaSemaphore;)V" line="108"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/ExecutorService;Ljava/nio/file/Path;I)V" line="112"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/ExecutorService;Ljava/nio/file/Path;Lcom/milaboratory/primitivio/PrimitivIState;Lcom/milaboratory/util/LambdaSemaphore;)V" line="116"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/ExecutorService;Lcom/milaboratory/util/io/AsynchronousFileChannelAdapter;Lcom/milaboratory/primitivio/PrimitivIState;Lcom/milaboratory/util/LambdaSemaphore;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDefaultReadAheadBlocks" desc="(I)Lcom/milaboratory/primitivio/blocks/PrimitivIHybrid;" line="130"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPosition" desc="()J" line="136"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPosition" desc="(J)V" line="145"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkNullState" desc="(ZZ)V" line="151"><counter type="INSTRUCTION" missed="27" covered="63"/><counter type="BRANCH" missed="9" covered="13"/><counter type="LINE" missed="5" covered="15"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInPrimitivIMode" desc="()Z" line="182"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInBlocksMode" desc="()Z" line="186"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInRandomAccessMode" desc="()Z" line="190"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beginPrimitivI" desc="()Lcom/milaboratory/primitivio/PrimitivI;" line="194"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="beginPrimitivI" desc="(Z)Lcom/milaboratory/primitivio/PrimitivI;" line="198"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beginPrimitivI" desc="(ZI)Lcom/milaboratory/primitivio/PrimitivI;" line="202"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beginRandomAccessPrimitivI" desc="(J)Lcom/milaboratory/primitivio/PrimitivI;" line="215"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="beginPrimitivIBlocks" desc="(Ljava/lang/Class;)Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks$Reader;" line="232"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beginPrimitivIBlocks" desc="(Ljava/lang/Class;I)Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks$Reader;" line="236"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="beginPrimitivIBlocks" desc="(Ljava/lang/Class;Ljava/util/function/Function;)Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks$Reader;" line="240"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="beginPrimitivIBlocks" desc="(Ljava/lang/Class;ILjava/util/function/Function;)Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks$Reader;" line="245"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beginRandomAccessPrimitivIBlocks" desc="(Ljava/lang/Class;J)Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks$Reader;" line="257"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beginRandomAccessPrimitivIBlocks" desc="(Ljava/lang/Class;JI)Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks$Reader;" line="261"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="beginRandomAccessPrimitivIBlocks" desc="(Ljava/lang/Class;JLjava/util/function/Function;)Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks$Reader;" line="266"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="beginRandomAccessPrimitivIBlocks" desc="(Ljava/lang/Class;JILjava/util/function/Function;)Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks$Reader;" line="271"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="282"><counter type="INSTRUCTION" missed="1" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$checkNullState$0" desc="(Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks$Reader;)Z" line="154"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="226"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="134" covered="298"/><counter type="BRANCH" missed="14" covered="18"/><counter type="LINE" missed="26" covered="62"/><counter type="COMPLEXITY" missed="24" covered="21"/><counter type="METHOD" missed="11" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/blocks/PrimitivIHeaderActions$OutputObject" sourcefilename="PrimitivIHeaderActions.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/blocks/PrimitivIBlocks" sourcefilename="PrimitivIBlocks.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;ILcom/milaboratory/primitivio/PrimitivIState;)V" line="99"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/util/concurrent/ExecutorService;ILcom/milaboratory/primitivio/PrimitivIState;Lnet/jpountz/lz4/LZ4FastDecompressor;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/util/concurrent/ExecutorService;Lcom/milaboratory/util/LambdaSemaphore;Lcom/milaboratory/primitivio/PrimitivIState;Lnet/jpountz/lz4/LZ4FastDecompressor;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetStats" desc="()V" line="143"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deserializeBlock" desc="(Lcom/milaboratory/primitivio/blocks/PrimitivIOBlockHeader;[B)Ljava/util/List;" line="160"><counter type="INSTRUCTION" missed="17" covered="137"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="3" covered="28"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStats" desc="()Lcom/milaboratory/primitivio/blocks/PrimitivIBlocksStats;" line="219"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAsyncChannel" desc="(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/AsynchronousFileChannel;" line="238"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newReader" desc="(Ljava/nio/file/Path;I)Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks$Reader;" line="242"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newReader" desc="(Ljava/nio/file/Path;ILjava/util/function/Function;)Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks$Reader;" line="247"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newReader" desc="(Ljava/nio/channels/AsynchronousFileChannel;IJ)Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks$Reader;" line="252"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newReader" desc="(Ljava/nio/channels/AsynchronousFileChannel;IJLjava/util/function/Function;)Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks$Reader;" line="257"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newReader" desc="(Ljava/nio/channels/AsynchronousFileChannel;IJLjava/util/function/Function;Z)Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks$Reader;" line="263"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newReader" desc="(Ljava/nio/channels/AsynchronousByteChannel;ILjava/util/function/Function;Z)Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks$Reader;" line="270"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="75" covered="380"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="16" covered="65"/><counter type="COMPLEXITY" missed="10" covered="12"/><counter type="METHOD" missed="3" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/blocks/PrimitivIBlocks$CHAbstractCL" sourcefilename="PrimitivIBlocks.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks;Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks$Block;Lcom/milaboratory/util/LambdaLatch;)V" line="641"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="failed" desc="(Ljava/lang/Throwable;Ljava/lang/Object;)V" line="649"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="15"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/blocks/PrimitivIBlocks$Reader$2" sourcefilename="PrimitivIBlocks.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks$Reader;Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks$Block;Lcom/milaboratory/util/LambdaLatch;J[BLcom/milaboratory/util/LambdaLatch;)V" line="459"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="completed" desc="(Ljava/lang/Integer;Ljava/lang/Object;)V" line="466"><counter type="INSTRUCTION" missed="16" covered="81"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="5" covered="14"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="100"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="5" covered="15"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/blocks/PrimitivIBlocks$Reader$1" sourcefilename="PrimitivIBlocks.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks$Reader;Lcom/milaboratory/primitivio/blocks/PrimitivIBlocks$Block;Lcom/milaboratory/util/LambdaLatch;J[BLcom/milaboratory/util/LambdaLatch;)V" line="405"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="completed" desc="(Ljava/lang/Integer;Ljava/lang/Object;)V" line="410"><counter type="INSTRUCTION" missed="16" covered="48"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="5" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="67"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="5" covered="10"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/blocks/PrimitivOHybrid" sourcefilename="PrimitivOHybrid.java"><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;)V" line="70"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/ExecutorService;Ljava/nio/file/Path;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/ExecutorService;Ljava/nio/file/Path;Lcom/milaboratory/primitivio/PrimitivOState;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/ExecutorService;Ljava/nio/channels/AsynchronousByteChannel;Lcom/milaboratory/primitivio/PrimitivOState;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkNullState" desc="(Z)V" line="90"><counter type="INSTRUCTION" missed="26" covered="53"/><counter type="BRANCH" missed="10" covered="12"/><counter type="LINE" missed="4" covered="12"/><counter type="COMPLEXITY" missed="9" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPosition" desc="()J" line="114"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPosition" desc="(J)V" line="121"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInPrimitivOMode" desc="()Z" line="127"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInPrimitivOBlocksMode" desc="()Z" line="131"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="beginPrimitivO" desc="()Lcom/milaboratory/primitivio/PrimitivO;" line="135"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beginPrimitivO" desc="(Z)Lcom/milaboratory/primitivio/PrimitivO;" line="139"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="beginPrimitivO" desc="(ZI)Lcom/milaboratory/primitivio/PrimitivO;" line="150"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beginPrimitivOBlocks" desc="(II)Lcom/milaboratory/primitivio/blocks/PrimitivOBlocks$Writer;" line="163"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beginPrimitivOBlocks" desc="(IILnet/jpountz/lz4/LZ4Compressor;)Lcom/milaboratory/primitivio/blocks/PrimitivOBlocks$Writer;" line="168"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="177"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="85" covered="190"/><counter type="BRANCH" missed="22" covered="14"/><counter type="LINE" missed="17" covered="38"/><counter type="COMPLEXITY" missed="22" covered="12"/><counter type="METHOD" missed="6" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/primitivio/blocks/PrimitivIHeaderActions" sourcefilename="PrimitivIHeaderActions.java"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stopReading" desc="()Lcom/milaboratory/primitivio/blocks/PrimitivIHeaderAction;" line="34"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isStopReading" desc="(Lcom/milaboratory/primitivio/blocks/PrimitivIHeaderAction;)Z" line="38"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skip" desc="()Lcom/milaboratory/primitivio/blocks/PrimitivIHeaderAction;" line="42"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSkip" desc="(Lcom/milaboratory/primitivio/blocks/PrimitivIHeaderAction;)Z" line="46"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="error" desc="()Lcom/milaboratory/primitivio/blocks/PrimitivIHeaderAction;" line="50"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isError" desc="(Lcom/milaboratory/primitivio/blocks/PrimitivIHeaderAction;)Z" line="54"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outputObject" desc="(Ljava/lang/Object;)Lcom/milaboratory/primitivio/blocks/PrimitivIHeaderAction;" line="58"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryExtractOutputObject" desc="(Lcom/milaboratory/primitivio/blocks/PrimitivIHeaderAction;)Ljava/lang/Object;" line="62"><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skipAll" desc="()Ljava/util/function/Function;" line="66"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stopReadingOnAny" desc="()Ljava/util/function/Function;" line="70"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$stopReadingOnAny$1" desc="(Lcom/milaboratory/primitivio/blocks/PrimitivIOBlockHeader;)Lcom/milaboratory/primitivio/blocks/PrimitivIHeaderAction;" line="70"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$skipAll$0" desc="(Lcom/milaboratory/primitivio/blocks/PrimitivIOBlockHeader;)Lcom/milaboratory/primitivio/blocks/PrimitivIHeaderAction;" line="66"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="47"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="5" covered="9"/><counter type="COMPLEXITY" missed="9" covered="9"/><counter type="METHOD" missed="6" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="PrimitivIOBlockHeader.java"><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="1" cb="1"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="1" cb="1"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="4"/><line nr="59" mi="0" ci="8" mb="2" cb="2"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="9" mb="0" cb="2"/><line nr="68" mi="1" ci="10" mb="1" cb="1"/><line nr="72" mi="0" ci="9" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="11" mb="0" cb="2"/><line nr="81" mi="0" ci="3" mb="1" cb="1"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="2" cb="2"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="9" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="1" cb="1"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="2" cb="2"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="9" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="2" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="4" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="9" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="2" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="4" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="9" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="2" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="4" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="7" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="2" cb="0"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="5" ci="0" mb="4" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="7" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="7" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="6" ci="0" mb="2" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="10" ci="0" mb="0" cb="0"/><line nr="196" mi="0" ci="6" mb="1" cb="1"/><line nr="197" mi="5" ci="0" mb="0" cb="0"/><line nr="198" mi="0" ci="7" mb="0" cb="0"/><line nr="199" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="5" ci="0" mb="2" cb="0"/><line nr="208" mi="5" ci="0" mb="2" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="210" mi="6" ci="0" mb="0" cb="0"/><line nr="215" mi="4" ci="0" mb="0" cb="0"/><line nr="220" mi="3" ci="0" mb="2" cb="0"/><line nr="221" mi="7" ci="0" mb="0" cb="0"/><line nr="222" mi="5" ci="0" mb="0" cb="0"/><line nr="223" mi="5" ci="0" mb="0" cb="0"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><line nr="225" mi="5" ci="0" mb="0" cb="0"/><line nr="227" mi="16" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="232" covered="210"/><counter type="BRANCH" missed="44" covered="20"/><counter type="LINE" missed="45" covered="45"/><counter type="COMPLEXITY" missed="36" covered="28"/><counter type="METHOD" missed="8" covered="24"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PrimitivOBlocks.java"><line nr="93" mi="0" ci="55" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="7" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="10" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="8" mb="0" cb="2"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="10" mb="0" cb="2"/><line nr="184" mi="0" ci="12" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="0" ci="9" mb="0" cb="2"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="7" mb="0" cb="0"/><line nr="202" mi="0" ci="7" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="12" mb="0" cb="0"/><line nr="209" mi="0" ci="7" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="9" mb="0" cb="0"/><line nr="214" mi="0" ci="11" mb="0" cb="0"/><line nr="217" mi="0" ci="7" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="1" cb="1"/><line nr="228" mi="8" ci="0" mb="0" cb="0"/><line nr="229" mi="5" ci="0" mb="0" cb="0"/><line nr="231" mi="6" ci="0" mb="0" cb="0"/><line nr="233" mi="0" ci="5" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="240" mi="0" ci="8" mb="0" cb="0"/><line nr="241" mi="0" ci="7" mb="0" cb="0"/><line nr="242" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="5" mb="0" cb="0"/><line nr="255" mi="0" ci="15" mb="0" cb="0"/><line nr="259" mi="0" ci="10" mb="0" cb="0"/><line nr="263" mi="6" ci="0" mb="0" cb="0"/><line nr="267" mi="0" ci="9" mb="0" cb="0"/><line nr="271" mi="0" ci="7" mb="0" cb="0"/><line nr="279" mi="0" ci="6" mb="0" cb="0"/><line nr="280" mi="0" ci="5" mb="0" cb="0"/><line nr="281" mi="0" ci="3" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="3" mb="0" cb="0"/><line nr="285" mi="0" ci="3" mb="0" cb="0"/><line nr="286" mi="0" ci="4" mb="0" cb="0"/><line nr="287" mi="0" ci="1" mb="0" cb="0"/><line nr="290" mi="3" ci="0" mb="0" cb="0"/><line nr="295" mi="2" ci="0" mb="2" cb="0"/><line nr="296" mi="4" ci="0" mb="0" cb="0"/><line nr="298" mi="2" ci="0" mb="0" cb="0"/><line nr="299" mi="1" ci="0" mb="0" cb="0"/><line nr="305" mi="0" ci="4" mb="1" cb="1"/><line nr="306" mi="0" ci="4" mb="0" cb="0"/><line nr="307" mi="0" ci="5" mb="0" cb="0"/><line nr="309" mi="0" ci="1" mb="0" cb="0"/><line nr="312" mi="0" ci="4" mb="0" cb="0"/><line nr="313" mi="0" ci="1" mb="0" cb="0"/><line nr="319" mi="0" ci="3" mb="0" cb="0"/><line nr="321" mi="0" ci="3" mb="0" cb="0"/><line nr="322" mi="0" ci="7" mb="0" cb="0"/><line nr="323" mi="0" ci="7" mb="0" cb="0"/><line nr="325" mi="0" ci="5" mb="1" cb="3"/><line nr="326" mi="0" ci="4" mb="0" cb="0"/><line nr="327" mi="1" ci="0" mb="0" cb="0"/><line nr="328" mi="4" ci="0" mb="0" cb="0"/><line nr="330" mi="0" ci="2" mb="0" cb="0"/><line nr="332" mi="0" ci="1" mb="0" cb="0"/><line nr="333" mi="0" ci="1" mb="0" cb="0"/><line nr="336" mi="0" ci="5" mb="0" cb="0"/><line nr="337" mi="0" ci="9" mb="0" cb="2"/><line nr="338" mi="0" ci="1" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="0" cb="0"/><line nr="346" mi="0" ci="5" mb="0" cb="0"/><line nr="347" mi="0" ci="8" mb="0" cb="0"/><line nr="348" mi="0" ci="2" mb="0" cb="0"/><line nr="349" mi="0" ci="3" mb="0" cb="0"/><line nr="350" mi="1" ci="0" mb="0" cb="0"/><line nr="351" mi="4" ci="0" mb="0" cb="0"/><line nr="352" mi="0" ci="1" mb="0" cb="0"/><line nr="353" mi="0" ci="1" mb="0" cb="0"/><line nr="359" mi="4" ci="0" mb="2" cb="0"/><line nr="360" mi="2" ci="0" mb="0" cb="0"/><line nr="361" mi="5" ci="0" mb="0" cb="0"/><line nr="363" mi="5" ci="0" mb="0" cb="0"/><line nr="368" mi="0" ci="3" mb="0" cb="0"/><line nr="379" mi="0" ci="4" mb="0" cb="0"/><line nr="382" mi="0" ci="3" mb="0" cb="0"/><line nr="383" mi="0" ci="1" mb="0" cb="0"/><line nr="394" mi="0" ci="3" mb="0" cb="0"/><line nr="396" mi="0" ci="5" mb="0" cb="0"/><line nr="398" mi="0" ci="7" mb="0" cb="0"/><line nr="399" mi="0" ci="5" mb="0" cb="0"/><line nr="402" mi="0" ci="3" mb="1" cb="1"/><line nr="404" mi="4" ci="0" mb="0" cb="0"/><line nr="406" mi="2" ci="0" mb="0" cb="0"/><line nr="407" mi="1" ci="0" mb="0" cb="0"/><line nr="410" mi="0" ci="5" mb="0" cb="0"/><line nr="411" mi="0" ci="2" mb="0" cb="0"/><line nr="412" mi="0" ci="13" mb="0" cb="0"/><line nr="413" mi="0" ci="18" mb="0" cb="0"/><line nr="416" mi="0" ci="10" mb="0" cb="0"/><line nr="417" mi="0" ci="6" mb="0" cb="0"/><line nr="420" mi="0" ci="9" mb="0" cb="0"/><line nr="423" mi="0" ci="5" mb="1" cb="1"/><line nr="424" mi="22" ci="0" mb="0" cb="0"/><line nr="429" mi="0" ci="5" mb="0" cb="0"/><line nr="432" mi="0" ci="3" mb="0" cb="0"/><line nr="433" mi="0" ci="1" mb="0" cb="0"/><line nr="435" mi="0" ci="1" mb="0" cb="0"/><line nr="436" mi="0" ci="1" mb="0" cb="0"/><line nr="439" mi="1" ci="10" mb="2" cb="2"/><line nr="443" mi="0" ci="4" mb="1" cb="1"/><line nr="444" mi="5" ci="0" mb="0" cb="0"/><line nr="446" mi="0" ci="2" mb="0" cb="0"/><line nr="449" mi="0" ci="3" mb="0" cb="0"/><line nr="450" mi="0" ci="7" mb="0" cb="0"/><line nr="453" mi="0" ci="3" mb="0" cb="0"/><line nr="455" mi="0" ci="5" mb="0" cb="0"/><line nr="456" mi="0" ci="1" mb="0" cb="0"/><line nr="459" mi="0" ci="2" mb="0" cb="0"/><line nr="462" mi="0" ci="3" mb="0" cb="0"/><line nr="463" mi="0" ci="7" mb="0" cb="0"/><line nr="465" mi="0" ci="2" mb="0" cb="0"/><line nr="466" mi="0" ci="11" mb="0" cb="0"/><line nr="467" mi="0" ci="8" mb="0" cb="0"/><line nr="471" mi="0" ci="2" mb="0" cb="0"/><line nr="472" mi="0" ci="5" mb="0" cb="0"/><line nr="473" mi="0" ci="8" mb="0" cb="0"/><line nr="475" mi="0" ci="5" mb="0" cb="0"/><line nr="477" mi="1" ci="0" mb="0" cb="0"/><line nr="479" mi="4" ci="0" mb="0" cb="0"/><line nr="482" mi="4" ci="0" mb="0" cb="0"/><line nr="484" mi="2" ci="0" mb="0" cb="0"/><line nr="486" mi="0" ci="1" mb="0" cb="0"/><line nr="487" mi="0" ci="1" mb="0" cb="0"/><line nr="488" mi="0" ci="1" mb="0" cb="0"/><line nr="493" mi="0" ci="3" mb="1" cb="1"/><line nr="494" mi="1" ci="0" mb="0" cb="0"/><line nr="496" mi="0" ci="4" mb="0" cb="2"/><line nr="498" mi="0" ci="2" mb="0" cb="0"/><line nr="501" mi="0" ci="3" mb="0" cb="0"/><line nr="504" mi="0" ci="2" mb="0" cb="0"/><line nr="506" mi="0" ci="3" mb="0" cb="0"/><line nr="507" mi="0" ci="5" mb="0" cb="0"/><line nr="509" mi="0" ci="3" mb="0" cb="2"/><line nr="510" mi="0" ci="3" mb="0" cb="0"/><line nr="512" mi="1" ci="0" mb="0" cb="0"/><line nr="513" mi="5" ci="0" mb="0" cb="0"/><line nr="514" mi="0" ci="1" mb="0" cb="0"/><line nr="515" mi="0" ci="1" mb="0" cb="0"/><line nr="518" mi="3" ci="0" mb="0" cb="0"/><line nr="523" mi="0" ci="9" mb="0" cb="0"/><line nr="524" mi="0" ci="9" mb="0" cb="0"/><line nr="525" mi="0" ci="9" mb="0" cb="0"/><line nr="526" mi="0" ci="6" mb="0" cb="0"/><line nr="527" mi="0" ci="9" mb="0" cb="0"/><line nr="528" mi="0" ci="10" mb="0" cb="0"/><line nr="538" mi="0" ci="5" mb="0" cb="0"/><line nr="539" mi="0" ci="3" mb="0" cb="0"/><line nr="540" mi="0" ci="3" mb="0" cb="0"/><line nr="541" mi="0" ci="1" mb="0" cb="0"/><line nr="545" mi="4" ci="0" mb="0" cb="0"/><line nr="548" mi="5" ci="0" mb="0" cb="0"/><line nr="551" mi="4" ci="0" mb="0" cb="0"/><line nr="554" mi="3" ci="0" mb="0" cb="0"/><line nr="555" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="136" covered="771"/><counter type="BRANCH" missed="13" covered="23"/><counter type="LINE" missed="35" covered="155"/><counter type="COMPLEXITY" missed="17" covered="37"/><counter type="METHOD" missed="6" covered="30"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="PrimitivIHybrid.java"><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="7" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="9" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="6" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="9" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="15" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="3" mb="3" cb="1"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="0" ci="8" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="7" mb="1" cb="3"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="7" mb="1" cb="3"/><line nr="162" mi="0" ci="3" mb="1" cb="1"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="9" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="1" cb="3"/><line nr="174" mi="5" ci="0" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="1" cb="1"/><line nr="176" mi="5" ci="0" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="1" cb="1"/><line nr="178" mi="5" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="2" ci="5" mb="1" cb="1"/><line nr="186" mi="2" ci="5" mb="1" cb="1"/><line nr="190" mi="2" ci="10" mb="2" cb="2"/><line nr="194" mi="5" ci="0" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="5" mb="0" cb="0"/><line nr="206" mi="0" ci="16" mb="0" cb="0"/><line nr="210" mi="0" ci="7" mb="0" cb="0"/><line nr="215" mi="13" ci="0" mb="0" cb="0"/><line nr="219" mi="6" ci="0" mb="0" cb="0"/><line nr="222" mi="5" ci="0" mb="0" cb="0"/><line nr="223" mi="2" ci="0" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="7" mb="0" cb="0"/><line nr="236" mi="6" ci="0" mb="0" cb="0"/><line nr="240" mi="7" ci="0" mb="0" cb="0"/><line nr="245" mi="0" ci="4" mb="0" cb="0"/><line nr="246" mi="0" ci="12" mb="0" cb="0"/><line nr="247" mi="0" ci="8" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="8" mb="0" cb="0"/><line nr="261" mi="7" ci="0" mb="0" cb="0"/><line nr="266" mi="8" ci="0" mb="0" cb="0"/><line nr="271" mi="0" ci="4" mb="0" cb="0"/><line nr="272" mi="0" ci="12" mb="0" cb="0"/><line nr="273" mi="0" ci="10" mb="0" cb="0"/><line nr="274" mi="0" ci="5" mb="0" cb="0"/><line nr="275" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="1" cb="1"/><line nr="283" mi="1" ci="0" mb="0" cb="0"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="3" mb="0" cb="0"/><line nr="289" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="134" covered="298"/><counter type="BRANCH" missed="14" covered="18"/><counter type="LINE" missed="26" covered="62"/><counter type="COMPLEXITY" missed="24" covered="21"/><counter type="METHOD" missed="11" covered="18"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PrimitivIHeaderAction.java"/><sourcefile name="PrimitivIHeaderActions.java"><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="0" ci="7" mb="0" cb="0"/><line nr="22" mi="0" ci="7" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="5" mb="1" cb="1"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="2"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="5" mb="1" cb="1"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="1" ci="8" mb="1" cb="1"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="62"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="5" covered="12"/><counter type="COMPLEXITY" missed="9" covered="13"/><counter type="METHOD" missed="6" covered="12"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="PrimitivIBlocksStats.java"><line nr="34" mi="0" ci="9" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="1" cb="1"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="9" mb="0" cb="0"/><line nr="51" mi="0" ci="14" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="16" mb="0" cb="0"/><line nr="54" mi="0" ci="16" mb="0" cb="0"/><line nr="55" mi="0" ci="16" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="20" mb="0" cb="0"/><line nr="59" mi="0" ci="9" mb="0" cb="0"/><line nr="60" mi="0" ci="10" mb="0" cb="0"/><line nr="61" mi="0" ci="10" mb="0" cb="0"/><line nr="62" mi="0" ci="13" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="13" mb="0" cb="0"/><line nr="66" mi="0" ci="18" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="226"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PrimitivIOBlocksUtil.java"><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PrimitivOBlocksStats.java"><line nr="40" mi="0" ci="9" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="9" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="1" cb="1"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="13" mb="0" cb="0"/><line nr="63" mi="0" ci="14" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="16" mb="0" cb="0"/><line nr="66" mi="0" ci="16" mb="0" cb="0"/><line nr="67" mi="0" ci="16" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="15" mb="0" cb="0"/><line nr="71" mi="0" ci="29" mb="0" cb="0"/><line nr="72" mi="0" ci="9" mb="0" cb="0"/><line nr="73" mi="0" ci="10" mb="0" cb="0"/><line nr="74" mi="0" ci="10" mb="0" cb="0"/><line nr="75" mi="0" ci="13" mb="0" cb="0"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="13" mb="0" cb="0"/><line nr="79" mi="0" ci="18" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="275"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="32"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PrimitivIOBlocksStatsAbstract.java"><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="33"/><counter type="LINE" missed="4" covered="12"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PrimitivIBlocks.java"><line nr="54" mi="2" ci="6" mb="1" cb="1"/><line nr="78" mi="0" ci="90" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="4" ci="0" mb="0" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="147" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="4" ci="6" mb="2" cb="2"/><line nr="164" mi="0" ci="7" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="1" cb="1"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="6" mb="0" cb="0"/><line nr="177" mi="4" ci="8" mb="2" cb="2"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="185" mi="0" ci="7" mb="0" cb="0"/><line nr="186" mi="0" ci="6" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="8" mb="0" cb="0"/><line nr="193" mi="0" ci="7" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="1" cb="1"/><line nr="198" mi="5" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="8" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="7" mb="0" cb="2"/><line nr="206" mi="0" ci="7" mb="0" cb="0"/><line nr="209" mi="0" ci="7" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="7" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="6" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="11" mb="0" cb="0"/><line nr="242" mi="0" ci="6" mb="0" cb="0"/><line nr="247" mi="0" ci="12" mb="0" cb="0"/><line nr="252" mi="8" ci="0" mb="0" cb="0"/><line nr="257" mi="8" ci="0" mb="0" cb="0"/><line nr="263" mi="0" ci="11" mb="0" cb="0"/><line nr="270" mi="0" ci="9" mb="0" cb="0"/><line nr="273" mi="2" ci="6" mb="1" cb="1"/><line nr="284" mi="0" ci="6" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="0"/><line nr="299" mi="0" ci="5" mb="0" cb="0"/><line nr="300" mi="0" ci="3" mb="0" cb="0"/><line nr="301" mi="0" ci="3" mb="0" cb="0"/><line nr="305" mi="0" ci="5" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="0"/><line nr="307" mi="0" ci="3" mb="0" cb="0"/><line nr="308" mi="0" ci="3" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="4" mb="0" cb="0"/><line nr="311" mi="0" ci="2" mb="0" cb="0"/><line nr="312" mi="0" ci="2" mb="0" cb="0"/><line nr="313" mi="0" ci="1" mb="0" cb="0"/><line nr="316" mi="3" ci="0" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="0"/><line nr="322" mi="0" ci="3" mb="0" cb="0"/><line nr="323" mi="0" ci="7" mb="0" cb="0"/><line nr="325" mi="0" ci="5" mb="0" cb="0"/><line nr="326" mi="0" ci="3" mb="1" cb="1"/><line nr="327" mi="1" ci="0" mb="0" cb="0"/><line nr="329" mi="0" ci="3" mb="0" cb="0"/><line nr="330" mi="0" ci="1" mb="0" cb="0"/><line nr="331" mi="0" ci="1" mb="0" cb="0"/><line nr="334" mi="0" ci="3" mb="0" cb="0"/><line nr="336" mi="0" ci="3" mb="0" cb="0"/><line nr="337" mi="0" ci="7" mb="0" cb="0"/><line nr="341" mi="0" ci="5" mb="0" cb="0"/><line nr="342" mi="0" ci="5" mb="0" cb="0"/><line nr="344" mi="0" ci="5" mb="0" cb="0"/><line nr="346" mi="0" ci="6" mb="0" cb="0"/><line nr="349" mi="0" ci="3" mb="0" cb="2"/><line nr="350" mi="0" ci="3" mb="0" cb="0"/><line nr="351" mi="0" ci="3" mb="0" cb="0"/><line nr="352" mi="0" ci="2" mb="0" cb="0"/><line nr="353" mi="0" ci="5" mb="0" cb="0"/><line nr="354" mi="0" ci="1" mb="0" cb="0"/><line nr="357" mi="0" ci="8" mb="0" cb="0"/><line nr="358" mi="0" ci="5" mb="0" cb="0"/><line nr="362" mi="0" ci="3" mb="1" cb="1"/><line nr="363" mi="3" ci="0" mb="0" cb="0"/><line nr="364" mi="3" ci="0" mb="0" cb="0"/><line nr="365" mi="2" ci="0" mb="0" cb="0"/><line nr="366" mi="4" ci="0" mb="0" cb="0"/><line nr="367" mi="1" ci="0" mb="0" cb="0"/><line nr="370" mi="0" ci="4" mb="0" cb="0"/><line nr="371" mi="0" ci="3" mb="0" cb="0"/><line nr="372" mi="0" ci="4" mb="0" cb="2"/><line nr="374" mi="0" ci="3" mb="0" cb="0"/><line nr="377" mi="0" ci="4" mb="0" cb="0"/><line nr="379" mi="0" ci="4" mb="0" cb="0"/><line nr="381" mi="0" ci="1" mb="0" cb="0"/><line nr="382" mi="0" ci="1" mb="0" cb="0"/><line nr="383" mi="0" ci="1" mb="0" cb="0"/><line nr="399" mi="0" ci="3" mb="0" cb="0"/><line nr="400" mi="0" ci="3" mb="0" cb="0"/><line nr="402" mi="0" ci="5" mb="0" cb="0"/><line nr="403" mi="0" ci="2" mb="0" cb="0"/><line nr="405" mi="0" ci="33" mb="0" cb="0"/><line nr="410" mi="0" ci="10" mb="0" cb="0"/><line nr="411" mi="0" ci="6" mb="0" cb="0"/><line nr="413" mi="0" ci="4" mb="1" cb="1"/><line nr="414" mi="1" ci="0" mb="0" cb="0"/><line nr="417" mi="0" ci="4" mb="1" cb="1"/><line nr="418" mi="8" ci="0" mb="0" cb="0"/><line nr="419" mi="1" ci="0" mb="0" cb="0"/><line nr="422" mi="0" ci="10" mb="0" cb="0"/><line nr="424" mi="0" ci="5" mb="0" cb="0"/><line nr="425" mi="1" ci="0" mb="0" cb="0"/><line nr="426" mi="5" ci="0" mb="0" cb="0"/><line nr="429" mi="0" ci="3" mb="0" cb="0"/><line nr="431" mi="0" ci="5" mb="0" cb="0"/><line nr="433" mi="0" ci="1" mb="0" cb="0"/><line nr="435" mi="0" ci="1" mb="0" cb="0"/><line nr="453" mi="0" ci="7" mb="0" cb="0"/><line nr="454" mi="0" ci="3" mb="0" cb="0"/><line nr="456" mi="0" ci="5" mb="0" cb="0"/><line nr="457" mi="0" ci="2" mb="0" cb="0"/><line nr="459" mi="0" ci="33" mb="0" cb="0"/><line nr="466" mi="0" ci="10" mb="0" cb="0"/><line nr="467" mi="0" ci="6" mb="0" cb="0"/><line nr="470" mi="0" ci="2" mb="0" cb="0"/><line nr="472" mi="0" ci="4" mb="1" cb="1"/><line nr="473" mi="1" ci="0" mb="0" cb="0"/><line nr="476" mi="0" ci="6" mb="1" cb="1"/><line nr="477" mi="8" ci="0" mb="0" cb="0"/><line nr="478" mi="1" ci="0" mb="0" cb="0"/><line nr="482" mi="0" ci="12" mb="0" cb="0"/><line nr="486" mi="0" ci="4" mb="0" cb="0"/><line nr="489" mi="0" ci="3" mb="0" cb="0"/><line nr="492" mi="0" ci="12" mb="0" cb="0"/><line nr="495" mi="0" ci="9" mb="0" cb="0"/><line nr="496" mi="1" ci="0" mb="0" cb="0"/><line nr="497" mi="5" ci="0" mb="0" cb="0"/><line nr="500" mi="0" ci="3" mb="0" cb="0"/><line nr="503" mi="0" ci="5" mb="0" cb="0"/><line nr="506" mi="0" ci="4" mb="0" cb="0"/><line nr="508" mi="0" ci="1" mb="0" cb="0"/><line nr="510" mi="0" ci="1" mb="0" cb="0"/><line nr="513" mi="0" ci="6" mb="0" cb="2"/><line nr="514" mi="0" ci="3" mb="0" cb="0"/><line nr="515" mi="0" ci="1" mb="0" cb="0"/><line nr="518" mi="4" ci="5" mb="2" cb="2"/><line nr="519" mi="0" ci="4" mb="0" cb="0"/><line nr="520" mi="0" ci="4" mb="0" cb="2"/><line nr="521" mi="0" ci="3" mb="0" cb="0"/><line nr="522" mi="0" ci="1" mb="0" cb="0"/><line nr="525" mi="0" ci="14" mb="2" cb="4"/><line nr="536" mi="0" ci="3" mb="0" cb="0"/><line nr="539" mi="0" ci="5" mb="0" cb="0"/><line nr="540" mi="0" ci="2" mb="0" cb="0"/><line nr="546" mi="0" ci="3" mb="0" cb="0"/><line nr="548" mi="0" ci="3" mb="0" cb="0"/><line nr="549" mi="0" ci="3" mb="0" cb="2"/><line nr="550" mi="0" ci="3" mb="0" cb="0"/><line nr="552" mi="0" ci="3" mb="0" cb="0"/><line nr="555" mi="0" ci="5" mb="0" cb="2"/><line nr="556" mi="0" ci="8" mb="0" cb="0"/><line nr="558" mi="0" ci="3" mb="0" cb="2"/><line nr="559" mi="0" ci="5" mb="0" cb="0"/><line nr="560" mi="0" ci="3" mb="1" cb="1"/><line nr="561" mi="3" ci="0" mb="0" cb="0"/><line nr="562" mi="0" ci="3" mb="1" cb="1"/><line nr="563" mi="7" ci="0" mb="0" cb="0"/><line nr="564" mi="3" ci="0" mb="0" cb="0"/><line nr="565" mi="0" ci="5" mb="1" cb="1"/><line nr="566" mi="0" ci="11" mb="0" cb="0"/><line nr="568" mi="12" ci="0" mb="0" cb="0"/><line nr="569" mi="0" ci="1" mb="0" cb="0"/><line nr="570" mi="0" ci="6" mb="0" cb="0"/><line nr="572" mi="1" ci="0" mb="0" cb="0"/><line nr="573" mi="4" ci="0" mb="0" cb="0"/><line nr="576" mi="3" ci="0" mb="0" cb="0"/><line nr="577" mi="0" ci="1" mb="0" cb="0"/><line nr="578" mi="0" ci="1" mb="0" cb="0"/><line nr="583" mi="0" ci="3" mb="0" cb="2"/><line nr="584" mi="0" ci="2" mb="0" cb="0"/><line nr="586" mi="0" ci="3" mb="0" cb="2"/><line nr="587" mi="0" ci="2" mb="0" cb="0"/><line nr="588" mi="0" ci="1" mb="0" cb="0"/><line nr="591" mi="0" ci="5" mb="0" cb="0"/><line nr="592" mi="0" ci="2" mb="0" cb="2"/><line nr="593" mi="0" ci="2" mb="0" cb="0"/><line nr="594" mi="0" ci="1" mb="0" cb="0"/><line nr="596" mi="0" ci="2" mb="0" cb="0"/><line nr="602" mi="0" ci="3" mb="0" cb="2"/><line nr="603" mi="0" ci="1" mb="0" cb="0"/><line nr="605" mi="0" ci="3" mb="0" cb="0"/><line nr="607" mi="0" ci="5" mb="0" cb="0"/><line nr="610" mi="0" ci="5" mb="0" cb="0"/><line nr="611" mi="0" ci="2" mb="1" cb="1"/><line nr="613" mi="0" ci="3" mb="0" cb="0"/><line nr="614" mi="1" ci="0" mb="0" cb="0"/><line nr="615" mi="5" ci="0" mb="0" cb="0"/><line nr="616" mi="0" ci="1" mb="0" cb="0"/><line nr="619" mi="0" ci="3" mb="0" cb="2"/><line nr="620" mi="0" ci="3" mb="0" cb="0"/><line nr="621" mi="1" ci="0" mb="0" cb="0"/><line nr="622" mi="5" ci="0" mb="0" cb="0"/><line nr="623" mi="0" ci="1" mb="0" cb="0"/><line nr="625" mi="0" ci="3" mb="0" cb="0"/><line nr="626" mi="0" ci="1" mb="0" cb="0"/><line nr="629" mi="3" ci="0" mb="0" cb="0"/><line nr="641" mi="0" ci="5" mb="0" cb="0"/><line nr="642" mi="0" ci="3" mb="0" cb="0"/><line nr="643" mi="0" ci="3" mb="0" cb="0"/><line nr="644" mi="0" ci="3" mb="0" cb="0"/><line nr="645" mi="0" ci="1" mb="0" cb="0"/><line nr="649" mi="4" ci="0" mb="0" cb="0"/><line nr="652" mi="5" ci="0" mb="0" cb="0"/><line nr="656" mi="4" ci="0" mb="0" cb="0"/><line nr="659" mi="3" ci="0" mb="0" cb="0"/><line nr="660" mi="7" ci="0" mb="2" cb="0"/><line nr="661" mi="1" ci="0" mb="0" cb="0"/><line nr="664" mi="0" ci="2" mb="0" cb="0"/><line nr="665" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="202" covered="976"/><counter type="BRANCH" missed="24" covered="50"/><counter type="LINE" missed="51" covered="207"/><counter type="COMPLEXITY" missed="29" covered="46"/><counter type="METHOD" missed="6" covered="32"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="PrimitivIOBlocksAbstract.java"><line nr="36" mi="0" ci="15" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="1" cb="1"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="2" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="1" cb="1"/><line nr="88" mi="4" ci="0" mb="2" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="6" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="0"/><line nr="102" mi="0" ci="7" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="1" cb="1"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="2" ci="6" mb="1" cb="1"/><line nr="127" mi="5" ci="5" mb="3" cb="1"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="14" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="7" ci="0" mb="4" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><line nr="138" mi="4" ci="0" mb="0" cb="0"/><line nr="139" mi="12" ci="0" mb="0" cb="0"/><line nr="140" mi="4" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="9" ci="0" mb="2" cb="0"/><line nr="143" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="1" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="110" covered="96"/><counter type="BRANCH" missed="17" covered="5"/><counter type="LINE" missed="27" covered="26"/><counter type="COMPLEXITY" missed="14" covered="6"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="PrimitivOHybrid.java"><line nr="52" mi="2" ci="6" mb="1" cb="1"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="27" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="2" ci="3" mb="3" cb="1"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="1" cb="3"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="1" cb="3"/><line nr="95" mi="0" ci="3" mb="1" cb="1"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="14" mb="2" cb="2"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="1" cb="1"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="1" cb="1"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="2" cb="0"/><line nr="115" mi="7" ci="0" mb="0" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="6" ci="0" mb="4" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="7" ci="0" mb="2" cb="0"/><line nr="131" mi="7" ci="0" mb="2" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="16" mb="0" cb="0"/><line nr="158" mi="0" ci="7" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="11" mb="0" cb="0"/><line nr="172" mi="0" ci="9" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="1" cb="1"/><line nr="178" mi="1" ci="0" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="85" covered="190"/><counter type="BRANCH" missed="22" covered="14"/><counter type="LINE" missed="17" covered="38"/><counter type="COMPLEXITY" missed="22" covered="12"/><counter type="METHOD" missed="6" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="935" covered="3157"/><counter type="BRANCH" missed="139" covered="137"/><counter type="LINE" missed="213" covered="624"/><counter type="COMPLEXITY" missed="158" covered="177"/><counter type="METHOD" missed="51" covered="146"/><counter type="CLASS" missed="1" covered="23"/></package><package name="com/milaboratory/core/io/util"><class name="com/milaboratory/core/io/util/IOUtil" sourcefilename="IOUtil.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readRawVarint32" desc="(Ljava/io/InputStream;I)I" line="35"><counter type="INSTRUCTION" missed="10" covered="33"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readRawVarint64" desc="(Ljava/io/InputStream;J)J" line="59"><counter type="INSTRUCTION" missed="10" covered="34"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeRawVarint32" desc="(Ljava/io/OutputStream;I)V" line="86"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeRawVarint32Size" desc="(I)I" line="103"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeRawVarint64" desc="(Ljava/io/OutputStream;J)V" line="117"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeRawVarint64Size" desc="(J)I" line="133"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeZigZag32" desc="(I)I" line="157"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encodeZigZag64" desc="(J)J" line="172"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decodeZigZag32" desc="(I)I" line="186"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decodeZigZag64" desc="(J)J" line="200"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="123" covered="145"/><counter type="BRANCH" missed="30" covered="16"/><counter type="LINE" missed="20" covered="36"/><counter type="COMPLEXITY" missed="20" covered="14"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/util/FileIndexBuilder" sourcefilename="FileIndexBuilder.java"><method name="&lt;init&gt;" desc="(J)V" line="34"><counter type="INSTRUCTION" missed="5" covered="37"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStartingRecordPosition" desc="(J)Lcom/milaboratory/core/io/util/FileIndexBuilder;" line="81"><counter type="INSTRUCTION" missed="15" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStartingRecordNumber" desc="(J)Lcom/milaboratory/core/io/util/FileIndexBuilder;" line="95"><counter type="INSTRUCTION" missed="15" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putMetadata" desc="(Ljava/lang/String;Ljava/lang/String;)Lcom/milaboratory/core/io/util/FileIndexBuilder;" line="110"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendNextRecord" desc="(J)Lcom/milaboratory/core/io/util/FileIndexBuilder;" line="122"><counter type="INSTRUCTION" missed="5" covered="38"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastAccessibleRecordNumber" desc="()J" line="140"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAndDestroy" desc="()Lcom/milaboratory/core/io/util/FileIndex;" line="149"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkIfDestroyed" desc="()V" line="155"><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="45" covered="151"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="5" covered="36"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/util/AbstractRandomAccessReader" sourcefilename="AbstractRandomAccessReader.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/io/util/FileIndex;Ljava/io/RandomAccessFile;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCurrentRecordNumber" desc="()J" line="53"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="seekToRecord" desc="(J)V" line="63"><counter type="INSTRUCTION" missed="0" covered="109"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="take" desc="(J)Ljava/lang/Object;" line="103"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="take" desc="()Ljava/lang/Object;" line="117"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="seek0" desc="(J)V" line="124"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetBufferOnSeek" desc="()V" line="129"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skip" desc="()V" line="132"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="146"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="5" covered="37"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/io/util/FileIndex" sourcefilename="FileIndex.java"><method name="&lt;init&gt;" desc="(JLjava/util/Map;Lgnu/trove/list/array/TLongArrayList;JJ)V" line="56"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStep" desc="()J" line="70"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStartingRecordNumber" desc="()J" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLastRecordNumber" desc="()J" line="88"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetadata" desc="(Ljava/lang/String;)Ljava/lang/String;" line="98"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNearestPosition" desc="(J)J" line="108"><counter type="INSTRUCTION" missed="4" covered="22"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNearestRecordNumber" desc="(J)J" line="120"><counter type="INSTRUCTION" missed="4" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/String;)V" line="132"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/io/File;)V" line="142"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/io/OutputStream;)V" line="153"><counter type="INSTRUCTION" missed="0" covered="101"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/lang/String;)Lcom/milaboratory/core/io/util/FileIndex;" line="209"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Ljava/io/File;)Lcom/milaboratory/core/io/util/FileIndex;" line="220"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/io/InputStream;)Lcom/milaboratory/core/io/util/FileIndex;" line="232"><counter type="INSTRUCTION" missed="10" covered="107"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="26"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="300"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="7" covered="66"/><counter type="COMPLEXITY" missed="8" covered="15"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FileIndex.java"><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="10" mb="2" cb="2"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="12" mb="0" cb="0"/><line nr="120" mi="0" ci="10" mb="2" cb="2"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="14" mb="0" cb="0"/><line nr="132" mi="6" ci="0" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="6" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="12" mb="0" cb="2"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="9" mb="0" cb="2"/><line nr="181" mi="0" ci="10" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="1" mb="0" cb="0"/><line nr="209" mi="6" ci="0" mb="0" cb="0"/><line nr="220" mi="0" ci="6" mb="0" cb="0"/><line nr="232" mi="0" ci="5" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="1" cb="1"/><line nr="237" mi="5" ci="0" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="247" mi="0" ci="8" mb="0" cb="0"/><line nr="248" mi="0" ci="5" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="253" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="2"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="3" mb="0" cb="0"/><line nr="264" mi="0" ci="6" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="5" mb="0" cb="0"/><line nr="274" mi="0" ci="2" mb="0" cb="0"/><line nr="275" mi="0" ci="7" mb="0" cb="2"/><line nr="276" mi="0" ci="4" mb="0" cb="0"/><line nr="277" mi="0" ci="4" mb="1" cb="1"/><line nr="278" mi="5" ci="0" mb="0" cb="0"/><line nr="279" mi="0" ci="4" mb="0" cb="0"/><line nr="280" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="300"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="7" covered="66"/><counter type="COMPLEXITY" missed="8" covered="15"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IOUtil.java"><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="1" cb="1"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="2"/><line nr="41" mi="0" ci="2" mb="1" cb="1"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="2"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="1" cb="1"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="2"/><line nr="65" mi="0" ci="2" mb="1" cb="1"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="9" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="2"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="2"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="2" cb="0"/><line nr="104" mi="6" ci="0" mb="2" cb="0"/><line nr="105" mi="6" ci="0" mb="2" cb="0"/><line nr="106" mi="6" ci="0" mb="2" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="2"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="8" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="8" ci="0" mb="2" cb="0"/><line nr="134" mi="8" ci="0" mb="2" cb="0"/><line nr="135" mi="8" ci="0" mb="2" cb="0"/><line nr="136" mi="8" ci="0" mb="2" cb="0"/><line nr="137" mi="8" ci="0" mb="2" cb="0"/><line nr="138" mi="8" ci="0" mb="2" cb="0"/><line nr="139" mi="8" ci="0" mb="2" cb="0"/><line nr="140" mi="8" ci="0" mb="2" cb="0"/><line nr="141" mi="8" ci="0" mb="2" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="8" mb="0" cb="0"/><line nr="172" mi="0" ci="8" mb="0" cb="0"/><line nr="186" mi="0" ci="9" mb="0" cb="0"/><line nr="200" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="123" covered="145"/><counter type="BRANCH" missed="30" covered="16"/><counter type="LINE" missed="20" covered="36"/><counter type="COMPLEXITY" missed="20" covered="14"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FileIndexBuilder.java"><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="1" cb="1"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="1" cb="1"/><line nr="83" mi="15" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="9" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="1" cb="1"/><line nr="97" mi="15" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="1" cb="1"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="2"/><line nr="126" mi="0" ci="9" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="13" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="14" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="1" cb="1"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="151"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="5" covered="36"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractRandomAccessReader.java"><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="2"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="2"/><line nr="67" mi="0" ci="5" mb="0" cb="2"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="2"/><line nr="74" mi="0" ci="5" mb="0" cb="2"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="14" mb="0" cb="4"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="9" mb="0" cb="2"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="2"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="2" cb="0"/><line nr="119" mi="6" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="146"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="5" covered="37"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="215" covered="742"/><counter type="BRANCH" missed="43" covered="55"/><counter type="LINE" missed="37" covered="175"/><counter type="COMPLEXITY" missed="36" covered="53"/><counter type="METHOD" missed="7" covered="33"/><counter type="CLASS" missed="0" covered="4"/></package><package name="com/milaboratory/core"><class name="com/milaboratory/core/PairedEndReadsLayout" sourcefilename="PairedEndReadsLayout.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILcom/milaboratory/core/PairedEndReadsLayout$PairedTargetProvider;Lcom/milaboratory/core/PairedEndReadsLayout$SingleTargetProvider;[Z)V" line="103"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTargets" desc="(Lcom/milaboratory/core/io/sequence/PairedRead;)[Lcom/milaboratory/core/Target;" line="110"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTargets" desc="(Lcom/milaboratory/core/io/sequence/SingleRead;)[Lcom/milaboratory/core/Target;" line="114"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createTargets" desc="(Lcom/milaboratory/core/io/sequence/SequenceRead;)[Lcom/milaboratory/core/Target;" line="118"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPossibleRelativeStrands" desc="()[Z" line="131"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="288"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="310"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="14"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/PairedEndReadsLayout$SingleTargetProvider" sourcefilename="PairedEndReadsLayout.java"><method name="&lt;init&gt;" desc="([Z)V" line="137"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTargets" desc="(Lcom/milaboratory/core/io/sequence/SingleRead;)[Lcom/milaboratory/core/Target;" line="142"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="6"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/Target" sourcefilename="Target.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/NSequenceWithQuality;Z)V" line="32"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/NSequenceWithQuality;Lcom/milaboratory/core/sequence/NSequenceWithQuality;[B)V" line="37"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberOfParts" desc="()I" line="46"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReadIdOfTarget" desc="(I)I" line="54"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRCStateOfTarget" desc="(I)Z" line="64"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFullSourceId" desc="(I)B" line="68"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="44" covered="33"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="6"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="5" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/Range" sourcefilename="Range.java"><method name="&lt;init&gt;" desc="(IIZ)V" line="46"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(II)V" line="57"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expand" desc="(I)Lcom/milaboratory/core/Range;" line="68"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expand" desc="(II)Lcom/milaboratory/core/Range;" line="72"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="81"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="length" desc="()I" line="90"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReverse" desc="()Z" line="99"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sig" desc="()I" line="108"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setUpper" desc="(I)Lcom/milaboratory/core/Range;" line="118"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLower" desc="(I)Lcom/milaboratory/core/Range;" line="128"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverse" desc="()Lcom/milaboratory/core/Range;" line="137"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasSameDirection" desc="(Lcom/milaboratory/core/Range;)Z" line="147"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFrom" desc="()I" line="158"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTo" desc="()I" line="169"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUpper" desc="()I" line="178"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLower" desc="()I" line="187"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inverse" desc="()Lcom/milaboratory/core/Range;" line="196"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(I)Z" line="206"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsBoundary" desc="(I)Z" line="210"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lcom/milaboratory/core/Range;)Z" line="220"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersectsWith" desc="(Lcom/milaboratory/core/Range;)Z" line="230"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersectsWithOrTouches" desc="(Lcom/milaboratory/core/Range;)Z" line="242"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersection" desc="(Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/Range;" line="254"><counter type="INSTRUCTION" missed="5" covered="24"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersectionWithTouch" desc="(Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/Range;" line="267"><counter type="INSTRUCTION" missed="7" covered="22"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryMerge" desc="(Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/Range;" line="280"><counter type="INSTRUCTION" missed="5" covered="24"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="move" desc="(I)Lcom/milaboratory/core/Range;" line="293"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertPointToRelativePosition" desc="(I)I" line="305"><counter type="INSTRUCTION" missed="14" covered="23"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertBoundaryToRelativePosition" desc="(I)I" line="321"><counter type="INSTRUCTION" missed="18" covered="21"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="without" desc="(Lcom/milaboratory/core/Range;)Ljava/util/List;" line="339"><counter type="INSTRUCTION" missed="3" covered="71"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRelativeRangeOf" desc="(Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/Range;" line="352"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertBoundariesToRelativePosition" desc="([I)[I" line="360"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertPointsToRelativePosition" desc="([I)[I" line="369"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertPointToAbsolutePosition" desc="(I)I" line="384"><counter type="INSTRUCTION" missed="14" covered="21"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertBoundaryToAbsolutePosition" desc="(I)I" line="400"><counter type="INSTRUCTION" missed="14" covered="19"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAbsoluteRangeFor" desc="(Lcom/milaboratory/core/Range;)Lcom/milaboratory/core/Range;" line="418"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareTo" desc="(Lcom/milaboratory/core/Range;)I" line="426"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="437"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="442"><counter type="INSTRUCTION" missed="5" covered="31"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="452"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="458"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="260" covered="537"/><counter type="BRANCH" missed="51" covered="89"/><counter type="LINE" missed="32" covered="73"/><counter type="COMPLEXITY" missed="49" covered="61"/><counter type="METHOD" missed="11" covered="29"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/PairedEndReadsLayout$PairedTargetProvider" sourcefilename="PairedEndReadsLayout.java"><method name="&lt;init&gt;" desc="([I)V" line="155"><counter type="INSTRUCTION" missed="4" covered="53"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTargets" desc="(Lcom/milaboratory/core/io/sequence/PairedRead;)[Lcom/milaboratory/core/Target;" line="164"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dataFromId" desc="(Lcom/milaboratory/core/io/sequence/PairedRead;B)Lcom/milaboratory/core/sequence/NSequenceWithQuality;" line="174"><counter type="INSTRUCTION" missed="4" covered="20"/><counter type="BRANCH" missed="1" covered="4"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="152"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="119"/><counter type="BRANCH" missed="4" covered="11"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/Range$1" sourcefilename="Range.java"><method name="&lt;init&gt;" desc="()V" line="458"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lcom/milaboratory/core/Range;Lcom/milaboratory/core/Range;)I" line="461"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Range.java"><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="1" cb="1"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="10" mb="0" cb="4"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="14" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="9" mb="0" cb="2"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="7" ci="0" mb="2" cb="0"/><line nr="118" mi="9" ci="0" mb="0" cb="0"/><line nr="128" mi="9" ci="0" mb="0" cb="0"/><line nr="137" mi="1" ci="13" mb="1" cb="1"/><line nr="147" mi="15" ci="0" mb="6" cb="0"/><line nr="158" mi="0" ci="9" mb="0" cb="2"/><line nr="169" mi="0" ci="9" mb="0" cb="2"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="14" ci="0" mb="2" cb="0"/><line nr="206" mi="0" ci="12" mb="0" cb="4"/><line nr="210" mi="0" ci="12" mb="0" cb="4"/><line nr="220" mi="0" ci="14" mb="0" cb="4"/><line nr="230" mi="0" ci="10" mb="0" cb="4"/><line nr="231" mi="0" ci="20" mb="1" cb="7"/><line nr="242" mi="0" ci="36" mb="0" cb="12"/><line nr="254" mi="0" ci="4" mb="0" cb="2"/><line nr="255" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="5" ci="18" mb="3" cb="1"/><line nr="267" mi="0" ci="4" mb="1" cb="1"/><line nr="268" mi="2" ci="0" mb="0" cb="0"/><line nr="270" mi="5" ci="18" mb="3" cb="1"/><line nr="280" mi="0" ci="4" mb="0" cb="2"/><line nr="281" mi="0" ci="2" mb="0" cb="0"/><line nr="283" mi="5" ci="18" mb="3" cb="1"/><line nr="293" mi="0" ci="2" mb="0" cb="2"/><line nr="294" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="14" mb="0" cb="0"/><line nr="305" mi="0" ci="8" mb="2" cb="2"/><line nr="306" mi="14" ci="0" mb="0" cb="0"/><line nr="308" mi="0" ci="3" mb="0" cb="2"/><line nr="309" mi="0" ci="7" mb="0" cb="0"/><line nr="311" mi="0" ci="5" mb="0" cb="0"/><line nr="321" mi="0" ci="8" mb="2" cb="2"/><line nr="322" mi="18" ci="0" mb="0" cb="0"/><line nr="324" mi="0" ci="3" mb="0" cb="2"/><line nr="325" mi="0" ci="5" mb="0" cb="0"/><line nr="327" mi="0" ci="5" mb="0" cb="0"/><line nr="339" mi="0" ci="4" mb="1" cb="1"/><line nr="340" mi="3" ci="0" mb="0" cb="0"/><line nr="342" mi="0" ci="5" mb="0" cb="2"/><line nr="343" mi="0" ci="18" mb="0" cb="2"/><line nr="345" mi="0" ci="5" mb="0" cb="2"/><line nr="346" mi="0" ci="11" mb="0" cb="0"/><line nr="348" mi="0" ci="28" mb="0" cb="0"/><line nr="352" mi="0" ci="5" mb="0" cb="0"/><line nr="353" mi="0" ci="5" mb="0" cb="0"/><line nr="354" mi="0" ci="6" mb="2" cb="2"/><line nr="355" mi="2" ci="0" mb="0" cb="0"/><line nr="356" mi="0" ci="6" mb="0" cb="0"/><line nr="360" mi="4" ci="0" mb="0" cb="0"/><line nr="362" mi="8" ci="0" mb="2" cb="0"/><line nr="363" mi="8" ci="0" mb="0" cb="0"/><line nr="365" mi="2" ci="0" mb="0" cb="0"/><line nr="369" mi="4" ci="0" mb="0" cb="0"/><line nr="371" mi="8" ci="0" mb="2" cb="0"/><line nr="372" mi="8" ci="0" mb="0" cb="0"/><line nr="374" mi="2" ci="0" mb="0" cb="0"/><line nr="384" mi="0" ci="6" mb="2" cb="2"/><line nr="385" mi="14" ci="0" mb="0" cb="0"/><line nr="387" mi="0" ci="3" mb="0" cb="2"/><line nr="388" mi="0" ci="7" mb="0" cb="0"/><line nr="390" mi="0" ci="5" mb="0" cb="0"/><line nr="400" mi="0" ci="6" mb="2" cb="2"/><line nr="401" mi="14" ci="0" mb="0" cb="0"/><line nr="403" mi="0" ci="3" mb="0" cb="2"/><line nr="404" mi="0" ci="5" mb="0" cb="0"/><line nr="406" mi="0" ci="5" mb="0" cb="0"/><line nr="418" mi="0" ci="5" mb="0" cb="0"/><line nr="419" mi="0" ci="5" mb="0" cb="0"/><line nr="420" mi="0" ci="6" mb="0" cb="0"/><line nr="426" mi="8" ci="0" mb="2" cb="0"/><line nr="427" mi="2" ci="0" mb="0" cb="0"/><line nr="429" mi="8" ci="0" mb="2" cb="0"/><line nr="430" mi="2" ci="0" mb="0" cb="0"/><line nr="432" mi="6" ci="0" mb="0" cb="0"/><line nr="437" mi="2" ci="20" mb="1" cb="1"/><line nr="442" mi="2" ci="3" mb="1" cb="1"/><line nr="443" mi="2" ci="7" mb="2" cb="2"/><line nr="445" mi="0" ci="3" mb="0" cb="0"/><line nr="447" mi="1" ci="18" mb="3" cb="3"/><line nr="452" mi="3" ci="0" mb="0" cb="0"/><line nr="453" mi="7" ci="0" mb="0" cb="0"/><line nr="454" mi="11" ci="0" mb="2" cb="0"/><line nr="455" mi="2" ci="0" mb="0" cb="0"/><line nr="458" mi="0" ci="8" mb="0" cb="0"/><line nr="461" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="266" covered="540"/><counter type="BRANCH" missed="51" covered="89"/><counter type="LINE" missed="33" covered="73"/><counter type="COMPLEXITY" missed="50" covered="62"/><counter type="METHOD" missed="12" covered="30"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="PairedEndReadsLayout.java"><line nr="23" mi="0" ci="28" mb="0" cb="0"/><line nr="28" mi="0" ci="34" mb="0" cb="0"/><line nr="36" mi="0" ci="34" mb="0" cb="0"/><line nr="47" mi="0" ci="46" mb="0" cb="0"/><line nr="59" mi="0" ci="46" mb="0" cb="0"/><line nr="68" mi="0" ci="34" mb="0" cb="0"/><line nr="85" mi="0" ci="66" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="2" cb="0"/><line nr="119" mi="6" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="2" cb="0"/><line nr="121" mi="6" ci="0" mb="0" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="17" ci="0" mb="2" cb="0"/><line nr="145" mi="8" ci="0" mb="2" cb="0"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="147" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="6" mb="1" cb="1"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="4" ci="7" mb="2" cb="2"/><line nr="157" mi="0" ci="7" mb="0" cb="0"/><line nr="158" mi="0" ci="10" mb="0" cb="2"/><line nr="159" mi="0" ci="26" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="9" mb="0" cb="2"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="15" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="1" cb="4"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="80" covered="435"/><counter type="BRANCH" missed="12" covered="11"/><counter type="LINE" missed="14" covered="35"/><counter type="COMPLEXITY" missed="11" covered="14"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Target.java"><line nr="21" mi="0" ci="7" mb="0" cb="0"/><line nr="22" mi="0" ci="8" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="8" ci="0" mb="0" cb="0"/><line nr="34" mi="7" ci="0" mb="2" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="12" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="8" ci="0" mb="0" cb="0"/><line nr="64" mi="9" ci="0" mb="2" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="44" covered="33"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="6"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="5" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="390" covered="1008"/><counter type="BRANCH" missed="67" covered="100"/><counter type="LINE" missed="55" covered="114"/><counter type="COMPLEXITY" missed="68" covered="78"/><counter type="METHOD" missed="20" covered="41"/><counter type="CLASS" missed="0" covered="6"/></package><package name="com/milaboratory/core/tree"><class name="com/milaboratory/core/tree/BranchingEnumerator" sourcefilename="BranchingEnumerator.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/tree/MutationGuide;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="(BZ)V" line="47"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="(ILcom/milaboratory/core/tree/SequenceTreeMap$Node;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="move1" desc="()V" line="68"><counter type="INSTRUCTION" missed="1" covered="30"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkIterationEnd" desc="()V" line="80"><counter type="INSTRUCTION" missed="10" covered="35"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/milaboratory/core/tree/SequenceTreeMap$Node;" line="99"><counter type="INSTRUCTION" missed="2" covered="239"/><counter type="BRANCH" missed="1" covered="45"/><counter type="LINE" missed="1" covered="36"/><counter type="COMPLEXITY" missed="1" covered="24"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextPositionAfterBranching" desc="()I" line="169"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPosition" desc="()I" line="181"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="359"/><counter type="BRANCH" missed="6" covered="62"/><counter type="LINE" missed="6" covered="70"/><counter type="COMPLEXITY" missed="6" covered="39"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/tree/TreeSearchParameters$Serializer" sourcefilename="TreeSearchParameters.java"><method name="&lt;init&gt;" desc="()V" line="310"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serialize" desc="(Lcom/milaboratory/core/tree/TreeSearchParameters;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V" line="313"><counter type="INSTRUCTION" missed="8" covered="101"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="104"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/tree/TreeSearchParameters$Deserializer" sourcefilename="TreeSearchParameters.java"><method name="&lt;init&gt;" desc="()V" line="245"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserialize" desc="(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/milaboratory/core/tree/TreeSearchParameters;" line="248"><counter type="INSTRUCTION" missed="64" covered="165"/><counter type="BRANCH" missed="16" covered="24"/><counter type="LINE" missed="9" covered="34"/><counter type="COMPLEXITY" missed="12" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="64" covered="168"/><counter type="BRANCH" missed="16" covered="24"/><counter type="LINE" missed="9" covered="35"/><counter type="COMPLEXITY" missed="12" covered="10"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/tree/NeighborhoodIterator$1" sourcefilename="NeighborhoodIterator.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/tree/NeighborhoodIterator;)V" line="293"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="296"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/tree/MutationGuide" sourcefilename="MutationGuide.java"/><class name="com/milaboratory/core/tree/SequenceTreeMap" sourcefilename="SequenceTreeMap.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Alphabet;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createIfAbsent" desc="(Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/util/Factory;)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Lcom/milaboratory/core/sequence/Sequence;Ljava/lang/Object;)Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNode" desc="(Lcom/milaboratory/core/sequence/Sequence;)Lcom/milaboratory/core/tree/SequenceTreeMap$Node;" line="73"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lcom/milaboratory/core/sequence/Sequence;)Ljava/lang/Object;" line="82"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/milaboratory/core/sequence/Sequence;)Ljava/lang/Object;" line="89"><counter type="INSTRUCTION" missed="3" covered="89"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toMap" desc="()Ljava/util/Map;" line="128"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nodesOp" desc="()Lcom/milaboratory/core/tree/SequenceTreeMap$NodeOp;" line="139"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valuesOp" desc="()Lcom/milaboratory/core/tree/SequenceTreeMap$ValuesOp;" line="143"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nodeIterator" desc="()Lcom/milaboratory/core/tree/SequenceTreeMap$NodeIterator;" line="147"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="values" desc="()Ljava/lang/Iterable;" line="151"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nodes" desc="()Ljava/lang/Iterable;" line="155"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNeighborhoodIterator" desc="(Lcom/milaboratory/core/sequence/Sequence;IIII)Lcom/milaboratory/core/tree/NeighborhoodIterator;" line="165"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNeighborhoodIterator" desc="(Lcom/milaboratory/core/sequence/Sequence;IIIILcom/milaboratory/core/tree/MutationGuide;)Lcom/milaboratory/core/tree/NeighborhoodIterator;" line="171"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNeighborhoodIterator" desc="(Lcom/milaboratory/core/sequence/Sequence;III)Lcom/milaboratory/core/tree/NeighborhoodIterator;" line="177"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNeighborhoodIterator" desc="(Lcom/milaboratory/core/sequence/Sequence;D[D[ILcom/milaboratory/core/tree/MutationGuide;)Lcom/milaboratory/core/tree/NeighborhoodIterator;" line="184"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNeighborhoodIterator" desc="(Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/tree/TreeSearchParameters;)Lcom/milaboratory/core/tree/NeighborhoodIterator;" line="190"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNeighborhoodIterator" desc="(Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/tree/TreeSearchParameters;Lcom/milaboratory/core/tree/MutationGuide;)Lcom/milaboratory/core/tree/NeighborhoodIterator;" line="195"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="57" covered="250"/><counter type="BRANCH" missed="4" covered="24"/><counter type="LINE" missed="11" covered="54"/><counter type="COMPLEXITY" missed="8" covered="24"/><counter type="METHOD" missed="5" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/tree/NeighborhoodIterator$NeighbourhoodIteratorWrapper" sourcefilename="NeighborhoodIterator.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/tree/NeighborhoodIterator;)V" line="312"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="318"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="323"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="328"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/tree/SequenceTreeMap$Node" sourcefilename="SequenceTreeMap.java"><method name="&lt;init&gt;" desc="(I)V" line="202"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOrCreate" desc="(B)Lcom/milaboratory/core/tree/SequenceTreeMap$Node;" line="208"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getObject" desc="()Ljava/lang/Object;" line="214"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setObject" desc="(Ljava/lang/Object;)V" line="218"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="226"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="231"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="34"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/tree/SequenceTreeMap$1" sourcefilename="SequenceTreeMap.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/tree/SequenceTreeMap;)V" line="155"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="158"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/milaboratory/core/tree/NeighborhoodIterator" sourcefilename="NeighborhoodIterator.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/sequence/Sequence;Lcom/milaboratory/core/tree/TreeSearchParameters;Lcom/milaboratory/core/tree/MutationGuide;Lcom/milaboratory/core/tree/SequenceTreeMap$Node;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureCapacity" desc="(I)V" line="72"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupBranchingEnumerators" desc="()V" line="84"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="114"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextNode" desc="()Lcom/milaboratory/core/tree/SequenceTreeMap$Node;" line="119"><counter type="INSTRUCTION" missed="6" covered="124"/><counter type="BRANCH" missed="4" covered="24"/><counter type="LINE" missed="1" covered="23"/><counter type="COMPLEXITY" missed="4" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="traverseToTheEnd" desc="(Lcom/milaboratory/core/tree/SequenceTreeMap$Node;I)Lcom/milaboratory/core/tree/SequenceTreeMap$Node;" line="165"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCurrentBranchingSequence" desc="()[B" line="173"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMutationsCount" desc="()I" line="177"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="(I)B" line="181"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCurrentMutations" desc="()Lcom/milaboratory/core/mutations/Mutations;" line="185"><counter type="INSTRUCTION" missed="4" covered="75"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCurrentAlignment" desc="()Lcom/milaboratory/core/alignment/Alignment;" line="217"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCurrentAlignment" desc="(Lcom/milaboratory/core/alignment/LinearGapAlignmentScoring;)Lcom/milaboratory/core/alignment/Alignment;" line="225"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPosition" desc="(I)I" line="233"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCode" desc="(I)B" line="237"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMismatches" desc="()I" line="241"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDeletions" desc="()I" line="251"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInsertions" desc="()I" line="261"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIntroducedDifferences" desc="()[I" line="271"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPenalty" desc="()D" line="280"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="it" desc="()Ljava/lang/Iterable;" line="293"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toList" desc="()Ljava/util/List;" line="302"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="191" covered="460"/><counter type="BRANCH" missed="22" covered="62"/><counter type="LINE" missed="33" covered="88"/><counter type="COMPLEXITY" missed="24" covered="41"/><counter type="METHOD" missed="10" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/tree/SequenceTreeMap$NodeWrapper" sourcefilename="SequenceTreeMap.java"><method name="&lt;init&gt;" desc="()V" line="317"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/tree/SequenceTreeMap$Node;)V" line="317"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="(Lcom/milaboratory/core/tree/SequenceTreeMap$Node;)V" line="328"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNext" desc="()Lcom/milaboratory/core/tree/SequenceTreeMap$Node;" line="333"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/tree/PenaltyUtils" sourcefilename="PenaltyUtils.java"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDifferencesCombination" desc="(D[D)[[B" line="26"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDifferencesCombination" desc="(D[D[I)[[B" line="38"><counter type="INSTRUCTION" missed="0" covered="106"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="111"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/tree/SequenceTreeMap$ValuesOp" sourcefilename="SequenceTreeMap.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/tree/SequenceTreeMap;Lcom/milaboratory/core/tree/SequenceTreeMap$Node;)V" line="301"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="take" desc="()Ljava/lang/Object;" line="307"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSequence" desc="()Lcom/milaboratory/core/sequence/Sequence;" line="312"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/tree/TreeSearchParameters" sourcefilename="TreeSearchParameters.java"><method name="&lt;init&gt;" desc="([I[DD)V" line="68"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([I[DDZ)V" line="71"><counter type="INSTRUCTION" missed="4" covered="33"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(III)V" line="91"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IIIZ)V" line="105"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IIIIZ)V" line="113"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IIII)V" line="118"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IIIDDDDZ)V" line="123"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IIIDDDD)V" line="134"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxPenaltyFor" desc="(III)D" line="138"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxErrors" desc="(I)I" line="146"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPenalty" desc="(I)D" line="150"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxSubstitutions" desc="()I" line="154"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaxDeletions" desc="()I" line="158"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaxInsertions" desc="()I" line="162"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSubstitutionPenalty" desc="()D" line="166"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDeletionPenalty" desc="()D" line="170"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInsertionPenalty" desc="()D" line="174"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaxPenalty" desc="()D" line="178"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isGreedy" desc="()Z" line="182"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDifferencesCombination" desc="()[[B" line="186"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="191"><counter type="INSTRUCTION" missed="10" covered="36"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="208"><counter type="INSTRUCTION" missed="1" covered="39"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addKnown" desc="(Ljava/lang/String;Lcom/milaboratory/core/tree/TreeSearchParameters;)V" line="220"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="171"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="50" covered="464"/><counter type="BRANCH" missed="8" covered="10"/><counter type="LINE" missed="8" covered="83"/><counter type="COMPLEXITY" missed="15" covered="18"/><counter type="METHOD" missed="7" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/tree/PenaltyUtils$SequenceWrapper" sourcefilename="PenaltyUtils.java"><method name="&lt;init&gt;" desc="()V" line="97"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([BD)V" line="102"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="(BD)Lcom/milaboratory/core/tree/PenaltyUtils$SequenceWrapper;" line="108"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getErrorsOfType" desc="(B)I" line="114"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/tree/SequenceTreeMap$NodeOp" sourcefilename="SequenceTreeMap.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/tree/SequenceTreeMap;Lcom/milaboratory/core/tree/SequenceTreeMap$Node;)V" line="236"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureNext" desc="()V" line="244"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="take" desc="()Lcom/milaboratory/core/tree/SequenceTreeMap$Node;" line="254"><counter type="INSTRUCTION" missed="2" covered="45"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSequence" desc="()Lcom/milaboratory/core/sequence/Sequence;" line="275"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="135"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="25"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/tree/SequenceTreeMap$NodeIterator" sourcefilename="SequenceTreeMap.java"><method name="&lt;init&gt;" desc="(Lcom/milaboratory/core/tree/SequenceTreeMap;Lcom/milaboratory/core/tree/SequenceTreeMap$Node;)V" line="284"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/milaboratory/core/tree/SequenceTreeMap$Node;" line="290"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSequence" desc="()Lcom/milaboratory/core/sequence/Sequence;" line="294"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/milaboratory/core/tree/PenaltyUtils$1" sourcefilename="PenaltyUtils.java"><method name="&lt;init&gt;" desc="([D)V" line="61"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lcom/milaboratory/core/tree/PenaltyUtils$SequenceWrapper;Lcom/milaboratory/core/tree/PenaltyUtils$SequenceWrapper;)I" line="66"><counter type="INSTRUCTION" missed="4" covered="74"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="80"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="BranchingEnumerator.java"><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="1" cb="1"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="2"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="16" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="1" cb="3"/><line nr="82" mi="0" ci="6" mb="0" cb="2"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="12" mb="1" cb="3"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="8" mb="1" cb="1"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="2"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="1" cb="3"/><line nr="105" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="0" ci="7" mb="0" cb="2"/><line nr="108" mi="0" ci="8" mb="0" cb="2"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="16" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="2"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="8" mb="0" cb="2"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="19" mb="0" cb="4"/><line nr="122" mi="0" ci="2" mb="0" cb="2"/><line nr="123" mi="0" ci="7" mb="0" cb="0"/><line nr="127" mi="0" ci="16" mb="0" cb="4"/><line nr="128" mi="0" ci="2" mb="0" cb="2"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="2"/><line nr="132" mi="0" ci="17" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="13" mb="0" cb="4"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="2"/><line nr="141" mi="0" ci="7" mb="0" cb="0"/><line nr="143" mi="0" ci="7" mb="0" cb="2"/><line nr="144" mi="0" ci="6" mb="0" cb="2"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="16" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="2"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="19" mb="0" cb="4"/><line nr="155" mi="0" ci="2" mb="0" cb="2"/><line nr="156" mi="0" ci="7" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="1" cb="3"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="359"/><counter type="BRANCH" missed="6" covered="62"/><counter type="LINE" missed="6" covered="70"/><counter type="COMPLEXITY" missed="6" covered="39"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TreeSearchParameters.java"><line nr="36" mi="0" ci="15" mb="0" cb="0"/><line nr="41" mi="0" ci="15" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="0"/><line nr="47" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="54" mi="0" ci="8" mb="0" cb="0"/><line nr="55" mi="0" ci="8" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="2" cb="2"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="20" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="22" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="7" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="16" mb="0" cb="0"/><line nr="125" mi="0" ci="16" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="8" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="10" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="9" mb="0" cb="0"/><line nr="140" mi="0" ci="9" mb="0" cb="0"/><line nr="141" mi="0" ci="9" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="166" mi="5" ci="0" mb="0" cb="0"/><line nr="170" mi="5" ci="0" mb="0" cb="0"/><line nr="174" mi="5" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="0" cb="2"/><line nr="192" mi="2" ci="3" mb="1" cb="1"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="2" ci="6" mb="1" cb="1"/><line nr="197" mi="2" ci="5" mb="1" cb="1"/><line nr="198" mi="2" ci="6" mb="1" cb="1"/><line nr="199" mi="2" ci="6" mb="1" cb="1"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="8" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="11" mb="0" cb="0"/><line nr="212" mi="1" ci="10" mb="1" cb="1"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="6" mb="0" cb="0"/><line nr="221" mi="0" ci="5" mb="0" cb="0"/><line nr="222" mi="0" ci="1" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="0" cb="0"/><line nr="243" mi="0" ci="1" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="0" cb="2"/><line nr="251" mi="0" ci="7" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="1" cb="1"/><line nr="253" mi="13" ci="0" mb="0" cb="0"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="2" mb="0" cb="0"/><line nr="259" mi="0" ci="6" mb="0" cb="2"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="264" mi="0" ci="6" mb="1" cb="1"/><line nr="265" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="0" ci="6" mb="0" cb="2"/><line nr="267" mi="0" ci="5" mb="0" cb="0"/><line nr="268" mi="0" ci="6" mb="0" cb="2"/><line nr="269" mi="0" ci="5" mb="0" cb="0"/><line nr="271" mi="0" ci="4" mb="0" cb="0"/><line nr="272" mi="0" ci="2" mb="0" cb="2"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="2" mb="1" cb="1"/><line nr="275" mi="0" ci="10" mb="2" cb="2"/><line nr="276" mi="0" ci="2" mb="1" cb="1"/><line nr="277" mi="5" ci="0" mb="0" cb="0"/><line nr="279" mi="0" ci="13" mb="0" cb="0"/><line nr="280" mi="10" ci="0" mb="4" cb="0"/><line nr="281" mi="2" ci="0" mb="2" cb="0"/><line nr="282" mi="5" ci="0" mb="0" cb="0"/><line nr="284" mi="15" ci="0" mb="0" cb="0"/><line nr="286" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="3" mb="0" cb="0"/><line nr="290" mi="0" ci="6" mb="1" cb="1"/><line nr="291" mi="0" ci="6" mb="0" cb="0"/><line nr="292" mi="4" ci="0" mb="2" cb="0"/><line nr="293" mi="5" ci="0" mb="0" cb="0"/><line nr="295" mi="0" ci="6" mb="0" cb="2"/><line nr="296" mi="0" ci="6" mb="0" cb="0"/><line nr="297" mi="0" ci="4" mb="0" cb="2"/><line nr="298" mi="0" ci="5" mb="0" cb="0"/><line nr="300" mi="0" ci="6" mb="0" cb="2"/><line nr="301" mi="0" ci="6" mb="0" cb="0"/><line nr="302" mi="0" ci="4" mb="1" cb="1"/><line nr="303" mi="5" ci="0" mb="0" cb="0"/><line nr="305" mi="0" ci="8" mb="0" cb="0"/><line nr="310" mi="0" ci="3" mb="0" cb="0"/><line nr="313" mi="0" ci="5" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="2"/><line nr="315" mi="0" ci="4" mb="0" cb="0"/><line nr="317" mi="0" ci="2" mb="0" cb="0"/><line nr="319" mi="0" ci="6" mb="0" cb="0"/><line nr="321" mi="0" ci="5" mb="1" cb="1"/><line nr="322" mi="0" ci="8" mb="0" cb="0"/><line nr="323" mi="0" ci="5" mb="1" cb="1"/><line nr="324" mi="0" ci="8" mb="0" cb="0"/><line nr="325" mi="0" ci="5" mb="1" cb="1"/><line nr="326" mi="0" ci="8" mb="0" cb="0"/><line nr="328" mi="0" ci="5" mb="1" cb="1"/><line nr="329" mi="8" ci="0" mb="0" cb="0"/><line nr="330" mi="0" ci="5" mb="0" cb="2"/><line nr="331" mi="0" ci="8" mb="0" cb="0"/><line nr="332" mi="0" ci="8" mb="0" cb="0"/><line nr="333" mi="0" ci="8" mb="0" cb="0"/><line nr="334" mi="0" ci="6" mb="0" cb="0"/><line nr="336" mi="0" ci="2" mb="0" cb="0"/><line nr="338" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="122" covered="736"/><counter type="BRANCH" missed="28" covered="42"/><counter type="LINE" missed="18" covered="138"/><counter type="COMPLEXITY" missed="31" covered="32"/><counter type="METHOD" missed="7" covered="21"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="PenaltyUtils.java"><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="2"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="11" mb="0" cb="2"/><line nr="51" mi="0" ci="13" mb="0" cb="4"/><line nr="53" mi="0" ci="5" mb="0" cb="2"/><line nr="54" mi="0" ci="9" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="2"/><line nr="61" mi="0" ci="11" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="2"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="12" mb="1" cb="1"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="9" mb="0" cb="2"/><line nr="73" mi="0" ci="18" mb="0" cb="2"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="9" mb="1" cb="1"/><line nr="78" mi="0" ci="12" mb="0" cb="2"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="9" mb="0" cb="2"/><line nr="89" mi="0" ci="8" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="10" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="9" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="17" mb="0" cb="2"/><line nr="116" mi="0" ci="3" mb="0" cb="2"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="260"/><counter type="BRANCH" missed="2" covered="28"/><counter type="LINE" missed="3" covered="45"/><counter type="COMPLEXITY" missed="3" covered="21"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="SequenceTreeMap.java"><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="2"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="2"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="0" cb="2"/><line nr="76" mi="0" ci="9" mb="0" cb="2"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="2"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="0" cb="2"/><line nr="95" mi="0" ci="9" mb="1" cb="1"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="1" cb="1"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="2"/><line nr="109" mi="0" ci="3" mb="0" cb="2"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="10" mb="0" cb="2"/><line nr="114" mi="0" ci="5" mb="0" cb="2"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="9" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="2" cb="0"/><line nr="133" mi="7" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="7" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="7" mb="0" cb="0"/><line nr="147" mi="0" ci="7" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="11" ci="0" mb="0" cb="0"/><line nr="158" mi="9" ci="0" mb="0" cb="0"/><line nr="165" mi="11" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="12" mb="0" cb="0"/><line nr="177" mi="10" ci="0" mb="0" cb="0"/><line nr="184" mi="0" ci="11" mb="0" cb="0"/><line nr="190" mi="0" ci="6" mb="0" cb="0"/><line nr="195" mi="0" ci="9" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="1" mb="0" cb="0"/><line nr="208" mi="0" ci="7" mb="0" cb="2"/><line nr="209" mi="0" ci="12" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="3" ci="0" mb="0" cb="0"/><line nr="219" mi="1" ci="0" mb="0" cb="0"/><line nr="226" mi="7" ci="0" mb="2" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="8" mb="0" cb="0"/><line nr="241" mi="0" ci="1" mb="0" cb="0"/><line nr="244" mi="0" ci="8" mb="0" cb="2"/><line nr="245" mi="0" ci="15" mb="0" cb="0"/><line nr="248" mi="0" ci="8" mb="0" cb="2"/><line nr="249" mi="0" ci="10" mb="0" cb="0"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="254" mi="0" ci="4" mb="1" cb="1"/><line nr="255" mi="2" ci="0" mb="0" cb="0"/><line nr="260" mi="0" ci="6" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="2"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><line nr="264" mi="0" ci="12" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="2"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="0" ci="6" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="2"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="275" mi="0" ci="8" mb="0" cb="0"/><line nr="276" mi="0" ci="8" mb="0" cb="2"/><line nr="277" mi="0" ci="8" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="0" cb="0"/><line nr="284" mi="0" ci="3" mb="0" cb="0"/><line nr="285" mi="0" ci="7" mb="0" cb="0"/><line nr="286" mi="0" ci="1" mb="0" cb="0"/><line nr="290" mi="0" ci="4" mb="0" cb="0"/><line nr="294" mi="0" ci="5" mb="0" cb="0"/><line nr="301" mi="0" ci="5" mb="0" cb="0"/><line nr="302" mi="0" ci="7" mb="0" cb="0"/><line nr="303" mi="0" ci="1" mb="0" cb="0"/><line nr="307" mi="0" ci="4" mb="0" cb="0"/><line nr="308" mi="0" ci="7" mb="0" cb="2"/><line nr="312" mi="4" ci="0" mb="0" cb="0"/><line nr="317" mi="0" ci="6" mb="0" cb="0"/><line nr="320" mi="0" ci="2" mb="0" cb="0"/><line nr="321" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="2" mb="0" cb="0"/><line nr="324" mi="0" ci="3" mb="0" cb="0"/><line nr="325" mi="0" ci="1" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="0" cb="0"/><line nr="329" mi="0" ci="3" mb="0" cb="0"/><line nr="330" mi="0" ci="1" mb="0" cb="0"/><line nr="333" mi="0" ci="13" mb="0" cb="2"/><line nr="334" mi="0" ci="7" mb="0" cb="2"/><line nr="335" mi="0" ci="7" mb="0" cb="0"/><line nr="336" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="89" covered="514"/><counter type="BRANCH" missed="7" covered="45"/><counter type="LINE" missed="17" covered="110"/><counter type="COMPLEXITY" missed="15" covered="51"/><counter type="METHOD" missed="10" covered="30"/><counter type="CLASS" missed="1" covered="6"/></sourcefile><sourcefile name="MutationGuide.java"/><sourcefile name="NeighborhoodIterator.java"><line nr="33" mi="2" ci="6" mb="1" cb="1"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="9" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="2"/><line nr="73" mi="0" ci="8" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="2"/><line nr="75" mi="0" ci="11" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="8" mb="0" cb="2"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="10" mb="0" cb="4"/><line nr="97" mi="0" ci="4" mb="0" cb="2"/><line nr="99" mi="0" ci="17" mb="0" cb="10"/><line nr="103" mi="0" ci="7" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="8" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="7" mb="0" cb="2"/><line nr="119" mi="0" ci="6" mb="1" cb="1"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="2"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="128" mi="0" ci="11" mb="0" cb="4"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="2"/><line nr="136" mi="0" ci="6" mb="0" cb="2"/><line nr="137" mi="0" ci="8" mb="0" cb="2"/><line nr="138" mi="0" ci="14" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="4" ci="6" mb="2" cb="2"/><line nr="146" mi="0" ci="8" mb="0" cb="2"/><line nr="147" mi="0" ci="14" mb="0" cb="4"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="12" mb="0" cb="2"/><line nr="156" mi="0" ci="6" mb="1" cb="1"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="2"/><line nr="166" mi="0" ci="11" mb="0" cb="2"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="6" mb="0" cb="0"/><line nr="177" mi="7" ci="0" mb="0" cb="0"/><line nr="181" mi="8" ci="0" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="2"/><line nr="186" mi="0" ci="9" mb="0" cb="0"/><line nr="188" mi="0" ci="10" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="8" mb="0" cb="2"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="1" cb="3"/><line nr="196" mi="0" ci="7" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="7" mb="0" cb="0"/><line nr="203" mi="0" ci="1" mb="0" cb="0"/><line nr="204" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="6" mb="0" cb="0"/><line nr="207" mi="0" ci="1" mb="0" cb="0"/><line nr="209" mi="4" ci="0" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="11" mb="0" cb="0"/><line nr="219" mi="0" ci="7" mb="0" cb="0"/><line nr="220" mi="0" ci="7" mb="0" cb="0"/><line nr="221" mi="0" ci="7" mb="0" cb="0"/><line nr="225" mi="3" ci="0" mb="0" cb="0"/><line nr="226" mi="11" ci="0" mb="0" cb="0"/><line nr="227" mi="7" ci="0" mb="0" cb="0"/><line nr="228" mi="7" ci="0" mb="0" cb="0"/><line nr="233" mi="6" ci="0" mb="0" cb="0"/><line nr="237" mi="6" ci="0" mb="0" cb="0"/><line nr="241" mi="2" ci="0" mb="0" cb="0"/><line nr="243" mi="17" ci="0" mb="2" cb="0"/><line nr="244" mi="2" ci="0" mb="2" cb="0"/><line nr="245" mi="1" ci="0" mb="0" cb="0"/><line nr="247" mi="2" ci="0" mb="0" cb="0"/><line nr="251" mi="2" ci="0" mb="0" cb="0"/><line nr="253" mi="17" ci="0" mb="2" cb="0"/><line nr="254" mi="3" ci="0" mb="2" cb="0"/><line nr="255" mi="1" ci="0" mb="0" cb="0"/><line nr="257" mi="2" ci="0" mb="0" cb="0"/><line nr="261" mi="2" ci="0" mb="0" cb="0"/><line nr="263" mi="17" ci="0" mb="2" cb="0"/><line nr="264" mi="3" ci="0" mb="2" cb="0"/><line nr="265" mi="1" ci="0" mb="0" cb="0"/><line nr="267" mi="2" ci="0" mb="0" cb="0"/><line nr="271" mi="3" ci="0" mb="0" cb="0"/><line nr="273" mi="17" ci="0" mb="2" cb="0"/><line nr="274" mi="7" ci="0" mb="0" cb="0"/><line nr="276" mi="2" ci="0" mb="0" cb="0"/><line nr="280" mi="0" ci="2" mb="0" cb="0"/><line nr="283" mi="0" ci="6" mb="0" cb="0"/><line nr="286" mi="0" ci="9" mb="0" cb="2"/><line nr="287" mi="0" ci="9" mb="0" cb="0"/><line nr="289" mi="0" ci="2" mb="0" cb="0"/><line nr="293" mi="0" ci="11" mb="0" cb="0"/><line nr="296" mi="0" ci="7" mb="0" cb="0"/><line nr="302" mi="4" ci="0" mb="0" cb="0"/><line nr="303" mi="10" ci="0" mb="2" cb="0"/><line nr="304" mi="5" ci="0" mb="0" cb="0"/><line nr="305" mi="2" ci="0" mb="0" cb="0"/><line nr="312" mi="0" ci="2" mb="0" cb="0"/><line nr="313" mi="0" ci="3" mb="0" cb="0"/><line nr="314" mi="0" ci="1" mb="0" cb="0"/><line nr="318" mi="0" ci="11" mb="0" cb="2"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><line nr="328" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="195" covered="493"/><counter type="BRANCH" missed="22" covered="64"/><counter type="LINE" missed="34" covered="94"/><counter type="COMPLEXITY" missed="25" covered="47"/><counter type="METHOD" missed="11" covered="17"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><counter type="INSTRUCTION" missed="428" covered="2362"/><counter type="BRANCH" missed="65" covered="241"/><counter type="LINE" missed="78" covered="457"/><counter type="COMPLEXITY" missed="80" covered="190"/><counter type="METHOD" missed="29" covered="84"/><counter type="CLASS" missed="1" covered="16"/></package><package name="com/milaboratory/primitivio/annotations"><class name="com/milaboratory/primitivio/annotations/Serializable" sourcefilename="Serializable.java"/><class name="com/milaboratory/primitivio/annotations/CustomSerializer" sourcefilename="CustomSerializer.java"/><sourcefile name="Serializable.java"/><sourcefile name="CustomSerializer.java"/></package><counter type="INSTRUCTION" missed="45369" covered="54507"/><counter type="BRANCH" missed="4970" covered="4609"/><counter type="LINE" missed="9532" covered="10073"/><counter type="COMPLEXITY" missed="5477" covered="3661"/><counter type="METHOD" missed="2430" covered="1878"/><counter type="CLASS" missed="237" covered="341"/></report>