<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ucar</groupId>
    <artifactId>zkdoctor</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <profiles>
        <profile>
            <id>ucar</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <moduleId>ucar</moduleId>
            </properties>
        </profile>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <env>development</env>
            </properties>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <env>test</env>
            </properties>
        </profile>
        <profile>
            <id>pre</id>
            <properties>
                <env>preProduct</env>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <env>product</env>
                <checkstyle.skip>true</checkstyle.skip>
                <findbugs.skip>true</findbugs.skip>
                <pmd.skip>true</pmd.skip>
            </properties>
        </profile>
    </profiles>

    <properties>
        <finalName>zkdoctor</finalName>
        <spring-boot.version>1.5.9.RELEASE</spring-boot.version>
        <mysql.java.version>5.1.29</mysql.java.version>
        <hikaricp-version>2.4.13</hikaricp-version>
        <mybatis-spring-boot.version>1.3.0</mybatis-spring-boot.version>
        <commons-lang.version>2.5</commons-lang.version>
        <apache.commons.collections>4.0</apache.commons.collections>
        <commons-dbcp.version>1.2.2</commons-dbcp.version>
        <junit.version>4.12</junit.version>
        <quartz.version>2.2.1</quartz.version>
        <ganymed.ssh.version>build210</ganymed.ssh.version>
        <commons-exec.version>1.3</commons-exec.version>
        <curator-recipes.version>2.12.0</curator-recipes.version>
        <hessian.version>4.0.51</hessian.version>
        <fastjson.version>1.2.44</fastjson.version>
        <reflections.version>0.9.11</reflections.version>
        <servlet.api.version>2.5</servlet.api.version>
    </properties>

    <dependencies>
        <!-- spring boot start -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring-boot.version}</version>
            <!-- 部署到外部Tomcat容器时，需要移除内嵌的tomcat容器-->
            <!--<exclusions>-->
                <!--<exclusion>-->
                    <!--<groupId>org.springframework.boot</groupId>-->
                    <!--<artifactId>spring-boot-starter-tomcat</artifactId>-->
                <!--</exclusion>-->
            <!--</exclusions>-->
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>${mybatis-spring-boot.version}</version>
        </dependency>
        <!-- spring boot end -->

        <!-- mysql start -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.java.version}</version>
        </dependency>
        <!-- mysql end -->

        <!-- HikariCP start -->
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP-java7</artifactId>
            <version>${hikaricp-version}</version>
        </dependency>
        <!-- HikariCP end -->

        <!-- commons start -->
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons-lang.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${apache.commons.collections}</version>
        </dependency>
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>${commons-dbcp.version}</version>
            <scope>compile</scope>
        </dependency>
        <!-- commons end -->

        <!-- junit start -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
        </dependency>
        <!-- junit end -->

        <!-- quartz start -->
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>${quartz.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-api</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz-jobs</artifactId>
            <version>${quartz.version}</version>
        </dependency>
        <!-- quartz end -->

        <!-- spring-context-support start -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>4.3.13.RELEASE</version>
        </dependency>
        <!-- spring-context-support end -->

        <!-- SSH start -->
        <dependency>
            <groupId>ch.ethz.ganymed</groupId>
            <artifactId>ganymed-ssh2</artifactId>
            <version>${ganymed.ssh.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-exec</artifactId>
            <version>${commons-exec.version}</version>
        </dependency>
        <!-- SSH end -->

        <!-- curator4.0支持zookeeper3.5.x版本。如服务端为3.4.x版本，需要排除zookeeper依赖，另需要单独引入3.4.x版本的zookeeper依赖，保证正常使用 -->
        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-recipes</artifactId>
            <version>${curator-recipes.version}</version>
        </dependency>
        <!-- curator end -->

        <!-- hessian start -->
        <dependency>
            <groupId>com.caucho</groupId>
            <artifactId>hessian</artifactId>
            <version>${hessian.version}</version>
        </dependency>
        <!-- hessian end -->

        <!-- fastjson start -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>
        <!-- fastjson end -->

        <!-- reflections start -->
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>${reflections.version}</version>
        </dependency>
        <!-- reflections end -->

        <!-- 使用外部tomcat时，需要增加javax.servlet依赖 start -->
        <!--<dependency>-->
            <!--<groupId>javax.servlet</groupId>-->
            <!--<artifactId>servlet-api</artifactId>-->
            <!--<version>${servlet.api.version}</version>-->
        <!--</dependency>-->
        <!-- 使用外部tomcat时，需要增加javax.servlet依赖 end -->

    </dependencies>

    <build>
        <finalName>${finalName}</finalName>
        <filters>
            <filter>src/main/filters/${moduleId}-${env}.properties</filter>
        </filters>
        <plugins>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.4</version>
                <configuration>
                    <nodeVersion>v8.9.1</nodeVersion>
                    <npmVersion>5.5.1</npmVersion>
                    <workingDirectory>src/main/webapp</workingDirectory>
                    <installDirectory>${java.io.tmpdir}/nodejs</installDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                    </execution>
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <arguments>install</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm run build</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>prepare-package</phase>
                        <configuration>
                            <arguments>run build</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>1.5.9.RELEASE</version>
                <configuration>
                    <mainClass>com.ucar.zkdoctor.ZkDoctorMain</mainClass>
                    <addResources>false</addResources>
                    <executable>true</executable>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <id>1</id>
                    </execution>
                </executions>
            </plugin>

            <!-- 将前端编译好的首页信息，复制替换到根目录下 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <overwrite>true</overwrite>
                            <outputDirectory>${project.build.directory}/${finalName}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/main/webapp/dist</directory>
                                    <include>index.html</include>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <packagingExcludes>
                        node_modules/**,
                        src/**,
                        mock/**,
                        public/**,
                        .roadhogrc,
                        .roadhogrc.mock.js,
                        package.json,
                        yarn.lock
                    </packagingExcludes>
                    <excludes>
                        index.html
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>

</project>