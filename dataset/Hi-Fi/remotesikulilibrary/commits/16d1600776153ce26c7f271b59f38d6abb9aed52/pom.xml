<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>
	<groupId>com.github.hi_fi</groupId>
	<artifactId>remotesikulilibrary</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>robotframework-remotesikulilibrary</name>
	<description>A Robot Framework library + Java-agent for for Sikuli based UI testing</description>
	<url>https://github.com/hi-fi/remotesikulilibrary</url>

	<issueManagement>
		<system>GitHub Issues</system>
		<url>https://github.com/hi-fi/remotesikulilibrary/issues</url>
	</issueManagement>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<scm>
		<url>https://github.com/hi-fi/remotesikulilibrary</url>
		<connection>scm:git:git://github.com/hi-fi/remotesikulilibrary.git</connection>
		<developerConnection>scm:git:git@github.com:hi-fi/remotesikulilibrary.git</developerConnection>
	</scm>

	<developers>
		<developer>
			<name>Juho Saarinen</name>
			<email>juho.saarinen@gmail.com</email>
			<id>hi-fi</id>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<keywords.class>com.github.hi_fi.remotesikulilibrary.RemoteSikuliLibrary</keywords.class>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>com.github.ombre42</groupId>
			<artifactId>jrobotremoteserver</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>com.sikulix</groupId>
			<artifactId>sikulixapi</artifactId>
			<version>1.1.0</version>
		</dependency>
		<dependency>
			<groupId>com.sikulix</groupId>
			<artifactId>sikulixlibswin</artifactId>
			<version>1.1.0</version>
		</dependency>
		<dependency>
			<groupId>com.sikulix</groupId>
			<artifactId>sikulixlibsmac</artifactId>
			<version>1.1.0</version>
		</dependency>
		<dependency>
			<groupId>com.sikulix</groupId>
			<artifactId>sikulixlibslux</artifactId>
			<version>1.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.xmlrpc</groupId>
			<artifactId>xmlrpc-client</artifactId>
			<version>3.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.robotframework</groupId>
			<artifactId>javalib-core</artifactId>
			<version>1.2.1</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.0</version>
			</plugin>
			<plugin>
				<groupId>org.robotframework</groupId>
				<artifactId>robotframework-maven-plugin</artifactId>
				<version>1.4.6</version>
				<executions>
					<execution>
						<goals>
							<goal>acceptance-test</goal>
						</goals>
						<configuration>
							<logLevel>DEBUG</logLevel>
							<extraPathDirectories>
								<extraPathDirectory>target/remotesikulilibrary-${project.version}.jar</extraPathDirectory>
							</extraPathDirectories>
							<variables>
								<variable>maven.runtime.classpath:${maven.runtime.classpath}</variable>
								<variable>maven.test.classpath:${maven.test.classpath}</variable>
								<classpath />
							</variables>
						</configuration>
					</execution>
					<execution>
						<id>html</id>
						<phase>package</phase>
						<goals>
							<goal>libdoc</goal>
						</goals>
						<configuration>
							<libdoc>
								<outputDirectory>${project.build.directory}</outputDirectory>
								<outputFile>${keywords.class}.html</outputFile>
								<libraryOrResourceFile>${keywords.class}</libraryOrResourceFile>
							</libdoc>
						</configuration>
					</execution>
					<execution>
						<id>xml</id>
						<phase>package</phase>
						<goals>
							<goal>libdoc</goal>
						</goals>
						<configuration>
							<libdoc>
								<outputDirectory>${project.build.directory}</outputDirectory>
								<outputFile>${keywords.class}.xml</outputFile>
								<libraryOrResourceFile>${keywords.class}</libraryOrResourceFile>
							</libdoc>
						</configuration>
					</execution>
					<execution>
						<id>verifyResults</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>images</directory>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>install</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- <plugin> -->
			<!-- <groupId>org.apache.maven.plugins</groupId> -->
			<!-- <artifactId>maven-antrun-plugin</artifactId> -->
			<!-- <executions> -->
			<!-- <execution> -->
			<!-- <id>createJarjarDir</id> -->
			<!-- <phase>process-resources</phase> -->
			<!-- <configuration> -->
			<!-- <tasks> -->
			<!-- <delete dir="${project.build.directory}/jarjarred" /> -->
			<!-- <mkdir dir="${project.build.directory}/jarjarred" /> -->
			<!-- </tasks> -->
			<!-- </configuration> -->
			<!-- <goals> -->
			<!-- <goal>run</goal> -->
			<!-- </goals> -->
			<!-- </execution> -->
			<!-- </executions> -->
			<!-- </plugin> -->
			<!-- <plugin> -->
			<!-- <groupId>org.sonatype.plugins</groupId> -->
			<!-- <artifactId>jarjar-maven-plugin</artifactId> -->
			<!-- <version>1.8</version> -->
			<!-- <executions> -->
			<!-- <execution> -->
			<!-- <phase>package</phase> -->
			<!-- <goals> -->
			<!-- <goal>jarjar</goal> -->
			<!-- </goals> -->
			<!-- <configuration> -->
			<!-- <output>${project.build.directory}/jarjarred</output> -->
			<!-- <overwrite>true</overwrite> -->
			<!-- <rules> -->
			<!-- <rule> -->
			<!-- <pattern>com.thoughtworks.**</pattern> -->
			<!-- <result>com.github.hifi.remotesikulilibrary.@0</result> -->
			<!-- </rule> -->
			<!-- <rule> -->
			<!-- <pattern>edu.emory.**</pattern> -->
			<!-- <result>com.github.hifi.remotesikulilibrary.@0</result> -->
			<!-- </rule> -->
			<!-- <rule> -->
			<!-- <pattern>org.aopalliance.**</pattern> -->
			<!-- <result>com.github.hifi.remotesikulilibrary.@0</result> -->
			<!-- </rule> -->
			<!-- <rule> -->
			<!-- <pattern>org.laughingpanda.**</pattern> -->
			<!-- <result>com.github.hifi.remotesikulilibrary.@0</result> -->
			<!-- </rule> -->
			<!-- <rule> -->
			<!-- <pattern>org.apache.log4j.**</pattern> -->
			<!-- <result>@0</result> -->
			<!-- </rule> -->
			<!-- <rule> -->
			<!-- <pattern>org.apache.**</pattern> -->
			<!-- <result>com.github.hifi.remotesikulilibrary.@0</result> -->
			<!-- </rule> -->
			<!-- <rule> -->
			<!-- <pattern>org.springframework.**</pattern> -->
			<!-- <result>com.github.hifi.remotesikulilibrary.@0</result> -->
			<!-- </rule> -->
			<!-- <rule> -->
			<!-- <pattern>javax.servlet.**</pattern> -->
			<!-- <result>com.github.hifi.remotesikulilibrary.@0</result> -->
			<!-- </rule> -->
			<!-- <keep> -->
			<!-- <pattern>org.apache.log4j.**</pattern> -->
			<!-- </keep> -->
			<!-- <keep> -->
			<!-- <pattern>org.robotframework.**</pattern> -->
			<!-- </keep> -->
			<!-- <keep> -->
			<!-- <pattern>JavaTools</pattern> -->
			<!-- </keep> -->
			<!-- </rules> -->
			<!-- </configuration> -->
			<!-- </execution> -->
			<!-- </executions> -->
			<!-- </plugin> -->
			<!-- <plugin> -->
			<!-- <groupId>org.apache.maven.plugins</groupId> -->
			<!-- <artifactId>maven-jar-plugin</artifactId> -->
			<!-- <version>2.4</version> -->
			<!-- <executions> -->
			<!-- <execution> -->
			<!-- <phase>package</phase> -->
			<!-- <goals> -->
			<!-- <goal>jar</goal> -->
			<!-- </goals> -->
			<!-- <configuration> -->
			<!-- <classesDirectory>${project.build.directory}/jarjarred</classesDirectory> -->
			<!-- <archive> -->
			<!-- <manifestEntries> -->
			<!-- <Premain-Class>com.github.hifi.remotesikulilibrary.RemoteSikuliLibrary</Premain-Class> -->
			<!-- <Main-Class>com.github.hifi.remotesikulilibrary.RemoteSikuliLibrary</Main-Class> -->
			<!-- </manifestEntries> -->
			<!-- </archive> -->
			<!-- </configuration> -->
			<!-- </execution> -->
			<!-- </executions> -->
			<!-- </plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.19.1</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>define-classpath</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<exportAntProperties>true</exportAntProperties>
							<target>
								<property name="maven.runtime.classpath" refid="maven.runtime.classpath" />
								<property name="maven.test.classpath" refid="maven.test.classpath" />
							</target>
						</configuration>
					</execution>
					<execution>
						<id>moveImages</id>
						<phase>post-integration-test</phase>
						<configuration>
							<tasks>
								<copy todir="target/robotframework-reports/images" flatten="true"
									overwrite="true">
									<fileset dir="images" includes="*.png" />
								</copy>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.5.0</version>
				<executions>
					<execution>
						<id>startRemoteServer</id>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>com.github.hi_fi.testapp.TestSwingApp</mainClass>
					<classpathScope>test</classpathScope>
				</configuration>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/python</directory>
				<includes>
					<include> *.py</include>
				</includes>
			</resource>
		</resources>
	</build>
</project>