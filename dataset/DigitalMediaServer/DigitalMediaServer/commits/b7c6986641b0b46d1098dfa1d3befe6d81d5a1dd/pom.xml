<project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.digitalmediaserver</groupId>
  <artifactId>dms</artifactId>
  <name>Digital Media Server</name>
  <packaging>jar</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <url>http://www.digitalmediaserver.org/</url>
  <inceptionYear>2016</inceptionYear>
  <organization>
    <name>Digital Media Server</name>
    <url>http://www.digitalmediaserver.org/</url>
  </organization>
  <licenses>
    <license>
      <name>GNU General Public License version 2</name>
      <url>http://www.gnu.org/licenses/gpl-2.0.txt</url>
      <distribution>manual</distribution>
    </license>
  </licenses>
  <description>
		Digital Media Server is a DLNA compatible UPnP AV Media Server. It is
		capable of sharing digital video, audio and image resources to UPnP AV
		and DLNA capable devices. It is based on PS3 Media Server by shagrath
		and Universal Media Server.

		Digital Media Server supports Windows, Linux and OS X. The program
		streams or transcodes many different media formats with little or no
		configuration. It is powered by MEncoder, FFmpeg, tsMuxeR, AviSynth,
		MediaInfo, VLC, OpenSubtitles.org and more, which combine to offer
		support for a wide range of media formats.	
	</description>
  <scm>
    <connection>scm:git:git://github.com/DigitalMediaServer/DigitalMediaServer.git</connection>
    <developerConnection>scm:git:git@github.com:DigitalMediaServer/DigitalMediaServer.git</developerConnection>
    <tag>master</tag>
    <url>https://github.com/DigitalMediaServer/DigitalMediaServer</url>
  </scm>
  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/DigitalMediaServer/DigitalMediaServer/issues</url>
  </issueManagement>
  <properties>
    <project.version.short>0.0.1</project.version.short>
    <cuelib-version>1.2.1-2008-06-13</cuelib-version>
    <jgoodies-forms-version>1.9.0</jgoodies-forms-version>
    <jgoodies-looks-version>2.7.0</jgoodies-looks-version>
    <sevenzip-version>9.20-2.00beta</sevenzip-version>
    <twelvemonkeys-imageio-version>3.3.2</twelvemonkeys-imageio-version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.external-resources>${project.basedir}/src/main/external-resources</project.external-resources>
    <project.binaries>${project.basedir}/target/bin</project.binaries>
    <project.binaries-base>http://universalmediaserver.com/svn/binaries</project.binaries-base>
    <binary-revision>71</binary-revision>
    <maven-javadoc-plugin-version>3.0.0</maven-javadoc-plugin-version>
    <git-commit-id-plugin-version>2.2.4</git-commit-id-plugin-version>
    <maven-assembly-plugin-version>3.1.0</maven-assembly-plugin-version>
    <maven-enforcer-plugin-version>1.4.1</maven-enforcer-plugin-version>
    <logback-version>1.2.3</logback-version>
    <surefire-version>2.20</surefire-version>
    <jna-version>4.4.0</jna-version>
    <makensis-bin>${project.external-resources}/third-party/nsis/makensis.exe</makensis-bin>
  </properties>
  <pluginRepositories>
    <pluginRepository>
      <id>ossrh</id>
      <name>Sonatype OSS Repository</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <layout>default</layout>
    </pluginRepository>
  </pluginRepositories>
  <repositories>
    <repository>
      <id>4thline-repo</id>
      <url>http://4thline.org/m2</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>jaudiotagger-repository</id>
      <url>https://dl.bintray.com/ijabz/maven</url>
    </repository>
  </repositories>
  <dependencies>
    <dependency>
      <groupId>org.apache-extras.beanshell</groupId>
      <artifactId>bsh</artifactId>
      <version>2.0b6</version>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.2.2</version>
    </dependency>
    <dependency>
      <groupId>commons-configuration</groupId>
      <artifactId>commons-configuration</artifactId>
      <version>1.10</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.7</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.4.196</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback-version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>${logback-version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.2</version>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty</artifactId>
      <version>3.10.6.Final</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.rometools</groupId>
      <artifactId>rome</artifactId>
      <version>1.9.0</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>net.coobird</groupId>
      <artifactId>thumbnailator</artifactId>
      <version>[0.4, 0.5)</version>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-bmp</artifactId>
      <version>${twelvemonkeys-imageio-version}</version>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-core</artifactId>
      <version>${twelvemonkeys-imageio-version}</version>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-icns</artifactId>
      <version>${twelvemonkeys-imageio-version}</version>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-iff</artifactId>
      <version>${twelvemonkeys-imageio-version}</version>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-jpeg</artifactId>
      <version>${twelvemonkeys-imageio-version}</version>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-hdr</artifactId>
      <version>${twelvemonkeys-imageio-version}</version>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-metadata</artifactId>
      <version>${twelvemonkeys-imageio-version}</version>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-pcx</artifactId>
      <version>${twelvemonkeys-imageio-version}</version>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-pict</artifactId>
      <version>${twelvemonkeys-imageio-version}</version>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-pnm</artifactId>
      <version>${twelvemonkeys-imageio-version}</version>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-psd</artifactId>
      <version>${twelvemonkeys-imageio-version}</version>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-sgi</artifactId>
      <version>${twelvemonkeys-imageio-version}</version>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-tga</artifactId>
      <version>${twelvemonkeys-imageio-version}</version>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-tiff</artifactId>
      <version>${twelvemonkeys-imageio-version}</version>
    </dependency>
    <dependency>
      <groupId>com.drewnoakes</groupId>
      <artifactId>metadata-extractor</artifactId>
      <version>2.10.1</version>
    </dependency>
    <dependency>
      <groupId>net.jthink</groupId>
      <artifactId>jaudiotagger</artifactId>
      <version>2.2.5</version>
    </dependency>
    <dependency>
      <groupId>com.jgoodies</groupId>
      <artifactId>jgoodies-forms</artifactId>
      <version>${jgoodies-forms-version}</version>
    </dependency>
    <dependency>
      <groupId>com.jgoodies</groupId>
      <artifactId>jgoodies-looks</artifactId>
      <version>${jgoodies-looks-version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.junrar</groupId>
      <artifactId>junrar</artifactId>
      <version>1.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.digitalmediaserver</groupId>
      <artifactId>cuelib-core</artifactId>
      <version>2.0.0</version>
    </dependency>
    <dependency>
      <groupId>xmlwise</groupId>
      <artifactId>xmlwise</artifactId>
      <version>1.2.11</version>
    </dependency>
    <dependency>
      <groupId>net.sf.sevenzipjbinding</groupId>
      <artifactId>sevenzipjbinding</artifactId>
      <version>${sevenzip-version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.sevenzipjbinding</groupId>
      <artifactId>sevenzipjbinding-all-platforms</artifactId>
      <version>${sevenzip-version}</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easytesting</groupId>
      <artifactId>fest-util</artifactId>
      <version>1.2.5</version>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>2.8.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.java.dev.jna</groupId>
      <artifactId>jna</artifactId>
      <version>${jna-version}</version>
    </dependency>
    <dependency>
      <groupId>net.java.dev.jna</groupId>
      <artifactId>jna-platform</artifactId>
      <version>${jna-version}</version>
    </dependency>
    <dependency>
      <groupId>org.fourthline.cling</groupId>
      <artifactId>cling-core</artifactId>
      <version>2.1.1</version>
    </dependency>
    <dependency>
      <groupId>org.fourthline.cling</groupId>
      <artifactId>cling-support</artifactId>
      <version>2.1.1</version>
    </dependency>
    <dependency>
      <groupId>org.seamless</groupId>
      <artifactId>seamless-http</artifactId>
      <version>1.1.1</version>
    </dependency>
    <dependency>
      <groupId>org.seamless</groupId>
      <artifactId>seamless-util</artifactId>
      <version>1.1.1</version>
    </dependency>
    <dependency>
      <groupId>org.seamless</groupId>
      <artifactId>seamless-xml</artifactId>
      <version>1.1.1</version>
    </dependency>
    <dependency>
      <groupId>com.samskivert</groupId>
      <artifactId>jmustache</artifactId>
      <version>1.13</version>
    </dependency>
    <dependency>
      <groupId>su.litvak.chromecast</groupId>
      <artifactId>api-v2</artifactId>
      <version>0.10.1</version>
    </dependency>
    <dependency>
      <groupId>com.ibm.icu</groupId>
      <artifactId>icu4j</artifactId>
      <version>59.1</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>annotations</artifactId>
      <version>3.0.1u2</version>
    </dependency>
    <dependency>
      <groupId>fm.last</groupId>
      <artifactId>coverartarchive-api</artifactId>
      <version>2.1.1</version>
      <exclusions>
        <exclusion>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>jsr305</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-io</groupId>
          <artifactId>commons-io</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.github.oshi</groupId>
      <artifactId>oshi-core</artifactId>
      <version>3.4.3</version>
    </dependency>
  </dependencies>
  <build>
    <defaultGoal>assembly:assembly</defaultGoal>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <targetPath>resources</targetPath>
        <excludes>
          <exclude>project.properties</exclude>
        </excludes>
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <targetPath>resources</targetPath>
        <includes>
          <include>project.properties</include>
        </includes>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>src/main/external-resources/nsis</directory>
        <includes>
          <include>extra.nsh</include>
        </includes>
        <filtering>true</filtering>
        <targetPath>..</targetPath>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <includes>
          <include>project.properties</include>
        </includes>
        <targetPath>resources</targetPath>
        <filtering>true</filtering>
      </testResource>
      <testResource>
        <directory>src/test/resources/net/pms/util</directory>
        <includes>
          <include>*.srt</include>
        </includes>
        <targetPath>net/pms/util</targetPath>
      </testResource>
    </testResources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.digitalmediaserver</groupId>
          <artifactId>crowdin-maven-plugin</artifactId>
          <version>0.4.1</version>
          <configuration>
            <project>${project}</project>
            <languageFilesFolder>${project.basedir}/src/main/resources/i18n</languageFilesFolder>
            <downloadFolder>${project.basedir}/extras/crowdin</downloadFolder>
            <statusFile>${project.basedir}/src/main/resources/languages.properties</statusFile>
            <crowdinServerId>crowdin-dms</crowdinServerId>
            <pushFileName>messages.properties</pushFileName>
            <pushFileTitle>Digital Media Server</pushFileTitle>
            <projectName>Digital Media Server</projectName>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
											org.apache.maven.plugins
										</groupId>
                    <artifactId>
											maven-antrun-plugin
										</artifactId>
                    <versionRange>
											[1.7,)
										</versionRange>
                    <goals>
                      <goal>run</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
											pl.project13.maven
										</groupId>
                    <artifactId>
											git-commit-id-plugin
										</artifactId>
                    <versionRange>
											[${git-commit-id-plugin-version},)
										</versionRange>
                    <goals>
                      <goal>revision</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.digitalmediaserver</groupId>
                    <artifactId>
											crowdin-maven-plugin
										</artifactId>
                    <versionRange>
											[0.1,)
										</versionRange>
                    <goals>
                      <goal>fetch</goal>
                      <goal>push</goal>
                      <goal>build</goal>
                      <goal>apply</goal>
                      <goal>pull</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven-enforcer-plugin-version}</version>
        <executions>
          <execution>
            <id>enforce</id>
            <configuration>
              <rules>
                <dependencyConvergence />
                <requireMavenVersion>
                  <version>3.0.0</version>
                </requireMavenVersion>
              </rules>
            </configuration>
            <goals>
              <goal>enforce</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <version>${git-commit-id-plugin-version}</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>revision</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <dateFormat>yyyy-MM-dd</dateFormat>
          <verbose>false</verbose>
          <generateGitPropertiesFile>false</generateGitPropertiesFile>
          <failOnNoGitDirectory>false</failOnNoGitDirectory>
          <failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.7.0</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
          <testSource>1.7</testSource>
          <testTarget>1.7</testTarget>
          <compilerArgument>${compilerArgument}</compilerArgument>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.10</version>
        <configuration>
          <additionalProjectnatures>
            <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
          </additionalProjectnatures>
          <additionalBuildcommands>
            <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
          </additionalBuildcommands>
          <downloadSources>true</downloadSources>
          <downloadJavadocs>true</downloadJavadocs>
          <wtpversion>1.5</wtpversion>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-idea-plugin</artifactId>
        <version>2.2.1</version>
        <configuration>
          <downloadSources>true</downloadSources>
          <downloadJavadocs>true</downloadJavadocs>
          <dependenciesAsLibraries>true</dependenciesAsLibraries>
          <useFullNames>false</useFullNames>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.6</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.19.1</version>
        <configuration />
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.5</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.9</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>index</report>
              <report>dependencies</report>
              <report>dependency-convergence</report>
              <report>dependency-management</report>
              <report>plugins</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${surefire-version}</version>
        <configuration>
          <showSuccess>false</showSuccess>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin-version}</version>
        <configuration>
          <quiet>true</quiet>
          <tags>
            <tag>
              <name>todo</name>
              <placement>a</placement>
              <head>To Do:</head>
            </tag>
            <tag>
              <name>review</name>
              <placement>a</placement>
              <head>Review:</head>
            </tag>
          </tags>
          <detectJavaApiLink>false</detectJavaApiLink>
          <links>
            <link>http://docs.oracle.com/javase/7/docs/api/</link>
          </links>
          <doclet>org.jboss.apiviz.APIviz</doclet>
          <docletArtifact>
            <groupId>org.jboss.apiviz</groupId>
            <artifactId>apiviz</artifactId>
            <version>1.3.2.GA</version>
          </docletArtifact>
          <useStandardDocletOptions>true</useStandardDocletOptions>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jdepend-maven-plugin</artifactId>
        <version>2.0</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>3.0.5</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.17</version>
        <configuration>
          <configLocation>CheckStyle.xml</configLocation>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>2.7</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.8</version>
        <configuration>
          <linkXref>false</linkXref>
          <sourceEncoding>utf-8</sourceEncoding>
          <minimumTokens>100</minimumTokens>
          <targetJdk>1.7</targetJdk>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.github.jrh3k5</groupId>
        <artifactId>l10n-maven-plugin</artifactId>
        <version>1.4</version>
        <configuration>
          <failBuild>true</failBuild>
          <messagesFile>${project.basedir}/src/main/resources/i18n/messages.properties</messagesFile>
          <translatedMessagesPattern>src/main/resources/i18n/messages*.properties</translatedMessagesPattern>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
  <profiles>
    <profile>
      <id>system-makensis</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <makensis-bin>makensis</makensis-bin>
      </properties>
    </profile>
    <profile>
      <id>windows</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>${maven-assembly-plugin-version}</version>
            <configuration>
              <descriptors>
                <descriptor>${project.basedir}/src/main/assembly/jar-with-dependencies.xml</descriptor>
              </descriptors>
              <archive>
                <manifest>
                  <mainClass>net.pms.PMS</mainClass>
                  <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                </manifest>
              </archive>
            </configuration>
            <executions>
              <execution>
                <id>make-jar-with-dependencies-win</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.8</version>
            <executions>
              <execution>
                <id>process-resources-windows</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target unless="offline">
                    <mkdir dir="${project.binaries}" />
                    <mkdir dir="${project.binaries}/win32" />
                    <mkdir dir="${project.binaries}/win32/avisynth" />
                    <mkdir dir="${project.binaries}/win32/codecs" />
                    <mkdir dir="${project.binaries}/win32/fonts" />
                    <mkdir dir="${project.binaries}/win32/fonts/conf.avail" />
                    <mkdir dir="${project.binaries}/win32/fonts/conf.d" />
                    <mkdir dir="${project.binaries}/win32/interframe" />
                    <mkdir dir="${project.binaries}/win32/mplayer" />
                    <mkdir dir="${project.binaries}/win32/service" />
                    <get dest="${project.binaries}/win32/MediaInfo.dll" src="${project.binaries-base}/MediaInfo.dll?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/MediaInfo64.dll" src="${project.binaries-base}/MediaInfo64.dll?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/MediaInfo-License.html" src="${project.binaries-base}/MediaInfo-License.html?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/LICENSE-dsnative.txt" src="${project.binaries-base}/win32/LICENSE-dsnative.txt?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/LICENSE-mplayer.txt" src="${project.binaries-base}/win32/LICENSE-mplayer.txt?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/builds.txt" src="${project.binaries-base}/win32/builds.txt?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/dcrawMS.exe" src="${project.binaries-base}/win32/dcrawMS.exe?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/ffmpeg.exe" src="${project.binaries-base}/win32/ffmpeg.exe?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/ffmpeg64.exe" src="${project.binaries-base}/win32/ffmpeg64.exe?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/flac.exe" src="${project.binaries-base}/win32/flac.exe?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/mencoder.exe" src="${project.binaries-base}/win32/mencoder.exe?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/mplayer.exe" src="${project.binaries-base}/win32/mplayer.exe?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/tsMuxeR.exe" src="${project.binaries-base}/win32/tsMuxeR-new.exe?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/vcomp100.dll" src="${project.binaries-base}/win32/vcomp100.dll?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/avisynth/avisynth.exe" src="${project.binaries-base}/win32/avisynth/avisynth.exe?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/codecs/drv33260.dll" src="${project.binaries-base}/win32/codecs/drv33260.dll?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/codecs/drv43260.dll" src="${project.binaries-base}/win32/codecs/drv43260.dll?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/codecs/drvc.dll" src="${project.binaries-base}/win32/codecs/drvc.dll?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/codecs/pncrt.dll" src="${project.binaries-base}/win32/codecs/pncrt.dll?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/codecs/sipr3260.dll" src="${project.binaries-base}/win32/codecs/sipr3260.dll?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/codecs/tokr3260.dll" src="${project.binaries-base}/win32/codecs/tokr3260.dll?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/codecs/wma9dmod.dll" src="${project.binaries-base}/win32/codecs/wma9dmod.dll?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/codecs/wmv9dmod.dll" src="${project.binaries-base}/win32/codecs/wmv9dmod.dll?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/codecs/wmvdmod.dll" src="${project.binaries-base}/win32/codecs/wmvdmod.dll?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/fonts/fonts.conf" src="${project.binaries-base}/win32/fonts/fonts.conf?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/fonts/conf.d/10-scale-bitmap-fonts.conf" src="${project.binaries-base}/win32/fonts/conf.d/10-scale-bitmap-fonts.conf?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/fonts/conf.d/20-unhint-small-vera.conf" src="${project.binaries-base}/win32/fonts/conf.d/20-unhint-small-vera.conf?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/fonts/conf.d/30-metric-aliases.conf" src="${project.binaries-base}/win32/fonts/conf.d/30-metric-aliases.conf?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/fonts/conf.d/30-urw-aliases.conf" src="${project.binaries-base}/win32/fonts/conf.d/30-urw-aliases.conf?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/fonts/conf.d/40-nonlatin.conf" src="${project.binaries-base}/win32/fonts/conf.d/40-nonlatin.conf?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/fonts/conf.d/45-latin.conf" src="${project.binaries-base}/win32/fonts/conf.d/45-latin.conf?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/fonts/conf.d/49-sansserif.conf" src="${project.binaries-base}/win32/fonts/conf.d/49-sansserif.conf?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/fonts/conf.d/50-user.conf" src="${project.binaries-base}/win32/fonts/conf.d/50-user.conf?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/fonts/conf.d/51-local.conf" src="${project.binaries-base}/win32/fonts/conf.d/51-local.conf?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/fonts/conf.d/60-latin.conf" src="${project.binaries-base}/win32/fonts/conf.d/60-latin.conf?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/fonts/conf.d/65-fonts-persian.conf" src="${project.binaries-base}/win32/fonts/conf.d/65-fonts-persian.conf?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/fonts/conf.d/65-nonlatin.conf" src="${project.binaries-base}/win32/fonts/conf.d/65-nonlatin.conf?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/fonts/conf.d/69-unifont.conf" src="${project.binaries-base}/win32/fonts/conf.d/69-unifont.conf?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/fonts/conf.d/80-delicious.conf" src="${project.binaries-base}/win32/fonts/conf.d/80-delicious.conf?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/fonts/conf.d/90-synthetic.conf" src="${project.binaries-base}/win32/fonts/conf.d/90-synthetic.conf?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/fonts/conf.d/README" src="${project.binaries-base}/win32/fonts/conf.d/README?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/interframe/InterFrame2.avsi" src="${project.binaries-base}/win32/interframe/InterFrame2.avsi?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/interframe/svpflow1.dll" src="${project.binaries-base}/win32/interframe/svpflow1.dll?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/interframe/svpflow2.dll" src="${project.binaries-base}/win32/interframe/svpflow2.dll?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/mplayer/config" src="${project.binaries-base}/win32/mplayer/config?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/mplayer/input.conf" src="${project.binaries-base}/win32/mplayer/input.conf?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/win32/mplayer/subfont.ttf" src="${project.binaries-base}/win32/mplayer/subfont.ttf?p=${binary-revision}" usetimestamp="true" />
                  </target>
                </configuration>
              </execution>
              <execution>
                <id>prepare-package-windows</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <copy file="${project.basedir}/target/${project.artifactId}-${project.version}-jar-with-dependencies.jar" overwrite="true" tofile="${project.basedir}/target/dms.jar" />
                    <mkdir dir="${project.basedir}/win32/service" />
                    <copy overwrite="true" todir="${project.basedir}/win32/service">
                      <fileset dir="${project.external-resources}/third-party/wrapper" />
                    </copy>
                    <mkdir dir="${project.basedir}/win32/winxp" />
                    <copy file="${project.external-resources}/lib/winxp/jnidispatch.dll" todir="${project.basedir}/win32/winxp" />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>nsis-maven-plugin</artifactId>
            <version>1.0-SNAPSHOT</version>
            <executions>
              <execution>
                <id>build-dms-windows</id>
                <configuration>
                  <makensisBin>${makensis-bin}</makensisBin>
                  <outputFile>${project.build.directory}/DMS.exe</outputFile>
                  <setupScript>${project.external-resources}/nsis/dms.nsi</setupScript>
                </configuration>
                <phase>package</phase>
                <goals>
                  <goal>generate-project</goal>
                  <goal>compile</goal>
                </goals>
              </execution>
              <execution>
                <id>build-setup-windows</id>
                <configuration>
                  <makensisBin>${makensis-bin}</makensisBin>
                  <outputFile>${project.build.directory}/DMS-setup.exe</outputFile>
                  <setupScript>${project.external-resources}/nsis/setup.nsi</setupScript>
                </configuration>
                <phase>package</phase>
                <goals>
                  <goal>generate-project</goal>
                  <goal>compile</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>linux</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>${maven-assembly-plugin-version}</version>
            <executions>
              <execution>
                <id>make-jar-with-dependencies-linux</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <descriptors>
                    <descriptor>${project.basedir}/src/main/assembly/jar-with-dependencies.xml</descriptor>
                  </descriptors>
                  <archive>
                    <manifest>
                      <mainClass>net.pms.PMS</mainClass>
                      <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                    </manifest>
                  </archive>
                </configuration>
              </execution>
              <execution>
                <id>build-dms-linux</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <descriptors>
                    <descriptor>${project.basedir}/src/main/assembly/assembly-linux.xml</descriptor>
                  </descriptors>
                  <archive>
                    <manifest>
                      <mainClass>net.pms.PMS</mainClass>
                      <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                    </manifest>
                  </archive>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.8</version>
            <executions>
              <execution>
                <id>process-resources-linux</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target unless="offline">
                    <mkdir dir="${project.binaries}" />
                    <mkdir dir="${project.binaries}/linux" />
                    <get dest="${project.binaries}/linux/ffmpeg" src="${project.binaries-base}/linux/ffmpeg?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/linux/ffmpeg64" src="${project.binaries-base}/linux/ffmpeg64?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/linux/tsMuxeR" src="${project.binaries-base}/linux/tsMuxeR-new?p=${binary-revision}" usetimestamp="true" />
                    <get dest="${project.binaries}/linux/tsMuxeR_license.txt" src="${project.binaries-base}/linux/tsMuxeR_licence.txt?p=${binary-revision}" usetimestamp="true" />
                  </target>
                </configuration>
              </execution>
              <execution>
                <id>copy-jar-with-dependencies-linux</id>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <copy file="${project.basedir}/target/${project.artifactId}-${project.version}-jar-with-dependencies.jar" overwrite="true" tofile="${project.basedir}/target/dms.jar" />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>osx-java7</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <version>${maven-enforcer-plugin-version}</version>
            <executions>
              <execution>
                <id>enforce-java</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireJavaVersion>
                      <version>[1.7.0-80,1.7.0-200]</version>
                    </requireJavaVersion>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.8</version>
            <executions>
              <execution>
                <id>process-resources-osx-java-7</id>
                <phase>test</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <mkdir dir="${project.binaries}" />
                    <mkdir dir="${project.binaries}/osx" />
                    <get dest="${project.binaries}/osx/dcraw" src="${project.binaries-base}/osx/dcraw" usetimestamp="true" />
                    <get dest="${project.binaries}/osx/ffmpeg" src="${project.binaries-base}/osx/ffmpeg" usetimestamp="true" />
                    <get dest="${project.binaries}/osx/flac" src="${project.binaries-base}/osx/flac" usetimestamp="true" />
                    <get dest="${project.binaries}/osx/libmediainfo.dylib" src="${project.binaries-base}/osx/libmediainfo.dylib" usetimestamp="true" />
                    <get dest="${project.binaries}/osx/MediaInfo-License.html" src="${project.binaries-base}/MediaInfo-License.html" usetimestamp="true" />
                    <get dest="${project.binaries}/osx/mencoder" src="${project.binaries-base}/osx/mencoder" usetimestamp="true" />
                    <get dest="${project.binaries}/osx/mplayer" src="${project.binaries-base}/osx/mplayer" usetimestamp="true" />
                    <get dest="${project.binaries}/osx/tsMuxeR" src="${project.binaries-base}/osx/tsMuxeR-new" usetimestamp="true" />
                    <chmod dir="${project.binaries}/osx" includes="*" perm="a+x" />
                  </target>
                </configuration>
              </execution>
              <execution>
                <id>prepare-package-osx-java-7</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <mkdir dir="${project.build.directory}/${project.build.finalName}-distribution" />
                    <exec executable="/usr/bin/osascript">
                      <arg value="-e" />
                      <arg value="tell application &quot;Finder&quot;" />
                      <arg value="-e" />
                      <arg value="set src to POSIX file &quot;/Applications&quot;" />
                      <arg value="-e" />
                      <arg value="set dest to POSIX file &quot;${project.build.directory}/${project.build.finalName}-distribution&quot;" />
                      <arg value="-e" />
                      <arg value="make new alias file to folder src at folder dest" />
                      <arg value="-e" />
                      <arg value="end tell" />
                    </exec>
                  </target>
                </configuration>
              </execution>
              <execution>
                <id>package app</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <taskdef classname="com.oracle.appbundler.AppBundlerTask" classpath="${basedir}/src/main/external-resources/lib/appbundler-1.3.DMS.jar" name="bundleapp" />
                    <bundleapp applicationCategory="public.app-category.entertainment" displayname="${project.name}" executableName="DMS" icon="${project.basedir}/src/main/resources/images/logo.icns" identifier="net.pms.PMS" mainclassname="net.pms.PMS" name="${project.name}" outputdirectory="${project.build.directory}/${project.build.finalName}-distribution" shortversion="${project.version.short}" version="${project.version}" workingdirectory="$APP_ROOT/Contents/Resources">
                      <classpath file="${project.build.directory}/${project.build.finalName}-jar-with-dependencies.jar" />
                      <option value="-Xmx768M" />
                      <option value="-Xss16M" />
                      <option value="-Dfile.encoding=UTF-8" />
                      <option value="-Djava.net.preferIPv4Stack=true" />
                      <option value="-Xdock:name=Digital Media Server" />
                    </bundleapp>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>${maven-assembly-plugin-version}</version>
            <executions>
              <execution>
                <id>make-jar-with-dependencies-osx-java-7</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <descriptors>
                    <descriptor>${project.basedir}/src/main/assembly/jar-with-dependencies.xml</descriptor>
                  </descriptors>
                  <archive>
                    <manifest>
                      <mainClass>net.pms.PMS</mainClass>
                      <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                    </manifest>
                  </archive>
                </configuration>
              </execution>
              <execution>
                <id>make-assembly-osx-java-7</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <descriptors>
                    <descriptor>${project.basedir}/src/main/assembly/assembly-osx_java7_8.xml</descriptor>
                  </descriptors>
                  <archive>
                    <manifest>
                      <mainClass>net.pms.PMS</mainClass>
                      <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                    </manifest>
                  </archive>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>osx-java8</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <version>${maven-enforcer-plugin-version}</version>
            <executions>
              <execution>
                <id>enforce-java</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireJavaVersion>
                      <version>[1.8.0-51,1.8.0-200]</version>
                    </requireJavaVersion>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.8</version>
            <executions>
              <execution>
                <id>process-resources-osx-java-8</id>
                <phase>test</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <mkdir dir="${project.binaries}" />
                    <mkdir dir="${project.binaries}/osx" />
                    <get dest="${project.binaries}/osx/dcraw" src="${project.binaries-base}/osx/dcraw" usetimestamp="true" />
                    <get dest="${project.binaries}/osx/ffmpeg" src="${project.binaries-base}/osx/ffmpeg" usetimestamp="true" />
                    <get dest="${project.binaries}/osx/flac" src="${project.binaries-base}/osx/flac" usetimestamp="true" />
                    <get dest="${project.binaries}/osx/libmediainfo.dylib" src="${project.binaries-base}/osx/libmediainfo.dylib" usetimestamp="true" />
                    <get dest="${project.binaries}/osx/MediaInfo-License.html" src="${project.binaries-base}/MediaInfo-License.html" usetimestamp="true" />
                    <get dest="${project.binaries}/osx/mencoder" src="${project.binaries-base}/osx/mencoder" usetimestamp="true" />
                    <get dest="${project.binaries}/osx/mplayer" src="${project.binaries-base}/osx/mplayer" usetimestamp="true" />
                    <get dest="${project.binaries}/osx/tsMuxeR" src="${project.binaries-base}/osx/tsMuxeR-new" usetimestamp="true" />
                    <chmod dir="${project.binaries}/osx" includes="*" perm="a+x" />
                  </target>
                </configuration>
              </execution>
              <execution>
                <id>prepare-package-osx-java-8</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <mkdir dir="${project.build.directory}/${project.build.finalName}-distribution" />
                    <exec executable="/usr/bin/osascript">
                      <arg value="-e" />
                      <arg value="tell application &quot;Finder&quot;" />
                      <arg value="-e" />
                      <arg value="set src to POSIX file &quot;/Applications&quot;" />
                      <arg value="-e" />
                      <arg value="set dest to POSIX file &quot;${project.build.directory}/${project.build.finalName}-distribution&quot;" />
                      <arg value="-e" />
                      <arg value="make new alias file to folder src at folder dest" />
                      <arg value="-e" />
                      <arg value="end tell" />
                    </exec>
                  </target>
                </configuration>
              </execution>
              <execution>
                <id>package app</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <taskdef classname="com.oracle.appbundler.AppBundlerTask" classpath="${basedir}/src/main/external-resources/lib/appbundler-1.3.DMS.jar" name="bundleapp" />
                    <bundleapp applicationCategory="public.app-category.entertainment" displayname="${project.name}" executableName="DMS" icon="${project.basedir}/src/main/resources/images/logo.icns" identifier="net.pms.PMS" mainclassname="net.pms.PMS" name="${project.name}" outputdirectory="${project.build.directory}/${project.build.finalName}-distribution" shortversion="${project.version.short}" version="${project.version}" workingdirectory="$APP_ROOT/Contents/Resources">
                      <classpath file="${project.build.directory}/${project.build.finalName}-jar-with-dependencies.jar" />
                      <option value="-Xmx768M" />
                      <option value="-Xss16M" />
                      <option value="-Dfile.encoding=UTF-8" />
                      <option value="-Djava.net.preferIPv4Stack=true" />
                      <option value="-Xdock:name=Digital Media Server" />
                    </bundleapp>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>${maven-assembly-plugin-version}</version>
            <executions>
              <execution>
                <id>make-jar-with-dependencies-osx-java-8</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <descriptors>
                    <descriptor>${project.basedir}/src/main/assembly/jar-with-dependencies.xml</descriptor>
                  </descriptors>
                  <archive>
                    <manifest>
                      <mainClass>net.pms.PMS</mainClass>
                      <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                    </manifest>
                  </archive>
                </configuration>
              </execution>
              <execution>
                <id>make-assembly-osx-java-8</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <descriptors>
                    <descriptor>${project.basedir}/src/main/assembly/assembly-osx_java7_8.xml</descriptor>
                  </descriptors>
                  <archive>
                    <manifest>
                      <mainClass>net.pms.PMS</mainClass>
                      <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                    </manifest>
                  </archive>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>windows-jar</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>env.HUDSON_URL</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>${maven-assembly-plugin-version}</version>
            <executions>
              <execution>
                <id>make-jar-with-dependencies-win</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <descriptors>
                    <descriptor>${project.basedir}/src/main/assembly/jar-with-dependencies.xml</descriptor>
                  </descriptors>
                  <archive>
                    <manifest>
                      <mainClass>net.pms.PMS</mainClass>
                      <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                    </manifest>
                  </archive>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.8</version>
            <executions>
              <execution>
                <id>copy-jar-with-dependencies-linux</id>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <copy file="${project.basedir}/target/${project.artifactId}-${project.version}-jar-with-dependencies.jar" overwrite="true" tofile="${project.basedir}/target/dms.jar" />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>run-from-eclipse</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.6.0</version>
            <executions>
              <execution>
                <phase>test</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <classpathScope>test</classpathScope>
                  <mainClass>net.pms.PMS</mainClass>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
