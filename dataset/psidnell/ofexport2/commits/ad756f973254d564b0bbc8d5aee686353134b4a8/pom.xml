<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.psidnell</groupId>
	<artifactId>ofexport-v2</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<jacksonVersion>2.4.3</jacksonVersion>
		<antlr-version>4.3</antlr-version>
		<antlr-generated-code-package>org.psidnell.omnifocus.expr</antlr-generated-code-package>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.psidnell</groupId>
			<artifactId>osascript-binding</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jacksonVersion}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jacksonVersion}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
			<version>${jacksonVersion}</version>
		</dependency>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.7</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.7</version>
		</dependency>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr4-runtime</artifactId>
			<version>${antlr-version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<version>1.8.1</version>
				<executions>
					<execution>
						<goals>
							<goal>assemble</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
				<configuration>
					<programs>
						<program>
							<mainClass>org.psidnell.omnifocus.Main</mainClass>
							<id>ofexport2</id>
						</program>
					</programs>
					<platforms>
						<platform>unix</platform>
					</platforms>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.antlr</groupId>
				<artifactId>antlr4-maven-plugin</artifactId>
				<version>${antlr-version}</version>
				<executions>
					<execution>
						<id>antlr</id>
						<goals>
							<goal>antlr4</goal>
						</goals>
						<phase>generate-sources</phase>
					</execution>
				</executions>
				<configuration>
					<!-- The Antlr plugin can't seem to generate source with the requested 
						package AND put it in a directory that matches that package. The plugin does 
						have an option to specify the directory you want the files generated to - 
						but it then adds that as a source path to maven - which won't be the package 
						root. It will build and test OK but if you build an eclipse project from 
						the pom it will give errors for all the misplaced files. I resolve this with 
						other plugins below -->
					<arguments>
						<argument>-package</argument>
						<argument>${antlr-generated-code-package}</argument>
					</arguments>
				</configuration>
			</plugin>
			<plugin>
				<!-- Derive the antlr path from the antlr package variable. -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>regex-property</id>
						<goals>
							<goal>regex-property</goal>
						</goals>
						<configuration>
							<name>antlr-generated-code-path</name>
							<value>${antlr-generated-code-package}</value>
							<regex>\.</regex>
							<replacement>\/</replacement>
							<failIfNoMatch>true</failIfNoMatch>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- Move the generated antlr files to the directory that matches their 
					package. -->
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<echo
									message="package: ${antlr-generated-code-package} path:${antlr-generated-code-path}" />
								<move
									todir="${project.build.directory}/generated-sources/antlr4/${antlr-generated-code-path}">
									<fileset dir="${project.build.directory}/generated-sources/antlr4">
										<include name="*.java" />
										<include name="*.tokens" />
									</fileset>
								</move>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.6.1</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>${project.build.directory}/generated-sources/antlr4</directory>
							<includes>
								<include>**/*.java</include>
								<include>**/*.tokens</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.7,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											build-helper-maven-plugin
										</artifactId>
										<versionRange>
											[1.8,)
										</versionRange>
										<goals>
											<goal>regex-property</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>