<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>com.blurtty.peregrine</groupId>
  <artifactId>web</artifactId>
  <version>develop-SNAPSHOT</version>

  <url>http://localhost:8080</url>

  <name>Peregrine Exchange</name>
  <description>The complete Peregrine Exchange platform and web front-end.</description>
  <inceptionYear>2013</inceptionYear>

  <!-- Set the version levels for linked dependencies -->
  <properties>
    <dropwizard.version>0.6.1</dropwizard.version>
  </properties>

  <build>

    <!-- Shade plugin is required to make a "slim" JAR -->
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.10</version>
        <configuration>
          <enableRulesSummary>false</enableRulesSummary>
          <configLocation>checkstyle.xml</configLocation>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>1.6</version>
        <configuration>
          <createDependencyReducedPom>true</createDependencyReducedPom>
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
              </excludes>
            </filter>
          </filters>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>org.multibit.exchange.infrastructure.dropwizard.PeregrineWebService</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <dependencies>

    <!-- Dropwizard framework -->
    <!-- Core functionality -->
    <dependency>
      <groupId>com.yammer.dropwizard</groupId>
      <artifactId>dropwizard-core</artifactId>
      <version>${dropwizard.version}</version>
    </dependency>

    <!-- Authentication support -->
    <dependency>
      <groupId>com.yammer.dropwizard</groupId>
      <artifactId>dropwizard-auth</artifactId>
      <version>${dropwizard.version}</version>
    </dependency>

    <!-- HTML Freemarker views support -->
    <dependency>
      <groupId>com.yammer.dropwizard</groupId>
      <artifactId>dropwizard-views</artifactId>
      <version>${dropwizard.version}</version>
    </dependency>

    <!-- REST client support for upstream data -->
    <dependency>
      <groupId>com.yammer.dropwizard</groupId>
      <artifactId>dropwizard-client</artifactId>
      <version>${dropwizard.version}</version>
    </dependency>

    <!-- Use Scribe for OAuth2 -->
    <dependency>
      <groupId>org.scribe</groupId>
      <artifactId>scribe</artifactId>
      <version>1.3.3</version>
    </dependency>

    <!-- Use LMAX disruptor for high-speed event sourcing -->
    <dependency>
      <groupId>com.lmax</groupId>
      <artifactId>disruptor</artifactId>
      <version>3.0.0</version>
    </dependency>

    <!-- Use AXON framework for commands/events/eventbus/eventstore -->
    <dependency>
      <groupId>org.axonframework</groupId>
      <artifactId>axon-core</artifactId>
      <version>2.0.1</version>
    </dependency>

    <dependency>
      <groupId>org.axonframework</groupId>
      <artifactId>axon-mongo</artifactId>
      <version>2.0.1</version>
    </dependency>

    <dependency>
      <groupId>org.axonframework</groupId>
      <artifactId>axon-amqp</artifactId>
      <version>2.0.1</version>
    </dependency>

    <dependency>
      <groupId>org.axonframework</groupId>
      <artifactId>axon-distributed-commandbus</artifactId>
      <version>2.0.1</version>
    </dependency>

    <dependency>
      <groupId>org.axonframework</groupId>
      <artifactId>axon-integration</artifactId>
      <version>2.0.1</version>
    </dependency>

    <dependency>
      <groupId>org.axonframework</groupId>
      <artifactId>axon-monitoring-jmx</artifactId>
      <version>2.0.1</version>
    </dependency>

    <!-- MongoDB -->
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>mongo-java-driver</artifactId>
      <version>2.7.2</version>
    </dependency>
    <dependency>
      <groupId>org.mongojack</groupId>
      <artifactId>mongojack</artifactId>
      <version>2.0.0-RC1</version>
    </dependency>

    <!-- Guice for Jersey-friendly dependency injection -->
    <dependency>
      <groupId>com.hubspot.dropwizard</groupId>
      <artifactId>dropwizard-guice</artifactId>
      <version>0.6.1.6</version>
    </dependency>

    <!-- OpenID heavy lifting -->
    <dependency>
      <groupId>org.openid4java</groupId>
      <artifactId>openid4java</artifactId>
      <version>0.9.7</version>
      <exclusions>
        <exclusion>
          <artifactId>guice</artifactId>
          <groupId>com.google.inject</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Date time presentation for social media -->
    <dependency>
      <groupId>org.ocpsoft.prettytime</groupId>
      <artifactId>prettytime</artifactId>
      <version>2.1.2.Final</version>
    </dependency>

    <!-- TEST DEPENDENCIES -->

    <!-- Standard unit testing -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>

    <!-- Provides fake data for domain objects -->
    <dependency>
      <groupId>com.github.javafaker</groupId>
      <artifactId>javafaker</artifactId>
      <version>0.2</version>
      <scope>test</scope>
    </dependency>

    <!-- Embedded MongoDB for functional testing -->
    <dependency>
      <groupId>de.flapdoodle.embed</groupId>
      <artifactId>de.flapdoodle.embed.mongo</artifactId>
      <version>1.28</version>
      <!--<scope>test</scope>-->
    </dependency>

    <!-- Resource testing support -->
    <dependency>
      <groupId>com.yammer.dropwizard</groupId>
      <artifactId>dropwizard-testing</artifactId>
      <version>${dropwizard.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

</project>
