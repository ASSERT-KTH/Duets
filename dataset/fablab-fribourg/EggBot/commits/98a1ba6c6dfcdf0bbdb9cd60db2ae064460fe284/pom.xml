<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>net.collaud.fablab</groupId>
	<artifactId>GCodeSender</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>GCodeSender</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<mainClass>net.collaud.fablab.gcodesender.MainApp</mainClass>
	</properties>

	<organization>
		<name>Fablab-fribourg</name>
	</organization>
	<developers>
		<developer>
			<name>Gaetan Collaud</name>
			<email>gaetancollaud@gmail.com</email>
			<url>http://collaud.net</url>
		</developer>
	</developers>
	
	<dependencies>
		<dependency>
			<groupId>org.scream3r</groupId>
			<artifactId>jssc</artifactId>
			<version>2.8.0</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.2</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>4.1.4.RELEASE</version>
			<type>jar</type>
		</dependency>
	 <dependency>
	  <groupId>junit</groupId>
	  <artifactId>junit</artifactId>
	  <version>4.10</version>
	  <scope>test</scope>
	 </dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>unpack-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<excludeScope>system</excludeScope>
							<excludeGroupIds>junit,org.mockito,org.hamcrest</excludeGroupIds>
							<outputDirectory>${project.build.directory}/classes</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<id>unpack-dependencies</id>
                        
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>${java.home}/../bin/javafxpackager</executable>
							<arguments>
								<argument>-createjar</argument>
								<argument>-nocss2bin</argument>
								<argument>-appclass</argument>
								<argument>${mainClass}</argument>
								<argument>-srcdir</argument>
								<argument>${project.build.directory}/classes</argument>
								<argument>-outdir</argument>
								<argument>${project.build.directory}</argument>
								<argument>-outfile</argument>
								<argument>${project.build.finalName}.jar</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>default-cli</id>
						<goals>
							<goal>exec</goal>                            
						</goals>
						<configuration>
							<executable>${java.home}/bin/java</executable>
							<commandlineArgs>${runfx.args}</commandlineArgs>
						</configuration>
					</execution>
				</executions>  
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.16</version>
				<configuration>
					<additionalClasspathElements>
						<additionalClasspathElement>${java.home}/lib/jfxrt.jar</additionalClasspathElement>
					</additionalClasspathElements>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<compilerArguments>
						<bootclasspath>${sun.boot.class.path}${path.separator}${java.home}/lib/jfxrt.jar</bootclasspath>
					</compilerArguments>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
