<?xml version="1.0" encoding="UTF-8"?>
<!-- 
   Copyright 2010-present Local Matters, Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.localmatters</groupId>
    <artifactId>lesscss4j</artifactId>
    <packaging>jar</packaging>
    <name>Less CSS for Java</name>
    <version>2.0.1-SNAPSHOT</version>
    <description>
        Java-based "compiler" for the  Less CSS language.  Compiles LESS files
        into standard CSS and provides utility classes for integration with
        existing web application.
    </description>

    <scm>
        <url>http://github.com/lmi-open/lesscss4j</url>
        <connection>scm:git:https://github.com/lmi-open/lesscss4j.git</connection>
        <developerConnection>scm:git:https://github.com/lmi-open/lesscss4j.git</developerConnection>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring.version>2.5.6</spring.version>
    </properties>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>dhay</id>
            <name>David Hay</name>
            <email>hay_dave@yahoo.com</email>
        </developer>
    </developers>

    <distributionManagement>
        <repository>
            <id>lm-releases</id>
            <name>Local Matters Repository</name>
            <url>http://newbuild.corp.localmatters.com/nexus/content/repositories/releases</url>
        </repository>
        <snapshotRepository>
            <id>lm-snapshots</id>
            <name>Local Matters Repository</name>
            <url>http://newbuild.corp.localmatters.com/nexus/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <dependencies>
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr-runtime</artifactId>
            <version>3.2</version>
            <exclusions>
                <exclusion>
                    <groupId>org.antlr</groupId>
                    <artifactId>stringtemplate</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.4</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.4</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
            <optional>true</optional>
        </dependency>

        <!-- Test Libraries ================================================-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <version>2.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <instrumentation>
                        <ignores>
                            <ignore>org.apache.commons.logging.*</ignore>
                        </ignores>
                    </instrumentation>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- Copy the ANTLR grammar from the source to target and insert our custom Java code into it.
                         This allows the grammer to remain language agnostic and makes it easier to test and debug
                         in ANTLRWorks -->
                    <tasks>
                        <copy file="src/main/antlr3/org/localmatters/lesscssj4/parser/LessCss.g" tofile="target/antlr3/org/localmatters/lesscss4j/parser/LessCss.g" />

                        <replace file="target/antlr3/org/localmatters/lesscss4j/parser/LessCss.g" encoding="UTF-8" token="//@@JAVA@@">
                            <replacevalue><![CDATA[
@header {
package org.localmatters.lesscss4j.parser.antlr;

import org.localmatters.lesscss4j.error.ErrorHandler;
import org.localmatters.lesscss4j.error.ErrorUtils;
}
@lexer::header {
package org.localmatters.lesscss4j.parser.antlr;
}
@members {
    private ErrorHandler _errorHandler;
    private int _errorCount = 0;

    public void setErrorHandler(ErrorHandler errorHandler) {
        _errorHandler = errorHandler;
    }

    public int getErrorCount() {
        return _errorCount;
    }

    @Override
    public void displayRecognitionError(String[] tokenNames, RecognitionException e) {
        _errorCount++;
        ErrorUtils.handleError(_errorHandler, e, this);
    }
}
                            ]]></replacevalue>
                        </replace>
                    </tasks>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr3-maven-plugin</artifactId>
                <version>3.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>antlr</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <sourceDirectory>target/antlr3</sourceDirectory>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.2.1</version>
                <configuration>
                    <descriptors>
                        <descriptor>src/main/assembly/bin.xml</descriptor>
                    </descriptors>
                    <tarLongFileMode>gnu</tarLongFileMode>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attached</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.3.1</version>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.1.0</version>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <instructions>
                        <Import-Package>
                            org.antlr*;version="3.2",
                            org.springframework*; resolution:=optional;version="[2.5,4.0)",
                            javax.servlet*; resolution:=optional,
                            *
                        </Import-Package>
                    </instructions>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.3</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.4</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <sourceEncoding>utf-8</sourceEncoding>
                    <targetJdk>1.5</targetJdk>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.7</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>1.0-beta-1</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>javancss-maven-plugin</artifactId>
                <version>2.0-beta-2</version>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <!-- Profile that builds expanded assembly directory useful for testing the assembly process -->
        <profile>
            <id>test-assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>test-assembly</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>directory-inline</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    
</project>
