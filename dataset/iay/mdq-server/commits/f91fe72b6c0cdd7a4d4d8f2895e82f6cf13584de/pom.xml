<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>net.shibboleth</groupId>
        <artifactId>parent-v3</artifactId>
        <version>9</version>
    </parent>

    <groupId>uk.org.iay.mdq</groupId>
    <artifactId>mdq-server</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Metadata Query Server</name>
    <description>
        An implementation of the Metadata Query Protocol, implemented using
        Spring Boot and the Shibboleth metadata aggregator framework.
    </description>
    <url>https://github.com/iay/mdq-server</url>
    <inceptionYear>2014</inceptionYear>

    <properties>
        <mda.version>0.9.0</mda.version>
        <ukf-mda.version>0.9.0</ukf-mda.version>
        <java-support.version>7.2.0</java-support.version>
        <spring-extensions.version>5.2.0</spring-extensions.version>
        <spring.boot.version>1.3.2.RELEASE</spring.boot.version>

        <checkstyle.configLocation>checkstyle.xml</checkstyle.configLocation>
        <start-class>uk.org.iay.mdq.server.Application</start-class>
    </properties>

    <dependencies>

        <!-- Compile dependencies -->

        <dependency>
            <groupId>net.shibboleth.metadata</groupId>
            <artifactId>aggregator-pipeline</artifactId>
            <version>${mda.version}</version>
        </dependency>
        <dependency>
            <groupId>net.shibboleth.utilities</groupId>
            <artifactId>java-support</artifactId>
            <version>${java-support.version}</version>
        </dependency>
        <dependency>
            <groupId>uk.org.ukfederation</groupId>
            <artifactId>ukf-mda</artifactId>
            <version>${ukf-mda.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>javax.json</groupId>
            <artifactId>javax.json-api</artifactId>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>
        <dependency>
            <groupId>org.cryptacular</groupId>
            <artifactId>cryptacular</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-actuator</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>

        <!-- Provided Dependencies -->

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <!--
                Override version from parent project for
                Jetty 9 and Spring Boot 1.2.
            -->
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- Runtime dependencies -->

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>${slf4j.groupId}</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>net.shibboleth.ext</groupId>
            <artifactId>spring-extensions</artifactId>
            <version>${spring-extensions.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>${httpclient.groupId}</groupId>
            <artifactId>httpclient</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <version>${spring.boot.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring.boot.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
            <version>${spring.boot.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.eclipse.jetty.orbit</groupId>
                    <artifactId>javax.servlet</artifactId>
                </exclusion>
            </exclusions>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <version>${spring.boot.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-groovy-templates</artifactId>
            <version>${spring.boot.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- Test dependencies -->

        <dependency>
            <groupId>net.shibboleth.metadata</groupId>
            <artifactId>aggregator-pipeline</artifactId>
            <version>${mda.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${spring.groupId}</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <extensions>

            <!--
                Enable deployment using an external SSH executable.
            -->
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh-external</artifactId>
                <version>2.10</version>
            </extension>
        </extensions>

        <plugins>
            <!--
                Checkstyle configuration for checkstyle:* goals called directly
                from the command line.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <configLocation>${checkstyle.configLocation}</configLocation>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <!--
                Ask Spring Boot to enhance the resulting .jar so that it is
                directly executable.
            -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot.version}</version>
                <configuration>
                    <arguments>
                        <argument>--spring.profiles.active=${spring.profiles.active}</argument>
                    </arguments>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <dependencies>
                    <!-- add optional Markdown processor -->
                    <dependency>
                        <groupId>org.apache.maven.doxia</groupId>
                        <artifactId>doxia-module-markdown</artifactId>
                        <version>1.6</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <spring.profiles.active>dev</spring.profiles.active>
            </properties>
        </profile>
        
        <profile>
            <id>prod</id>
            <properties>
                <spring.profiles.active>prod,sign</spring.profiles.active>
            </properties>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>shib-release</id>
            <url>https://build.shibboleth.net/nexus/content/groups/public</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>shib-snapshot</id>
            <url>https://build.shibboleth.net/nexus/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
    </repositories>

    <scm>
        <connection>scm:git:https://github.com/iay/mdq-server.git</connection>
        <developerConnection>scm:git:ssh:git@github.com:iay/mdq-server.git</developerConnection>
        <url>https://github.com/iay/mdq-server</url>
    </scm>
    
    <developers>
        <developer>
            <id>iay</id>
            <name>Ian Young</name>
            <organizationUrl>http://iay.org.uk/</organizationUrl>
            <timezone>0</timezone>
        </developer>
    </developers>

    <distributionManagement>
        <site>
            <id>website</id>
            <url>scpexe://iay@iay.org.uk/home/iay/mdq-server.projects.iay.org.uk/</url>
        </site>
    </distributionManagement>

</project>
