<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<!-- Getting the KaVE infrastructure up an running is as easy as adding 
		a Maven dependency to your project. Starting from this minimal example, it 
		should be very easy for you to adapt it to your specific needs. -->

	<!-- These are the coordinates that represent your project. Change these. -->
	<groupId>cc.kave.users</groupId>
	<artifactId>examples</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<!-- All you need to work with our datasetis to add the following dependency. 
		It will be fetched from the central repository, there is no need to configure 
		additional package sources. -->

	<!-- The remaining settings in this file are basic configuration options. -->

	<!-- ...sets the build to use UTF8. -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<!-- ...configures the Maven version and will build a Jar file. -->
	<modelVersion>4.0.0</modelVersion>
	<packaging>jar</packaging>

	<!-- ...configures Maven to use Java 8. -->
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.6.1</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<dependencies>
		<!-- all you need to read data is the KaVE.Commons dependency ... -->
		<dependency>
			<groupId>cc.kave</groupId>
			<artifactId>cc.kave.commons</artifactId>
			<version>0.0.4</version>
		</dependency>
		<!-- ... or the rsse.calls dependency for everything related to RSSE -->
		<dependency>
			<groupId>cc.kave</groupId>
			<artifactId>cc.kave.rsse.calls</artifactId>
			<version>0.0.4</version>
		</dependency>
	</dependencies>
</project>