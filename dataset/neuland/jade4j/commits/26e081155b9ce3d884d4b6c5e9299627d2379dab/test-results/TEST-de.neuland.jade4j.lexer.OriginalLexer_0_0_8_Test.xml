<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.602" tests="100" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/local/openjdk-8/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.262-b10"/>
    <property name="animal.sniffer.skip" value="true"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/tmp/tmp1m9_7839/jade4j"/>
    <property name="maven.javadoc.skip" value="true"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="source.skip" value="true"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/tmp/tmp1m9_7839/jade4j"/>
    <property name="java.runtime.version" value="1.8.0_262-b10"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/local/openjdk-8/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="license.skip" value="true"/>
    <property name="maven.conf" value="/usr/share/maven/conf"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="maven.test.failure.ignore" value="true"/>
    <property name="os.version" value="4.15.0-109-generic"/>
    <property name="library.jansi.path" value="/usr/share/maven/lib/jansi-native"/>
    <property name="user.home" value="/home/jdbl"/>
    <property name="user.timezone" value="Etc/UTC"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="jdbl"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.6.0.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/local/openjdk-8/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher test -e --fail-never -ntp -Dmaven.test.failure.ignore=true -B -Dmaven.javadoc.skip=true -Drat.skip=true -Danimal.sniffer.skip=true -Dmaven.javadoc.skip=true -Dlicense.skip=true -Dsource.skip=true"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_262"/>
    <property name="java.ext.dirs" value="/usr/local/openjdk-8/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/local/openjdk-8/jre/lib/resources.jar:/usr/local/openjdk-8/jre/lib/rt.jar:/usr/local/openjdk-8/jre/lib/sunrsasign.jar:/usr/local/openjdk-8/jre/lib/jsse.jar:/usr/local/openjdk-8/jre/lib/jce.jar:/usr/local/openjdk-8/jre/lib/charsets.jar:/usr/local/openjdk-8/jre/lib/jfr.jar:/usr/local/openjdk-8/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="rat.skip" value="true"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="shouldLexJadeToTokens[inheritance.extend.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.059"/>
  <testcase name="shouldLexJadeToTokens[blocks-in-blocks.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.004"/>
  <testcase name="shouldLexJadeToTokens[inheritance.defaults.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.008"/>
  <testcase name="shouldLexJadeToTokens[include-only-text.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.005"/>
  <testcase name="shouldLexJadeToTokens[doctype.custom.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0"/>
  <testcase name="shouldLexJadeToTokens[attrs.js.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.03"/>
  <testcase name="shouldLexJadeToTokens[include.yield.nested.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.003"/>
  <testcase name="shouldLexJadeToTokens[scripts.non-js.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0"/>
  <testcase name="shouldLexJadeToTokens[block-expansion.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.006"/>
  <testcase name="shouldLexJadeToTokens[inheritance.extend.include.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0"/>
  <testcase name="shouldLexJadeToTokens[inheritance.extend.whitespace.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0"/>
  <testcase name="shouldLexJadeToTokens[filters.coffeescript.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0"/>
  <testcase name="shouldLexJadeToTokens[utf8bom.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0"/>
  <testcase name="shouldLexJadeToTokens[filters.markdown.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.008"/>
  <testcase name="shouldLexJadeToTokens[escaping-class-attribute.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.012"/>
  <testcase name="shouldLexJadeToTokens[regression.784.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.003"/>
  <testcase name="shouldLexJadeToTokens[include-extends-of-common-template.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.002"/>
  <testcase name="shouldLexJadeToTokens[filters.cdata.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.005"/>
  <testcase name="shouldLexJadeToTokens[mixins.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.012"/>
  <testcase name="shouldLexJadeToTokens[mixins.rest-args.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.005"/>
  <testcase name="shouldLexJadeToTokens[blocks-in-if.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.008"/>
  <testcase name="shouldLexJadeToTokens[code.iteration.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.016"/>
  <testcase name="shouldLexJadeToTokens[include.script.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.001"/>
  <testcase name="shouldLexJadeToTokens[inheritance.alert-dialog.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.001"/>
  <testcase name="shouldLexJadeToTokens[layout.append.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.029"/>
  <testcase name="shouldLexJadeToTokens[mixin.attrs.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.021"/>
  <testcase name="shouldLexJadeToTokens[inheritance.extend.mixins.block.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0"/>
  <testcase name="shouldLexJadeToTokens[code.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.011"/>
  <testcase name="shouldLexJadeToTokens[layout.prepend.without-block.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.002"/>
  <testcase name="shouldLexJadeToTokens[yield-head.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0"/>
  <testcase name="shouldLexJadeToTokens[layout.append.without-block.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0"/>
  <testcase name="shouldLexJadeToTokens[scripts.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0"/>
  <testcase name="shouldLexJadeToTokens[case-blocks.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0"/>
  <testcase name="shouldLexJadeToTokens[layout.prepend.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0"/>
  <testcase name="shouldLexJadeToTokens[mixin.blocks.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.033"/>
  <testcase name="shouldLexJadeToTokens[blanks.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.002"/>
  <testcase name="shouldLexJadeToTokens[mixin.merge.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.007"/>
  <testcase name="shouldLexJadeToTokens[mixin-at-end-of-file.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.001"/>
  <testcase name="shouldLexJadeToTokens[blockquote.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.003"/>
  <testcase name="shouldLexJadeToTokens[classes.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.003"/>
  <testcase name="shouldLexJadeToTokens[block-code.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.001"/>
  <testcase name="shouldLexJadeToTokens[comments.source.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0"/>
  <testcase name="shouldLexJadeToTokens[custom-filter.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0"/>
  <testcase name="shouldLexJadeToTokens[attrs.interpolation.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0"/>
  <testcase name="shouldLexJadeToTokens[layout.multi.append.prepend.block.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.004"/>
  <testcase name="shouldLexJadeToTokens[nesting.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0"/>
  <testcase name="shouldLexJadeToTokens[attrs-data.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.005"/>
  <testcase name="shouldLexJadeToTokens[inheritance.extend.recursive.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.001"/>
  <testcase name="shouldLexJadeToTokens[vars.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.002"/>
  <testcase name="shouldLexJadeToTokens[block-expansion.shorthands.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.001"/>
  <testcase name="shouldLexJadeToTokens[escape-test.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.002"/>
  <testcase name="shouldLexJadeToTokens[includes-with-ext-js.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.001"/>
  <testcase name="shouldLexJadeToTokens[tag.interpolation.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.005"/>
  <testcase name="shouldLexJadeToTokens[include-with-text-head.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.001"/>
  <testcase name="shouldLexJadeToTokens[filters.stylus.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.006"/>
  <testcase name="shouldLexJadeToTokens[text.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.002"/>
  <testcase name="shouldLexJadeToTokens[include-extends-from-root.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.001"/>
  <testcase name="shouldLexJadeToTokens[single-period.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0"/>
  <testcase name="shouldLexJadeToTokens[text-block.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.002"/>
  <testcase name="shouldLexJadeToTokens[source.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.003"/>
  <testcase name="shouldLexJadeToTokens[xml.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.018"/>
  <testcase name="shouldLexJadeToTokens[yield-title.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0"/>
  <testcase name="shouldLexJadeToTokens[filters.less.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0"/>
  <testcase name="shouldLexJadeToTokens[pre.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0"/>
  <testcase name="shouldLexJadeToTokens[include-filter-stylus.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0"/>
  <testcase name="shouldLexJadeToTokens[doctype.keyword.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.002"/>
  <testcase name="shouldLexJadeToTokens[mixin-hoist.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.014"/>
  <testcase name="shouldLexJadeToTokens[namespaces.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.002"/>
  <testcase name="shouldLexJadeToTokens[escape-chars.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.001"/>
  <testcase name="shouldLexJadeToTokens[intepolated-elements.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.001"/>
  <testcase name="shouldLexJadeToTokens[case.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.002"/>
  <testcase name="shouldLexJadeToTokens[template.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.004"/>
  <testcase name="shouldLexJadeToTokens[quotes.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.001"/>
  <testcase name="shouldLexJadeToTokens[filters-empty.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.002"/>
  <testcase name="shouldLexJadeToTokens[include-only-text-body.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.001"/>
  <testcase name="shouldLexJadeToTokens[html5.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.014"/>
  <testcase name="shouldLexJadeToTokens[attrs.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.017"/>
  <testcase name="shouldLexJadeToTokens[yield-before-conditional.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.018"/>
  <testcase name="shouldLexJadeToTokens[include-with-text.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.002"/>
  <testcase name="shouldLexJadeToTokens[yield.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.007"/>
  <testcase name="shouldLexJadeToTokens[attrs.unescaped.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.002"/>
  <testcase name="shouldLexJadeToTokens[inheritance.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.002"/>
  <testcase name="shouldLexJadeToTokens[includes.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.003"/>
  <testcase name="shouldLexJadeToTokens[interpolation.escape.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.001"/>
  <testcase name="shouldLexJadeToTokens[classes-empty.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.003"/>
  <testcase name="shouldLexJadeToTokens[doctype.default.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.002"/>
  <testcase name="shouldLexJadeToTokens[code.conditionals.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.003"/>
  <testcase name="shouldLexJadeToTokens[code.escape.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.002"/>
  <testcase name="shouldLexJadeToTokens[basic.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.001"/>
  <testcase name="shouldLexJadeToTokens[include-filter.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.004"/>
  <testcase name="shouldLexJadeToTokens[mixin.block-tag-behaviour.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.004"/>
  <testcase name="shouldLexJadeToTokens[script.whitespace.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.011"/>
  <testcase name="shouldLexJadeToTokens[styles.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.006"/>
  <testcase name="shouldLexJadeToTokens[mixin-via-include.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.001"/>
  <testcase name="shouldLexJadeToTokens[yield-title-head.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.003"/>
  <testcase name="shouldLexJadeToTokens[filters.inline.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.001"/>
  <testcase name="shouldLexJadeToTokens[comments.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.003"/>
  <testcase name="shouldLexJadeToTokens[mixins-unused.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0"/>
  <testcase name="shouldLexJadeToTokens[inline-tag.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.001"/>
  <testcase name="shouldLexJadeToTokens[tags.self-closing.jade]" classname="de.neuland.jade4j.lexer.OriginalLexer_0_0_8_Test" time="0.004"/>
</testsuite>