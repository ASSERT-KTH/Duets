<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.andyxh</groupId>
    <artifactId>hotswap-example</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>hotswap-example</name>
    <!-- FIXME change it to the project's website -->
    <url>http://www.example.com</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm</artifactId>
            <version>7.0</version>
        </dependency>
        <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm-commons</artifactId>
            <version>7.0</version>
        </dependency>
        <dependency>
            <groupId>com.github.olivergondza</groupId>
            <artifactId>maven-jdk-tools-wrapper</artifactId>
            <version>0.1</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>

        <!--        <dependency>-->
        <!--            <groupId>jdk.tools</groupId>-->
        <!--            <artifactId>jdk.tools</artifactId>-->
        <!--            <scope>system</scope>-->
        <!--            <version>1.6</version>-->
        <!--            <systemPath>${java.home}/../lib/tools.jar</systemPath>-->
        <!--        </dependency>-->
    </dependencies>

    <build>


        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <finalName>hotswap-jdk</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifestEntries>
                            <Agent-Class>
                                com.andyxh.AgentMain
                            </Agent-Class>
                            <Can-Redefine-Classes>
                                true
                            </Can-Redefine-Classes>
                        </manifestEntries>
                        <manifest>
                            <mainClass>com.andyxh.JvmAttachMain</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id> <!-- this is used for inheritance merges -->
                        <phase>package</phase> <!-- bind to the packaging phase -->
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>

                    <!--                    <compilerArguments>-->
                    <!--                        &lt;!&ndash; 是否输出所有的编译信息（包括类的加载等）&ndash;&gt;-->
                    <!--                        &lt;!&ndash;<verbose />&ndash;&gt;-->
                    <!--                        &lt;!&ndash; 解决maven命令编译报错，因为rt.jar 和jce.jar在jre的lib下面，不在jdk的lib下面，-->
                    <!--                        导致maven找不到（java7以后会出现这个问题），将这2个jar包拷贝到jdk的lib下面估计也好使&ndash;&gt;-->
                    <!--                        <bootclasspath>${java.home}\lib\dt.jar;${java.home}\lib\tools.jar</bootclasspath>-->
                    <!--                    </compilerArguments>-->
                </configuration>

            </plugin>
        </plugins>
    </build>
</project>
