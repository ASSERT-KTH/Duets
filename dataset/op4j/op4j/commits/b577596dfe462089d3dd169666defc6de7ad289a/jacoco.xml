<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="op4j"><sessioninfo id="6391c04d78fe-875ae830" start="1596452526073" dump="1596452527647"/><package name="org/op4j/util"><class name="org/op4j/util/MapEntry" sourcefilename="MapEntry.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="38"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKey" desc="()Ljava/lang/Object;" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="55"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="61"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="72"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/util/VarArgsUtil" sourcefilename="VarArgsUtil.java"><method name="asTargetList" desc="([Ljava/lang/Object;)Ljava/util/List;" line="48"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asRequiredObjectList" desc="([Ljava/lang/Object;)Ljava/util/List;" line="55"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asRequiredObjectSet" desc="([Ljava/lang/Object;)Ljava/util/Set;" line="62"><counter type="INSTRUCTION" missed="1" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asRequiredIntegerList" desc="([I)Ljava/util/List;" line="68"><counter type="INSTRUCTION" missed="1" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asRequiredIntegerArray" desc="([I)[Ljava/lang/Integer;" line="74"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asRequiredObjectArray" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" line="80"><counter type="INSTRUCTION" missed="1" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asOptionalObjectList" desc="([Ljava/lang/Object;)Ljava/util/List;" line="88"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asOptionalObjectArray" desc="(Ljava/lang/Class;[Ljava/lang/Object;)[Ljava/lang/Object;" line="102"><counter type="INSTRUCTION" missed="20" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="86" covered="72"/><counter type="BRANCH" missed="14" covered="6"/><counter type="LINE" missed="16" covered="16"/><counter type="COMPLEXITY" missed="13" covered="5"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/util/NormalisationUtils" sourcefilename="NormalisationUtils.java"><method name="checkIsArray" desc="(Lorg/javaruntype/type/Type;Ljava/lang/Object;)V" line="49"><counter type="INSTRUCTION" missed="6" covered="33"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkIsList" desc="(Lorg/javaruntype/type/Type;Ljava/lang/Object;)V" line="61"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkIsMap" desc="(Lorg/javaruntype/type/Type;Lorg/javaruntype/type/Type;Ljava/lang/Object;)V" line="73"><counter type="INSTRUCTION" missed="6" covered="31"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkIsMapEntry" desc="(Lorg/javaruntype/type/Type;Lorg/javaruntype/type/Type;Ljava/lang/Object;)V" line="86"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkIsSet" desc="(Lorg/javaruntype/type/Type;Ljava/lang/Object;)V" line="98"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkIs" desc="(Lorg/javaruntype/type/Type;Ljava/lang/Object;)V" line="110"><counter type="INSTRUCTION" missed="6" covered="11"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normaliseArray" desc="([Ljava/lang/Object;Ljava/lang/Class;)[Ljava/lang/Object;" line="123"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normaliseList" desc="(Ljava/util/List;)Ljava/util/List;" line="135"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normaliseMap" desc="(Ljava/util/Map;)Ljava/util/Map;" line="143"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normaliseMapEntry" desc="(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;" line="151"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="normaliseSet" desc="(Ljava/util/Set;)Ljava/util/Set;" line="159"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createCastException" desc="(Ljava/lang/Class;Ljava/lang/String;)Lorg/op4j/exceptions/ExecutionException;" line="168"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="142" covered="124"/><counter type="BRANCH" missed="28" covered="16"/><counter type="LINE" missed="35" covered="29"/><counter type="COMPLEXITY" missed="24" covered="10"/><counter type="METHOD" missed="5" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/util/ExecCtxImpl" sourcefilename="ExecCtxImpl.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndex" desc="()Ljava/lang/Integer;" line="47"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="MapEntry.java"><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="13" ci="0" mb="2" cb="0"/><line nr="64" mi="13" ci="0" mb="2" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="2" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="2" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="2" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="2" cb="0"/><line nr="83" mi="3" ci="0" mb="2" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="6" ci="0" mb="2" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="2" cb="0"/><line nr="90" mi="3" ci="0" mb="2" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="6" ci="0" mb="2" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="VarArgsUtil.java"><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="8" ci="0" mb="2" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="1" ci="7" mb="1" cb="1"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="1" ci="7" mb="1" cb="1"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="1" ci="7" mb="1" cb="1"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="8" ci="0" mb="2" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="1" ci="7" mb="1" cb="1"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="2" cb="0"/><line nr="90" mi="17" ci="0" mb="2" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="1" cb="1"/><line nr="103" mi="0" ci="7" mb="0" cb="0"/><line nr="104" mi="2" ci="6" mb="1" cb="1"/><line nr="105" mi="6" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="6" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="86" covered="72"/><counter type="BRANCH" missed="14" covered="6"/><counter type="LINE" missed="16" covered="16"/><counter type="COMPLEXITY" missed="13" covered="5"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExecCtxImpl.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NormalisationUtils.java"><line nr="49" mi="0" ci="2" mb="1" cb="1"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="1" cb="1"/><line nr="52" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="18" mb="0" cb="2"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="2" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="2" cb="0"/><line nr="64" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="10" ci="0" mb="2" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="1" cb="1"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="1" cb="1"/><line nr="76" mi="6" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="12" mb="0" cb="2"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="2" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="2" cb="0"/><line nr="89" mi="6" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="2" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="2" cb="0"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><line nr="103" mi="10" ci="0" mb="2" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="1" cb="1"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="1" cb="1"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="1" cb="1"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="7" mb="0" cb="0"/><line nr="127" mi="0" ci="10" mb="0" cb="2"/><line nr="128" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="1" cb="1"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="1" cb="1"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="2" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="8" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="1" cb="1"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="142" covered="124"/><counter type="BRANCH" missed="28" covered="16"/><counter type="LINE" missed="35" covered="29"/><counter type="COMPLEXITY" missed="24" covered="10"/><counter type="METHOD" missed="5" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="336" covered="202"/><counter type="BRANCH" missed="64" covered="22"/><counter type="LINE" missed="82" covered="48"/><counter type="COMPLEXITY" missed="55" covered="16"/><counter type="METHOD" missed="15" covered="13"/><counter type="CLASS" missed="1" covered="3"/></package><package name="org/op4j/exceptions"><class name="org/op4j/exceptions/ExecutionException" sourcefilename="ExecutionException.java"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="9"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ExecutionException.java"><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="9"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="7" covered="9"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/op4j/operators/impl/fn/map"><class name="org/op4j/operators/impl/fn/map/Level2MapEntriesKeyOperator" sourcefilename="Level2MapEntriesKeyOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="47"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endOn" desc="()Lorg/op4j/operators/impl/fn/map/Level1MapEntriesOperator;" line="52"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castTo" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesKeyOperator;" line="57"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="64"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesKeySelectedOperator;" line="69"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesKeySelectedOperator;" line="74"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapEntriesKeySelectedOperator;" line="79"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapEntriesKeySelectedOperator;" line="90"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesKeyOperator;" line="103"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesKeyOperator;" line="108"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceIfNullWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesKeyOperator;" line="113"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesKeyOperator;" line="123"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesKeyOperator;" line="128"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesKeyOperator;" line="133"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesKeyOperator;" line="138"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesKeyOperator;" line="143"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesKeyOperator;" line="148"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesKeyOperator;" line="153"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesKeyOperator;" line="158"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="168" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/map/Level1MapEntriesOperator" sourcefilename="Level1MapEntriesOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="47"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endFor" desc="()Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="52"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onKey" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapEntriesKeyOperator;" line="57"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onValue" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapEntriesValueOperator;" line="62"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="67"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndex" desc="([I)Lorg/op4j/operators/impl/fn/map/Level1MapEntriesSelectedOperator;" line="74"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndexNot" desc="([I)Lorg/op4j/operators/impl/fn/map/Level1MapEntriesSelectedOperator;" line="79"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifKeyEquals" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level1MapEntriesSelectedOperator;" line="84"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifKeyNotEquals" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level1MapEntriesSelectedOperator;" line="89"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level1MapEntriesSelectedOperator;" line="94"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level1MapEntriesSelectedOperator;" line="99"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsMapEntry" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level1MapEntriesOperator;" line="107"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListElementsOperator;" line="115"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/util/Map$Entry;)Lorg/op4j/operators/impl/fn/map/Level1MapEntriesOperator;" line="120"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalseAsMapEntry" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level1MapEntriesOperator;" line="127"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalseAsMapEntry" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level1MapEntriesOperator;" line="132"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrueAsMapEntry" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level1MapEntriesOperator;" line="137"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrueAsMapEntry" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level1MapEntriesOperator;" line="142"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="149" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/map/Level0MapSelectedOperator" sourcefilename="Level0MapSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sortBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapSelectedOperator;" line="47"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insertAll" desc="(ILjava/util/Map;)Lorg/op4j/operators/impl/fn/map/Level0MapSelectedOperator;" line="53"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapSelectedOperator;" line="59"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapSelectedOperator;" line="65"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="70"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEachEntry" desc="()Lorg/op4j/operators/impl/fn/map/Level1MapSelectedEntriesOperator;" line="75"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllKeys" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapSelectedOperator;" line="80"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllKeysNot" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapSelectedOperator;" line="85"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapSelectedOperator;" line="90"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapSelectedOperator;" line="95"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Ljava/util/Map;)Lorg/op4j/operators/impl/fn/map/Level0MapSelectedOperator;" line="101"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insert" desc="(ILjava/lang/Object;Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapSelectedOperator;" line="106"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="()Lorg/op4j/operators/impl/fn/map/Level0MapSelectedOperator;" line="111"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="(Ljava/util/Comparator;)Lorg/op4j/operators/impl/fn/map/Level0MapSelectedOperator;" line="117"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/util/Map;)Lorg/op4j/operators/impl/fn/map/Level0MapSelectedOperator;" line="122"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="127"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="154" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="17" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedKeyOperator" sourcefilename="Level2MapSelectedEntriesSelectedKeyOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedKeySelectedOperator;" line="42"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedKeySelectedOperator;" line="47"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedKeySelectedOperator;" line="52"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedKeySelectedOperator;" line="57"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedKeySelectedOperator;" line="62"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedKeySelectedOperator;" line="67"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedKeySelectedOperator;" line="72"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedKeySelectedOperator;" line="77"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endOn" desc="()Lorg/op4j/operators/impl/fn/map/Level1MapSelectedEntriesSelectedOperator;" line="82"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedKeyOperator;" line="87"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedKeyOperator;" line="92"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="97"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/map/Level1MapSelectedEntriesSelectedOperator" sourcefilename="Level1MapSelectedEntriesSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="38"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/fn/map/Level1MapSelectedEntriesOperator;" line="43"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onKey" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedKeyOperator;" line="48"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onValue" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedValueOperator;" line="53"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsMapEntry" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level1MapSelectedEntriesSelectedOperator;" line="58"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/util/Map$Entry;)Lorg/op4j/operators/impl/fn/map/Level1MapSelectedEntriesSelectedOperator;" line="63"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="68"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/map/Level2MapEntriesValueSelectedOperator" sourcefilename="Level2MapEntriesValueSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapEntriesValueOperator;" line="42"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesValueSelectedOperator;" line="47"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesValueSelectedOperator;" line="52"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="57"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedValueOperator" sourcefilename="Level2MapSelectedEntriesSelectedValueOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedValueSelectedOperator;" line="42"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedValueSelectedOperator;" line="47"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedValueSelectedOperator;" line="52"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedValueSelectedOperator;" line="57"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedValueSelectedOperator;" line="62"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedValueSelectedOperator;" line="67"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedValueSelectedOperator;" line="72"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedValueSelectedOperator;" line="77"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endOn" desc="()Lorg/op4j/operators/impl/fn/map/Level1MapSelectedEntriesSelectedOperator;" line="82"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedValueOperator;" line="87"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedValueOperator;" line="92"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="97"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/map/Level2MapSelectedEntriesKeyOperator" sourcefilename="Level2MapSelectedEntriesKeyOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesKeySelectedOperator;" line="42"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesKeySelectedOperator;" line="47"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesKeySelectedOperator;" line="52"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesKeySelectedOperator;" line="57"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesKeySelectedOperator;" line="62"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesKeySelectedOperator;" line="67"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesKeySelectedOperator;" line="72"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesKeySelectedOperator;" line="77"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endOn" desc="()Lorg/op4j/operators/impl/fn/map/Level1MapSelectedEntriesOperator;" line="82"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesKeyOperator;" line="87"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesKeyOperator;" line="92"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="97"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/map/Level1MapSelectedEntriesOperator" sourcefilename="Level1MapSelectedEntriesOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="38"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level1MapSelectedEntriesSelectedOperator;" line="43"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level1MapSelectedEntriesSelectedOperator;" line="48"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndex" desc="([I)Lorg/op4j/operators/impl/fn/map/Level1MapSelectedEntriesSelectedOperator;" line="53"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndexNot" desc="([I)Lorg/op4j/operators/impl/fn/map/Level1MapSelectedEntriesSelectedOperator;" line="58"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endFor" desc="()Lorg/op4j/operators/impl/fn/map/Level0MapSelectedOperator;" line="63"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifKeyEquals" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level1MapSelectedEntriesSelectedOperator;" line="68"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifKeyNotEquals" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level1MapSelectedEntriesSelectedOperator;" line="73"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onKey" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesKeyOperator;" line="78"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onValue" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesValueOperator;" line="83"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsMapEntry" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level1MapSelectedEntriesOperator;" line="88"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/util/Map$Entry;)Lorg/op4j/operators/impl/fn/map/Level1MapSelectedEntriesOperator;" line="93"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="98"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="96" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/map/Level2MapEntriesSelectedKeySelectedOperator" sourcefilename="Level2MapEntriesSelectedKeySelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedKeyOperator;" line="42"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedKeySelectedOperator;" line="47"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedKeySelectedOperator;" line="52"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="57"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/map/Level2MapEntriesSelectedKeyOperator" sourcefilename="Level2MapEntriesSelectedKeyOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedKeySelectedOperator;" line="42"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedKeySelectedOperator;" line="47"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedKeySelectedOperator;" line="52"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedKeySelectedOperator;" line="57"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedKeySelectedOperator;" line="62"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedKeySelectedOperator;" line="67"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedKeySelectedOperator;" line="72"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedKeySelectedOperator;" line="77"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endOn" desc="()Lorg/op4j/operators/impl/fn/map/Level1MapEntriesSelectedOperator;" line="82"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedKeyOperator;" line="87"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedKeyOperator;" line="92"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="97"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/map/Level0MapOperator" sourcefilename="Level0MapOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="55"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractKeys" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="60"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractValues" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="65"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEachEntry" desc="()Lorg/op4j/operators/impl/fn/map/Level1MapEntriesOperator;" line="70"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="79"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insert" desc="(ILjava/lang/Object;Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="84"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Ljava/util/Map;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="90"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insertAll" desc="(ILjava/util/Map;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="96"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllKeys" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="101"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="107"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="112"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllKeysNot" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="117"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="()Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="131"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="(Ljava/util/Comparator;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="137"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="142"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generic" desc="()Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="147"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Lorg/javaruntype/type/Type;Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="157"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToMapOf" desc="(Lorg/javaruntype/type/Type;Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="161"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapSelectedOperator;" line="171"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapSelectedOperator;" line="176"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/fn/map/Level0MapSelectedOperator;" line="181"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/fn/map/Level0MapSelectedOperator;" line="192"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="205"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="213"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/util/Map;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="218"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceIfNullWith" desc="(Ljava/util/Map;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="223"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="all" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="241"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="any" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="247"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sortBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="256"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverse" desc="()Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="262"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalseAsMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="271"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalseAsMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="276"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNullAsMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="281"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNullAsMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="286"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNullAsMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="291"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNullAsMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="296"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrueAsMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="301"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrueAsMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="306"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="349" covered="0"/><counter type="LINE" missed="39" covered="0"/><counter type="COMPLEXITY" missed="38" covered="0"/><counter type="METHOD" missed="38" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/map/Level1MapEntriesSelectedOperator" sourcefilename="Level1MapEntriesSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="38"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/fn/map/Level1MapEntriesOperator;" line="43"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onKey" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedKeyOperator;" line="48"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onValue" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedValueOperator;" line="53"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsMapEntry" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level1MapEntriesSelectedOperator;" line="58"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/util/Map$Entry;)Lorg/op4j/operators/impl/fn/map/Level1MapEntriesSelectedOperator;" line="63"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="68"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/map/Level2MapEntriesValueOperator" sourcefilename="Level2MapEntriesValueOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="47"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endOn" desc="()Lorg/op4j/operators/impl/fn/map/Level1MapEntriesOperator;" line="52"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castTo" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesValueOperator;" line="57"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="68"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesValueSelectedOperator;" line="73"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesValueSelectedOperator;" line="78"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapEntriesValueSelectedOperator;" line="83"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapEntriesValueSelectedOperator;" line="94"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesValueOperator;" line="107"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesValueOperator;" line="112"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceIfNullWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesValueOperator;" line="117"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesValueOperator;" line="127"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesValueOperator;" line="132"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesValueOperator;" line="137"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesValueOperator;" line="142"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesValueOperator;" line="147"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesValueOperator;" line="152"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesValueOperator;" line="157"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesValueOperator;" line="162"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="168" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedValueSelectedOperator" sourcefilename="Level2MapSelectedEntriesSelectedValueSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedValueOperator;" line="42"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedValueSelectedOperator;" line="47"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedValueSelectedOperator;" line="52"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="57"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/map/Level2MapEntriesKeySelectedOperator" sourcefilename="Level2MapEntriesKeySelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapEntriesKeyOperator;" line="42"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesKeySelectedOperator;" line="47"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesKeySelectedOperator;" line="52"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="57"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedKeySelectedOperator" sourcefilename="Level2MapSelectedEntriesSelectedKeySelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedKeyOperator;" line="42"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedKeySelectedOperator;" line="47"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesSelectedKeySelectedOperator;" line="52"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="57"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/map/Level2MapSelectedEntriesValueSelectedOperator" sourcefilename="Level2MapSelectedEntriesValueSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesValueOperator;" line="42"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesValueSelectedOperator;" line="47"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesValueSelectedOperator;" line="52"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="57"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/map/Level2MapEntriesSelectedValueSelectedOperator" sourcefilename="Level2MapEntriesSelectedValueSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedValueOperator;" line="42"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedValueSelectedOperator;" line="47"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedValueSelectedOperator;" line="52"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="57"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/map/Level2MapSelectedEntriesKeySelectedOperator" sourcefilename="Level2MapSelectedEntriesKeySelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesKeyOperator;" line="42"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesKeySelectedOperator;" line="47"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesKeySelectedOperator;" line="52"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="57"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/map/Level2MapSelectedEntriesValueOperator" sourcefilename="Level2MapSelectedEntriesValueOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesValueSelectedOperator;" line="42"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesValueSelectedOperator;" line="47"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesValueSelectedOperator;" line="52"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesValueSelectedOperator;" line="57"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesValueSelectedOperator;" line="62"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesValueSelectedOperator;" line="67"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesValueSelectedOperator;" line="72"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesValueSelectedOperator;" line="77"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endOn" desc="()Lorg/op4j/operators/impl/fn/map/Level1MapSelectedEntriesOperator;" line="82"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesValueOperator;" line="87"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level2MapSelectedEntriesValueOperator;" line="92"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="97"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/map/Level2MapEntriesSelectedValueOperator" sourcefilename="Level2MapEntriesSelectedValueOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedValueSelectedOperator;" line="42"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedValueSelectedOperator;" line="47"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedValueSelectedOperator;" line="52"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedValueSelectedOperator;" line="57"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedValueSelectedOperator;" line="62"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedValueSelectedOperator;" line="67"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedValueSelectedOperator;" line="72"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedValueSelectedOperator;" line="77"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endOn" desc="()Lorg/op4j/operators/impl/fn/map/Level1MapEntriesSelectedOperator;" line="82"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedValueOperator;" line="87"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level2MapEntriesSelectedValueOperator;" line="92"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="97"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Level2MapSelectedEntriesValueOperator.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="8" ci="0" mb="0" cb="0"/><line nr="47" mi="8" ci="0" mb="0" cb="0"/><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="8" ci="0" mb="0" cb="0"/><line nr="67" mi="8" ci="0" mb="0" cb="0"/><line nr="72" mi="8" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="82" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="9" ci="0" mb="0" cb="0"/><line nr="92" mi="9" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level1MapSelectedEntriesSelectedOperator.java"><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="7" ci="0" mb="0" cb="0"/><line nr="48" mi="7" ci="0" mb="0" cb="0"/><line nr="53" mi="7" ci="0" mb="0" cb="0"/><line nr="58" mi="9" ci="0" mb="0" cb="0"/><line nr="63" mi="9" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level0MapOperator.java"><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="9" ci="0" mb="0" cb="0"/><line nr="65" mi="9" ci="0" mb="0" cb="0"/><line nr="70" mi="8" ci="0" mb="0" cb="0"/><line nr="79" mi="11" ci="0" mb="0" cb="0"/><line nr="84" mi="12" ci="0" mb="0" cb="0"/><line nr="90" mi="10" ci="0" mb="0" cb="0"/><line nr="96" mi="11" ci="0" mb="0" cb="0"/><line nr="101" mi="10" ci="0" mb="0" cb="0"/><line nr="107" mi="10" ci="0" mb="0" cb="0"/><line nr="112" mi="10" ci="0" mb="0" cb="0"/><line nr="117" mi="10" ci="0" mb="0" cb="0"/><line nr="131" mi="9" ci="0" mb="0" cb="0"/><line nr="137" mi="10" ci="0" mb="0" cb="0"/><line nr="142" mi="6" ci="0" mb="0" cb="0"/><line nr="147" mi="6" ci="0" mb="0" cb="0"/><line nr="157" mi="6" ci="0" mb="0" cb="0"/><line nr="161" mi="6" ci="0" mb="0" cb="0"/><line nr="171" mi="8" ci="0" mb="0" cb="0"/><line nr="176" mi="8" ci="0" mb="0" cb="0"/><line nr="181" mi="7" ci="0" mb="0" cb="0"/><line nr="192" mi="7" ci="0" mb="0" cb="0"/><line nr="205" mi="9" ci="0" mb="0" cb="0"/><line nr="213" mi="9" ci="0" mb="0" cb="0"/><line nr="218" mi="9" ci="0" mb="0" cb="0"/><line nr="223" mi="6" ci="0" mb="0" cb="0"/><line nr="241" mi="12" ci="0" mb="0" cb="0"/><line nr="247" mi="12" ci="0" mb="0" cb="0"/><line nr="256" mi="12" ci="0" mb="0" cb="0"/><line nr="262" mi="9" ci="0" mb="0" cb="0"/><line nr="271" mi="11" ci="0" mb="0" cb="0"/><line nr="276" mi="11" ci="0" mb="0" cb="0"/><line nr="281" mi="10" ci="0" mb="0" cb="0"/><line nr="286" mi="10" ci="0" mb="0" cb="0"/><line nr="291" mi="10" ci="0" mb="0" cb="0"/><line nr="296" mi="10" ci="0" mb="0" cb="0"/><line nr="301" mi="11" ci="0" mb="0" cb="0"/><line nr="306" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="349" covered="0"/><counter type="LINE" missed="39" covered="0"/><counter type="COMPLEXITY" missed="38" covered="0"/><counter type="METHOD" missed="38" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapSelectedEntriesKeyOperator.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="8" ci="0" mb="0" cb="0"/><line nr="47" mi="8" ci="0" mb="0" cb="0"/><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="8" ci="0" mb="0" cb="0"/><line nr="67" mi="8" ci="0" mb="0" cb="0"/><line nr="72" mi="8" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="82" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="9" ci="0" mb="0" cb="0"/><line nr="92" mi="9" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapEntriesValueSelectedOperator.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="0" cb="0"/><line nr="47" mi="9" ci="0" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapEntriesSelectedKeySelectedOperator.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="0" cb="0"/><line nr="47" mi="9" ci="0" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapSelectedEntriesSelectedKeySelectedOperator.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="0" cb="0"/><line nr="47" mi="9" ci="0" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level1MapEntriesOperator.java"><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="8" ci="0" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="7" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="8" ci="0" mb="0" cb="0"/><line nr="79" mi="8" ci="0" mb="0" cb="0"/><line nr="84" mi="8" ci="0" mb="0" cb="0"/><line nr="89" mi="8" ci="0" mb="0" cb="0"/><line nr="94" mi="8" ci="0" mb="0" cb="0"/><line nr="99" mi="8" ci="0" mb="0" cb="0"/><line nr="107" mi="9" ci="0" mb="0" cb="0"/><line nr="115" mi="9" ci="0" mb="0" cb="0"/><line nr="120" mi="9" ci="0" mb="0" cb="0"/><line nr="127" mi="11" ci="0" mb="0" cb="0"/><line nr="132" mi="11" ci="0" mb="0" cb="0"/><line nr="137" mi="11" ci="0" mb="0" cb="0"/><line nr="142" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="149" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level0MapSelectedOperator.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="10" ci="0" mb="0" cb="0"/><line nr="53" mi="11" ci="0" mb="0" cb="0"/><line nr="59" mi="10" ci="0" mb="0" cb="0"/><line nr="65" mi="10" ci="0" mb="0" cb="0"/><line nr="70" mi="7" ci="0" mb="0" cb="0"/><line nr="75" mi="8" ci="0" mb="0" cb="0"/><line nr="80" mi="10" ci="0" mb="0" cb="0"/><line nr="85" mi="10" ci="0" mb="0" cb="0"/><line nr="90" mi="9" ci="0" mb="0" cb="0"/><line nr="95" mi="11" ci="0" mb="0" cb="0"/><line nr="101" mi="10" ci="0" mb="0" cb="0"/><line nr="106" mi="12" ci="0" mb="0" cb="0"/><line nr="111" mi="9" ci="0" mb="0" cb="0"/><line nr="117" mi="10" ci="0" mb="0" cb="0"/><line nr="122" mi="9" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="154" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="17" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapEntriesSelectedKeyOperator.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="8" ci="0" mb="0" cb="0"/><line nr="47" mi="8" ci="0" mb="0" cb="0"/><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="8" ci="0" mb="0" cb="0"/><line nr="67" mi="8" ci="0" mb="0" cb="0"/><line nr="72" mi="8" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="82" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="9" ci="0" mb="0" cb="0"/><line nr="92" mi="9" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapSelectedEntriesValueSelectedOperator.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="0" cb="0"/><line nr="47" mi="9" ci="0" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapSelectedEntriesSelectedKeyOperator.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="8" ci="0" mb="0" cb="0"/><line nr="47" mi="8" ci="0" mb="0" cb="0"/><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="8" ci="0" mb="0" cb="0"/><line nr="67" mi="8" ci="0" mb="0" cb="0"/><line nr="72" mi="8" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="82" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="9" ci="0" mb="0" cb="0"/><line nr="92" mi="9" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapSelectedEntriesSelectedValueSelectedOperator.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="0" cb="0"/><line nr="47" mi="9" ci="0" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapSelectedEntriesKeySelectedOperator.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="0" cb="0"/><line nr="47" mi="9" ci="0" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level1MapSelectedEntriesOperator.java"><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="8" ci="0" mb="0" cb="0"/><line nr="48" mi="8" ci="0" mb="0" cb="0"/><line nr="53" mi="8" ci="0" mb="0" cb="0"/><line nr="58" mi="8" ci="0" mb="0" cb="0"/><line nr="63" mi="8" ci="0" mb="0" cb="0"/><line nr="68" mi="8" ci="0" mb="0" cb="0"/><line nr="73" mi="8" ci="0" mb="0" cb="0"/><line nr="78" mi="7" ci="0" mb="0" cb="0"/><line nr="83" mi="7" ci="0" mb="0" cb="0"/><line nr="88" mi="9" ci="0" mb="0" cb="0"/><line nr="93" mi="9" ci="0" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="96" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapSelectedEntriesSelectedValueOperator.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="8" ci="0" mb="0" cb="0"/><line nr="47" mi="8" ci="0" mb="0" cb="0"/><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="8" ci="0" mb="0" cb="0"/><line nr="67" mi="8" ci="0" mb="0" cb="0"/><line nr="72" mi="8" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="82" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="9" ci="0" mb="0" cb="0"/><line nr="92" mi="9" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapEntriesSelectedValueSelectedOperator.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="0" cb="0"/><line nr="47" mi="9" ci="0" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level1MapEntriesSelectedOperator.java"><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="7" ci="0" mb="0" cb="0"/><line nr="48" mi="7" ci="0" mb="0" cb="0"/><line nr="53" mi="7" ci="0" mb="0" cb="0"/><line nr="58" mi="9" ci="0" mb="0" cb="0"/><line nr="63" mi="9" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapEntriesKeySelectedOperator.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="0" cb="0"/><line nr="47" mi="9" ci="0" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapEntriesValueOperator.java"><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="57" mi="14" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="8" ci="0" mb="0" cb="0"/><line nr="78" mi="8" ci="0" mb="0" cb="0"/><line nr="83" mi="7" ci="0" mb="0" cb="0"/><line nr="94" mi="7" ci="0" mb="0" cb="0"/><line nr="107" mi="9" ci="0" mb="0" cb="0"/><line nr="112" mi="9" ci="0" mb="0" cb="0"/><line nr="117" mi="6" ci="0" mb="0" cb="0"/><line nr="127" mi="11" ci="0" mb="0" cb="0"/><line nr="132" mi="11" ci="0" mb="0" cb="0"/><line nr="137" mi="10" ci="0" mb="0" cb="0"/><line nr="142" mi="10" ci="0" mb="0" cb="0"/><line nr="147" mi="10" ci="0" mb="0" cb="0"/><line nr="152" mi="10" ci="0" mb="0" cb="0"/><line nr="157" mi="11" ci="0" mb="0" cb="0"/><line nr="162" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="168" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapEntriesKeyOperator.java"><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="57" mi="14" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="8" ci="0" mb="0" cb="0"/><line nr="74" mi="8" ci="0" mb="0" cb="0"/><line nr="79" mi="7" ci="0" mb="0" cb="0"/><line nr="90" mi="7" ci="0" mb="0" cb="0"/><line nr="103" mi="9" ci="0" mb="0" cb="0"/><line nr="108" mi="9" ci="0" mb="0" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="123" mi="11" ci="0" mb="0" cb="0"/><line nr="128" mi="11" ci="0" mb="0" cb="0"/><line nr="133" mi="10" ci="0" mb="0" cb="0"/><line nr="138" mi="10" ci="0" mb="0" cb="0"/><line nr="143" mi="10" ci="0" mb="0" cb="0"/><line nr="148" mi="10" ci="0" mb="0" cb="0"/><line nr="153" mi="11" ci="0" mb="0" cb="0"/><line nr="158" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="168" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapEntriesSelectedValueOperator.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="8" ci="0" mb="0" cb="0"/><line nr="47" mi="8" ci="0" mb="0" cb="0"/><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="8" ci="0" mb="0" cb="0"/><line nr="67" mi="8" ci="0" mb="0" cb="0"/><line nr="72" mi="8" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="82" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="9" ci="0" mb="0" cb="0"/><line nr="92" mi="9" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="2012" covered="0"/><counter type="LINE" missed="278" covered="0"/><counter type="COMPLEXITY" missed="256" covered="0"/><counter type="METHOD" missed="256" covered="0"/><counter type="CLASS" missed="22" covered="0"/></package><package name="org/op4j/operators/intf/list"><class name="org/op4j/operators/intf/list/ILevel1ListElementsOperator" sourcefilename="ILevel1ListElementsOperator.java"/><class name="org/op4j/operators/intf/list/ILevel1ListSelectedElementsOperator" sourcefilename="ILevel1ListSelectedElementsOperator.java"/><class name="org/op4j/operators/intf/list/ILevel0ListSelectedOperator" sourcefilename="ILevel0ListSelectedOperator.java"/><class name="org/op4j/operators/intf/list/ILevel1ListSelectedElementsSelectedOperator" sourcefilename="ILevel1ListSelectedElementsSelectedOperator.java"/><class name="org/op4j/operators/intf/list/ILevel0ListOperator" sourcefilename="ILevel0ListOperator.java"/><class name="org/op4j/operators/intf/list/ILevel1ListElementsSelectedOperator" sourcefilename="ILevel1ListElementsSelectedOperator.java"/><sourcefile name="ILevel1ListElementsOperator.java"/><sourcefile name="ILevel1ListSelectedElementsOperator.java"/><sourcefile name="ILevel0ListOperator.java"/><sourcefile name="ILevel1ListElementsSelectedOperator.java"/><sourcefile name="ILevel0ListSelectedOperator.java"/><sourcefile name="ILevel1ListSelectedElementsSelectedOperator.java"/></package><package name="org/op4j/operators/qualities"><class name="org/op4j/operators/qualities/CastableToStructuresOperator" sourcefilename="CastableToStructuresOperator.java"/><class name="org/op4j/operators/qualities/UniqOpOperator" sourcefilename="UniqOpOperator.java"/><class name="org/op4j/operators/qualities/SelectedElementsOperator" sourcefilename="SelectedElementsOperator.java"/><class name="org/op4j/operators/qualities/ExecutableArraySelectedOperator" sourcefilename="ExecutableArraySelectedOperator.java"/><class name="org/op4j/operators/qualities/SelectableElementsOperator" sourcefilename="SelectableElementsOperator.java"/><class name="org/op4j/operators/qualities/CastableToMapOperator" sourcefilename="CastableToMapOperator.java"/><class name="org/op4j/operators/qualities/NavigableMapEntryOperator" sourcefilename="NavigableMapEntryOperator.java"/><class name="org/op4j/operators/qualities/SortableOperator" sourcefilename="SortableOperator.java"/><class name="org/op4j/operators/qualities/ExtractableMapOperator" sourcefilename="ExtractableMapOperator.java"/><class name="org/op4j/operators/qualities/ConvertibleToMapOperator" sourcefilename="ConvertibleToMapOperator.java"/><class name="org/op4j/operators/qualities/BuildingMapOperator" sourcefilename="BuildingMapOperator.java"/><class name="org/op4j/operators/qualities/ExecutableArrayOperator" sourcefilename="ExecutableArrayOperator.java"/><class name="org/op4j/operators/qualities/ConvertibleToMapOfArrayOperator" sourcefilename="ConvertibleToMapOfArrayOperator.java"/><class name="org/op4j/operators/qualities/ConvertibleToMapOfListOperator" sourcefilename="ConvertibleToMapOfListOperator.java"/><class name="org/op4j/operators/qualities/ExecutableMapOperator" sourcefilename="ExecutableMapOperator.java"/><class name="org/op4j/operators/qualities/ExecutableOperator" sourcefilename="ExecutableOperator.java"/><class name="org/op4j/operators/qualities/ExecutableSelectedOperator" sourcefilename="ExecutableSelectedOperator.java"/><class name="org/op4j/operators/qualities/ReplaceableIfNullOperator" sourcefilename="ReplaceableIfNullOperator.java"/><class name="org/op4j/operators/qualities/NavigableCollectionOperator" sourcefilename="NavigableCollectionOperator.java"/><class name="org/op4j/operators/qualities/UniqFnOperator" sourcefilename="UniqFnOperator.java"/><class name="org/op4j/operators/qualities/TotalizableOperator" sourcefilename="TotalizableOperator.java"/><class name="org/op4j/operators/qualities/ConvertibleToListOperator" sourcefilename="ConvertibleToListOperator.java"/><class name="org/op4j/operators/qualities/NavigatingCollectionOperator" sourcefilename="NavigatingCollectionOperator.java"/><class name="org/op4j/operators/qualities/CastableToTypeOperator" sourcefilename="CastableToTypeOperator.java"/><class name="org/op4j/operators/qualities/CastableToSetOperator" sourcefilename="CastableToSetOperator.java"/><class name="org/op4j/operators/qualities/SelectableOperator" sourcefilename="SelectableOperator.java"/><class name="org/op4j/operators/qualities/NavigatingMapEntryOperator" sourcefilename="NavigatingMapEntryOperator.java"/><class name="org/op4j/operators/qualities/ExecutableListOperator" sourcefilename="ExecutableListOperator.java"/><class name="org/op4j/operators/qualities/NavigatingMapOperator" sourcefilename="NavigatingMapOperator.java"/><class name="org/op4j/operators/qualities/ExecutableElementsOperator" sourcefilename="ExecutableElementsOperator.java"/><class name="org/op4j/operators/qualities/UniqOperator" sourcefilename="UniqOperator.java"/><class name="org/op4j/operators/qualities/SelectedMapEntryComponentOperator" sourcefilename="SelectedMapEntryComponentOperator.java"/><class name="org/op4j/operators/qualities/ExecutableArrayElementsOperator" sourcefilename="ExecutableArrayElementsOperator.java"/><class name="org/op4j/operators/qualities/ConvertibleToMapOfSetOperator" sourcefilename="ConvertibleToMapOfSetOperator.java"/><class name="org/op4j/operators/qualities/ExecutableSetOperator" sourcefilename="ExecutableSetOperator.java"/><class name="org/op4j/operators/qualities/BuilderOperator" sourcefilename="BuilderOperator.java"/><class name="org/op4j/operators/qualities/ConvertibleToArrayOperator" sourcefilename="ConvertibleToArrayOperator.java"/><class name="org/op4j/operators/qualities/DistinguishableOperator" sourcefilename="DistinguishableOperator.java"/><class name="org/op4j/operators/qualities/ExecutableMapEntryOperator" sourcefilename="ExecutableMapEntryOperator.java"/><class name="org/op4j/operators/qualities/GenerizableOperator" sourcefilename="GenerizableOperator.java"/><class name="org/op4j/operators/qualities/ExecutableMapSelectedOperator" sourcefilename="ExecutableMapSelectedOperator.java"/><class name="org/op4j/operators/qualities/ExecutableSetSelectedOperator" sourcefilename="ExecutableSetSelectedOperator.java"/><class name="org/op4j/operators/qualities/ExecutableMapEntrySelectedOperator" sourcefilename="ExecutableMapEntrySelectedOperator.java"/><class name="org/op4j/operators/qualities/SelectableMapEntryComponentOperator" sourcefilename="SelectableMapEntryComponentOperator.java"/><class name="org/op4j/operators/qualities/ModifiableCollectionOperator" sourcefilename="ModifiableCollectionOperator.java"/><class name="org/op4j/operators/qualities/ReversibleOperator" sourcefilename="ReversibleOperator.java"/><class name="org/op4j/operators/qualities/ConvertibleToSetOperator" sourcefilename="ConvertibleToSetOperator.java"/><class name="org/op4j/operators/qualities/ExecutableIndefiniteArrayOperator" sourcefilename="ExecutableIndefiniteArrayOperator.java"/><class name="org/op4j/operators/qualities/CastableToArrayOperator" sourcefilename="CastableToArrayOperator.java"/><class name="org/op4j/operators/qualities/NavigableMapOperator" sourcefilename="NavigableMapOperator.java"/><class name="org/op4j/operators/qualities/SelectedOperator" sourcefilename="SelectedOperator.java"/><class name="org/op4j/operators/qualities/ModifiableMapOperator" sourcefilename="ModifiableMapOperator.java"/><class name="org/op4j/operators/qualities/SelectedMapEntryOperator" sourcefilename="SelectedMapEntryOperator.java"/><class name="org/op4j/operators/qualities/ReplaceableOperator" sourcefilename="ReplaceableOperator.java"/><class name="org/op4j/operators/qualities/SelectableMapEntryOperator" sourcefilename="SelectableMapEntryOperator.java"/><class name="org/op4j/operators/qualities/CastableToListOperator" sourcefilename="CastableToListOperator.java"/><class name="org/op4j/operators/qualities/Operator" sourcefilename="Operator.java"/><class name="org/op4j/operators/qualities/ExecutableListSelectedOperator" sourcefilename="ExecutableListSelectedOperator.java"/><sourcefile name="BuilderOperator.java"/><sourcefile name="ExecutableListOperator.java"/><sourcefile name="UniqOpOperator.java"/><sourcefile name="ExecutableMapOperator.java"/><sourcefile name="ConvertibleToMapOfListOperator.java"/><sourcefile name="ExecutableSelectedOperator.java"/><sourcefile name="SelectedElementsOperator.java"/><sourcefile name="ExecutableOperator.java"/><sourcefile name="CastableToArrayOperator.java"/><sourcefile name="SelectableElementsOperator.java"/><sourcefile name="NavigatingCollectionOperator.java"/><sourcefile name="ExtractableMapOperator.java"/><sourcefile name="ConvertibleToSetOperator.java"/><sourcefile name="ConvertibleToListOperator.java"/><sourcefile name="NavigableMapOperator.java"/><sourcefile name="SelectedMapEntryComponentOperator.java"/><sourcefile name="ReversibleOperator.java"/><sourcefile name="ConvertibleToMapOperator.java"/><sourcefile name="ConvertibleToMapOfArrayOperator.java"/><sourcefile name="ExecutableArrayElementsOperator.java"/><sourcefile name="CastableToListOperator.java"/><sourcefile name="ExecutableElementsOperator.java"/><sourcefile name="ExecutableSetSelectedOperator.java"/><sourcefile name="SelectableMapEntryComponentOperator.java"/><sourcefile name="ConvertibleToMapOfSetOperator.java"/><sourcefile name="CastableToStructuresOperator.java"/><sourcefile name="ExecutableListSelectedOperator.java"/><sourcefile name="GenerizableOperator.java"/><sourcefile name="ExecutableSetOperator.java"/><sourcefile name="SelectableOperator.java"/><sourcefile name="BuildingMapOperator.java"/><sourcefile name="ExecutableIndefiniteArrayOperator.java"/><sourcefile name="SelectedOperator.java"/><sourcefile name="ExecutableMapEntryOperator.java"/><sourcefile name="ConvertibleToArrayOperator.java"/><sourcefile name="UniqFnOperator.java"/><sourcefile name="UniqOperator.java"/><sourcefile name="ModifiableCollectionOperator.java"/><sourcefile name="TotalizableOperator.java"/><sourcefile name="CastableToMapOperator.java"/><sourcefile name="NavigableCollectionOperator.java"/><sourcefile name="Operator.java"/><sourcefile name="ExecutableMapEntrySelectedOperator.java"/><sourcefile name="ModifiableMapOperator.java"/><sourcefile name="ReplaceableOperator.java"/><sourcefile name="CastableToSetOperator.java"/><sourcefile name="NavigatingMapEntryOperator.java"/><sourcefile name="SelectableMapEntryOperator.java"/><sourcefile name="ExecutableMapSelectedOperator.java"/><sourcefile name="SortableOperator.java"/><sourcefile name="NavigatingMapOperator.java"/><sourcefile name="CastableToTypeOperator.java"/><sourcefile name="SelectedMapEntryOperator.java"/><sourcefile name="NavigableMapEntryOperator.java"/><sourcefile name="ExecutableArrayOperator.java"/><sourcefile name="ReplaceableIfNullOperator.java"/><sourcefile name="ExecutableArraySelectedOperator.java"/><sourcefile name="DistinguishableOperator.java"/></package><package name="org/javatuples/valueintf"><class name="org/javatuples/valueintf/IValueValue" sourcefilename="IValueValue.java"/><class name="org/javatuples/valueintf/IValue8" sourcefilename="IValue8.java"/><class name="org/javatuples/valueintf/IValue9" sourcefilename="IValue9.java"/><class name="org/javatuples/valueintf/IValue6" sourcefilename="IValue6.java"/><class name="org/javatuples/valueintf/IValue7" sourcefilename="IValue7.java"/><class name="org/javatuples/valueintf/IValue0" sourcefilename="IValue0.java"/><class name="org/javatuples/valueintf/IValue1" sourcefilename="IValue1.java"/><class name="org/javatuples/valueintf/IValue4" sourcefilename="IValue4.java"/><class name="org/javatuples/valueintf/IValue5" sourcefilename="IValue5.java"/><class name="org/javatuples/valueintf/IValue2" sourcefilename="IValue2.java"/><class name="org/javatuples/valueintf/IValue3" sourcefilename="IValue3.java"/><class name="org/javatuples/valueintf/IValueKey" sourcefilename="IValueKey.java"/><class name="org/javatuples/valueintf/IValueLabel" sourcefilename="IValueLabel.java"/><sourcefile name="IValueLabel.java"/><sourcefile name="IValue7.java"/><sourcefile name="IValue9.java"/><sourcefile name="IValue5.java"/><sourcefile name="IValue2.java"/><sourcefile name="IValueValue.java"/><sourcefile name="IValueKey.java"/><sourcefile name="IValue3.java"/><sourcefile name="IValue4.java"/><sourcefile name="IValue8.java"/><sourcefile name="IValue1.java"/><sourcefile name="IValue6.java"/><sourcefile name="IValue0.java"/></package><package name="org/op4j/operators/intf/generic"><class name="org/op4j/operators/intf/generic/ILevel0GenericUniqSelectedOperator" sourcefilename="ILevel0GenericUniqSelectedOperator.java"/><class name="org/op4j/operators/intf/generic/ILevel0GenericUniqOperator" sourcefilename="ILevel0GenericUniqOperator.java"/><sourcefile name="ILevel0GenericUniqOperator.java"/><sourcefile name="ILevel0GenericUniqSelectedOperator.java"/></package><package name="org/op4j/operators/impl/fn/array"><class name="org/op4j/operators/impl/fn/array/Level1ArraySelectedElementsSelectedOperator" sourcefilename="Level1ArraySelectedElementsSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/target/Target;)V" line="39"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/fn/array/Level1ArraySelectedElementsOperator;" line="45"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArraySelectedElementsSelectedOperator;" line="50"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/array/Level1ArraySelectedElementsSelectedOperator;" line="55"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="60"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/array/Level0ArraySelectedOperator" sourcefilename="Level0ArraySelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/target/Target;)V" line="44"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEach" desc="()Lorg/op4j/operators/impl/fn/array/Level1ArraySelectedElementsOperator;" line="50"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="distinct" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="55"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sortBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="61"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insertAll" desc="(I[Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="66"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexes" desc="([I)Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="71"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllEqual" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="76"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="82"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="88"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="94"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="100"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="106"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="112"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexesNot" desc="([I)Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="117"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNull" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="122"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsArray" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="127"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="132"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="137"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="142"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="148"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insert" desc="(ILjava/lang/Object;)Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="153"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="158"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="(Ljava/util/Comparator;)Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="164"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="169"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="174"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="179"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="309" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="26" covered="0"/><counter type="METHOD" missed="26" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/array/Level0ArrayOperator" sourcefilename="Level0ArrayOperator.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/target/Target;)V" line="58"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="64"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="68"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insert" desc="(ILjava/lang/Object;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="73"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insertAll" desc="(I[Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="77"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="83"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="distinct" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="87"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEach" desc="()Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsOperator;" line="91"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexes" desc="([I)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="96"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllEqual" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="101"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="107"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="112"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="117"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="122"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="128"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="134"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexesNot" desc="([I)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="139"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNull" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="145"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="151"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="(Ljava/util/Comparator;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="156"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toList" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="160"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="couple" desc="()Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="165"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="coupleAndGroup" desc="()Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="169"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="175"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="179"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeys" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="183"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValues" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="187"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeysBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="196"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesBy" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="200"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeys" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="204"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValues" desc="(Lorg/javaruntype/type/Type;[Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="208"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="218"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toGroupMapOf" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="222"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSet" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="226"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="231"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generic" desc="()Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="235"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="243"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToArrayOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="247"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="255"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="260"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="265"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="276"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsArray" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="289"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsArrayOf" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="297"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="305"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="310"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceIfNullWith" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="315"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="320"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="325"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="all" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="341"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="any" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="346"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sortBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="352"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeysFrom" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="359"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeysFrom" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="363"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesFrom" desc="(Lorg/javaruntype/type/Type;Ljava/util/Collection;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="367"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesFrom" desc="(Lorg/javaruntype/type/Type;[Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="371"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysFrom" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="375"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysFrom" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="379"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesFrom" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="383"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesFrom" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="387"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverse" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="393"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toGroupMapOf" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="399"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="404"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalseAsArray" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="414"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalseAsArrayOf" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="418"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNullAsArray" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="422"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNullAsArrayOf" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="426"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNullAsArray" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="430"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNullAsArrayOf" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="434"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrueAsArray" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="438"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrueAsArrayOf" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="442"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="448"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfFalse" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="452"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNotNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="456"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNotNull" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="460"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="464"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNull" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="468"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="472"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfTrue" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="476"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="958" covered="0"/><counter type="LINE" missed="81" covered="0"/><counter type="COMPLEXITY" missed="79" covered="0"/><counter type="METHOD" missed="79" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/array/Level1ArrayElementsSelectedOperator" sourcefilename="Level1ArrayElementsSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/target/Target;)V" line="39"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsOperator;" line="45"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsSelectedOperator;" line="50"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsSelectedOperator;" line="55"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="60"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/array/Level1ArraySelectedElementsOperator" sourcefilename="Level1ArraySelectedElementsOperator.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/target/Target;)V" line="39"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArraySelectedElementsSelectedOperator;" line="45"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArraySelectedElementsSelectedOperator;" line="50"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/fn/array/Level1ArraySelectedElementsSelectedOperator;" line="55"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/fn/array/Level1ArraySelectedElementsSelectedOperator;" line="60"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndex" desc="([I)Lorg/op4j/operators/impl/fn/array/Level1ArraySelectedElementsSelectedOperator;" line="65"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndexNot" desc="([I)Lorg/op4j/operators/impl/fn/array/Level1ArraySelectedElementsSelectedOperator;" line="70"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endFor" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArraySelectedOperator;" line="75"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArraySelectedElementsSelectedOperator;" line="80"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArraySelectedElementsSelectedOperator;" line="85"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArraySelectedElementsSelectedOperator;" line="90"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArraySelectedElementsSelectedOperator;" line="95"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArraySelectedElementsOperator;" line="100"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/array/Level1ArraySelectedElementsOperator;" line="105"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="110"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="143" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/array/Level1ArrayElementsOperator" sourcefilename="Level1ArrayElementsOperator.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/target/Target;)V" line="47"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endFor" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="54"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castTo" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsOperator;" line="59"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="68"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndex" desc="([I)Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsSelectedOperator;" line="73"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndexNot" desc="([I)Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsSelectedOperator;" line="78"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsSelectedOperator;" line="83"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsSelectedOperator;" line="88"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsSelectedOperator;" line="93"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsSelectedOperator;" line="104"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsOperator;" line="119"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsOperator;" line="128"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsOperator;" line="134"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceIfNullWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsOperator;" line="140"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsOperator;" line="147"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalse" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsOperator;" line="152"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfIndex" desc="([ILorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsOperator;" line="157"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfIndex" desc="(Lorg/javaruntype/type/Type;[ILorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsOperator;" line="162"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfIndexNot" desc="([ILorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsOperator;" line="167"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfIndexNot" desc="(Lorg/javaruntype/type/Type;[ILorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsOperator;" line="172"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsOperator;" line="178"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNull" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsOperator;" line="184"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsOperator;" line="190"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNull" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsOperator;" line="196"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsOperator;" line="202"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrue" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/array/Level1ArrayElementsOperator;" line="208"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="272" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="26" covered="0"/><counter type="METHOD" missed="26" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Level1ArrayElementsSelectedOperator.java"><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="9" ci="0" mb="0" cb="0"/><line nr="50" mi="11" ci="0" mb="0" cb="0"/><line nr="55" mi="11" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level1ArrayElementsOperator.java"><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="12" ci="0" mb="0" cb="0"/><line nr="59" mi="7" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="10" ci="0" mb="0" cb="0"/><line nr="78" mi="10" ci="0" mb="0" cb="0"/><line nr="83" mi="10" ci="0" mb="0" cb="0"/><line nr="88" mi="10" ci="0" mb="0" cb="0"/><line nr="93" mi="9" ci="0" mb="0" cb="0"/><line nr="104" mi="9" ci="0" mb="0" cb="0"/><line nr="119" mi="11" ci="0" mb="0" cb="0"/><line nr="128" mi="10" ci="0" mb="0" cb="0"/><line nr="134" mi="11" ci="0" mb="0" cb="0"/><line nr="140" mi="6" ci="0" mb="0" cb="0"/><line nr="147" mi="13" ci="0" mb="0" cb="0"/><line nr="152" mi="12" ci="0" mb="0" cb="0"/><line nr="157" mi="13" ci="0" mb="0" cb="0"/><line nr="162" mi="12" ci="0" mb="0" cb="0"/><line nr="167" mi="13" ci="0" mb="0" cb="0"/><line nr="172" mi="12" ci="0" mb="0" cb="0"/><line nr="178" mi="12" ci="0" mb="0" cb="0"/><line nr="184" mi="11" ci="0" mb="0" cb="0"/><line nr="190" mi="12" ci="0" mb="0" cb="0"/><line nr="196" mi="11" ci="0" mb="0" cb="0"/><line nr="202" mi="13" ci="0" mb="0" cb="0"/><line nr="208" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="272" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="26" covered="0"/><counter type="METHOD" missed="26" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level1ArraySelectedElementsSelectedOperator.java"><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="9" ci="0" mb="0" cb="0"/><line nr="50" mi="11" ci="0" mb="0" cb="0"/><line nr="55" mi="11" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level0ArraySelectedOperator.java"><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="10" ci="0" mb="0" cb="0"/><line nr="55" mi="11" ci="0" mb="0" cb="0"/><line nr="61" mi="12" ci="0" mb="0" cb="0"/><line nr="66" mi="13" ci="0" mb="0" cb="0"/><line nr="71" mi="12" ci="0" mb="0" cb="0"/><line nr="76" mi="12" ci="0" mb="0" cb="0"/><line nr="82" mi="12" ci="0" mb="0" cb="0"/><line nr="88" mi="12" ci="0" mb="0" cb="0"/><line nr="94" mi="12" ci="0" mb="0" cb="0"/><line nr="100" mi="12" ci="0" mb="0" cb="0"/><line nr="106" mi="12" ci="0" mb="0" cb="0"/><line nr="112" mi="12" ci="0" mb="0" cb="0"/><line nr="117" mi="12" ci="0" mb="0" cb="0"/><line nr="122" mi="11" ci="0" mb="0" cb="0"/><line nr="127" mi="14" ci="0" mb="0" cb="0"/><line nr="132" mi="9" ci="0" mb="0" cb="0"/><line nr="137" mi="17" ci="0" mb="0" cb="0"/><line nr="142" mi="12" ci="0" mb="0" cb="0"/><line nr="148" mi="12" ci="0" mb="0" cb="0"/><line nr="153" mi="18" ci="0" mb="0" cb="0"/><line nr="158" mi="11" ci="0" mb="0" cb="0"/><line nr="164" mi="12" ci="0" mb="0" cb="0"/><line nr="169" mi="14" ci="0" mb="0" cb="0"/><line nr="174" mi="14" ci="0" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="309" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="26" covered="0"/><counter type="METHOD" missed="26" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level1ArraySelectedElementsOperator.java"><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="10" ci="0" mb="0" cb="0"/><line nr="50" mi="10" ci="0" mb="0" cb="0"/><line nr="55" mi="9" ci="0" mb="0" cb="0"/><line nr="60" mi="9" ci="0" mb="0" cb="0"/><line nr="65" mi="10" ci="0" mb="0" cb="0"/><line nr="70" mi="10" ci="0" mb="0" cb="0"/><line nr="75" mi="12" ci="0" mb="0" cb="0"/><line nr="80" mi="10" ci="0" mb="0" cb="0"/><line nr="85" mi="10" ci="0" mb="0" cb="0"/><line nr="90" mi="10" ci="0" mb="0" cb="0"/><line nr="95" mi="10" ci="0" mb="0" cb="0"/><line nr="100" mi="11" ci="0" mb="0" cb="0"/><line nr="105" mi="11" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="143" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level0ArrayOperator.java"><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="17" ci="0" mb="0" cb="0"/><line nr="68" mi="12" ci="0" mb="0" cb="0"/><line nr="73" mi="18" ci="0" mb="0" cb="0"/><line nr="77" mi="13" ci="0" mb="0" cb="0"/><line nr="83" mi="12" ci="0" mb="0" cb="0"/><line nr="87" mi="11" ci="0" mb="0" cb="0"/><line nr="91" mi="10" ci="0" mb="0" cb="0"/><line nr="96" mi="12" ci="0" mb="0" cb="0"/><line nr="101" mi="12" ci="0" mb="0" cb="0"/><line nr="107" mi="12" ci="0" mb="0" cb="0"/><line nr="112" mi="12" ci="0" mb="0" cb="0"/><line nr="117" mi="12" ci="0" mb="0" cb="0"/><line nr="122" mi="12" ci="0" mb="0" cb="0"/><line nr="128" mi="12" ci="0" mb="0" cb="0"/><line nr="134" mi="12" ci="0" mb="0" cb="0"/><line nr="139" mi="12" ci="0" mb="0" cb="0"/><line nr="145" mi="11" ci="0" mb="0" cb="0"/><line nr="151" mi="11" ci="0" mb="0" cb="0"/><line nr="156" mi="12" ci="0" mb="0" cb="0"/><line nr="160" mi="11" ci="0" mb="0" cb="0"/><line nr="165" mi="11" ci="0" mb="0" cb="0"/><line nr="169" mi="11" ci="0" mb="0" cb="0"/><line nr="175" mi="12" ci="0" mb="0" cb="0"/><line nr="179" mi="12" ci="0" mb="0" cb="0"/><line nr="183" mi="12" ci="0" mb="0" cb="0"/><line nr="187" mi="12" ci="0" mb="0" cb="0"/><line nr="196" mi="12" ci="0" mb="0" cb="0"/><line nr="200" mi="13" ci="0" mb="0" cb="0"/><line nr="204" mi="12" ci="0" mb="0" cb="0"/><line nr="208" mi="13" ci="0" mb="0" cb="0"/><line nr="218" mi="12" ci="0" mb="0" cb="0"/><line nr="222" mi="13" ci="0" mb="0" cb="0"/><line nr="226" mi="11" ci="0" mb="0" cb="0"/><line nr="231" mi="6" ci="0" mb="0" cb="0"/><line nr="235" mi="6" ci="0" mb="0" cb="0"/><line nr="243" mi="5" ci="0" mb="0" cb="0"/><line nr="247" mi="5" ci="0" mb="0" cb="0"/><line nr="255" mi="10" ci="0" mb="0" cb="0"/><line nr="260" mi="10" ci="0" mb="0" cb="0"/><line nr="265" mi="9" ci="0" mb="0" cb="0"/><line nr="276" mi="9" ci="0" mb="0" cb="0"/><line nr="289" mi="14" ci="0" mb="0" cb="0"/><line nr="297" mi="12" ci="0" mb="0" cb="0"/><line nr="305" mi="9" ci="0" mb="0" cb="0"/><line nr="310" mi="14" ci="0" mb="0" cb="0"/><line nr="315" mi="6" ci="0" mb="0" cb="0"/><line nr="320" mi="12" ci="0" mb="0" cb="0"/><line nr="325" mi="14" ci="0" mb="0" cb="0"/><line nr="341" mi="12" ci="0" mb="0" cb="0"/><line nr="346" mi="12" ci="0" mb="0" cb="0"/><line nr="352" mi="14" ci="0" mb="0" cb="0"/><line nr="359" mi="12" ci="0" mb="0" cb="0"/><line nr="363" mi="12" ci="0" mb="0" cb="0"/><line nr="367" mi="13" ci="0" mb="0" cb="0"/><line nr="371" mi="13" ci="0" mb="0" cb="0"/><line nr="375" mi="12" ci="0" mb="0" cb="0"/><line nr="379" mi="12" ci="0" mb="0" cb="0"/><line nr="383" mi="12" ci="0" mb="0" cb="0"/><line nr="387" mi="12" ci="0" mb="0" cb="0"/><line nr="393" mi="13" ci="0" mb="0" cb="0"/><line nr="399" mi="14" ci="0" mb="0" cb="0"/><line nr="404" mi="13" ci="0" mb="0" cb="0"/><line nr="414" mi="16" ci="0" mb="0" cb="0"/><line nr="418" mi="14" ci="0" mb="0" cb="0"/><line nr="422" mi="15" ci="0" mb="0" cb="0"/><line nr="426" mi="13" ci="0" mb="0" cb="0"/><line nr="430" mi="15" ci="0" mb="0" cb="0"/><line nr="434" mi="13" ci="0" mb="0" cb="0"/><line nr="438" mi="16" ci="0" mb="0" cb="0"/><line nr="442" mi="14" ci="0" mb="0" cb="0"/><line nr="448" mi="16" ci="0" mb="0" cb="0"/><line nr="452" mi="14" ci="0" mb="0" cb="0"/><line nr="456" mi="15" ci="0" mb="0" cb="0"/><line nr="460" mi="13" ci="0" mb="0" cb="0"/><line nr="464" mi="15" ci="0" mb="0" cb="0"/><line nr="468" mi="13" ci="0" mb="0" cb="0"/><line nr="472" mi="16" ci="0" mb="0" cb="0"/><line nr="476" mi="14" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="958" covered="0"/><counter type="LINE" missed="81" covered="0"/><counter type="COMPLEXITY" missed="79" covered="0"/><counter type="METHOD" missed="79" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="1766" covered="0"/><counter type="LINE" missed="168" covered="0"/><counter type="COMPLEXITY" missed="156" covered="0"/><counter type="METHOD" missed="156" covered="0"/><counter type="CLASS" missed="6" covered="0"/></package><package name="org/op4j/operators/intf/set"><class name="org/op4j/operators/intf/set/ILevel0SetOperator" sourcefilename="ILevel0SetOperator.java"/><class name="org/op4j/operators/intf/set/ILevel0SetSelectedOperator" sourcefilename="ILevel0SetSelectedOperator.java"/><class name="org/op4j/operators/intf/set/ILevel1SetElementsOperator" sourcefilename="ILevel1SetElementsOperator.java"/><class name="org/op4j/operators/intf/set/ILevel1SetElementsSelectedOperator" sourcefilename="ILevel1SetElementsSelectedOperator.java"/><class name="org/op4j/operators/intf/set/ILevel1SetSelectedElementsSelectedOperator" sourcefilename="ILevel1SetSelectedElementsSelectedOperator.java"/><class name="org/op4j/operators/intf/set/ILevel1SetSelectedElementsOperator" sourcefilename="ILevel1SetSelectedElementsOperator.java"/><sourcefile name="ILevel1SetElementsOperator.java"/><sourcefile name="ILevel1SetSelectedElementsSelectedOperator.java"/><sourcefile name="ILevel0SetOperator.java"/><sourcefile name="ILevel1SetSelectedElementsOperator.java"/><sourcefile name="ILevel1SetElementsSelectedOperator.java"/><sourcefile name="ILevel0SetSelectedOperator.java"/></package><package name="org/op4j/operators/intf/map"><class name="org/op4j/operators/intf/map/ILevel1MapSelectedEntriesSelectedOperator" sourcefilename="ILevel1MapSelectedEntriesSelectedOperator.java"/><class name="org/op4j/operators/intf/map/ILevel2MapSelectedEntriesSelectedKeyOperator" sourcefilename="ILevel2MapSelectedEntriesSelectedKeyOperator.java"/><class name="org/op4j/operators/intf/map/ILevel1MapEntriesOperator" sourcefilename="ILevel1MapEntriesOperator.java"/><class name="org/op4j/operators/intf/map/ILevel2MapEntriesValueOperator" sourcefilename="ILevel2MapEntriesValueOperator.java"/><class name="org/op4j/operators/intf/map/ILevel2MapSelectedEntriesKeyOperator" sourcefilename="ILevel2MapSelectedEntriesKeyOperator.java"/><class name="org/op4j/operators/intf/map/ILevel2MapEntriesKeyOperator" sourcefilename="ILevel2MapEntriesKeyOperator.java"/><class name="org/op4j/operators/intf/map/ILevel0MapOperator" sourcefilename="ILevel0MapOperator.java"/><class name="org/op4j/operators/intf/map/ILevel2MapEntriesSelectedValueSelectedOperator" sourcefilename="ILevel2MapEntriesSelectedValueSelectedOperator.java"/><class name="org/op4j/operators/intf/map/ILevel2MapSelectedEntriesKeySelectedOperator" sourcefilename="ILevel2MapSelectedEntriesKeySelectedOperator.java"/><class name="org/op4j/operators/intf/map/ILevel0BuildingMapOperator" sourcefilename="ILevel0BuildingMapOperator.java"/><class name="org/op4j/operators/intf/map/ILevel2MapEntriesValueSelectedOperator" sourcefilename="ILevel2MapEntriesValueSelectedOperator.java"/><class name="org/op4j/operators/intf/map/ILevel2MapSelectedEntriesSelectedKeySelectedOperator" sourcefilename="ILevel2MapSelectedEntriesSelectedKeySelectedOperator.java"/><class name="org/op4j/operators/intf/map/ILevel2MapSelectedEntriesValueOperator" sourcefilename="ILevel2MapSelectedEntriesValueOperator.java"/><class name="org/op4j/operators/intf/map/ILevel1MapSelectedEntriesOperator" sourcefilename="ILevel1MapSelectedEntriesOperator.java"/><class name="org/op4j/operators/intf/map/ILevel2MapEntriesSelectedKeyOperator" sourcefilename="ILevel2MapEntriesSelectedKeyOperator.java"/><class name="org/op4j/operators/intf/map/ILevel2MapSelectedEntriesValueSelectedOperator" sourcefilename="ILevel2MapSelectedEntriesValueSelectedOperator.java"/><class name="org/op4j/operators/intf/map/ILevel2MapEntriesSelectedKeySelectedOperator" sourcefilename="ILevel2MapEntriesSelectedKeySelectedOperator.java"/><class name="org/op4j/operators/intf/map/ILevel2MapSelectedEntriesSelectedValueSelectedOperator" sourcefilename="ILevel2MapSelectedEntriesSelectedValueSelectedOperator.java"/><class name="org/op4j/operators/intf/map/ILevel1MapEntriesSelectedOperator" sourcefilename="ILevel1MapEntriesSelectedOperator.java"/><class name="org/op4j/operators/intf/map/ILevel2MapSelectedEntriesSelectedValueOperator" sourcefilename="ILevel2MapSelectedEntriesSelectedValueOperator.java"/><class name="org/op4j/operators/intf/map/ILevel2MapEntriesKeySelectedOperator" sourcefilename="ILevel2MapEntriesKeySelectedOperator.java"/><class name="org/op4j/operators/intf/map/ILevel2MapEntriesSelectedValueOperator" sourcefilename="ILevel2MapEntriesSelectedValueOperator.java"/><class name="org/op4j/operators/intf/map/ILevel0MapSelectedOperator" sourcefilename="ILevel0MapSelectedOperator.java"/><sourcefile name="ILevel2MapEntriesKeySelectedOperator.java"/><sourcefile name="ILevel2MapSelectedEntriesValueOperator.java"/><sourcefile name="ILevel2MapEntriesKeyOperator.java"/><sourcefile name="ILevel2MapSelectedEntriesSelectedValueOperator.java"/><sourcefile name="ILevel2MapEntriesSelectedValueSelectedOperator.java"/><sourcefile name="ILevel2MapSelectedEntriesSelectedValueSelectedOperator.java"/><sourcefile name="ILevel2MapSelectedEntriesSelectedKeyOperator.java"/><sourcefile name="ILevel2MapSelectedEntriesKeySelectedOperator.java"/><sourcefile name="ILevel0MapSelectedOperator.java"/><sourcefile name="ILevel1MapSelectedEntriesOperator.java"/><sourcefile name="ILevel1MapEntriesOperator.java"/><sourcefile name="ILevel0MapOperator.java"/><sourcefile name="ILevel1MapEntriesSelectedOperator.java"/><sourcefile name="ILevel2MapEntriesValueSelectedOperator.java"/><sourcefile name="ILevel2MapEntriesSelectedValueOperator.java"/><sourcefile name="ILevel2MapEntriesSelectedKeyOperator.java"/><sourcefile name="ILevel2MapSelectedEntriesValueSelectedOperator.java"/><sourcefile name="ILevel0BuildingMapOperator.java"/><sourcefile name="ILevel1MapSelectedEntriesSelectedOperator.java"/><sourcefile name="ILevel2MapSelectedEntriesSelectedKeySelectedOperator.java"/><sourcefile name="ILevel2MapEntriesSelectedKeySelectedOperator.java"/><sourcefile name="ILevel2MapEntriesValueOperator.java"/><sourcefile name="ILevel2MapSelectedEntriesKeyOperator.java"/></package><package name="org/op4j/operators/impl"><class name="org/op4j/operators/impl/AbstractOperator" sourcefilename="AbstractOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTarget" desc="()Lorg/op4j/target/Target;" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AbstractOperator.java"><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/op4j/operators/impl/fn/set"><class name="org/op4j/operators/impl/fn/set/Level1SetElementsOperator" sourcefilename="Level1SetElementsOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="46"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endFor" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="51"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castTo" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/set/Level1SetElementsOperator;" line="56"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="71"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndex" desc="([I)Lorg/op4j/operators/impl/fn/set/Level1SetElementsSelectedOperator;" line="76"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndexNot" desc="([I)Lorg/op4j/operators/impl/fn/set/Level1SetElementsSelectedOperator;" line="81"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level1SetElementsSelectedOperator;" line="86"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level1SetElementsSelectedOperator;" line="91"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/fn/set/Level1SetElementsSelectedOperator;" line="96"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/fn/set/Level1SetElementsSelectedOperator;" line="107"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level1SetElementsOperator;" line="120"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/set/Level1SetElementsOperator;" line="125"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceIfNullWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/set/Level1SetElementsOperator;" line="130"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level1SetElementsOperator;" line="141"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level1SetElementsOperator;" line="146"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfIndex" desc="([ILorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level1SetElementsOperator;" line="151"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfIndex" desc="([ILorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level1SetElementsOperator;" line="156"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfIndexNot" desc="([ILorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level1SetElementsOperator;" line="161"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfIndexNot" desc="([ILorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level1SetElementsOperator;" line="166"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level1SetElementsOperator;" line="172"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level1SetElementsOperator;" line="178"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level1SetElementsOperator;" line="184"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level1SetElementsOperator;" line="190"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level1SetElementsOperator;" line="196"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level1SetElementsOperator;" line="202"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="221" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="25" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/set/Level0SetOperator" sourcefilename="Level0SetOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="62"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="66"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insert" desc="(ILjava/lang/Object;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="71"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insertAll" desc="(I[Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="75"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="81"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEach" desc="()Lorg/op4j/operators/impl/fn/set/Level1SetElementsOperator;" line="86"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexes" desc="([I)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="91"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllEqual" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="96"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="102"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="107"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="112"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="117"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="123"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="129"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexesNot" desc="([I)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="134"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNull" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="139"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="146"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="(Ljava/util/Comparator;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="152"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArrayOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="157"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toList" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="162"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="couple" desc="()Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="167"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="coupleAndGroup" desc="()Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="171"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="177"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="182"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeys" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="186"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValues" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="190"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeysBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="196"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="201"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeys" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="205"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValues" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="209"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="216"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toGroupMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="221"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="226"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generic" desc="()Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="231"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="242"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToSetOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="246"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="256"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="261"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="266"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="277"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsSet" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="290"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="298"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/util/Set;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="303"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceIfNullWith" desc="(Ljava/util/Set;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="308"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="315"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="all" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="328"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="any" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="334"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sortBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="344"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeysFrom" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="353"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeysFrom" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="357"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesFrom" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="361"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesFrom" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="365"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysFrom" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="369"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysFrom" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="373"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesFrom" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="377"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesFrom" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="381"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverse" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="387"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toGroupMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="396"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="402"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalseAsSet" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="411"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalseAsSet" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="415"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNullAsSet" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="419"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNullAsSet" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="423"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNullAsSet" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="427"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNullAsSet" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="431"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrueAsSet" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="435"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrueAsSet" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="439"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="445"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="449"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNotNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="453"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNotNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="457"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="461"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="465"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="469"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="473"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="715" covered="30"/><counter type="LINE" missed="72" covered="5"/><counter type="COMPLEXITY" missed="72" covered="4"/><counter type="METHOD" missed="72" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/operators/impl/fn/set/Level0SetSelectedOperator" sourcefilename="Level0SetSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEach" desc="()Lorg/op4j/operators/impl/fn/set/Level1SetSelectedElementsOperator;" line="46"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sortBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="52"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insertAll" desc="(I[Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="57"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexes" desc="([I)Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="62"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllEqual" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="67"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="73"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="79"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="85"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="91"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="97"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="103"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexesNot" desc="([I)Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="108"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNull" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="113"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="118"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsSet" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="123"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="128"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="133"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="139"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insert" desc="(ILjava/lang/Object;)Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="144"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="149"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="(Ljava/util/Comparator;)Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="155"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="160"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/util/Set;)Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="165"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="170"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="241" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="25" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/set/Level1SetSelectedElementsSelectedOperator" sourcefilename="Level1SetSelectedElementsSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/fn/set/Level1SetSelectedElementsOperator;" line="42"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level1SetSelectedElementsSelectedOperator;" line="47"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/set/Level1SetSelectedElementsSelectedOperator;" line="52"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="57"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/set/Level1SetSelectedElementsOperator" sourcefilename="Level1SetSelectedElementsOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level1SetSelectedElementsSelectedOperator;" line="42"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level1SetSelectedElementsSelectedOperator;" line="47"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/fn/set/Level1SetSelectedElementsSelectedOperator;" line="52"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/fn/set/Level1SetSelectedElementsSelectedOperator;" line="57"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndex" desc="([I)Lorg/op4j/operators/impl/fn/set/Level1SetSelectedElementsSelectedOperator;" line="62"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndexNot" desc="([I)Lorg/op4j/operators/impl/fn/set/Level1SetSelectedElementsSelectedOperator;" line="67"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endFor" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetSelectedOperator;" line="72"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level1SetSelectedElementsSelectedOperator;" line="77"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level1SetSelectedElementsSelectedOperator;" line="82"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level1SetSelectedElementsSelectedOperator;" line="87"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level1SetSelectedElementsSelectedOperator;" line="92"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level1SetSelectedElementsOperator;" line="97"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/set/Level1SetSelectedElementsOperator;" line="102"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="107"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="112" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/set/Level1SetElementsSelectedOperator" sourcefilename="Level1SetElementsSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/fn/set/Level1SetElementsOperator;" line="42"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/set/Level1SetElementsSelectedOperator;" line="47"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/set/Level1SetElementsSelectedOperator;" line="52"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="57"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Level1SetElementsOperator.java"><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="8" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="8" ci="0" mb="0" cb="0"/><line nr="81" mi="8" ci="0" mb="0" cb="0"/><line nr="86" mi="8" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="0" cb="0"/><line nr="96" mi="7" ci="0" mb="0" cb="0"/><line nr="107" mi="7" ci="0" mb="0" cb="0"/><line nr="120" mi="9" ci="0" mb="0" cb="0"/><line nr="125" mi="9" ci="0" mb="0" cb="0"/><line nr="130" mi="6" ci="0" mb="0" cb="0"/><line nr="141" mi="11" ci="0" mb="0" cb="0"/><line nr="146" mi="11" ci="0" mb="0" cb="0"/><line nr="151" mi="11" ci="0" mb="0" cb="0"/><line nr="156" mi="11" ci="0" mb="0" cb="0"/><line nr="161" mi="11" ci="0" mb="0" cb="0"/><line nr="166" mi="11" ci="0" mb="0" cb="0"/><line nr="172" mi="10" ci="0" mb="0" cb="0"/><line nr="178" mi="10" ci="0" mb="0" cb="0"/><line nr="184" mi="10" ci="0" mb="0" cb="0"/><line nr="190" mi="10" ci="0" mb="0" cb="0"/><line nr="196" mi="11" ci="0" mb="0" cb="0"/><line nr="202" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="221" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="25" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level1SetSelectedElementsOperator.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="8" ci="0" mb="0" cb="0"/><line nr="47" mi="8" ci="0" mb="0" cb="0"/><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="8" ci="0" mb="0" cb="0"/><line nr="67" mi="8" ci="0" mb="0" cb="0"/><line nr="72" mi="8" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="82" mi="8" ci="0" mb="0" cb="0"/><line nr="87" mi="8" ci="0" mb="0" cb="0"/><line nr="92" mi="8" ci="0" mb="0" cb="0"/><line nr="97" mi="9" ci="0" mb="0" cb="0"/><line nr="102" mi="9" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="112" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level1SetElementsSelectedOperator.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="0" cb="0"/><line nr="47" mi="9" ci="0" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level1SetSelectedElementsSelectedOperator.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="0" cb="0"/><line nr="47" mi="9" ci="0" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level0SetOperator.java"><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="15" ci="0" mb="0" cb="0"/><line nr="66" mi="10" ci="0" mb="0" cb="0"/><line nr="71" mi="16" ci="0" mb="0" cb="0"/><line nr="75" mi="11" ci="0" mb="0" cb="0"/><line nr="81" mi="10" ci="0" mb="0" cb="0"/><line nr="86" mi="8" ci="0" mb="0" cb="0"/><line nr="91" mi="10" ci="0" mb="0" cb="0"/><line nr="96" mi="10" ci="0" mb="0" cb="0"/><line nr="102" mi="10" ci="0" mb="0" cb="0"/><line nr="107" mi="10" ci="0" mb="0" cb="0"/><line nr="112" mi="10" ci="0" mb="0" cb="0"/><line nr="117" mi="10" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="10" mb="0" cb="0"/><line nr="129" mi="10" ci="0" mb="0" cb="0"/><line nr="134" mi="10" ci="0" mb="0" cb="0"/><line nr="139" mi="9" ci="0" mb="0" cb="0"/><line nr="146" mi="9" ci="0" mb="0" cb="0"/><line nr="152" mi="10" ci="0" mb="0" cb="0"/><line nr="157" mi="11" ci="0" mb="0" cb="0"/><line nr="162" mi="9" ci="0" mb="0" cb="0"/><line nr="167" mi="9" ci="0" mb="0" cb="0"/><line nr="171" mi="9" ci="0" mb="0" cb="0"/><line nr="177" mi="10" ci="0" mb="0" cb="0"/><line nr="182" mi="10" ci="0" mb="0" cb="0"/><line nr="186" mi="10" ci="0" mb="0" cb="0"/><line nr="190" mi="10" ci="0" mb="0" cb="0"/><line nr="196" mi="10" ci="0" mb="0" cb="0"/><line nr="201" mi="10" ci="0" mb="0" cb="0"/><line nr="205" mi="10" ci="0" mb="0" cb="0"/><line nr="209" mi="10" ci="0" mb="0" cb="0"/><line nr="216" mi="10" ci="0" mb="0" cb="0"/><line nr="221" mi="10" ci="0" mb="0" cb="0"/><line nr="226" mi="0" ci="6" mb="0" cb="0"/><line nr="231" mi="6" ci="0" mb="0" cb="0"/><line nr="242" mi="5" ci="0" mb="0" cb="0"/><line nr="246" mi="5" ci="0" mb="0" cb="0"/><line nr="256" mi="8" ci="0" mb="0" cb="0"/><line nr="261" mi="8" ci="0" mb="0" cb="0"/><line nr="266" mi="7" ci="0" mb="0" cb="0"/><line nr="277" mi="7" ci="0" mb="0" cb="0"/><line nr="290" mi="9" ci="0" mb="0" cb="0"/><line nr="298" mi="9" ci="0" mb="0" cb="0"/><line nr="303" mi="9" ci="0" mb="0" cb="0"/><line nr="308" mi="6" ci="0" mb="0" cb="0"/><line nr="315" mi="0" ci="10" mb="0" cb="0"/><line nr="328" mi="11" ci="0" mb="0" cb="0"/><line nr="334" mi="11" ci="0" mb="0" cb="0"/><line nr="344" mi="11" ci="0" mb="0" cb="0"/><line nr="353" mi="10" ci="0" mb="0" cb="0"/><line nr="357" mi="10" ci="0" mb="0" cb="0"/><line nr="361" mi="10" ci="0" mb="0" cb="0"/><line nr="365" mi="10" ci="0" mb="0" cb="0"/><line nr="369" mi="10" ci="0" mb="0" cb="0"/><line nr="373" mi="10" ci="0" mb="0" cb="0"/><line nr="377" mi="10" ci="0" mb="0" cb="0"/><line nr="381" mi="10" ci="0" mb="0" cb="0"/><line nr="387" mi="9" ci="0" mb="0" cb="0"/><line nr="396" mi="11" ci="0" mb="0" cb="0"/><line nr="402" mi="11" ci="0" mb="0" cb="0"/><line nr="411" mi="11" ci="0" mb="0" cb="0"/><line nr="415" mi="11" ci="0" mb="0" cb="0"/><line nr="419" mi="10" ci="0" mb="0" cb="0"/><line nr="423" mi="10" ci="0" mb="0" cb="0"/><line nr="427" mi="10" ci="0" mb="0" cb="0"/><line nr="431" mi="10" ci="0" mb="0" cb="0"/><line nr="435" mi="11" ci="0" mb="0" cb="0"/><line nr="439" mi="11" ci="0" mb="0" cb="0"/><line nr="445" mi="12" ci="0" mb="0" cb="0"/><line nr="449" mi="12" ci="0" mb="0" cb="0"/><line nr="453" mi="11" ci="0" mb="0" cb="0"/><line nr="457" mi="11" ci="0" mb="0" cb="0"/><line nr="461" mi="11" ci="0" mb="0" cb="0"/><line nr="465" mi="11" ci="0" mb="0" cb="0"/><line nr="469" mi="12" ci="0" mb="0" cb="0"/><line nr="473" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="715" covered="30"/><counter type="LINE" missed="72" covered="5"/><counter type="COMPLEXITY" missed="72" covered="4"/><counter type="METHOD" missed="72" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Level0SetSelectedOperator.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="8" ci="0" mb="0" cb="0"/><line nr="52" mi="10" ci="0" mb="0" cb="0"/><line nr="57" mi="11" ci="0" mb="0" cb="0"/><line nr="62" mi="10" ci="0" mb="0" cb="0"/><line nr="67" mi="10" ci="0" mb="0" cb="0"/><line nr="73" mi="10" ci="0" mb="0" cb="0"/><line nr="79" mi="10" ci="0" mb="0" cb="0"/><line nr="85" mi="10" ci="0" mb="0" cb="0"/><line nr="91" mi="10" ci="0" mb="0" cb="0"/><line nr="97" mi="10" ci="0" mb="0" cb="0"/><line nr="103" mi="10" ci="0" mb="0" cb="0"/><line nr="108" mi="10" ci="0" mb="0" cb="0"/><line nr="113" mi="9" ci="0" mb="0" cb="0"/><line nr="118" mi="7" ci="0" mb="0" cb="0"/><line nr="123" mi="9" ci="0" mb="0" cb="0"/><line nr="128" mi="15" ci="0" mb="0" cb="0"/><line nr="133" mi="10" ci="0" mb="0" cb="0"/><line nr="139" mi="10" ci="0" mb="0" cb="0"/><line nr="144" mi="16" ci="0" mb="0" cb="0"/><line nr="149" mi="9" ci="0" mb="0" cb="0"/><line nr="155" mi="10" ci="0" mb="0" cb="0"/><line nr="160" mi="10" ci="0" mb="0" cb="0"/><line nr="165" mi="9" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="241" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="25" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="1355" covered="30"/><counter type="LINE" missed="152" covered="5"/><counter type="COMPLEXITY" missed="147" covered="4"/><counter type="METHOD" missed="147" covered="4"/><counter type="CLASS" missed="5" covered="1"/></package><package name="org/op4j/operators/impl/fn/generic"><class name="org/op4j/operators/impl/fn/generic/Level0GenericUniqSelectedOperator" sourcefilename="Level0GenericUniqSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="35"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="40"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqSelectedOperator;" line="45"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqSelectedOperator;" line="50"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="55"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/generic/Level0GenericUniqOperator" sourcefilename="Level0GenericUniqOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intoSingletonArrayOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="62"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intoSingletonList" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="67"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeyBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="73"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValueBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="79"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKey" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="85"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValue" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="91"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intoSingletonMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="97"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intoSingletonSet" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="102"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToArrayOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="107"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToListOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="112"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToMapOf" desc="(Lorg/javaruntype/type/Type;Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="117"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToSetOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="122"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castTo" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="127"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="163"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqSelectedOperator;" line="170"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqSelectedOperator;" line="175"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqSelectedOperator;" line="180"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqSelectedOperator;" line="191"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="203"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="208"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceIfNullWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="213"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="228"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="233"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="238"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="243"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="248"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="253"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="258"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="263"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="307" covered="19"/><counter type="LINE" missed="27" covered="4"/><counter type="COMPLEXITY" missed="27" covered="3"/><counter type="METHOD" missed="27" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Level0GenericUniqSelectedOperator.java"><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="7" ci="0" mb="0" cb="0"/><line nr="45" mi="9" ci="0" mb="0" cb="0"/><line nr="50" mi="9" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level0GenericUniqOperator.java"><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="10" ci="0" mb="0" cb="0"/><line nr="67" mi="9" ci="0" mb="0" cb="0"/><line nr="73" mi="13" ci="0" mb="0" cb="0"/><line nr="79" mi="13" ci="0" mb="0" cb="0"/><line nr="85" mi="18" ci="0" mb="0" cb="0"/><line nr="91" mi="18" ci="0" mb="0" cb="0"/><line nr="97" mi="13" ci="0" mb="0" cb="0"/><line nr="102" mi="9" ci="0" mb="0" cb="0"/><line nr="107" mi="15" ci="0" mb="0" cb="0"/><line nr="112" mi="14" ci="0" mb="0" cb="0"/><line nr="117" mi="18" ci="0" mb="0" cb="0"/><line nr="122" mi="14" ci="0" mb="0" cb="0"/><line nr="127" mi="14" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="8" ci="0" mb="0" cb="0"/><line nr="175" mi="8" ci="0" mb="0" cb="0"/><line nr="180" mi="7" ci="0" mb="0" cb="0"/><line nr="191" mi="7" ci="0" mb="0" cb="0"/><line nr="203" mi="0" ci="9" mb="0" cb="0"/><line nr="208" mi="9" ci="0" mb="0" cb="0"/><line nr="213" mi="6" ci="0" mb="0" cb="0"/><line nr="228" mi="11" ci="0" mb="0" cb="0"/><line nr="233" mi="11" ci="0" mb="0" cb="0"/><line nr="238" mi="10" ci="0" mb="0" cb="0"/><line nr="243" mi="10" ci="0" mb="0" cb="0"/><line nr="248" mi="10" ci="0" mb="0" cb="0"/><line nr="253" mi="10" ci="0" mb="0" cb="0"/><line nr="258" mi="11" ci="0" mb="0" cb="0"/><line nr="263" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="307" covered="19"/><counter type="LINE" missed="27" covered="4"/><counter type="COMPLEXITY" missed="27" covered="3"/><counter type="METHOD" missed="27" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="340" covered="19"/><counter type="LINE" missed="33" covered="4"/><counter type="COMPLEXITY" missed="32" covered="3"/><counter type="METHOD" missed="32" covered="3"/><counter type="CLASS" missed="1" covered="1"/></package><package name="org/op4j/functions"><class name="org/op4j/functions/FnSetOfArrayOf$FlattenArrays" sourcefilename="FnSetOfArrayOf.java"><method name="&lt;init&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/Set;" line="67"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnInteger$Add" sourcefilename="FnInteger.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;)V" line="2216"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Integer;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Integer;" line="2223"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnShort$Abs" sourcefilename="FnShort.java"><method name="&lt;init&gt;" desc="()V" line="2210"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Short;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Short;" line="2215"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOf$RemoveAllNullOrFalse" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="558"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/List;" line="563"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArrayOf$SortBy" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="363"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="370"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnDate$Set" sourcefilename="FnDate.java"><method name="&lt;init&gt;" desc="(II)V" line="756"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Date;Lorg/op4j/functions/ExecCtx;)Ljava/util/Date;" line="763"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$SubStringAfterLast" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6590"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="6595"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnStringAuxNumberConverters$ToShort" sourcefilename="FnStringAuxNumberConverters.java"><method name="&lt;init&gt;" desc="()V" line="891"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DecimalPoint;)V" line="895"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;)V" line="899"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="903"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;Lorg/op4j/functions/DecimalPoint;)V" line="907"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;Ljava/util/Locale;)V" line="911"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;Ljava/lang/String;)V" line="915"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="919"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="923"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNumber" desc="(Ljava/lang/Number;)Ljava/lang/Short;" line="928"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromString" desc="(Ljava/lang/String;I)Ljava/lang/Short;" line="953"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="887"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="103" covered="10"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="27" covered="4"/><counter type="COMPLEXITY" missed="17" covered="2"/><counter type="METHOD" missed="10" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnInteger$Module" sourcefilename="FnInteger.java"><method name="&lt;init&gt;" desc="(Ljava/math/BigInteger;)V" line="2303"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Integer;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Integer;" line="2309"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnFloat" sourcefilename="FnFloat.java"><method name="&lt;init&gt;" desc="()V" line="59"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="()Lorg/op4j/functions/Function;" line="72"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Z)Lorg/op4j/functions/Function;" line="84"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="95"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="106"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;Z)Lorg/op4j/functions/Function;" line="119"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;Z)Lorg/op4j/functions/Function;" line="132"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="()Lorg/op4j/functions/Function;" line="144"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Z)Lorg/op4j/functions/Function;" line="157"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="170"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="183"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;Z)Lorg/op4j/functions/Function;" line="197"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;Z)Lorg/op4j/functions/Function;" line="211"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="()Lorg/op4j/functions/Function;" line="222"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Z)Lorg/op4j/functions/Function;" line="238"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="251"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="264"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;Z)Lorg/op4j/functions/Function;" line="279"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;Z)Lorg/op4j/functions/Function;" line="294"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(Ljava/lang/Float;)Lorg/op4j/functions/Function;" line="308"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(F)Lorg/op4j/functions/Function;" line="322"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="337"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(F)Lorg/op4j/functions/Function;" line="352"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(Ljava/lang/Float;)Lorg/op4j/functions/Function;" line="366"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(F)Lorg/op4j/functions/Function;" line="380"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="395"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(F)Lorg/op4j/functions/Function;" line="410"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="427"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(F)Lorg/op4j/functions/Function;" line="442"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="465"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(F)Lorg/op4j/functions/Function;" line="480"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="503"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(F)Lorg/op4j/functions/Function;" line="518"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="537"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(F)Lorg/op4j/functions/Function;" line="552"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="574"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValueBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="595"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="612"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValueBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="633"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThanBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="653"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqToBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="680"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThanBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="706"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqToBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="736"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNull" desc="()Lorg/op4j/functions/Function;" line="756"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotNull" desc="()Lorg/op4j/functions/Function;" line="769"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="max" desc="()Lorg/op4j/functions/Function;" line="789"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="min" desc="()Lorg/op4j/functions/Function;" line="800"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sum" desc="()Lorg/op4j/functions/Function;" line="811"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avg" desc="()Lorg/op4j/functions/Function;" line="822"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avg" desc="(Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="837"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avg" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="851"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxArray" desc="()Lorg/op4j/functions/Function;" line="862"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minArray" desc="()Lorg/op4j/functions/Function;" line="873"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sumArray" desc="()Lorg/op4j/functions/Function;" line="884"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avgArray" desc="()Lorg/op4j/functions/Function;" line="895"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avgArray" desc="(Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="910"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avgArray" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="924"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="abs" desc="()Lorg/op4j/functions/Function;" line="935"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="947"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(B)Lorg/op4j/functions/Function;" line="959"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(S)Lorg/op4j/functions/Function;" line="971"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(I)Lorg/op4j/functions/Function;" line="983"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(J)Lorg/op4j/functions/Function;" line="995"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(F)Lorg/op4j/functions/Function;" line="1007"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(D)Lorg/op4j/functions/Function;" line="1019"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1032"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(B)Lorg/op4j/functions/Function;" line="1044"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(S)Lorg/op4j/functions/Function;" line="1056"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(I)Lorg/op4j/functions/Function;" line="1068"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(J)Lorg/op4j/functions/Function;" line="1080"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(F)Lorg/op4j/functions/Function;" line="1092"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(D)Lorg/op4j/functions/Function;" line="1104"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1117"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(B)Lorg/op4j/functions/Function;" line="1129"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(S)Lorg/op4j/functions/Function;" line="1141"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(I)Lorg/op4j/functions/Function;" line="1153"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(J)Lorg/op4j/functions/Function;" line="1165"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(F)Lorg/op4j/functions/Function;" line="1177"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(D)Lorg/op4j/functions/Function;" line="1189"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(Ljava/lang/Number;Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="1204"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divideBy" desc="(BLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1218"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(SLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1232"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(ILjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1246"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(JLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1260"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(FLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1274"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(DLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1288"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(Ljava/lang/Number;Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1303"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(BLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1317"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(SLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1331"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1345"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(JLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1359"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(FLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1373"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(DLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1387"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1400"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remainder" desc="(B)Lorg/op4j/functions/Function;" line="1413"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(S)Lorg/op4j/functions/Function;" line="1426"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(I)Lorg/op4j/functions/Function;" line="1439"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remainder" desc="(J)Lorg/op4j/functions/Function;" line="1452"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(F)Lorg/op4j/functions/Function;" line="1465"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(D)Lorg/op4j/functions/Function;" line="1478"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1490"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplyBy" desc="(B)Lorg/op4j/functions/Function;" line="1502"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(S)Lorg/op4j/functions/Function;" line="1514"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(I)Lorg/op4j/functions/Function;" line="1526"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(J)Lorg/op4j/functions/Function;" line="1538"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(F)Lorg/op4j/functions/Function;" line="1550"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(D)Lorg/op4j/functions/Function;" line="1562"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(Ljava/lang/Number;Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="1577"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(BLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1591"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(SLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1605"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(ILjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1619"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(JLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1633"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(FLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1647"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(DLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1661"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(Ljava/lang/Number;Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1675"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(BLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1688"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(SLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1701"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1714"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(JLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1727"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(FLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1740"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(DLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1753"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pow" desc="(I)Lorg/op4j/functions/Function;" line="1766"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pow" desc="(ILjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1780"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pow" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1794"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(Ljava/lang/Number;Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1811"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(FF)Lorg/op4j/functions/Function;" line="1827"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNumber" desc="(Ljava/lang/Number;)Ljava/lang/Float;" line="1834"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="471" covered="79"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="121" covered="18"/><counter type="COMPLEXITY" missed="120" covered="9"/><counter type="METHOD" missed="119" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnDate$Round" sourcefilename="FnDate.java"><method name="&lt;init&gt;" desc="(I)V" line="778"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Date;Lorg/op4j/functions/ExecCtx;)Ljava/util/Date;" line="784"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArrayOf$Reverse" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="()V" line="1602"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="1609"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnStringAuxNumberConverters$ToDecimalNumber$ExecType" sourcefilename="FnStringAuxNumberConverters.java"><method name="&lt;clinit&gt;" desc="()V" line="360"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOf$SortByComparator" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="312"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/Set;" line="317"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$CanBeShort" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="6180"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="6187"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6194"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DecimalPoint;)V" line="6201"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="6208"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="6215"><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="118" covered="12"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="41" covered="5"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnInteger$Subtract" sourcefilename="FnInteger.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;)V" line="2235"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Integer;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Integer;" line="2243"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnDate$FieldStringListToDate" sourcefilename="FnDate.java"><method name="&lt;init&gt;" desc="()V" line="1202"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/util/Date;" line="1208"><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="108" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArrayOf$Add" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="518"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="524"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOf$ZipAndGroupValuesBy" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="869"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="877"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnCollection$Sort" sourcefilename="FnCollection.java"><method name="&lt;init&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/util/Collection;Lorg/op4j/functions/ExecCtx;)Ljava/util/Collection;" line="61"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doSort" desc="(Ljava/util/Collection;Lorg/op4j/functions/ExecCtx;)Ljava/util/Collection;" line="67"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnInteger$Abs" sourcefilename="FnInteger.java"><method name="&lt;init&gt;" desc="()V" line="2202"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Integer;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Integer;" line="2207"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnLong" sourcefilename="FnLong.java"><method name="&lt;init&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="()Lorg/op4j/functions/Function;" line="73"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Z)Lorg/op4j/functions/Function;" line="85"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="96"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="107"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;Z)Lorg/op4j/functions/Function;" line="120"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;Z)Lorg/op4j/functions/Function;" line="133"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="()Lorg/op4j/functions/Function;" line="145"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Z)Lorg/op4j/functions/Function;" line="158"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="171"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="184"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;Z)Lorg/op4j/functions/Function;" line="198"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;Z)Lorg/op4j/functions/Function;" line="212"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="()Lorg/op4j/functions/Function;" line="223"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Z)Lorg/op4j/functions/Function;" line="239"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="252"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="265"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;Z)Lorg/op4j/functions/Function;" line="280"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;Z)Lorg/op4j/functions/Function;" line="295"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(Ljava/lang/Long;)Lorg/op4j/functions/Function;" line="309"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(J)Lorg/op4j/functions/Function;" line="323"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="338"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(J)Lorg/op4j/functions/Function;" line="353"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(Ljava/lang/Long;)Lorg/op4j/functions/Function;" line="367"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(J)Lorg/op4j/functions/Function;" line="381"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="396"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(J)Lorg/op4j/functions/Function;" line="411"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="429"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(J)Lorg/op4j/functions/Function;" line="447"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="462"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(J)Lorg/op4j/functions/Function;" line="483"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="498"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(J)Lorg/op4j/functions/Function;" line="518"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="533"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(J)Lorg/op4j/functions/Function;" line="552"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="569"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValueBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="590"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="610"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValueBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="631"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThanBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="651"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqToBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="679"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThanBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="705"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqToBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="731"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNull" desc="()Lorg/op4j/functions/Function;" line="750"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotNull" desc="()Lorg/op4j/functions/Function;" line="763"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="max" desc="()Lorg/op4j/functions/Function;" line="783"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="min" desc="()Lorg/op4j/functions/Function;" line="794"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sum" desc="()Lorg/op4j/functions/Function;" line="805"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avg" desc="()Lorg/op4j/functions/Function;" line="816"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avg" desc="(Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="831"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avg" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="845"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxArray" desc="()Lorg/op4j/functions/Function;" line="856"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minArray" desc="()Lorg/op4j/functions/Function;" line="867"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sumArray" desc="()Lorg/op4j/functions/Function;" line="878"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avgArray" desc="()Lorg/op4j/functions/Function;" line="889"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avgArray" desc="(Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="904"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avgArray" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="918"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="abs" desc="()Lorg/op4j/functions/Function;" line="929"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="941"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(B)Lorg/op4j/functions/Function;" line="953"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(S)Lorg/op4j/functions/Function;" line="965"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(I)Lorg/op4j/functions/Function;" line="977"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(J)Lorg/op4j/functions/Function;" line="989"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(F)Lorg/op4j/functions/Function;" line="1001"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(D)Lorg/op4j/functions/Function;" line="1013"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1026"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(B)Lorg/op4j/functions/Function;" line="1038"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(S)Lorg/op4j/functions/Function;" line="1050"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(I)Lorg/op4j/functions/Function;" line="1062"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(J)Lorg/op4j/functions/Function;" line="1074"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(F)Lorg/op4j/functions/Function;" line="1086"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(D)Lorg/op4j/functions/Function;" line="1098"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1111"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(B)Lorg/op4j/functions/Function;" line="1123"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(S)Lorg/op4j/functions/Function;" line="1135"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(I)Lorg/op4j/functions/Function;" line="1147"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(J)Lorg/op4j/functions/Function;" line="1159"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(F)Lorg/op4j/functions/Function;" line="1171"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(D)Lorg/op4j/functions/Function;" line="1183"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(Ljava/lang/Number;Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="1198"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divideBy" desc="(BLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1212"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(SLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1226"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(ILjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1240"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(JLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1254"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(FLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1268"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(DLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1282"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(Ljava/lang/Number;Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1297"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(BLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1311"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(SLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1325"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1339"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(JLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1353"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(FLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1367"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(DLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1381"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(B)Lorg/op4j/functions/Function;" line="1396"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(S)Lorg/op4j/functions/Function;" line="1410"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(I)Lorg/op4j/functions/Function;" line="1424"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(J)Lorg/op4j/functions/Function;" line="1438"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(Ljava/lang/Byte;)Lorg/op4j/functions/Function;" line="1452"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(Ljava/lang/Short;)Lorg/op4j/functions/Function;" line="1466"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(Ljava/lang/Integer;)Lorg/op4j/functions/Function;" line="1480"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(Ljava/lang/Long;)Lorg/op4j/functions/Function;" line="1494"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(Ljava/math/BigInteger;)Lorg/op4j/functions/Function;" line="1508"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1521"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(B)Lorg/op4j/functions/Function;" line="1534"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(S)Lorg/op4j/functions/Function;" line="1547"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(I)Lorg/op4j/functions/Function;" line="1560"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(J)Lorg/op4j/functions/Function;" line="1573"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(F)Lorg/op4j/functions/Function;" line="1586"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(D)Lorg/op4j/functions/Function;" line="1599"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1611"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(B)Lorg/op4j/functions/Function;" line="1623"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(S)Lorg/op4j/functions/Function;" line="1635"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(I)Lorg/op4j/functions/Function;" line="1647"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(J)Lorg/op4j/functions/Function;" line="1659"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(F)Lorg/op4j/functions/Function;" line="1671"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(D)Lorg/op4j/functions/Function;" line="1683"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(Ljava/lang/Number;Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="1698"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(BLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1712"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(SLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1726"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(ILjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1740"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(JLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1754"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(FLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1768"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(DLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1782"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(Ljava/lang/Number;Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1796"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(BLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1809"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(SLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1822"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1835"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(JLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1848"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(FLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1861"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(DLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1874"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pow" desc="(I)Lorg/op4j/functions/Function;" line="1887"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pow" desc="(ILjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1901"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pow" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1915"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(Ljava/lang/Number;Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1932"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(JJ)Lorg/op4j/functions/Function;" line="1948"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNumber" desc="(Ljava/lang/Number;)Ljava/lang/Long;" line="1954"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="546" covered="69"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="132" covered="16"/><counter type="COMPLEXITY" missed="131" covered="7"/><counter type="METHOD" missed="130" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnShort$Add" sourcefilename="FnShort.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Short;)V" line="2224"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Short;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Short;" line="2231"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnBigInteger$Abs" sourcefilename="FnBigInteger.java"><method name="&lt;init&gt;" desc="()V" line="1678"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/math/BigInteger;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigInteger;" line="1683"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/Fn" sourcefilename="Fn.java"><method name="on" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="96"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onObject" desc="()Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="112"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayOfObject" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="128"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onListOfObject" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="144"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onSetOfObject" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="160"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onBigInteger" desc="()Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="176"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayOfBigInteger" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="192"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onListOfBigInteger" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="208"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onSetOfBigInteger" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="224"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onBigDecimal" desc="()Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="241"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayOfBigDecimal" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="257"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onListOfBigDecimal" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="273"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onSetOfBigDecimal" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="289"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onBoolean" desc="()Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="305"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayOfBoolean" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="321"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onListOfBoolean" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="337"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onSetOfBoolean" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="353"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onByte" desc="()Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="369"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayOfByte" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="385"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onListOfByte" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="401"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onSetOfByte" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="417"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onCharacter" desc="()Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="434"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayOfCharacter" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="450"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onListOfCharacter" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="466"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onSetOfCharacter" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="482"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onCalendar" desc="()Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="499"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayOfCalendar" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="515"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onListOfCalendar" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="531"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onSetOfCalendar" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="547"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onDate" desc="()Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="564"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayOfDate" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="580"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onListOfDate" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="596"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onSetOfDate" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="612"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onDouble" desc="()Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="629"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayOfDouble" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="645"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onListOfDouble" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="661"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onSetOfDouble" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="677"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onFloat" desc="()Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="694"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayOfFloat" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="710"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onListOfFloat" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="726"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onSetOfFloat" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="742"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onInteger" desc="()Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="759"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayOfInteger" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="775"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onListOfInteger" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="791"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onSetOfInteger" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="807"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onLong" desc="()Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="824"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayOfLong" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="840"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onListOfLong" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="856"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onSetOfLong" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="872"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onShort" desc="()Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="889"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayOfShort" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="905"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onListOfShort" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="921"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onSetOfShort" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="937"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onString" desc="()Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="954"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayOfString" desc="()Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="970"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onListOfString" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="986"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onSetOfString" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="1002"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="1026"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onListOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="1044"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onMapOf" desc="(Lorg/javaruntype/type/Type;Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="1064"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onSetOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="1082"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="189" covered="12"/><counter type="LINE" missed="59" covered="2"/><counter type="COMPLEXITY" missed="59" covered="2"/><counter type="METHOD" missed="59" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOf$RemoveAllIndexesNot" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="([I)V" line="458"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/Set;" line="463"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOf$Any" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="1093"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="1100"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnSetOf$ContainsNone" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="1250"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="1256"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArrayOf$ZipKeysBy" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="900"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="907"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnCalendar$TimeInMillisToCalendar" sourcefilename="FnCalendar.java"><method name="&lt;init&gt;" desc="()V" line="987"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="987"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Long;Lorg/op4j/functions/ExecCtx;)Ljava/util/Calendar;" line="1001"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="6"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnLong$Min" sourcefilename="FnLong.java"><method name="&lt;init&gt;" desc="()V" line="1990"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Long;" line="1995"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBigDecimal$Min" sourcefilename="FnBigDecimal.java"><method name="&lt;init&gt;" desc="()V" line="2387"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigDecimal;" line="2392"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBigDecimal$Pow" sourcefilename="FnBigDecimal.java"><method name="&lt;init&gt;" desc="(I)V" line="2813"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;)V" line="2820"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/math/MathContext;)V" line="2828"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/math/BigDecimal;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigDecimal;" line="2837"><counter type="INSTRUCTION" missed="18" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="48" covered="27"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="14" covered="10"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$IsNumeric" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="5547"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Z)V" line="5552"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="5557"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="12"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnDouble$Max" sourcefilename="FnDouble.java"><method name="&lt;init&gt;" desc="()V" line="2528"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Double;" line="2533"><counter type="INSTRUCTION" missed="2" covered="30"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="33"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnDate$Add" sourcefilename="FnDate.java"><method name="&lt;init&gt;" desc="(II)V" line="711"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Date;Lorg/op4j/functions/ExecCtx;)Ljava/util/Date;" line="718"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnBigDecimal$Sum" sourcefilename="FnBigDecimal.java"><method name="&lt;init&gt;" desc="()V" line="2410"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigDecimal;" line="2415"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="3"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnLong$Pow" sourcefilename="FnLong.java"><method name="&lt;init&gt;" desc="(I)V" line="2397"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;)V" line="2404"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/math/MathContext;)V" line="2412"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Long;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Long;" line="2421"><counter type="INSTRUCTION" missed="18" covered="19"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="48" covered="31"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="14" covered="10"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$ToCalendar" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="4753"><counter type="INSTRUCTION" missed="10" covered="20"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/Locale;)V" line="4765"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="4772"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/util/Calendar;" line="4784"><counter type="INSTRUCTION" missed="7" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="33" covered="62"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="9" covered="17"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnObject$LessOrEqualTo" sourcefilename="FnObject.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="2539"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="2547"><counter type="INSTRUCTION" missed="27" covered="25"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="34"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOf$RemoveAllNotNullAndTrue" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="512"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/List;" line="517"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnDouble$MaxArray" sourcefilename="FnDouble.java"><method name="&lt;init&gt;" desc="()V" line="2647"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/lang/Double;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Double;" line="2652"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnFloat$MaxArray" sourcefilename="FnFloat.java"><method name="&lt;init&gt;" desc="()V" line="1971"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/lang/Float;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Float;" line="1976"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$SubStringAfter" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6576"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="6581"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnListOf$Couple" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="()V" line="792"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="797"><counter type="INSTRUCTION" missed="5" covered="34"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="37"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$CanBeByte" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="6329"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="6336"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6343"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DecimalPoint;)V" line="6350"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="6357"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="6364"><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="118" covered="12"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="41" covered="5"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnLong$Sum" sourcefilename="FnLong.java"><method name="&lt;init&gt;" desc="()V" line="2013"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Long;" line="2018"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="3"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/DateStyle$2" sourcefilename="DateStyle.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="39"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="42"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnNumber$ToFloat" sourcefilename="FnNumber.java"><method name="&lt;init&gt;" desc="()V" line="3237"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;)V" line="3241"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNumberToDecimal" desc="(Ljava/lang/Number;)Ljava/lang/Float;" line="3247"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="7"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnTuple$ToLabelValue" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;)V" line="469"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Lorg/javatuples/LabelValue;" line="479"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/DateStyle$3" sourcefilename="DateStyle.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="45"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="48"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/DateStyle$4" sourcefilename="DateStyle.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="51"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="54"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$EscapeCSV" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="4472"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="4476"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnTuple$GetValue" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="()V" line="1194"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Lorg/javatuples/valueintf/IValueValue;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Object;" line="1200"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnCalendar$After" sourcefilename="FnCalendar.java"><method name="&lt;init&gt;" desc="(Ljava/util/Calendar;)V" line="817"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/util/Calendar;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="824"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBoolean$And" sourcefilename="FnBoolean.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)V" line="530"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="539"><counter type="INSTRUCTION" missed="12" covered="28"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="43"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="14"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnNumber$ToNumber" sourcefilename="FnNumber.java"><method name="&lt;init&gt;" desc="()V" line="3081"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Number;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Number;" line="3086"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/Call" sourcefilename="Call.java"><method name="methodForObject" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="67"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="obj" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="83"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodFor" desc="(Lorg/javaruntype/type/Type;Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="99"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="obj" desc="(Lorg/javaruntype/type/Type;Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="116"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodForBigInteger" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="132"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bigInteger" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="148"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodForBigDecimal" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="163"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bigDecimal" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="179"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodForBoolean" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="194"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bool" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="210"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodForByte" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="225"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="b" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="241"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodForCharacter" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="256"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="c" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="272"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodForCalendar" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="287"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calendar" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="303"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodForDate" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="318"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="date" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="334"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodForDouble" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="349"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="d" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="365"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodForFloat" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="380"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="f" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="396"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodForInteger" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="411"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="427"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methodForLong" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="442"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="l" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="458"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodForShort" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="473"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shr" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="489"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodForString" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="504"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="s" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="520"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodForListOfString" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="535"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listOfString" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="551"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodForSetOfString" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="566"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOfString" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="582"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodForArrayOfString" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="597"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayOfString" desc="(Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="613"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodForListOf" desc="(Lorg/javaruntype/type/Type;Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="629"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listOf" desc="(Lorg/javaruntype/type/Type;Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="645"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodForSetOf" desc="(Lorg/javaruntype/type/Type;Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="661"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOf" desc="(Lorg/javaruntype/type/Type;Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="677"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodForArrayOf" desc="(Lorg/javaruntype/type/Type;Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="693"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayOf" desc="(Lorg/javaruntype/type/Type;Ljava/lang/String;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="709"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;Ljava/lang/String;[Ljava/lang/Object;)V" line="718"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Object;" line="730"><counter type="INSTRUCTION" missed="18" covered="31"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="285" covered="59"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="42" covered="14"/><counter type="COMPLEXITY" missed="44" covered="4"/><counter type="METHOD" missed="40" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnTuple$ContainsAll" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="972"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="977"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Lorg/javatuples/Tuple;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="984"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnBigDecimal" sourcefilename="FnBigDecimal.java"><method name="&lt;init&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="roundBigDecimal" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="76"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="()Lorg/op4j/functions/Function;" line="86"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Z)Lorg/op4j/functions/Function;" line="98"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="109"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="120"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;Z)Lorg/op4j/functions/Function;" line="133"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;Z)Lorg/op4j/functions/Function;" line="146"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;IIIZ)Lorg/op4j/functions/Function;" line="169"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;IIIZ)Lorg/op4j/functions/Function;" line="195"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;IIICCZ)Lorg/op4j/functions/Function;" line="225"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;IIIZCZ)Lorg/op4j/functions/Function;" line="256"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;IIICCZ)Lorg/op4j/functions/Function;" line="287"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;IIIZCZ)Lorg/op4j/functions/Function;" line="318"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="()Lorg/op4j/functions/Function;" line="334"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Z)Lorg/op4j/functions/Function;" line="347"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="360"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="373"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;Z)Lorg/op4j/functions/Function;" line="387"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;Z)Lorg/op4j/functions/Function;" line="401"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;IIIZ)Lorg/op4j/functions/Function;" line="426"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;IIIZ)Lorg/op4j/functions/Function;" line="454"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;IIICCZ)Lorg/op4j/functions/Function;" line="486"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;IIIZCZ)Lorg/op4j/functions/Function;" line="519"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;IIICCZ)Lorg/op4j/functions/Function;" line="552"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;IIIZCZ)Lorg/op4j/functions/Function;" line="585"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="()Lorg/op4j/functions/Function;" line="600"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Z)Lorg/op4j/functions/Function;" line="616"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="629"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="642"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;Z)Lorg/op4j/functions/Function;" line="657"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;Z)Lorg/op4j/functions/Function;" line="672"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;IIIZ)Lorg/op4j/functions/Function;" line="694"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;IIIZ)Lorg/op4j/functions/Function;" line="719"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;IIICCZ)Lorg/op4j/functions/Function;" line="748"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;IIIZCZ)Lorg/op4j/functions/Function;" line="778"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;IIICCZ)Lorg/op4j/functions/Function;" line="808"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;IIIZCZ)Lorg/op4j/functions/Function;" line="838"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(Ljava/math/BigDecimal;)Lorg/op4j/functions/Function;" line="856"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(Ljava/math/BigDecimal;)Lorg/op4j/functions/Function;" line="871"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(Ljava/math/BigDecimal;)Lorg/op4j/functions/Function;" line="885"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(Ljava/math/BigDecimal;)Lorg/op4j/functions/Function;" line="900"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="916"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="934"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="949"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="965"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="983"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValueBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="1002"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="1018"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValueBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="1037"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThanBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="1055"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqToBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="1076"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThanBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="1096"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqToBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="1121"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNull" desc="()Lorg/op4j/functions/Function;" line="1141"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotNull" desc="()Lorg/op4j/functions/Function;" line="1154"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="max" desc="()Lorg/op4j/functions/Function;" line="1180"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="min" desc="()Lorg/op4j/functions/Function;" line="1191"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sum" desc="()Lorg/op4j/functions/Function;" line="1202"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avg" desc="()Lorg/op4j/functions/Function;" line="1213"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avg" desc="(Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="1228"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avg" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1242"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxArray" desc="()Lorg/op4j/functions/Function;" line="1253"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minArray" desc="()Lorg/op4j/functions/Function;" line="1264"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sumArray" desc="()Lorg/op4j/functions/Function;" line="1275"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avgArray" desc="()Lorg/op4j/functions/Function;" line="1286"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avgArray" desc="(Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="1301"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avgArray" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1315"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="round" desc="(Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="1327"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="round" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1339"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="abs" desc="()Lorg/op4j/functions/Function;" line="1350"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1362"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(B)Lorg/op4j/functions/Function;" line="1374"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(S)Lorg/op4j/functions/Function;" line="1386"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(I)Lorg/op4j/functions/Function;" line="1398"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(J)Lorg/op4j/functions/Function;" line="1410"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(F)Lorg/op4j/functions/Function;" line="1422"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(D)Lorg/op4j/functions/Function;" line="1434"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1447"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(B)Lorg/op4j/functions/Function;" line="1459"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(S)Lorg/op4j/functions/Function;" line="1471"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(I)Lorg/op4j/functions/Function;" line="1483"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(J)Lorg/op4j/functions/Function;" line="1495"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(F)Lorg/op4j/functions/Function;" line="1507"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(D)Lorg/op4j/functions/Function;" line="1519"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1532"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(B)Lorg/op4j/functions/Function;" line="1544"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(S)Lorg/op4j/functions/Function;" line="1556"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(I)Lorg/op4j/functions/Function;" line="1568"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(J)Lorg/op4j/functions/Function;" line="1580"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(F)Lorg/op4j/functions/Function;" line="1592"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(D)Lorg/op4j/functions/Function;" line="1604"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(Ljava/lang/Number;Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="1619"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divideBy" desc="(BLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1633"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(SLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1647"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(ILjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1661"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(JLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1675"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(FLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1689"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(DLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1703"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(Ljava/lang/Number;Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1717"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divideBy" desc="(BLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1731"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(SLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1745"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1759"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(JLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1773"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(FLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1787"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(DLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1801"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1816"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remainder" desc="(B)Lorg/op4j/functions/Function;" line="1829"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(S)Lorg/op4j/functions/Function;" line="1842"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(I)Lorg/op4j/functions/Function;" line="1855"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(J)Lorg/op4j/functions/Function;" line="1868"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(F)Lorg/op4j/functions/Function;" line="1881"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(D)Lorg/op4j/functions/Function;" line="1894"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(Ljava/lang/Number;Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="1910"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(BLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1925"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(SLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1940"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(ILjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1955"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(JLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1970"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(FLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1985"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(DLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="2000"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="2013"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplyBy" desc="(B)Lorg/op4j/functions/Function;" line="2025"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(S)Lorg/op4j/functions/Function;" line="2037"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(I)Lorg/op4j/functions/Function;" line="2049"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(J)Lorg/op4j/functions/Function;" line="2061"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(F)Lorg/op4j/functions/Function;" line="2073"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(D)Lorg/op4j/functions/Function;" line="2085"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(Ljava/lang/Number;Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="2100"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(BLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="2114"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(SLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="2128"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(ILjava/math/MathContext;)Lorg/op4j/functions/Function;" line="2142"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(JLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="2156"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(FLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="2170"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(DLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="2184"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(Ljava/lang/Number;Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="2198"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(BLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="2212"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(SLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="2226"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="2240"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(JLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="2254"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(FLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="2268"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(DLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="2282"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pow" desc="(I)Lorg/op4j/functions/Function;" line="2295"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pow" desc="(ILjava/math/MathContext;)Lorg/op4j/functions/Function;" line="2309"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pow" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="2323"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(Ljava/lang/Number;Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="2340"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNumber" desc="(Ljava/lang/Number;)Ljava/math/BigDecimal;" line="2346"><counter type="INSTRUCTION" missed="8" covered="15"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="637" covered="101"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="139" covered="23"/><counter type="COMPLEXITY" missed="138" covered="12"/><counter type="METHOD" missed="136" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOf$RemoveAllIndexesNot" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="([I)V" line="689"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="695"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnSetOf$All" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="1126"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="1133"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArrayOf$Couple" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="()V" line="1188"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="1193"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnTuple$ToList" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="()V" line="913"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Lorg/javatuples/Tuple;Lorg/op4j/functions/ExecCtx;)Ljava/util/List;" line="919"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$Reverse" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="6649"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="6653"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnFloat$Remainder" sourcefilename="FnFloat.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Float;)V" line="2190"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Float;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Float;" line="2196"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnDouble$Remainder" sourcefilename="FnDouble.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Double;)V" line="2895"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Double;Ljava/math/MathContext;)V" line="2901"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Double;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Double;" line="2908"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/DateStyle$1" sourcefilename="DateStyle.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="33"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/ExecCtx" sourcefilename="ExecCtx.java"/><class name="org/op4j/functions/FnSetOf$RemoveAllNotNullAndTrue" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="490"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/Set;" line="495"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnSetOf$SortBy" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="327"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/Set;" line="332"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnDouble$Add" sourcefilename="FnDouble.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Double;)V" line="2809"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Double;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Double;" line="2816"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnStringAuxNumberConverters$ToNumber$ExecType" sourcefilename="FnStringAuxNumberConverters.java"><method name="&lt;clinit&gt;" desc="()V" line="65"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOf$Contains" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="1165"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="1171"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnCollection$SortByComparator" sourcefilename="FnCollection.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/util/Collection;Lorg/op4j/functions/ExecCtx;)Ljava/util/Collection;" line="92"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOf$Count" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="()V" line="1309"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Integer;" line="1314"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnListOfSetOf$FlattenSets" sourcefilename="FnListOfSetOf.java"><method name="&lt;init&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/List;" line="66"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnObject$EqualValue" sourcefilename="FnObject.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="2460"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="2468"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnListOf$RemoveAllNullOrTrue" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="543"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/List;" line="548"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnSetOf$ToGroupMap" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="980"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="987"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnMapOf$SortBy$OrderableElement" sourcefilename="FnMapOf.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Comparable;)V" line="277"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElement" desc="()Ljava/lang/Object;" line="286"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getComparator" desc="()Ljava/lang/Comparable;" line="290"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareTo" desc="(Lorg/op4j/functions/FnMapOf$SortBy$OrderableElement;)I" line="295"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="303"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="313"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/AbstractNotNullNonConvertingFunc" sourcefilename="AbstractNotNullNonConvertingFunc.java"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnObject$ToString" sourcefilename="FnObject.java"><method name="&lt;init&gt;" desc="()V" line="2335"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="2339"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnTuple$GetValue8" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="()V" line="1140"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Lorg/javatuples/valueintf/IValue8;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Object;" line="1146"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$ToBoolean" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="4732"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="4737"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$UnescapeJavaScript" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="4573"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="4577"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnTuple$GetValue9" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="()V" line="1158"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Lorg/javatuples/valueintf/IValue9;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Object;" line="1164"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnSetOf$Reverse" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="()V" line="1279"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)Ljava/util/Set;" line="1286"><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="82" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnBigDecimal$Divide" sourcefilename="FnBigDecimal.java"><method name="&lt;init&gt;" desc="(Ljava/math/BigDecimal;)V" line="2692"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/BigDecimal;Ljava/math/RoundingMode;)V" line="2700"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/BigDecimal;Ljava/math/MathContext;)V" line="2709"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/math/BigDecimal;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigDecimal;" line="2719"><counter type="INSTRUCTION" missed="6" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="62"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="7" covered="20"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOfArrayOf$FlattenArrays" sourcefilename="FnArrayOfArrayOf.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;)V" line="65"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([[Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="74"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArrayOf$RemoveAllFalse" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="662"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="669"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArrayOf$Distinct$ArrayLinkedHashSet" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="()V" line="478"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="([Ljava/lang/Object;)Z" line="483"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="492"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnDouble$Round" sourcefilename="FnDouble.java"><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="2770"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/MathContext;)V" line="2777"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Double;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Double;" line="2785"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnTuple$GetValue0" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="()V" line="996"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Lorg/javatuples/valueintf/IValue0;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Object;" line="1002"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnMapOf$ContainsKey" sourcefilename="FnMapOf.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="682"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Map;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="688"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnTuple$GetValue1" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="()V" line="1014"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Lorg/javatuples/valueintf/IValue1;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Object;" line="1020"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnTuple$GetValue2" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="()V" line="1032"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Lorg/javatuples/valueintf/IValue2;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Object;" line="1038"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnBoolean$ToNumber" sourcefilename="FnBoolean.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;)V" line="459"><counter type="INSTRUCTION" missed="14" covered="107"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="1" covered="26"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Boolean;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Number;" line="493"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="107"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="2" covered="26"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnTuple$GetValue3" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="()V" line="1050"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Lorg/javatuples/valueintf/IValue3;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Object;" line="1056"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnTuple$GetValue4" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="()V" line="1068"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Lorg/javatuples/valueintf/IValue4;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Object;" line="1074"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnDouble$AvgArray" sourcefilename="FnDouble.java"><method name="&lt;init&gt;" desc="()V" line="2714"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="2720"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/MathContext;)V" line="2727"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Double;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Double;" line="2736"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="89" covered="9"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="21" covered="4"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnTuple$GetValue5" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="()V" line="1086"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Lorg/javatuples/valueintf/IValue5;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Object;" line="1092"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnTuple$GetValue6" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="()V" line="1104"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Lorg/javatuples/valueintf/IValue6;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Object;" line="1110"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnTuple$GetValue7" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="()V" line="1122"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Lorg/javatuples/valueintf/IValue7;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Object;" line="1128"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnSetOf$RemoveAllEqual" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="410"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/Set;" line="415"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnSetOf$ZipKeys" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="649"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="655"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="662"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnListOf$Insert" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(I[Ljava/lang/Object;)V" line="382"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/List;" line="387"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnDouble$Abs" sourcefilename="FnDouble.java"><method name="&lt;init&gt;" desc="()V" line="2795"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Double;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Double;" line="2800"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnFloat$Sum" sourcefilename="FnFloat.java"><method name="&lt;init&gt;" desc="()V" line="1894"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Float;" line="1899"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="3"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOf$ZipAndGroupValues" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;Ljava/util/Collection;)V" line="1079"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;[Ljava/lang/Object;)V" line="1086"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="1095"><counter type="INSTRUCTION" missed="19" covered="59"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="74"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="7" covered="17"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnObject$Equals" sourcefilename="FnObject.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="2422"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="2427"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="6"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnLong$Avg" sourcefilename="FnLong.java"><method name="&lt;init&gt;" desc="()V" line="2034"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="2040"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/MathContext;)V" line="2047"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Long;" line="2056"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="84" covered="9"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="22" covered="4"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBigInteger$Multiply" sourcefilename="FnBigInteger.java"><method name="&lt;init&gt;" desc="(Ljava/math/BigInteger;)V" line="1809"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/math/BigInteger;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigInteger;" line="1816"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnTuple$ToQuartet" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;)V" line="539"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Lorg/javatuples/Quartet;" line="551"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnSetOfSetOf" sourcefilename="FnSetOfSetOf.java"><method name="flattenSets" desc="()Lorg/op4j/functions/Function;" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;)V" line="51"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnMapOf$RemoveAllFalse" sourcefilename="FnMapOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="516"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Map;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="522"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArray" sourcefilename="FnArray.java"><method name="of" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/FnArrayOf;" line="74"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofArrayOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/FnArrayOfArrayOf;" line="78"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofListOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/FnArrayOfListOf;" line="82"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofSetOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/FnArrayOfSetOf;" line="86"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofObject" desc="()Lorg/op4j/functions/FnArrayOf;" line="99"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofBigInteger" desc="()Lorg/op4j/functions/FnArrayOf;" line="112"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofBigDecimal" desc="()Lorg/op4j/functions/FnArrayOf;" line="125"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofBoolean" desc="()Lorg/op4j/functions/FnArrayOf;" line="138"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofByte" desc="()Lorg/op4j/functions/FnArrayOf;" line="151"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofCharacter" desc="()Lorg/op4j/functions/FnArrayOf;" line="164"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofCalendar" desc="()Lorg/op4j/functions/FnArrayOf;" line="177"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofDate" desc="()Lorg/op4j/functions/FnArrayOf;" line="190"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofDouble" desc="()Lorg/op4j/functions/FnArrayOf;" line="203"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofFloat" desc="()Lorg/op4j/functions/FnArrayOf;" line="216"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofInteger" desc="()Lorg/op4j/functions/FnArrayOf;" line="229"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofLong" desc="()Lorg/op4j/functions/FnArrayOf;" line="242"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofShort" desc="()Lorg/op4j/functions/FnArrayOf;" line="255"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofString" desc="()Lorg/op4j/functions/FnArrayOf;" line="268"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="80"/><counter type="LINE" missed="15" covered="17"/><counter type="COMPLEXITY" missed="15" covered="4"/><counter type="METHOD" missed="15" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnInteger$Max" sourcefilename="FnInteger.java"><method name="&lt;init&gt;" desc="()V" line="1967"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Integer;" line="1972"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOf$RemoveAllNullOrFalse" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="837"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="844"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnCollection$RemoveAllFalse" sourcefilename="FnCollection.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="370"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Collection;Lorg/op4j/functions/ExecCtx;)Ljava/util/Collection;" line="377"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnFloat$Pow" sourcefilename="FnFloat.java"><method name="&lt;init&gt;" desc="(I)V" line="2255"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;)V" line="2262"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/math/MathContext;)V" line="2270"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Float;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Float;" line="2279"><counter type="INSTRUCTION" missed="18" covered="20"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="48" covered="32"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="14" covered="10"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnFloat$Min" sourcefilename="FnFloat.java"><method name="&lt;init&gt;" desc="()V" line="1871"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Float;" line="1876"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnObject$ReplaceWith" sourcefilename="FnObject.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="2665"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Object;" line="2670"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOf$SortByComparator" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="315"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/List;" line="320"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnListOf$ToMap" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="737"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="744"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$UnescapeXML" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="4516"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="4520"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnLong$AvgArray" sourcefilename="FnLong.java"><method name="&lt;init&gt;" desc="()V" line="2158"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="2164"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/MathContext;)V" line="2171"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Long;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Long;" line="2180"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="89" covered="9"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="21" covered="4"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOf$ToGroupMap" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;)V" line="1302"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="1312"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="78" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArrayOf$ZipKeys" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="950"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="956"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="963"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="80" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArrayOf$RemoveAllNotNullAndTrue" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="741"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="748"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnBigInteger$Add" sourcefilename="FnBigInteger.java"><method name="&lt;init&gt;" desc="(Ljava/math/BigInteger;)V" line="1692"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/math/BigInteger;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigInteger;" line="1699"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArrayOf$ZipAndGroupKeysBy" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;)V" line="1231"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="1241"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnSetOf$ToGroupMapByKeyValueFunctions" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)V" line="1018"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="1028"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$Strip" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="4718"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="4722"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBigDecimal$Multiply" sourcefilename="FnBigDecimal.java"><method name="&lt;init&gt;" desc="(Ljava/math/BigDecimal;)V" line="2766"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/BigDecimal;Ljava/math/RoundingMode;)V" line="2774"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/BigDecimal;Ljava/math/MathContext;)V" line="2783"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/math/BigDecimal;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigDecimal;" line="2793"><counter type="INSTRUCTION" missed="18" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="54" covered="30"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="16" covered="11"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$CanBeBigDecimal" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="5570"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="5576"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="5582"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DecimalPoint;)V" line="5588"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="5594"><counter type="INSTRUCTION" missed="21" covered="30"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="8" covered="8"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="40" covered="48"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="16" covered="16"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnShort$Max" sourcefilename="FnShort.java"><method name="&lt;init&gt;" desc="()V" line="1969"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Short;" line="1974"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOfListOf$FlattenLists" sourcefilename="FnSetOfListOf.java"><method name="&lt;init&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/Set;" line="67"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$Split" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="5131"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="5136"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/util/List;" line="5142"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="6"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnFloat$AvgArray" sourcefilename="FnFloat.java"><method name="&lt;init&gt;" desc="()V" line="2038"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="2044"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/MathContext;)V" line="2051"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Float;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Float;" line="2060"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="90" covered="9"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="21" covered="4"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$Replace" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/op4j/functions/FnString$Replace$ReplaceType;)V" line="5095"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="5105"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnNumber$ToLong" sourcefilename="FnNumber.java"><method name="&lt;init&gt;" desc="()V" line="3287"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="3291"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromNumberToNonDecimal" desc="(Ljava/lang/Number;)Ljava/lang/Long;" line="3296"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnFunc" sourcefilename="FnFunc.java"><method name="chain" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="58"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifTrueThen" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="83"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifTrueThenElse" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="108"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalseThen" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="131"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalseThenElse" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="156"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullThen" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="177"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullThenElse" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="201"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullThen" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="222"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullThenElse" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="246"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrTrueThen" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="270"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrTrueThenElse" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="297"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrFalseThen" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="321"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrFalseThenElse" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="348"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndTrueThen" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="372"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndTrueThenElse" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="399"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndFalseThen" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="423"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndFalseThenElse" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="450"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="whileTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="469"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="whileFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="486"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="126" covered="14"/><counter type="LINE" missed="17" covered="2"/><counter type="COMPLEXITY" missed="17" covered="2"/><counter type="METHOD" missed="17" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnCollection$RemoveAllNotNullAndFalse" sourcefilename="FnCollection.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="491"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Collection;Lorg/op4j/functions/ExecCtx;)Ljava/util/Collection;" line="498"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnSetOf$ZipValues" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="683"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="689"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="696"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnStringAuxNumberConverters$Delegated" sourcefilename="FnStringAuxNumberConverters.java"><method name="&lt;clinit&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$FromHexadecimal" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="(Ljava/nio/charset/Charset;)V" line="4613"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="4622"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$StartsWith" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6477"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="6483"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="6491"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnFunc$WhileDo" sourcefilename="FnFunc.java"><method name="&lt;init&gt;" desc="(ZLorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)V" line="601"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Object;" line="611"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnDate" sourcefilename="FnDate.java"><method name="toCalendar" desc="()Lorg/op4j/functions/Function;" line="69"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCalendar" desc="(I)Lorg/op4j/functions/Function;" line="73"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(II)Lorg/op4j/functions/Function;" line="94"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addDays" desc="(I)Lorg/op4j/functions/Function;" line="108"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addHours" desc="(I)Lorg/op4j/functions/Function;" line="122"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addMilliseconds" desc="(I)Lorg/op4j/functions/Function;" line="136"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addMinutes" desc="(I)Lorg/op4j/functions/Function;" line="150"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addMonths" desc="(I)Lorg/op4j/functions/Function;" line="164"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addWeeks" desc="(I)Lorg/op4j/functions/Function;" line="178"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addYears" desc="(I)Lorg/op4j/functions/Function;" line="192"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(II)Lorg/op4j/functions/Function;" line="210"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDay" desc="(I)Lorg/op4j/functions/Function;" line="224"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setHour" desc="(I)Lorg/op4j/functions/Function;" line="238"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMillisecond" desc="(I)Lorg/op4j/functions/Function;" line="252"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMinute" desc="(I)Lorg/op4j/functions/Function;" line="266"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMonth" desc="(I)Lorg/op4j/functions/Function;" line="280"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setWeek" desc="(I)Lorg/op4j/functions/Function;" line="294"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setYear" desc="(I)Lorg/op4j/functions/Function;" line="308"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="round" desc="(I)Lorg/op4j/functions/Function;" line="326"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="truncate" desc="(I)Lorg/op4j/functions/Function;" line="343"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="before" desc="(Ljava/util/Date;)Lorg/op4j/functions/Function;" line="358"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="after" desc="(Ljava/util/Date;)Lorg/op4j/functions/Function;" line="372"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="392"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="409"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="426"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Lorg/op4j/functions/DateStyle;Lorg/op4j/functions/TimeStyle;)Lorg/op4j/functions/Function;" line="441"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Lorg/op4j/functions/DateStyle;Lorg/op4j/functions/TimeStyle;Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="458"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Lorg/op4j/functions/DateStyle;Lorg/op4j/functions/TimeStyle;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="475"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="timestampToDate" desc="()Lorg/op4j/functions/Function;" line="494"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="timestampToDate" desc="(I)Lorg/op4j/functions/Function;" line="507"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="timeInMillisToDate" desc="()Lorg/op4j/functions/Function;" line="520"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="timeInMillisToDate" desc="(I)Lorg/op4j/functions/Function;" line="533"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fieldIntegerListToDate" desc="()Lorg/op4j/functions/Function;" line="559"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fieldIntegerArrayToDate" desc="()Lorg/op4j/functions/Function;" line="583"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fieldStringListToDate" desc="()Lorg/op4j/functions/Function;" line="607"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fieldStringArrayToDate" desc="()Lorg/op4j/functions/Function;" line="631"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(Ljava/util/Date;)Lorg/op4j/functions/Function;" line="646"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(Ljava/util/Date;)Lorg/op4j/functions/Function;" line="660"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNull" desc="()Lorg/op4j/functions/Function;" line="677"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotNull" desc="()Lorg/op4j/functions/Function;" line="690"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromInts" desc="(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/util/Date;" line="1079"><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="326" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="75" covered="0"/><counter type="COMPLEXITY" missed="45" covered="0"/><counter type="METHOD" missed="42" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnListOf$RemoveAllIndexesNot" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="([I)V" line="480"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/List;" line="485"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOf$ContainsNone" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="1275"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="1281"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnCalendar$Truncate" sourcefilename="FnCalendar.java"><method name="&lt;init&gt;" desc="(I)V" line="780"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/util/Calendar;Lorg/op4j/functions/ExecCtx;)Ljava/util/Calendar;" line="786"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOf" sourcefilename="FnListOf.java"><method name="sort" desc="()Lorg/op4j/functions/Function;" line="55"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sort" desc="(Ljava/util/Comparator;)Lorg/op4j/functions/Function;" line="59"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sortBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="63"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distinct" desc="()Lorg/op4j/functions/Function;" line="69"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="73"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(I[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="77"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Ljava/util/Collection;)Lorg/op4j/functions/Function;" line="81"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllIndexes" desc="([I)Lorg/op4j/functions/Function;" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllEqual" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="89"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="93"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="97"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexesNot" desc="([I)Lorg/op4j/functions/Function;" line="101"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllNull" desc="()Lorg/op4j/functions/Function;" line="105"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="109"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="113"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="117"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="121"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="()Lorg/op4j/functions/Function;" line="127"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSet" desc="()Lorg/op4j/functions/Function;" line="131"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zipKeysBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="135"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="139"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeys" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="143"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zipValues" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="147"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysFrom" desc="(Ljava/util/Collection;)Lorg/op4j/functions/Function;" line="151"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesFrom" desc="(Ljava/util/Collection;)Lorg/op4j/functions/Function;" line="155"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysFrom" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="159"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesFrom" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="163"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="167"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="171"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toGroupMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="175"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toGroupMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="179"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="couple" desc="()Lorg/op4j/functions/Function;" line="183"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zipAndGroupKeysBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="187"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="191"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeys" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="195"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zipAndGroupValues" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="199"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zipAndGroupKeysFrom" desc="(Ljava/util/Collection;)Lorg/op4j/functions/Function;" line="203"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesFrom" desc="(Ljava/util/Collection;)Lorg/op4j/functions/Function;" line="207"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeysFrom" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="211"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesFrom" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="215"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="coupleAndGroup" desc="()Lorg/op4j/functions/Function;" line="223"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="all" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="236"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="any" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="240"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="count" desc="()Lorg/op4j/functions/Function;" line="246"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="255"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notContains" desc="(Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="259"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsAll" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="263"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsAny" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="267"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsNone" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="271"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverse" desc="()Lorg/op4j/functions/Function;" line="278"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;)V" line="289"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFromMapOfList" desc="(Lorg/javaruntype/type/Type;Ljava/util/Map;)Ljava/util/Map;" line="815"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="207" covered="92"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="41" covered="20"/><counter type="COMPLEXITY" missed="35" covered="18"/><counter type="METHOD" missed="34" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOf$Add" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="365"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/List;" line="370"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnDouble" sourcefilename="FnDouble.java"><method name="&lt;init&gt;" desc="()V" line="59"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="roundDouble" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="66"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="()Lorg/op4j/functions/Function;" line="76"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Z)Lorg/op4j/functions/Function;" line="88"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="99"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="110"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;Z)Lorg/op4j/functions/Function;" line="123"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;Z)Lorg/op4j/functions/Function;" line="136"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;IIIZ)Lorg/op4j/functions/Function;" line="159"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;IIIZ)Lorg/op4j/functions/Function;" line="185"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;IIICCZ)Lorg/op4j/functions/Function;" line="215"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;IIIZCZ)Lorg/op4j/functions/Function;" line="246"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;IIICCZ)Lorg/op4j/functions/Function;" line="277"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;IIIZCZ)Lorg/op4j/functions/Function;" line="308"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="()Lorg/op4j/functions/Function;" line="324"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Z)Lorg/op4j/functions/Function;" line="337"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="350"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="363"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;Z)Lorg/op4j/functions/Function;" line="377"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;Z)Lorg/op4j/functions/Function;" line="391"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;IIIZ)Lorg/op4j/functions/Function;" line="416"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;IIIZ)Lorg/op4j/functions/Function;" line="444"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;IIICCZ)Lorg/op4j/functions/Function;" line="476"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;IIIZCZ)Lorg/op4j/functions/Function;" line="509"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;IIICCZ)Lorg/op4j/functions/Function;" line="542"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;IIIZCZ)Lorg/op4j/functions/Function;" line="575"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="()Lorg/op4j/functions/Function;" line="590"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Z)Lorg/op4j/functions/Function;" line="606"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="619"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="632"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;Z)Lorg/op4j/functions/Function;" line="647"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;Z)Lorg/op4j/functions/Function;" line="662"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;IIIZ)Lorg/op4j/functions/Function;" line="684"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;IIIZ)Lorg/op4j/functions/Function;" line="709"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;IIICCZ)Lorg/op4j/functions/Function;" line="738"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;IIIZCZ)Lorg/op4j/functions/Function;" line="768"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;IIICCZ)Lorg/op4j/functions/Function;" line="798"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;IIIZCZ)Lorg/op4j/functions/Function;" line="828"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(Ljava/lang/Double;)Lorg/op4j/functions/Function;" line="846"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(D)Lorg/op4j/functions/Function;" line="860"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="875"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(D)Lorg/op4j/functions/Function;" line="890"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(Ljava/lang/Double;)Lorg/op4j/functions/Function;" line="904"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(D)Lorg/op4j/functions/Function;" line="918"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="933"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(D)Lorg/op4j/functions/Function;" line="948"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="965"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(D)Lorg/op4j/functions/Function;" line="983"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1005"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(D)Lorg/op4j/functions/Function;" line="1022"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1043"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(D)Lorg/op4j/functions/Function;" line="1059"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1080"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(D)Lorg/op4j/functions/Function;" line="1096"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="1117"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValueBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="1139"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="1159"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValueBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="1179"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThanBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="1201"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqToBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="1229"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThanBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="1257"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqToBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="1284"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNull" desc="()Lorg/op4j/functions/Function;" line="1305"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotNull" desc="()Lorg/op4j/functions/Function;" line="1318"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="max" desc="()Lorg/op4j/functions/Function;" line="1339"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="min" desc="()Lorg/op4j/functions/Function;" line="1350"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sum" desc="()Lorg/op4j/functions/Function;" line="1361"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="avg" desc="()Lorg/op4j/functions/Function;" line="1372"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="avg" desc="(Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="1387"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="avg" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1401"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxArray" desc="()Lorg/op4j/functions/Function;" line="1412"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minArray" desc="()Lorg/op4j/functions/Function;" line="1423"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sumArray" desc="()Lorg/op4j/functions/Function;" line="1434"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avgArray" desc="()Lorg/op4j/functions/Function;" line="1445"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avgArray" desc="(Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="1460"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avgArray" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1474"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="round" desc="(Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="1486"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="round" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1498"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="abs" desc="()Lorg/op4j/functions/Function;" line="1509"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1521"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(B)Lorg/op4j/functions/Function;" line="1533"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(S)Lorg/op4j/functions/Function;" line="1545"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(I)Lorg/op4j/functions/Function;" line="1557"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(J)Lorg/op4j/functions/Function;" line="1569"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(F)Lorg/op4j/functions/Function;" line="1581"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(D)Lorg/op4j/functions/Function;" line="1593"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1606"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(B)Lorg/op4j/functions/Function;" line="1618"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(S)Lorg/op4j/functions/Function;" line="1630"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(I)Lorg/op4j/functions/Function;" line="1642"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(J)Lorg/op4j/functions/Function;" line="1654"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(F)Lorg/op4j/functions/Function;" line="1666"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(D)Lorg/op4j/functions/Function;" line="1678"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1691"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(B)Lorg/op4j/functions/Function;" line="1703"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(S)Lorg/op4j/functions/Function;" line="1715"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(I)Lorg/op4j/functions/Function;" line="1727"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(J)Lorg/op4j/functions/Function;" line="1739"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(F)Lorg/op4j/functions/Function;" line="1751"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(D)Lorg/op4j/functions/Function;" line="1763"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(Ljava/lang/Number;Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="1778"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divideBy" desc="(BLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1792"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(SLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1806"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(ILjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1820"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(JLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1834"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(FLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1848"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(DLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1862"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(Ljava/lang/Number;Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1877"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(BLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1891"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(SLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1905"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1919"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(JLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1933"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(FLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1947"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(DLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1961"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1974"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(B)Lorg/op4j/functions/Function;" line="1987"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(S)Lorg/op4j/functions/Function;" line="2000"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(I)Lorg/op4j/functions/Function;" line="2013"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(J)Lorg/op4j/functions/Function;" line="2026"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(F)Lorg/op4j/functions/Function;" line="2039"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(D)Lorg/op4j/functions/Function;" line="2052"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(Ljava/lang/Number;Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="2068"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(BLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="2083"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(SLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="2098"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(ILjava/math/MathContext;)Lorg/op4j/functions/Function;" line="2113"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(JLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="2128"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(FLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="2143"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(DLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="2158"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="2171"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(B)Lorg/op4j/functions/Function;" line="2183"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(S)Lorg/op4j/functions/Function;" line="2195"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(I)Lorg/op4j/functions/Function;" line="2207"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(J)Lorg/op4j/functions/Function;" line="2219"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(F)Lorg/op4j/functions/Function;" line="2231"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(D)Lorg/op4j/functions/Function;" line="2243"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(Ljava/lang/Number;Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="2258"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(BLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="2272"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(SLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="2286"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(ILjava/math/MathContext;)Lorg/op4j/functions/Function;" line="2300"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(JLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="2314"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(FLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="2328"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(DLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="2342"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(Ljava/lang/Number;Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="2356"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(BLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="2369"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(SLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="2382"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="2395"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(JLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="2408"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(FLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="2421"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(DLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="2434"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pow" desc="(I)Lorg/op4j/functions/Function;" line="2447"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pow" desc="(ILjava/math/MathContext;)Lorg/op4j/functions/Function;" line="2461"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pow" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="2475"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(Ljava/lang/Number;Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="2492"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(DD)Lorg/op4j/functions/Function;" line="2508"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNumber" desc="(Ljava/lang/Number;)Ljava/lang/Double;" line="2514"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="665" covered="86"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="145" covered="22"/><counter type="COMPLEXITY" missed="144" covered="13"/><counter type="METHOD" missed="143" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOfArrayOf" sourcefilename="FnArrayOfArrayOf.java"><method name="flattenArrays" desc="()Lorg/op4j/functions/Function;" line="45"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;)V" line="53"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnFloat$Add" sourcefilename="FnFloat.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Float;)V" line="2104"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Float;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Float;" line="2111"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnBigInteger$Divide" sourcefilename="FnBigInteger.java"><method name="&lt;init&gt;" desc="(Ljava/math/BigInteger;)V" line="1733"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/BigInteger;Ljava/math/RoundingMode;)V" line="1741"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/BigInteger;Ljava/math/MathContext;)V" line="1750"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/math/BigInteger;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigInteger;" line="1760"><counter type="INSTRUCTION" missed="31" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="67" covered="39"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="16" covered="10"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$UnCapitalize" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="4674"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="4678"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnStringAuxNumberConverters$ToLong" sourcefilename="FnStringAuxNumberConverters.java"><method name="&lt;init&gt;" desc="()V" line="741"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DecimalPoint;)V" line="745"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;)V" line="749"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="753"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;Lorg/op4j/functions/DecimalPoint;)V" line="757"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;Ljava/util/Locale;)V" line="761"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;Ljava/lang/String;)V" line="765"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="769"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="773"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNumber" desc="(Ljava/lang/Number;)Ljava/lang/Long;" line="778"><counter type="INSTRUCTION" missed="26" covered="36"/><counter type="BRANCH" missed="9" covered="5"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromString" desc="(Ljava/lang/String;I)Ljava/lang/Long;" line="803"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="736"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="65" covered="46"/><counter type="BRANCH" missed="9" covered="5"/><counter type="LINE" missed="19" covered="12"/><counter type="COMPLEXITY" missed="16" covered="3"/><counter type="METHOD" missed="9" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOf$RemoveAllNull" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="()V" line="496"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/List;" line="501"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOf$All" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="1454"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="1461"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$Extract" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Z)V" line="4965"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="4974"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArrayOf$CoupleAndGroup" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;)V" line="1382"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="1390"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$EscapeJavaScript" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="4559"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="4563"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnDouble$Multiply" sourcefilename="FnDouble.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Double;)V" line="2924"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Double;Ljava/math/RoundingMode;)V" line="2932"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Double;Ljava/math/MathContext;)V" line="2941"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Double;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Double;" line="2951"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnSetOf$Couple" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="()V" line="777"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="782"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnSetOf$RemoveAllNullOrFalse" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="538"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/Set;" line="543"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnBigInteger" sourcefilename="FnBigInteger.java"><method name="&lt;init&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="()Lorg/op4j/functions/Function;" line="74"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Z)Lorg/op4j/functions/Function;" line="86"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="97"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="108"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;Z)Lorg/op4j/functions/Function;" line="121"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;Z)Lorg/op4j/functions/Function;" line="134"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="()Lorg/op4j/functions/Function;" line="146"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Z)Lorg/op4j/functions/Function;" line="159"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="172"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="185"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;Z)Lorg/op4j/functions/Function;" line="199"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;Z)Lorg/op4j/functions/Function;" line="213"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="()Lorg/op4j/functions/Function;" line="224"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Z)Lorg/op4j/functions/Function;" line="240"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="253"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="266"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;Z)Lorg/op4j/functions/Function;" line="281"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;Z)Lorg/op4j/functions/Function;" line="296"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(Ljava/math/BigInteger;)Lorg/op4j/functions/Function;" line="310"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="325"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(Ljava/math/BigInteger;)Lorg/op4j/functions/Function;" line="339"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="354"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="371"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="397"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="420"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="446"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="471"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValueBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="491"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="509"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValueBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="528"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThanBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="547"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqToBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="575"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThanBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="603"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqToBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="629"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNull" desc="()Lorg/op4j/functions/Function;" line="651"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotNull" desc="()Lorg/op4j/functions/Function;" line="664"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="max" desc="()Lorg/op4j/functions/Function;" line="683"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="min" desc="()Lorg/op4j/functions/Function;" line="694"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sum" desc="()Lorg/op4j/functions/Function;" line="705"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avg" desc="()Lorg/op4j/functions/Function;" line="716"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avg" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="730"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="avg" desc="(Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="745"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxArray" desc="()Lorg/op4j/functions/Function;" line="756"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minArray" desc="()Lorg/op4j/functions/Function;" line="767"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sumArray" desc="()Lorg/op4j/functions/Function;" line="778"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avgArray" desc="()Lorg/op4j/functions/Function;" line="789"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avgArray" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="803"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avgArray" desc="(Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="818"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="abs" desc="()Lorg/op4j/functions/Function;" line="829"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="841"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(B)Lorg/op4j/functions/Function;" line="853"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(S)Lorg/op4j/functions/Function;" line="865"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(I)Lorg/op4j/functions/Function;" line="877"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(J)Lorg/op4j/functions/Function;" line="889"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(F)Lorg/op4j/functions/Function;" line="901"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(D)Lorg/op4j/functions/Function;" line="913"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="926"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(B)Lorg/op4j/functions/Function;" line="938"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(S)Lorg/op4j/functions/Function;" line="950"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(I)Lorg/op4j/functions/Function;" line="962"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(J)Lorg/op4j/functions/Function;" line="974"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(F)Lorg/op4j/functions/Function;" line="986"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(D)Lorg/op4j/functions/Function;" line="998"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1011"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divideBy" desc="(B)Lorg/op4j/functions/Function;" line="1023"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(S)Lorg/op4j/functions/Function;" line="1035"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(I)Lorg/op4j/functions/Function;" line="1047"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(J)Lorg/op4j/functions/Function;" line="1059"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(F)Lorg/op4j/functions/Function;" line="1071"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(D)Lorg/op4j/functions/Function;" line="1083"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(B)Lorg/op4j/functions/Function;" line="1097"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(S)Lorg/op4j/functions/Function;" line="1111"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(I)Lorg/op4j/functions/Function;" line="1125"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(J)Lorg/op4j/functions/Function;" line="1139"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(Ljava/lang/Byte;)Lorg/op4j/functions/Function;" line="1153"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(Ljava/lang/Short;)Lorg/op4j/functions/Function;" line="1167"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(Ljava/lang/Integer;)Lorg/op4j/functions/Function;" line="1181"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(Ljava/lang/Long;)Lorg/op4j/functions/Function;" line="1195"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(Ljava/math/BigInteger;)Lorg/op4j/functions/Function;" line="1209"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remainder" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1222"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(B)Lorg/op4j/functions/Function;" line="1235"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(S)Lorg/op4j/functions/Function;" line="1248"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(I)Lorg/op4j/functions/Function;" line="1261"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(J)Lorg/op4j/functions/Function;" line="1274"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(F)Lorg/op4j/functions/Function;" line="1287"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(D)Lorg/op4j/functions/Function;" line="1300"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1312"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplyBy" desc="(B)Lorg/op4j/functions/Function;" line="1324"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(S)Lorg/op4j/functions/Function;" line="1336"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(I)Lorg/op4j/functions/Function;" line="1348"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(J)Lorg/op4j/functions/Function;" line="1360"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(F)Lorg/op4j/functions/Function;" line="1372"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(D)Lorg/op4j/functions/Function;" line="1384"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pow" desc="(I)Lorg/op4j/functions/Function;" line="1397"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="between" desc="(Ljava/lang/Number;Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1414"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNumber" desc="(Ljava/lang/Number;)Ljava/math/BigInteger;" line="1421"><counter type="INSTRUCTION" missed="11" covered="11"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="350" covered="83"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="93" covered="20"/><counter type="COMPLEXITY" missed="92" covered="9"/><counter type="METHOD" missed="89" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOfListOf" sourcefilename="FnArrayOfListOf.java"><method name="flattenLists" desc="()Lorg/op4j/functions/Function;" line="44"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;)V" line="51"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnMapOf$Insert" sourcefilename="FnMapOf.java"><method name="&lt;init&gt;" desc="(ILjava/lang/Object;Ljava/lang/Object;)V" line="376"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/util/Map;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="384"><counter type="INSTRUCTION" missed="7" covered="38"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="50"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOfArrayOf$FlattenArrays" sourcefilename="FnListOfArrayOf.java"><method name="&lt;init&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/List;" line="65"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnBigInteger$AvgArray" sourcefilename="FnBigInteger.java"><method name="&lt;init&gt;" desc="()V" line="1627"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="1633"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/MathContext;)V" line="1640"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/math/BigInteger;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigInteger;" line="1649"><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="99" covered="9"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="21" covered="4"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$Join" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="5177"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="5182"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="5188"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="6"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnMapOf$Reverse" sourcefilename="FnMapOf.java"><method name="&lt;init&gt;" desc="()V" line="795"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Map;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="802"><counter type="INSTRUCTION" missed="86" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="89" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnFloat$Multiply" sourcefilename="FnFloat.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Float;)V" line="2208"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Float;Ljava/math/RoundingMode;)V" line="2216"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Float;Ljava/math/MathContext;)V" line="2225"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Float;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Float;" line="2235"><counter type="INSTRUCTION" missed="24" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="60" covered="38"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="16" covered="11"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOf$Sort" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="()V" line="299"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/List;" line="304"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnStringAuxNumberConverters$ToNumber" sourcefilename="FnStringAuxNumberConverters.java"><method name="configureDefaultDecimalFormat" desc="()V" line="76"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/FnStringAuxNumberConverters$Delegated;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="73"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="73"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DecimalPoint;)V" line="73"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Number;" line="127"><counter type="INSTRUCTION" missed="50" covered="34"/><counter type="BRANCH" missed="3" covered="4"/><counter type="LINE" missed="8" covered="7"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromString" desc="(Ljava/lang/String;)Ljava/lang/Number;" line="165"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rebuildNumberString" desc="(Ljava/lang/String;Lorg/op4j/functions/DecimalPoint;)Ljava/lang/String;" line="182"><counter type="INSTRUCTION" missed="59" covered="10"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="11" covered="3"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="160" covered="158"/><counter type="BRANCH" missed="11" covered="8"/><counter type="LINE" missed="34" covered="41"/><counter type="COMPLEXITY" missed="10" covered="10"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBigDecimal$Max" sourcefilename="FnBigDecimal.java"><method name="&lt;init&gt;" desc="()V" line="2364"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigDecimal;" line="2369"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnDouble$Pow" sourcefilename="FnDouble.java"><method name="&lt;init&gt;" desc="(I)V" line="2971"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;)V" line="2978"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/math/MathContext;)V" line="2986"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Double;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Double;" line="2995"><counter type="INSTRUCTION" missed="18" covered="19"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="48" covered="31"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="14" covered="10"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnDouble$Min" sourcefilename="FnDouble.java"><method name="&lt;init&gt;" desc="()V" line="2551"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Double;" line="2556"><counter type="INSTRUCTION" missed="2" covered="30"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="33"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnCollection$RemoveAllNull" sourcefilename="FnCollection.java"><method name="&lt;init&gt;" desc="()V" line="427"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/util/Collection;Lorg/op4j/functions/ExecCtx;)Ljava/util/Collection;" line="432"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOf$Distinct" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="()V" line="348"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/util/List;" line="353"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOf$ToMapByKeyValueFunctions" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)V" line="752"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="761"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnListOf$ZipAndGroupKeys" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="908"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="914"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="922"><counter type="INSTRUCTION" missed="19" covered="50"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="3" covered="13"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="62"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="7" covered="17"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnCollection$RemoveAllTrue" sourcefilename="FnCollection.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="340"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/util/Collection;Lorg/op4j/functions/ExecCtx;)Ljava/util/Collection;" line="347"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnDouble$Sum" sourcefilename="FnDouble.java"><method name="&lt;init&gt;" desc="()V" line="2574"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Double;" line="2579"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnMapOf$Put" sourcefilename="FnMapOf.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="353"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/util/Map;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="360"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnShort$MaxArray" sourcefilename="FnShort.java"><method name="&lt;init&gt;" desc="()V" line="2093"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/lang/Short;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Short;" line="2098"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnNumber$ToDecimalNumber" sourcefilename="FnNumber.java"><method name="&lt;init&gt;" desc="()V" line="3141"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;)V" line="3148"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNumber" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="3158"><counter type="INSTRUCTION" missed="36" covered="7"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="48" covered="16"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="13" covered="6"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/DateStyle" sourcefilename="DateStyle.java"><method name="&lt;clinit&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnTuple$ToUnit" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/Function;)V" line="374"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Lorg/javatuples/Unit;" line="383"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArrayOf$Any" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="1421"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="1428"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnDate$ToCalendar" sourcefilename="FnDate.java"><method name="&lt;init&gt;" desc="()V" line="977"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="977"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/util/Date;Lorg/op4j/functions/ExecCtx;)Ljava/util/Calendar;" line="991"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnNumber" sourcefilename="FnNumber.java"><method name="toBigDecimal" desc="()Lorg/op4j/functions/Function;" line="73"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBigDecimal" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="86"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBigInteger" desc="()Lorg/op4j/functions/Function;" line="98"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBigInteger" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="110"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDouble" desc="()Lorg/op4j/functions/Function;" line="121"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDouble" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="134"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toFloat" desc="()Lorg/op4j/functions/Function;" line="145"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toFloat" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="158"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLong" desc="()Lorg/op4j/functions/Function;" line="169"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLong" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="181"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toInteger" desc="()Lorg/op4j/functions/Function;" line="192"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toInteger" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="204"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toShort" desc="()Lorg/op4j/functions/Function;" line="215"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toShort" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="227"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByte" desc="()Lorg/op4j/functions/Function;" line="238"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByte" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="250"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBoolean" desc="()Lorg/op4j/functions/Function;" line="262"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="roundBigDecimal" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="279"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="roundFloat" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="293"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="roundDouble" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="307"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="()Lorg/op4j/functions/Function;" line="331"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Z)Lorg/op4j/functions/Function;" line="343"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="355"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="367"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;Z)Lorg/op4j/functions/Function;" line="382"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;Z)Lorg/op4j/functions/Function;" line="396"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;IIIZ)Lorg/op4j/functions/Function;" line="420"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;IIIZ)Lorg/op4j/functions/Function;" line="446"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;IIICCZ)Lorg/op4j/functions/Function;" line="477"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;IIIZCZ)Lorg/op4j/functions/Function;" line="508"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;IIICCZ)Lorg/op4j/functions/Function;" line="539"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;IIIZCZ)Lorg/op4j/functions/Function;" line="570"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="()Lorg/op4j/functions/Function;" line="588"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Z)Lorg/op4j/functions/Function;" line="602"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="616"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="629"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;Z)Lorg/op4j/functions/Function;" line="643"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;Z)Lorg/op4j/functions/Function;" line="657"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;IIIZ)Lorg/op4j/functions/Function;" line="683"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;IIIZ)Lorg/op4j/functions/Function;" line="711"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;IIICCZ)Lorg/op4j/functions/Function;" line="743"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;IIIZCZ)Lorg/op4j/functions/Function;" line="776"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;IIICCZ)Lorg/op4j/functions/Function;" line="809"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;IIIZCZ)Lorg/op4j/functions/Function;" line="842"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="()Lorg/op4j/functions/Function;" line="859"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Z)Lorg/op4j/functions/Function;" line="875"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="887"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="899"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;Z)Lorg/op4j/functions/Function;" line="913"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;Z)Lorg/op4j/functions/Function;" line="927"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;IIIZ)Lorg/op4j/functions/Function;" line="948"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;IIIZ)Lorg/op4j/functions/Function;" line="972"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;IIICCZ)Lorg/op4j/functions/Function;" line="1000"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;IIIZCZ)Lorg/op4j/functions/Function;" line="1029"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;IIICCZ)Lorg/op4j/functions/Function;" line="1058"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;IIIZCZ)Lorg/op4j/functions/Function;" line="1087"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1109"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(F)Lorg/op4j/functions/Function;" line="1123"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(D)Lorg/op4j/functions/Function;" line="1137"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(B)Lorg/op4j/functions/Function;" line="1151"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(S)Lorg/op4j/functions/Function;" line="1165"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(I)Lorg/op4j/functions/Function;" line="1179"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(J)Lorg/op4j/functions/Function;" line="1192"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1207"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(F)Lorg/op4j/functions/Function;" line="1222"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(D)Lorg/op4j/functions/Function;" line="1237"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(B)Lorg/op4j/functions/Function;" line="1252"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(S)Lorg/op4j/functions/Function;" line="1267"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(I)Lorg/op4j/functions/Function;" line="1282"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(J)Lorg/op4j/functions/Function;" line="1297"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1312"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(F)Lorg/op4j/functions/Function;" line="1326"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(D)Lorg/op4j/functions/Function;" line="1340"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(B)Lorg/op4j/functions/Function;" line="1354"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(S)Lorg/op4j/functions/Function;" line="1368"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(I)Lorg/op4j/functions/Function;" line="1382"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notEq" desc="(J)Lorg/op4j/functions/Function;" line="1396"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1411"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(F)Lorg/op4j/functions/Function;" line="1426"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(D)Lorg/op4j/functions/Function;" line="1441"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(B)Lorg/op4j/functions/Function;" line="1456"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(S)Lorg/op4j/functions/Function;" line="1471"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(I)Lorg/op4j/functions/Function;" line="1486"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(J)Lorg/op4j/functions/Function;" line="1501"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1518"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(F)Lorg/op4j/functions/Function;" line="1534"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(D)Lorg/op4j/functions/Function;" line="1550"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(B)Lorg/op4j/functions/Function;" line="1566"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(S)Lorg/op4j/functions/Function;" line="1582"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(I)Lorg/op4j/functions/Function;" line="1598"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(J)Lorg/op4j/functions/Function;" line="1614"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1632"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(F)Lorg/op4j/functions/Function;" line="1648"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(D)Lorg/op4j/functions/Function;" line="1664"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(B)Lorg/op4j/functions/Function;" line="1680"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(S)Lorg/op4j/functions/Function;" line="1696"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(I)Lorg/op4j/functions/Function;" line="1712"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lessOrEqTo" desc="(J)Lorg/op4j/functions/Function;" line="1728"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1752"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(F)Lorg/op4j/functions/Function;" line="1768"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(D)Lorg/op4j/functions/Function;" line="1784"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(B)Lorg/op4j/functions/Function;" line="1800"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(S)Lorg/op4j/functions/Function;" line="1816"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(I)Lorg/op4j/functions/Function;" line="1832"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="greaterThan" desc="(J)Lorg/op4j/functions/Function;" line="1848"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1866"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(F)Lorg/op4j/functions/Function;" line="1882"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(D)Lorg/op4j/functions/Function;" line="1898"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(B)Lorg/op4j/functions/Function;" line="1914"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(S)Lorg/op4j/functions/Function;" line="1930"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(I)Lorg/op4j/functions/Function;" line="1946"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(J)Lorg/op4j/functions/Function;" line="1962"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1978"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqBy" desc="(Lorg/op4j/functions/IFunction;F)Lorg/op4j/functions/Function;" line="1994"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqBy" desc="(Lorg/op4j/functions/IFunction;D)Lorg/op4j/functions/Function;" line="2010"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqBy" desc="(Lorg/op4j/functions/IFunction;B)Lorg/op4j/functions/Function;" line="2026"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqBy" desc="(Lorg/op4j/functions/IFunction;S)Lorg/op4j/functions/Function;" line="2042"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqBy" desc="(Lorg/op4j/functions/IFunction;I)Lorg/op4j/functions/Function;" line="2058"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqBy" desc="(Lorg/op4j/functions/IFunction;J)Lorg/op4j/functions/Function;" line="2074"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValueBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="2092"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValueBy" desc="(Lorg/op4j/functions/IFunction;F)Lorg/op4j/functions/Function;" line="2110"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValueBy" desc="(Lorg/op4j/functions/IFunction;D)Lorg/op4j/functions/Function;" line="2128"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValueBy" desc="(Lorg/op4j/functions/IFunction;B)Lorg/op4j/functions/Function;" line="2146"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValueBy" desc="(Lorg/op4j/functions/IFunction;S)Lorg/op4j/functions/Function;" line="2164"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValueBy" desc="(Lorg/op4j/functions/IFunction;I)Lorg/op4j/functions/Function;" line="2182"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValueBy" desc="(Lorg/op4j/functions/IFunction;J)Lorg/op4j/functions/Function;" line="2200"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="2217"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqBy" desc="(Lorg/op4j/functions/IFunction;F)Lorg/op4j/functions/Function;" line="2233"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqBy" desc="(Lorg/op4j/functions/IFunction;D)Lorg/op4j/functions/Function;" line="2249"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqBy" desc="(Lorg/op4j/functions/IFunction;B)Lorg/op4j/functions/Function;" line="2265"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqBy" desc="(Lorg/op4j/functions/IFunction;S)Lorg/op4j/functions/Function;" line="2281"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqBy" desc="(Lorg/op4j/functions/IFunction;I)Lorg/op4j/functions/Function;" line="2297"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqBy" desc="(Lorg/op4j/functions/IFunction;J)Lorg/op4j/functions/Function;" line="2313"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValueBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="2331"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValueBy" desc="(Lorg/op4j/functions/IFunction;F)Lorg/op4j/functions/Function;" line="2349"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValueBy" desc="(Lorg/op4j/functions/IFunction;D)Lorg/op4j/functions/Function;" line="2367"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValueBy" desc="(Lorg/op4j/functions/IFunction;B)Lorg/op4j/functions/Function;" line="2385"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValueBy" desc="(Lorg/op4j/functions/IFunction;S)Lorg/op4j/functions/Function;" line="2403"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValueBy" desc="(Lorg/op4j/functions/IFunction;I)Lorg/op4j/functions/Function;" line="2421"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValueBy" desc="(Lorg/op4j/functions/IFunction;J)Lorg/op4j/functions/Function;" line="2439"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThanBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="2457"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThanBy" desc="(Lorg/op4j/functions/IFunction;F)Lorg/op4j/functions/Function;" line="2474"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThanBy" desc="(Lorg/op4j/functions/IFunction;D)Lorg/op4j/functions/Function;" line="2491"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThanBy" desc="(Lorg/op4j/functions/IFunction;B)Lorg/op4j/functions/Function;" line="2508"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThanBy" desc="(Lorg/op4j/functions/IFunction;S)Lorg/op4j/functions/Function;" line="2525"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThanBy" desc="(Lorg/op4j/functions/IFunction;I)Lorg/op4j/functions/Function;" line="2542"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThanBy" desc="(Lorg/op4j/functions/IFunction;J)Lorg/op4j/functions/Function;" line="2559"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqToBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="2578"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqToBy" desc="(Lorg/op4j/functions/IFunction;F)Lorg/op4j/functions/Function;" line="2595"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqToBy" desc="(Lorg/op4j/functions/IFunction;D)Lorg/op4j/functions/Function;" line="2612"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqToBy" desc="(Lorg/op4j/functions/IFunction;B)Lorg/op4j/functions/Function;" line="2629"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqToBy" desc="(Lorg/op4j/functions/IFunction;S)Lorg/op4j/functions/Function;" line="2646"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqToBy" desc="(Lorg/op4j/functions/IFunction;I)Lorg/op4j/functions/Function;" line="2663"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqToBy" desc="(Lorg/op4j/functions/IFunction;J)Lorg/op4j/functions/Function;" line="2680"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThanBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="2705"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThanBy" desc="(Lorg/op4j/functions/IFunction;F)Lorg/op4j/functions/Function;" line="2722"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThanBy" desc="(Lorg/op4j/functions/IFunction;D)Lorg/op4j/functions/Function;" line="2739"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThanBy" desc="(Lorg/op4j/functions/IFunction;B)Lorg/op4j/functions/Function;" line="2756"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThanBy" desc="(Lorg/op4j/functions/IFunction;S)Lorg/op4j/functions/Function;" line="2773"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThanBy" desc="(Lorg/op4j/functions/IFunction;I)Lorg/op4j/functions/Function;" line="2790"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThanBy" desc="(Lorg/op4j/functions/IFunction;J)Lorg/op4j/functions/Function;" line="2807"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqToBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="2826"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqToBy" desc="(Lorg/op4j/functions/IFunction;F)Lorg/op4j/functions/Function;" line="2843"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqToBy" desc="(Lorg/op4j/functions/IFunction;D)Lorg/op4j/functions/Function;" line="2860"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqToBy" desc="(Lorg/op4j/functions/IFunction;B)Lorg/op4j/functions/Function;" line="2877"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqToBy" desc="(Lorg/op4j/functions/IFunction;S)Lorg/op4j/functions/Function;" line="2894"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqToBy" desc="(Lorg/op4j/functions/IFunction;I)Lorg/op4j/functions/Function;" line="2911"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqToBy" desc="(Lorg/op4j/functions/IFunction;J)Lorg/op4j/functions/Function;" line="2928"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNull" desc="()Lorg/op4j/functions/Function;" line="2940"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotNull" desc="()Lorg/op4j/functions/Function;" line="2953"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(Ljava/lang/Number;Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="2971"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(II)Lorg/op4j/functions/Function;" line="2988"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(SS)Lorg/op4j/functions/Function;" line="3005"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(BB)Lorg/op4j/functions/Function;" line="3022"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(JJ)Lorg/op4j/functions/Function;" line="3039"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(DD)Lorg/op4j/functions/Function;" line="3056"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(FF)Lorg/op4j/functions/Function;" line="3073"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="807" covered="66"/><counter type="LINE" missed="167" covered="19"/><counter type="COMPLEXITY" missed="167" covered="11"/><counter type="METHOD" missed="167" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnObject$IsNotNull" sourcefilename="FnObject.java"><method name="&lt;init&gt;" desc="()V" line="2645"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="2649"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$ToDate" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="4857"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/Locale;)V" line="4869"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="4876"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/util/Date;" line="4888"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="96" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnLong$Max" sourcefilename="FnLong.java"><method name="&lt;init&gt;" desc="()V" line="1967"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Long;" line="1972"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnStringAuxNumberConverters$ToDouble" sourcefilename="FnStringAuxNumberConverters.java"><method name="&lt;init&gt;" desc="()V" line="551"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DecimalPoint;)V" line="555"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="559"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;Lorg/op4j/functions/DecimalPoint;)V" line="563"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;Ljava/util/Locale;)V" line="567"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;Ljava/lang/String;)V" line="571"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;)V" line="575"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="579"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNumber" desc="(Ljava/lang/Number;)Ljava/lang/Double;" line="584"><counter type="INSTRUCTION" missed="11" covered="53"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="547"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="37" covered="72"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="11" covered="17"/><counter type="COMPLEXITY" missed="10" covered="7"/><counter type="METHOD" missed="5" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnNumber$ToByte" sourcefilename="FnNumber.java"><method name="&lt;init&gt;" desc="()V" line="3344"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="3348"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNumberToNonDecimal" desc="(Ljava/lang/Number;)Ljava/lang/Byte;" line="3353"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="3"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnDate$FieldIntegerListToDate" sourcefilename="FnDate.java"><method name="&lt;init&gt;" desc="()V" line="1125"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/util/Date;" line="1131"><counter type="INSTRUCTION" missed="98" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="101" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$ToUpperCase" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="4644"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="4648"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnDate$Roll" sourcefilename="FnDate.java"><method name="&lt;init&gt;" desc="(II)V" line="733"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Date;Lorg/op4j/functions/ExecCtx;)Ljava/util/Date;" line="740"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$EndsWith" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6504"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="6511"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnSetOfArrayOf" sourcefilename="FnSetOfArrayOf.java"><method name="flattenArrays" desc="()Lorg/op4j/functions/Function;" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;)V" line="51"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnListOf$ZipAndGroupKeysBy" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="840"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="847"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnBigInteger$MinArray" sourcefilename="FnBigInteger.java"><method name="&lt;init&gt;" desc="()V" line="1583"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/math/BigInteger;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigInteger;" line="1588"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOf$ToMap" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="722"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="729"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArrayOf$RemoveAllTrue" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="635"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="642"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnListOf$Count" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="()V" line="1335"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Integer;" line="1340"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArrayOfSetOf$FlattenSets" sourcefilename="FnArrayOfSetOf.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;)V" line="66"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="75"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnTuple" sourcefilename="FnTuple.java"><method name="unitWith" desc="(Lorg/op4j/functions/Function;)Lorg/op4j/functions/Function;" line="73"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pairWith" desc="(Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;)Lorg/op4j/functions/Function;" line="82"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keyValueWith" desc="(Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;)Lorg/op4j/functions/Function;" line="91"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="labelValueWith" desc="(Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;)Lorg/op4j/functions/Function;" line="100"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tripletWith" desc="(Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;)Lorg/op4j/functions/Function;" line="112"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="quartetWith" desc="(Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;)Lorg/op4j/functions/Function;" line="126"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="quintetWith" desc="(Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;)Lorg/op4j/functions/Function;" line="140"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sextetWith" desc="(Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;)Lorg/op4j/functions/Function;" line="157"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="septetWith" desc="(Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;)Lorg/op4j/functions/Function;" line="174"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="octetWith" desc="(Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;)Lorg/op4j/functions/Function;" line="193"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enneadWith" desc="(Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;)Lorg/op4j/functions/Function;" line="213"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decadeWith" desc="(Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;)Lorg/op4j/functions/Function;" line="234"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="()Lorg/op4j/functions/Function;" line="245"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toList" desc="()Lorg/op4j/functions/Function;" line="251"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSize" desc="()Lorg/op4j/functions/Function;" line="257"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="263"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsAll" desc="(Ljava/util/Collection;)Lorg/op4j/functions/Function;" line="269"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsAll" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="275"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue0Of" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/Function;" line="281"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue1Of" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/Function;" line="287"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue2Of" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/Function;" line="293"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue3Of" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/Function;" line="299"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue4Of" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/Function;" line="305"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue5Of" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/Function;" line="311"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue6Of" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/Function;" line="317"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue7Of" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/Function;" line="323"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue8Of" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/Function;" line="329"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue9Of" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/Function;" line="335"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKeyOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/Function;" line="341"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValueOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/Function;" line="347"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLabelOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/Function;" line="353"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="176" covered="10"/><counter type="LINE" missed="29" covered="2"/><counter type="COMPLEXITY" missed="29" covered="2"/><counter type="METHOD" missed="29" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBigDecimal$Add" sourcefilename="FnBigDecimal.java"><method name="&lt;init&gt;" desc="(Ljava/math/BigDecimal;)V" line="2651"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/math/BigDecimal;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigDecimal;" line="2658"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnNumber$RoundDouble" sourcefilename="FnNumber.java"><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;)V" line="3403"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Double;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Double;" line="3410"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnListOf$ZipKeys" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="666"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="672"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="679"><counter type="INSTRUCTION" missed="19" covered="33"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="45"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="7" covered="12"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOf$RemoveAllNull" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="()V" line="715"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="720"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnCalendar$FieldStringArrayToCalendar" sourcefilename="FnCalendar.java"><method name="&lt;init&gt;" desc="()V" line="1187"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="([Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/util/Calendar;" line="1193"><counter type="INSTRUCTION" missed="42" covered="56"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="42" covered="59"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOf$ContainsAll" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="1216"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="1222"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnMapOf$SortBy" sourcefilename="FnMapOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="247"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Map;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="254"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnCalendar$ToString" sourcefilename="FnCalendar.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="833"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/Locale;)V" line="833"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="833"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DateStyle;Lorg/op4j/functions/TimeStyle;)V" line="833"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DateStyle;Lorg/op4j/functions/TimeStyle;Ljava/util/Locale;)V" line="833"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DateStyle;Lorg/op4j/functions/TimeStyle;Ljava/lang/String;)V" line="833"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/util/Calendar;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="902"><counter type="INSTRUCTION" missed="15" covered="12"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromCalendar" desc="(Ljava/util/Calendar;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;" line="913"><counter type="INSTRUCTION" missed="5" covered="22"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromCalendar" desc="(Ljava/util/Calendar;Lorg/op4j/functions/DateStyle;Lorg/op4j/functions/TimeStyle;Ljava/util/Locale;)Ljava/lang/String;" line="927"><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="210" covered="82"/><counter type="BRANCH" missed="24" covered="4"/><counter type="LINE" missed="45" covered="20"/><counter type="COMPLEXITY" missed="18" covered="5"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnShort$Divide" sourcefilename="FnShort.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Short;)V" line="2259"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Short;Ljava/math/RoundingMode;)V" line="2267"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Short;Ljava/math/MathContext;)V" line="2276"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Short;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Short;" line="2286"><counter type="INSTRUCTION" missed="20" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="53" covered="44"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="15" covered="12"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$SubString" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="(I)V" line="6524"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(II)V" line="6530"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="6536"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$IsValidLong" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="5961"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="5967"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="5973"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="5979"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="5985"><counter type="INSTRUCTION" missed="32" covered="63"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="8" covered="16"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="5957"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="52" covered="88"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="16" covered="26"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOf$Contains" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="1190"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="1196"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnStringAuxNumberConverters$ToDecimalNumber" sourcefilename="FnStringAuxNumberConverters.java"><method name="&lt;init&gt;" desc="()V" line="363"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DecimalPoint;)V" line="363"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="363"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="363"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;)V" line="363"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;Ljava/util/Locale;)V" line="363"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;Ljava/lang/String;)V" line="363"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;Lorg/op4j/functions/DecimalPoint;)V" line="363"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="numberExecute" desc="(Ljava/lang/String;)Ljava/lang/Number;" line="436"><counter type="INSTRUCTION" missed="78" covered="14"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="12" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromNumber" desc="(Ljava/lang/Number;ILjava/math/RoundingMode;)Ljava/lang/Number;" line="469"><counter type="INSTRUCTION" missed="7" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromString" desc="(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/lang/Number;" line="484"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="247" covered="117"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="43" covered="25"/><counter type="COMPLEXITY" missed="10" covered="7"/><counter type="METHOD" missed="5" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBigDecimal$MaxArray" sourcefilename="FnBigDecimal.java"><method name="&lt;init&gt;" desc="()V" line="2480"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/math/BigDecimal;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigDecimal;" line="2485"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOf$CoupleAndGroup" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="()V" line="1051"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="1056"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnListOf$ToSet" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="()V" line="600"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/util/Set;" line="605"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnCalendar$FieldIntegerArrayToCalendar" sourcefilename="FnCalendar.java"><method name="&lt;init&gt;" desc="()V" line="1110"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="([Ljava/lang/Integer;Lorg/op4j/functions/ExecCtx;)Ljava/util/Calendar;" line="1116"><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="91" covered="3"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnMap" sourcefilename="FnMap.java"><method name="of" desc="(Lorg/javaruntype/type/Type;Lorg/javaruntype/type/Type;)Lorg/op4j/functions/FnMapOf;" line="61"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofObjectObject" desc="()Lorg/op4j/functions/FnMapOf;" line="74"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofStringString" desc="()Lorg/op4j/functions/FnMapOf;" line="87"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofIntegerString" desc="()Lorg/op4j/functions/FnMapOf;" line="100"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofStringInteger" desc="()Lorg/op4j/functions/FnMapOf;" line="113"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="27"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$CanBeBigInteger" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="5629"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="5636"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="5643"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DecimalPoint;)V" line="5650"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="5657"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="5664"><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="118" covered="12"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="41" covered="5"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOf$ZipAndGroupValuesBy" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="851"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="859"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArrayOf$ZipAndGroupKeys" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;Ljava/util/Collection;)V" line="1032"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;[Ljava/lang/Object;)V" line="1039"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="1048"><counter type="INSTRUCTION" missed="19" covered="59"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="74"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="7" covered="17"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnMapOf$RemoveAllKeys" sourcefilename="FnMapOf.java"><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="466"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Map;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="472"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnListOf$RemoveAllFalse" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="464"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/List;" line="469"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnShort" sourcefilename="FnShort.java"><method name="&lt;init&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="()Lorg/op4j/functions/Function;" line="74"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Z)Lorg/op4j/functions/Function;" line="86"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="97"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="108"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;Z)Lorg/op4j/functions/Function;" line="121"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;Z)Lorg/op4j/functions/Function;" line="134"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="()Lorg/op4j/functions/Function;" line="146"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Z)Lorg/op4j/functions/Function;" line="159"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="172"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="185"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;Z)Lorg/op4j/functions/Function;" line="199"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;Z)Lorg/op4j/functions/Function;" line="213"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="()Lorg/op4j/functions/Function;" line="224"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Z)Lorg/op4j/functions/Function;" line="240"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="253"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="266"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;Z)Lorg/op4j/functions/Function;" line="281"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;Z)Lorg/op4j/functions/Function;" line="296"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(Ljava/lang/Short;)Lorg/op4j/functions/Function;" line="310"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(S)Lorg/op4j/functions/Function;" line="324"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="339"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(S)Lorg/op4j/functions/Function;" line="354"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(Ljava/lang/Short;)Lorg/op4j/functions/Function;" line="368"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(S)Lorg/op4j/functions/Function;" line="382"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="397"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(S)Lorg/op4j/functions/Function;" line="412"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="429"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(S)Lorg/op4j/functions/Function;" line="447"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="464"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(S)Lorg/op4j/functions/Function;" line="482"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="500"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(S)Lorg/op4j/functions/Function;" line="518"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="535"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(S)Lorg/op4j/functions/Function;" line="553"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="573"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValueBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="594"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="613"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValueBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="633"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThanBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="653"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqToBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="678"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThanBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="702"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqToBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="731"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNull" desc="()Lorg/op4j/functions/Function;" line="754"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotNull" desc="()Lorg/op4j/functions/Function;" line="767"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="max" desc="()Lorg/op4j/functions/Function;" line="787"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="min" desc="()Lorg/op4j/functions/Function;" line="798"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sum" desc="()Lorg/op4j/functions/Function;" line="809"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avg" desc="()Lorg/op4j/functions/Function;" line="820"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avg" desc="(Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="835"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avg" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="849"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxArray" desc="()Lorg/op4j/functions/Function;" line="860"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minArray" desc="()Lorg/op4j/functions/Function;" line="871"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sumArray" desc="()Lorg/op4j/functions/Function;" line="882"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avgArray" desc="()Lorg/op4j/functions/Function;" line="893"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avgArray" desc="(Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="908"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avgArray" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="922"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="abs" desc="()Lorg/op4j/functions/Function;" line="933"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="945"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(B)Lorg/op4j/functions/Function;" line="957"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(S)Lorg/op4j/functions/Function;" line="969"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(I)Lorg/op4j/functions/Function;" line="981"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(J)Lorg/op4j/functions/Function;" line="993"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(F)Lorg/op4j/functions/Function;" line="1005"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(D)Lorg/op4j/functions/Function;" line="1017"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1030"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(B)Lorg/op4j/functions/Function;" line="1042"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(S)Lorg/op4j/functions/Function;" line="1054"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(I)Lorg/op4j/functions/Function;" line="1066"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(J)Lorg/op4j/functions/Function;" line="1078"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(F)Lorg/op4j/functions/Function;" line="1090"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(D)Lorg/op4j/functions/Function;" line="1102"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1115"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(B)Lorg/op4j/functions/Function;" line="1127"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(S)Lorg/op4j/functions/Function;" line="1139"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(I)Lorg/op4j/functions/Function;" line="1151"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(J)Lorg/op4j/functions/Function;" line="1163"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(F)Lorg/op4j/functions/Function;" line="1175"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(D)Lorg/op4j/functions/Function;" line="1187"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(Ljava/lang/Number;Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="1202"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divideBy" desc="(BLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1216"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(SLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1230"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(ILjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1244"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(JLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1258"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(FLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1272"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(DLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1286"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(Ljava/lang/Number;Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1301"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(BLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1315"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(SLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1329"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1343"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(JLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1357"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(FLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1371"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(DLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1385"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(B)Lorg/op4j/functions/Function;" line="1399"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(S)Lorg/op4j/functions/Function;" line="1413"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(I)Lorg/op4j/functions/Function;" line="1427"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="module" desc="(J)Lorg/op4j/functions/Function;" line="1441"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(Ljava/lang/Byte;)Lorg/op4j/functions/Function;" line="1455"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(Ljava/lang/Short;)Lorg/op4j/functions/Function;" line="1469"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(Ljava/lang/Integer;)Lorg/op4j/functions/Function;" line="1483"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(Ljava/lang/Long;)Lorg/op4j/functions/Function;" line="1497"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(Ljava/math/BigInteger;)Lorg/op4j/functions/Function;" line="1511"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1524"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(B)Lorg/op4j/functions/Function;" line="1537"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(S)Lorg/op4j/functions/Function;" line="1550"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(I)Lorg/op4j/functions/Function;" line="1563"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(J)Lorg/op4j/functions/Function;" line="1576"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(F)Lorg/op4j/functions/Function;" line="1589"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(D)Lorg/op4j/functions/Function;" line="1602"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1614"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplyBy" desc="(B)Lorg/op4j/functions/Function;" line="1626"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(S)Lorg/op4j/functions/Function;" line="1638"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(I)Lorg/op4j/functions/Function;" line="1650"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(J)Lorg/op4j/functions/Function;" line="1662"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(F)Lorg/op4j/functions/Function;" line="1674"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(D)Lorg/op4j/functions/Function;" line="1686"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(Ljava/lang/Number;Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="1701"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(BLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1715"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(SLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1729"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(ILjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1743"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(JLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1757"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(FLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1771"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(DLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1785"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(Ljava/lang/Number;Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1799"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(BLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1812"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(SLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1825"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1838"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(JLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1851"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(FLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1864"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(DLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1877"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pow" desc="(I)Lorg/op4j/functions/Function;" line="1890"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pow" desc="(ILjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1904"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pow" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1918"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(Ljava/lang/Number;Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1935"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(SS)Lorg/op4j/functions/Function;" line="1951"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNumber" desc="(Ljava/lang/Number;)Ljava/lang/Short;" line="1957"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="538" covered="77"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="131" covered="17"/><counter type="COMPLEXITY" missed="130" covered="8"/><counter type="METHOD" missed="129" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnMapOf" sourcefilename="FnMapOf.java"><method name="sortByKey" desc="()Lorg/op4j/functions/Function;" line="61"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sortEntries" desc="(Ljava/util/Comparator;)Lorg/op4j/functions/Function;" line="65"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sortBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="70"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="75"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(ILjava/lang/Object;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="79"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Ljava/util/Map;)Lorg/op4j/functions/Function;" line="83"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertAll" desc="(ILjava/util/Map;)Lorg/op4j/functions/Function;" line="87"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllKeys" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="91"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="95"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="99"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllKeysNot" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="103"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractKeys" desc="()Lorg/op4j/functions/Function;" line="107"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractValues" desc="()Lorg/op4j/functions/Function;" line="111"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="all" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="119"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="any" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="123"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="count" desc="()Lorg/op4j/functions/Function;" line="133"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsKey" desc="(Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="142"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notContainsKey" desc="(Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="146"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsAllKeys" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="150"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsAnyKeys" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="154"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsNoneKeys" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="158"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverse" desc="()Lorg/op4j/functions/Function;" line="166"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;Lorg/javaruntype/type/Type;)V" line="176"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="88" covered="36"/><counter type="LINE" missed="18" covered="9"/><counter type="COMPLEXITY" missed="18" covered="6"/><counter type="METHOD" missed="18" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnCollection$RemoveAllIndexesNot" sourcefilename="FnCollection.java"><method name="&lt;init&gt;" desc="([I)V" line="399"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/util/Collection;Lorg/op4j/functions/ExecCtx;)Ljava/util/Collection;" line="405"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnMapOf$RemoveAllTrue" sourcefilename="FnMapOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="490"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Map;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="496"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnStringAuxNumberConverters$ToNonDecimalNumber$ExecType" sourcefilename="FnStringAuxNumberConverters.java"><method name="&lt;clinit&gt;" desc="()V" line="219"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnObject$Between" sourcefilename="FnObject.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="2682"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="2692"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnSetOfSetOf$FlattenSets" sourcefilename="FnSetOfSetOf.java"><method name="&lt;init&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/Set;" line="67"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnCollection$Add" sourcefilename="FnCollection.java"><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="213"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/util/Collection;Lorg/op4j/functions/ExecCtx;)Ljava/util/Collection;" line="219"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOf$ZipKeysBy" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="621"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="628"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnLong$MaxArray" sourcefilename="FnLong.java"><method name="&lt;init&gt;" desc="()V" line="2091"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/lang/Long;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Long;" line="2096"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBoolean$Negate" sourcefilename="FnBoolean.java"><method name="&lt;init&gt;" desc="()V" line="510"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Boolean;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="515"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="3"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$CanBeInteger" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="6031"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="6038"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6045"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DecimalPoint;)V" line="6052"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="6059"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="6066"><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="118" covered="12"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="41" covered="5"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnInteger$Min" sourcefilename="FnInteger.java"><method name="&lt;init&gt;" desc="()V" line="1990"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Integer;" line="1995"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOf$Reverse" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="()V" line="1305"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/util/List;" line="1312"><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="82" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnDouble$Divide" sourcefilename="FnDouble.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Double;)V" line="2848"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Double;Ljava/math/RoundingMode;)V" line="2856"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Double;Ljava/math/MathContext;)V" line="2865"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Double;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Double;" line="2875"><counter type="INSTRUCTION" missed="18" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="51" covered="42"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="15" covered="12"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnTuple$ToOctet" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;)V" line="734"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Lorg/javatuples/Octet;" line="750"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnInteger$MaxArray" sourcefilename="FnInteger.java"><method name="&lt;init&gt;" desc="()V" line="2084"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/lang/Integer;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Integer;" line="2089"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnShort$Remainder" sourcefilename="FnShort.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Short;)V" line="2321"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Short;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Short;" line="2327"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnShort$Sum" sourcefilename="FnShort.java"><method name="&lt;init&gt;" desc="()V" line="2015"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Short;" line="2020"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="3"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnInteger$Pow" sourcefilename="FnInteger.java"><method name="&lt;init&gt;" desc="(I)V" line="2384"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;)V" line="2391"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/math/MathContext;)V" line="2399"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Integer;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Integer;" line="2408"><counter type="INSTRUCTION" missed="18" covered="20"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="48" covered="32"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="14" covered="10"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBigInteger$SumArray" sourcefilename="FnBigInteger.java"><method name="&lt;init&gt;" desc="()V" line="1606"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/math/BigInteger;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigInteger;" line="1611"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="3"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnNumber$ToNonDecimalNumber" sourcefilename="FnNumber.java"><method name="&lt;init&gt;" desc="()V" line="3102"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="3108"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromNumber" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="3116"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnLong$Module" sourcefilename="FnLong.java"><method name="&lt;init&gt;" desc="(Ljava/math/BigInteger;)V" line="2316"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Long;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Long;" line="2322"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnFloat$Max" sourcefilename="FnFloat.java"><method name="&lt;init&gt;" desc="()V" line="1848"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Float;" line="1853"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnShort$Min" sourcefilename="FnShort.java"><method name="&lt;init&gt;" desc="()V" line="1992"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Short;" line="1997"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnMapOf$ContainsNoneKeys" sourcefilename="FnMapOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="767"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Map;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="773"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnShort$Pow" sourcefilename="FnShort.java"><method name="&lt;init&gt;" desc="(I)V" line="2386"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;)V" line="2393"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/math/MathContext;)V" line="2401"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Short;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Short;" line="2410"><counter type="INSTRUCTION" missed="18" covered="20"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="48" covered="32"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="14" covered="10"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOf$RemoveAllNotNullAndFalse" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="506"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/Set;" line="511"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnInteger$Sum" sourcefilename="FnInteger.java"><method name="&lt;init&gt;" desc="()V" line="2013"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Integer;" line="2018"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="3"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnMapOf$ContainsAllKeys" sourcefilename="FnMapOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="708"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Map;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="714"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$MatchAndExtractAll" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/List;)V" line="5058"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/util/List;" line="5068"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/MapBuilder" sourcefilename="MapBuilder.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map$Entry;" line="54"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnNumber$ToDouble" sourcefilename="FnNumber.java"><method name="&lt;init&gt;" desc="()V" line="3216"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;)V" line="3220"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNumberToDecimal" desc="(Ljava/lang/Number;)Ljava/lang/Double;" line="3226"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="3"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$IsCalendar" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="4802"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/Locale;)V" line="4802"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="4802"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="4836"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="103" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnDate$Before" sourcefilename="FnDate.java"><method name="&lt;init&gt;" desc="(Ljava/util/Date;)V" line="819"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Date;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="826"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArrayOf$AddAll" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="562"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="569"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnTuple$ToArray" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="()V" line="895"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Lorg/javatuples/Tuple;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="901"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnCalendar$FieldStringListToCalendar" sourcefilename="FnCalendar.java"><method name="&lt;init&gt;" desc="()V" line="1148"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/util/Calendar;" line="1154"><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="105" covered="3"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="16" covered="2"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOfListOf" sourcefilename="FnListOfListOf.java"><method name="flattenLists" desc="()Lorg/op4j/functions/Function;" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;)V" line="49"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnBigInteger$Subtract" sourcefilename="FnBigInteger.java"><method name="&lt;init&gt;" desc="(Ljava/math/BigInteger;)V" line="1711"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/math/BigInteger;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigInteger;" line="1719"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnTuple$ToKeyValue" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;)V" line="437"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Lorg/javatuples/KeyValue;" line="447"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnList" sourcefilename="FnList.java"><method name="of" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/FnListOf;" line="75"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofArrayOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/FnListOfArrayOf;" line="79"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofListOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/FnListOfListOf;" line="83"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofSetOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/FnListOfSetOf;" line="87"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofObject" desc="()Lorg/op4j/functions/FnListOf;" line="100"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofBigInteger" desc="()Lorg/op4j/functions/FnListOf;" line="113"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofBigDecimal" desc="()Lorg/op4j/functions/FnListOf;" line="126"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofBoolean" desc="()Lorg/op4j/functions/FnListOf;" line="139"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofByte" desc="()Lorg/op4j/functions/FnListOf;" line="152"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofCharacter" desc="()Lorg/op4j/functions/FnListOf;" line="165"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofCalendar" desc="()Lorg/op4j/functions/FnListOf;" line="178"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofDate" desc="()Lorg/op4j/functions/FnListOf;" line="191"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofDouble" desc="()Lorg/op4j/functions/FnListOf;" line="204"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofFloat" desc="()Lorg/op4j/functions/FnListOf;" line="217"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofInteger" desc="()Lorg/op4j/functions/FnListOf;" line="230"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofLong" desc="()Lorg/op4j/functions/FnListOf;" line="243"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofShort" desc="()Lorg/op4j/functions/FnListOf;" line="256"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofString" desc="()Lorg/op4j/functions/FnListOf;" line="269"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="37" covered="82"/><counter type="LINE" missed="14" covered="18"/><counter type="COMPLEXITY" missed="14" covered="5"/><counter type="METHOD" missed="14" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOf$All" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="1151"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="1158"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnShort$Subtract" sourcefilename="FnShort.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Short;)V" line="2240"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Short;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Short;" line="2248"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnCollection$RemoveAllNullOrTrue" sourcefilename="FnCollection.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="525"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/util/Collection;Lorg/op4j/functions/ExecCtx;)Ljava/util/Collection;" line="532"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOf$SortBy$OrderableElement" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Comparable;)V" line="393"><counter type="INSTRUCTION" missed="5" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElement" desc="()Ljava/lang/Object;" line="402"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComparator" desc="()Ljava/lang/Comparable;" line="406"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareTo" desc="(Lorg/op4j/functions/FnArrayOf$SortBy$OrderableElement;)I" line="411"><counter type="INSTRUCTION" missed="5" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="419"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="429"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="27"/><counter type="BRANCH" missed="10" covered="2"/><counter type="LINE" missed="15" covered="9"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOf$ToGroupMapByKeyValueFunctions" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)V" line="1040"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="1050"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnListOf$ToGroupMap" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="1003"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="1010"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnSetOf$ZipAndGroupKeysBy" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="822"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="829"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnDouble$MinArray" sourcefilename="FnDouble.java"><method name="&lt;init&gt;" desc="()V" line="2670"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/lang/Double;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Double;" line="2675"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOf$ToList" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="()V" line="577"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)Ljava/util/List;" line="582"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnMapOf$All" sourcefilename="FnMapOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="636"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Map;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="643"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnTuple$ToQuintet" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;)V" line="581"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Lorg/javatuples/Quintet;" line="594"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArrayOf$ZipValuesBy" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="923"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="930"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnFloat$MinArray" sourcefilename="FnFloat.java"><method name="&lt;init&gt;" desc="()V" line="1994"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/lang/Float;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Float;" line="1999"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/TimeStyle" sourcefilename="TimeStyle.java"><method name="&lt;clinit&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnMapOf$Count" sourcefilename="FnMapOf.java"><method name="&lt;init&gt;" desc="()V" line="826"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/util/Map;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Integer;" line="831"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnNumber$ToBigDecimal" sourcefilename="FnNumber.java"><method name="&lt;init&gt;" desc="()V" line="3187"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;)V" line="3191"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNumberToDecimal" desc="(Ljava/lang/Number;)Ljava/math/BigDecimal;" line="3197"><counter type="INSTRUCTION" missed="16" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOf$ZipKeysBy" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="597"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="604"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnStringAuxNumberConverters$ToInteger" sourcefilename="FnStringAuxNumberConverters.java"><method name="&lt;init&gt;" desc="()V" line="816"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DecimalPoint;)V" line="820"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;)V" line="824"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="828"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;Lorg/op4j/functions/DecimalPoint;)V" line="832"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;Ljava/util/Locale;)V" line="836"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;Ljava/lang/String;)V" line="840"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="844"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="848"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNumber" desc="(Ljava/lang/Number;)Ljava/lang/Integer;" line="853"><counter type="INSTRUCTION" missed="26" covered="38"/><counter type="BRANCH" missed="9" covered="5"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromString" desc="(Ljava/lang/String;I)Ljava/lang/Integer;" line="878"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="812"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="60" covered="53"/><counter type="BRANCH" missed="9" covered="5"/><counter type="LINE" missed="17" covered="14"/><counter type="COMPLEXITY" missed="15" covered="4"/><counter type="METHOD" missed="8" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOf$RemoveAllFalse" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="442"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/Set;" line="447"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnTuple$ToDecade" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;)V" line="855"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Lorg/javatuples/Decade;" line="873"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="85" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnListOfSetOf" sourcefilename="FnListOfSetOf.java"><method name="flattenSets" desc="()Lorg/op4j/functions/Function;" line="42"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;)V" line="50"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnDate$TimestampToDate" sourcefilename="FnDate.java"><method name="&lt;init&gt;" desc="()V" line="1011"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="1011"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/sql/Timestamp;Lorg/op4j/functions/ExecCtx;)Ljava/util/Date;" line="1025"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArrayOf$ContainsAll" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="1514"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="1520"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnLong$Multiply" sourcefilename="FnLong.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Long;)V" line="2350"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Long;Ljava/math/RoundingMode;)V" line="2358"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Long;Ljava/math/MathContext;)V" line="2367"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Long;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Long;" line="2377"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArrayOf$RemoveAllNullOrTrue" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="806"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="813"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnListOf$ZipAndGroupValues" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="952"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="958"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="966"><counter type="INSTRUCTION" missed="19" covered="50"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="3" covered="13"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="62"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="7" covered="17"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBigInteger$Sum" sourcefilename="FnBigInteger.java"><method name="&lt;init&gt;" desc="()V" line="1487"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigInteger;" line="1492"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="3"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBigDecimal$Remainder" sourcefilename="FnBigDecimal.java"><method name="&lt;init&gt;" desc="(Ljava/math/BigDecimal;)V" line="2739"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/BigDecimal;Ljava/math/MathContext;)V" line="2745"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/math/BigDecimal;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigDecimal;" line="2752"><counter type="INSTRUCTION" missed="7" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnInteger$Avg" sourcefilename="FnInteger.java"><method name="&lt;init&gt;" desc="()V" line="2034"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="2040"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/MathContext;)V" line="2047"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Integer;" line="2056"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="85" covered="9"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="22" covered="4"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBigInteger$Min" sourcefilename="FnBigInteger.java"><method name="&lt;init&gt;" desc="()V" line="1464"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigInteger;" line="1469"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnTuple$GetLabel" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="()V" line="1212"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Lorg/javatuples/valueintf/IValueLabel;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Object;" line="1218"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$EscapeXML" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="4502"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="4506"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOf$ContainsAny" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="1246"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="1252"><counter type="INSTRUCTION" missed="6" covered="29"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="35"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBigInteger$Pow" sourcefilename="FnBigInteger.java"><method name="&lt;init&gt;" desc="(I)V" line="1827"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/math/BigInteger;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigInteger;" line="1833"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$Matches" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="4916"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="4924"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnCollection$AddAll" sourcefilename="FnCollection.java"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="261"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/util/Collection;Lorg/op4j/functions/ExecCtx;)Ljava/util/Collection;" line="268"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$Trim" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="4703"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="4707"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBoolean" sourcefilename="FnBoolean.java"><method name="toBigDecimal" desc="()Lorg/op4j/functions/Function;" line="75"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBigInteger" desc="()Lorg/op4j/functions/Function;" line="87"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDouble" desc="()Lorg/op4j/functions/Function;" line="99"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toFloat" desc="()Lorg/op4j/functions/Function;" line="111"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLong" desc="()Lorg/op4j/functions/Function;" line="123"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toInteger" desc="()Lorg/op4j/functions/Function;" line="135"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toShort" desc="()Lorg/op4j/functions/Function;" line="147"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByte" desc="()Lorg/op4j/functions/Function;" line="159"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="negate" desc="()Lorg/op4j/functions/Function;" line="173"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(Ljava/lang/Boolean;)Lorg/op4j/functions/Function;" line="189"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(Z)Lorg/op4j/functions/Function;" line="203"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notEq" desc="(Ljava/lang/Boolean;)Lorg/op4j/functions/Function;" line="217"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(Z)Lorg/op4j/functions/Function;" line="231"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Boolean;)Lorg/op4j/functions/Function;" line="250"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqBy" desc="(Lorg/op4j/functions/IFunction;Z)Lorg/op4j/functions/Function;" line="266"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Boolean;)Lorg/op4j/functions/Function;" line="283"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqBy" desc="(Lorg/op4j/functions/IFunction;Z)Lorg/op4j/functions/Function;" line="299"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTrue" desc="()Lorg/op4j/functions/Function;" line="313"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFalse" desc="()Lorg/op4j/functions/Function;" line="326"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="and" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="353"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="or" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="369"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="not" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="385"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNull" desc="()Lorg/op4j/functions/Function;" line="401"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotNull" desc="()Lorg/op4j/functions/Function;" line="414"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNullBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="428"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotNullBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="442"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="63" covered="71"/><counter type="LINE" missed="22" covered="15"/><counter type="COMPLEXITY" missed="22" covered="5"/><counter type="METHOD" missed="22" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnLong$Abs" sourcefilename="FnLong.java"><method name="&lt;init&gt;" desc="()V" line="2215"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Long;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Long;" line="2220"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnShort$MinArray" sourcefilename="FnShort.java"><method name="&lt;init&gt;" desc="()V" line="2116"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/lang/Short;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Short;" line="2121"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnShort$Avg" sourcefilename="FnShort.java"><method name="&lt;init&gt;" desc="()V" line="2036"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="2042"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/MathContext;)V" line="2049"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Short;" line="2058"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="85" covered="9"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="22" covered="4"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$ExtractAll" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="5002"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/util/List;" line="5010"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnBigDecimal$Abs" sourcefilename="FnBigDecimal.java"><method name="&lt;init&gt;" desc="()V" line="2637"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/math/BigDecimal;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigDecimal;" line="2642"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnDate$TimeInMillisToDate" sourcefilename="FnDate.java"><method name="&lt;init&gt;" desc="()V" line="1041"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="1041"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Long;Lorg/op4j/functions/ExecCtx;)Ljava/util/Date;" line="1055"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnInteger" sourcefilename="FnInteger.java"><method name="&lt;init&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="()Lorg/op4j/functions/Function;" line="76"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Z)Lorg/op4j/functions/Function;" line="88"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="99"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="110"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/util/Locale;Z)Lorg/op4j/functions/Function;" line="123"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Ljava/lang/String;Z)Lorg/op4j/functions/Function;" line="136"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="()Lorg/op4j/functions/Function;" line="148"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Z)Lorg/op4j/functions/Function;" line="161"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="174"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="187"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/util/Locale;Z)Lorg/op4j/functions/Function;" line="201"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCurrencyStr" desc="(Ljava/lang/String;Z)Lorg/op4j/functions/Function;" line="215"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="()Lorg/op4j/functions/Function;" line="226"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Z)Lorg/op4j/functions/Function;" line="242"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="255"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="268"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/util/Locale;Z)Lorg/op4j/functions/Function;" line="283"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPercentStr" desc="(Ljava/lang/String;Z)Lorg/op4j/functions/Function;" line="298"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(Ljava/lang/Integer;)Lorg/op4j/functions/Function;" line="312"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(I)Lorg/op4j/functions/Function;" line="326"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="341"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(I)Lorg/op4j/functions/Function;" line="356"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(Ljava/lang/Integer;)Lorg/op4j/functions/Function;" line="371"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(I)Lorg/op4j/functions/Function;" line="385"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="400"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(I)Lorg/op4j/functions/Function;" line="415"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="431"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(I)Lorg/op4j/functions/Function;" line="450"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="466"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(I)Lorg/op4j/functions/Function;" line="486"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="502"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(I)Lorg/op4j/functions/Function;" line="523"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="540"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(I)Lorg/op4j/functions/Function;" line="561"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="579"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValueBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="600"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="618"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValueBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="638"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThanBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="658"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqToBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="682"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThanBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="706"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqToBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="730"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNull" desc="()Lorg/op4j/functions/Function;" line="750"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotNull" desc="()Lorg/op4j/functions/Function;" line="763"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="max" desc="()Lorg/op4j/functions/Function;" line="783"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="min" desc="()Lorg/op4j/functions/Function;" line="794"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sum" desc="()Lorg/op4j/functions/Function;" line="805"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avg" desc="()Lorg/op4j/functions/Function;" line="816"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avg" desc="(Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="831"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avg" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="845"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxArray" desc="()Lorg/op4j/functions/Function;" line="856"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minArray" desc="()Lorg/op4j/functions/Function;" line="867"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sumArray" desc="()Lorg/op4j/functions/Function;" line="878"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avgArray" desc="()Lorg/op4j/functions/Function;" line="889"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avgArray" desc="(Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="904"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avgArray" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="918"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="abs" desc="()Lorg/op4j/functions/Function;" line="929"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="941"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(B)Lorg/op4j/functions/Function;" line="953"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(S)Lorg/op4j/functions/Function;" line="965"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(I)Lorg/op4j/functions/Function;" line="977"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(J)Lorg/op4j/functions/Function;" line="989"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(F)Lorg/op4j/functions/Function;" line="1001"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(D)Lorg/op4j/functions/Function;" line="1013"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1026"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(B)Lorg/op4j/functions/Function;" line="1038"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(S)Lorg/op4j/functions/Function;" line="1050"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(I)Lorg/op4j/functions/Function;" line="1062"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(J)Lorg/op4j/functions/Function;" line="1074"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(F)Lorg/op4j/functions/Function;" line="1086"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(D)Lorg/op4j/functions/Function;" line="1098"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1111"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(B)Lorg/op4j/functions/Function;" line="1123"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(S)Lorg/op4j/functions/Function;" line="1135"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(I)Lorg/op4j/functions/Function;" line="1147"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(J)Lorg/op4j/functions/Function;" line="1159"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(F)Lorg/op4j/functions/Function;" line="1171"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(D)Lorg/op4j/functions/Function;" line="1183"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(Ljava/lang/Number;Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="1198"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divideBy" desc="(BLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1212"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(SLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1226"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(ILjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1240"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(JLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1254"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(FLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1268"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(DLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1282"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(Ljava/lang/Number;Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1297"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divideBy" desc="(BLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1311"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(SLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1325"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1339"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divideBy" desc="(JLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1353"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(FLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1367"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divideBy" desc="(DLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1381"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(B)Lorg/op4j/functions/Function;" line="1395"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(S)Lorg/op4j/functions/Function;" line="1409"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(I)Lorg/op4j/functions/Function;" line="1423"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(J)Lorg/op4j/functions/Function;" line="1437"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(Ljava/lang/Byte;)Lorg/op4j/functions/Function;" line="1451"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(Ljava/lang/Short;)Lorg/op4j/functions/Function;" line="1465"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(Ljava/lang/Integer;)Lorg/op4j/functions/Function;" line="1479"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(Ljava/lang/Long;)Lorg/op4j/functions/Function;" line="1493"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="module" desc="(Ljava/math/BigInteger;)Lorg/op4j/functions/Function;" line="1507"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1520"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(B)Lorg/op4j/functions/Function;" line="1533"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(S)Lorg/op4j/functions/Function;" line="1546"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(I)Lorg/op4j/functions/Function;" line="1559"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(J)Lorg/op4j/functions/Function;" line="1572"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(F)Lorg/op4j/functions/Function;" line="1585"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainder" desc="(D)Lorg/op4j/functions/Function;" line="1598"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1610"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplyBy" desc="(B)Lorg/op4j/functions/Function;" line="1622"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(S)Lorg/op4j/functions/Function;" line="1634"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(I)Lorg/op4j/functions/Function;" line="1646"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(J)Lorg/op4j/functions/Function;" line="1658"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(F)Lorg/op4j/functions/Function;" line="1670"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(D)Lorg/op4j/functions/Function;" line="1682"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(Ljava/lang/Number;Ljava/math/MathContext;)Lorg/op4j/functions/Function;" line="1697"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(BLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1711"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(SLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1725"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(ILjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1739"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(JLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1753"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(FLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1767"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(DLjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1781"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(Ljava/lang/Number;Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1795"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(BLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1808"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(SLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1821"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1834"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(JLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1847"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(FLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1860"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplyBy" desc="(DLjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1873"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pow" desc="(I)Lorg/op4j/functions/Function;" line="1886"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pow" desc="(ILjava/math/MathContext;)Lorg/op4j/functions/Function;" line="1900"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pow" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1914"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(Ljava/lang/Number;Ljava/lang/Number;)Lorg/op4j/functions/Function;" line="1931"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(II)Lorg/op4j/functions/Function;" line="1947"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNumber" desc="(Ljava/lang/Number;)Ljava/lang/Integer;" line="1954"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="524" covered="91"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="128" covered="20"/><counter type="COMPLEXITY" missed="127" covered="11"/><counter type="METHOD" missed="126" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnShort$SumArray" sourcefilename="FnShort.java"><method name="&lt;init&gt;" desc="()V" line="2139"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/lang/Short;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Short;" line="2144"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="3"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnObject$GreaterThan" sourcefilename="FnObject.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="2568"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="2576"><counter type="INSTRUCTION" missed="28" covered="24"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="33"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnNumber$ToBoolean" sourcefilename="FnNumber.java"><method name="&lt;init&gt;" desc="()V" line="3364"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Number;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="3370"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$MatchAndExtract" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="5029"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="5038"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnMapOf$Any" sourcefilename="FnMapOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="603"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Map;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="610"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnNumber$ToInteger" sourcefilename="FnNumber.java"><method name="&lt;init&gt;" desc="()V" line="3306"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="3310"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromNumberToNonDecimal" desc="(Ljava/lang/Number;)Ljava/lang/Integer;" line="3315"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnObject$GreaterOrEqualTo" sourcefilename="FnObject.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="2597"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="2605"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnListOf$RemoveAllIndexes" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="([I)V" line="416"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/List;" line="421"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$Contains" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="4939"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="4947"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/AbstractNotNullFunction" sourcefilename="AbstractNotNullFunction.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Object;" line="48"><counter type="INSTRUCTION" missed="16" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnObject" sourcefilename="FnObject.java"><method name="toStr" desc="()Lorg/op4j/functions/Function;" line="68"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStrNullSafe" desc="()Lorg/op4j/functions/Function;" line="81"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intoSingletonArrayOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/Function;" line="95"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intoSingletonListOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/Function;" line="109"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intoSingletonSetOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/Function;" line="123"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eq" desc="(Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="142"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eq" desc="(F)Lorg/op4j/functions/Function;" line="156"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(D)Lorg/op4j/functions/Function;" line="170"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(B)Lorg/op4j/functions/Function;" line="184"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(S)Lorg/op4j/functions/Function;" line="198"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(I)Lorg/op4j/functions/Function;" line="212"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(J)Lorg/op4j/functions/Function;" line="226"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(Z)Lorg/op4j/functions/Function;" line="240"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eqValue" desc="(Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="255"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(F)Lorg/op4j/functions/Function;" line="270"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(D)Lorg/op4j/functions/Function;" line="285"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(B)Lorg/op4j/functions/Function;" line="300"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(S)Lorg/op4j/functions/Function;" line="315"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(I)Lorg/op4j/functions/Function;" line="330"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(J)Lorg/op4j/functions/Function;" line="345"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValue" desc="(Z)Lorg/op4j/functions/Function;" line="360"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="374"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notEq" desc="(F)Lorg/op4j/functions/Function;" line="388"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(D)Lorg/op4j/functions/Function;" line="402"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(B)Lorg/op4j/functions/Function;" line="416"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(S)Lorg/op4j/functions/Function;" line="430"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(I)Lorg/op4j/functions/Function;" line="444"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notEq" desc="(J)Lorg/op4j/functions/Function;" line="458"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(Z)Lorg/op4j/functions/Function;" line="472"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="487"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(F)Lorg/op4j/functions/Function;" line="502"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(D)Lorg/op4j/functions/Function;" line="517"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(B)Lorg/op4j/functions/Function;" line="532"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(S)Lorg/op4j/functions/Function;" line="547"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(I)Lorg/op4j/functions/Function;" line="562"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(J)Lorg/op4j/functions/Function;" line="577"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValue" desc="(Z)Lorg/op4j/functions/Function;" line="592"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="612"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(F)Lorg/op4j/functions/Function;" line="628"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(D)Lorg/op4j/functions/Function;" line="644"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(B)Lorg/op4j/functions/Function;" line="660"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(S)Lorg/op4j/functions/Function;" line="676"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(I)Lorg/op4j/functions/Function;" line="692"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lessThan" desc="(J)Lorg/op4j/functions/Function;" line="708"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="726"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(F)Lorg/op4j/functions/Function;" line="742"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(D)Lorg/op4j/functions/Function;" line="758"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(B)Lorg/op4j/functions/Function;" line="774"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(S)Lorg/op4j/functions/Function;" line="790"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(I)Lorg/op4j/functions/Function;" line="806"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lessOrEqTo" desc="(J)Lorg/op4j/functions/Function;" line="822"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="846"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(F)Lorg/op4j/functions/Function;" line="862"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(D)Lorg/op4j/functions/Function;" line="878"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(B)Lorg/op4j/functions/Function;" line="894"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(S)Lorg/op4j/functions/Function;" line="910"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(I)Lorg/op4j/functions/Function;" line="926"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="greaterThan" desc="(J)Lorg/op4j/functions/Function;" line="942"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="960"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(F)Lorg/op4j/functions/Function;" line="976"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(D)Lorg/op4j/functions/Function;" line="992"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(B)Lorg/op4j/functions/Function;" line="1008"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(S)Lorg/op4j/functions/Function;" line="1024"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(I)Lorg/op4j/functions/Function;" line="1040"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(J)Lorg/op4j/functions/Function;" line="1056"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="1078"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqBy" desc="(Lorg/op4j/functions/IFunction;F)Lorg/op4j/functions/Function;" line="1094"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqBy" desc="(Lorg/op4j/functions/IFunction;D)Lorg/op4j/functions/Function;" line="1110"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqBy" desc="(Lorg/op4j/functions/IFunction;B)Lorg/op4j/functions/Function;" line="1126"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqBy" desc="(Lorg/op4j/functions/IFunction;S)Lorg/op4j/functions/Function;" line="1142"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqBy" desc="(Lorg/op4j/functions/IFunction;I)Lorg/op4j/functions/Function;" line="1158"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqBy" desc="(Lorg/op4j/functions/IFunction;J)Lorg/op4j/functions/Function;" line="1174"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqBy" desc="(Lorg/op4j/functions/IFunction;Z)Lorg/op4j/functions/Function;" line="1190"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValueBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="1208"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValueBy" desc="(Lorg/op4j/functions/IFunction;F)Lorg/op4j/functions/Function;" line="1226"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValueBy" desc="(Lorg/op4j/functions/IFunction;D)Lorg/op4j/functions/Function;" line="1244"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValueBy" desc="(Lorg/op4j/functions/IFunction;B)Lorg/op4j/functions/Function;" line="1262"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValueBy" desc="(Lorg/op4j/functions/IFunction;S)Lorg/op4j/functions/Function;" line="1280"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValueBy" desc="(Lorg/op4j/functions/IFunction;I)Lorg/op4j/functions/Function;" line="1298"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValueBy" desc="(Lorg/op4j/functions/IFunction;J)Lorg/op4j/functions/Function;" line="1316"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqValueBy" desc="(Lorg/op4j/functions/IFunction;Z)Lorg/op4j/functions/Function;" line="1334"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="1350"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqBy" desc="(Lorg/op4j/functions/IFunction;F)Lorg/op4j/functions/Function;" line="1366"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqBy" desc="(Lorg/op4j/functions/IFunction;D)Lorg/op4j/functions/Function;" line="1382"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqBy" desc="(Lorg/op4j/functions/IFunction;B)Lorg/op4j/functions/Function;" line="1398"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqBy" desc="(Lorg/op4j/functions/IFunction;S)Lorg/op4j/functions/Function;" line="1414"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqBy" desc="(Lorg/op4j/functions/IFunction;I)Lorg/op4j/functions/Function;" line="1430"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqBy" desc="(Lorg/op4j/functions/IFunction;J)Lorg/op4j/functions/Function;" line="1446"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqBy" desc="(Lorg/op4j/functions/IFunction;Z)Lorg/op4j/functions/Function;" line="1462"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValueBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="1480"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValueBy" desc="(Lorg/op4j/functions/IFunction;F)Lorg/op4j/functions/Function;" line="1498"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValueBy" desc="(Lorg/op4j/functions/IFunction;D)Lorg/op4j/functions/Function;" line="1516"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValueBy" desc="(Lorg/op4j/functions/IFunction;B)Lorg/op4j/functions/Function;" line="1534"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValueBy" desc="(Lorg/op4j/functions/IFunction;S)Lorg/op4j/functions/Function;" line="1552"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValueBy" desc="(Lorg/op4j/functions/IFunction;I)Lorg/op4j/functions/Function;" line="1570"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValueBy" desc="(Lorg/op4j/functions/IFunction;J)Lorg/op4j/functions/Function;" line="1588"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEqValueBy" desc="(Lorg/op4j/functions/IFunction;Z)Lorg/op4j/functions/Function;" line="1606"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThanBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="1628"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThanBy" desc="(Lorg/op4j/functions/IFunction;F)Lorg/op4j/functions/Function;" line="1645"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThanBy" desc="(Lorg/op4j/functions/IFunction;D)Lorg/op4j/functions/Function;" line="1662"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThanBy" desc="(Lorg/op4j/functions/IFunction;B)Lorg/op4j/functions/Function;" line="1679"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThanBy" desc="(Lorg/op4j/functions/IFunction;S)Lorg/op4j/functions/Function;" line="1696"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThanBy" desc="(Lorg/op4j/functions/IFunction;I)Lorg/op4j/functions/Function;" line="1713"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThanBy" desc="(Lorg/op4j/functions/IFunction;J)Lorg/op4j/functions/Function;" line="1730"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqToBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="1749"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqToBy" desc="(Lorg/op4j/functions/IFunction;F)Lorg/op4j/functions/Function;" line="1766"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqToBy" desc="(Lorg/op4j/functions/IFunction;D)Lorg/op4j/functions/Function;" line="1783"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqToBy" desc="(Lorg/op4j/functions/IFunction;B)Lorg/op4j/functions/Function;" line="1800"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqToBy" desc="(Lorg/op4j/functions/IFunction;S)Lorg/op4j/functions/Function;" line="1817"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqToBy" desc="(Lorg/op4j/functions/IFunction;I)Lorg/op4j/functions/Function;" line="1834"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqToBy" desc="(Lorg/op4j/functions/IFunction;J)Lorg/op4j/functions/Function;" line="1851"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThanBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="1876"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThanBy" desc="(Lorg/op4j/functions/IFunction;F)Lorg/op4j/functions/Function;" line="1893"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThanBy" desc="(Lorg/op4j/functions/IFunction;D)Lorg/op4j/functions/Function;" line="1910"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThanBy" desc="(Lorg/op4j/functions/IFunction;B)Lorg/op4j/functions/Function;" line="1927"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThanBy" desc="(Lorg/op4j/functions/IFunction;S)Lorg/op4j/functions/Function;" line="1944"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThanBy" desc="(Lorg/op4j/functions/IFunction;I)Lorg/op4j/functions/Function;" line="1961"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThanBy" desc="(Lorg/op4j/functions/IFunction;J)Lorg/op4j/functions/Function;" line="1978"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqToBy" desc="(Lorg/op4j/functions/IFunction;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="1997"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqToBy" desc="(Lorg/op4j/functions/IFunction;F)Lorg/op4j/functions/Function;" line="2014"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqToBy" desc="(Lorg/op4j/functions/IFunction;D)Lorg/op4j/functions/Function;" line="2031"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqToBy" desc="(Lorg/op4j/functions/IFunction;B)Lorg/op4j/functions/Function;" line="2048"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqToBy" desc="(Lorg/op4j/functions/IFunction;S)Lorg/op4j/functions/Function;" line="2065"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqToBy" desc="(Lorg/op4j/functions/IFunction;I)Lorg/op4j/functions/Function;" line="2082"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqToBy" desc="(Lorg/op4j/functions/IFunction;J)Lorg/op4j/functions/Function;" line="2099"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNull" desc="()Lorg/op4j/functions/Function;" line="2117"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotNull" desc="()Lorg/op4j/functions/Function;" line="2130"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNullBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="2146"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotNullBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="2160"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="2177"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="between" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="2194"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(FF)Lorg/op4j/functions/Function;" line="2211"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(II)Lorg/op4j/functions/Function;" line="2228"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(BB)Lorg/op4j/functions/Function;" line="2245"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(DD)Lorg/op4j/functions/Function;" line="2262"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(JJ)Lorg/op4j/functions/Function;" line="2279"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(SS)Lorg/op4j/functions/Function;" line="2296"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prepareComparable" desc="(Ljava/lang/Comparable;)Ljava/lang/Comparable;" line="2303"><counter type="INSTRUCTION" missed="12" covered="18"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="690" covered="97"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="128" covered="22"/><counter type="COMPLEXITY" missed="128" covered="15"/><counter type="METHOD" missed="124" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnFloat$Divide" sourcefilename="FnFloat.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Float;)V" line="2145"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Float;Ljava/math/RoundingMode;)V" line="2153"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Float;Ljava/math/MathContext;)V" line="2162"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Float;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Float;" line="2172"><counter type="INSTRUCTION" missed="20" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="53" covered="44"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="15" covered="12"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOf$CoupleAndGroup" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="()V" line="1075"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="1080"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnDouble$Subtract" sourcefilename="FnDouble.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Double;)V" line="2827"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Double;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Double;" line="2835"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOf$ToList" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="()V" line="864"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/util/List;" line="869"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOf$ContainsAny" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="1544"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="1550"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnTuple$ToEnnead" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;)V" line="794"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Lorg/javatuples/Ennead;" line="811"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnCollection$Insert" sourcefilename="FnCollection.java"><method name="&lt;init&gt;" desc="(I[Ljava/lang/Object;)V" line="236"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/util/Collection;Lorg/op4j/functions/ExecCtx;)Ljava/util/Collection;" line="243"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnNumber$RoundBigDecimal" sourcefilename="FnNumber.java"><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;)V" line="3384"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/math/BigDecimal;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigDecimal;" line="3391"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnFloat$Subtract" sourcefilename="FnFloat.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Float;)V" line="2123"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Float;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Float;" line="2131"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBigDecimal$Round" sourcefilename="FnBigDecimal.java"><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="2611"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/MathContext;)V" line="2618"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/math/BigDecimal;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigDecimal;" line="2626"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$ToLowerCase" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="4659"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="4663"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$Replace$ReplaceType" sourcefilename="FnString.java"><method name="&lt;clinit&gt;" desc="()V" line="5087"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnTuple$Contains" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="951"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Lorg/javatuples/Tuple;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="958"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$EscapeHTML" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="4530"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="4534"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnCollection$FlattenCollectionOfArrays" sourcefilename="FnCollection.java"><method name="&lt;init&gt;" desc="()V" line="587"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Collection;Lorg/op4j/functions/ExecCtx;)Ljava/util/Collection;" line="593"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnCalendar" sourcefilename="FnCalendar.java"><method name="add" desc="(II)Lorg/op4j/functions/Function;" line="79"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addDays" desc="(I)Lorg/op4j/functions/Function;" line="93"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addHours" desc="(I)Lorg/op4j/functions/Function;" line="107"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addMilliseconds" desc="(I)Lorg/op4j/functions/Function;" line="121"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addMinutes" desc="(I)Lorg/op4j/functions/Function;" line="135"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addMonths" desc="(I)Lorg/op4j/functions/Function;" line="149"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addWeeks" desc="(I)Lorg/op4j/functions/Function;" line="163"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addYears" desc="(I)Lorg/op4j/functions/Function;" line="177"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(II)Lorg/op4j/functions/Function;" line="195"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDay" desc="(I)Lorg/op4j/functions/Function;" line="209"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setHour" desc="(I)Lorg/op4j/functions/Function;" line="223"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMillisecond" desc="(I)Lorg/op4j/functions/Function;" line="237"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMinute" desc="(I)Lorg/op4j/functions/Function;" line="251"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMonth" desc="(I)Lorg/op4j/functions/Function;" line="265"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setWeek" desc="(I)Lorg/op4j/functions/Function;" line="279"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setYear" desc="(I)Lorg/op4j/functions/Function;" line="293"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="round" desc="(I)Lorg/op4j/functions/Function;" line="310"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="truncate" desc="(I)Lorg/op4j/functions/Function;" line="327"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="before" desc="(Ljava/util/Calendar;)Lorg/op4j/functions/Function;" line="341"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="after" desc="(Ljava/util/Calendar;)Lorg/op4j/functions/Function;" line="355"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toStr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="374"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toStr" desc="(Ljava/lang/String;Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="391"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toStr" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="408"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Lorg/op4j/functions/DateStyle;Lorg/op4j/functions/TimeStyle;)Lorg/op4j/functions/Function;" line="423"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Lorg/op4j/functions/DateStyle;Lorg/op4j/functions/TimeStyle;Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="440"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStr" desc="(Lorg/op4j/functions/DateStyle;Lorg/op4j/functions/TimeStyle;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="457"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="timestampToCalendar" desc="()Lorg/op4j/functions/Function;" line="473"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="timestampToCalendar" desc="(I)Lorg/op4j/functions/Function;" line="486"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="timeInMillisToCalendar" desc="()Lorg/op4j/functions/Function;" line="499"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="timeInMillisToCalendar" desc="(I)Lorg/op4j/functions/Function;" line="512"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fieldIntegerListToCalendar" desc="()Lorg/op4j/functions/Function;" line="541"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fieldIntegerArrayToCalendar" desc="()Lorg/op4j/functions/Function;" line="565"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fieldStringListToCalendar" desc="()Lorg/op4j/functions/Function;" line="589"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fieldStringArrayToCalendar" desc="()Lorg/op4j/functions/Function;" line="613"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eq" desc="(Ljava/util/Calendar;)Lorg/op4j/functions/Function;" line="630"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(Ljava/util/Calendar;)Lorg/op4j/functions/Function;" line="644"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNull" desc="()Lorg/op4j/functions/Function;" line="662"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotNull" desc="()Lorg/op4j/functions/Function;" line="675"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromInts" desc="(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/util/Calendar;" line="1025"><counter type="INSTRUCTION" missed="37" covered="67"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="9" covered="19"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="197" covered="117"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="41" covered="31"/><counter type="COMPLEXITY" missed="35" covered="8"/><counter type="METHOD" missed="32" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnShort$Module" sourcefilename="FnShort.java"><method name="&lt;init&gt;" desc="(Ljava/math/BigInteger;)V" line="2305"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Short;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Short;" line="2311"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOf$Any" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="1118"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="1125"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$SubStringBetween" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6605"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="6611"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="6617"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnLong$Add" sourcefilename="FnLong.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Long;)V" line="2229"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Long;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Long;" line="2236"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnMapOf$ExtractKeys" sourcefilename="FnMapOf.java"><method name="&lt;init&gt;" desc="()V" line="565"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Map;Lorg/op4j/functions/ExecCtx;)Ljava/util/Set;" line="570"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArrayOf$Sort" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="()V" line="312"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="317"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doSort" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="323"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnInteger$AvgArray" sourcefilename="FnInteger.java"><method name="&lt;init&gt;" desc="()V" line="2151"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="2157"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/MathContext;)V" line="2164"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Integer;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Integer;" line="2173"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="90" covered="9"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="21" covered="4"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSet" sourcefilename="FnSet.java"><method name="of" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/FnSetOf;" line="75"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofArrayOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/FnSetOfArrayOf;" line="79"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofListOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/FnSetOfListOf;" line="83"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofSetOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/functions/FnSetOfSetOf;" line="87"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofObject" desc="()Lorg/op4j/functions/FnSetOf;" line="100"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofBigInteger" desc="()Lorg/op4j/functions/FnSetOf;" line="113"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofBigDecimal" desc="()Lorg/op4j/functions/FnSetOf;" line="126"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofBoolean" desc="()Lorg/op4j/functions/FnSetOf;" line="139"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofByte" desc="()Lorg/op4j/functions/FnSetOf;" line="152"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofCharacter" desc="()Lorg/op4j/functions/FnSetOf;" line="165"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofCalendar" desc="()Lorg/op4j/functions/FnSetOf;" line="178"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofDate" desc="()Lorg/op4j/functions/FnSetOf;" line="191"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofDouble" desc="()Lorg/op4j/functions/FnSetOf;" line="204"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofFloat" desc="()Lorg/op4j/functions/FnSetOf;" line="217"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofInteger" desc="()Lorg/op4j/functions/FnSetOf;" line="230"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofLong" desc="()Lorg/op4j/functions/FnSetOf;" line="243"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofShort" desc="()Lorg/op4j/functions/FnSetOf;" line="256"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofString" desc="()Lorg/op4j/functions/FnSetOf;" line="269"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="44" covered="75"/><counter type="LINE" missed="16" covered="16"/><counter type="COMPLEXITY" missed="16" covered="3"/><counter type="METHOD" missed="16" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnDate$ToString" sourcefilename="FnDate.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="853"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/Locale;)V" line="853"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="853"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DateStyle;Lorg/op4j/functions/TimeStyle;)V" line="853"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DateStyle;Lorg/op4j/functions/TimeStyle;Ljava/util/Locale;)V" line="853"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DateStyle;Lorg/op4j/functions/TimeStyle;Ljava/lang/String;)V" line="853"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/util/Date;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="922"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromDate" desc="(Ljava/util/Date;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;" line="933"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromDate" desc="(Ljava/util/Date;Lorg/op4j/functions/DateStyle;Lorg/op4j/functions/TimeStyle;Ljava/util/Locale;)Ljava/lang/String;" line="947"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="290" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="65" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArrayOfSetOf" sourcefilename="FnArrayOfSetOf.java"><method name="flattenSets" desc="()Lorg/op4j/functions/Function;" line="45"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;)V" line="52"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArrayOf$ToMap" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="1133"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="1140"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnInteger$Divide" sourcefilename="FnInteger.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;)V" line="2257"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;Ljava/math/RoundingMode;)V" line="2265"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;Ljava/math/MathContext;)V" line="2274"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Integer;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Integer;" line="2284"><counter type="INSTRUCTION" missed="9" covered="37"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="73"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="7" covered="20"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnObject$IntoSingletonSet" sourcefilename="FnObject.java"><method name="&lt;init&gt;" desc="()V" line="2402"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/util/Set;" line="2406"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$UnescapeCSV" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="4488"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="4492"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOf$ContainsNone" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="1573"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="1579"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnListOf$ZipValuesBy" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="642"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="649"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnCollection$RemoveAllNullOrFalse" sourcefilename="FnCollection.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="558"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Collection;Lorg/op4j/functions/ExecCtx;)Ljava/util/Collection;" line="565"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$Capitalize" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="4688"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="4692"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnStringAuxNumberConverters$ToBigDecimal" sourcefilename="FnStringAuxNumberConverters.java"><method name="&lt;init&gt;" desc="()V" line="497"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DecimalPoint;)V" line="501"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="505"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;Lorg/op4j/functions/DecimalPoint;)V" line="509"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;Ljava/util/Locale;)V" line="513"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;Ljava/lang/String;)V" line="517"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;)V" line="521"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="525"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNumber" desc="(Ljava/lang/Number;)Ljava/math/BigDecimal;" line="531"><counter type="INSTRUCTION" missed="13" covered="13"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="25"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="13" covered="10"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOf$RemoveAllEqual" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="613"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="619"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$SubStringBeforeLast" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6562"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="6567"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnInteger$Multiply" sourcefilename="FnInteger.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;)V" line="2337"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;Ljava/math/RoundingMode;)V" line="2345"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;Ljava/math/MathContext;)V" line="2354"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Integer;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Integer;" line="2364"><counter type="INSTRUCTION" missed="24" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="60" covered="38"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="16" covered="11"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBoolean$Or" sourcefilename="FnBoolean.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)V" line="572"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="581"><counter type="INSTRUCTION" missed="26" covered="14"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="7" covered="4"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="29"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="7" covered="10"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOf$AddAll" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="399"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/List;" line="404"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBigInteger$Avg" sourcefilename="FnBigInteger.java"><method name="&lt;init&gt;" desc="()V" line="1508"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="1514"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/MathContext;)V" line="1521"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigInteger;" line="1530"><counter type="INSTRUCTION" missed="28" covered="42"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="40" covered="63"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="8" covered="18"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnDouble$Avg" sourcefilename="FnDouble.java"><method name="&lt;init&gt;" desc="()V" line="2595"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="2601"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/MathContext;)V" line="2608"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Double;" line="2617"><counter type="INSTRUCTION" missed="10" covered="50"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="71"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="6" covered="20"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnCollection$RemoveAllEqual" sourcefilename="FnCollection.java"><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="316"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Collection;Lorg/op4j/functions/ExecCtx;)Ljava/util/Collection;" line="322"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnListOf$RemoveAllTrue" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="448"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/List;" line="453"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOf$RemoveAllNullOrTrue" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="522"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/Set;" line="527"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnMapOf$SortEntries" sourcefilename="FnMapOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="218"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Map;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="224"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnMapOf$ContainsAnyKeys" sourcefilename="FnMapOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="738"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Map;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="744"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnCollection$RemoveAllIndexes" sourcefilename="FnCollection.java"><method name="&lt;init&gt;" desc="([I)V" line="286"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/util/Collection;Lorg/op4j/functions/ExecCtx;)Ljava/util/Collection;" line="292"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$JoinArray" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="5200"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="5205"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="5211"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="6"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnDate$FieldStringArrayToCalendar" sourcefilename="FnDate.java"><method name="&lt;init&gt;" desc="()V" line="1241"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="([Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/util/Date;" line="1247"><counter type="INSTRUCTION" missed="98" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="101" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnFloat$Abs" sourcefilename="FnFloat.java"><method name="&lt;init&gt;" desc="()V" line="2090"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Float;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Float;" line="2095"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnMapOf$PutAll" sourcefilename="FnMapOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="409"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/util/Map;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="415"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOf$ToArray" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;)V" line="557"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="565"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnMapOf$InsertAll" sourcefilename="FnMapOf.java"><method name="&lt;init&gt;" desc="(ILjava/util/Map;)V" line="432"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Map;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="439"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnCalendar$TimestampToCalendar" sourcefilename="FnCalendar.java"><method name="&lt;init&gt;" desc="()V" line="957"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="957"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/sql/Timestamp;Lorg/op4j/functions/ExecCtx;)Ljava/util/Calendar;" line="971"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="6"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnObject$ToStringNullSafe" sourcefilename="FnObject.java"><method name="&lt;init&gt;" desc="()V" line="2347"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="2352"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOf$ZipValuesBy" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="622"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="629"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnStringAuxNumberConverters$ToFloat" sourcefilename="FnStringAuxNumberConverters.java"><method name="&lt;init&gt;" desc="()V" line="613"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DecimalPoint;)V" line="617"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="621"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;Lorg/op4j/functions/DecimalPoint;)V" line="625"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;Ljava/util/Locale;)V" line="629"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;Ljava/lang/String;)V" line="633"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;)V" line="637"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="641"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNumber" desc="(Ljava/lang/Number;)Ljava/lang/Float;" line="646"><counter type="INSTRUCTION" missed="11" covered="55"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="609"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="42" covered="69"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="13" covered="15"/><counter type="COMPLEXITY" missed="11" covered="6"/><counter type="METHOD" missed="6" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOfArrayOf" sourcefilename="FnListOfArrayOf.java"><method name="flattenArrays" desc="()Lorg/op4j/functions/Function;" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;)V" line="49"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnTuple$ToSeptet" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;)V" line="677"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Lorg/javatuples/Septet;" line="692"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnSetOf$ContainsAny" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="1221"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="1227"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnObject$NotEqualValue" sourcefilename="FnObject.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="2485"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="2493"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnMapOf$SortByKey" sourcefilename="FnMapOf.java"><method name="&lt;init&gt;" desc="()V" line="189"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/util/Map;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="194"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doSort" desc="(Ljava/util/Map;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="200"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOf$ZipAndGroupValues" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="933"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="939"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="947"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnNumber$RoundFloat" sourcefilename="FnNumber.java"><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;)V" line="3422"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Float;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Float;" line="3429"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$IsValidBigInteger" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="5706"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="5712"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="5718"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="5724"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="5730"><counter type="INSTRUCTION" missed="16" covered="44"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="36" covered="62"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="13" covered="19"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$CanBeDouble" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="5765"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="5771"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="5777"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DecimalPoint;)V" line="5783"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="5789"><counter type="INSTRUCTION" missed="21" covered="30"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="8" covered="8"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="40" covered="48"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="16" covered="16"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOf$Sort" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="()V" line="295"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/Set;" line="300"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOf$RemoveAllNotNullAndFalse" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="528"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/List;" line="533"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnListOf$ToArray" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;)V" line="577"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="585"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBigInteger$Remainder" sourcefilename="FnBigInteger.java"><method name="&lt;init&gt;" desc="(Ljava/math/BigInteger;)V" line="1794"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/math/BigInteger;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigInteger;" line="1800"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnCalendar$Round" sourcefilename="FnCalendar.java"><method name="&lt;init&gt;" desc="(I)V" line="760"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Calendar;Lorg/op4j/functions/ExecCtx;)Ljava/util/Calendar;" line="766"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnFunc$IfThenElse" sourcefilename="FnFunc.java"><method name="&lt;init&gt;" desc="(ZLorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)V" line="568"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Object;" line="580"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnBigDecimal$MinArray" sourcefilename="FnBigDecimal.java"><method name="&lt;init&gt;" desc="()V" line="2503"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/math/BigDecimal;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigDecimal;" line="2508"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBigInteger$Max" sourcefilename="FnBigInteger.java"><method name="&lt;init&gt;" desc="()V" line="1441"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigInteger;" line="1446"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOfListOf" sourcefilename="FnSetOfListOf.java"><method name="flattenLists" desc="()Lorg/op4j/functions/Function;" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;)V" line="51"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/AbstractNullAsNullFunction" sourcefilename="AbstractNullAsNullFunction.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Object;" line="48"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnObject$IsNull" sourcefilename="FnObject.java"><method name="&lt;init&gt;" desc="()V" line="2628"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="2632"><counter type="INSTRUCTION" missed="2" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnShort$Multiply" sourcefilename="FnShort.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Short;)V" line="2339"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Short;Ljava/math/RoundingMode;)V" line="2347"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Short;Ljava/math/MathContext;)V" line="2356"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Short;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Short;" line="2366"><counter type="INSTRUCTION" missed="24" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="60" covered="38"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="16" covered="11"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOf$SortBy" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="330"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/List;" line="335"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnObject$IntoSingletonArray" sourcefilename="FnObject.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;)V" line="2364"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="2371"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnFloat$SumArray" sourcefilename="FnFloat.java"><method name="&lt;init&gt;" desc="()V" line="2017"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/lang/Float;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Float;" line="2022"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="3"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOf$Contains" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="1488"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="1494"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnCalendar$Roll" sourcefilename="FnCalendar.java"><method name="&lt;init&gt;" desc="(II)V" line="717"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Calendar;Lorg/op4j/functions/ExecCtx;)Ljava/util/Calendar;" line="724"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnObject$NotEquals" sourcefilename="FnObject.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="2441"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="2446"><counter type="INSTRUCTION" missed="8" covered="12"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="18"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnCollection$FlattenCollectionOfCollections" sourcefilename="FnCollection.java"><method name="&lt;init&gt;" desc="()V" line="610"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Collection;Lorg/op4j/functions/ExecCtx;)Ljava/util/Collection;" line="616"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/TimeStyle$1" sourcefilename="TimeStyle.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="33"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnCollection" sourcefilename="FnCollection.java"/><class name="org/op4j/functions/TimeStyle$2" sourcefilename="TimeStyle.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="39"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="42"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$IsValidByte" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="6408"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="6414"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6420"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="6426"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="6432"><counter type="INSTRUCTION" missed="32" covered="63"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="8" covered="16"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="6404"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="52" covered="88"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="16" covered="26"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/TimeStyle$3" sourcefilename="TimeStyle.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="45"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="48"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/TimeStyle$4" sourcefilename="TimeStyle.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="51"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="54"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnCalendar$Set" sourcefilename="FnCalendar.java"><method name="&lt;init&gt;" desc="(II)V" line="739"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Calendar;Lorg/op4j/functions/ExecCtx;)Ljava/util/Calendar;" line="746"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/DecimalPoint" sourcefilename="DecimalPoint.java"><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOfListOf$FlattenLists" sourcefilename="FnListOfListOf.java"><method name="&lt;init&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/List;" line="65"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnNumber$ToShort" sourcefilename="FnNumber.java"><method name="&lt;init&gt;" desc="()V" line="3325"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="3329"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNumberToNonDecimal" desc="(Ljava/lang/Number;)Ljava/lang/Short;" line="3334"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="7"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnFloat$Avg" sourcefilename="FnFloat.java"><method name="&lt;init&gt;" desc="()V" line="1915"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="1921"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/MathContext;)V" line="1928"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Float;" line="1937"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="85" covered="9"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="22" covered="4"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOf$Insert" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(I[Ljava/lang/Object;)V" line="539"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="546"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnDouble$SumArray" sourcefilename="FnDouble.java"><method name="&lt;init&gt;" desc="()V" line="2693"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/lang/Double;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Double;" line="2698"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="3"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnDate$After" sourcefilename="FnDate.java"><method name="&lt;init&gt;" desc="(Ljava/util/Date;)V" line="837"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Date;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="844"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnSetOf$RemoveAllIndexes" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="([I)V" line="394"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/Set;" line="399"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$UnescapeHTML" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="4545"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="4549"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOf" sourcefilename="FnSetOf.java"><method name="sort" desc="()Lorg/op4j/functions/Function;" line="57"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sort" desc="(Ljava/util/Comparator;)Lorg/op4j/functions/Function;" line="61"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sortBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="65"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="72"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(I[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="76"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Ljava/util/Collection;)Lorg/op4j/functions/Function;" line="80"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllIndexes" desc="([I)Lorg/op4j/functions/Function;" line="84"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllEqual" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="88"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="92"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="96"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexesNot" desc="([I)Lorg/op4j/functions/Function;" line="100"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllNull" desc="()Lorg/op4j/functions/Function;" line="104"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="108"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="112"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="116"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="120"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="()Lorg/op4j/functions/Function;" line="126"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toList" desc="()Lorg/op4j/functions/Function;" line="130"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="134"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="138"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeys" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="142"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValues" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="146"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysFrom" desc="(Ljava/util/Collection;)Lorg/op4j/functions/Function;" line="150"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesFrom" desc="(Ljava/util/Collection;)Lorg/op4j/functions/Function;" line="154"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysFrom" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="158"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesFrom" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="162"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="166"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="170"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toGroupMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="174"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toGroupMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="178"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="couple" desc="()Lorg/op4j/functions/Function;" line="182"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeysBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="186"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="190"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeys" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="194"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValues" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="198"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeysFrom" desc="(Ljava/util/Collection;)Lorg/op4j/functions/Function;" line="202"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesFrom" desc="(Ljava/util/Collection;)Lorg/op4j/functions/Function;" line="206"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeysFrom" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="210"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesFrom" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="214"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="coupleAndGroup" desc="()Lorg/op4j/functions/Function;" line="223"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="all" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="230"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="any" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="234"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="count" desc="()Lorg/op4j/functions/Function;" line="242"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="249"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notContains" desc="(Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="253"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsAll" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="257"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsAny" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="261"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsNone" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="265"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverse" desc="()Lorg/op4j/functions/Function;" line="273"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;)V" line="285"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFromMapOfList" desc="(Lorg/javaruntype/type/Type;Ljava/util/Map;)Ljava/util/Map;" line="799"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="245" covered="50"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="48" covered="12"/><counter type="COMPLEXITY" missed="42" covered="10"/><counter type="METHOD" missed="41" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$SplitAsArray" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="5154"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="5159"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/String;" line="5165"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="6"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnInteger$Remainder" sourcefilename="FnInteger.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;)V" line="2319"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Integer;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Integer;" line="2325"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$SubStringBefore" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6548"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="6553"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnSetOf$Add" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="343"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/Set;" line="348"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBigDecimal$AvgArray" sourcefilename="FnBigDecimal.java"><method name="&lt;init&gt;" desc="()V" line="2547"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="2553"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/MathContext;)V" line="2560"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/math/BigDecimal;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigDecimal;" line="2569"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="81" covered="9"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="21" covered="4"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnLong$Subtract" sourcefilename="FnLong.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Long;)V" line="2248"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Long;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Long;" line="2256"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBoolean$Not" sourcefilename="FnBoolean.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="616"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="622"><counter type="INSTRUCTION" missed="7" covered="14"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOf$ZipValues" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="984"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="990"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="997"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="80" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnCalendar$Add" sourcefilename="FnCalendar.java"><method name="&lt;init&gt;" desc="(II)V" line="696"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Calendar;Lorg/op4j/functions/ExecCtx;)Ljava/util/Calendar;" line="703"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnFunc$IfThen" sourcefilename="FnFunc.java"><method name="&lt;init&gt;" desc="(ZLorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)V" line="530"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Object;" line="540"><counter type="INSTRUCTION" missed="7" covered="20"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="38"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOf$AddAll" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="377"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/Set;" line="382"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOf$RemoveAllIndexes" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="([I)V" line="585"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="591"><counter type="INSTRUCTION" missed="4" covered="34"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="41"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString" sourcefilename="FnString.java"><method name="toBigDecimal" desc="()Lorg/op4j/functions/Function;" line="145"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBigDecimal" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="159"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBigDecimal" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="174"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBigDecimal" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="189"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBigDecimal" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="205"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBigDecimal" desc="(ILjava/math/RoundingMode;Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="222"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBigDecimal" desc="(ILjava/math/RoundingMode;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="240"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBigDecimal" desc="(ILjava/math/RoundingMode;Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="258"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBigInteger" desc="()Lorg/op4j/functions/Function;" line="271"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBigInteger" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="286"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBigInteger" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="302"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBigInteger" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="318"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBigInteger" desc="(I)Lorg/op4j/functions/Function;" line="333"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBigInteger" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="349"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBigInteger" desc="(Ljava/math/RoundingMode;Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="367"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBigInteger" desc="(Ljava/math/RoundingMode;Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="384"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBigInteger" desc="(Ljava/math/RoundingMode;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="402"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDouble" desc="()Lorg/op4j/functions/Function;" line="417"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDouble" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="433"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDouble" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="449"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDouble" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="465"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDouble" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="483"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDouble" desc="(ILjava/math/RoundingMode;Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="501"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDouble" desc="(ILjava/math/RoundingMode;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="521"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDouble" desc="(ILjava/math/RoundingMode;Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="540"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toFloat" desc="()Lorg/op4j/functions/Function;" line="555"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toFloat" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="570"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toFloat" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="586"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toFloat" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="602"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toFloat" desc="(ILjava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="620"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toFloat" desc="(ILjava/math/RoundingMode;Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="639"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toFloat" desc="(ILjava/math/RoundingMode;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="658"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toFloat" desc="(ILjava/math/RoundingMode;Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="677"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLong" desc="()Lorg/op4j/functions/Function;" line="691"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toLong" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="707"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLong" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="724"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLong" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="740"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLong" desc="(I)Lorg/op4j/functions/Function;" line="755"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLong" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="772"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLong" desc="(Ljava/math/RoundingMode;Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="790"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLong" desc="(Ljava/math/RoundingMode;Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="807"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLong" desc="(Ljava/math/RoundingMode;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="826"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toInteger" desc="()Lorg/op4j/functions/Function;" line="840"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toInteger" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="856"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toInteger" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="873"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toInteger" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="889"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toInteger" desc="(I)Lorg/op4j/functions/Function;" line="904"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toInteger" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="921"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toInteger" desc="(Ljava/math/RoundingMode;Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="939"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toInteger" desc="(Ljava/math/RoundingMode;Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="956"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toInteger" desc="(Ljava/math/RoundingMode;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="975"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toShort" desc="()Lorg/op4j/functions/Function;" line="989"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toShort" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="1005"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toShort" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="1022"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toShort" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="1038"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toShort" desc="(I)Lorg/op4j/functions/Function;" line="1053"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toShort" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1070"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toShort" desc="(Ljava/math/RoundingMode;Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="1088"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toShort" desc="(Ljava/math/RoundingMode;Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="1105"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toShort" desc="(Ljava/math/RoundingMode;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="1124"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByte" desc="()Lorg/op4j/functions/Function;" line="1139"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByte" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="1155"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByte" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="1172"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByte" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="1188"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByte" desc="(I)Lorg/op4j/functions/Function;" line="1202"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByte" desc="(Ljava/math/RoundingMode;)Lorg/op4j/functions/Function;" line="1219"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByte" desc="(Ljava/math/RoundingMode;Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="1237"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByte" desc="(Ljava/math/RoundingMode;Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="1254"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByte" desc="(Ljava/math/RoundingMode;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="1273"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBoolean" desc="()Lorg/op4j/functions/Function;" line="1292"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="escapeCSV" desc="()Lorg/op4j/functions/Function;" line="1317"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unescapeCSV" desc="()Lorg/op4j/functions/Function;" line="1342"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="escapeXML" desc="()Lorg/op4j/functions/Function;" line="1366"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unescapeXML" desc="()Lorg/op4j/functions/Function;" line="1390"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="escapeHTML" desc="()Lorg/op4j/functions/Function;" line="1413"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unescapeHTML" desc="()Lorg/op4j/functions/Function;" line="1438"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="escapeJavaScript" desc="()Lorg/op4j/functions/Function;" line="1467"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unescapeJavaScript" desc="()Lorg/op4j/functions/Function;" line="1488"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toHexadecimal" desc="(Ljava/nio/charset/Charset;)Lorg/op4j/functions/Function;" line="1503"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromHexadecimal" desc="(Ljava/nio/charset/Charset;)Lorg/op4j/functions/Function;" line="1517"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toUpperCase" desc="()Lorg/op4j/functions/Function;" line="1529"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toLowerCase" desc="()Lorg/op4j/functions/Function;" line="1540"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unCapitalize" desc="()Lorg/op4j/functions/Function;" line="1552"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="capitalize" desc="()Lorg/op4j/functions/Function;" line="1564"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="trim" desc="()Lorg/op4j/functions/Function;" line="1576"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="strip" desc="()Lorg/op4j/functions/Function;" line="1588"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCalendar" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="1607"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCalendar" desc="(Ljava/lang/String;Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="1627"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCalendar" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="1646"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCalendar" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="1663"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toCalendar" desc="(Ljava/lang/String;Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="1681"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCalendar" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="1699"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDate" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="1719"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDate" desc="(Ljava/lang/String;Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="1737"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDate" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="1755"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eq" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="1770"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notEq" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="1784"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNull" desc="()Lorg/op4j/functions/Function;" line="1798"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotNull" desc="()Lorg/op4j/functions/Function;" line="1810"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessThan" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="1828"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lessOrEqTo" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="1844"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="1860"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterOrEqTo" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="1876"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matches" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="1897"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="1914"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractFirst" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="1934"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractLast" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="1951"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractAll" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="1968"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchAndExtract" desc="(Ljava/lang/String;I)Lorg/op4j/functions/Function;" line="1986"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchAndExtractAll" desc="(Ljava/lang/String;[I)Lorg/op4j/functions/Function;" line="2004"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceFirst" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="2023"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceLast" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="2041"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceAll" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="2059"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="split" desc="()Lorg/op4j/functions/Function;" line="2071"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="split" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="2086"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="splitAsArray" desc="()Lorg/op4j/functions/Function;" line="2098"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="splitAsArray" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="2113"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="join" desc="()Lorg/op4j/functions/Function;" line="2126"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="join" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="2139"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinArray" desc="()Lorg/op4j/functions/Function;" line="2152"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinArray" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="2164"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asciify" desc="()Lorg/op4j/functions/Function;" line="2182"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asciify" desc="(Lorg/op4j/functions/FnString$AsciifyMode;)Lorg/op4j/functions/Function;" line="2236"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAlpha" desc="()Lorg/op4j/functions/Function;" line="2248"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAlphaSpace" desc="()Lorg/op4j/functions/Function;" line="2260"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNumeric" desc="()Lorg/op4j/functions/Function;" line="2271"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNumericSpace" desc="()Lorg/op4j/functions/Function;" line="2283"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeBigDecimal" desc="()Lorg/op4j/functions/Function;" line="2300"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeBigDecimal" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="2317"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeBigDecimal" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="2334"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeBigDecimal" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="2352"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBigDecimal" desc="()Lorg/op4j/functions/Function;" line="2371"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBigDecimal" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="2390"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBigDecimal" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="2409"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBigDecimal" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="2429"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigDecimal" desc="()Lorg/op4j/functions/Function;" line="2447"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidBigDecimal" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="2466"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidBigDecimal" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="2485"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigDecimal" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="2505"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeBigInteger" desc="()Lorg/op4j/functions/Function;" line="2521"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeBigInteger" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="2538"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeBigInteger" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="2555"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeBigInteger" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="2573"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeBigInteger" desc="(I)Lorg/op4j/functions/Function;" line="2590"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBigInteger" desc="()Lorg/op4j/functions/Function;" line="2609"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBigInteger" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="2628"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBigInteger" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="2647"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBigInteger" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="2667"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBigInteger" desc="(I)Lorg/op4j/functions/Function;" line="2686"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigInteger" desc="()Lorg/op4j/functions/Function;" line="2703"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidBigInteger" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="2721"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidBigInteger" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="2739"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidBigInteger" desc="(I)Lorg/op4j/functions/Function;" line="2757"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeDouble" desc="()Lorg/op4j/functions/Function;" line="2774"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeDouble" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="2792"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeDouble" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="2810"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeDouble" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="2829"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDouble" desc="()Lorg/op4j/functions/Function;" line="2848"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDouble" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="2868"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDouble" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="2888"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDouble" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="2909"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDouble" desc="()Lorg/op4j/functions/Function;" line="2928"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidDouble" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="2948"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidDouble" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="2968"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidDouble" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="2989"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeFloat" desc="()Lorg/op4j/functions/Function;" line="3006"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeFloat" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="3024"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeFloat" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="3042"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeFloat" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="3061"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFloat" desc="()Lorg/op4j/functions/Function;" line="3080"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFloat" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="3100"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFloat" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="3120"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFloat" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="3141"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidFloat" desc="()Lorg/op4j/functions/Function;" line="3160"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidFloat" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="3180"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidFloat" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="3200"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidFloat" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="3220"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeLong" desc="()Lorg/op4j/functions/Function;" line="3237"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeLong" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="3255"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeLong" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="3273"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeLong" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="3292"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeLong" desc="(I)Lorg/op4j/functions/Function;" line="3310"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLong" desc="()Lorg/op4j/functions/Function;" line="3329"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLong" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="3349"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLong" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="3369"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLong" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="3390"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLong" desc="(I)Lorg/op4j/functions/Function;" line="3410"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidLong" desc="()Lorg/op4j/functions/Function;" line="3426"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidLong" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="3444"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidLong" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="3462"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidLong" desc="(I)Lorg/op4j/functions/Function;" line="3481"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeInteger" desc="()Lorg/op4j/functions/Function;" line="3498"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeInteger" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="3516"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeInteger" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="3534"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeInteger" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="3553"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeInteger" desc="(I)Lorg/op4j/functions/Function;" line="3571"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInteger" desc="()Lorg/op4j/functions/Function;" line="3590"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInteger" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="3610"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInteger" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="3630"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInteger" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="3651"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInteger" desc="(I)Lorg/op4j/functions/Function;" line="3671"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidInteger" desc="()Lorg/op4j/functions/Function;" line="3687"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidInteger" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="3705"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidInteger" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="3723"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidInteger" desc="(I)Lorg/op4j/functions/Function;" line="3742"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeShort" desc="()Lorg/op4j/functions/Function;" line="3759"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeShort" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="3777"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeShort" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="3795"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeShort" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="3814"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeShort" desc="(I)Lorg/op4j/functions/Function;" line="3832"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isShort" desc="()Lorg/op4j/functions/Function;" line="3852"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isShort" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="3872"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isShort" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="3892"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isShort" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="3913"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isShort" desc="(I)Lorg/op4j/functions/Function;" line="3933"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidShort" desc="()Lorg/op4j/functions/Function;" line="3949"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidShort" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="3967"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidShort" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="3985"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidShort" desc="(I)Lorg/op4j/functions/Function;" line="4004"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeByte" desc="()Lorg/op4j/functions/Function;" line="4021"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeByte" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="4039"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeByte" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="4057"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeByte" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="4076"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeByte" desc="(I)Lorg/op4j/functions/Function;" line="4094"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isByte" desc="()Lorg/op4j/functions/Function;" line="4114"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isByte" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="4135"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isByte" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="4156"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isByte" desc="(Lorg/op4j/functions/DecimalPoint;)Lorg/op4j/functions/Function;" line="4178"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isByte" desc="(I)Lorg/op4j/functions/Function;" line="4199"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidByte" desc="()Lorg/op4j/functions/Function;" line="4215"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidByte" desc="(Ljava/util/Locale;)Lorg/op4j/functions/Function;" line="4233"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidByte" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="4251"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidByte" desc="(I)Lorg/op4j/functions/Function;" line="4270"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startsWith" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="4284"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startsWith" desc="(Ljava/lang/String;I)Lorg/op4j/functions/Function;" line="4298"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endsWith" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="4311"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="substring" desc="(I)Lorg/op4j/functions/Function;" line="4325"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="substring" desc="(II)Lorg/op4j/functions/Function;" line="4341"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="substringBefore" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="4355"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="substringBeforeLast" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="4369"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="substringAfter" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="4383"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="substringAfterLast" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="4397"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="substringBetween" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="4410"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="substringBetween" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="4424"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Lorg/op4j/functions/Function;" line="4437"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBlank" desc="()Lorg/op4j/functions/Function;" line="4450"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverse" desc="()Lorg/op4j/functions/Function;" line="4461"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="71"><counter type="INSTRUCTION" missed="0" covered="195"/><counter type="LINE" missed="0" covered="48"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="968" covered="328"/><counter type="LINE" missed="210" covered="85"/><counter type="COMPLEXITY" missed="210" covered="38"/><counter type="METHOD" missed="210" covered="38"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnStringAuxNumberConverters" sourcefilename="FnStringAuxNumberConverters.java"/><class name="org/op4j/functions/FnCollection$SortBy$OrderableElement" sourcefilename="FnCollection.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Comparable;)V" line="147"><counter type="INSTRUCTION" missed="5" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElement" desc="()Ljava/lang/Object;" line="156"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComparator" desc="()Ljava/lang/Comparable;" line="160"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareTo" desc="(Lorg/op4j/functions/FnCollection$SortBy$OrderableElement;)I" line="165"><counter type="INSTRUCTION" missed="5" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="173"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="183"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="27"/><counter type="BRANCH" missed="10" covered="2"/><counter type="LINE" missed="15" covered="9"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$IsAlpha" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="5526"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Z)V" line="5531"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="5536"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="12"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnStringAuxNumberConverters$ToNonDecimalNumber" sourcefilename="FnStringAuxNumberConverters.java"><method name="&lt;init&gt;" desc="()V" line="222"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="222"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="222"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DecimalPoint;)V" line="222"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;)V" line="222"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="222"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;Ljava/util/Locale;)V" line="222"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;Ljava/lang/String;)V" line="222"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;Lorg/op4j/functions/DecimalPoint;)V" line="222"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberExecute" desc="(Ljava/lang/String;)Ljava/lang/Number;" line="298"><counter type="INSTRUCTION" missed="78" covered="15"/><counter type="BRANCH" missed="6" covered="1"/><counter type="LINE" missed="13" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromNumber" desc="(Ljava/lang/Number;Ljava/math/RoundingMode;)Ljava/lang/Number;" line="335"><counter type="INSTRUCTION" missed="16" covered="18"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromString" desc="(Ljava/lang/String;Ljava/math/RoundingMode;)Ljava/lang/Number;" line="350"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="288" covered="93"/><counter type="BRANCH" missed="9" covered="2"/><counter type="LINE" missed="48" covered="22"/><counter type="COMPLEXITY" missed="14" covered="5"/><counter type="METHOD" missed="7" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnTuple$Size" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="()V" line="931"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Lorg/javatuples/Tuple;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Integer;" line="937"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnCollection$RemoveAllNotNullAndTrue" sourcefilename="FnCollection.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="455"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Collection;Lorg/op4j/functions/ExecCtx;)Ljava/util/Collection;" line="462"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$IsBlank" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="6638"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="6642"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOf$ZipAndGroupValuesBy" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;)V" line="1266"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="1276"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArrayOf" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sort" desc="()Lorg/op4j/functions/Function;" line="66"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sort" desc="(Ljava/util/Comparator;)Lorg/op4j/functions/Function;" line="71"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sortBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="75"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distinct" desc="()Lorg/op4j/functions/Function;" line="80"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="84"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(I[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="88"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Ljava/util/Collection;)Lorg/op4j/functions/Function;" line="92"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexes" desc="([I)Lorg/op4j/functions/Function;" line="96"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllEqual" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="100"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="104"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="108"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexesNot" desc="([I)Lorg/op4j/functions/Function;" line="112"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNull" desc="()Lorg/op4j/functions/Function;" line="116"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="120"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="124"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="128"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="132"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toList" desc="()Lorg/op4j/functions/Function;" line="138"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSet" desc="()Lorg/op4j/functions/Function;" line="142"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zipKeysBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="146"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="150"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeys" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="154"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValues" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="158"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysFrom" desc="(Ljava/util/Collection;)Lorg/op4j/functions/Function;" line="162"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesFrom" desc="(Ljava/util/Collection;)Lorg/op4j/functions/Function;" line="166"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysFrom" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="170"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesFrom" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="174"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="178"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="182"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toGroupMapOf" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="186"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toGroupMapOf" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="190"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="couple" desc="()Lorg/op4j/functions/Function;" line="194"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeysBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="198"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesBy" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="202"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeys" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="206"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zipAndGroupValues" desc="(Lorg/javaruntype/type/Type;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="210"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zipAndGroupKeysFrom" desc="(Ljava/util/Collection;)Lorg/op4j/functions/Function;" line="214"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesFrom" desc="(Lorg/javaruntype/type/Type;Ljava/util/Collection;)Lorg/op4j/functions/Function;" line="218"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeysFrom" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="222"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesFrom" desc="(Lorg/javaruntype/type/Type;[Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="226"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="coupleAndGroup" desc="()Lorg/op4j/functions/Function;" line="233"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="all" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="244"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="any" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/functions/Function;" line="248"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="count" desc="()Lorg/op4j/functions/Function;" line="255"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="262"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notContains" desc="(Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="266"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsAll" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="270"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsAny" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="274"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsNone" desc="([Ljava/lang/Object;)Lorg/op4j/functions/Function;" line="278"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverse" desc="()Lorg/op4j/functions/Function;" line="285"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromList" desc="(Ljava/lang/Class;Ljava/util/List;)[Ljava/lang/Object;" line="301"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFromMapOfList" desc="(Lorg/javaruntype/type/Type;Ljava/util/Map;)Ljava/util/Map;" line="1211"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="210" covered="122"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="39" covered="25"/><counter type="COMPLEXITY" missed="39" covered="15"/><counter type="METHOD" missed="39" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOf$RemoveAllNotNullAndFalse" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="775"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="782"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnCalendar$FieldIntegerListToCalendar" sourcefilename="FnCalendar.java"><method name="&lt;init&gt;" desc="()V" line="1071"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/util/Calendar;" line="1077"><counter type="INSTRUCTION" missed="42" covered="56"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="42" covered="59"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="5" covered="13"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$ToHexadecimal" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="(Ljava/nio/charset/Charset;)V" line="4587"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="4596"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnNumber$ToString" sourcefilename="FnNumber.java"><method name="&lt;init&gt;" desc="()V" line="3451"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/FnNumber$ToString$NumberFormatType;Z)V" line="3456"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Z)V" line="3463"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="3469"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/FnNumber$ToString$NumberFormatType;Ljava/util/Locale;)V" line="3477"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/FnNumber$ToString$NumberFormatType;Ljava/lang/String;)V" line="3485"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/FnNumber$ToString$NumberFormatType;Ljava/util/Locale;Z)V" line="3493"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/FnNumber$ToString$NumberFormatType;Ljava/lang/String;Z)V" line="3502"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;Z)V" line="3511"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="3520"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Z)V" line="3528"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/FnNumber$ToString$NumberFormatType;)V" line="3537"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/FnNumber$ToString$NumberFormatType;IIIIZ)V" line="3544"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/FnNumber$ToString$NumberFormatType;IIIIZCCZ)V" line="3554"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/FnNumber$ToString$NumberFormatType;Ljava/util/Locale;IIIIZ)V" line="3565"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/FnNumber$ToString$NumberFormatType;Ljava/util/Locale;IIIIZCZ)V" line="3577"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/FnNumber$ToString$NumberFormatType;Ljava/util/Locale;IIIIZCCZ)V" line="3590"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/FnNumber$ToString$NumberFormatType;Ljava/lang/String;IIIIZ)V" line="3603"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/FnNumber$ToString$NumberFormatType;Ljava/lang/String;IIIIZCZ)V" line="3615"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/FnNumber$ToString$NumberFormatType;Ljava/lang/String;IIIIZCCZ)V" line="3628"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Number;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="3642"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNumberFormat" desc="(Lorg/op4j/functions/FnNumber$ToString$NumberFormatType;Ljava/util/Locale;)Ljava/text/NumberFormat;" line="3646"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMinAndMaxDigits" desc="(IIII)V" line="3667"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDecimalSeparator" desc="(CZ)V" line="3675"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setGroupingSeparator" desc="(C)Z" line="3690"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setGroupingUsed" desc="(Z)V" line="3703"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNumber" desc="(Ljava/lang/Number;)Ljava/lang/String;" line="3707"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="473" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="140" covered="0"/><counter type="COMPLEXITY" missed="36" covered="0"/><counter type="METHOD" missed="27" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnLong$MinArray" sourcefilename="FnLong.java"><method name="&lt;init&gt;" desc="()V" line="2114"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/lang/Long;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Long;" line="2119"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBigDecimal$SumArray" sourcefilename="FnBigDecimal.java"><method name="&lt;init&gt;" desc="()V" line="2526"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/math/BigDecimal;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigDecimal;" line="2531"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="3"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnCalendar$Before" sourcefilename="FnCalendar.java"><method name="&lt;init&gt;" desc="(Ljava/util/Calendar;)V" line="799"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Calendar;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="806"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnListOf$RemoveAllEqual" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="432"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/List;" line="437"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnCollection$SortBy" sourcefilename="FnCollection.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="115"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/util/Collection;Lorg/op4j/functions/ExecCtx;)Ljava/util/Collection;" line="122"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOf$RemoveAllNull" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="()V" line="474"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/Set;" line="479"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOf$ToMapByKeyValueFunctions" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)V" line="1162"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="1171"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnTuple$GetKey" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="()V" line="1176"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Lorg/javatuples/valueintf/IValueKey;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Object;" line="1182"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/Get" sourcefilename="Get.java"><method name="attrOfObject" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="66"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="obj" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="81"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attrOf" desc="(Lorg/javaruntype/type/Type;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="100"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="obj" desc="(Lorg/javaruntype/type/Type;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="116"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attrOfBigInteger" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="132"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bigInteger" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="148"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attrOfBigDecimal" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="163"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bigDecimal" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="178"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attrOfBoolean" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="193"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bool" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="208"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attrOfByte" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="223"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="b" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="238"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attrOfCharacter" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="253"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="c" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="268"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attrOfCalendar" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="283"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calendar" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="298"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attrOfDate" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="313"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="date" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="328"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attrOfDouble" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="343"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="d" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="358"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attrOfFloat" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="373"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="f" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="388"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attrOfInteger" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="403"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="418"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="attrOfLong" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="433"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="l" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="448"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attrOfShort" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="463"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shr" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="478"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attrOfString" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="493"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="s" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="508"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attrOfListOfString" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="523"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listOfString" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="538"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attrOfSetOfString" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="553"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOfString" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="568"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attrOfArrayOfString" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="583"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayOfString" desc="(Ljava/lang/String;)Lorg/op4j/functions/Function;" line="598"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attrOfListOf" desc="(Lorg/javaruntype/type/Type;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="617"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listOf" desc="(Lorg/javaruntype/type/Type;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="632"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attrOfSetOf" desc="(Lorg/javaruntype/type/Type;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="651"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOf" desc="(Lorg/javaruntype/type/Type;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="666"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attrOfArrayOf" desc="(Lorg/javaruntype/type/Type;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="685"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayOf" desc="(Lorg/javaruntype/type/Type;Ljava/lang/String;)Lorg/op4j/functions/Function;" line="700"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;Ljava/lang/String;)V" line="709"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Object;" line="720"><counter type="INSTRUCTION" missed="18" covered="38"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="205" covered="59"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="42" covered="13"/><counter type="COMPLEXITY" missed="44" covered="4"/><counter type="METHOD" missed="40" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnTuple$ToPair" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;)V" line="405"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Lorg/javatuples/Pair;" line="415"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnShort$AvgArray" sourcefilename="FnShort.java"><method name="&lt;init&gt;" desc="()V" line="2160"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="2166"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/MathContext;)V" line="2173"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Short;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Short;" line="2182"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="90" covered="9"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="21" covered="4"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOf$ToSet" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="()V" line="879"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/util/Set;" line="884"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOf$SortByComparator" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="336"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="347"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnMapOf$ExtractValues" sourcefilename="FnMapOf.java"><method name="&lt;init&gt;" desc="()V" line="580"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Map;Lorg/op4j/functions/ExecCtx;)Ljava/util/List;" line="585"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnObject$IntoSingletonList" sourcefilename="FnObject.java"><method name="&lt;init&gt;" desc="()V" line="2386"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/util/List;" line="2390"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnObject$LessThan" sourcefilename="FnObject.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="2510"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="2518"><counter type="INSTRUCTION" missed="27" covered="25"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="34"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnNumber$ToString$NumberFormatType" sourcefilename="FnNumber.java"><method name="&lt;clinit&gt;" desc="()V" line="3710"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$IsValidInteger" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="6110"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="6116"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6122"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="6128"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="6134"><counter type="INSTRUCTION" missed="32" covered="63"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="8" covered="16"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="6106"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="52" covered="88"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="16" covered="26"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnStringAuxNumberConverters$ToBigInteger" sourcefilename="FnStringAuxNumberConverters.java"><method name="&lt;init&gt;" desc="()V" line="673"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DecimalPoint;)V" line="677"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;)V" line="681"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="685"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;Lorg/op4j/functions/DecimalPoint;)V" line="689"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;Ljava/util/Locale;)V" line="693"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;Ljava/lang/String;)V" line="697"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="701"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="705"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNumber" desc="(Ljava/lang/Number;)Ljava/math/BigInteger;" line="710"><counter type="INSTRUCTION" missed="27" covered="10"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromString" desc="(Ljava/lang/String;I)Ljava/math/BigInteger;" line="727"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="68" covered="13"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="23" covered="5"/><counter type="COMPLEXITY" missed="13" covered="2"/><counter type="METHOD" missed="9" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnLong$Divide" sourcefilename="FnLong.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Long;)V" line="2270"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Long;Ljava/math/RoundingMode;)V" line="2278"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Long;Ljava/math/MathContext;)V" line="2287"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Long;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Long;" line="2297"><counter type="INSTRUCTION" missed="18" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="51" covered="42"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="15" covered="12"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnListOf$ToMapByKeyValueFunctions" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)V" line="767"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="776"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnFunc$Chain" sourcefilename="FnFunc.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)V" line="503"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Object;" line="512"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBigInteger$MaxArray" sourcefilename="FnBigInteger.java"><method name="&lt;init&gt;" desc="()V" line="1560"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/math/BigInteger;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigInteger;" line="1565"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnTuple$ToSextet" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;)V" line="626"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Lorg/javatuples/Sextet;" line="640"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnMapOf$RemoveAllKeysNot" sourcefilename="FnMapOf.java"><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="542"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Map;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="548"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnBigDecimal$Avg" sourcefilename="FnBigDecimal.java"><method name="&lt;init&gt;" desc="()V" line="2431"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="2437"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/MathContext;)V" line="2444"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/Iterable;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigDecimal;" line="2453"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="76" covered="9"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="22" covered="4"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$IsEmpty" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="6627"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="6631"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOf$Distinct" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="()V" line="453"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="460"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnLong$Remainder" sourcefilename="FnLong.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Long;)V" line="2332"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/Long;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Long;" line="2338"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnLong$SumArray" sourcefilename="FnLong.java"><method name="&lt;init&gt;" desc="()V" line="2137"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/lang/Long;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Long;" line="2142"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="3"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOf$ContainsAll" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="1191"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="1197"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnStringAuxNumberConverters$ToByte" sourcefilename="FnStringAuxNumberConverters.java"><method name="&lt;init&gt;" desc="()V" line="966"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DecimalPoint;)V" line="970"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;)V" line="974"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="978"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;Lorg/op4j/functions/DecimalPoint;)V" line="982"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;Ljava/util/Locale;)V" line="986"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;Ljava/lang/String;)V" line="990"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="994"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="998"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNumber" desc="(Ljava/lang/Number;)Ljava/lang/Byte;" line="1003"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromString" desc="(Ljava/lang/String;I)Ljava/lang/Byte;" line="1028"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="962"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="103" covered="10"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="27" covered="4"/><counter type="COMPLEXITY" missed="17" covered="2"/><counter type="METHOD" missed="10" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$CanBeLong" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="5882"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="5889"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="5896"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DecimalPoint;)V" line="5903"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="5910"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="5917"><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="118" covered="12"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="41" covered="5"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOf$RemoveAllTrue" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;)V" line="426"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/Set;" line="431"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnSetOf$Insert" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(I[Ljava/lang/Object;)V" line="360"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromList" desc="(Ljava/util/List;)Ljava/util/Set;" line="365"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/IFunction" sourcefilename="IFunction.java"/><class name="org/op4j/functions/FnBigDecimal$Subtract" sourcefilename="FnBigDecimal.java"><method name="&lt;init&gt;" desc="(Ljava/math/BigDecimal;)V" line="2670"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/math/BigDecimal;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigDecimal;" line="2678"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnInteger$MinArray" sourcefilename="FnInteger.java"><method name="&lt;init&gt;" desc="()V" line="2107"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/lang/Integer;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Integer;" line="2112"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnTuple$ToTriplet" sourcefilename="FnTuple.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;Lorg/op4j/functions/Function;)V" line="502"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Lorg/javatuples/Triplet;" line="513"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$CanBeFloat" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="5823"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="5829"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="5835"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/DecimalPoint;)V" line="5841"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="5847"><counter type="INSTRUCTION" missed="21" covered="30"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="8" covered="8"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="40" covered="48"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="16" covered="16"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$Asciify" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/FnString$AsciifyMode;)V" line="5472"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="5477"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/String;" line="5486"><counter type="INSTRUCTION" missed="87" covered="19"/><counter type="BRANCH" missed="16" covered="2"/><counter type="LINE" missed="19" covered="6"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="5239"><counter type="INSTRUCTION" missed="0" covered="1137"/><counter type="LINE" missed="0" covered="226"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="87" covered="1166"/><counter type="BRANCH" missed="16" covered="2"/><counter type="LINE" missed="19" covered="237"/><counter type="COMPLEXITY" missed="9" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnSetOf$ZipAndGroupKeys" sourcefilename="FnSetOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="889"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="895"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Set;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="903"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnDate$Truncate" sourcefilename="FnDate.java"><method name="&lt;init&gt;" desc="(I)V" line="799"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/Date;Lorg/op4j/functions/ExecCtx;)Ljava/util/Date;" line="805"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnListOf$ZipValues" sourcefilename="FnListOf.java"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="700"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="706"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="(Ljava/util/List;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="713"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnInteger$SumArray" sourcefilename="FnInteger.java"><method name="&lt;init&gt;" desc="()V" line="2130"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNullExecute" desc="([Ljava/lang/Integer;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Integer;" line="2135"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="3"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOf$ToGroupMapByKeyValueFunctions" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)V" line="1344"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/util/Map;" line="1356"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="78" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/Function" sourcefilename="Function.java"><method name="&lt;init&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="73"><counter type="INSTRUCTION" missed="9" covered="8"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="11"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnArrayOfListOf$FlattenLists" sourcefilename="FnArrayOfListOf.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;)V" line="65"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/util/List;Lorg/op4j/functions/ExecCtx;)[Ljava/lang/Object;" line="74"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnArrayOf$Count" sourcefilename="FnArrayOf.java"><method name="&lt;init&gt;" desc="()V" line="1628"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNullExecute" desc="([Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Integer;" line="1633"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/functions/FnString$IsValidShort" sourcefilename="FnString.java"><method name="&lt;init&gt;" desc="()V" line="6259"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Locale;)V" line="6265"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6271"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="6277"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/String;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Boolean;" line="6283"><counter type="INSTRUCTION" missed="32" covered="63"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="8" covered="16"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="6255"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="52" covered="88"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="16" covered="26"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/ExpressionFunction" sourcefilename="ExpressionFunction.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;Lorg/op4j/functions/ExecCtx;)Ljava/lang/Object;" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnBigInteger$Module" sourcefilename="FnBigInteger.java"><method name="&lt;init&gt;" desc="(Ljava/math/BigInteger;)V" line="1779"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullAsNullExecute" desc="(Ljava/math/BigInteger;Lorg/op4j/functions/ExecCtx;)Ljava/math/BigInteger;" line="1785"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnNumber$ToBigInteger" sourcefilename="FnNumber.java"><method name="&lt;init&gt;" desc="()V" line="3258"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/RoundingMode;)V" line="3262"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNumberToNonDecimal" desc="(Ljava/lang/Number;)Ljava/math/BigInteger;" line="3268"><counter type="INSTRUCTION" missed="16" covered="21"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="24"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="5" covered="8"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnString$AsciifyMode" sourcefilename="FnString.java"><method name="&lt;clinit&gt;" desc="()V" line="5222"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/functions/FnDate$FieldIntegerArrayToDate" sourcefilename="FnDate.java"><method name="&lt;init&gt;" desc="()V" line="1164"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nullAsNullExecute" desc="([Ljava/lang/Integer;Lorg/op4j/functions/ExecCtx;)Ljava/util/Date;" line="1170"><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Get.java"><line nr="66" mi="6" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="6" ci="0" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="6" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="6" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="0" cb="0"/><line nr="193" mi="6" ci="0" mb="0" cb="0"/><line nr="208" mi="3" ci="0" mb="0" cb="0"/><line nr="223" mi="6" ci="0" mb="0" cb="0"/><line nr="238" mi="3" ci="0" mb="0" cb="0"/><line nr="253" mi="6" ci="0" mb="0" cb="0"/><line nr="268" mi="3" ci="0" mb="0" cb="0"/><line nr="283" mi="6" ci="0" mb="0" cb="0"/><line nr="298" mi="3" ci="0" mb="0" cb="0"/><line nr="313" mi="6" ci="0" mb="0" cb="0"/><line nr="328" mi="3" ci="0" mb="0" cb="0"/><line nr="343" mi="6" ci="0" mb="0" cb="0"/><line nr="358" mi="3" ci="0" mb="0" cb="0"/><line nr="373" mi="6" ci="0" mb="0" cb="0"/><line nr="388" mi="3" ci="0" mb="0" cb="0"/><line nr="403" mi="0" ci="6" mb="0" cb="0"/><line nr="418" mi="0" ci="3" mb="0" cb="0"/><line nr="433" mi="6" ci="0" mb="0" cb="0"/><line nr="448" mi="3" ci="0" mb="0" cb="0"/><line nr="463" mi="6" ci="0" mb="0" cb="0"/><line nr="478" mi="3" ci="0" mb="0" cb="0"/><line nr="493" mi="6" ci="0" mb="0" cb="0"/><line nr="508" mi="3" ci="0" mb="0" cb="0"/><line nr="523" mi="6" ci="0" mb="0" cb="0"/><line nr="538" mi="3" ci="0" mb="0" cb="0"/><line nr="553" mi="6" ci="0" mb="0" cb="0"/><line nr="568" mi="3" ci="0" mb="0" cb="0"/><line nr="583" mi="6" ci="0" mb="0" cb="0"/><line nr="598" mi="3" ci="0" mb="0" cb="0"/><line nr="617" mi="7" ci="0" mb="0" cb="0"/><line nr="632" mi="4" ci="0" mb="0" cb="0"/><line nr="651" mi="7" ci="0" mb="0" cb="0"/><line nr="666" mi="4" ci="0" mb="0" cb="0"/><line nr="685" mi="7" ci="0" mb="0" cb="0"/><line nr="700" mi="4" ci="0" mb="0" cb="0"/><line nr="709" mi="0" ci="2" mb="0" cb="0"/><line nr="710" mi="0" ci="3" mb="0" cb="0"/><line nr="711" mi="0" ci="3" mb="0" cb="0"/><line nr="712" mi="0" ci="3" mb="0" cb="0"/><line nr="713" mi="0" ci="1" mb="0" cb="0"/><line nr="720" mi="0" ci="4" mb="0" cb="0"/><line nr="722" mi="0" ci="16" mb="0" cb="0"/><line nr="723" mi="0" ci="3" mb="0" cb="0"/><line nr="725" mi="0" ci="8" mb="3" cb="3"/><line nr="726" mi="0" ci="5" mb="1" cb="1"/><line nr="727" mi="13" ci="0" mb="0" cb="0"/><line nr="728" mi="5" ci="0" mb="0" cb="0"/><line nr="732" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="205" covered="59"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="42" covered="13"/><counter type="COMPLEXITY" missed="44" covered="4"/><counter type="METHOD" missed="40" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FnList.java"><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="191" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="2" ci="0" mb="0" cb="0"/><line nr="217" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="2" ci="0" mb="0" cb="0"/><line nr="256" mi="2" ci="0" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="37" covered="82"/><counter type="LINE" missed="14" covered="18"/><counter type="COMPLEXITY" missed="14" covered="5"/><counter type="METHOD" missed="14" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FnMapOf.java"><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="6" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="6" ci="0" mb="0" cb="0"/><line nr="154" mi="6" ci="0" mb="0" cb="0"/><line nr="158" mi="6" ci="0" mb="0" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="6" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="9" mb="0" cb="2"/><line nr="204" mi="0" ci="7" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="2" ci="0" mb="0" cb="0"/><line nr="219" mi="3" ci="0" mb="0" cb="0"/><line nr="220" mi="1" ci="0" mb="0" cb="0"/><line nr="224" mi="6" ci="0" mb="0" cb="0"/><line nr="225" mi="4" ci="0" mb="0" cb="0"/><line nr="226" mi="4" ci="0" mb="0" cb="0"/><line nr="227" mi="10" ci="0" mb="2" cb="0"/><line nr="228" mi="7" ci="0" mb="0" cb="0"/><line nr="229" mi="1" ci="0" mb="0" cb="0"/><line nr="230" mi="2" ci="0" mb="0" cb="0"/><line nr="247" mi="2" ci="0" mb="0" cb="0"/><line nr="248" mi="3" ci="0" mb="0" cb="0"/><line nr="249" mi="1" ci="0" mb="0" cb="0"/><line nr="254" mi="4" ci="0" mb="0" cb="0"/><line nr="255" mi="2" ci="0" mb="0" cb="0"/><line nr="256" mi="11" ci="0" mb="2" cb="0"/><line nr="257" mi="12" ci="0" mb="0" cb="0"/><line nr="260" mi="5" ci="0" mb="0" cb="0"/><line nr="261" mi="1" ci="0" mb="0" cb="0"/><line nr="262" mi="2" ci="0" mb="0" cb="0"/><line nr="263" mi="4" ci="0" mb="0" cb="0"/><line nr="264" mi="10" ci="0" mb="2" cb="0"/><line nr="265" mi="11" ci="0" mb="0" cb="0"/><line nr="266" mi="1" ci="0" mb="0" cb="0"/><line nr="267" mi="2" ci="0" mb="0" cb="0"/><line nr="277" mi="2" ci="0" mb="0" cb="0"/><line nr="278" mi="3" ci="0" mb="0" cb="0"/><line nr="279" mi="3" ci="0" mb="0" cb="0"/><line nr="280" mi="3" ci="0" mb="2" cb="0"/><line nr="281" mi="5" ci="0" mb="0" cb="0"/><line nr="283" mi="1" ci="0" mb="0" cb="0"/><line nr="286" mi="3" ci="0" mb="0" cb="0"/><line nr="290" mi="3" ci="0" mb="0" cb="0"/><line nr="295" mi="3" ci="0" mb="2" cb="0"/><line nr="296" mi="5" ci="0" mb="0" cb="0"/><line nr="298" mi="6" ci="0" mb="0" cb="0"/><line nr="303" mi="2" ci="0" mb="0" cb="0"/><line nr="304" mi="2" ci="0" mb="0" cb="0"/><line nr="305" mi="10" ci="0" mb="2" cb="0"/><line nr="306" mi="3" ci="0" mb="0" cb="0"/><line nr="307" mi="2" ci="0" mb="0" cb="0"/><line nr="313" mi="3" ci="0" mb="2" cb="0"/><line nr="314" mi="2" ci="0" mb="0" cb="0"/><line nr="316" mi="2" ci="0" mb="2" cb="0"/><line nr="317" mi="2" ci="0" mb="0" cb="0"/><line nr="319" mi="5" ci="0" mb="2" cb="0"/><line nr="320" mi="2" ci="0" mb="0" cb="0"/><line nr="322" mi="3" ci="0" mb="0" cb="0"/><line nr="323" mi="6" ci="0" mb="0" cb="0"/><line nr="353" mi="0" ci="2" mb="0" cb="0"/><line nr="354" mi="0" ci="3" mb="0" cb="0"/><line nr="355" mi="0" ci="3" mb="0" cb="0"/><line nr="356" mi="0" ci="1" mb="0" cb="0"/><line nr="360" mi="0" ci="5" mb="0" cb="0"/><line nr="361" mi="0" ci="7" mb="0" cb="0"/><line nr="362" mi="0" ci="2" mb="0" cb="0"/><line nr="376" mi="0" ci="2" mb="0" cb="0"/><line nr="377" mi="0" ci="3" mb="0" cb="0"/><line nr="378" mi="0" ci="3" mb="0" cb="0"/><line nr="379" mi="0" ci="3" mb="0" cb="0"/><line nr="380" mi="0" ci="1" mb="0" cb="0"/><line nr="384" mi="0" ci="5" mb="0" cb="0"/><line nr="385" mi="0" ci="2" mb="0" cb="0"/><line nr="386" mi="0" ci="11" mb="0" cb="2"/><line nr="387" mi="0" ci="4" mb="0" cb="2"/><line nr="388" mi="0" ci="7" mb="0" cb="0"/><line nr="390" mi="0" ci="5" mb="1" cb="1"/><line nr="391" mi="7" ci="0" mb="0" cb="0"/><line nr="393" mi="0" ci="1" mb="0" cb="0"/><line nr="394" mi="0" ci="1" mb="0" cb="0"/><line nr="395" mi="0" ci="2" mb="0" cb="0"/><line nr="409" mi="0" ci="2" mb="0" cb="0"/><line nr="410" mi="0" ci="6" mb="0" cb="0"/><line nr="411" mi="0" ci="1" mb="0" cb="0"/><line nr="415" mi="0" ci="5" mb="0" cb="0"/><line nr="416" mi="0" ci="4" mb="0" cb="0"/><line nr="417" mi="0" ci="2" mb="0" cb="0"/><line nr="432" mi="2" ci="0" mb="0" cb="0"/><line nr="433" mi="3" ci="0" mb="0" cb="0"/><line nr="434" mi="6" ci="0" mb="0" cb="0"/><line nr="435" mi="1" ci="0" mb="0" cb="0"/><line nr="439" mi="5" ci="0" mb="0" cb="0"/><line nr="440" mi="2" ci="0" mb="0" cb="0"/><line nr="441" mi="11" ci="0" mb="2" cb="0"/><line nr="442" mi="4" ci="0" mb="2" cb="0"/><line nr="443" mi="12" ci="0" mb="2" cb="0"/><line nr="444" mi="7" ci="0" mb="0" cb="0"/><line nr="445" mi="1" ci="0" mb="0" cb="0"/><line nr="447" mi="5" ci="0" mb="2" cb="0"/><line nr="448" mi="7" ci="0" mb="0" cb="0"/><line nr="450" mi="1" ci="0" mb="0" cb="0"/><line nr="451" mi="1" ci="0" mb="0" cb="0"/><line nr="452" mi="2" ci="0" mb="0" cb="0"/><line nr="466" mi="2" ci="0" mb="0" cb="0"/><line nr="467" mi="4" ci="0" mb="0" cb="0"/><line nr="468" mi="1" ci="0" mb="0" cb="0"/><line nr="472" mi="5" ci="0" mb="0" cb="0"/><line nr="473" mi="10" ci="0" mb="2" cb="0"/><line nr="474" mi="4" ci="0" mb="0" cb="0"/><line nr="475" mi="1" ci="0" mb="0" cb="0"/><line nr="476" mi="2" ci="0" mb="0" cb="0"/><line nr="490" mi="2" ci="0" mb="0" cb="0"/><line nr="491" mi="3" ci="0" mb="0" cb="0"/><line nr="492" mi="1" ci="0" mb="0" cb="0"/><line nr="496" mi="4" ci="0" mb="0" cb="0"/><line nr="497" mi="11" ci="0" mb="2" cb="0"/><line nr="498" mi="8" ci="0" mb="2" cb="0"/><line nr="499" mi="7" ci="0" mb="0" cb="0"/><line nr="501" mi="1" ci="0" mb="0" cb="0"/><line nr="502" mi="2" ci="0" mb="0" cb="0"/><line nr="516" mi="2" ci="0" mb="0" cb="0"/><line nr="517" mi="3" ci="0" mb="0" cb="0"/><line nr="518" mi="1" ci="0" mb="0" cb="0"/><line nr="522" mi="4" ci="0" mb="0" cb="0"/><line nr="523" mi="11" ci="0" mb="2" cb="0"/><line nr="524" mi="8" ci="0" mb="2" cb="0"/><line nr="525" mi="7" ci="0" mb="0" cb="0"/><line nr="527" mi="1" ci="0" mb="0" cb="0"/><line nr="528" mi="2" ci="0" mb="0" cb="0"/><line nr="542" mi="2" ci="0" mb="0" cb="0"/><line nr="543" mi="4" ci="0" mb="0" cb="0"/><line nr="544" mi="1" ci="0" mb="0" cb="0"/><line nr="548" mi="4" ci="0" mb="0" cb="0"/><line nr="549" mi="11" ci="0" mb="2" cb="0"/><line nr="550" mi="6" ci="0" mb="2" cb="0"/><line nr="551" mi="7" ci="0" mb="0" cb="0"/><line nr="553" mi="1" ci="0" mb="0" cb="0"/><line nr="554" mi="2" ci="0" mb="0" cb="0"/><line nr="565" mi="2" ci="0" mb="0" cb="0"/><line nr="566" mi="1" ci="0" mb="0" cb="0"/><line nr="570" mi="6" ci="0" mb="0" cb="0"/><line nr="580" mi="2" ci="0" mb="0" cb="0"/><line nr="581" mi="1" ci="0" mb="0" cb="0"/><line nr="585" mi="6" ci="0" mb="0" cb="0"/><line nr="603" mi="2" ci="0" mb="0" cb="0"/><line nr="604" mi="3" ci="0" mb="0" cb="0"/><line nr="605" mi="1" ci="0" mb="0" cb="0"/><line nr="610" mi="2" ci="0" mb="0" cb="0"/><line nr="611" mi="11" ci="0" mb="2" cb="0"/><line nr="612" mi="6" ci="0" mb="0" cb="0"/><line nr="613" mi="5" ci="0" mb="0" cb="0"/><line nr="614" mi="2" ci="0" mb="2" cb="0"/><line nr="615" mi="5" ci="0" mb="0" cb="0"/><line nr="618" mi="3" ci="0" mb="2" cb="0"/><line nr="619" mi="2" ci="0" mb="0" cb="0"/><line nr="621" mi="1" ci="0" mb="0" cb="0"/><line nr="622" mi="1" ci="0" mb="0" cb="0"/><line nr="623" mi="2" ci="0" mb="0" cb="0"/><line nr="636" mi="2" ci="0" mb="0" cb="0"/><line nr="637" mi="3" ci="0" mb="0" cb="0"/><line nr="638" mi="1" ci="0" mb="0" cb="0"/><line nr="643" mi="2" ci="0" mb="0" cb="0"/><line nr="644" mi="11" ci="0" mb="2" cb="0"/><line nr="645" mi="6" ci="0" mb="0" cb="0"/><line nr="646" mi="5" ci="0" mb="0" cb="0"/><line nr="647" mi="2" ci="0" mb="2" cb="0"/><line nr="648" mi="5" ci="0" mb="0" cb="0"/><line nr="651" mi="3" ci="0" mb="2" cb="0"/><line nr="652" mi="2" ci="0" mb="0" cb="0"/><line nr="654" mi="1" ci="0" mb="0" cb="0"/><line nr="655" mi="1" ci="0" mb="0" cb="0"/><line nr="656" mi="2" ci="0" mb="0" cb="0"/><line nr="682" mi="2" ci="0" mb="0" cb="0"/><line nr="683" mi="3" ci="0" mb="0" cb="0"/><line nr="684" mi="1" ci="0" mb="0" cb="0"/><line nr="688" mi="10" ci="0" mb="2" cb="0"/><line nr="689" mi="2" ci="0" mb="2" cb="0"/><line nr="690" mi="3" ci="0" mb="2" cb="0"/><line nr="691" mi="2" ci="0" mb="0" cb="0"/><line nr="693" mi="5" ci="0" mb="2" cb="0"/><line nr="694" mi="2" ci="0" mb="0" cb="0"/><line nr="696" mi="1" ci="0" mb="0" cb="0"/><line nr="697" mi="2" ci="0" mb="0" cb="0"/><line nr="708" mi="2" ci="0" mb="0" cb="0"/><line nr="709" mi="3" ci="0" mb="0" cb="0"/><line nr="710" mi="1" ci="0" mb="0" cb="0"/><line nr="714" mi="6" ci="0" mb="0" cb="0"/><line nr="715" mi="10" ci="0" mb="2" cb="0"/><line nr="716" mi="10" ci="0" mb="2" cb="0"/><line nr="717" mi="2" ci="0" mb="2" cb="0"/><line nr="718" mi="2" ci="0" mb="2" cb="0"/><line nr="719" mi="5" ci="0" mb="0" cb="0"/><line nr="721" mi="4" ci="0" mb="2" cb="0"/><line nr="722" mi="4" ci="0" mb="0" cb="0"/><line nr="724" mi="1" ci="0" mb="0" cb="0"/><line nr="725" mi="1" ci="0" mb="0" cb="0"/><line nr="726" mi="7" ci="0" mb="2" cb="0"/><line nr="738" mi="2" ci="0" mb="0" cb="0"/><line nr="739" mi="3" ci="0" mb="0" cb="0"/><line nr="740" mi="1" ci="0" mb="0" cb="0"/><line nr="744" mi="10" ci="0" mb="2" cb="0"/><line nr="745" mi="10" ci="0" mb="2" cb="0"/><line nr="746" mi="2" ci="0" mb="2" cb="0"/><line nr="747" mi="2" ci="0" mb="2" cb="0"/><line nr="748" mi="2" ci="0" mb="0" cb="0"/><line nr="750" mi="4" ci="0" mb="2" cb="0"/><line nr="751" mi="2" ci="0" mb="0" cb="0"/><line nr="753" mi="1" ci="0" mb="0" cb="0"/><line nr="754" mi="1" ci="0" mb="0" cb="0"/><line nr="755" mi="2" ci="0" mb="0" cb="0"/><line nr="767" mi="2" ci="0" mb="0" cb="0"/><line nr="768" mi="3" ci="0" mb="0" cb="0"/><line nr="769" mi="1" ci="0" mb="0" cb="0"/><line nr="773" mi="10" ci="0" mb="2" cb="0"/><line nr="774" mi="10" ci="0" mb="2" cb="0"/><line nr="775" mi="2" ci="0" mb="2" cb="0"/><line nr="776" mi="2" ci="0" mb="2" cb="0"/><line nr="777" mi="2" ci="0" mb="0" cb="0"/><line nr="779" mi="4" ci="0" mb="2" cb="0"/><line nr="780" mi="2" ci="0" mb="0" cb="0"/><line nr="782" mi="1" ci="0" mb="0" cb="0"/><line nr="783" mi="1" ci="0" mb="0" cb="0"/><line nr="784" mi="2" ci="0" mb="0" cb="0"/><line nr="795" mi="2" ci="0" mb="0" cb="0"/><line nr="796" mi="1" ci="0" mb="0" cb="0"/><line nr="802" mi="7" ci="0" mb="0" cb="0"/><line nr="803" mi="4" ci="0" mb="2" cb="0"/><line nr="804" mi="5" ci="0" mb="0" cb="0"/><line nr="806" mi="3" ci="0" mb="0" cb="0"/><line nr="807" mi="2" ci="0" mb="0" cb="0"/><line nr="808" mi="11" ci="0" mb="2" cb="0"/><line nr="809" mi="4" ci="0" mb="0" cb="0"/><line nr="810" mi="10" ci="0" mb="0" cb="0"/><line nr="811" mi="8" ci="0" mb="0" cb="0"/><line nr="813" mi="4" ci="0" mb="0" cb="0"/><line nr="814" mi="16" ci="0" mb="2" cb="0"/><line nr="815" mi="3" ci="0" mb="0" cb="0"/><line nr="816" mi="7" ci="0" mb="0" cb="0"/><line nr="818" mi="2" ci="0" mb="0" cb="0"/><line nr="826" mi="0" ci="2" mb="0" cb="0"/><line nr="827" mi="0" ci="1" mb="0" cb="0"/><line nr="831" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="880" covered="171"/><counter type="BRANCH" missed="99" covered="7"/><counter type="LINE" missed="221" covered="48"/><counter type="COMPLEXITY" missed="107" covered="19"/><counter type="METHOD" missed="57" covered="16"/><counter type="CLASS" missed="17" covered="6"/></sourcefile><sourcefile name="FnString.java"><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="5" ci="0" mb="0" cb="0"/><line nr="189" mi="5" ci="0" mb="0" cb="0"/><line nr="205" mi="0" ci="6" mb="0" cb="0"/><line nr="222" mi="7" ci="0" mb="0" cb="0"/><line nr="240" mi="7" ci="0" mb="0" cb="0"/><line nr="258" mi="7" ci="0" mb="0" cb="0"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="286" mi="5" ci="0" mb="0" cb="0"/><line nr="302" mi="5" ci="0" mb="0" cb="0"/><line nr="318" mi="5" ci="0" mb="0" cb="0"/><line nr="333" mi="6" ci="0" mb="0" cb="0"/><line nr="349" mi="5" ci="0" mb="0" cb="0"/><line nr="367" mi="6" ci="0" mb="0" cb="0"/><line nr="384" mi="6" ci="0" mb="0" cb="0"/><line nr="402" mi="6" ci="0" mb="0" cb="0"/><line nr="417" mi="0" ci="2" mb="0" cb="0"/><line nr="433" mi="0" ci="5" mb="0" cb="0"/><line nr="449" mi="5" ci="0" mb="0" cb="0"/><line nr="465" mi="5" ci="0" mb="0" cb="0"/><line nr="483" mi="0" ci="6" mb="0" cb="0"/><line nr="501" mi="7" ci="0" mb="0" cb="0"/><line nr="521" mi="7" ci="0" mb="0" cb="0"/><line nr="540" mi="7" ci="0" mb="0" cb="0"/><line nr="555" mi="0" ci="2" mb="0" cb="0"/><line nr="570" mi="0" ci="5" mb="0" cb="0"/><line nr="586" mi="5" ci="0" mb="0" cb="0"/><line nr="602" mi="5" ci="0" mb="0" cb="0"/><line nr="620" mi="6" ci="0" mb="0" cb="0"/><line nr="639" mi="7" ci="0" mb="0" cb="0"/><line nr="658" mi="7" ci="0" mb="0" cb="0"/><line nr="677" mi="7" ci="0" mb="0" cb="0"/><line nr="691" mi="0" ci="2" mb="0" cb="0"/><line nr="707" mi="5" ci="0" mb="0" cb="0"/><line nr="724" mi="5" ci="0" mb="0" cb="0"/><line nr="740" mi="5" ci="0" mb="0" cb="0"/><line nr="755" mi="6" ci="0" mb="0" cb="0"/><line nr="772" mi="5" ci="0" mb="0" cb="0"/><line nr="790" mi="6" ci="0" mb="0" cb="0"/><line nr="807" mi="6" ci="0" mb="0" cb="0"/><line nr="826" mi="6" ci="0" mb="0" cb="0"/><line nr="840" mi="0" ci="2" mb="0" cb="0"/><line nr="856" mi="5" ci="0" mb="0" cb="0"/><line nr="873" mi="5" ci="0" mb="0" cb="0"/><line nr="889" mi="5" ci="0" mb="0" cb="0"/><line nr="904" mi="6" ci="0" mb="0" cb="0"/><line nr="921" mi="5" ci="0" mb="0" cb="0"/><line nr="939" mi="0" ci="6" mb="0" cb="0"/><line nr="956" mi="6" ci="0" mb="0" cb="0"/><line nr="975" mi="6" ci="0" mb="0" cb="0"/><line nr="989" mi="2" ci="0" mb="0" cb="0"/><line nr="1005" mi="5" ci="0" mb="0" cb="0"/><line nr="1022" mi="5" ci="0" mb="0" cb="0"/><line nr="1038" mi="5" ci="0" mb="0" cb="0"/><line nr="1053" mi="6" ci="0" mb="0" cb="0"/><line nr="1070" mi="5" ci="0" mb="0" cb="0"/><line nr="1088" mi="6" ci="0" mb="0" cb="0"/><line nr="1105" mi="6" ci="0" mb="0" cb="0"/><line nr="1124" mi="6" ci="0" mb="0" cb="0"/><line nr="1139" mi="2" ci="0" mb="0" cb="0"/><line nr="1155" mi="5" ci="0" mb="0" cb="0"/><line nr="1172" mi="5" ci="0" mb="0" cb="0"/><line nr="1188" mi="5" ci="0" mb="0" cb="0"/><line nr="1202" mi="6" ci="0" mb="0" cb="0"/><line nr="1219" mi="5" ci="0" mb="0" cb="0"/><line nr="1237" mi="6" ci="0" mb="0" cb="0"/><line nr="1254" mi="6" ci="0" mb="0" cb="0"/><line nr="1273" mi="6" ci="0" mb="0" cb="0"/><line nr="1292" mi="2" ci="0" mb="0" cb="0"/><line nr="1317" mi="2" ci="0" mb="0" cb="0"/><line nr="1342" mi="2" ci="0" mb="0" cb="0"/><line nr="1366" mi="2" ci="0" mb="0" cb="0"/><line nr="1390" mi="2" ci="0" mb="0" cb="0"/><line nr="1413" mi="0" ci="2" mb="0" cb="0"/><line nr="1438" mi="2" ci="0" mb="0" cb="0"/><line nr="1467" mi="0" ci="2" mb="0" cb="0"/><line nr="1488" mi="2" ci="0" mb="0" cb="0"/><line nr="1503" mi="0" ci="5" mb="0" cb="0"/><line nr="1517" mi="0" ci="5" mb="0" cb="0"/><line nr="1529" mi="0" ci="2" mb="0" cb="0"/><line nr="1540" mi="2" ci="0" mb="0" cb="0"/><line nr="1552" mi="2" ci="0" mb="0" cb="0"/><line nr="1564" mi="2" ci="0" mb="0" cb="0"/><line nr="1576" mi="2" ci="0" mb="0" cb="0"/><line nr="1588" mi="2" ci="0" mb="0" cb="0"/><line nr="1607" mi="5" ci="0" mb="0" cb="0"/><line nr="1627" mi="6" ci="0" mb="0" cb="0"/><line nr="1646" mi="6" ci="0" mb="0" cb="0"/><line nr="1663" mi="0" ci="5" mb="0" cb="0"/><line nr="1681" mi="6" ci="0" mb="0" cb="0"/><line nr="1699" mi="0" ci="6" mb="0" cb="0"/><line nr="1719" mi="5" ci="0" mb="0" cb="0"/><line nr="1737" mi="6" ci="0" mb="0" cb="0"/><line nr="1755" mi="6" ci="0" mb="0" cb="0"/><line nr="1770" mi="3" ci="0" mb="0" cb="0"/><line nr="1784" mi="0" ci="3" mb="0" cb="0"/><line nr="1798" mi="2" ci="0" mb="0" cb="0"/><line nr="1810" mi="2" ci="0" mb="0" cb="0"/><line nr="1828" mi="3" ci="0" mb="0" cb="0"/><line nr="1844" mi="3" ci="0" mb="0" cb="0"/><line nr="1860" mi="3" ci="0" mb="0" cb="0"/><line nr="1876" mi="3" ci="0" mb="0" cb="0"/><line nr="1897" mi="5" ci="0" mb="0" cb="0"/><line nr="1914" mi="5" ci="0" mb="0" cb="0"/><line nr="1934" mi="6" ci="0" mb="0" cb="0"/><line nr="1951" mi="6" ci="0" mb="0" cb="0"/><line nr="1968" mi="5" ci="0" mb="0" cb="0"/><line nr="1986" mi="6" ci="0" mb="0" cb="0"/><line nr="2004" mi="7" ci="0" mb="0" cb="0"/><line nr="2023" mi="7" ci="0" mb="0" cb="0"/><line nr="2041" mi="7" ci="0" mb="0" cb="0"/><line nr="2059" mi="7" ci="0" mb="0" cb="0"/><line nr="2071" mi="2" ci="0" mb="0" cb="0"/><line nr="2086" mi="5" ci="0" mb="0" cb="0"/><line nr="2098" mi="2" ci="0" mb="0" cb="0"/><line nr="2113" mi="5" ci="0" mb="0" cb="0"/><line nr="2126" mi="2" ci="0" mb="0" cb="0"/><line nr="2139" mi="5" ci="0" mb="0" cb="0"/><line nr="2152" mi="2" ci="0" mb="0" cb="0"/><line nr="2164" mi="5" ci="0" mb="0" cb="0"/><line nr="2182" mi="0" ci="2" mb="0" cb="0"/><line nr="2236" mi="5" ci="0" mb="0" cb="0"/><line nr="2248" mi="2" ci="0" mb="0" cb="0"/><line nr="2260" mi="2" ci="0" mb="0" cb="0"/><line nr="2271" mi="2" ci="0" mb="0" cb="0"/><line nr="2283" mi="2" ci="0" mb="0" cb="0"/><line nr="2300" mi="2" ci="0" mb="0" cb="0"/><line nr="2317" mi="5" ci="0" mb="0" cb="0"/><line nr="2334" mi="5" ci="0" mb="0" cb="0"/><line nr="2352" mi="5" ci="0" mb="0" cb="0"/><line nr="2371" mi="2" ci="0" mb="0" cb="0"/><line nr="2390" mi="5" ci="0" mb="0" cb="0"/><line nr="2409" mi="5" ci="0" mb="0" cb="0"/><line nr="2429" mi="5" ci="0" mb="0" cb="0"/><line nr="2447" mi="0" ci="2" mb="0" cb="0"/><line nr="2466" mi="0" ci="5" mb="0" cb="0"/><line nr="2485" mi="5" ci="0" mb="0" cb="0"/><line nr="2505" mi="5" ci="0" mb="0" cb="0"/><line nr="2521" mi="2" ci="0" mb="0" cb="0"/><line nr="2538" mi="5" ci="0" mb="0" cb="0"/><line nr="2555" mi="5" ci="0" mb="0" cb="0"/><line nr="2573" mi="5" ci="0" mb="0" cb="0"/><line nr="2590" mi="5" ci="0" mb="0" cb="0"/><line nr="2609" mi="2" ci="0" mb="0" cb="0"/><line nr="2628" mi="5" ci="0" mb="0" cb="0"/><line nr="2647" mi="5" ci="0" mb="0" cb="0"/><line nr="2667" mi="5" ci="0" mb="0" cb="0"/><line nr="2686" mi="5" ci="0" mb="0" cb="0"/><line nr="2703" mi="0" ci="2" mb="0" cb="0"/><line nr="2721" mi="0" ci="5" mb="0" cb="0"/><line nr="2739" mi="5" ci="0" mb="0" cb="0"/><line nr="2757" mi="5" ci="0" mb="0" cb="0"/><line nr="2774" mi="2" ci="0" mb="0" cb="0"/><line nr="2792" mi="5" ci="0" mb="0" cb="0"/><line nr="2810" mi="5" ci="0" mb="0" cb="0"/><line nr="2829" mi="5" ci="0" mb="0" cb="0"/><line nr="2848" mi="2" ci="0" mb="0" cb="0"/><line nr="2868" mi="5" ci="0" mb="0" cb="0"/><line nr="2888" mi="5" ci="0" mb="0" cb="0"/><line nr="2909" mi="5" ci="0" mb="0" cb="0"/><line nr="2928" mi="0" ci="2" mb="0" cb="0"/><line nr="2948" mi="0" ci="5" mb="0" cb="0"/><line nr="2968" mi="5" ci="0" mb="0" cb="0"/><line nr="2989" mi="5" ci="0" mb="0" cb="0"/><line nr="3006" mi="2" ci="0" mb="0" cb="0"/><line nr="3024" mi="5" ci="0" mb="0" cb="0"/><line nr="3042" mi="5" ci="0" mb="0" cb="0"/><line nr="3061" mi="5" ci="0" mb="0" cb="0"/><line nr="3080" mi="2" ci="0" mb="0" cb="0"/><line nr="3100" mi="5" ci="0" mb="0" cb="0"/><line nr="3120" mi="5" ci="0" mb="0" cb="0"/><line nr="3141" mi="5" ci="0" mb="0" cb="0"/><line nr="3160" mi="0" ci="2" mb="0" cb="0"/><line nr="3180" mi="0" ci="5" mb="0" cb="0"/><line nr="3200" mi="5" ci="0" mb="0" cb="0"/><line nr="3220" mi="5" ci="0" mb="0" cb="0"/><line nr="3237" mi="2" ci="0" mb="0" cb="0"/><line nr="3255" mi="5" ci="0" mb="0" cb="0"/><line nr="3273" mi="5" ci="0" mb="0" cb="0"/><line nr="3292" mi="5" ci="0" mb="0" cb="0"/><line nr="3310" mi="5" ci="0" mb="0" cb="0"/><line nr="3329" mi="2" ci="0" mb="0" cb="0"/><line nr="3349" mi="5" ci="0" mb="0" cb="0"/><line nr="3369" mi="5" ci="0" mb="0" cb="0"/><line nr="3390" mi="5" ci="0" mb="0" cb="0"/><line nr="3410" mi="5" ci="0" mb="0" cb="0"/><line nr="3426" mi="0" ci="2" mb="0" cb="0"/><line nr="3444" mi="0" ci="5" mb="0" cb="0"/><line nr="3462" mi="5" ci="0" mb="0" cb="0"/><line nr="3481" mi="5" ci="0" mb="0" cb="0"/><line nr="3498" mi="2" ci="0" mb="0" cb="0"/><line nr="3516" mi="5" ci="0" mb="0" cb="0"/><line nr="3534" mi="5" ci="0" mb="0" cb="0"/><line nr="3553" mi="5" ci="0" mb="0" cb="0"/><line nr="3571" mi="5" ci="0" mb="0" cb="0"/><line nr="3590" mi="2" ci="0" mb="0" cb="0"/><line nr="3610" mi="5" ci="0" mb="0" cb="0"/><line nr="3630" mi="5" ci="0" mb="0" cb="0"/><line nr="3651" mi="5" ci="0" mb="0" cb="0"/><line nr="3671" mi="5" ci="0" mb="0" cb="0"/><line nr="3687" mi="0" ci="2" mb="0" cb="0"/><line nr="3705" mi="0" ci="5" mb="0" cb="0"/><line nr="3723" mi="5" ci="0" mb="0" cb="0"/><line nr="3742" mi="5" ci="0" mb="0" cb="0"/><line nr="3759" mi="2" ci="0" mb="0" cb="0"/><line nr="3777" mi="5" ci="0" mb="0" cb="0"/><line nr="3795" mi="5" ci="0" mb="0" cb="0"/><line nr="3814" mi="5" ci="0" mb="0" cb="0"/><line nr="3832" mi="5" ci="0" mb="0" cb="0"/><line nr="3852" mi="2" ci="0" mb="0" cb="0"/><line nr="3872" mi="5" ci="0" mb="0" cb="0"/><line nr="3892" mi="5" ci="0" mb="0" cb="0"/><line nr="3913" mi="5" ci="0" mb="0" cb="0"/><line nr="3933" mi="5" ci="0" mb="0" cb="0"/><line nr="3949" mi="0" ci="2" mb="0" cb="0"/><line nr="3967" mi="0" ci="5" mb="0" cb="0"/><line nr="3985" mi="5" ci="0" mb="0" cb="0"/><line nr="4004" mi="5" ci="0" mb="0" cb="0"/><line nr="4021" mi="2" ci="0" mb="0" cb="0"/><line nr="4039" mi="5" ci="0" mb="0" cb="0"/><line nr="4057" mi="5" ci="0" mb="0" cb="0"/><line nr="4076" mi="5" ci="0" mb="0" cb="0"/><line nr="4094" mi="5" ci="0" mb="0" cb="0"/><line nr="4114" mi="2" ci="0" mb="0" cb="0"/><line nr="4135" mi="5" ci="0" mb="0" cb="0"/><line nr="4156" mi="5" ci="0" mb="0" cb="0"/><line nr="4178" mi="5" ci="0" mb="0" cb="0"/><line nr="4199" mi="5" ci="0" mb="0" cb="0"/><line nr="4215" mi="0" ci="2" mb="0" cb="0"/><line nr="4233" mi="0" ci="5" mb="0" cb="0"/><line nr="4251" mi="5" ci="0" mb="0" cb="0"/><line nr="4270" mi="5" ci="0" mb="0" cb="0"/><line nr="4284" mi="5" ci="0" mb="0" cb="0"/><line nr="4298" mi="6" ci="0" mb="0" cb="0"/><line nr="4311" mi="5" ci="0" mb="0" cb="0"/><line nr="4325" mi="5" ci="0" mb="0" cb="0"/><line nr="4341" mi="6" ci="0" mb="0" cb="0"/><line nr="4355" mi="5" ci="0" mb="0" cb="0"/><line nr="4369" mi="5" ci="0" mb="0" cb="0"/><line nr="4383" mi="5" ci="0" mb="0" cb="0"/><line nr="4397" mi="5" ci="0" mb="0" cb="0"/><line nr="4410" mi="5" ci="0" mb="0" cb="0"/><line nr="4424" mi="6" ci="0" mb="0" cb="0"/><line nr="4437" mi="2" ci="0" mb="0" cb="0"/><line nr="4450" mi="2" ci="0" mb="0" cb="0"/><line nr="4461" mi="2" ci="0" mb="0" cb="0"/><line nr="4472" mi="0" ci="2" mb="0" cb="0"/><line nr="4473" mi="0" ci="1" mb="0" cb="0"/><line nr="4476" mi="3" ci="0" mb="0" cb="0"/><line nr="4488" mi="0" ci="2" mb="0" cb="0"/><line nr="4489" mi="0" ci="1" mb="0" cb="0"/><line nr="4492" mi="3" ci="0" mb="0" cb="0"/><line nr="4502" mi="0" ci="2" mb="0" cb="0"/><line nr="4503" mi="0" ci="1" mb="0" cb="0"/><line nr="4506" mi="3" ci="0" mb="0" cb="0"/><line nr="4516" mi="0" ci="2" mb="0" cb="0"/><line nr="4517" mi="0" ci="1" mb="0" cb="0"/><line nr="4520" mi="3" ci="0" mb="0" cb="0"/><line nr="4530" mi="0" ci="2" mb="0" cb="0"/><line nr="4531" mi="0" ci="1" mb="0" cb="0"/><line nr="4534" mi="0" ci="3" mb="0" cb="0"/><line nr="4545" mi="0" ci="2" mb="0" cb="0"/><line nr="4546" mi="0" ci="1" mb="0" cb="0"/><line nr="4549" mi="3" ci="0" mb="0" cb="0"/><line nr="4559" mi="0" ci="2" mb="0" cb="0"/><line nr="4560" mi="0" ci="1" mb="0" cb="0"/><line nr="4563" mi="0" ci="3" mb="0" cb="0"/><line nr="4573" mi="0" ci="2" mb="0" cb="0"/><line nr="4574" mi="0" ci="1" mb="0" cb="0"/><line nr="4577" mi="3" ci="0" mb="0" cb="0"/><line nr="4587" mi="0" ci="3" mb="0" cb="0"/><line nr="4590" mi="0" ci="2" mb="0" cb="0"/><line nr="4591" mi="0" ci="3" mb="0" cb="0"/><line nr="4592" mi="0" ci="1" mb="0" cb="0"/><line nr="4596" mi="0" ci="4" mb="0" cb="0"/><line nr="4598" mi="0" ci="6" mb="0" cb="0"/><line nr="4599" mi="0" ci="4" mb="0" cb="0"/><line nr="4600" mi="0" ci="12" mb="0" cb="2"/><line nr="4601" mi="0" ci="7" mb="0" cb="0"/><line nr="4603" mi="0" ci="3" mb="0" cb="0"/><line nr="4613" mi="0" ci="3" mb="0" cb="0"/><line nr="4616" mi="0" ci="2" mb="0" cb="0"/><line nr="4617" mi="0" ci="3" mb="0" cb="0"/><line nr="4618" mi="0" ci="1" mb="0" cb="0"/><line nr="4622" mi="0" ci="4" mb="0" cb="0"/><line nr="4624" mi="0" ci="4" mb="0" cb="0"/><line nr="4625" mi="0" ci="11" mb="0" cb="2"/><line nr="4626" mi="0" ci="5" mb="0" cb="0"/><line nr="4627" mi="0" ci="10" mb="0" cb="0"/><line nr="4628" mi="0" ci="5" mb="0" cb="0"/><line nr="4630" mi="0" ci="13" mb="0" cb="0"/><line nr="4631" mi="0" ci="2" mb="0" cb="0"/><line nr="4633" mi="0" ci="3" mb="0" cb="0"/><line nr="4644" mi="0" ci="2" mb="0" cb="0"/><line nr="4645" mi="0" ci="1" mb="0" cb="0"/><line nr="4648" mi="0" ci="3" mb="0" cb="0"/><line nr="4659" mi="0" ci="2" mb="0" cb="0"/><line nr="4660" mi="0" ci="1" mb="0" cb="0"/><line nr="4663" mi="3" ci="0" mb="0" cb="0"/><line nr="4674" mi="0" ci="2" mb="0" cb="0"/><line nr="4675" mi="0" ci="1" mb="0" cb="0"/><line nr="4678" mi="3" ci="0" mb="0" cb="0"/><line nr="4688" mi="0" ci="2" mb="0" cb="0"/><line nr="4689" mi="0" ci="1" mb="0" cb="0"/><line nr="4692" mi="3" ci="0" mb="0" cb="0"/><line nr="4703" mi="0" ci="2" mb="0" cb="0"/><line nr="4704" mi="0" ci="1" mb="0" cb="0"/><line nr="4707" mi="3" ci="0" mb="0" cb="0"/><line nr="4718" mi="0" ci="2" mb="0" cb="0"/><line nr="4719" mi="0" ci="1" mb="0" cb="0"/><line nr="4722" mi="3" ci="0" mb="0" cb="0"/><line nr="4732" mi="0" ci="2" mb="0" cb="0"/><line nr="4733" mi="0" ci="1" mb="0" cb="0"/><line nr="4737" mi="3" ci="0" mb="0" cb="0"/><line nr="4753" mi="0" ci="2" mb="0" cb="0"/><line nr="4754" mi="0" ci="3" mb="0" cb="0"/><line nr="4755" mi="0" ci="4" mb="1" cb="1"/><line nr="4756" mi="5" ci="0" mb="0" cb="0"/><line nr="4758" mi="0" ci="4" mb="1" cb="1"/><line nr="4759" mi="5" ci="0" mb="0" cb="0"/><line nr="4761" mi="0" ci="6" mb="0" cb="0"/><line nr="4762" mi="0" ci="1" mb="0" cb="0"/><line nr="4765" mi="2" ci="0" mb="0" cb="0"/><line nr="4766" mi="3" ci="0" mb="0" cb="0"/><line nr="4767" mi="3" ci="0" mb="0" cb="0"/><line nr="4768" mi="7" ci="0" mb="0" cb="0"/><line nr="4769" mi="1" ci="0" mb="0" cb="0"/><line nr="4772" mi="0" ci="2" mb="0" cb="0"/><line nr="4773" mi="0" ci="3" mb="0" cb="0"/><line nr="4774" mi="0" ci="3" mb="0" cb="0"/><line nr="4775" mi="0" ci="8" mb="0" cb="0"/><line nr="4776" mi="0" ci="1" mb="0" cb="0"/><line nr="4784" mi="0" ci="4" mb="0" cb="0"/><line nr="4788" mi="0" ci="5" mb="0" cb="0"/><line nr="4789" mi="0" ci="6" mb="0" cb="0"/><line nr="4790" mi="0" ci="5" mb="1" cb="1"/><line nr="4791" mi="4" ci="0" mb="0" cb="0"/><line nr="4792" mi="3" ci="0" mb="0" cb="0"/><line nr="4794" mi="0" ci="3" mb="0" cb="0"/><line nr="4795" mi="0" ci="2" mb="0" cb="0"/><line nr="4802" mi="9" ci="0" mb="0" cb="0"/><line nr="4803" mi="9" ci="0" mb="0" cb="0"/><line nr="4806" mi="2" ci="0" mb="0" cb="0"/><line nr="4807" mi="3" ci="0" mb="0" cb="0"/><line nr="4808" mi="4" ci="0" mb="2" cb="0"/><line nr="4809" mi="5" ci="0" mb="0" cb="0"/><line nr="4811" mi="4" ci="0" mb="2" cb="0"/><line nr="4812" mi="5" ci="0" mb="0" cb="0"/><line nr="4814" mi="3" ci="0" mb="0" cb="0"/><line nr="4815" mi="1" ci="0" mb="0" cb="0"/><line nr="4818" mi="2" ci="0" mb="0" cb="0"/><line nr="4819" mi="3" ci="0" mb="0" cb="0"/><line nr="4820" mi="3" ci="0" mb="0" cb="0"/><line nr="4821" mi="3" ci="0" mb="0" cb="0"/><line nr="4822" mi="3" ci="0" mb="0" cb="0"/><line nr="4823" mi="1" ci="0" mb="0" cb="0"/><line nr="4826" mi="2" ci="0" mb="0" cb="0"/><line nr="4827" mi="3" ci="0" mb="0" cb="0"/><line nr="4828" mi="3" ci="0" mb="0" cb="0"/><line nr="4829" mi="3" ci="0" mb="0" cb="0"/><line nr="4830" mi="4" ci="0" mb="0" cb="0"/><line nr="4831" mi="1" ci="0" mb="0" cb="0"/><line nr="4836" mi="3" ci="0" mb="2" cb="0"/><line nr="4837" mi="11" ci="0" mb="0" cb="0"/><line nr="4839" mi="8" ci="0" mb="0" cb="0"/><line nr="4841" mi="2" ci="0" mb="0" cb="0"/><line nr="4842" mi="1" ci="0" mb="0" cb="0"/><line nr="4843" mi="2" ci="0" mb="0" cb="0"/><line nr="4857" mi="2" ci="0" mb="0" cb="0"/><line nr="4858" mi="3" ci="0" mb="0" cb="0"/><line nr="4859" mi="4" ci="0" mb="2" cb="0"/><line nr="4860" mi="5" ci="0" mb="0" cb="0"/><line nr="4862" mi="4" ci="0" mb="2" cb="0"/><line nr="4863" mi="5" ci="0" mb="0" cb="0"/><line nr="4865" mi="6" ci="0" mb="0" cb="0"/><line nr="4866" mi="1" ci="0" mb="0" cb="0"/><line nr="4869" mi="2" ci="0" mb="0" cb="0"/><line nr="4870" mi="3" ci="0" mb="0" cb="0"/><line nr="4871" mi="3" ci="0" mb="0" cb="0"/><line nr="4872" mi="7" ci="0" mb="0" cb="0"/><line nr="4873" mi="1" ci="0" mb="0" cb="0"/><line nr="4876" mi="2" ci="0" mb="0" cb="0"/><line nr="4877" mi="3" ci="0" mb="0" cb="0"/><line nr="4878" mi="3" ci="0" mb="0" cb="0"/><line nr="4879" mi="8" ci="0" mb="0" cb="0"/><line nr="4880" mi="1" ci="0" mb="0" cb="0"/><line nr="4888" mi="4" ci="0" mb="0" cb="0"/><line nr="4892" mi="5" ci="0" mb="0" cb="0"/><line nr="4893" mi="6" ci="0" mb="0" cb="0"/><line nr="4894" mi="5" ci="0" mb="2" cb="0"/><line nr="4895" mi="4" ci="0" mb="0" cb="0"/><line nr="4896" mi="3" ci="0" mb="0" cb="0"/><line nr="4898" mi="3" ci="0" mb="0" cb="0"/><line nr="4899" mi="3" ci="0" mb="0" cb="0"/><line nr="4916" mi="2" ci="0" mb="0" cb="0"/><line nr="4917" mi="3" ci="0" mb="0" cb="0"/><line nr="4918" mi="4" ci="0" mb="0" cb="0"/><line nr="4919" mi="1" ci="0" mb="0" cb="0"/><line nr="4924" mi="5" ci="0" mb="0" cb="0"/><line nr="4925" mi="4" ci="0" mb="0" cb="0"/><line nr="4939" mi="2" ci="0" mb="0" cb="0"/><line nr="4940" mi="3" ci="0" mb="0" cb="0"/><line nr="4941" mi="4" ci="0" mb="0" cb="0"/><line nr="4942" mi="1" ci="0" mb="0" cb="0"/><line nr="4947" mi="5" ci="0" mb="0" cb="0"/><line nr="4948" mi="4" ci="0" mb="0" cb="0"/><line nr="4965" mi="2" ci="0" mb="0" cb="0"/><line nr="4966" mi="3" ci="0" mb="0" cb="0"/><line nr="4967" mi="4" ci="0" mb="0" cb="0"/><line nr="4968" mi="3" ci="0" mb="0" cb="0"/><line nr="4969" mi="1" ci="0" mb="0" cb="0"/><line nr="4974" mi="5" ci="0" mb="0" cb="0"/><line nr="4975" mi="3" ci="0" mb="2" cb="0"/><line nr="4976" mi="3" ci="0" mb="2" cb="0"/><line nr="4977" mi="5" ci="0" mb="0" cb="0"/><line nr="4979" mi="3" ci="0" mb="0" cb="0"/><line nr="4981" mi="2" ci="0" mb="0" cb="0"/><line nr="4982" mi="3" ci="0" mb="2" cb="0"/><line nr="4983" mi="4" ci="0" mb="0" cb="0"/><line nr="4985" mi="2" ci="0" mb="2" cb="0"/><line nr="4986" mi="5" ci="0" mb="0" cb="0"/><line nr="4988" mi="2" ci="0" mb="0" cb="0"/><line nr="5002" mi="2" ci="0" mb="0" cb="0"/><line nr="5003" mi="3" ci="0" mb="0" cb="0"/><line nr="5004" mi="4" ci="0" mb="0" cb="0"/><line nr="5005" mi="1" ci="0" mb="0" cb="0"/><line nr="5010" mi="5" ci="0" mb="0" cb="0"/><line nr="5011" mi="4" ci="0" mb="0" cb="0"/><line nr="5012" mi="3" ci="0" mb="2" cb="0"/><line nr="5013" mi="6" ci="0" mb="0" cb="0"/><line nr="5015" mi="3" ci="0" mb="0" cb="0"/><line nr="5029" mi="2" ci="0" mb="0" cb="0"/><line nr="5030" mi="3" ci="0" mb="0" cb="0"/><line nr="5031" mi="4" ci="0" mb="0" cb="0"/><line nr="5032" mi="3" ci="0" mb="0" cb="0"/><line nr="5033" mi="1" ci="0" mb="0" cb="0"/><line nr="5038" mi="5" ci="0" mb="0" cb="0"/><line nr="5039" mi="3" ci="0" mb="2" cb="0"/><line nr="5040" mi="5" ci="0" mb="0" cb="0"/><line nr="5042" mi="5" ci="0" mb="0" cb="0"/><line nr="5058" mi="2" ci="0" mb="0" cb="0"/><line nr="5059" mi="3" ci="0" mb="0" cb="0"/><line nr="5060" mi="3" ci="0" mb="0" cb="0"/><line nr="5061" mi="4" ci="0" mb="0" cb="0"/><line nr="5062" mi="6" ci="0" mb="0" cb="0"/><line nr="5063" mi="1" ci="0" mb="0" cb="0"/><line nr="5068" mi="5" ci="0" mb="0" cb="0"/><line nr="5069" mi="3" ci="0" mb="2" cb="0"/><line nr="5070" mi="5" ci="0" mb="0" cb="0"/><line nr="5072" mi="4" ci="0" mb="0" cb="0"/><line nr="5073" mi="11" ci="0" mb="2" cb="0"/><line nr="5074" mi="7" ci="0" mb="0" cb="0"/><line nr="5075" mi="1" ci="0" mb="0" cb="0"/><line nr="5076" mi="2" ci="0" mb="0" cb="0"/><line nr="5087" mi="34" ci="0" mb="0" cb="0"/><line nr="5095" mi="2" ci="0" mb="0" cb="0"/><line nr="5096" mi="3" ci="0" mb="0" cb="0"/><line nr="5097" mi="4" ci="0" mb="0" cb="0"/><line nr="5098" mi="3" ci="0" mb="0" cb="0"/><line nr="5099" mi="3" ci="0" mb="0" cb="0"/><line nr="5100" mi="1" ci="0" mb="0" cb="0"/><line nr="5105" mi="5" ci="0" mb="0" cb="0"/><line nr="5106" mi="5" ci="0" mb="2" cb="0"/><line nr="5107" mi="5" ci="0" mb="0" cb="0"/><line nr="5109" mi="5" ci="0" mb="2" cb="0"/><line nr="5110" mi="5" ci="0" mb="0" cb="0"/><line nr="5112" mi="2" ci="0" mb="0" cb="0"/><line nr="5113" mi="3" ci="0" mb="2" cb="0"/><line nr="5114" mi="4" ci="0" mb="0" cb="0"/><line nr="5116" mi="3" ci="0" mb="2" cb="0"/><line nr="5117" mi="2" ci="0" mb="0" cb="0"/><line nr="5119" mi="7" ci="0" mb="0" cb="0"/><line nr="5120" mi="6" ci="0" mb="0" cb="0"/><line nr="5121" mi="7" ci="0" mb="0" cb="0"/><line nr="5131" mi="0" ci="2" mb="0" cb="0"/><line nr="5132" mi="0" ci="3" mb="0" cb="0"/><line nr="5133" mi="0" ci="1" mb="0" cb="0"/><line nr="5136" mi="2" ci="0" mb="0" cb="0"/><line nr="5137" mi="3" ci="0" mb="0" cb="0"/><line nr="5138" mi="1" ci="0" mb="0" cb="0"/><line nr="5142" mi="4" ci="0" mb="2" cb="0"/><line nr="5143" mi="6" ci="0" mb="0" cb="0"/><line nr="5145" mi="8" ci="0" mb="0" cb="0"/><line nr="5154" mi="0" ci="2" mb="0" cb="0"/><line nr="5155" mi="0" ci="3" mb="0" cb="0"/><line nr="5156" mi="0" ci="1" mb="0" cb="0"/><line nr="5159" mi="2" ci="0" mb="0" cb="0"/><line nr="5160" mi="3" ci="0" mb="0" cb="0"/><line nr="5161" mi="1" ci="0" mb="0" cb="0"/><line nr="5165" mi="4" ci="0" mb="2" cb="0"/><line nr="5166" mi="3" ci="0" mb="0" cb="0"/><line nr="5168" mi="5" ci="0" mb="0" cb="0"/><line nr="5177" mi="0" ci="2" mb="0" cb="0"/><line nr="5178" mi="0" ci="3" mb="0" cb="0"/><line nr="5179" mi="0" ci="1" mb="0" cb="0"/><line nr="5182" mi="2" ci="0" mb="0" cb="0"/><line nr="5183" mi="3" ci="0" mb="0" cb="0"/><line nr="5184" mi="1" ci="0" mb="0" cb="0"/><line nr="5188" mi="3" ci="0" mb="2" cb="0"/><line nr="5189" mi="6" ci="0" mb="0" cb="0"/><line nr="5191" mi="4" ci="0" mb="0" cb="0"/><line nr="5200" mi="0" ci="2" mb="0" cb="0"/><line nr="5201" mi="0" ci="3" mb="0" cb="0"/><line nr="5202" mi="0" ci="1" mb="0" cb="0"/><line nr="5205" mi="2" ci="0" mb="0" cb="0"/><line nr="5206" mi="3" ci="0" mb="0" cb="0"/><line nr="5207" mi="1" ci="0" mb="0" cb="0"/><line nr="5211" mi="3" ci="0" mb="2" cb="0"/><line nr="5212" mi="5" ci="0" mb="0" cb="0"/><line nr="5214" mi="3" ci="0" mb="0" cb="0"/><line nr="5222" mi="0" ci="24" mb="0" cb="0"/><line nr="5239" mi="0" ci="4" mb="0" cb="0"/><line nr="5241" mi="0" ci="5" mb="0" cb="0"/><line nr="5242" mi="0" ci="5" mb="0" cb="0"/><line nr="5243" mi="0" ci="5" mb="0" cb="0"/><line nr="5244" mi="0" ci="5" mb="0" cb="0"/><line nr="5245" mi="0" ci="5" mb="0" cb="0"/><line nr="5246" mi="0" ci="5" mb="0" cb="0"/><line nr="5247" mi="0" ci="5" mb="0" cb="0"/><line nr="5248" mi="0" ci="5" mb="0" cb="0"/><line nr="5249" mi="0" ci="5" mb="0" cb="0"/><line nr="5250" mi="0" ci="5" mb="0" cb="0"/><line nr="5251" mi="0" ci="5" mb="0" cb="0"/><line nr="5252" mi="0" ci="5" mb="0" cb="0"/><line nr="5253" mi="0" ci="5" mb="0" cb="0"/><line nr="5254" mi="0" ci="5" mb="0" cb="0"/><line nr="5255" mi="0" ci="5" mb="0" cb="0"/><line nr="5256" mi="0" ci="5" mb="0" cb="0"/><line nr="5257" mi="0" ci="5" mb="0" cb="0"/><line nr="5258" mi="0" ci="5" mb="0" cb="0"/><line nr="5259" mi="0" ci="5" mb="0" cb="0"/><line nr="5260" mi="0" ci="5" mb="0" cb="0"/><line nr="5261" mi="0" ci="5" mb="0" cb="0"/><line nr="5262" mi="0" ci="5" mb="0" cb="0"/><line nr="5263" mi="0" ci="5" mb="0" cb="0"/><line nr="5264" mi="0" ci="5" mb="0" cb="0"/><line nr="5265" mi="0" ci="5" mb="0" cb="0"/><line nr="5266" mi="0" ci="5" mb="0" cb="0"/><line nr="5267" mi="0" ci="5" mb="0" cb="0"/><line nr="5268" mi="0" ci="5" mb="0" cb="0"/><line nr="5269" mi="0" ci="5" mb="0" cb="0"/><line nr="5270" mi="0" ci="5" mb="0" cb="0"/><line nr="5271" mi="0" ci="5" mb="0" cb="0"/><line nr="5272" mi="0" ci="5" mb="0" cb="0"/><line nr="5273" mi="0" ci="5" mb="0" cb="0"/><line nr="5274" mi="0" ci="5" mb="0" cb="0"/><line nr="5275" mi="0" ci="5" mb="0" cb="0"/><line nr="5276" mi="0" ci="5" mb="0" cb="0"/><line nr="5277" mi="0" ci="5" mb="0" cb="0"/><line nr="5278" mi="0" ci="5" mb="0" cb="0"/><line nr="5279" mi="0" ci="5" mb="0" cb="0"/><line nr="5280" mi="0" ci="5" mb="0" cb="0"/><line nr="5281" mi="0" ci="5" mb="0" cb="0"/><line nr="5282" mi="0" ci="5" mb="0" cb="0"/><line nr="5283" mi="0" ci="5" mb="0" cb="0"/><line nr="5284" mi="0" ci="5" mb="0" cb="0"/><line nr="5285" mi="0" ci="5" mb="0" cb="0"/><line nr="5286" mi="0" ci="5" mb="0" cb="0"/><line nr="5287" mi="0" ci="5" mb="0" cb="0"/><line nr="5288" mi="0" ci="5" mb="0" cb="0"/><line nr="5289" mi="0" ci="5" mb="0" cb="0"/><line nr="5290" mi="0" ci="5" mb="0" cb="0"/><line nr="5291" mi="0" ci="5" mb="0" cb="0"/><line nr="5292" mi="0" ci="5" mb="0" cb="0"/><line nr="5293" mi="0" ci="5" mb="0" cb="0"/><line nr="5294" mi="0" ci="5" mb="0" cb="0"/><line nr="5295" mi="0" ci="5" mb="0" cb="0"/><line nr="5296" mi="0" ci="5" mb="0" cb="0"/><line nr="5297" mi="0" ci="5" mb="0" cb="0"/><line nr="5298" mi="0" ci="5" mb="0" cb="0"/><line nr="5299" mi="0" ci="5" mb="0" cb="0"/><line nr="5300" mi="0" ci="5" mb="0" cb="0"/><line nr="5301" mi="0" ci="5" mb="0" cb="0"/><line nr="5302" mi="0" ci="5" mb="0" cb="0"/><line nr="5303" mi="0" ci="5" mb="0" cb="0"/><line nr="5304" mi="0" ci="5" mb="0" cb="0"/><line nr="5305" mi="0" ci="5" mb="0" cb="0"/><line nr="5306" mi="0" ci="5" mb="0" cb="0"/><line nr="5307" mi="0" ci="5" mb="0" cb="0"/><line nr="5308" mi="0" ci="5" mb="0" cb="0"/><line nr="5309" mi="0" ci="5" mb="0" cb="0"/><line nr="5310" mi="0" ci="5" mb="0" cb="0"/><line nr="5311" mi="0" ci="5" mb="0" cb="0"/><line nr="5312" mi="0" ci="5" mb="0" cb="0"/><line nr="5313" mi="0" ci="5" mb="0" cb="0"/><line nr="5314" mi="0" ci="5" mb="0" cb="0"/><line nr="5315" mi="0" ci="5" mb="0" cb="0"/><line nr="5316" mi="0" ci="5" mb="0" cb="0"/><line nr="5317" mi="0" ci="5" mb="0" cb="0"/><line nr="5318" mi="0" ci="5" mb="0" cb="0"/><line nr="5319" mi="0" ci="5" mb="0" cb="0"/><line nr="5320" mi="0" ci="5" mb="0" cb="0"/><line nr="5321" mi="0" ci="5" mb="0" cb="0"/><line nr="5322" mi="0" ci="5" mb="0" cb="0"/><line nr="5323" mi="0" ci="5" mb="0" cb="0"/><line nr="5324" mi="0" ci="5" mb="0" cb="0"/><line nr="5325" mi="0" ci="5" mb="0" cb="0"/><line nr="5326" mi="0" ci="5" mb="0" cb="0"/><line nr="5327" mi="0" ci="5" mb="0" cb="0"/><line nr="5328" mi="0" ci="5" mb="0" cb="0"/><line nr="5329" mi="0" ci="5" mb="0" cb="0"/><line nr="5330" mi="0" ci="5" mb="0" cb="0"/><line nr="5331" mi="0" ci="5" mb="0" cb="0"/><line nr="5332" mi="0" ci="5" mb="0" cb="0"/><line nr="5333" mi="0" ci="5" mb="0" cb="0"/><line nr="5334" mi="0" ci="5" mb="0" cb="0"/><line nr="5335" mi="0" ci="5" mb="0" cb="0"/><line nr="5336" mi="0" ci="5" mb="0" cb="0"/><line nr="5337" mi="0" ci="5" mb="0" cb="0"/><line nr="5338" mi="0" ci="5" mb="0" cb="0"/><line nr="5339" mi="0" ci="5" mb="0" cb="0"/><line nr="5340" mi="0" ci="5" mb="0" cb="0"/><line nr="5341" mi="0" ci="5" mb="0" cb="0"/><line nr="5342" mi="0" ci="5" mb="0" cb="0"/><line nr="5343" mi="0" ci="5" mb="0" cb="0"/><line nr="5344" mi="0" ci="5" mb="0" cb="0"/><line nr="5345" mi="0" ci="5" mb="0" cb="0"/><line nr="5346" mi="0" ci="5" mb="0" cb="0"/><line nr="5347" mi="0" ci="5" mb="0" cb="0"/><line nr="5348" mi="0" ci="5" mb="0" cb="0"/><line nr="5349" mi="0" ci="5" mb="0" cb="0"/><line nr="5350" mi="0" ci="5" mb="0" cb="0"/><line nr="5351" mi="0" ci="5" mb="0" cb="0"/><line nr="5352" mi="0" ci="5" mb="0" cb="0"/><line nr="5353" mi="0" ci="5" mb="0" cb="0"/><line nr="5354" mi="0" ci="5" mb="0" cb="0"/><line nr="5355" mi="0" ci="5" mb="0" cb="0"/><line nr="5356" mi="0" ci="5" mb="0" cb="0"/><line nr="5357" mi="0" ci="5" mb="0" cb="0"/><line nr="5358" mi="0" ci="5" mb="0" cb="0"/><line nr="5359" mi="0" ci="5" mb="0" cb="0"/><line nr="5360" mi="0" ci="5" mb="0" cb="0"/><line nr="5361" mi="0" ci="5" mb="0" cb="0"/><line nr="5362" mi="0" ci="5" mb="0" cb="0"/><line nr="5363" mi="0" ci="5" mb="0" cb="0"/><line nr="5364" mi="0" ci="5" mb="0" cb="0"/><line nr="5365" mi="0" ci="5" mb="0" cb="0"/><line nr="5366" mi="0" ci="5" mb="0" cb="0"/><line nr="5367" mi="0" ci="5" mb="0" cb="0"/><line nr="5368" mi="0" ci="5" mb="0" cb="0"/><line nr="5369" mi="0" ci="5" mb="0" cb="0"/><line nr="5370" mi="0" ci="5" mb="0" cb="0"/><line nr="5371" mi="0" ci="5" mb="0" cb="0"/><line nr="5372" mi="0" ci="5" mb="0" cb="0"/><line nr="5373" mi="0" ci="5" mb="0" cb="0"/><line nr="5374" mi="0" ci="5" mb="0" cb="0"/><line nr="5375" mi="0" ci="5" mb="0" cb="0"/><line nr="5376" mi="0" ci="5" mb="0" cb="0"/><line nr="5377" mi="0" ci="5" mb="0" cb="0"/><line nr="5378" mi="0" ci="5" mb="0" cb="0"/><line nr="5379" mi="0" ci="5" mb="0" cb="0"/><line nr="5380" mi="0" ci="5" mb="0" cb="0"/><line nr="5381" mi="0" ci="5" mb="0" cb="0"/><line nr="5382" mi="0" ci="5" mb="0" cb="0"/><line nr="5383" mi="0" ci="5" mb="0" cb="0"/><line nr="5384" mi="0" ci="5" mb="0" cb="0"/><line nr="5385" mi="0" ci="5" mb="0" cb="0"/><line nr="5386" mi="0" ci="5" mb="0" cb="0"/><line nr="5387" mi="0" ci="5" mb="0" cb="0"/><line nr="5388" mi="0" ci="5" mb="0" cb="0"/><line nr="5389" mi="0" ci="5" mb="0" cb="0"/><line nr="5390" mi="0" ci="5" mb="0" cb="0"/><line nr="5391" mi="0" ci="5" mb="0" cb="0"/><line nr="5392" mi="0" ci="5" mb="0" cb="0"/><line nr="5393" mi="0" ci="5" mb="0" cb="0"/><line nr="5394" mi="0" ci="5" mb="0" cb="0"/><line nr="5395" mi="0" ci="5" mb="0" cb="0"/><line nr="5396" mi="0" ci="5" mb="0" cb="0"/><line nr="5397" mi="0" ci="5" mb="0" cb="0"/><line nr="5398" mi="0" ci="5" mb="0" cb="0"/><line nr="5399" mi="0" ci="5" mb="0" cb="0"/><line nr="5400" mi="0" ci="5" mb="0" cb="0"/><line nr="5401" mi="0" ci="5" mb="0" cb="0"/><line nr="5402" mi="0" ci="5" mb="0" cb="0"/><line nr="5403" mi="0" ci="5" mb="0" cb="0"/><line nr="5404" mi="0" ci="5" mb="0" cb="0"/><line nr="5405" mi="0" ci="5" mb="0" cb="0"/><line nr="5406" mi="0" ci="5" mb="0" cb="0"/><line nr="5407" mi="0" ci="5" mb="0" cb="0"/><line nr="5408" mi="0" ci="5" mb="0" cb="0"/><line nr="5409" mi="0" ci="5" mb="0" cb="0"/><line nr="5410" mi="0" ci="5" mb="0" cb="0"/><line nr="5411" mi="0" ci="5" mb="0" cb="0"/><line nr="5412" mi="0" ci="5" mb="0" cb="0"/><line nr="5413" mi="0" ci="5" mb="0" cb="0"/><line nr="5414" mi="0" ci="5" mb="0" cb="0"/><line nr="5415" mi="0" ci="5" mb="0" cb="0"/><line nr="5416" mi="0" ci="5" mb="0" cb="0"/><line nr="5417" mi="0" ci="5" mb="0" cb="0"/><line nr="5418" mi="0" ci="5" mb="0" cb="0"/><line nr="5419" mi="0" ci="5" mb="0" cb="0"/><line nr="5420" mi="0" ci="5" mb="0" cb="0"/><line nr="5421" mi="0" ci="5" mb="0" cb="0"/><line nr="5422" mi="0" ci="5" mb="0" cb="0"/><line nr="5423" mi="0" ci="5" mb="0" cb="0"/><line nr="5424" mi="0" ci="5" mb="0" cb="0"/><line nr="5425" mi="0" ci="5" mb="0" cb="0"/><line nr="5426" mi="0" ci="5" mb="0" cb="0"/><line nr="5427" mi="0" ci="5" mb="0" cb="0"/><line nr="5428" mi="0" ci="5" mb="0" cb="0"/><line nr="5429" mi="0" ci="5" mb="0" cb="0"/><line nr="5430" mi="0" ci="5" mb="0" cb="0"/><line nr="5431" mi="0" ci="5" mb="0" cb="0"/><line nr="5432" mi="0" ci="5" mb="0" cb="0"/><line nr="5433" mi="0" ci="5" mb="0" cb="0"/><line nr="5434" mi="0" ci="5" mb="0" cb="0"/><line nr="5435" mi="0" ci="5" mb="0" cb="0"/><line nr="5436" mi="0" ci="5" mb="0" cb="0"/><line nr="5437" mi="0" ci="5" mb="0" cb="0"/><line nr="5438" mi="0" ci="5" mb="0" cb="0"/><line nr="5439" mi="0" ci="5" mb="0" cb="0"/><line nr="5440" mi="0" ci="5" mb="0" cb="0"/><line nr="5441" mi="0" ci="5" mb="0" cb="0"/><line nr="5442" mi="0" ci="5" mb="0" cb="0"/><line nr="5443" mi="0" ci="5" mb="0" cb="0"/><line nr="5444" mi="0" ci="5" mb="0" cb="0"/><line nr="5445" mi="0" ci="5" mb="0" cb="0"/><line nr="5446" mi="0" ci="5" mb="0" cb="0"/><line nr="5447" mi="0" ci="5" mb="0" cb="0"/><line nr="5448" mi="0" ci="5" mb="0" cb="0"/><line nr="5449" mi="0" ci="5" mb="0" cb="0"/><line nr="5450" mi="0" ci="5" mb="0" cb="0"/><line nr="5451" mi="0" ci="5" mb="0" cb="0"/><line nr="5452" mi="0" ci="5" mb="0" cb="0"/><line nr="5453" mi="0" ci="5" mb="0" cb="0"/><line nr="5454" mi="0" ci="5" mb="0" cb="0"/><line nr="5455" mi="0" ci="8" mb="0" cb="0"/><line nr="5456" mi="0" ci="8" mb="0" cb="0"/><line nr="5458" mi="0" ci="5" mb="0" cb="0"/><line nr="5459" mi="0" ci="5" mb="0" cb="0"/><line nr="5460" mi="0" ci="5" mb="0" cb="0"/><line nr="5461" mi="0" ci="5" mb="0" cb="0"/><line nr="5462" mi="0" ci="5" mb="0" cb="0"/><line nr="5463" mi="0" ci="5" mb="0" cb="0"/><line nr="5464" mi="0" ci="8" mb="0" cb="0"/><line nr="5465" mi="0" ci="8" mb="0" cb="0"/><line nr="5467" mi="0" ci="1" mb="0" cb="0"/><line nr="5472" mi="0" ci="2" mb="0" cb="0"/><line nr="5473" mi="0" ci="3" mb="0" cb="0"/><line nr="5474" mi="0" ci="1" mb="0" cb="0"/><line nr="5477" mi="0" ci="3" mb="0" cb="0"/><line nr="5478" mi="0" ci="1" mb="0" cb="0"/><line nr="5486" mi="0" ci="3" mb="0" cb="0"/><line nr="5487" mi="3" ci="2" mb="1" cb="1"/><line nr="5488" mi="2" ci="3" mb="0" cb="0"/><line nr="5489" mi="0" ci="2" mb="0" cb="0"/><line nr="5491" mi="0" ci="7" mb="1" cb="1"/><line nr="5492" mi="0" ci="2" mb="0" cb="0"/><line nr="5494" mi="2" ci="0" mb="0" cb="0"/><line nr="5495" mi="4" ci="0" mb="0" cb="0"/><line nr="5496" mi="3" ci="0" mb="2" cb="0"/><line nr="5497" mi="7" ci="0" mb="0" cb="0"/><line nr="5498" mi="2" ci="0" mb="2" cb="0"/><line nr="5499" mi="2" ci="0" mb="0" cb="0"/><line nr="5500" mi="6" ci="0" mb="0" cb="0"/><line nr="5501" mi="9" ci="0" mb="6" cb="0"/><line nr="5502" mi="6" ci="0" mb="0" cb="0"/><line nr="5503" mi="2" ci="0" mb="0" cb="0"/><line nr="5505" mi="6" ci="0" mb="4" cb="0"/><line nr="5506" mi="5" ci="0" mb="0" cb="0"/><line nr="5508" mi="4" ci="0" mb="0" cb="0"/><line nr="5510" mi="1" ci="0" mb="0" cb="0"/><line nr="5511" mi="4" ci="0" mb="0" cb="0"/><line nr="5513" mi="4" ci="0" mb="0" cb="0"/><line nr="5514" mi="6" ci="0" mb="0" cb="0"/><line nr="5516" mi="6" ci="0" mb="0" cb="0"/><line nr="5517" mi="3" ci="0" mb="0" cb="0"/><line nr="5526" mi="0" ci="2" mb="0" cb="0"/><line nr="5527" mi="0" ci="3" mb="0" cb="0"/><line nr="5528" mi="0" ci="1" mb="0" cb="0"/><line nr="5531" mi="0" ci="2" mb="0" cb="0"/><line nr="5532" mi="0" ci="3" mb="0" cb="0"/><line nr="5533" mi="0" ci="1" mb="0" cb="0"/><line nr="5536" mi="3" ci="0" mb="2" cb="0"/><line nr="5537" mi="4" ci="0" mb="0" cb="0"/><line nr="5539" mi="4" ci="0" mb="0" cb="0"/><line nr="5547" mi="0" ci="2" mb="0" cb="0"/><line nr="5548" mi="0" ci="3" mb="0" cb="0"/><line nr="5549" mi="0" ci="1" mb="0" cb="0"/><line nr="5552" mi="0" ci="2" mb="0" cb="0"/><line nr="5553" mi="0" ci="3" mb="0" cb="0"/><line nr="5554" mi="0" ci="1" mb="0" cb="0"/><line nr="5557" mi="3" ci="0" mb="2" cb="0"/><line nr="5558" mi="4" ci="0" mb="0" cb="0"/><line nr="5560" mi="4" ci="0" mb="0" cb="0"/><line nr="5570" mi="0" ci="2" mb="0" cb="0"/><line nr="5571" mi="0" ci="3" mb="0" cb="0"/><line nr="5572" mi="0" ci="3" mb="0" cb="0"/><line nr="5573" mi="0" ci="1" mb="0" cb="0"/><line nr="5576" mi="0" ci="2" mb="0" cb="0"/><line nr="5577" mi="0" ci="3" mb="0" cb="0"/><line nr="5578" mi="0" ci="3" mb="0" cb="0"/><line nr="5579" mi="0" ci="1" mb="0" cb="0"/><line nr="5582" mi="2" ci="0" mb="0" cb="0"/><line nr="5583" mi="4" ci="0" mb="0" cb="0"/><line nr="5584" mi="3" ci="0" mb="0" cb="0"/><line nr="5585" mi="1" ci="0" mb="0" cb="0"/><line nr="5588" mi="2" ci="0" mb="0" cb="0"/><line nr="5589" mi="3" ci="0" mb="0" cb="0"/><line nr="5590" mi="3" ci="0" mb="0" cb="0"/><line nr="5591" mi="1" ci="0" mb="0" cb="0"/><line nr="5594" mi="0" ci="6" mb="1" cb="3"/><line nr="5596" mi="0" ci="6" mb="0" cb="0"/><line nr="5597" mi="0" ci="2" mb="0" cb="0"/><line nr="5598" mi="0" ci="1" mb="0" cb="0"/><line nr="5599" mi="0" ci="2" mb="0" cb="0"/><line nr="5602" mi="0" ci="3" mb="1" cb="1"/><line nr="5604" mi="0" ci="8" mb="0" cb="0"/><line nr="5605" mi="0" ci="2" mb="0" cb="0"/><line nr="5606" mi="1" ci="0" mb="0" cb="0"/><line nr="5607" mi="2" ci="0" mb="0" cb="0"/><line nr="5610" mi="3" ci="0" mb="2" cb="0"/><line nr="5612" mi="8" ci="0" mb="0" cb="0"/><line nr="5613" mi="2" ci="0" mb="0" cb="0"/><line nr="5614" mi="1" ci="0" mb="0" cb="0"/><line nr="5615" mi="2" ci="0" mb="0" cb="0"/><line nr="5618" mi="2" ci="0" mb="0" cb="0"/><line nr="5629" mi="0" ci="2" mb="0" cb="0"/><line nr="5630" mi="0" ci="3" mb="0" cb="0"/><line nr="5631" mi="0" ci="3" mb="0" cb="0"/><line nr="5632" mi="0" ci="3" mb="0" cb="0"/><line nr="5633" mi="0" ci="1" mb="0" cb="0"/><line nr="5636" mi="2" ci="0" mb="0" cb="0"/><line nr="5637" mi="3" ci="0" mb="0" cb="0"/><line nr="5638" mi="3" ci="0" mb="0" cb="0"/><line nr="5639" mi="3" ci="0" mb="0" cb="0"/><line nr="5640" mi="1" ci="0" mb="0" cb="0"/><line nr="5643" mi="2" ci="0" mb="0" cb="0"/><line nr="5644" mi="4" ci="0" mb="0" cb="0"/><line nr="5645" mi="3" ci="0" mb="0" cb="0"/><line nr="5646" mi="3" ci="0" mb="0" cb="0"/><line nr="5647" mi="1" ci="0" mb="0" cb="0"/><line nr="5650" mi="2" ci="0" mb="0" cb="0"/><line nr="5651" mi="3" ci="0" mb="0" cb="0"/><line nr="5652" mi="3" ci="0" mb="0" cb="0"/><line nr="5653" mi="3" ci="0" mb="0" cb="0"/><line nr="5654" mi="1" ci="0" mb="0" cb="0"/><line nr="5657" mi="2" ci="0" mb="0" cb="0"/><line nr="5658" mi="3" ci="0" mb="0" cb="0"/><line nr="5659" mi="3" ci="0" mb="0" cb="0"/><line nr="5660" mi="4" ci="0" mb="0" cb="0"/><line nr="5661" mi="1" ci="0" mb="0" cb="0"/><line nr="5664" mi="6" ci="0" mb="4" cb="0"/><line nr="5665" mi="3" ci="0" mb="2" cb="0"/><line nr="5667" mi="9" ci="0" mb="0" cb="0"/><line nr="5668" mi="2" ci="0" mb="0" cb="0"/><line nr="5669" mi="1" ci="0" mb="0" cb="0"/><line nr="5670" mi="2" ci="0" mb="0" cb="0"/><line nr="5674" mi="6" ci="0" mb="0" cb="0"/><line nr="5675" mi="2" ci="0" mb="0" cb="0"/><line nr="5676" mi="1" ci="0" mb="0" cb="0"/><line nr="5677" mi="2" ci="0" mb="0" cb="0"/><line nr="5680" mi="3" ci="0" mb="2" cb="0"/><line nr="5682" mi="8" ci="0" mb="0" cb="0"/><line nr="5683" mi="2" ci="0" mb="0" cb="0"/><line nr="5684" mi="1" ci="0" mb="0" cb="0"/><line nr="5685" mi="2" ci="0" mb="0" cb="0"/><line nr="5688" mi="3" ci="0" mb="2" cb="0"/><line nr="5690" mi="8" ci="0" mb="0" cb="0"/><line nr="5691" mi="2" ci="0" mb="0" cb="0"/><line nr="5692" mi="1" ci="0" mb="0" cb="0"/><line nr="5693" mi="2" ci="0" mb="0" cb="0"/><line nr="5696" mi="2" ci="0" mb="0" cb="0"/><line nr="5706" mi="0" ci="2" mb="0" cb="0"/><line nr="5707" mi="0" ci="3" mb="0" cb="0"/><line nr="5708" mi="0" ci="3" mb="0" cb="0"/><line nr="5709" mi="0" ci="1" mb="0" cb="0"/><line nr="5712" mi="0" ci="2" mb="0" cb="0"/><line nr="5713" mi="0" ci="3" mb="0" cb="0"/><line nr="5714" mi="0" ci="3" mb="0" cb="0"/><line nr="5715" mi="0" ci="1" mb="0" cb="0"/><line nr="5718" mi="2" ci="0" mb="0" cb="0"/><line nr="5719" mi="4" ci="0" mb="0" cb="0"/><line nr="5720" mi="3" ci="0" mb="0" cb="0"/><line nr="5721" mi="1" ci="0" mb="0" cb="0"/><line nr="5724" mi="2" ci="0" mb="0" cb="0"/><line nr="5725" mi="3" ci="0" mb="0" cb="0"/><line nr="5726" mi="4" ci="0" mb="0" cb="0"/><line nr="5727" mi="1" ci="0" mb="0" cb="0"/><line nr="5730" mi="0" ci="6" mb="1" cb="3"/><line nr="5732" mi="9" ci="0" mb="0" cb="0"/><line nr="5733" mi="2" ci="0" mb="0" cb="0"/><line nr="5734" mi="1" ci="0" mb="0" cb="0"/><line nr="5735" mi="2" ci="0" mb="0" cb="0"/><line nr="5739" mi="0" ci="3" mb="1" cb="1"/><line nr="5740" mi="0" ci="7" mb="0" cb="2"/><line nr="5741" mi="0" ci="3" mb="0" cb="0"/><line nr="5742" mi="0" ci="3" mb="0" cb="0"/><line nr="5743" mi="0" ci="3" mb="0" cb="0"/><line nr="5746" mi="0" ci="5" mb="0" cb="0"/><line nr="5748" mi="0" ci="5" mb="0" cb="0"/><line nr="5749" mi="0" ci="5" mb="0" cb="2"/><line nr="5750" mi="0" ci="2" mb="0" cb="0"/><line nr="5752" mi="0" ci="2" mb="0" cb="0"/><line nr="5755" mi="2" ci="0" mb="0" cb="0"/><line nr="5765" mi="0" ci="2" mb="0" cb="0"/><line nr="5766" mi="0" ci="3" mb="0" cb="0"/><line nr="5767" mi="0" ci="3" mb="0" cb="0"/><line nr="5768" mi="0" ci="1" mb="0" cb="0"/><line nr="5771" mi="0" ci="2" mb="0" cb="0"/><line nr="5772" mi="0" ci="3" mb="0" cb="0"/><line nr="5773" mi="0" ci="3" mb="0" cb="0"/><line nr="5774" mi="0" ci="1" mb="0" cb="0"/><line nr="5777" mi="2" ci="0" mb="0" cb="0"/><line nr="5778" mi="4" ci="0" mb="0" cb="0"/><line nr="5779" mi="3" ci="0" mb="0" cb="0"/><line nr="5780" mi="1" ci="0" mb="0" cb="0"/><line nr="5783" mi="2" ci="0" mb="0" cb="0"/><line nr="5784" mi="3" ci="0" mb="0" cb="0"/><line nr="5785" mi="3" ci="0" mb="0" cb="0"/><line nr="5786" mi="1" ci="0" mb="0" cb="0"/><line nr="5789" mi="0" ci="6" mb="1" cb="3"/><line nr="5791" mi="0" ci="6" mb="0" cb="0"/><line nr="5792" mi="0" ci="2" mb="0" cb="0"/><line nr="5793" mi="0" ci="1" mb="0" cb="0"/><line nr="5794" mi="0" ci="2" mb="0" cb="0"/><line nr="5797" mi="0" ci="3" mb="1" cb="1"/><line nr="5799" mi="0" ci="8" mb="0" cb="0"/><line nr="5800" mi="0" ci="2" mb="0" cb="0"/><line nr="5801" mi="1" ci="0" mb="0" cb="0"/><line nr="5802" mi="2" ci="0" mb="0" cb="0"/><line nr="5805" mi="3" ci="0" mb="2" cb="0"/><line nr="5807" mi="8" ci="0" mb="0" cb="0"/><line nr="5808" mi="2" ci="0" mb="0" cb="0"/><line nr="5809" mi="1" ci="0" mb="0" cb="0"/><line nr="5810" mi="2" ci="0" mb="0" cb="0"/><line nr="5813" mi="2" ci="0" mb="0" cb="0"/><line nr="5823" mi="0" ci="2" mb="0" cb="0"/><line nr="5824" mi="0" ci="3" mb="0" cb="0"/><line nr="5825" mi="0" ci="3" mb="0" cb="0"/><line nr="5826" mi="0" ci="1" mb="0" cb="0"/><line nr="5829" mi="0" ci="2" mb="0" cb="0"/><line nr="5830" mi="0" ci="3" mb="0" cb="0"/><line nr="5831" mi="0" ci="3" mb="0" cb="0"/><line nr="5832" mi="0" ci="1" mb="0" cb="0"/><line nr="5835" mi="2" ci="0" mb="0" cb="0"/><line nr="5836" mi="4" ci="0" mb="0" cb="0"/><line nr="5837" mi="3" ci="0" mb="0" cb="0"/><line nr="5838" mi="1" ci="0" mb="0" cb="0"/><line nr="5841" mi="2" ci="0" mb="0" cb="0"/><line nr="5842" mi="3" ci="0" mb="0" cb="0"/><line nr="5843" mi="3" ci="0" mb="0" cb="0"/><line nr="5844" mi="1" ci="0" mb="0" cb="0"/><line nr="5847" mi="0" ci="6" mb="1" cb="3"/><line nr="5849" mi="0" ci="6" mb="0" cb="0"/><line nr="5850" mi="0" ci="2" mb="0" cb="0"/><line nr="5851" mi="0" ci="1" mb="0" cb="0"/><line nr="5852" mi="0" ci="2" mb="0" cb="0"/><line nr="5855" mi="0" ci="3" mb="1" cb="1"/><line nr="5857" mi="0" ci="8" mb="0" cb="0"/><line nr="5858" mi="0" ci="2" mb="0" cb="0"/><line nr="5859" mi="1" ci="0" mb="0" cb="0"/><line nr="5860" mi="2" ci="0" mb="0" cb="0"/><line nr="5863" mi="3" ci="0" mb="2" cb="0"/><line nr="5865" mi="8" ci="0" mb="0" cb="0"/><line nr="5866" mi="2" ci="0" mb="0" cb="0"/><line nr="5867" mi="1" ci="0" mb="0" cb="0"/><line nr="5868" mi="2" ci="0" mb="0" cb="0"/><line nr="5871" mi="2" ci="0" mb="0" cb="0"/><line nr="5882" mi="0" ci="2" mb="0" cb="0"/><line nr="5883" mi="0" ci="3" mb="0" cb="0"/><line nr="5884" mi="0" ci="3" mb="0" cb="0"/><line nr="5885" mi="0" ci="3" mb="0" cb="0"/><line nr="5886" mi="0" ci="1" mb="0" cb="0"/><line nr="5889" mi="2" ci="0" mb="0" cb="0"/><line nr="5890" mi="3" ci="0" mb="0" cb="0"/><line nr="5891" mi="3" ci="0" mb="0" cb="0"/><line nr="5892" mi="3" ci="0" mb="0" cb="0"/><line nr="5893" mi="1" ci="0" mb="0" cb="0"/><line nr="5896" mi="2" ci="0" mb="0" cb="0"/><line nr="5897" mi="4" ci="0" mb="0" cb="0"/><line nr="5898" mi="3" ci="0" mb="0" cb="0"/><line nr="5899" mi="3" ci="0" mb="0" cb="0"/><line nr="5900" mi="1" ci="0" mb="0" cb="0"/><line nr="5903" mi="2" ci="0" mb="0" cb="0"/><line nr="5904" mi="3" ci="0" mb="0" cb="0"/><line nr="5905" mi="3" ci="0" mb="0" cb="0"/><line nr="5906" mi="3" ci="0" mb="0" cb="0"/><line nr="5907" mi="1" ci="0" mb="0" cb="0"/><line nr="5910" mi="2" ci="0" mb="0" cb="0"/><line nr="5911" mi="3" ci="0" mb="0" cb="0"/><line nr="5912" mi="3" ci="0" mb="0" cb="0"/><line nr="5913" mi="4" ci="0" mb="0" cb="0"/><line nr="5914" mi="1" ci="0" mb="0" cb="0"/><line nr="5917" mi="6" ci="0" mb="4" cb="0"/><line nr="5918" mi="3" ci="0" mb="2" cb="0"/><line nr="5920" mi="9" ci="0" mb="0" cb="0"/><line nr="5921" mi="2" ci="0" mb="0" cb="0"/><line nr="5922" mi="1" ci="0" mb="0" cb="0"/><line nr="5923" mi="2" ci="0" mb="0" cb="0"/><line nr="5927" mi="6" ci="0" mb="0" cb="0"/><line nr="5928" mi="2" ci="0" mb="0" cb="0"/><line nr="5929" mi="1" ci="0" mb="0" cb="0"/><line nr="5930" mi="2" ci="0" mb="0" cb="0"/><line nr="5933" mi="3" ci="0" mb="2" cb="0"/><line nr="5935" mi="8" ci="0" mb="0" cb="0"/><line nr="5936" mi="2" ci="0" mb="0" cb="0"/><line nr="5937" mi="1" ci="0" mb="0" cb="0"/><line nr="5938" mi="2" ci="0" mb="0" cb="0"/><line nr="5941" mi="3" ci="0" mb="2" cb="0"/><line nr="5943" mi="8" ci="0" mb="0" cb="0"/><line nr="5944" mi="2" ci="0" mb="0" cb="0"/><line nr="5945" mi="1" ci="0" mb="0" cb="0"/><line nr="5946" mi="2" ci="0" mb="0" cb="0"/><line nr="5949" mi="2" ci="0" mb="0" cb="0"/><line nr="5957" mi="0" ci="3" mb="0" cb="0"/><line nr="5958" mi="0" ci="4" mb="0" cb="0"/><line nr="5961" mi="0" ci="2" mb="0" cb="0"/><line nr="5962" mi="0" ci="3" mb="0" cb="0"/><line nr="5963" mi="0" ci="3" mb="0" cb="0"/><line nr="5964" mi="0" ci="1" mb="0" cb="0"/><line nr="5967" mi="0" ci="2" mb="0" cb="0"/><line nr="5968" mi="0" ci="3" mb="0" cb="0"/><line nr="5969" mi="0" ci="3" mb="0" cb="0"/><line nr="5970" mi="0" ci="1" mb="0" cb="0"/><line nr="5973" mi="2" ci="0" mb="0" cb="0"/><line nr="5974" mi="4" ci="0" mb="0" cb="0"/><line nr="5975" mi="3" ci="0" mb="0" cb="0"/><line nr="5976" mi="1" ci="0" mb="0" cb="0"/><line nr="5979" mi="2" ci="0" mb="0" cb="0"/><line nr="5980" mi="3" ci="0" mb="0" cb="0"/><line nr="5981" mi="4" ci="0" mb="0" cb="0"/><line nr="5982" mi="1" ci="0" mb="0" cb="0"/><line nr="5985" mi="0" ci="6" mb="1" cb="3"/><line nr="5987" mi="9" ci="0" mb="0" cb="0"/><line nr="5988" mi="2" ci="0" mb="0" cb="0"/><line nr="5989" mi="1" ci="0" mb="0" cb="0"/><line nr="5990" mi="2" ci="0" mb="0" cb="0"/><line nr="5994" mi="0" ci="3" mb="1" cb="1"/><line nr="5995" mi="0" ci="7" mb="0" cb="2"/><line nr="5996" mi="0" ci="3" mb="0" cb="0"/><line nr="5997" mi="0" ci="3" mb="0" cb="0"/><line nr="5998" mi="0" ci="3" mb="0" cb="0"/><line nr="6001" mi="0" ci="5" mb="0" cb="0"/><line nr="6002" mi="0" ci="5" mb="0" cb="0"/><line nr="6003" mi="0" ci="2" mb="0" cb="0"/><line nr="6004" mi="0" ci="3" mb="1" cb="1"/><line nr="6005" mi="0" ci="4" mb="0" cb="0"/><line nr="6006" mi="3" ci="0" mb="2" cb="0"/><line nr="6007" mi="7" ci="0" mb="0" cb="0"/><line nr="6009" mi="6" ci="0" mb="0" cb="0"/><line nr="6011" mi="0" ci="8" mb="0" cb="4"/><line nr="6012" mi="0" ci="2" mb="0" cb="0"/><line nr="6014" mi="0" ci="5" mb="0" cb="2"/><line nr="6015" mi="0" ci="2" mb="0" cb="0"/><line nr="6017" mi="0" ci="2" mb="0" cb="0"/><line nr="6020" mi="2" ci="0" mb="0" cb="0"/><line nr="6031" mi="0" ci="2" mb="0" cb="0"/><line nr="6032" mi="0" ci="3" mb="0" cb="0"/><line nr="6033" mi="0" ci="3" mb="0" cb="0"/><line nr="6034" mi="0" ci="3" mb="0" cb="0"/><line nr="6035" mi="0" ci="1" mb="0" cb="0"/><line nr="6038" mi="2" ci="0" mb="0" cb="0"/><line nr="6039" mi="3" ci="0" mb="0" cb="0"/><line nr="6040" mi="3" ci="0" mb="0" cb="0"/><line nr="6041" mi="3" ci="0" mb="0" cb="0"/><line nr="6042" mi="1" ci="0" mb="0" cb="0"/><line nr="6045" mi="2" ci="0" mb="0" cb="0"/><line nr="6046" mi="4" ci="0" mb="0" cb="0"/><line nr="6047" mi="3" ci="0" mb="0" cb="0"/><line nr="6048" mi="3" ci="0" mb="0" cb="0"/><line nr="6049" mi="1" ci="0" mb="0" cb="0"/><line nr="6052" mi="2" ci="0" mb="0" cb="0"/><line nr="6053" mi="3" ci="0" mb="0" cb="0"/><line nr="6054" mi="3" ci="0" mb="0" cb="0"/><line nr="6055" mi="3" ci="0" mb="0" cb="0"/><line nr="6056" mi="1" ci="0" mb="0" cb="0"/><line nr="6059" mi="2" ci="0" mb="0" cb="0"/><line nr="6060" mi="3" ci="0" mb="0" cb="0"/><line nr="6061" mi="3" ci="0" mb="0" cb="0"/><line nr="6062" mi="4" ci="0" mb="0" cb="0"/><line nr="6063" mi="1" ci="0" mb="0" cb="0"/><line nr="6066" mi="6" ci="0" mb="4" cb="0"/><line nr="6067" mi="3" ci="0" mb="2" cb="0"/><line nr="6069" mi="9" ci="0" mb="0" cb="0"/><line nr="6070" mi="2" ci="0" mb="0" cb="0"/><line nr="6071" mi="1" ci="0" mb="0" cb="0"/><line nr="6072" mi="2" ci="0" mb="0" cb="0"/><line nr="6076" mi="6" ci="0" mb="0" cb="0"/><line nr="6077" mi="2" ci="0" mb="0" cb="0"/><line nr="6078" mi="1" ci="0" mb="0" cb="0"/><line nr="6079" mi="2" ci="0" mb="0" cb="0"/><line nr="6082" mi="3" ci="0" mb="2" cb="0"/><line nr="6084" mi="8" ci="0" mb="0" cb="0"/><line nr="6085" mi="2" ci="0" mb="0" cb="0"/><line nr="6086" mi="1" ci="0" mb="0" cb="0"/><line nr="6087" mi="2" ci="0" mb="0" cb="0"/><line nr="6090" mi="3" ci="0" mb="2" cb="0"/><line nr="6092" mi="8" ci="0" mb="0" cb="0"/><line nr="6093" mi="2" ci="0" mb="0" cb="0"/><line nr="6094" mi="1" ci="0" mb="0" cb="0"/><line nr="6095" mi="2" ci="0" mb="0" cb="0"/><line nr="6098" mi="2" ci="0" mb="0" cb="0"/><line nr="6106" mi="0" ci="3" mb="0" cb="0"/><line nr="6107" mi="0" ci="4" mb="0" cb="0"/><line nr="6110" mi="0" ci="2" mb="0" cb="0"/><line nr="6111" mi="0" ci="3" mb="0" cb="0"/><line nr="6112" mi="0" ci="3" mb="0" cb="0"/><line nr="6113" mi="0" ci="1" mb="0" cb="0"/><line nr="6116" mi="0" ci="2" mb="0" cb="0"/><line nr="6117" mi="0" ci="3" mb="0" cb="0"/><line nr="6118" mi="0" ci="3" mb="0" cb="0"/><line nr="6119" mi="0" ci="1" mb="0" cb="0"/><line nr="6122" mi="2" ci="0" mb="0" cb="0"/><line nr="6123" mi="4" ci="0" mb="0" cb="0"/><line nr="6124" mi="3" ci="0" mb="0" cb="0"/><line nr="6125" mi="1" ci="0" mb="0" cb="0"/><line nr="6128" mi="2" ci="0" mb="0" cb="0"/><line nr="6129" mi="3" ci="0" mb="0" cb="0"/><line nr="6130" mi="4" ci="0" mb="0" cb="0"/><line nr="6131" mi="1" ci="0" mb="0" cb="0"/><line nr="6134" mi="0" ci="6" mb="1" cb="3"/><line nr="6136" mi="9" ci="0" mb="0" cb="0"/><line nr="6137" mi="2" ci="0" mb="0" cb="0"/><line nr="6138" mi="1" ci="0" mb="0" cb="0"/><line nr="6139" mi="2" ci="0" mb="0" cb="0"/><line nr="6143" mi="0" ci="3" mb="1" cb="1"/><line nr="6144" mi="0" ci="7" mb="0" cb="2"/><line nr="6145" mi="0" ci="3" mb="0" cb="0"/><line nr="6146" mi="0" ci="3" mb="0" cb="0"/><line nr="6147" mi="0" ci="3" mb="0" cb="0"/><line nr="6150" mi="0" ci="5" mb="0" cb="0"/><line nr="6151" mi="0" ci="5" mb="0" cb="0"/><line nr="6152" mi="0" ci="2" mb="0" cb="0"/><line nr="6153" mi="0" ci="3" mb="1" cb="1"/><line nr="6154" mi="0" ci="4" mb="0" cb="0"/><line nr="6155" mi="3" ci="0" mb="2" cb="0"/><line nr="6156" mi="7" ci="0" mb="0" cb="0"/><line nr="6158" mi="6" ci="0" mb="0" cb="0"/><line nr="6160" mi="0" ci="8" mb="0" cb="4"/><line nr="6161" mi="0" ci="2" mb="0" cb="0"/><line nr="6163" mi="0" ci="5" mb="0" cb="2"/><line nr="6164" mi="0" ci="2" mb="0" cb="0"/><line nr="6166" mi="0" ci="2" mb="0" cb="0"/><line nr="6169" mi="2" ci="0" mb="0" cb="0"/><line nr="6180" mi="0" ci="2" mb="0" cb="0"/><line nr="6181" mi="0" ci="3" mb="0" cb="0"/><line nr="6182" mi="0" ci="3" mb="0" cb="0"/><line nr="6183" mi="0" ci="3" mb="0" cb="0"/><line nr="6184" mi="0" ci="1" mb="0" cb="0"/><line nr="6187" mi="2" ci="0" mb="0" cb="0"/><line nr="6188" mi="3" ci="0" mb="0" cb="0"/><line nr="6189" mi="3" ci="0" mb="0" cb="0"/><line nr="6190" mi="3" ci="0" mb="0" cb="0"/><line nr="6191" mi="1" ci="0" mb="0" cb="0"/><line nr="6194" mi="2" ci="0" mb="0" cb="0"/><line nr="6195" mi="4" ci="0" mb="0" cb="0"/><line nr="6196" mi="3" ci="0" mb="0" cb="0"/><line nr="6197" mi="3" ci="0" mb="0" cb="0"/><line nr="6198" mi="1" ci="0" mb="0" cb="0"/><line nr="6201" mi="2" ci="0" mb="0" cb="0"/><line nr="6202" mi="3" ci="0" mb="0" cb="0"/><line nr="6203" mi="3" ci="0" mb="0" cb="0"/><line nr="6204" mi="3" ci="0" mb="0" cb="0"/><line nr="6205" mi="1" ci="0" mb="0" cb="0"/><line nr="6208" mi="2" ci="0" mb="0" cb="0"/><line nr="6209" mi="3" ci="0" mb="0" cb="0"/><line nr="6210" mi="3" ci="0" mb="0" cb="0"/><line nr="6211" mi="4" ci="0" mb="0" cb="0"/><line nr="6212" mi="1" ci="0" mb="0" cb="0"/><line nr="6215" mi="6" ci="0" mb="4" cb="0"/><line nr="6216" mi="3" ci="0" mb="2" cb="0"/><line nr="6218" mi="9" ci="0" mb="0" cb="0"/><line nr="6219" mi="2" ci="0" mb="0" cb="0"/><line nr="6220" mi="1" ci="0" mb="0" cb="0"/><line nr="6221" mi="2" ci="0" mb="0" cb="0"/><line nr="6225" mi="6" ci="0" mb="0" cb="0"/><line nr="6226" mi="2" ci="0" mb="0" cb="0"/><line nr="6227" mi="1" ci="0" mb="0" cb="0"/><line nr="6228" mi="2" ci="0" mb="0" cb="0"/><line nr="6231" mi="3" ci="0" mb="2" cb="0"/><line nr="6233" mi="8" ci="0" mb="0" cb="0"/><line nr="6234" mi="2" ci="0" mb="0" cb="0"/><line nr="6235" mi="1" ci="0" mb="0" cb="0"/><line nr="6236" mi="2" ci="0" mb="0" cb="0"/><line nr="6239" mi="3" ci="0" mb="2" cb="0"/><line nr="6241" mi="8" ci="0" mb="0" cb="0"/><line nr="6242" mi="2" ci="0" mb="0" cb="0"/><line nr="6243" mi="1" ci="0" mb="0" cb="0"/><line nr="6244" mi="2" ci="0" mb="0" cb="0"/><line nr="6247" mi="2" ci="0" mb="0" cb="0"/><line nr="6255" mi="0" ci="3" mb="0" cb="0"/><line nr="6256" mi="0" ci="4" mb="0" cb="0"/><line nr="6259" mi="0" ci="2" mb="0" cb="0"/><line nr="6260" mi="0" ci="3" mb="0" cb="0"/><line nr="6261" mi="0" ci="3" mb="0" cb="0"/><line nr="6262" mi="0" ci="1" mb="0" cb="0"/><line nr="6265" mi="0" ci="2" mb="0" cb="0"/><line nr="6266" mi="0" ci="3" mb="0" cb="0"/><line nr="6267" mi="0" ci="3" mb="0" cb="0"/><line nr="6268" mi="0" ci="1" mb="0" cb="0"/><line nr="6271" mi="2" ci="0" mb="0" cb="0"/><line nr="6272" mi="4" ci="0" mb="0" cb="0"/><line nr="6273" mi="3" ci="0" mb="0" cb="0"/><line nr="6274" mi="1" ci="0" mb="0" cb="0"/><line nr="6277" mi="2" ci="0" mb="0" cb="0"/><line nr="6278" mi="3" ci="0" mb="0" cb="0"/><line nr="6279" mi="4" ci="0" mb="0" cb="0"/><line nr="6280" mi="1" ci="0" mb="0" cb="0"/><line nr="6283" mi="0" ci="6" mb="1" cb="3"/><line nr="6285" mi="9" ci="0" mb="0" cb="0"/><line nr="6286" mi="2" ci="0" mb="0" cb="0"/><line nr="6287" mi="1" ci="0" mb="0" cb="0"/><line nr="6288" mi="2" ci="0" mb="0" cb="0"/><line nr="6292" mi="0" ci="3" mb="1" cb="1"/><line nr="6293" mi="0" ci="7" mb="0" cb="2"/><line nr="6294" mi="0" ci="3" mb="0" cb="0"/><line nr="6295" mi="0" ci="3" mb="0" cb="0"/><line nr="6296" mi="0" ci="3" mb="0" cb="0"/><line nr="6299" mi="0" ci="5" mb="0" cb="0"/><line nr="6300" mi="0" ci="5" mb="0" cb="0"/><line nr="6301" mi="0" ci="2" mb="0" cb="0"/><line nr="6302" mi="0" ci="3" mb="1" cb="1"/><line nr="6303" mi="0" ci="4" mb="0" cb="0"/><line nr="6304" mi="3" ci="0" mb="2" cb="0"/><line nr="6305" mi="7" ci="0" mb="0" cb="0"/><line nr="6307" mi="6" ci="0" mb="0" cb="0"/><line nr="6309" mi="0" ci="8" mb="0" cb="4"/><line nr="6310" mi="0" ci="2" mb="0" cb="0"/><line nr="6312" mi="0" ci="5" mb="0" cb="2"/><line nr="6313" mi="0" ci="2" mb="0" cb="0"/><line nr="6315" mi="0" ci="2" mb="0" cb="0"/><line nr="6318" mi="2" ci="0" mb="0" cb="0"/><line nr="6329" mi="0" ci="2" mb="0" cb="0"/><line nr="6330" mi="0" ci="3" mb="0" cb="0"/><line nr="6331" mi="0" ci="3" mb="0" cb="0"/><line nr="6332" mi="0" ci="3" mb="0" cb="0"/><line nr="6333" mi="0" ci="1" mb="0" cb="0"/><line nr="6336" mi="2" ci="0" mb="0" cb="0"/><line nr="6337" mi="3" ci="0" mb="0" cb="0"/><line nr="6338" mi="3" ci="0" mb="0" cb="0"/><line nr="6339" mi="3" ci="0" mb="0" cb="0"/><line nr="6340" mi="1" ci="0" mb="0" cb="0"/><line nr="6343" mi="2" ci="0" mb="0" cb="0"/><line nr="6344" mi="4" ci="0" mb="0" cb="0"/><line nr="6345" mi="3" ci="0" mb="0" cb="0"/><line nr="6346" mi="3" ci="0" mb="0" cb="0"/><line nr="6347" mi="1" ci="0" mb="0" cb="0"/><line nr="6350" mi="2" ci="0" mb="0" cb="0"/><line nr="6351" mi="3" ci="0" mb="0" cb="0"/><line nr="6352" mi="3" ci="0" mb="0" cb="0"/><line nr="6353" mi="3" ci="0" mb="0" cb="0"/><line nr="6354" mi="1" ci="0" mb="0" cb="0"/><line nr="6357" mi="2" ci="0" mb="0" cb="0"/><line nr="6358" mi="3" ci="0" mb="0" cb="0"/><line nr="6359" mi="3" ci="0" mb="0" cb="0"/><line nr="6360" mi="4" ci="0" mb="0" cb="0"/><line nr="6361" mi="1" ci="0" mb="0" cb="0"/><line nr="6364" mi="6" ci="0" mb="4" cb="0"/><line nr="6365" mi="3" ci="0" mb="2" cb="0"/><line nr="6367" mi="9" ci="0" mb="0" cb="0"/><line nr="6368" mi="2" ci="0" mb="0" cb="0"/><line nr="6369" mi="1" ci="0" mb="0" cb="0"/><line nr="6370" mi="2" ci="0" mb="0" cb="0"/><line nr="6374" mi="6" ci="0" mb="0" cb="0"/><line nr="6375" mi="2" ci="0" mb="0" cb="0"/><line nr="6376" mi="1" ci="0" mb="0" cb="0"/><line nr="6377" mi="2" ci="0" mb="0" cb="0"/><line nr="6380" mi="3" ci="0" mb="2" cb="0"/><line nr="6382" mi="8" ci="0" mb="0" cb="0"/><line nr="6383" mi="2" ci="0" mb="0" cb="0"/><line nr="6384" mi="1" ci="0" mb="0" cb="0"/><line nr="6385" mi="2" ci="0" mb="0" cb="0"/><line nr="6388" mi="3" ci="0" mb="2" cb="0"/><line nr="6390" mi="8" ci="0" mb="0" cb="0"/><line nr="6391" mi="2" ci="0" mb="0" cb="0"/><line nr="6392" mi="1" ci="0" mb="0" cb="0"/><line nr="6393" mi="2" ci="0" mb="0" cb="0"/><line nr="6396" mi="2" ci="0" mb="0" cb="0"/><line nr="6404" mi="0" ci="3" mb="0" cb="0"/><line nr="6405" mi="0" ci="4" mb="0" cb="0"/><line nr="6408" mi="0" ci="2" mb="0" cb="0"/><line nr="6409" mi="0" ci="3" mb="0" cb="0"/><line nr="6410" mi="0" ci="3" mb="0" cb="0"/><line nr="6411" mi="0" ci="1" mb="0" cb="0"/><line nr="6414" mi="0" ci="2" mb="0" cb="0"/><line nr="6415" mi="0" ci="3" mb="0" cb="0"/><line nr="6416" mi="0" ci="3" mb="0" cb="0"/><line nr="6417" mi="0" ci="1" mb="0" cb="0"/><line nr="6420" mi="2" ci="0" mb="0" cb="0"/><line nr="6421" mi="4" ci="0" mb="0" cb="0"/><line nr="6422" mi="3" ci="0" mb="0" cb="0"/><line nr="6423" mi="1" ci="0" mb="0" cb="0"/><line nr="6426" mi="2" ci="0" mb="0" cb="0"/><line nr="6427" mi="3" ci="0" mb="0" cb="0"/><line nr="6428" mi="4" ci="0" mb="0" cb="0"/><line nr="6429" mi="1" ci="0" mb="0" cb="0"/><line nr="6432" mi="0" ci="6" mb="1" cb="3"/><line nr="6434" mi="9" ci="0" mb="0" cb="0"/><line nr="6435" mi="2" ci="0" mb="0" cb="0"/><line nr="6436" mi="1" ci="0" mb="0" cb="0"/><line nr="6437" mi="2" ci="0" mb="0" cb="0"/><line nr="6441" mi="0" ci="3" mb="1" cb="1"/><line nr="6442" mi="0" ci="7" mb="0" cb="2"/><line nr="6443" mi="0" ci="3" mb="0" cb="0"/><line nr="6444" mi="0" ci="3" mb="0" cb="0"/><line nr="6445" mi="0" ci="3" mb="0" cb="0"/><line nr="6448" mi="0" ci="5" mb="0" cb="0"/><line nr="6449" mi="0" ci="5" mb="0" cb="0"/><line nr="6450" mi="0" ci="2" mb="0" cb="0"/><line nr="6451" mi="0" ci="3" mb="1" cb="1"/><line nr="6452" mi="0" ci="4" mb="0" cb="0"/><line nr="6453" mi="3" ci="0" mb="2" cb="0"/><line nr="6454" mi="7" ci="0" mb="0" cb="0"/><line nr="6456" mi="6" ci="0" mb="0" cb="0"/><line nr="6458" mi="0" ci="8" mb="0" cb="4"/><line nr="6459" mi="0" ci="2" mb="0" cb="0"/><line nr="6461" mi="0" ci="5" mb="0" cb="2"/><line nr="6462" mi="0" ci="2" mb="0" cb="0"/><line nr="6464" mi="0" ci="2" mb="0" cb="0"/><line nr="6467" mi="2" ci="0" mb="0" cb="0"/><line nr="6477" mi="2" ci="0" mb="0" cb="0"/><line nr="6478" mi="3" ci="0" mb="0" cb="0"/><line nr="6479" mi="3" ci="0" mb="0" cb="0"/><line nr="6480" mi="1" ci="0" mb="0" cb="0"/><line nr="6483" mi="2" ci="0" mb="0" cb="0"/><line nr="6484" mi="3" ci="0" mb="0" cb="0"/><line nr="6485" mi="3" ci="0" mb="0" cb="0"/><line nr="6486" mi="1" ci="0" mb="0" cb="0"/><line nr="6491" mi="3" ci="0" mb="0" cb="0"/><line nr="6493" mi="7" ci="0" mb="0" cb="0"/><line nr="6494" mi="1" ci="0" mb="0" cb="0"/><line nr="6504" mi="2" ci="0" mb="0" cb="0"/><line nr="6505" mi="3" ci="0" mb="0" cb="0"/><line nr="6506" mi="1" ci="0" mb="0" cb="0"/><line nr="6511" mi="3" ci="0" mb="0" cb="0"/><line nr="6513" mi="5" ci="0" mb="0" cb="0"/><line nr="6514" mi="1" ci="0" mb="0" cb="0"/><line nr="6524" mi="2" ci="0" mb="0" cb="0"/><line nr="6525" mi="3" ci="0" mb="0" cb="0"/><line nr="6526" mi="3" ci="0" mb="0" cb="0"/><line nr="6527" mi="1" ci="0" mb="0" cb="0"/><line nr="6530" mi="2" ci="0" mb="0" cb="0"/><line nr="6531" mi="3" ci="0" mb="0" cb="0"/><line nr="6532" mi="4" ci="0" mb="0" cb="0"/><line nr="6533" mi="1" ci="0" mb="0" cb="0"/><line nr="6536" mi="3" ci="0" mb="2" cb="0"/><line nr="6537" mi="5" ci="0" mb="0" cb="0"/><line nr="6539" mi="8" ci="0" mb="0" cb="0"/><line nr="6548" mi="2" ci="0" mb="0" cb="0"/><line nr="6549" mi="3" ci="0" mb="0" cb="0"/><line nr="6550" mi="1" ci="0" mb="0" cb="0"/><line nr="6553" mi="5" ci="0" mb="0" cb="0"/><line nr="6562" mi="2" ci="0" mb="0" cb="0"/><line nr="6563" mi="3" ci="0" mb="0" cb="0"/><line nr="6564" mi="1" ci="0" mb="0" cb="0"/><line nr="6567" mi="5" ci="0" mb="0" cb="0"/><line nr="6576" mi="2" ci="0" mb="0" cb="0"/><line nr="6577" mi="3" ci="0" mb="0" cb="0"/><line nr="6578" mi="1" ci="0" mb="0" cb="0"/><line nr="6581" mi="5" ci="0" mb="0" cb="0"/><line nr="6590" mi="2" ci="0" mb="0" cb="0"/><line nr="6591" mi="3" ci="0" mb="0" cb="0"/><line nr="6592" mi="1" ci="0" mb="0" cb="0"/><line nr="6595" mi="5" ci="0" mb="0" cb="0"/><line nr="6605" mi="2" ci="0" mb="0" cb="0"/><line nr="6606" mi="3" ci="0" mb="0" cb="0"/><line nr="6607" mi="3" ci="0" mb="0" cb="0"/><line nr="6608" mi="1" ci="0" mb="0" cb="0"/><line nr="6611" mi="2" ci="0" mb="0" cb="0"/><line nr="6612" mi="3" ci="0" mb="0" cb="0"/><line nr="6613" mi="3" ci="0" mb="0" cb="0"/><line nr="6614" mi="1" ci="0" mb="0" cb="0"/><line nr="6617" mi="3" ci="0" mb="2" cb="0"/><line nr="6618" mi="5" ci="0" mb="0" cb="0"/><line nr="6620" mi="7" ci="0" mb="0" cb="0"/><line nr="6627" mi="0" ci="2" mb="0" cb="0"/><line nr="6628" mi="0" ci="1" mb="0" cb="0"/><line nr="6631" mi="4" ci="0" mb="0" cb="0"/><line nr="6638" mi="0" ci="2" mb="0" cb="0"/><line nr="6639" mi="0" ci="1" mb="0" cb="0"/><line nr="6642" mi="4" ci="0" mb="0" cb="0"/><line nr="6649" mi="0" ci="2" mb="0" cb="0"/><line nr="6650" mi="0" ci="1" mb="0" cb="0"/><line nr="6653" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2860" covered="2420"/><counter type="BRANCH" missed="155" covered="81"/><counter type="LINE" missed="802" covered="622"/><counter type="COMPLEXITY" missed="409" covered="140"/><counter type="METHOD" missed="319" covered="112"/><counter type="CLASS" missed="18" covered="43"/></sourcefile><sourcefile name="Function.java"><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="11"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FnBigDecimal.java"><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="7" ci="0" mb="0" cb="0"/><line nr="195" mi="7" ci="0" mb="0" cb="0"/><line nr="225" mi="9" ci="0" mb="0" cb="0"/><line nr="256" mi="9" ci="0" mb="0" cb="0"/><line nr="287" mi="9" ci="0" mb="0" cb="0"/><line nr="318" mi="9" ci="0" mb="0" cb="0"/><line nr="334" mi="2" ci="0" mb="0" cb="0"/><line nr="347" mi="3" ci="0" mb="0" cb="0"/><line nr="360" mi="3" ci="0" mb="0" cb="0"/><line nr="373" mi="3" ci="0" mb="0" cb="0"/><line nr="387" mi="4" ci="0" mb="0" cb="0"/><line nr="401" mi="4" ci="0" mb="0" cb="0"/><line nr="426" mi="7" ci="0" mb="0" cb="0"/><line nr="454" mi="7" ci="0" mb="0" cb="0"/><line nr="486" mi="9" ci="0" mb="0" cb="0"/><line nr="519" mi="9" ci="0" mb="0" cb="0"/><line nr="552" mi="9" ci="0" mb="0" cb="0"/><line nr="585" mi="9" ci="0" mb="0" cb="0"/><line nr="600" mi="2" ci="0" mb="0" cb="0"/><line nr="616" mi="3" ci="0" mb="0" cb="0"/><line nr="629" mi="3" ci="0" mb="0" cb="0"/><line nr="642" mi="3" ci="0" mb="0" cb="0"/><line nr="657" mi="4" ci="0" mb="0" cb="0"/><line nr="672" mi="4" ci="0" mb="0" cb="0"/><line nr="694" mi="7" ci="0" mb="0" cb="0"/><line nr="719" mi="7" ci="0" mb="0" cb="0"/><line nr="748" mi="9" ci="0" mb="0" cb="0"/><line nr="778" mi="9" ci="0" mb="0" cb="0"/><line nr="808" mi="9" ci="0" mb="0" cb="0"/><line nr="838" mi="9" ci="0" mb="0" cb="0"/><line nr="856" mi="3" ci="0" mb="0" cb="0"/><line nr="871" mi="3" ci="0" mb="0" cb="0"/><line nr="885" mi="3" ci="0" mb="0" cb="0"/><line nr="900" mi="3" ci="0" mb="0" cb="0"/><line nr="916" mi="3" ci="0" mb="0" cb="0"/><line nr="934" mi="3" ci="0" mb="0" cb="0"/><line nr="949" mi="3" ci="0" mb="0" cb="0"/><line nr="965" mi="3" ci="0" mb="0" cb="0"/><line nr="983" mi="4" ci="0" mb="0" cb="0"/><line nr="1002" mi="4" ci="0" mb="0" cb="0"/><line nr="1018" mi="4" ci="0" mb="0" cb="0"/><line nr="1037" mi="4" ci="0" mb="0" cb="0"/><line nr="1055" mi="4" ci="0" mb="0" cb="0"/><line nr="1076" mi="4" ci="0" mb="0" cb="0"/><line nr="1096" mi="4" ci="0" mb="0" cb="0"/><line nr="1121" mi="4" ci="0" mb="0" cb="0"/><line nr="1141" mi="2" ci="0" mb="0" cb="0"/><line nr="1154" mi="2" ci="0" mb="0" cb="0"/><line nr="1180" mi="2" ci="0" mb="0" cb="0"/><line nr="1191" mi="2" ci="0" mb="0" cb="0"/><line nr="1202" mi="2" ci="0" mb="0" cb="0"/><line nr="1213" mi="2" ci="0" mb="0" cb="0"/><line nr="1228" mi="5" ci="0" mb="0" cb="0"/><line nr="1242" mi="5" ci="0" mb="0" cb="0"/><line nr="1253" mi="2" ci="0" mb="0" cb="0"/><line nr="1264" mi="2" ci="0" mb="0" cb="0"/><line nr="1275" mi="2" ci="0" mb="0" cb="0"/><line nr="1286" mi="2" ci="0" mb="0" cb="0"/><line nr="1301" mi="5" ci="0" mb="0" cb="0"/><line nr="1315" mi="5" ci="0" mb="0" cb="0"/><line nr="1327" mi="5" ci="0" mb="0" cb="0"/><line nr="1339" mi="5" ci="0" mb="0" cb="0"/><line nr="1350" mi="0" ci="2" mb="0" cb="0"/><line nr="1362" mi="0" ci="6" mb="0" cb="0"/><line nr="1374" mi="4" ci="0" mb="0" cb="0"/><line nr="1386" mi="4" ci="0" mb="0" cb="0"/><line nr="1398" mi="4" ci="0" mb="0" cb="0"/><line nr="1410" mi="4" ci="0" mb="0" cb="0"/><line nr="1422" mi="4" ci="0" mb="0" cb="0"/><line nr="1434" mi="0" ci="4" mb="0" cb="0"/><line nr="1447" mi="0" ci="6" mb="0" cb="0"/><line nr="1459" mi="4" ci="0" mb="0" cb="0"/><line nr="1471" mi="4" ci="0" mb="0" cb="0"/><line nr="1483" mi="4" ci="0" mb="0" cb="0"/><line nr="1495" mi="4" ci="0" mb="0" cb="0"/><line nr="1507" mi="4" ci="0" mb="0" cb="0"/><line nr="1519" mi="4" ci="0" mb="0" cb="0"/><line nr="1532" mi="6" ci="0" mb="0" cb="0"/><line nr="1544" mi="4" ci="0" mb="0" cb="0"/><line nr="1556" mi="4" ci="0" mb="0" cb="0"/><line nr="1568" mi="4" ci="0" mb="0" cb="0"/><line nr="1580" mi="4" ci="0" mb="0" cb="0"/><line nr="1592" mi="4" ci="0" mb="0" cb="0"/><line nr="1604" mi="4" ci="0" mb="0" cb="0"/><line nr="1619" mi="0" ci="7" mb="0" cb="0"/><line nr="1633" mi="5" ci="0" mb="0" cb="0"/><line nr="1647" mi="5" ci="0" mb="0" cb="0"/><line nr="1661" mi="5" ci="0" mb="0" cb="0"/><line nr="1675" mi="5" ci="0" mb="0" cb="0"/><line nr="1689" mi="5" ci="0" mb="0" cb="0"/><line nr="1703" mi="5" ci="0" mb="0" cb="0"/><line nr="1717" mi="0" ci="7" mb="0" cb="0"/><line nr="1731" mi="5" ci="0" mb="0" cb="0"/><line nr="1745" mi="5" ci="0" mb="0" cb="0"/><line nr="1759" mi="5" ci="0" mb="0" cb="0"/><line nr="1773" mi="5" ci="0" mb="0" cb="0"/><line nr="1787" mi="5" ci="0" mb="0" cb="0"/><line nr="1801" mi="5" ci="0" mb="0" cb="0"/><line nr="1816" mi="0" ci="6" mb="0" cb="0"/><line nr="1829" mi="4" ci="0" mb="0" cb="0"/><line nr="1842" mi="4" ci="0" mb="0" cb="0"/><line nr="1855" mi="4" ci="0" mb="0" cb="0"/><line nr="1868" mi="4" ci="0" mb="0" cb="0"/><line nr="1881" mi="4" ci="0" mb="0" cb="0"/><line nr="1894" mi="4" ci="0" mb="0" cb="0"/><line nr="1910" mi="7" ci="0" mb="0" cb="0"/><line nr="1925" mi="5" ci="0" mb="0" cb="0"/><line nr="1940" mi="5" ci="0" mb="0" cb="0"/><line nr="1955" mi="5" ci="0" mb="0" cb="0"/><line nr="1970" mi="5" ci="0" mb="0" cb="0"/><line nr="1985" mi="5" ci="0" mb="0" cb="0"/><line nr="2000" mi="5" ci="0" mb="0" cb="0"/><line nr="2013" mi="0" ci="6" mb="0" cb="0"/><line nr="2025" mi="4" ci="0" mb="0" cb="0"/><line nr="2037" mi="4" ci="0" mb="0" cb="0"/><line nr="2049" mi="4" ci="0" mb="0" cb="0"/><line nr="2061" mi="4" ci="0" mb="0" cb="0"/><line nr="2073" mi="4" ci="0" mb="0" cb="0"/><line nr="2085" mi="4" ci="0" mb="0" cb="0"/><line nr="2100" mi="7" ci="0" mb="0" cb="0"/><line nr="2114" mi="5" ci="0" mb="0" cb="0"/><line nr="2128" mi="5" ci="0" mb="0" cb="0"/><line nr="2142" mi="5" ci="0" mb="0" cb="0"/><line nr="2156" mi="5" ci="0" mb="0" cb="0"/><line nr="2170" mi="5" ci="0" mb="0" cb="0"/><line nr="2184" mi="5" ci="0" mb="0" cb="0"/><line nr="2198" mi="7" ci="0" mb="0" cb="0"/><line nr="2212" mi="5" ci="0" mb="0" cb="0"/><line nr="2226" mi="5" ci="0" mb="0" cb="0"/><line nr="2240" mi="5" ci="0" mb="0" cb="0"/><line nr="2254" mi="5" ci="0" mb="0" cb="0"/><line nr="2268" mi="5" ci="0" mb="0" cb="0"/><line nr="2282" mi="5" ci="0" mb="0" cb="0"/><line nr="2295" mi="0" ci="5" mb="0" cb="0"/><line nr="2309" mi="6" ci="0" mb="0" cb="0"/><line nr="2323" mi="6" ci="0" mb="0" cb="0"/><line nr="2340" mi="4" ci="0" mb="0" cb="0"/><line nr="2346" mi="0" ci="2" mb="1" cb="1"/><line nr="2347" mi="2" ci="0" mb="0" cb="0"/><line nr="2349" mi="0" ci="3" mb="0" cb="2"/><line nr="2350" mi="0" ci="3" mb="0" cb="0"/><line nr="2352" mi="0" ci="3" mb="1" cb="1"/><line nr="2353" mi="6" ci="0" mb="0" cb="0"/><line nr="2355" mi="0" ci="4" mb="0" cb="0"/><line nr="2364" mi="0" ci="2" mb="0" cb="0"/><line nr="2365" mi="0" ci="1" mb="0" cb="0"/><line nr="2369" mi="4" ci="0" mb="2" cb="0"/><line nr="2370" mi="2" ci="0" mb="0" cb="0"/><line nr="2372" mi="5" ci="0" mb="0" cb="0"/><line nr="2373" mi="10" ci="0" mb="2" cb="0"/><line nr="2374" mi="2" ci="0" mb="2" cb="0"/><line nr="2375" mi="4" ci="0" mb="2" cb="0"/><line nr="2376" mi="2" ci="0" mb="0" cb="0"/><line nr="2379" mi="1" ci="0" mb="0" cb="0"/><line nr="2380" mi="2" ci="0" mb="0" cb="0"/><line nr="2387" mi="0" ci="2" mb="0" cb="0"/><line nr="2388" mi="0" ci="1" mb="0" cb="0"/><line nr="2392" mi="4" ci="0" mb="2" cb="0"/><line nr="2393" mi="2" ci="0" mb="0" cb="0"/><line nr="2395" mi="5" ci="0" mb="0" cb="0"/><line nr="2396" mi="10" ci="0" mb="2" cb="0"/><line nr="2397" mi="2" ci="0" mb="2" cb="0"/><line nr="2398" mi="4" ci="0" mb="2" cb="0"/><line nr="2399" mi="2" ci="0" mb="0" cb="0"/><line nr="2402" mi="1" ci="0" mb="0" cb="0"/><line nr="2403" mi="2" ci="0" mb="0" cb="0"/><line nr="2410" mi="0" ci="2" mb="0" cb="0"/><line nr="2411" mi="0" ci="1" mb="0" cb="0"/><line nr="2415" mi="3" ci="0" mb="0" cb="0"/><line nr="2416" mi="10" ci="0" mb="2" cb="0"/><line nr="2417" mi="2" ci="0" mb="2" cb="0"/><line nr="2418" mi="4" ci="0" mb="0" cb="0"/><line nr="2420" mi="1" ci="0" mb="0" cb="0"/><line nr="2421" mi="2" ci="0" mb="0" cb="0"/><line nr="2431" mi="0" ci="2" mb="0" cb="0"/><line nr="2432" mi="0" ci="3" mb="0" cb="0"/><line nr="2433" mi="0" ci="3" mb="0" cb="0"/><line nr="2434" mi="0" ci="1" mb="0" cb="0"/><line nr="2437" mi="2" ci="0" mb="0" cb="0"/><line nr="2438" mi="3" ci="0" mb="0" cb="0"/><line nr="2439" mi="3" ci="0" mb="0" cb="0"/><line nr="2440" mi="3" ci="0" mb="0" cb="0"/><line nr="2441" mi="1" ci="0" mb="0" cb="0"/><line nr="2444" mi="2" ci="0" mb="0" cb="0"/><line nr="2445" mi="3" ci="0" mb="0" cb="0"/><line nr="2446" mi="3" ci="0" mb="0" cb="0"/><line nr="2447" mi="3" ci="0" mb="0" cb="0"/><line nr="2448" mi="1" ci="0" mb="0" cb="0"/><line nr="2453" mi="2" ci="0" mb="0" cb="0"/><line nr="2454" mi="3" ci="0" mb="0" cb="0"/><line nr="2455" mi="10" ci="0" mb="2" cb="0"/><line nr="2456" mi="2" ci="0" mb="2" cb="0"/><line nr="2457" mi="4" ci="0" mb="0" cb="0"/><line nr="2458" mi="1" ci="0" mb="0" cb="0"/><line nr="2460" mi="1" ci="0" mb="0" cb="0"/><line nr="2461" mi="3" ci="0" mb="2" cb="0"/><line nr="2462" mi="8" ci="0" mb="0" cb="0"/><line nr="2464" mi="3" ci="0" mb="2" cb="0"/><line nr="2465" mi="8" ci="0" mb="0" cb="0"/><line nr="2467" mi="7" ci="0" mb="0" cb="0"/><line nr="2480" mi="0" ci="2" mb="0" cb="0"/><line nr="2481" mi="0" ci="1" mb="0" cb="0"/><line nr="2485" mi="3" ci="0" mb="2" cb="0"/><line nr="2486" mi="2" ci="0" mb="0" cb="0"/><line nr="2488" mi="4" ci="0" mb="0" cb="0"/><line nr="2489" mi="16" ci="0" mb="2" cb="0"/><line nr="2490" mi="2" ci="0" mb="2" cb="0"/><line nr="2491" mi="4" ci="0" mb="2" cb="0"/><line nr="2492" mi="2" ci="0" mb="0" cb="0"/><line nr="2496" mi="2" ci="0" mb="0" cb="0"/><line nr="2503" mi="0" ci="2" mb="0" cb="0"/><line nr="2504" mi="0" ci="1" mb="0" cb="0"/><line nr="2508" mi="3" ci="0" mb="2" cb="0"/><line nr="2509" mi="2" ci="0" mb="0" cb="0"/><line nr="2511" mi="4" ci="0" mb="0" cb="0"/><line nr="2512" mi="16" ci="0" mb="2" cb="0"/><line nr="2513" mi="2" ci="0" mb="2" cb="0"/><line nr="2514" mi="4" ci="0" mb="2" cb="0"/><line nr="2515" mi="2" ci="0" mb="0" cb="0"/><line nr="2519" mi="2" ci="0" mb="0" cb="0"/><line nr="2526" mi="0" ci="2" mb="0" cb="0"/><line nr="2527" mi="0" ci="1" mb="0" cb="0"/><line nr="2531" mi="3" ci="0" mb="0" cb="0"/><line nr="2532" mi="16" ci="0" mb="2" cb="0"/><line nr="2533" mi="2" ci="0" mb="2" cb="0"/><line nr="2534" mi="4" ci="0" mb="0" cb="0"/><line nr="2537" mi="2" ci="0" mb="0" cb="0"/><line nr="2547" mi="0" ci="2" mb="0" cb="0"/><line nr="2548" mi="0" ci="3" mb="0" cb="0"/><line nr="2549" mi="0" ci="3" mb="0" cb="0"/><line nr="2550" mi="0" ci="1" mb="0" cb="0"/><line nr="2553" mi="2" ci="0" mb="0" cb="0"/><line nr="2554" mi="3" ci="0" mb="0" cb="0"/><line nr="2555" mi="3" ci="0" mb="0" cb="0"/><line nr="2556" mi="3" ci="0" mb="0" cb="0"/><line nr="2557" mi="1" ci="0" mb="0" cb="0"/><line nr="2560" mi="2" ci="0" mb="0" cb="0"/><line nr="2561" mi="3" ci="0" mb="0" cb="0"/><line nr="2562" mi="3" ci="0" mb="0" cb="0"/><line nr="2563" mi="3" ci="0" mb="0" cb="0"/><line nr="2564" mi="1" ci="0" mb="0" cb="0"/><line nr="2569" mi="2" ci="0" mb="0" cb="0"/><line nr="2570" mi="3" ci="0" mb="0" cb="0"/><line nr="2571" mi="16" ci="0" mb="2" cb="0"/><line nr="2572" mi="2" ci="0" mb="2" cb="0"/><line nr="2573" mi="4" ci="0" mb="0" cb="0"/><line nr="2574" mi="1" ci="0" mb="0" cb="0"/><line nr="2577" mi="3" ci="0" mb="2" cb="0"/><line nr="2578" mi="8" ci="0" mb="0" cb="0"/><line nr="2580" mi="3" ci="0" mb="2" cb="0"/><line nr="2581" mi="8" ci="0" mb="0" cb="0"/><line nr="2583" mi="7" ci="0" mb="0" cb="0"/><line nr="2611" mi="2" ci="0" mb="0" cb="0"/><line nr="2612" mi="3" ci="0" mb="0" cb="0"/><line nr="2613" mi="3" ci="0" mb="0" cb="0"/><line nr="2614" mi="3" ci="0" mb="0" cb="0"/><line nr="2615" mi="1" ci="0" mb="0" cb="0"/><line nr="2618" mi="2" ci="0" mb="0" cb="0"/><line nr="2619" mi="3" ci="0" mb="0" cb="0"/><line nr="2620" mi="3" ci="0" mb="0" cb="0"/><line nr="2621" mi="3" ci="0" mb="0" cb="0"/><line nr="2622" mi="1" ci="0" mb="0" cb="0"/><line nr="2626" mi="2" ci="0" mb="0" cb="0"/><line nr="2627" mi="3" ci="0" mb="2" cb="0"/><line nr="2628" mi="6" ci="0" mb="0" cb="0"/><line nr="2630" mi="5" ci="0" mb="0" cb="0"/><line nr="2637" mi="0" ci="2" mb="0" cb="0"/><line nr="2638" mi="0" ci="1" mb="0" cb="0"/><line nr="2642" mi="0" ci="3" mb="0" cb="0"/><line nr="2651" mi="0" ci="2" mb="0" cb="0"/><line nr="2652" mi="0" ci="3" mb="0" cb="0"/><line nr="2653" mi="0" ci="3" mb="0" cb="0"/><line nr="2654" mi="0" ci="1" mb="0" cb="0"/><line nr="2658" mi="0" ci="2" mb="0" cb="0"/><line nr="2659" mi="0" ci="5" mb="0" cb="0"/><line nr="2661" mi="0" ci="2" mb="0" cb="0"/><line nr="2670" mi="0" ci="2" mb="0" cb="0"/><line nr="2671" mi="0" ci="3" mb="0" cb="0"/><line nr="2672" mi="0" ci="3" mb="0" cb="0"/><line nr="2673" mi="0" ci="3" mb="0" cb="0"/><line nr="2674" mi="0" ci="1" mb="0" cb="0"/><line nr="2678" mi="0" ci="2" mb="0" cb="0"/><line nr="2679" mi="0" ci="5" mb="0" cb="0"/><line nr="2681" mi="0" ci="2" mb="0" cb="0"/><line nr="2692" mi="2" ci="0" mb="0" cb="0"/><line nr="2693" mi="3" ci="0" mb="0" cb="0"/><line nr="2694" mi="3" ci="0" mb="0" cb="0"/><line nr="2695" mi="3" ci="0" mb="0" cb="0"/><line nr="2696" mi="3" ci="0" mb="0" cb="0"/><line nr="2697" mi="1" ci="0" mb="0" cb="0"/><line nr="2700" mi="0" ci="2" mb="0" cb="0"/><line nr="2701" mi="0" ci="3" mb="0" cb="0"/><line nr="2702" mi="0" ci="3" mb="0" cb="0"/><line nr="2703" mi="0" ci="3" mb="0" cb="0"/><line nr="2704" mi="0" ci="3" mb="0" cb="0"/><line nr="2705" mi="0" ci="3" mb="0" cb="0"/><line nr="2706" mi="0" ci="1" mb="0" cb="0"/><line nr="2709" mi="0" ci="2" mb="0" cb="0"/><line nr="2710" mi="0" ci="3" mb="0" cb="0"/><line nr="2711" mi="0" ci="3" mb="0" cb="0"/><line nr="2712" mi="0" ci="3" mb="0" cb="0"/><line nr="2713" mi="0" ci="3" mb="0" cb="0"/><line nr="2714" mi="0" ci="3" mb="0" cb="0"/><line nr="2715" mi="0" ci="1" mb="0" cb="0"/><line nr="2719" mi="0" ci="2" mb="0" cb="0"/><line nr="2721" mi="0" ci="3" mb="0" cb="2"/><line nr="2722" mi="0" ci="8" mb="0" cb="0"/><line nr="2723" mi="0" ci="3" mb="1" cb="1"/><line nr="2724" mi="0" ci="8" mb="0" cb="0"/><line nr="2726" mi="6" ci="0" mb="0" cb="0"/><line nr="2728" mi="0" ci="2" mb="0" cb="0"/><line nr="2739" mi="0" ci="2" mb="0" cb="0"/><line nr="2740" mi="0" ci="3" mb="0" cb="0"/><line nr="2741" mi="0" ci="3" mb="0" cb="0"/><line nr="2742" mi="0" ci="1" mb="0" cb="0"/><line nr="2745" mi="2" ci="0" mb="0" cb="0"/><line nr="2746" mi="3" ci="0" mb="0" cb="0"/><line nr="2747" mi="3" ci="0" mb="0" cb="0"/><line nr="2748" mi="1" ci="0" mb="0" cb="0"/><line nr="2752" mi="0" ci="3" mb="1" cb="1"/><line nr="2753" mi="7" ci="0" mb="0" cb="0"/><line nr="2755" mi="0" ci="5" mb="0" cb="0"/><line nr="2766" mi="0" ci="2" mb="0" cb="0"/><line nr="2767" mi="0" ci="3" mb="0" cb="0"/><line nr="2768" mi="0" ci="3" mb="0" cb="0"/><line nr="2769" mi="0" ci="3" mb="0" cb="0"/><line nr="2770" mi="0" ci="3" mb="0" cb="0"/><line nr="2771" mi="0" ci="1" mb="0" cb="0"/><line nr="2774" mi="2" ci="0" mb="0" cb="0"/><line nr="2775" mi="3" ci="0" mb="0" cb="0"/><line nr="2776" mi="3" ci="0" mb="0" cb="0"/><line nr="2777" mi="3" ci="0" mb="0" cb="0"/><line nr="2778" mi="3" ci="0" mb="0" cb="0"/><line nr="2779" mi="3" ci="0" mb="0" cb="0"/><line nr="2780" mi="1" ci="0" mb="0" cb="0"/><line nr="2783" mi="2" ci="0" mb="0" cb="0"/><line nr="2784" mi="3" ci="0" mb="0" cb="0"/><line nr="2785" mi="3" ci="0" mb="0" cb="0"/><line nr="2786" mi="3" ci="0" mb="0" cb="0"/><line nr="2787" mi="3" ci="0" mb="0" cb="0"/><line nr="2788" mi="3" ci="0" mb="0" cb="0"/><line nr="2789" mi="1" ci="0" mb="0" cb="0"/><line nr="2793" mi="0" ci="2" mb="0" cb="0"/><line nr="2795" mi="0" ci="3" mb="1" cb="1"/><line nr="2796" mi="8" ci="0" mb="0" cb="0"/><line nr="2797" mi="0" ci="3" mb="1" cb="1"/><line nr="2798" mi="10" ci="0" mb="0" cb="0"/><line nr="2800" mi="0" ci="5" mb="0" cb="0"/><line nr="2802" mi="0" ci="2" mb="0" cb="0"/><line nr="2813" mi="0" ci="2" mb="0" cb="0"/><line nr="2814" mi="0" ci="3" mb="0" cb="0"/><line nr="2815" mi="0" ci="3" mb="0" cb="0"/><line nr="2816" mi="0" ci="3" mb="0" cb="0"/><line nr="2817" mi="0" ci="1" mb="0" cb="0"/><line nr="2820" mi="2" ci="0" mb="0" cb="0"/><line nr="2821" mi="3" ci="0" mb="0" cb="0"/><line nr="2822" mi="3" ci="0" mb="0" cb="0"/><line nr="2823" mi="3" ci="0" mb="0" cb="0"/><line nr="2824" mi="3" ci="0" mb="0" cb="0"/><line nr="2825" mi="1" ci="0" mb="0" cb="0"/><line nr="2828" mi="2" ci="0" mb="0" cb="0"/><line nr="2829" mi="3" ci="0" mb="0" cb="0"/><line nr="2830" mi="3" ci="0" mb="0" cb="0"/><line nr="2831" mi="3" ci="0" mb="0" cb="0"/><line nr="2832" mi="3" ci="0" mb="0" cb="0"/><line nr="2833" mi="1" ci="0" mb="0" cb="0"/><line nr="2837" mi="0" ci="2" mb="0" cb="0"/><line nr="2839" mi="0" ci="3" mb="1" cb="1"/><line nr="2840" mi="8" ci="0" mb="0" cb="0"/><line nr="2841" mi="0" ci="3" mb="1" cb="1"/><line nr="2842" mi="10" ci="0" mb="0" cb="0"/><line nr="2844" mi="0" ci="5" mb="0" cb="0"/><line nr="2846" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1156" covered="318"/><counter type="BRANCH" missed="66" covered="12"/><counter type="LINE" missed="283" covered="108"/><counter type="COMPLEXITY" missed="194" covered="36"/><counter type="METHOD" missed="157" covered="34"/><counter type="CLASS" missed="1" covered="16"/></sourcefile><sourcefile name="FnTuple.java"><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="6" ci="0" mb="0" cb="0"/><line nr="100" mi="6" ci="0" mb="0" cb="0"/><line nr="112" mi="7" ci="0" mb="0" cb="0"/><line nr="126" mi="8" ci="0" mb="0" cb="0"/><line nr="140" mi="9" ci="0" mb="0" cb="0"/><line nr="157" mi="10" ci="0" mb="0" cb="0"/><line nr="174" mi="11" ci="0" mb="0" cb="0"/><line nr="193" mi="12" ci="0" mb="0" cb="0"/><line nr="213" mi="13" ci="0" mb="0" cb="0"/><line nr="234" mi="14" ci="0" mb="0" cb="0"/><line nr="245" mi="4" ci="0" mb="0" cb="0"/><line nr="251" mi="4" ci="0" mb="0" cb="0"/><line nr="257" mi="4" ci="0" mb="0" cb="0"/><line nr="263" mi="5" ci="0" mb="0" cb="0"/><line nr="269" mi="5" ci="0" mb="0" cb="0"/><line nr="275" mi="5" ci="0" mb="0" cb="0"/><line nr="281" mi="4" ci="0" mb="0" cb="0"/><line nr="287" mi="0" ci="4" mb="0" cb="0"/><line nr="293" mi="4" ci="0" mb="0" cb="0"/><line nr="299" mi="4" ci="0" mb="0" cb="0"/><line nr="305" mi="4" ci="0" mb="0" cb="0"/><line nr="311" mi="4" ci="0" mb="0" cb="0"/><line nr="317" mi="4" ci="0" mb="0" cb="0"/><line nr="323" mi="4" ci="0" mb="0" cb="0"/><line nr="329" mi="4" ci="0" mb="0" cb="0"/><line nr="335" mi="4" ci="0" mb="0" cb="0"/><line nr="341" mi="4" ci="0" mb="0" cb="0"/><line nr="347" mi="4" ci="0" mb="0" cb="0"/><line nr="353" mi="4" ci="0" mb="0" cb="0"/><line nr="374" mi="2" ci="0" mb="0" cb="0"/><line nr="376" mi="3" ci="0" mb="0" cb="0"/><line nr="378" mi="1" ci="0" mb="0" cb="0"/><line nr="383" mi="6" ci="0" mb="0" cb="0"/><line nr="384" mi="1" ci="0" mb="0" cb="0"/><line nr="405" mi="0" ci="2" mb="0" cb="0"/><line nr="407" mi="0" ci="3" mb="0" cb="0"/><line nr="408" mi="0" ci="3" mb="0" cb="0"/><line nr="410" mi="0" ci="1" mb="0" cb="0"/><line nr="415" mi="0" ci="6" mb="0" cb="0"/><line nr="416" mi="0" ci="5" mb="0" cb="0"/><line nr="417" mi="0" ci="1" mb="0" cb="0"/><line nr="437" mi="2" ci="0" mb="0" cb="0"/><line nr="439" mi="3" ci="0" mb="0" cb="0"/><line nr="440" mi="3" ci="0" mb="0" cb="0"/><line nr="442" mi="1" ci="0" mb="0" cb="0"/><line nr="447" mi="6" ci="0" mb="0" cb="0"/><line nr="448" mi="5" ci="0" mb="0" cb="0"/><line nr="449" mi="1" ci="0" mb="0" cb="0"/><line nr="469" mi="2" ci="0" mb="0" cb="0"/><line nr="471" mi="3" ci="0" mb="0" cb="0"/><line nr="472" mi="3" ci="0" mb="0" cb="0"/><line nr="474" mi="1" ci="0" mb="0" cb="0"/><line nr="479" mi="6" ci="0" mb="0" cb="0"/><line nr="480" mi="5" ci="0" mb="0" cb="0"/><line nr="481" mi="1" ci="0" mb="0" cb="0"/><line nr="502" mi="2" ci="0" mb="0" cb="0"/><line nr="504" mi="3" ci="0" mb="0" cb="0"/><line nr="505" mi="3" ci="0" mb="0" cb="0"/><line nr="506" mi="3" ci="0" mb="0" cb="0"/><line nr="508" mi="1" ci="0" mb="0" cb="0"/><line nr="513" mi="6" ci="0" mb="0" cb="0"/><line nr="514" mi="5" ci="0" mb="0" cb="0"/><line nr="515" mi="5" ci="0" mb="0" cb="0"/><line nr="516" mi="1" ci="0" mb="0" cb="0"/><line nr="539" mi="2" ci="0" mb="0" cb="0"/><line nr="541" mi="3" ci="0" mb="0" cb="0"/><line nr="542" mi="3" ci="0" mb="0" cb="0"/><line nr="543" mi="3" ci="0" mb="0" cb="0"/><line nr="544" mi="3" ci="0" mb="0" cb="0"/><line nr="546" mi="1" ci="0" mb="0" cb="0"/><line nr="551" mi="6" ci="0" mb="0" cb="0"/><line nr="552" mi="5" ci="0" mb="0" cb="0"/><line nr="553" mi="5" ci="0" mb="0" cb="0"/><line nr="554" mi="5" ci="0" mb="0" cb="0"/><line nr="555" mi="1" ci="0" mb="0" cb="0"/><line nr="581" mi="2" ci="0" mb="0" cb="0"/><line nr="583" mi="3" ci="0" mb="0" cb="0"/><line nr="584" mi="3" ci="0" mb="0" cb="0"/><line nr="585" mi="3" ci="0" mb="0" cb="0"/><line nr="586" mi="3" ci="0" mb="0" cb="0"/><line nr="587" mi="3" ci="0" mb="0" cb="0"/><line nr="589" mi="1" ci="0" mb="0" cb="0"/><line nr="594" mi="6" ci="0" mb="0" cb="0"/><line nr="595" mi="5" ci="0" mb="0" cb="0"/><line nr="596" mi="5" ci="0" mb="0" cb="0"/><line nr="597" mi="5" ci="0" mb="0" cb="0"/><line nr="598" mi="5" ci="0" mb="0" cb="0"/><line nr="599" mi="1" ci="0" mb="0" cb="0"/><line nr="626" mi="2" ci="0" mb="0" cb="0"/><line nr="628" mi="3" ci="0" mb="0" cb="0"/><line nr="629" mi="3" ci="0" mb="0" cb="0"/><line nr="630" mi="3" ci="0" mb="0" cb="0"/><line nr="631" mi="3" ci="0" mb="0" cb="0"/><line nr="632" mi="3" ci="0" mb="0" cb="0"/><line nr="633" mi="3" ci="0" mb="0" cb="0"/><line nr="635" mi="1" ci="0" mb="0" cb="0"/><line nr="640" mi="6" ci="0" mb="0" cb="0"/><line nr="641" mi="5" ci="0" mb="0" cb="0"/><line nr="642" mi="5" ci="0" mb="0" cb="0"/><line nr="643" mi="5" ci="0" mb="0" cb="0"/><line nr="644" mi="5" ci="0" mb="0" cb="0"/><line nr="645" mi="5" ci="0" mb="0" cb="0"/><line nr="646" mi="1" ci="0" mb="0" cb="0"/><line nr="677" mi="2" ci="0" mb="0" cb="0"/><line nr="679" mi="3" ci="0" mb="0" cb="0"/><line nr="680" mi="3" ci="0" mb="0" cb="0"/><line nr="681" mi="3" ci="0" mb="0" cb="0"/><line nr="682" mi="3" ci="0" mb="0" cb="0"/><line nr="683" mi="3" ci="0" mb="0" cb="0"/><line nr="684" mi="3" ci="0" mb="0" cb="0"/><line nr="685" mi="3" ci="0" mb="0" cb="0"/><line nr="687" mi="1" ci="0" mb="0" cb="0"/><line nr="692" mi="6" ci="0" mb="0" cb="0"/><line nr="693" mi="5" ci="0" mb="0" cb="0"/><line nr="694" mi="5" ci="0" mb="0" cb="0"/><line nr="695" mi="5" ci="0" mb="0" cb="0"/><line nr="696" mi="5" ci="0" mb="0" cb="0"/><line nr="697" mi="5" ci="0" mb="0" cb="0"/><line nr="698" mi="5" ci="0" mb="0" cb="0"/><line nr="699" mi="1" ci="0" mb="0" cb="0"/><line nr="734" mi="2" ci="0" mb="0" cb="0"/><line nr="736" mi="3" ci="0" mb="0" cb="0"/><line nr="737" mi="3" ci="0" mb="0" cb="0"/><line nr="738" mi="3" ci="0" mb="0" cb="0"/><line nr="739" mi="3" ci="0" mb="0" cb="0"/><line nr="740" mi="3" ci="0" mb="0" cb="0"/><line nr="741" mi="3" ci="0" mb="0" cb="0"/><line nr="742" mi="3" ci="0" mb="0" cb="0"/><line nr="743" mi="3" ci="0" mb="0" cb="0"/><line nr="745" mi="1" ci="0" mb="0" cb="0"/><line nr="750" mi="6" ci="0" mb="0" cb="0"/><line nr="751" mi="5" ci="0" mb="0" cb="0"/><line nr="752" mi="5" ci="0" mb="0" cb="0"/><line nr="753" mi="5" ci="0" mb="0" cb="0"/><line nr="754" mi="5" ci="0" mb="0" cb="0"/><line nr="755" mi="5" ci="0" mb="0" cb="0"/><line nr="756" mi="5" ci="0" mb="0" cb="0"/><line nr="757" mi="5" ci="0" mb="0" cb="0"/><line nr="758" mi="1" ci="0" mb="0" cb="0"/><line nr="794" mi="2" ci="0" mb="0" cb="0"/><line nr="796" mi="3" ci="0" mb="0" cb="0"/><line nr="797" mi="3" ci="0" mb="0" cb="0"/><line nr="798" mi="3" ci="0" mb="0" cb="0"/><line nr="799" mi="3" ci="0" mb="0" cb="0"/><line nr="800" mi="3" ci="0" mb="0" cb="0"/><line nr="801" mi="3" ci="0" mb="0" cb="0"/><line nr="802" mi="3" ci="0" mb="0" cb="0"/><line nr="803" mi="3" ci="0" mb="0" cb="0"/><line nr="804" mi="3" ci="0" mb="0" cb="0"/><line nr="806" mi="1" ci="0" mb="0" cb="0"/><line nr="811" mi="6" ci="0" mb="0" cb="0"/><line nr="812" mi="5" ci="0" mb="0" cb="0"/><line nr="813" mi="5" ci="0" mb="0" cb="0"/><line nr="814" mi="5" ci="0" mb="0" cb="0"/><line nr="815" mi="5" ci="0" mb="0" cb="0"/><line nr="816" mi="5" ci="0" mb="0" cb="0"/><line nr="817" mi="5" ci="0" mb="0" cb="0"/><line nr="818" mi="5" ci="0" mb="0" cb="0"/><line nr="819" mi="5" ci="0" mb="0" cb="0"/><line nr="820" mi="1" ci="0" mb="0" cb="0"/><line nr="855" mi="2" ci="0" mb="0" cb="0"/><line nr="857" mi="3" ci="0" mb="0" cb="0"/><line nr="858" mi="3" ci="0" mb="0" cb="0"/><line nr="859" mi="3" ci="0" mb="0" cb="0"/><line nr="860" mi="3" ci="0" mb="0" cb="0"/><line nr="861" mi="3" ci="0" mb="0" cb="0"/><line nr="862" mi="3" ci="0" mb="0" cb="0"/><line nr="863" mi="3" ci="0" mb="0" cb="0"/><line nr="864" mi="3" ci="0" mb="0" cb="0"/><line nr="865" mi="3" ci="0" mb="0" cb="0"/><line nr="866" mi="3" ci="0" mb="0" cb="0"/><line nr="868" mi="1" ci="0" mb="0" cb="0"/><line nr="873" mi="6" ci="0" mb="0" cb="0"/><line nr="874" mi="5" ci="0" mb="0" cb="0"/><line nr="875" mi="5" ci="0" mb="0" cb="0"/><line nr="876" mi="5" ci="0" mb="0" cb="0"/><line nr="877" mi="5" ci="0" mb="0" cb="0"/><line nr="878" mi="5" ci="0" mb="0" cb="0"/><line nr="879" mi="5" ci="0" mb="0" cb="0"/><line nr="880" mi="5" ci="0" mb="0" cb="0"/><line nr="881" mi="5" ci="0" mb="0" cb="0"/><line nr="882" mi="5" ci="0" mb="0" cb="0"/><line nr="883" mi="1" ci="0" mb="0" cb="0"/><line nr="895" mi="2" ci="0" mb="0" cb="0"/><line nr="896" mi="1" ci="0" mb="0" cb="0"/><line nr="901" mi="3" ci="0" mb="0" cb="0"/><line nr="913" mi="2" ci="0" mb="0" cb="0"/><line nr="914" mi="1" ci="0" mb="0" cb="0"/><line nr="919" mi="3" ci="0" mb="0" cb="0"/><line nr="931" mi="2" ci="0" mb="0" cb="0"/><line nr="932" mi="1" ci="0" mb="0" cb="0"/><line nr="937" mi="4" ci="0" mb="0" cb="0"/><line nr="951" mi="2" ci="0" mb="0" cb="0"/><line nr="952" mi="3" ci="0" mb="0" cb="0"/><line nr="953" mi="1" ci="0" mb="0" cb="0"/><line nr="958" mi="6" ci="0" mb="0" cb="0"/><line nr="972" mi="2" ci="0" mb="0" cb="0"/><line nr="973" mi="6" ci="0" mb="0" cb="0"/><line nr="974" mi="1" ci="0" mb="0" cb="0"/><line nr="977" mi="2" ci="0" mb="0" cb="0"/><line nr="978" mi="4" ci="0" mb="0" cb="0"/><line nr="979" mi="1" ci="0" mb="0" cb="0"/><line nr="984" mi="6" ci="0" mb="0" cb="0"/><line nr="996" mi="2" ci="0" mb="0" cb="0"/><line nr="997" mi="1" ci="0" mb="0" cb="0"/><line nr="1002" mi="3" ci="0" mb="0" cb="0"/><line nr="1014" mi="0" ci="2" mb="0" cb="0"/><line nr="1015" mi="0" ci="1" mb="0" cb="0"/><line nr="1020" mi="0" ci="3" mb="0" cb="0"/><line nr="1032" mi="2" ci="0" mb="0" cb="0"/><line nr="1033" mi="1" ci="0" mb="0" cb="0"/><line nr="1038" mi="3" ci="0" mb="0" cb="0"/><line nr="1050" mi="2" ci="0" mb="0" cb="0"/><line nr="1051" mi="1" ci="0" mb="0" cb="0"/><line nr="1056" mi="3" ci="0" mb="0" cb="0"/><line nr="1068" mi="2" ci="0" mb="0" cb="0"/><line nr="1069" mi="1" ci="0" mb="0" cb="0"/><line nr="1074" mi="3" ci="0" mb="0" cb="0"/><line nr="1086" mi="2" ci="0" mb="0" cb="0"/><line nr="1087" mi="1" ci="0" mb="0" cb="0"/><line nr="1092" mi="3" ci="0" mb="0" cb="0"/><line nr="1104" mi="2" ci="0" mb="0" cb="0"/><line nr="1105" mi="1" ci="0" mb="0" cb="0"/><line nr="1110" mi="3" ci="0" mb="0" cb="0"/><line nr="1122" mi="2" ci="0" mb="0" cb="0"/><line nr="1123" mi="1" ci="0" mb="0" cb="0"/><line nr="1128" mi="3" ci="0" mb="0" cb="0"/><line nr="1140" mi="2" ci="0" mb="0" cb="0"/><line nr="1141" mi="1" ci="0" mb="0" cb="0"/><line nr="1146" mi="3" ci="0" mb="0" cb="0"/><line nr="1158" mi="2" ci="0" mb="0" cb="0"/><line nr="1159" mi="1" ci="0" mb="0" cb="0"/><line nr="1164" mi="3" ci="0" mb="0" cb="0"/><line nr="1176" mi="2" ci="0" mb="0" cb="0"/><line nr="1177" mi="1" ci="0" mb="0" cb="0"/><line nr="1182" mi="3" ci="0" mb="0" cb="0"/><line nr="1194" mi="2" ci="0" mb="0" cb="0"/><line nr="1195" mi="1" ci="0" mb="0" cb="0"/><line nr="1200" mi="3" ci="0" mb="0" cb="0"/><line nr="1212" mi="2" ci="0" mb="0" cb="0"/><line nr="1213" mi="1" ci="0" mb="0" cb="0"/><line nr="1218" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="812" covered="37"/><counter type="LINE" missed="232" covered="12"/><counter type="COMPLEXITY" missed="86" covered="6"/><counter type="METHOD" missed="86" covered="6"/><counter type="CLASS" missed="28" covered="3"/></sourcefile><sourcefile name="FnNumber.java"><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="6" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="6" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="6" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="5" ci="0" mb="0" cb="0"/><line nr="238" mi="2" ci="0" mb="0" cb="0"/><line nr="250" mi="5" ci="0" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="279" mi="6" ci="0" mb="0" cb="0"/><line nr="293" mi="6" ci="0" mb="0" cb="0"/><line nr="307" mi="6" ci="0" mb="0" cb="0"/><line nr="331" mi="4" ci="0" mb="0" cb="0"/><line nr="343" mi="5" ci="0" mb="0" cb="0"/><line nr="355" mi="5" ci="0" mb="0" cb="0"/><line nr="367" mi="5" ci="0" mb="0" cb="0"/><line nr="382" mi="6" ci="0" mb="0" cb="0"/><line nr="396" mi="6" ci="0" mb="0" cb="0"/><line nr="420" mi="11" ci="0" mb="0" cb="0"/><line nr="446" mi="11" ci="0" mb="0" cb="0"/><line nr="477" mi="14" ci="0" mb="0" cb="0"/><line nr="508" mi="13" ci="0" mb="0" cb="0"/><line nr="539" mi="14" ci="0" mb="0" cb="0"/><line nr="570" mi="13" ci="0" mb="0" cb="0"/><line nr="588" mi="5" ci="0" mb="0" cb="0"/><line nr="602" mi="6" ci="0" mb="0" cb="0"/><line nr="616" mi="6" ci="0" mb="0" cb="0"/><line nr="629" mi="6" ci="0" mb="0" cb="0"/><line nr="643" mi="7" ci="0" mb="0" cb="0"/><line nr="657" mi="7" ci="0" mb="0" cb="0"/><line nr="683" mi="11" ci="0" mb="0" cb="0"/><line nr="711" mi="11" ci="0" mb="0" cb="0"/><line nr="743" mi="14" ci="0" mb="0" cb="0"/><line nr="776" mi="13" ci="0" mb="0" cb="0"/><line nr="809" mi="14" ci="0" mb="0" cb="0"/><line nr="842" mi="13" ci="0" mb="0" cb="0"/><line nr="859" mi="5" ci="0" mb="0" cb="0"/><line nr="875" mi="6" ci="0" mb="0" cb="0"/><line nr="887" mi="6" ci="0" mb="0" cb="0"/><line nr="899" mi="6" ci="0" mb="0" cb="0"/><line nr="913" mi="7" ci="0" mb="0" cb="0"/><line nr="927" mi="7" ci="0" mb="0" cb="0"/><line nr="948" mi="11" ci="0" mb="0" cb="0"/><line nr="972" mi="11" ci="0" mb="0" cb="0"/><line nr="1000" mi="14" ci="0" mb="0" cb="0"/><line nr="1029" mi="13" ci="0" mb="0" cb="0"/><line nr="1058" mi="14" ci="0" mb="0" cb="0"/><line nr="1087" mi="13" ci="0" mb="0" cb="0"/><line nr="1109" mi="3" ci="0" mb="0" cb="0"/><line nr="1123" mi="3" ci="0" mb="0" cb="0"/><line nr="1137" mi="3" ci="0" mb="0" cb="0"/><line nr="1151" mi="3" ci="0" mb="0" cb="0"/><line nr="1165" mi="3" ci="0" mb="0" cb="0"/><line nr="1179" mi="3" ci="0" mb="0" cb="0"/><line nr="1192" mi="3" ci="0" mb="0" cb="0"/><line nr="1207" mi="3" ci="0" mb="0" cb="0"/><line nr="1222" mi="3" ci="0" mb="0" cb="0"/><line nr="1237" mi="3" ci="0" mb="0" cb="0"/><line nr="1252" mi="3" ci="0" mb="0" cb="0"/><line nr="1267" mi="3" ci="0" mb="0" cb="0"/><line nr="1282" mi="3" ci="0" mb="0" cb="0"/><line nr="1297" mi="3" ci="0" mb="0" cb="0"/><line nr="1312" mi="3" ci="0" mb="0" cb="0"/><line nr="1326" mi="3" ci="0" mb="0" cb="0"/><line nr="1340" mi="3" ci="0" mb="0" cb="0"/><line nr="1354" mi="3" ci="0" mb="0" cb="0"/><line nr="1368" mi="3" ci="0" mb="0" cb="0"/><line nr="1382" mi="0" ci="3" mb="0" cb="0"/><line nr="1396" mi="3" ci="0" mb="0" cb="0"/><line nr="1411" mi="3" ci="0" mb="0" cb="0"/><line nr="1426" mi="3" ci="0" mb="0" cb="0"/><line nr="1441" mi="3" ci="0" mb="0" cb="0"/><line nr="1456" mi="3" ci="0" mb="0" cb="0"/><line nr="1471" mi="3" ci="0" mb="0" cb="0"/><line nr="1486" mi="3" ci="0" mb="0" cb="0"/><line nr="1501" mi="3" ci="0" mb="0" cb="0"/><line nr="1518" mi="3" ci="0" mb="0" cb="0"/><line nr="1534" mi="3" ci="0" mb="0" cb="0"/><line nr="1550" mi="3" ci="0" mb="0" cb="0"/><line nr="1566" mi="3" ci="0" mb="0" cb="0"/><line nr="1582" mi="3" ci="0" mb="0" cb="0"/><line nr="1598" mi="3" ci="0" mb="0" cb="0"/><line nr="1614" mi="3" ci="0" mb="0" cb="0"/><line nr="1632" mi="3" ci="0" mb="0" cb="0"/><line nr="1648" mi="3" ci="0" mb="0" cb="0"/><line nr="1664" mi="3" ci="0" mb="0" cb="0"/><line nr="1680" mi="3" ci="0" mb="0" cb="0"/><line nr="1696" mi="3" ci="0" mb="0" cb="0"/><line nr="1712" mi="0" ci="3" mb="0" cb="0"/><line nr="1728" mi="3" ci="0" mb="0" cb="0"/><line nr="1752" mi="3" ci="0" mb="0" cb="0"/><line nr="1768" mi="3" ci="0" mb="0" cb="0"/><line nr="1784" mi="3" ci="0" mb="0" cb="0"/><line nr="1800" mi="3" ci="0" mb="0" cb="0"/><line nr="1816" mi="3" ci="0" mb="0" cb="0"/><line nr="1832" mi="0" ci="3" mb="0" cb="0"/><line nr="1848" mi="3" ci="0" mb="0" cb="0"/><line nr="1866" mi="3" ci="0" mb="0" cb="0"/><line nr="1882" mi="3" ci="0" mb="0" cb="0"/><line nr="1898" mi="3" ci="0" mb="0" cb="0"/><line nr="1914" mi="3" ci="0" mb="0" cb="0"/><line nr="1930" mi="3" ci="0" mb="0" cb="0"/><line nr="1946" mi="3" ci="0" mb="0" cb="0"/><line nr="1962" mi="3" ci="0" mb="0" cb="0"/><line nr="1978" mi="4" ci="0" mb="0" cb="0"/><line nr="1994" mi="4" ci="0" mb="0" cb="0"/><line nr="2010" mi="4" ci="0" mb="0" cb="0"/><line nr="2026" mi="4" ci="0" mb="0" cb="0"/><line nr="2042" mi="4" ci="0" mb="0" cb="0"/><line nr="2058" mi="4" ci="0" mb="0" cb="0"/><line nr="2074" mi="4" ci="0" mb="0" cb="0"/><line nr="2092" mi="4" ci="0" mb="0" cb="0"/><line nr="2110" mi="4" ci="0" mb="0" cb="0"/><line nr="2128" mi="4" ci="0" mb="0" cb="0"/><line nr="2146" mi="4" ci="0" mb="0" cb="0"/><line nr="2164" mi="4" ci="0" mb="0" cb="0"/><line nr="2182" mi="4" ci="0" mb="0" cb="0"/><line nr="2200" mi="4" ci="0" mb="0" cb="0"/><line nr="2217" mi="4" ci="0" mb="0" cb="0"/><line nr="2233" mi="4" ci="0" mb="0" cb="0"/><line nr="2249" mi="4" ci="0" mb="0" cb="0"/><line nr="2265" mi="4" ci="0" mb="0" cb="0"/><line nr="2281" mi="4" ci="0" mb="0" cb="0"/><line nr="2297" mi="4" ci="0" mb="0" cb="0"/><line nr="2313" mi="4" ci="0" mb="0" cb="0"/><line nr="2331" mi="4" ci="0" mb="0" cb="0"/><line nr="2349" mi="4" ci="0" mb="0" cb="0"/><line nr="2367" mi="4" ci="0" mb="0" cb="0"/><line nr="2385" mi="4" ci="0" mb="0" cb="0"/><line nr="2403" mi="4" ci="0" mb="0" cb="0"/><line nr="2421" mi="4" ci="0" mb="0" cb="0"/><line nr="2439" mi="4" ci="0" mb="0" cb="0"/><line nr="2457" mi="4" ci="0" mb="0" cb="0"/><line nr="2474" mi="4" ci="0" mb="0" cb="0"/><line nr="2491" mi="4" ci="0" mb="0" cb="0"/><line nr="2508" mi="4" ci="0" mb="0" cb="0"/><line nr="2525" mi="4" ci="0" mb="0" cb="0"/><line nr="2542" mi="4" ci="0" mb="0" cb="0"/><line nr="2559" mi="4" ci="0" mb="0" cb="0"/><line nr="2578" mi="4" ci="0" mb="0" cb="0"/><line nr="2595" mi="4" ci="0" mb="0" cb="0"/><line nr="2612" mi="4" ci="0" mb="0" cb="0"/><line nr="2629" mi="4" ci="0" mb="0" cb="0"/><line nr="2646" mi="4" ci="0" mb="0" cb="0"/><line nr="2663" mi="4" ci="0" mb="0" cb="0"/><line nr="2680" mi="4" ci="0" mb="0" cb="0"/><line nr="2705" mi="4" ci="0" mb="0" cb="0"/><line nr="2722" mi="4" ci="0" mb="0" cb="0"/><line nr="2739" mi="4" ci="0" mb="0" cb="0"/><line nr="2756" mi="4" ci="0" mb="0" cb="0"/><line nr="2773" mi="4" ci="0" mb="0" cb="0"/><line nr="2790" mi="4" ci="0" mb="0" cb="0"/><line nr="2807" mi="4" ci="0" mb="0" cb="0"/><line nr="2826" mi="4" ci="0" mb="0" cb="0"/><line nr="2843" mi="4" ci="0" mb="0" cb="0"/><line nr="2860" mi="4" ci="0" mb="0" cb="0"/><line nr="2877" mi="4" ci="0" mb="0" cb="0"/><line nr="2894" mi="4" ci="0" mb="0" cb="0"/><line nr="2911" mi="4" ci="0" mb="0" cb="0"/><line nr="2928" mi="4" ci="0" mb="0" cb="0"/><line nr="2940" mi="2" ci="0" mb="0" cb="0"/><line nr="2953" mi="2" ci="0" mb="0" cb="0"/><line nr="2971" mi="4" ci="0" mb="0" cb="0"/><line nr="2988" mi="4" ci="0" mb="0" cb="0"/><line nr="3005" mi="4" ci="0" mb="0" cb="0"/><line nr="3022" mi="4" ci="0" mb="0" cb="0"/><line nr="3039" mi="4" ci="0" mb="0" cb="0"/><line nr="3056" mi="4" ci="0" mb="0" cb="0"/><line nr="3073" mi="4" ci="0" mb="0" cb="0"/><line nr="3081" mi="0" ci="2" mb="0" cb="0"/><line nr="3082" mi="0" ci="1" mb="0" cb="0"/><line nr="3086" mi="0" ci="4" mb="0" cb="0"/><line nr="3102" mi="0" ci="2" mb="0" cb="0"/><line nr="3103" mi="0" ci="3" mb="0" cb="0"/><line nr="3104" mi="0" ci="1" mb="0" cb="0"/><line nr="3108" mi="0" ci="2" mb="0" cb="0"/><line nr="3109" mi="0" ci="3" mb="0" cb="0"/><line nr="3110" mi="0" ci="1" mb="0" cb="0"/><line nr="3116" mi="0" ci="3" mb="0" cb="2"/><line nr="3117" mi="0" ci="4" mb="0" cb="0"/><line nr="3120" mi="0" ci="3" mb="0" cb="0"/><line nr="3121" mi="0" ci="3" mb="0" cb="0"/><line nr="3122" mi="0" ci="6" mb="0" cb="0"/><line nr="3123" mi="0" ci="4" mb="0" cb="0"/><line nr="3141" mi="0" ci="2" mb="0" cb="0"/><line nr="3142" mi="0" ci="3" mb="0" cb="0"/><line nr="3143" mi="0" ci="3" mb="0" cb="0"/><line nr="3144" mi="0" ci="1" mb="0" cb="0"/><line nr="3148" mi="2" ci="0" mb="0" cb="0"/><line nr="3149" mi="3" ci="0" mb="0" cb="0"/><line nr="3150" mi="3" ci="0" mb="0" cb="0"/><line nr="3151" mi="3" ci="0" mb="0" cb="0"/><line nr="3152" mi="1" ci="0" mb="0" cb="0"/><line nr="3158" mi="0" ci="3" mb="1" cb="1"/><line nr="3159" mi="0" ci="4" mb="0" cb="0"/><line nr="3162" mi="2" ci="0" mb="0" cb="0"/><line nr="3163" mi="3" ci="0" mb="2" cb="0"/><line nr="3164" mi="4" ci="0" mb="0" cb="0"/><line nr="3165" mi="3" ci="0" mb="2" cb="0"/><line nr="3166" mi="7" ci="0" mb="0" cb="0"/><line nr="3168" mi="6" ci="0" mb="0" cb="0"/><line nr="3170" mi="7" ci="0" mb="0" cb="0"/><line nr="3171" mi="4" ci="0" mb="0" cb="0"/><line nr="3187" mi="0" ci="2" mb="0" cb="0"/><line nr="3188" mi="0" ci="1" mb="0" cb="0"/><line nr="3191" mi="4" ci="0" mb="0" cb="0"/><line nr="3192" mi="1" ci="0" mb="0" cb="0"/><line nr="3197" mi="0" ci="3" mb="1" cb="1"/><line nr="3198" mi="5" ci="0" mb="0" cb="0"/><line nr="3199" mi="3" ci="0" mb="0" cb="0"/><line nr="3200" mi="2" ci="0" mb="0" cb="0"/><line nr="3201" mi="0" ci="3" mb="1" cb="1"/><line nr="3202" mi="6" ci="0" mb="0" cb="0"/><line nr="3204" mi="0" ci="4" mb="0" cb="0"/><line nr="3216" mi="0" ci="2" mb="0" cb="0"/><line nr="3217" mi="0" ci="1" mb="0" cb="0"/><line nr="3220" mi="4" ci="0" mb="0" cb="0"/><line nr="3221" mi="1" ci="0" mb="0" cb="0"/><line nr="3226" mi="4" ci="0" mb="0" cb="0"/><line nr="3237" mi="0" ci="2" mb="0" cb="0"/><line nr="3238" mi="0" ci="1" mb="0" cb="0"/><line nr="3241" mi="4" ci="0" mb="0" cb="0"/><line nr="3242" mi="1" ci="0" mb="0" cb="0"/><line nr="3247" mi="0" ci="4" mb="0" cb="0"/><line nr="3258" mi="0" ci="2" mb="0" cb="0"/><line nr="3259" mi="0" ci="1" mb="0" cb="0"/><line nr="3262" mi="3" ci="0" mb="0" cb="0"/><line nr="3263" mi="1" ci="0" mb="0" cb="0"/><line nr="3268" mi="0" ci="3" mb="1" cb="1"/><line nr="3269" mi="7" ci="0" mb="0" cb="0"/><line nr="3270" mi="0" ci="3" mb="1" cb="1"/><line nr="3271" mi="4" ci="0" mb="0" cb="0"/><line nr="3272" mi="0" ci="3" mb="0" cb="2"/><line nr="3273" mi="0" ci="5" mb="0" cb="0"/><line nr="3274" mi="0" ci="3" mb="1" cb="1"/><line nr="3275" mi="5" ci="0" mb="0" cb="0"/><line nr="3277" mi="0" ci="4" mb="0" cb="0"/><line nr="3287" mi="0" ci="2" mb="0" cb="0"/><line nr="3288" mi="0" ci="1" mb="0" cb="0"/><line nr="3291" mi="0" ci="3" mb="0" cb="0"/><line nr="3292" mi="0" ci="1" mb="0" cb="0"/><line nr="3296" mi="0" ci="4" mb="0" cb="0"/><line nr="3306" mi="0" ci="2" mb="0" cb="0"/><line nr="3307" mi="0" ci="1" mb="0" cb="0"/><line nr="3310" mi="0" ci="3" mb="0" cb="0"/><line nr="3311" mi="0" ci="1" mb="0" cb="0"/><line nr="3315" mi="0" ci="4" mb="0" cb="0"/><line nr="3325" mi="0" ci="2" mb="0" cb="0"/><line nr="3326" mi="0" ci="1" mb="0" cb="0"/><line nr="3329" mi="3" ci="0" mb="0" cb="0"/><line nr="3330" mi="1" ci="0" mb="0" cb="0"/><line nr="3334" mi="0" ci="4" mb="0" cb="0"/><line nr="3344" mi="0" ci="2" mb="0" cb="0"/><line nr="3345" mi="0" ci="1" mb="0" cb="0"/><line nr="3348" mi="3" ci="0" mb="0" cb="0"/><line nr="3349" mi="1" ci="0" mb="0" cb="0"/><line nr="3353" mi="4" ci="0" mb="0" cb="0"/><line nr="3364" mi="0" ci="2" mb="0" cb="0"/><line nr="3365" mi="0" ci="1" mb="0" cb="0"/><line nr="3370" mi="2" ci="8" mb="1" cb="1"/><line nr="3384" mi="2" ci="0" mb="0" cb="0"/><line nr="3385" mi="7" ci="0" mb="0" cb="0"/><line nr="3386" mi="1" ci="0" mb="0" cb="0"/><line nr="3391" mi="7" ci="0" mb="0" cb="0"/><line nr="3403" mi="2" ci="0" mb="0" cb="0"/><line nr="3404" mi="7" ci="0" mb="0" cb="0"/><line nr="3405" mi="1" ci="0" mb="0" cb="0"/><line nr="3410" mi="7" ci="0" mb="0" cb="0"/><line nr="3422" mi="2" ci="0" mb="0" cb="0"/><line nr="3423" mi="7" ci="0" mb="0" cb="0"/><line nr="3424" mi="1" ci="0" mb="0" cb="0"/><line nr="3429" mi="7" ci="0" mb="0" cb="0"/><line nr="3451" mi="2" ci="0" mb="0" cb="0"/><line nr="3452" mi="6" ci="0" mb="0" cb="0"/><line nr="3453" mi="1" ci="0" mb="0" cb="0"/><line nr="3456" mi="2" ci="0" mb="0" cb="0"/><line nr="3458" mi="6" ci="0" mb="0" cb="0"/><line nr="3459" mi="3" ci="0" mb="0" cb="0"/><line nr="3460" mi="1" ci="0" mb="0" cb="0"/><line nr="3463" mi="2" ci="0" mb="0" cb="0"/><line nr="3464" mi="6" ci="0" mb="0" cb="0"/><line nr="3465" mi="3" ci="0" mb="0" cb="0"/><line nr="3466" mi="1" ci="0" mb="0" cb="0"/><line nr="3469" mi="2" ci="0" mb="0" cb="0"/><line nr="3471" mi="3" ci="0" mb="0" cb="0"/><line nr="3473" mi="6" ci="0" mb="0" cb="0"/><line nr="3474" mi="1" ci="0" mb="0" cb="0"/><line nr="3477" mi="2" ci="0" mb="0" cb="0"/><line nr="3479" mi="3" ci="0" mb="0" cb="0"/><line nr="3481" mi="6" ci="0" mb="0" cb="0"/><line nr="3482" mi="1" ci="0" mb="0" cb="0"/><line nr="3485" mi="2" ci="0" mb="0" cb="0"/><line nr="3487" mi="3" ci="0" mb="0" cb="0"/><line nr="3489" mi="7" ci="0" mb="0" cb="0"/><line nr="3490" mi="1" ci="0" mb="0" cb="0"/><line nr="3493" mi="2" ci="0" mb="0" cb="0"/><line nr="3495" mi="3" ci="0" mb="0" cb="0"/><line nr="3497" mi="6" ci="0" mb="0" cb="0"/><line nr="3498" mi="3" ci="0" mb="0" cb="0"/><line nr="3499" mi="1" ci="0" mb="0" cb="0"/><line nr="3502" mi="2" ci="0" mb="0" cb="0"/><line nr="3504" mi="3" ci="0" mb="0" cb="0"/><line nr="3506" mi="7" ci="0" mb="0" cb="0"/><line nr="3507" mi="3" ci="0" mb="0" cb="0"/><line nr="3508" mi="1" ci="0" mb="0" cb="0"/><line nr="3511" mi="2" ci="0" mb="0" cb="0"/><line nr="3513" mi="3" ci="0" mb="0" cb="0"/><line nr="3515" mi="6" ci="0" mb="0" cb="0"/><line nr="3516" mi="3" ci="0" mb="0" cb="0"/><line nr="3517" mi="1" ci="0" mb="0" cb="0"/><line nr="3520" mi="2" ci="0" mb="0" cb="0"/><line nr="3522" mi="3" ci="0" mb="0" cb="0"/><line nr="3524" mi="7" ci="0" mb="0" cb="0"/><line nr="3525" mi="1" ci="0" mb="0" cb="0"/><line nr="3528" mi="2" ci="0" mb="0" cb="0"/><line nr="3530" mi="3" ci="0" mb="0" cb="0"/><line nr="3532" mi="7" ci="0" mb="0" cb="0"/><line nr="3533" mi="3" ci="0" mb="0" cb="0"/><line nr="3534" mi="1" ci="0" mb="0" cb="0"/><line nr="3537" mi="2" ci="0" mb="0" cb="0"/><line nr="3539" mi="6" ci="0" mb="0" cb="0"/><line nr="3540" mi="1" ci="0" mb="0" cb="0"/><line nr="3544" mi="2" ci="0" mb="0" cb="0"/><line nr="3546" mi="6" ci="0" mb="0" cb="0"/><line nr="3547" mi="6" ci="0" mb="0" cb="0"/><line nr="3548" mi="3" ci="0" mb="0" cb="0"/><line nr="3549" mi="1" ci="0" mb="0" cb="0"/><line nr="3554" mi="2" ci="0" mb="0" cb="0"/><line nr="3556" mi="6" ci="0" mb="0" cb="0"/><line nr="3557" mi="6" ci="0" mb="0" cb="0"/><line nr="3558" mi="3" ci="0" mb="0" cb="0"/><line nr="3559" mi="4" ci="0" mb="0" cb="0"/><line nr="3560" mi="4" ci="0" mb="0" cb="0"/><line nr="3561" mi="1" ci="0" mb="0" cb="0"/><line nr="3565" mi="2" ci="0" mb="0" cb="0"/><line nr="3567" mi="3" ci="0" mb="0" cb="0"/><line nr="3569" mi="6" ci="0" mb="0" cb="0"/><line nr="3570" mi="6" ci="0" mb="0" cb="0"/><line nr="3571" mi="3" ci="0" mb="0" cb="0"/><line nr="3572" mi="1" ci="0" mb="0" cb="0"/><line nr="3577" mi="2" ci="0" mb="0" cb="0"/><line nr="3579" mi="3" ci="0" mb="0" cb="0"/><line nr="3581" mi="6" ci="0" mb="0" cb="0"/><line nr="3582" mi="6" ci="0" mb="0" cb="0"/><line nr="3583" mi="3" ci="0" mb="0" cb="0"/><line nr="3584" mi="4" ci="0" mb="0" cb="0"/><line nr="3585" mi="1" ci="0" mb="0" cb="0"/><line nr="3590" mi="2" ci="0" mb="0" cb="0"/><line nr="3592" mi="3" ci="0" mb="0" cb="0"/><line nr="3594" mi="6" ci="0" mb="0" cb="0"/><line nr="3595" mi="6" ci="0" mb="0" cb="0"/><line nr="3596" mi="3" ci="0" mb="0" cb="0"/><line nr="3597" mi="4" ci="0" mb="0" cb="0"/><line nr="3598" mi="4" ci="0" mb="0" cb="0"/><line nr="3599" mi="1" ci="0" mb="0" cb="0"/><line nr="3603" mi="2" ci="0" mb="0" cb="0"/><line nr="3605" mi="3" ci="0" mb="0" cb="0"/><line nr="3607" mi="7" ci="0" mb="0" cb="0"/><line nr="3608" mi="6" ci="0" mb="0" cb="0"/><line nr="3609" mi="3" ci="0" mb="0" cb="0"/><line nr="3610" mi="1" ci="0" mb="0" cb="0"/><line nr="3615" mi="2" ci="0" mb="0" cb="0"/><line nr="3617" mi="3" ci="0" mb="0" cb="0"/><line nr="3619" mi="7" ci="0" mb="0" cb="0"/><line nr="3620" mi="6" ci="0" mb="0" cb="0"/><line nr="3621" mi="3" ci="0" mb="0" cb="0"/><line nr="3622" mi="4" ci="0" mb="0" cb="0"/><line nr="3623" mi="1" ci="0" mb="0" cb="0"/><line nr="3628" mi="2" ci="0" mb="0" cb="0"/><line nr="3630" mi="3" ci="0" mb="0" cb="0"/><line nr="3632" mi="7" ci="0" mb="0" cb="0"/><line nr="3633" mi="6" ci="0" mb="0" cb="0"/><line nr="3634" mi="3" ci="0" mb="0" cb="0"/><line nr="3635" mi="4" ci="0" mb="0" cb="0"/><line nr="3636" mi="4" ci="0" mb="0" cb="0"/><line nr="3637" mi="1" ci="0" mb="0" cb="0"/><line nr="3642" mi="4" ci="0" mb="0" cb="0"/><line nr="3646" mi="3" ci="0" mb="0" cb="0"/><line nr="3648" mi="2" ci="0" mb="0" cb="0"/><line nr="3649" mi="5" ci="0" mb="4" cb="0"/><line nr="3651" mi="7" ci="0" mb="2" cb="0"/><line nr="3652" mi="1" ci="0" mb="0" cb="0"/><line nr="3654" mi="7" ci="0" mb="2" cb="0"/><line nr="3655" mi="1" ci="0" mb="0" cb="0"/><line nr="3657" mi="7" ci="0" mb="2" cb="0"/><line nr="3658" mi="1" ci="0" mb="0" cb="0"/><line nr="3660" mi="7" ci="0" mb="2" cb="0"/><line nr="3662" mi="2" ci="0" mb="0" cb="0"/><line nr="3667" mi="4" ci="0" mb="0" cb="0"/><line nr="3668" mi="4" ci="0" mb="0" cb="0"/><line nr="3669" mi="4" ci="0" mb="0" cb="0"/><line nr="3670" mi="4" ci="0" mb="0" cb="0"/><line nr="3671" mi="1" ci="0" mb="0" cb="0"/><line nr="3675" mi="4" ci="0" mb="2" cb="0"/><line nr="3676" mi="4" ci="0" mb="0" cb="0"/><line nr="3678" mi="3" ci="0" mb="0" cb="0"/><line nr="3679" mi="3" ci="0" mb="0" cb="0"/><line nr="3680" mi="3" ci="0" mb="0" cb="0"/><line nr="3681" mi="3" ci="0" mb="0" cb="0"/><line nr="3683" mi="3" ci="0" mb="0" cb="0"/><line nr="3684" mi="3" ci="0" mb="0" cb="0"/><line nr="3687" mi="1" ci="0" mb="0" cb="0"/><line nr="3690" mi="4" ci="0" mb="2" cb="0"/><line nr="3691" mi="4" ci="0" mb="0" cb="0"/><line nr="3693" mi="3" ci="0" mb="0" cb="0"/><line nr="3694" mi="3" ci="0" mb="0" cb="0"/><line nr="3696" mi="3" ci="0" mb="0" cb="0"/><line nr="3697" mi="2" ci="0" mb="0" cb="0"/><line nr="3699" mi="2" ci="0" mb="0" cb="0"/><line nr="3703" mi="4" ci="0" mb="0" cb="0"/><line nr="3704" mi="1" ci="0" mb="0" cb="0"/><line nr="3707" mi="5" ci="0" mb="0" cb="0"/><line nr="3710" mi="16" ci="0" mb="0" cb="0"/><line nr="3711" mi="6" ci="0" mb="0" cb="0"/><line nr="3712" mi="6" ci="0" mb="0" cb="0"/><line nr="3713" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1482" covered="214"/><counter type="BRANCH" missed="27" covered="11"/><counter type="LINE" missed="357" covered="76"/><counter type="COMPLEXITY" missed="228" covered="38"/><counter type="METHOD" missed="210" covered="36"/><counter type="CLASS" missed="5" covered="13"/></sourcefile><sourcefile name="FnShort.java"><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="172" mi="3" ci="0" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="4" ci="0" mb="0" cb="0"/><line nr="213" mi="4" ci="0" mb="0" cb="0"/><line nr="224" mi="2" ci="0" mb="0" cb="0"/><line nr="240" mi="3" ci="0" mb="0" cb="0"/><line nr="253" mi="3" ci="0" mb="0" cb="0"/><line nr="266" mi="3" ci="0" mb="0" cb="0"/><line nr="281" mi="4" ci="0" mb="0" cb="0"/><line nr="296" mi="4" ci="0" mb="0" cb="0"/><line nr="310" mi="3" ci="0" mb="0" cb="0"/><line nr="324" mi="3" ci="0" mb="0" cb="0"/><line nr="339" mi="3" ci="0" mb="0" cb="0"/><line nr="354" mi="3" ci="0" mb="0" cb="0"/><line nr="368" mi="3" ci="0" mb="0" cb="0"/><line nr="382" mi="3" ci="0" mb="0" cb="0"/><line nr="397" mi="3" ci="0" mb="0" cb="0"/><line nr="412" mi="3" ci="0" mb="0" cb="0"/><line nr="429" mi="3" ci="0" mb="0" cb="0"/><line nr="447" mi="3" ci="0" mb="0" cb="0"/><line nr="464" mi="3" ci="0" mb="0" cb="0"/><line nr="482" mi="3" ci="0" mb="0" cb="0"/><line nr="500" mi="3" ci="0" mb="0" cb="0"/><line nr="518" mi="3" ci="0" mb="0" cb="0"/><line nr="535" mi="3" ci="0" mb="0" cb="0"/><line nr="553" mi="3" ci="0" mb="0" cb="0"/><line nr="573" mi="4" ci="0" mb="0" cb="0"/><line nr="594" mi="4" ci="0" mb="0" cb="0"/><line nr="613" mi="4" ci="0" mb="0" cb="0"/><line nr="633" mi="4" ci="0" mb="0" cb="0"/><line nr="653" mi="4" ci="0" mb="0" cb="0"/><line nr="678" mi="4" ci="0" mb="0" cb="0"/><line nr="702" mi="4" ci="0" mb="0" cb="0"/><line nr="731" mi="4" ci="0" mb="0" cb="0"/><line nr="754" mi="2" ci="0" mb="0" cb="0"/><line nr="767" mi="2" ci="0" mb="0" cb="0"/><line nr="787" mi="2" ci="0" mb="0" cb="0"/><line nr="798" mi="2" ci="0" mb="0" cb="0"/><line nr="809" mi="2" ci="0" mb="0" cb="0"/><line nr="820" mi="2" ci="0" mb="0" cb="0"/><line nr="835" mi="5" ci="0" mb="0" cb="0"/><line nr="849" mi="5" ci="0" mb="0" cb="0"/><line nr="860" mi="2" ci="0" mb="0" cb="0"/><line nr="871" mi="2" ci="0" mb="0" cb="0"/><line nr="882" mi="2" ci="0" mb="0" cb="0"/><line nr="893" mi="2" ci="0" mb="0" cb="0"/><line nr="908" mi="5" ci="0" mb="0" cb="0"/><line nr="922" mi="5" ci="0" mb="0" cb="0"/><line nr="933" mi="0" ci="2" mb="0" cb="0"/><line nr="945" mi="6" ci="0" mb="0" cb="0"/><line nr="957" mi="4" ci="0" mb="0" cb="0"/><line nr="969" mi="4" ci="0" mb="0" cb="0"/><line nr="981" mi="4" ci="0" mb="0" cb="0"/><line nr="993" mi="4" ci="0" mb="0" cb="0"/><line nr="1005" mi="4" ci="0" mb="0" cb="0"/><line nr="1017" mi="4" ci="0" mb="0" cb="0"/><line nr="1030" mi="0" ci="6" mb="0" cb="0"/><line nr="1042" mi="4" ci="0" mb="0" cb="0"/><line nr="1054" mi="4" ci="0" mb="0" cb="0"/><line nr="1066" mi="4" ci="0" mb="0" cb="0"/><line nr="1078" mi="4" ci="0" mb="0" cb="0"/><line nr="1090" mi="4" ci="0" mb="0" cb="0"/><line nr="1102" mi="4" ci="0" mb="0" cb="0"/><line nr="1115" mi="6" ci="0" mb="0" cb="0"/><line nr="1127" mi="4" ci="0" mb="0" cb="0"/><line nr="1139" mi="4" ci="0" mb="0" cb="0"/><line nr="1151" mi="4" ci="0" mb="0" cb="0"/><line nr="1163" mi="4" ci="0" mb="0" cb="0"/><line nr="1175" mi="4" ci="0" mb="0" cb="0"/><line nr="1187" mi="4" ci="0" mb="0" cb="0"/><line nr="1202" mi="0" ci="7" mb="0" cb="0"/><line nr="1216" mi="5" ci="0" mb="0" cb="0"/><line nr="1230" mi="5" ci="0" mb="0" cb="0"/><line nr="1244" mi="5" ci="0" mb="0" cb="0"/><line nr="1258" mi="5" ci="0" mb="0" cb="0"/><line nr="1272" mi="5" ci="0" mb="0" cb="0"/><line nr="1286" mi="5" ci="0" mb="0" cb="0"/><line nr="1301" mi="7" ci="0" mb="0" cb="0"/><line nr="1315" mi="5" ci="0" mb="0" cb="0"/><line nr="1329" mi="5" ci="0" mb="0" cb="0"/><line nr="1343" mi="5" ci="0" mb="0" cb="0"/><line nr="1357" mi="5" ci="0" mb="0" cb="0"/><line nr="1371" mi="5" ci="0" mb="0" cb="0"/><line nr="1385" mi="5" ci="0" mb="0" cb="0"/><line nr="1399" mi="8" ci="0" mb="0" cb="0"/><line nr="1413" mi="8" ci="0" mb="0" cb="0"/><line nr="1427" mi="0" ci="8" mb="0" cb="0"/><line nr="1441" mi="8" ci="0" mb="0" cb="0"/><line nr="1455" mi="7" ci="0" mb="0" cb="0"/><line nr="1469" mi="7" ci="0" mb="0" cb="0"/><line nr="1483" mi="7" ci="0" mb="0" cb="0"/><line nr="1497" mi="7" ci="0" mb="0" cb="0"/><line nr="1511" mi="5" ci="0" mb="0" cb="0"/><line nr="1524" mi="6" ci="0" mb="0" cb="0"/><line nr="1537" mi="4" ci="0" mb="0" cb="0"/><line nr="1550" mi="4" ci="0" mb="0" cb="0"/><line nr="1563" mi="4" ci="0" mb="0" cb="0"/><line nr="1576" mi="4" ci="0" mb="0" cb="0"/><line nr="1589" mi="4" ci="0" mb="0" cb="0"/><line nr="1602" mi="4" ci="0" mb="0" cb="0"/><line nr="1614" mi="0" ci="6" mb="0" cb="0"/><line nr="1626" mi="4" ci="0" mb="0" cb="0"/><line nr="1638" mi="4" ci="0" mb="0" cb="0"/><line nr="1650" mi="4" ci="0" mb="0" cb="0"/><line nr="1662" mi="4" ci="0" mb="0" cb="0"/><line nr="1674" mi="4" ci="0" mb="0" cb="0"/><line nr="1686" mi="4" ci="0" mb="0" cb="0"/><line nr="1701" mi="7" ci="0" mb="0" cb="0"/><line nr="1715" mi="5" ci="0" mb="0" cb="0"/><line nr="1729" mi="5" ci="0" mb="0" cb="0"/><line nr="1743" mi="5" ci="0" mb="0" cb="0"/><line nr="1757" mi="5" ci="0" mb="0" cb="0"/><line nr="1771" mi="5" ci="0" mb="0" cb="0"/><line nr="1785" mi="5" ci="0" mb="0" cb="0"/><line nr="1799" mi="7" ci="0" mb="0" cb="0"/><line nr="1812" mi="5" ci="0" mb="0" cb="0"/><line nr="1825" mi="5" ci="0" mb="0" cb="0"/><line nr="1838" mi="5" ci="0" mb="0" cb="0"/><line nr="1851" mi="5" ci="0" mb="0" cb="0"/><line nr="1864" mi="5" ci="0" mb="0" cb="0"/><line nr="1877" mi="5" ci="0" mb="0" cb="0"/><line nr="1890" mi="0" ci="5" mb="0" cb="0"/><line nr="1904" mi="6" ci="0" mb="0" cb="0"/><line nr="1918" mi="6" ci="0" mb="0" cb="0"/><line nr="1935" mi="4" ci="0" mb="0" cb="0"/><line nr="1951" mi="4" ci="0" mb="0" cb="0"/><line nr="1957" mi="0" ci="2" mb="1" cb="1"/><line nr="1958" mi="2" ci="0" mb="0" cb="0"/><line nr="1960" mi="0" ci="4" mb="0" cb="0"/><line nr="1969" mi="0" ci="2" mb="0" cb="0"/><line nr="1970" mi="0" ci="1" mb="0" cb="0"/><line nr="1974" mi="4" ci="0" mb="2" cb="0"/><line nr="1975" mi="2" ci="0" mb="0" cb="0"/><line nr="1977" mi="5" ci="0" mb="0" cb="0"/><line nr="1978" mi="10" ci="0" mb="2" cb="0"/><line nr="1979" mi="2" ci="0" mb="2" cb="0"/><line nr="1980" mi="4" ci="0" mb="2" cb="0"/><line nr="1981" mi="2" ci="0" mb="0" cb="0"/><line nr="1984" mi="1" ci="0" mb="0" cb="0"/><line nr="1985" mi="2" ci="0" mb="0" cb="0"/><line nr="1992" mi="0" ci="2" mb="0" cb="0"/><line nr="1993" mi="0" ci="1" mb="0" cb="0"/><line nr="1997" mi="4" ci="0" mb="2" cb="0"/><line nr="1998" mi="2" ci="0" mb="0" cb="0"/><line nr="2000" mi="5" ci="0" mb="0" cb="0"/><line nr="2001" mi="10" ci="0" mb="2" cb="0"/><line nr="2002" mi="2" ci="0" mb="2" cb="0"/><line nr="2003" mi="4" ci="0" mb="2" cb="0"/><line nr="2004" mi="2" ci="0" mb="0" cb="0"/><line nr="2007" mi="1" ci="0" mb="0" cb="0"/><line nr="2008" mi="2" ci="0" mb="0" cb="0"/><line nr="2015" mi="0" ci="2" mb="0" cb="0"/><line nr="2016" mi="0" ci="1" mb="0" cb="0"/><line nr="2020" mi="3" ci="0" mb="0" cb="0"/><line nr="2021" mi="10" ci="0" mb="2" cb="0"/><line nr="2022" mi="2" ci="0" mb="2" cb="0"/><line nr="2023" mi="7" ci="0" mb="0" cb="0"/><line nr="2025" mi="1" ci="0" mb="0" cb="0"/><line nr="2026" mi="4" ci="0" mb="0" cb="0"/><line nr="2036" mi="0" ci="2" mb="0" cb="0"/><line nr="2037" mi="0" ci="3" mb="0" cb="0"/><line nr="2038" mi="0" ci="3" mb="0" cb="0"/><line nr="2039" mi="0" ci="1" mb="0" cb="0"/><line nr="2042" mi="2" ci="0" mb="0" cb="0"/><line nr="2043" mi="3" ci="0" mb="0" cb="0"/><line nr="2044" mi="3" ci="0" mb="0" cb="0"/><line nr="2045" mi="3" ci="0" mb="0" cb="0"/><line nr="2046" mi="1" ci="0" mb="0" cb="0"/><line nr="2049" mi="2" ci="0" mb="0" cb="0"/><line nr="2050" mi="3" ci="0" mb="0" cb="0"/><line nr="2051" mi="3" ci="0" mb="0" cb="0"/><line nr="2052" mi="3" ci="0" mb="0" cb="0"/><line nr="2053" mi="1" ci="0" mb="0" cb="0"/><line nr="2058" mi="2" ci="0" mb="0" cb="0"/><line nr="2059" mi="3" ci="0" mb="0" cb="0"/><line nr="2060" mi="10" ci="0" mb="2" cb="0"/><line nr="2061" mi="2" ci="0" mb="2" cb="0"/><line nr="2062" mi="7" ci="0" mb="0" cb="0"/><line nr="2063" mi="1" ci="0" mb="0" cb="0"/><line nr="2065" mi="1" ci="0" mb="0" cb="0"/><line nr="2066" mi="3" ci="0" mb="2" cb="0"/><line nr="2067" mi="10" ci="0" mb="0" cb="0"/><line nr="2069" mi="3" ci="0" mb="2" cb="0"/><line nr="2070" mi="10" ci="0" mb="0" cb="0"/><line nr="2072" mi="9" ci="0" mb="0" cb="0"/><line nr="2093" mi="0" ci="2" mb="0" cb="0"/><line nr="2094" mi="0" ci="1" mb="0" cb="0"/><line nr="2098" mi="3" ci="0" mb="2" cb="0"/><line nr="2099" mi="2" ci="0" mb="0" cb="0"/><line nr="2101" mi="4" ci="0" mb="0" cb="0"/><line nr="2102" mi="16" ci="0" mb="2" cb="0"/><line nr="2103" mi="2" ci="0" mb="2" cb="0"/><line nr="2104" mi="4" ci="0" mb="2" cb="0"/><line nr="2105" mi="2" ci="0" mb="0" cb="0"/><line nr="2109" mi="2" ci="0" mb="0" cb="0"/><line nr="2116" mi="0" ci="2" mb="0" cb="0"/><line nr="2117" mi="0" ci="1" mb="0" cb="0"/><line nr="2121" mi="3" ci="0" mb="2" cb="0"/><line nr="2122" mi="2" ci="0" mb="0" cb="0"/><line nr="2124" mi="4" ci="0" mb="0" cb="0"/><line nr="2125" mi="16" ci="0" mb="2" cb="0"/><line nr="2126" mi="2" ci="0" mb="2" cb="0"/><line nr="2127" mi="4" ci="0" mb="2" cb="0"/><line nr="2128" mi="2" ci="0" mb="0" cb="0"/><line nr="2132" mi="2" ci="0" mb="0" cb="0"/><line nr="2139" mi="0" ci="2" mb="0" cb="0"/><line nr="2140" mi="0" ci="1" mb="0" cb="0"/><line nr="2144" mi="3" ci="0" mb="0" cb="0"/><line nr="2145" mi="16" ci="0" mb="2" cb="0"/><line nr="2146" mi="2" ci="0" mb="2" cb="0"/><line nr="2147" mi="7" ci="0" mb="0" cb="0"/><line nr="2150" mi="4" ci="0" mb="0" cb="0"/><line nr="2160" mi="0" ci="2" mb="0" cb="0"/><line nr="2161" mi="0" ci="3" mb="0" cb="0"/><line nr="2162" mi="0" ci="3" mb="0" cb="0"/><line nr="2163" mi="0" ci="1" mb="0" cb="0"/><line nr="2166" mi="2" ci="0" mb="0" cb="0"/><line nr="2167" mi="3" ci="0" mb="0" cb="0"/><line nr="2168" mi="3" ci="0" mb="0" cb="0"/><line nr="2169" mi="3" ci="0" mb="0" cb="0"/><line nr="2170" mi="1" ci="0" mb="0" cb="0"/><line nr="2173" mi="2" ci="0" mb="0" cb="0"/><line nr="2174" mi="3" ci="0" mb="0" cb="0"/><line nr="2175" mi="3" ci="0" mb="0" cb="0"/><line nr="2176" mi="3" ci="0" mb="0" cb="0"/><line nr="2177" mi="1" ci="0" mb="0" cb="0"/><line nr="2182" mi="2" ci="0" mb="0" cb="0"/><line nr="2183" mi="3" ci="0" mb="0" cb="0"/><line nr="2184" mi="16" ci="0" mb="2" cb="0"/><line nr="2185" mi="2" ci="0" mb="2" cb="0"/><line nr="2186" mi="7" ci="0" mb="0" cb="0"/><line nr="2187" mi="1" ci="0" mb="0" cb="0"/><line nr="2190" mi="3" ci="0" mb="2" cb="0"/><line nr="2191" mi="10" ci="0" mb="0" cb="0"/><line nr="2193" mi="3" ci="0" mb="2" cb="0"/><line nr="2194" mi="10" ci="0" mb="0" cb="0"/><line nr="2196" mi="9" ci="0" mb="0" cb="0"/><line nr="2210" mi="0" ci="2" mb="0" cb="0"/><line nr="2211" mi="0" ci="1" mb="0" cb="0"/><line nr="2215" mi="0" ci="7" mb="0" cb="0"/><line nr="2224" mi="2" ci="0" mb="0" cb="0"/><line nr="2225" mi="3" ci="0" mb="0" cb="0"/><line nr="2226" mi="3" ci="0" mb="0" cb="0"/><line nr="2227" mi="1" ci="0" mb="0" cb="0"/><line nr="2231" mi="10" ci="0" mb="0" cb="0"/><line nr="2240" mi="0" ci="2" mb="0" cb="0"/><line nr="2241" mi="0" ci="3" mb="0" cb="0"/><line nr="2242" mi="0" ci="3" mb="0" cb="0"/><line nr="2243" mi="0" ci="3" mb="0" cb="0"/><line nr="2244" mi="0" ci="1" mb="0" cb="0"/><line nr="2248" mi="0" ci="10" mb="0" cb="0"/><line nr="2259" mi="2" ci="0" mb="0" cb="0"/><line nr="2260" mi="3" ci="0" mb="0" cb="0"/><line nr="2261" mi="3" ci="0" mb="0" cb="0"/><line nr="2262" mi="3" ci="0" mb="0" cb="0"/><line nr="2263" mi="3" ci="0" mb="0" cb="0"/><line nr="2264" mi="1" ci="0" mb="0" cb="0"/><line nr="2267" mi="2" ci="0" mb="0" cb="0"/><line nr="2268" mi="3" ci="0" mb="0" cb="0"/><line nr="2269" mi="3" ci="0" mb="0" cb="0"/><line nr="2270" mi="3" ci="0" mb="0" cb="0"/><line nr="2271" mi="3" ci="0" mb="0" cb="0"/><line nr="2272" mi="3" ci="0" mb="0" cb="0"/><line nr="2273" mi="1" ci="0" mb="0" cb="0"/><line nr="2276" mi="0" ci="2" mb="0" cb="0"/><line nr="2277" mi="0" ci="3" mb="0" cb="0"/><line nr="2278" mi="0" ci="3" mb="0" cb="0"/><line nr="2279" mi="0" ci="3" mb="0" cb="0"/><line nr="2280" mi="0" ci="3" mb="0" cb="0"/><line nr="2281" mi="0" ci="3" mb="0" cb="0"/><line nr="2282" mi="0" ci="1" mb="0" cb="0"/><line nr="2286" mi="0" ci="5" mb="0" cb="0"/><line nr="2288" mi="0" ci="3" mb="1" cb="1"/><line nr="2289" mi="11" ci="0" mb="0" cb="0"/><line nr="2290" mi="0" ci="3" mb="1" cb="1"/><line nr="2291" mi="0" ci="11" mb="0" cb="0"/><line nr="2293" mi="9" ci="0" mb="0" cb="0"/><line nr="2295" mi="0" ci="4" mb="0" cb="0"/><line nr="2305" mi="0" ci="2" mb="0" cb="0"/><line nr="2306" mi="0" ci="3" mb="0" cb="0"/><line nr="2307" mi="0" ci="1" mb="0" cb="0"/><line nr="2311" mi="0" ci="7" mb="0" cb="0"/><line nr="2312" mi="0" ci="2" mb="0" cb="0"/><line nr="2321" mi="2" ci="0" mb="0" cb="0"/><line nr="2322" mi="3" ci="0" mb="0" cb="0"/><line nr="2323" mi="1" ci="0" mb="0" cb="0"/><line nr="2327" mi="7" ci="0" mb="0" cb="0"/><line nr="2328" mi="4" ci="0" mb="0" cb="0"/><line nr="2339" mi="0" ci="2" mb="0" cb="0"/><line nr="2340" mi="0" ci="3" mb="0" cb="0"/><line nr="2341" mi="0" ci="3" mb="0" cb="0"/><line nr="2342" mi="0" ci="3" mb="0" cb="0"/><line nr="2343" mi="0" ci="3" mb="0" cb="0"/><line nr="2344" mi="0" ci="1" mb="0" cb="0"/><line nr="2347" mi="2" ci="0" mb="0" cb="0"/><line nr="2348" mi="3" ci="0" mb="0" cb="0"/><line nr="2349" mi="3" ci="0" mb="0" cb="0"/><line nr="2350" mi="3" ci="0" mb="0" cb="0"/><line nr="2351" mi="3" ci="0" mb="0" cb="0"/><line nr="2352" mi="3" ci="0" mb="0" cb="0"/><line nr="2353" mi="1" ci="0" mb="0" cb="0"/><line nr="2356" mi="2" ci="0" mb="0" cb="0"/><line nr="2357" mi="3" ci="0" mb="0" cb="0"/><line nr="2358" mi="3" ci="0" mb="0" cb="0"/><line nr="2359" mi="3" ci="0" mb="0" cb="0"/><line nr="2360" mi="3" ci="0" mb="0" cb="0"/><line nr="2361" mi="3" ci="0" mb="0" cb="0"/><line nr="2362" mi="1" ci="0" mb="0" cb="0"/><line nr="2366" mi="0" ci="5" mb="0" cb="0"/><line nr="2368" mi="0" ci="3" mb="1" cb="1"/><line nr="2369" mi="11" ci="0" mb="0" cb="0"/><line nr="2370" mi="0" ci="3" mb="1" cb="1"/><line nr="2371" mi="13" ci="0" mb="0" cb="0"/><line nr="2373" mi="0" ci="8" mb="0" cb="0"/><line nr="2375" mi="0" ci="4" mb="0" cb="0"/><line nr="2386" mi="0" ci="2" mb="0" cb="0"/><line nr="2387" mi="0" ci="3" mb="0" cb="0"/><line nr="2388" mi="0" ci="3" mb="0" cb="0"/><line nr="2389" mi="0" ci="3" mb="0" cb="0"/><line nr="2390" mi="0" ci="1" mb="0" cb="0"/><line nr="2393" mi="2" ci="0" mb="0" cb="0"/><line nr="2394" mi="3" ci="0" mb="0" cb="0"/><line nr="2395" mi="3" ci="0" mb="0" cb="0"/><line nr="2396" mi="3" ci="0" mb="0" cb="0"/><line nr="2397" mi="3" ci="0" mb="0" cb="0"/><line nr="2398" mi="1" ci="0" mb="0" cb="0"/><line nr="2401" mi="2" ci="0" mb="0" cb="0"/><line nr="2402" mi="3" ci="0" mb="0" cb="0"/><line nr="2403" mi="3" ci="0" mb="0" cb="0"/><line nr="2404" mi="3" ci="0" mb="0" cb="0"/><line nr="2405" mi="3" ci="0" mb="0" cb="0"/><line nr="2406" mi="1" ci="0" mb="0" cb="0"/><line nr="2410" mi="0" ci="5" mb="0" cb="0"/><line nr="2412" mi="0" ci="3" mb="1" cb="1"/><line nr="2413" mi="8" ci="0" mb="0" cb="0"/><line nr="2414" mi="0" ci="3" mb="1" cb="1"/><line nr="2415" mi="10" ci="0" mb="0" cb="0"/><line nr="2417" mi="0" ci="5" mb="0" cb="0"/><line nr="2419" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1103" covered="274"/><counter type="BRANCH" missed="63" covered="7"/><counter type="LINE" missed="274" covered="84"/><counter type="COMPLEXITY" missed="186" covered="28"/><counter type="METHOD" missed="151" covered="28"/><counter type="CLASS" missed="2" covered="15"/></sourcefile><sourcefile name="FnObject.java"><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="6" ci="0" mb="0" cb="0"/><line nr="170" mi="6" ci="0" mb="0" cb="0"/><line nr="184" mi="6" ci="0" mb="0" cb="0"/><line nr="198" mi="6" ci="0" mb="0" cb="0"/><line nr="212" mi="6" ci="0" mb="0" cb="0"/><line nr="226" mi="6" ci="0" mb="0" cb="0"/><line nr="240" mi="0" ci="6" mb="0" cb="0"/><line nr="255" mi="5" ci="0" mb="0" cb="0"/><line nr="270" mi="6" ci="0" mb="0" cb="0"/><line nr="285" mi="6" ci="0" mb="0" cb="0"/><line nr="300" mi="6" ci="0" mb="0" cb="0"/><line nr="315" mi="6" ci="0" mb="0" cb="0"/><line nr="330" mi="6" ci="0" mb="0" cb="0"/><line nr="345" mi="6" ci="0" mb="0" cb="0"/><line nr="360" mi="6" ci="0" mb="0" cb="0"/><line nr="374" mi="0" ci="5" mb="0" cb="0"/><line nr="388" mi="6" ci="0" mb="0" cb="0"/><line nr="402" mi="6" ci="0" mb="0" cb="0"/><line nr="416" mi="6" ci="0" mb="0" cb="0"/><line nr="430" mi="6" ci="0" mb="0" cb="0"/><line nr="444" mi="0" ci="6" mb="0" cb="0"/><line nr="458" mi="6" ci="0" mb="0" cb="0"/><line nr="472" mi="6" ci="0" mb="0" cb="0"/><line nr="487" mi="5" ci="0" mb="0" cb="0"/><line nr="502" mi="6" ci="0" mb="0" cb="0"/><line nr="517" mi="6" ci="0" mb="0" cb="0"/><line nr="532" mi="6" ci="0" mb="0" cb="0"/><line nr="547" mi="6" ci="0" mb="0" cb="0"/><line nr="562" mi="6" ci="0" mb="0" cb="0"/><line nr="577" mi="6" ci="0" mb="0" cb="0"/><line nr="592" mi="6" ci="0" mb="0" cb="0"/><line nr="612" mi="5" ci="0" mb="0" cb="0"/><line nr="628" mi="6" ci="0" mb="0" cb="0"/><line nr="644" mi="6" ci="0" mb="0" cb="0"/><line nr="660" mi="6" ci="0" mb="0" cb="0"/><line nr="676" mi="6" ci="0" mb="0" cb="0"/><line nr="692" mi="0" ci="6" mb="0" cb="0"/><line nr="708" mi="6" ci="0" mb="0" cb="0"/><line nr="726" mi="5" ci="0" mb="0" cb="0"/><line nr="742" mi="6" ci="0" mb="0" cb="0"/><line nr="758" mi="6" ci="0" mb="0" cb="0"/><line nr="774" mi="6" ci="0" mb="0" cb="0"/><line nr="790" mi="6" ci="0" mb="0" cb="0"/><line nr="806" mi="0" ci="6" mb="0" cb="0"/><line nr="822" mi="6" ci="0" mb="0" cb="0"/><line nr="846" mi="5" ci="0" mb="0" cb="0"/><line nr="862" mi="6" ci="0" mb="0" cb="0"/><line nr="878" mi="6" ci="0" mb="0" cb="0"/><line nr="894" mi="6" ci="0" mb="0" cb="0"/><line nr="910" mi="6" ci="0" mb="0" cb="0"/><line nr="926" mi="0" ci="6" mb="0" cb="0"/><line nr="942" mi="6" ci="0" mb="0" cb="0"/><line nr="960" mi="5" ci="0" mb="0" cb="0"/><line nr="976" mi="6" ci="0" mb="0" cb="0"/><line nr="992" mi="6" ci="0" mb="0" cb="0"/><line nr="1008" mi="6" ci="0" mb="0" cb="0"/><line nr="1024" mi="6" ci="0" mb="0" cb="0"/><line nr="1040" mi="6" ci="0" mb="0" cb="0"/><line nr="1056" mi="6" ci="0" mb="0" cb="0"/><line nr="1078" mi="5" ci="0" mb="0" cb="0"/><line nr="1094" mi="5" ci="0" mb="0" cb="0"/><line nr="1110" mi="5" ci="0" mb="0" cb="0"/><line nr="1126" mi="5" ci="0" mb="0" cb="0"/><line nr="1142" mi="5" ci="0" mb="0" cb="0"/><line nr="1158" mi="5" ci="0" mb="0" cb="0"/><line nr="1174" mi="5" ci="0" mb="0" cb="0"/><line nr="1190" mi="5" ci="0" mb="0" cb="0"/><line nr="1208" mi="5" ci="0" mb="0" cb="0"/><line nr="1226" mi="5" ci="0" mb="0" cb="0"/><line nr="1244" mi="5" ci="0" mb="0" cb="0"/><line nr="1262" mi="5" ci="0" mb="0" cb="0"/><line nr="1280" mi="5" ci="0" mb="0" cb="0"/><line nr="1298" mi="5" ci="0" mb="0" cb="0"/><line nr="1316" mi="5" ci="0" mb="0" cb="0"/><line nr="1334" mi="5" ci="0" mb="0" cb="0"/><line nr="1350" mi="5" ci="0" mb="0" cb="0"/><line nr="1366" mi="5" ci="0" mb="0" cb="0"/><line nr="1382" mi="5" ci="0" mb="0" cb="0"/><line nr="1398" mi="5" ci="0" mb="0" cb="0"/><line nr="1414" mi="5" ci="0" mb="0" cb="0"/><line nr="1430" mi="5" ci="0" mb="0" cb="0"/><line nr="1446" mi="5" ci="0" mb="0" cb="0"/><line nr="1462" mi="5" ci="0" mb="0" cb="0"/><line nr="1480" mi="5" ci="0" mb="0" cb="0"/><line nr="1498" mi="5" ci="0" mb="0" cb="0"/><line nr="1516" mi="5" ci="0" mb="0" cb="0"/><line nr="1534" mi="5" ci="0" mb="0" cb="0"/><line nr="1552" mi="5" ci="0" mb="0" cb="0"/><line nr="1570" mi="5" ci="0" mb="0" cb="0"/><line nr="1588" mi="5" ci="0" mb="0" cb="0"/><line nr="1606" mi="5" ci="0" mb="0" cb="0"/><line nr="1628" mi="5" ci="0" mb="0" cb="0"/><line nr="1645" mi="5" ci="0" mb="0" cb="0"/><line nr="1662" mi="5" ci="0" mb="0" cb="0"/><line nr="1679" mi="5" ci="0" mb="0" cb="0"/><line nr="1696" mi="5" ci="0" mb="0" cb="0"/><line nr="1713" mi="5" ci="0" mb="0" cb="0"/><line nr="1730" mi="5" ci="0" mb="0" cb="0"/><line nr="1749" mi="5" ci="0" mb="0" cb="0"/><line nr="1766" mi="5" ci="0" mb="0" cb="0"/><line nr="1783" mi="5" ci="0" mb="0" cb="0"/><line nr="1800" mi="5" ci="0" mb="0" cb="0"/><line nr="1817" mi="5" ci="0" mb="0" cb="0"/><line nr="1834" mi="5" ci="0" mb="0" cb="0"/><line nr="1851" mi="5" ci="0" mb="0" cb="0"/><line nr="1876" mi="5" ci="0" mb="0" cb="0"/><line nr="1893" mi="5" ci="0" mb="0" cb="0"/><line nr="1910" mi="5" ci="0" mb="0" cb="0"/><line nr="1927" mi="5" ci="0" mb="0" cb="0"/><line nr="1944" mi="5" ci="0" mb="0" cb="0"/><line nr="1961" mi="5" ci="0" mb="0" cb="0"/><line nr="1978" mi="5" ci="0" mb="0" cb="0"/><line nr="1997" mi="5" ci="0" mb="0" cb="0"/><line nr="2014" mi="5" ci="0" mb="0" cb="0"/><line nr="2031" mi="5" ci="0" mb="0" cb="0"/><line nr="2048" mi="5" ci="0" mb="0" cb="0"/><line nr="2065" mi="5" ci="0" mb="0" cb="0"/><line nr="2082" mi="5" ci="0" mb="0" cb="0"/><line nr="2099" mi="5" ci="0" mb="0" cb="0"/><line nr="2117" mi="0" ci="2" mb="0" cb="0"/><line nr="2130" mi="0" ci="2" mb="0" cb="0"/><line nr="2146" mi="4" ci="0" mb="0" cb="0"/><line nr="2160" mi="4" ci="0" mb="0" cb="0"/><line nr="2177" mi="0" ci="5" mb="0" cb="0"/><line nr="2194" mi="6" ci="0" mb="0" cb="0"/><line nr="2211" mi="8" ci="0" mb="0" cb="0"/><line nr="2228" mi="8" ci="0" mb="0" cb="0"/><line nr="2245" mi="8" ci="0" mb="0" cb="0"/><line nr="2262" mi="8" ci="0" mb="0" cb="0"/><line nr="2279" mi="8" ci="0" mb="0" cb="0"/><line nr="2296" mi="8" ci="0" mb="0" cb="0"/><line nr="2303" mi="0" ci="2" mb="1" cb="1"/><line nr="2304" mi="2" ci="0" mb="0" cb="0"/><line nr="2306" mi="0" ci="3" mb="1" cb="1"/><line nr="2307" mi="2" ci="0" mb="0" cb="0"/><line nr="2309" mi="0" ci="3" mb="1" cb="1"/><line nr="2310" mi="2" ci="0" mb="0" cb="0"/><line nr="2312" mi="0" ci="3" mb="1" cb="1"/><line nr="2313" mi="6" ci="0" mb="0" cb="0"/><line nr="2315" mi="0" ci="7" mb="0" cb="0"/><line nr="2335" mi="0" ci="2" mb="0" cb="0"/><line nr="2336" mi="0" ci="1" mb="0" cb="0"/><line nr="2339" mi="3" ci="0" mb="0" cb="0"/><line nr="2347" mi="0" ci="2" mb="0" cb="0"/><line nr="2348" mi="0" ci="1" mb="0" cb="0"/><line nr="2352" mi="3" ci="0" mb="0" cb="0"/><line nr="2364" mi="0" ci="2" mb="0" cb="0"/><line nr="2365" mi="0" ci="3" mb="0" cb="0"/><line nr="2366" mi="0" ci="3" mb="0" cb="0"/><line nr="2367" mi="0" ci="1" mb="0" cb="0"/><line nr="2371" mi="0" ci="4" mb="0" cb="0"/><line nr="2372" mi="0" ci="4" mb="0" cb="0"/><line nr="2373" mi="0" ci="9" mb="0" cb="0"/><line nr="2374" mi="0" ci="4" mb="0" cb="0"/><line nr="2386" mi="0" ci="2" mb="0" cb="0"/><line nr="2387" mi="0" ci="1" mb="0" cb="0"/><line nr="2390" mi="0" ci="4" mb="0" cb="0"/><line nr="2391" mi="0" ci="4" mb="0" cb="0"/><line nr="2392" mi="0" ci="2" mb="0" cb="0"/><line nr="2402" mi="0" ci="2" mb="0" cb="0"/><line nr="2403" mi="0" ci="1" mb="0" cb="0"/><line nr="2406" mi="0" ci="4" mb="0" cb="0"/><line nr="2407" mi="0" ci="4" mb="0" cb="0"/><line nr="2408" mi="0" ci="2" mb="0" cb="0"/><line nr="2422" mi="0" ci="2" mb="0" cb="0"/><line nr="2423" mi="0" ci="3" mb="0" cb="0"/><line nr="2424" mi="0" ci="1" mb="0" cb="0"/><line nr="2427" mi="2" ci="0" mb="2" cb="0"/><line nr="2428" mi="8" ci="0" mb="2" cb="0"/><line nr="2430" mi="6" ci="0" mb="0" cb="0"/><line nr="2441" mi="0" ci="2" mb="0" cb="0"/><line nr="2442" mi="0" ci="3" mb="0" cb="0"/><line nr="2443" mi="0" ci="1" mb="0" cb="0"/><line nr="2446" mi="0" ci="2" mb="1" cb="1"/><line nr="2447" mi="8" ci="0" mb="2" cb="0"/><line nr="2449" mi="0" ci="10" mb="0" cb="2"/><line nr="2460" mi="2" ci="0" mb="0" cb="0"/><line nr="2461" mi="3" ci="0" mb="0" cb="0"/><line nr="2462" mi="3" ci="0" mb="0" cb="0"/><line nr="2463" mi="1" ci="0" mb="0" cb="0"/><line nr="2468" mi="3" ci="0" mb="2" cb="0"/><line nr="2469" mi="8" ci="0" mb="0" cb="0"/><line nr="2470" mi="5" ci="0" mb="0" cb="0"/><line nr="2472" mi="4" ci="0" mb="0" cb="0"/><line nr="2473" mi="5" ci="0" mb="0" cb="0"/><line nr="2474" mi="9" ci="0" mb="2" cb="0"/><line nr="2485" mi="2" ci="0" mb="0" cb="0"/><line nr="2486" mi="3" ci="0" mb="0" cb="0"/><line nr="2487" mi="3" ci="0" mb="0" cb="0"/><line nr="2488" mi="1" ci="0" mb="0" cb="0"/><line nr="2493" mi="3" ci="0" mb="2" cb="0"/><line nr="2494" mi="8" ci="0" mb="0" cb="0"/><line nr="2495" mi="5" ci="0" mb="0" cb="0"/><line nr="2497" mi="4" ci="0" mb="0" cb="0"/><line nr="2498" mi="5" ci="0" mb="0" cb="0"/><line nr="2499" mi="9" ci="0" mb="2" cb="0"/><line nr="2510" mi="0" ci="2" mb="0" cb="0"/><line nr="2511" mi="0" ci="3" mb="0" cb="0"/><line nr="2512" mi="0" ci="3" mb="0" cb="0"/><line nr="2513" mi="0" ci="1" mb="0" cb="0"/><line nr="2518" mi="0" ci="3" mb="1" cb="1"/><line nr="2519" mi="8" ci="0" mb="0" cb="0"/><line nr="2520" mi="5" ci="0" mb="0" cb="0"/><line nr="2522" mi="0" ci="4" mb="1" cb="1"/><line nr="2523" mi="9" ci="0" mb="0" cb="0"/><line nr="2524" mi="5" ci="0" mb="0" cb="0"/><line nr="2526" mi="0" ci="4" mb="0" cb="0"/><line nr="2527" mi="0" ci="5" mb="0" cb="0"/><line nr="2528" mi="0" ci="9" mb="0" cb="2"/><line nr="2539" mi="0" ci="2" mb="0" cb="0"/><line nr="2540" mi="0" ci="3" mb="0" cb="0"/><line nr="2541" mi="0" ci="3" mb="0" cb="0"/><line nr="2542" mi="0" ci="1" mb="0" cb="0"/><line nr="2547" mi="0" ci="3" mb="1" cb="1"/><line nr="2548" mi="8" ci="0" mb="0" cb="0"/><line nr="2549" mi="5" ci="0" mb="0" cb="0"/><line nr="2551" mi="0" ci="4" mb="1" cb="1"/><line nr="2552" mi="9" ci="0" mb="0" cb="0"/><line nr="2553" mi="5" ci="0" mb="0" cb="0"/><line nr="2555" mi="0" ci="4" mb="0" cb="0"/><line nr="2556" mi="0" ci="5" mb="0" cb="0"/><line nr="2557" mi="0" ci="9" mb="0" cb="2"/><line nr="2568" mi="0" ci="2" mb="0" cb="0"/><line nr="2569" mi="0" ci="3" mb="0" cb="0"/><line nr="2570" mi="0" ci="3" mb="0" cb="0"/><line nr="2571" mi="0" ci="1" mb="0" cb="0"/><line nr="2576" mi="0" ci="3" mb="1" cb="1"/><line nr="2577" mi="8" ci="0" mb="0" cb="0"/><line nr="2578" mi="5" ci="0" mb="0" cb="0"/><line nr="2580" mi="0" ci="4" mb="1" cb="1"/><line nr="2581" mi="9" ci="0" mb="0" cb="0"/><line nr="2582" mi="5" ci="0" mb="0" cb="0"/><line nr="2584" mi="0" ci="4" mb="0" cb="0"/><line nr="2585" mi="0" ci="5" mb="0" cb="0"/><line nr="2586" mi="1" ci="8" mb="1" cb="1"/><line nr="2597" mi="2" ci="0" mb="0" cb="0"/><line nr="2598" mi="3" ci="0" mb="0" cb="0"/><line nr="2599" mi="3" ci="0" mb="0" cb="0"/><line nr="2600" mi="1" ci="0" mb="0" cb="0"/><line nr="2605" mi="3" ci="0" mb="2" cb="0"/><line nr="2606" mi="8" ci="0" mb="0" cb="0"/><line nr="2607" mi="5" ci="0" mb="0" cb="0"/><line nr="2609" mi="4" ci="0" mb="2" cb="0"/><line nr="2610" mi="9" ci="0" mb="0" cb="0"/><line nr="2611" mi="5" ci="0" mb="0" cb="0"/><line nr="2613" mi="4" ci="0" mb="0" cb="0"/><line nr="2614" mi="5" ci="0" mb="0" cb="0"/><line nr="2615" mi="9" ci="0" mb="2" cb="0"/><line nr="2628" mi="0" ci="2" mb="0" cb="0"/><line nr="2629" mi="0" ci="1" mb="0" cb="0"/><line nr="2632" mi="0" ci="2" mb="1" cb="1"/><line nr="2633" mi="0" ci="2" mb="0" cb="0"/><line nr="2635" mi="2" ci="0" mb="0" cb="0"/><line nr="2645" mi="0" ci="2" mb="0" cb="0"/><line nr="2646" mi="0" ci="1" mb="0" cb="0"/><line nr="2649" mi="2" ci="0" mb="2" cb="0"/><line nr="2650" mi="2" ci="0" mb="0" cb="0"/><line nr="2652" mi="2" ci="0" mb="0" cb="0"/><line nr="2665" mi="0" ci="2" mb="0" cb="0"/><line nr="2666" mi="0" ci="3" mb="0" cb="0"/><line nr="2667" mi="0" ci="1" mb="0" cb="0"/><line nr="2670" mi="0" ci="3" mb="0" cb="0"/><line nr="2682" mi="2" ci="0" mb="0" cb="0"/><line nr="2683" mi="3" ci="0" mb="0" cb="0"/><line nr="2684" mi="3" ci="0" mb="0" cb="0"/><line nr="2685" mi="3" ci="0" mb="0" cb="0"/><line nr="2686" mi="3" ci="0" mb="0" cb="0"/><line nr="2687" mi="1" ci="0" mb="0" cb="0"/><line nr="2692" mi="3" ci="0" mb="2" cb="0"/><line nr="2693" mi="8" ci="0" mb="0" cb="0"/><line nr="2694" mi="5" ci="0" mb="0" cb="0"/><line nr="2696" mi="4" ci="0" mb="0" cb="0"/><line nr="2697" mi="5" ci="0" mb="0" cb="0"/><line nr="2698" mi="5" ci="0" mb="0" cb="0"/><line nr="2699" mi="13" ci="0" mb="4" cb="0"/><counter type="INSTRUCTION" missed="1015" covered="303"/><counter type="BRANCH" missed="41" covered="19"/><counter type="LINE" missed="196" covered="89"/><counter type="COMPLEXITY" missed="163" covered="40"/><counter type="METHOD" missed="136" covered="37"/><counter type="CLASS" missed="4" covered="14"/></sourcefile><sourcefile name="FnFunc.java"><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="8" mb="0" cb="0"/><line nr="108" mi="9" ci="0" mb="0" cb="0"/><line nr="131" mi="8" ci="0" mb="0" cb="0"/><line nr="156" mi="9" ci="0" mb="0" cb="0"/><line nr="177" mi="5" ci="0" mb="0" cb="0"/><line nr="201" mi="6" ci="0" mb="0" cb="0"/><line nr="222" mi="5" ci="0" mb="0" cb="0"/><line nr="246" mi="6" ci="0" mb="0" cb="0"/><line nr="270" mi="7" ci="0" mb="0" cb="0"/><line nr="297" mi="8" ci="0" mb="0" cb="0"/><line nr="321" mi="8" ci="0" mb="0" cb="0"/><line nr="348" mi="9" ci="0" mb="0" cb="0"/><line nr="372" mi="7" ci="0" mb="0" cb="0"/><line nr="399" mi="8" ci="0" mb="0" cb="0"/><line nr="423" mi="8" ci="0" mb="0" cb="0"/><line nr="450" mi="9" ci="0" mb="0" cb="0"/><line nr="469" mi="7" ci="0" mb="0" cb="0"/><line nr="486" mi="7" ci="0" mb="0" cb="0"/><line nr="503" mi="0" ci="2" mb="0" cb="0"/><line nr="504" mi="0" ci="3" mb="0" cb="0"/><line nr="505" mi="0" ci="3" mb="0" cb="0"/><line nr="506" mi="0" ci="3" mb="0" cb="0"/><line nr="507" mi="0" ci="3" mb="0" cb="0"/><line nr="508" mi="0" ci="1" mb="0" cb="0"/><line nr="512" mi="0" ci="10" mb="0" cb="0"/><line nr="530" mi="0" ci="2" mb="0" cb="0"/><line nr="531" mi="0" ci="3" mb="0" cb="0"/><line nr="532" mi="0" ci="3" mb="0" cb="0"/><line nr="533" mi="0" ci="3" mb="0" cb="0"/><line nr="534" mi="0" ci="3" mb="0" cb="0"/><line nr="535" mi="0" ci="3" mb="0" cb="0"/><line nr="536" mi="0" ci="1" mb="0" cb="0"/><line nr="540" mi="0" ci="7" mb="0" cb="0"/><line nr="541" mi="0" ci="2" mb="1" cb="1"/><line nr="542" mi="5" ci="0" mb="0" cb="0"/><line nr="544" mi="0" ci="5" mb="1" cb="1"/><line nr="545" mi="0" ci="6" mb="0" cb="0"/><line nr="547" mi="2" ci="0" mb="0" cb="0"/><line nr="568" mi="2" ci="0" mb="0" cb="0"/><line nr="569" mi="3" ci="0" mb="0" cb="0"/><line nr="570" mi="3" ci="0" mb="0" cb="0"/><line nr="571" mi="3" ci="0" mb="0" cb="0"/><line nr="572" mi="3" ci="0" mb="0" cb="0"/><line nr="573" mi="3" ci="0" mb="0" cb="0"/><line nr="574" mi="3" ci="0" mb="0" cb="0"/><line nr="575" mi="3" ci="0" mb="0" cb="0"/><line nr="576" mi="1" ci="0" mb="0" cb="0"/><line nr="580" mi="7" ci="0" mb="0" cb="0"/><line nr="581" mi="2" ci="0" mb="2" cb="0"/><line nr="582" mi="5" ci="0" mb="0" cb="0"/><line nr="584" mi="5" ci="0" mb="2" cb="0"/><line nr="585" mi="6" ci="0" mb="0" cb="0"/><line nr="587" mi="6" ci="0" mb="0" cb="0"/><line nr="601" mi="2" ci="0" mb="0" cb="0"/><line nr="602" mi="3" ci="0" mb="0" cb="0"/><line nr="603" mi="3" ci="0" mb="0" cb="0"/><line nr="604" mi="3" ci="0" mb="0" cb="0"/><line nr="605" mi="3" ci="0" mb="0" cb="0"/><line nr="606" mi="3" ci="0" mb="0" cb="0"/><line nr="607" mi="1" ci="0" mb="0" cb="0"/><line nr="611" mi="2" ci="0" mb="0" cb="0"/><line nr="613" mi="7" ci="0" mb="0" cb="0"/><line nr="614" mi="2" ci="0" mb="2" cb="0"/><line nr="615" mi="5" ci="0" mb="0" cb="0"/><line nr="618" mi="5" ci="0" mb="2" cb="0"/><line nr="619" mi="6" ci="0" mb="0" cb="0"/><line nr="620" mi="7" ci="0" mb="0" cb="0"/><line nr="621" mi="2" ci="0" mb="2" cb="0"/><line nr="622" mi="5" ci="0" mb="0" cb="0"/><line nr="626" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="249" covered="77"/><counter type="BRANCH" missed="12" covered="2"/><counter type="LINE" missed="51" covered="20"/><counter type="COMPLEXITY" missed="28" covered="6"/><counter type="METHOD" missed="21" covered="6"/><counter type="CLASS" missed="2" covered="3"/></sourcefile><sourcefile name="FnSetOf.java"><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="6" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="6" ci="0" mb="0" cb="0"/><line nr="146" mi="6" ci="0" mb="0" cb="0"/><line nr="150" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="166" mi="5" ci="0" mb="0" cb="0"/><line nr="170" mi="6" ci="0" mb="0" cb="0"/><line nr="174" mi="5" ci="0" mb="0" cb="0"/><line nr="178" mi="6" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="5" ci="0" mb="0" cb="0"/><line nr="190" mi="5" ci="0" mb="0" cb="0"/><line nr="194" mi="6" ci="0" mb="0" cb="0"/><line nr="198" mi="6" ci="0" mb="0" cb="0"/><line nr="202" mi="5" ci="0" mb="0" cb="0"/><line nr="206" mi="5" ci="0" mb="0" cb="0"/><line nr="210" mi="5" ci="0" mb="0" cb="0"/><line nr="214" mi="5" ci="0" mb="0" cb="0"/><line nr="223" mi="4" ci="0" mb="0" cb="0"/><line nr="230" mi="5" ci="0" mb="0" cb="0"/><line nr="234" mi="5" ci="0" mb="0" cb="0"/><line nr="242" mi="4" ci="0" mb="0" cb="0"/><line nr="249" mi="5" ci="0" mb="0" cb="0"/><line nr="253" mi="5" ci="0" mb="0" cb="0"/><line nr="257" mi="6" ci="0" mb="0" cb="0"/><line nr="261" mi="6" ci="0" mb="0" cb="0"/><line nr="265" mi="6" ci="0" mb="0" cb="0"/><line nr="273" mi="4" ci="0" mb="0" cb="0"/><line nr="285" mi="0" ci="2" mb="0" cb="0"/><line nr="286" mi="0" ci="3" mb="0" cb="0"/><line nr="287" mi="0" ci="1" mb="0" cb="0"/><line nr="295" mi="0" ci="2" mb="0" cb="0"/><line nr="296" mi="0" ci="1" mb="0" cb="0"/><line nr="300" mi="0" ci="5" mb="0" cb="0"/><line nr="312" mi="0" ci="3" mb="0" cb="0"/><line nr="313" mi="0" ci="1" mb="0" cb="0"/><line nr="317" mi="0" ci="5" mb="0" cb="0"/><line nr="327" mi="3" ci="0" mb="0" cb="0"/><line nr="328" mi="1" ci="0" mb="0" cb="0"/><line nr="332" mi="5" ci="0" mb="0" cb="0"/><line nr="343" mi="0" ci="3" mb="0" cb="0"/><line nr="344" mi="0" ci="1" mb="0" cb="0"/><line nr="348" mi="0" ci="5" mb="0" cb="0"/><line nr="360" mi="0" ci="4" mb="0" cb="0"/><line nr="361" mi="0" ci="1" mb="0" cb="0"/><line nr="365" mi="0" ci="5" mb="0" cb="0"/><line nr="377" mi="0" ci="3" mb="0" cb="0"/><line nr="378" mi="0" ci="1" mb="0" cb="0"/><line nr="382" mi="0" ci="5" mb="0" cb="0"/><line nr="394" mi="0" ci="3" mb="0" cb="0"/><line nr="395" mi="0" ci="1" mb="0" cb="0"/><line nr="399" mi="0" ci="5" mb="0" cb="0"/><line nr="410" mi="3" ci="0" mb="0" cb="0"/><line nr="411" mi="1" ci="0" mb="0" cb="0"/><line nr="415" mi="5" ci="0" mb="0" cb="0"/><line nr="426" mi="3" ci="0" mb="0" cb="0"/><line nr="427" mi="1" ci="0" mb="0" cb="0"/><line nr="431" mi="5" ci="0" mb="0" cb="0"/><line nr="442" mi="3" ci="0" mb="0" cb="0"/><line nr="443" mi="1" ci="0" mb="0" cb="0"/><line nr="447" mi="5" ci="0" mb="0" cb="0"/><line nr="458" mi="0" ci="3" mb="0" cb="0"/><line nr="459" mi="0" ci="1" mb="0" cb="0"/><line nr="463" mi="0" ci="5" mb="0" cb="0"/><line nr="474" mi="0" ci="2" mb="0" cb="0"/><line nr="475" mi="0" ci="1" mb="0" cb="0"/><line nr="479" mi="0" ci="5" mb="0" cb="0"/><line nr="490" mi="3" ci="0" mb="0" cb="0"/><line nr="491" mi="1" ci="0" mb="0" cb="0"/><line nr="495" mi="5" ci="0" mb="0" cb="0"/><line nr="506" mi="3" ci="0" mb="0" cb="0"/><line nr="507" mi="1" ci="0" mb="0" cb="0"/><line nr="511" mi="5" ci="0" mb="0" cb="0"/><line nr="522" mi="0" ci="3" mb="0" cb="0"/><line nr="523" mi="0" ci="1" mb="0" cb="0"/><line nr="527" mi="0" ci="5" mb="0" cb="0"/><line nr="538" mi="3" ci="0" mb="0" cb="0"/><line nr="539" mi="1" ci="0" mb="0" cb="0"/><line nr="543" mi="5" ci="0" mb="0" cb="0"/><line nr="557" mi="2" ci="0" mb="0" cb="0"/><line nr="558" mi="3" ci="0" mb="0" cb="0"/><line nr="559" mi="3" ci="0" mb="0" cb="0"/><line nr="560" mi="1" ci="0" mb="0" cb="0"/><line nr="565" mi="5" ci="0" mb="0" cb="0"/><line nr="566" mi="9" ci="0" mb="0" cb="0"/><line nr="567" mi="4" ci="0" mb="0" cb="0"/><line nr="577" mi="2" ci="0" mb="0" cb="0"/><line nr="578" mi="1" ci="0" mb="0" cb="0"/><line nr="582" mi="5" ci="0" mb="0" cb="0"/><line nr="597" mi="2" ci="0" mb="0" cb="0"/><line nr="598" mi="3" ci="0" mb="0" cb="0"/><line nr="599" mi="3" ci="0" mb="0" cb="0"/><line nr="600" mi="1" ci="0" mb="0" cb="0"/><line nr="604" mi="4" ci="0" mb="0" cb="0"/><line nr="605" mi="9" ci="0" mb="2" cb="0"/><line nr="606" mi="9" ci="0" mb="0" cb="0"/><line nr="607" mi="1" ci="0" mb="0" cb="0"/><line nr="608" mi="2" ci="0" mb="0" cb="0"/><line nr="622" mi="2" ci="0" mb="0" cb="0"/><line nr="623" mi="3" ci="0" mb="0" cb="0"/><line nr="624" mi="3" ci="0" mb="0" cb="0"/><line nr="625" mi="1" ci="0" mb="0" cb="0"/><line nr="629" mi="4" ci="0" mb="0" cb="0"/><line nr="630" mi="9" ci="0" mb="2" cb="0"/><line nr="631" mi="9" ci="0" mb="0" cb="0"/><line nr="632" mi="1" ci="0" mb="0" cb="0"/><line nr="633" mi="2" ci="0" mb="0" cb="0"/><line nr="649" mi="2" ci="0" mb="0" cb="0"/><line nr="650" mi="3" ci="0" mb="0" cb="0"/><line nr="651" mi="6" ci="0" mb="0" cb="0"/><line nr="652" mi="1" ci="0" mb="0" cb="0"/><line nr="655" mi="2" ci="0" mb="0" cb="0"/><line nr="656" mi="3" ci="0" mb="0" cb="0"/><line nr="657" mi="4" ci="0" mb="0" cb="0"/><line nr="658" mi="1" ci="0" mb="0" cb="0"/><line nr="662" mi="6" ci="0" mb="2" cb="0"/><line nr="663" mi="8" ci="0" mb="0" cb="0"/><line nr="664" mi="6" ci="0" mb="0" cb="0"/><line nr="665" mi="5" ci="0" mb="0" cb="0"/><line nr="667" mi="4" ci="0" mb="0" cb="0"/><line nr="668" mi="2" ci="0" mb="0" cb="0"/><line nr="669" mi="9" ci="0" mb="2" cb="0"/><line nr="670" mi="8" ci="0" mb="0" cb="0"/><line nr="671" mi="1" ci="0" mb="0" cb="0"/><line nr="672" mi="1" ci="0" mb="0" cb="0"/><line nr="673" mi="2" ci="0" mb="0" cb="0"/><line nr="683" mi="2" ci="0" mb="0" cb="0"/><line nr="684" mi="3" ci="0" mb="0" cb="0"/><line nr="685" mi="6" ci="0" mb="0" cb="0"/><line nr="686" mi="1" ci="0" mb="0" cb="0"/><line nr="689" mi="2" ci="0" mb="0" cb="0"/><line nr="690" mi="3" ci="0" mb="0" cb="0"/><line nr="691" mi="4" ci="0" mb="0" cb="0"/><line nr="692" mi="1" ci="0" mb="0" cb="0"/><line nr="696" mi="6" ci="0" mb="2" cb="0"/><line nr="697" mi="8" ci="0" mb="0" cb="0"/><line nr="698" mi="6" ci="0" mb="0" cb="0"/><line nr="699" mi="5" ci="0" mb="0" cb="0"/><line nr="701" mi="4" ci="0" mb="0" cb="0"/><line nr="702" mi="2" ci="0" mb="0" cb="0"/><line nr="703" mi="9" ci="0" mb="2" cb="0"/><line nr="704" mi="8" ci="0" mb="0" cb="0"/><line nr="705" mi="1" ci="0" mb="0" cb="0"/><line nr="706" mi="1" ci="0" mb="0" cb="0"/><line nr="707" mi="2" ci="0" mb="0" cb="0"/><line nr="722" mi="2" ci="0" mb="0" cb="0"/><line nr="723" mi="3" ci="0" mb="0" cb="0"/><line nr="724" mi="3" ci="0" mb="0" cb="0"/><line nr="725" mi="1" ci="0" mb="0" cb="0"/><line nr="729" mi="4" ci="0" mb="0" cb="0"/><line nr="730" mi="9" ci="0" mb="2" cb="0"/><line nr="731" mi="7" ci="0" mb="0" cb="0"/><line nr="732" mi="2" ci="0" mb="2" cb="0"/><line nr="733" mi="5" ci="0" mb="0" cb="0"/><line nr="736" mi="7" ci="0" mb="0" cb="0"/><line nr="737" mi="1" ci="0" mb="0" cb="0"/><line nr="738" mi="2" ci="0" mb="0" cb="0"/><line nr="752" mi="2" ci="0" mb="0" cb="0"/><line nr="753" mi="3" ci="0" mb="0" cb="0"/><line nr="754" mi="3" ci="0" mb="0" cb="0"/><line nr="755" mi="3" ci="0" mb="0" cb="0"/><line nr="756" mi="3" ci="0" mb="0" cb="0"/><line nr="757" mi="1" ci="0" mb="0" cb="0"/><line nr="761" mi="4" ci="0" mb="0" cb="0"/><line nr="762" mi="9" ci="0" mb="2" cb="0"/><line nr="763" mi="6" ci="0" mb="0" cb="0"/><line nr="764" mi="6" ci="0" mb="0" cb="0"/><line nr="765" mi="5" ci="0" mb="0" cb="0"/><line nr="766" mi="1" ci="0" mb="0" cb="0"/><line nr="767" mi="2" ci="0" mb="0" cb="0"/><line nr="777" mi="2" ci="0" mb="0" cb="0"/><line nr="778" mi="1" ci="0" mb="0" cb="0"/><line nr="782" mi="5" ci="0" mb="2" cb="0"/><line nr="783" mi="5" ci="0" mb="0" cb="0"/><line nr="785" mi="5" ci="0" mb="0" cb="0"/><line nr="786" mi="4" ci="0" mb="0" cb="0"/><line nr="787" mi="12" ci="0" mb="2" cb="0"/><line nr="788" mi="11" ci="0" mb="0" cb="0"/><line nr="790" mi="2" ci="0" mb="0" cb="0"/><line nr="799" mi="4" ci="0" mb="0" cb="0"/><line nr="800" mi="11" ci="0" mb="2" cb="0"/><line nr="801" mi="3" ci="0" mb="0" cb="0"/><line nr="802" mi="4" ci="0" mb="0" cb="0"/><line nr="803" mi="8" ci="0" mb="0" cb="0"/><line nr="804" mi="7" ci="0" mb="0" cb="0"/><line nr="805" mi="1" ci="0" mb="0" cb="0"/><line nr="806" mi="2" ci="0" mb="0" cb="0"/><line nr="822" mi="2" ci="0" mb="0" cb="0"/><line nr="823" mi="3" ci="0" mb="0" cb="0"/><line nr="824" mi="3" ci="0" mb="0" cb="0"/><line nr="825" mi="1" ci="0" mb="0" cb="0"/><line nr="829" mi="4" ci="0" mb="0" cb="0"/><line nr="830" mi="9" ci="0" mb="2" cb="0"/><line nr="831" mi="6" ci="0" mb="0" cb="0"/><line nr="832" mi="5" ci="0" mb="0" cb="0"/><line nr="833" mi="2" ci="0" mb="2" cb="0"/><line nr="834" mi="4" ci="0" mb="0" cb="0"/><line nr="835" mi="5" ci="0" mb="0" cb="0"/><line nr="837" mi="4" ci="0" mb="0" cb="0"/><line nr="838" mi="1" ci="0" mb="0" cb="0"/><line nr="839" mi="2" ci="0" mb="0" cb="0"/><line nr="851" mi="2" ci="0" mb="0" cb="0"/><line nr="852" mi="3" ci="0" mb="0" cb="0"/><line nr="853" mi="3" ci="0" mb="0" cb="0"/><line nr="854" mi="1" ci="0" mb="0" cb="0"/><line nr="859" mi="4" ci="0" mb="0" cb="0"/><line nr="860" mi="9" ci="0" mb="2" cb="0"/><line nr="861" mi="6" ci="0" mb="0" cb="0"/><line nr="862" mi="5" ci="0" mb="0" cb="0"/><line nr="863" mi="2" ci="0" mb="2" cb="0"/><line nr="864" mi="4" ci="0" mb="0" cb="0"/><line nr="865" mi="5" ci="0" mb="0" cb="0"/><line nr="867" mi="4" ci="0" mb="0" cb="0"/><line nr="868" mi="1" ci="0" mb="0" cb="0"/><line nr="870" mi="2" ci="0" mb="0" cb="0"/><line nr="889" mi="2" ci="0" mb="0" cb="0"/><line nr="890" mi="3" ci="0" mb="0" cb="0"/><line nr="891" mi="6" ci="0" mb="0" cb="0"/><line nr="892" mi="1" ci="0" mb="0" cb="0"/><line nr="895" mi="2" ci="0" mb="0" cb="0"/><line nr="896" mi="3" ci="0" mb="0" cb="0"/><line nr="897" mi="4" ci="0" mb="0" cb="0"/><line nr="898" mi="1" ci="0" mb="0" cb="0"/><line nr="903" mi="6" ci="0" mb="2" cb="0"/><line nr="904" mi="8" ci="0" mb="0" cb="0"/><line nr="905" mi="6" ci="0" mb="0" cb="0"/><line nr="906" mi="5" ci="0" mb="0" cb="0"/><line nr="908" mi="4" ci="0" mb="0" cb="0"/><line nr="909" mi="2" ci="0" mb="0" cb="0"/><line nr="910" mi="9" ci="0" mb="2" cb="0"/><line nr="911" mi="5" ci="0" mb="0" cb="0"/><line nr="912" mi="5" ci="0" mb="0" cb="0"/><line nr="913" mi="2" ci="0" mb="2" cb="0"/><line nr="914" mi="4" ci="0" mb="0" cb="0"/><line nr="915" mi="5" ci="0" mb="0" cb="0"/><line nr="917" mi="4" ci="0" mb="0" cb="0"/><line nr="918" mi="1" ci="0" mb="0" cb="0"/><line nr="919" mi="1" ci="0" mb="0" cb="0"/><line nr="920" mi="2" ci="0" mb="0" cb="0"/><line nr="933" mi="2" ci="0" mb="0" cb="0"/><line nr="934" mi="3" ci="0" mb="0" cb="0"/><line nr="935" mi="6" ci="0" mb="0" cb="0"/><line nr="936" mi="1" ci="0" mb="0" cb="0"/><line nr="939" mi="2" ci="0" mb="0" cb="0"/><line nr="940" mi="3" ci="0" mb="0" cb="0"/><line nr="941" mi="4" ci="0" mb="0" cb="0"/><line nr="942" mi="1" ci="0" mb="0" cb="0"/><line nr="947" mi="6" ci="0" mb="2" cb="0"/><line nr="948" mi="8" ci="0" mb="0" cb="0"/><line nr="949" mi="6" ci="0" mb="0" cb="0"/><line nr="950" mi="5" ci="0" mb="0" cb="0"/><line nr="952" mi="4" ci="0" mb="0" cb="0"/><line nr="953" mi="2" ci="0" mb="0" cb="0"/><line nr="954" mi="9" ci="0" mb="2" cb="0"/><line nr="955" mi="5" ci="0" mb="0" cb="0"/><line nr="956" mi="5" ci="0" mb="0" cb="0"/><line nr="957" mi="2" ci="0" mb="2" cb="0"/><line nr="958" mi="4" ci="0" mb="0" cb="0"/><line nr="959" mi="5" ci="0" mb="0" cb="0"/><line nr="961" mi="4" ci="0" mb="0" cb="0"/><line nr="962" mi="1" ci="0" mb="0" cb="0"/><line nr="963" mi="1" ci="0" mb="0" cb="0"/><line nr="965" mi="2" ci="0" mb="0" cb="0"/><line nr="980" mi="2" ci="0" mb="0" cb="0"/><line nr="981" mi="3" ci="0" mb="0" cb="0"/><line nr="982" mi="3" ci="0" mb="0" cb="0"/><line nr="983" mi="1" ci="0" mb="0" cb="0"/><line nr="987" mi="4" ci="0" mb="0" cb="0"/><line nr="988" mi="9" ci="0" mb="2" cb="0"/><line nr="989" mi="7" ci="0" mb="0" cb="0"/><line nr="990" mi="2" ci="0" mb="2" cb="0"/><line nr="991" mi="5" ci="0" mb="0" cb="0"/><line nr="994" mi="3" ci="0" mb="0" cb="0"/><line nr="995" mi="5" ci="0" mb="0" cb="0"/><line nr="996" mi="2" ci="0" mb="2" cb="0"/><line nr="997" mi="4" ci="0" mb="0" cb="0"/><line nr="998" mi="5" ci="0" mb="0" cb="0"/><line nr="1000" mi="5" ci="0" mb="0" cb="0"/><line nr="1001" mi="1" ci="0" mb="0" cb="0"/><line nr="1002" mi="2" ci="0" mb="0" cb="0"/><line nr="1018" mi="2" ci="0" mb="0" cb="0"/><line nr="1019" mi="3" ci="0" mb="0" cb="0"/><line nr="1020" mi="3" ci="0" mb="0" cb="0"/><line nr="1021" mi="3" ci="0" mb="0" cb="0"/><line nr="1022" mi="3" ci="0" mb="0" cb="0"/><line nr="1023" mi="1" ci="0" mb="0" cb="0"/><line nr="1028" mi="4" ci="0" mb="0" cb="0"/><line nr="1029" mi="9" ci="0" mb="2" cb="0"/><line nr="1030" mi="6" ci="0" mb="0" cb="0"/><line nr="1031" mi="6" ci="0" mb="0" cb="0"/><line nr="1032" mi="5" ci="0" mb="0" cb="0"/><line nr="1033" mi="2" ci="0" mb="2" cb="0"/><line nr="1034" mi="4" ci="0" mb="0" cb="0"/><line nr="1035" mi="5" ci="0" mb="0" cb="0"/><line nr="1037" mi="4" ci="0" mb="0" cb="0"/><line nr="1038" mi="1" ci="0" mb="0" cb="0"/><line nr="1040" mi="2" ci="0" mb="0" cb="0"/><line nr="1051" mi="2" ci="0" mb="0" cb="0"/><line nr="1052" mi="1" ci="0" mb="0" cb="0"/><line nr="1056" mi="5" ci="0" mb="2" cb="0"/><line nr="1057" mi="5" ci="0" mb="0" cb="0"/><line nr="1059" mi="5" ci="0" mb="0" cb="0"/><line nr="1060" mi="4" ci="0" mb="0" cb="0"/><line nr="1061" mi="12" ci="0" mb="2" cb="0"/><line nr="1062" mi="4" ci="0" mb="0" cb="0"/><line nr="1063" mi="5" ci="0" mb="0" cb="0"/><line nr="1064" mi="2" ci="0" mb="2" cb="0"/><line nr="1065" mi="4" ci="0" mb="0" cb="0"/><line nr="1066" mi="5" ci="0" mb="0" cb="0"/><line nr="1068" mi="8" ci="0" mb="0" cb="0"/><line nr="1070" mi="2" ci="0" mb="0" cb="0"/><line nr="1093" mi="2" ci="0" mb="0" cb="0"/><line nr="1094" mi="3" ci="0" mb="0" cb="0"/><line nr="1095" mi="1" ci="0" mb="0" cb="0"/><line nr="1100" mi="2" ci="0" mb="0" cb="0"/><line nr="1101" mi="9" ci="0" mb="2" cb="0"/><line nr="1102" mi="6" ci="0" mb="0" cb="0"/><line nr="1103" mi="5" ci="0" mb="0" cb="0"/><line nr="1104" mi="2" ci="0" mb="2" cb="0"/><line nr="1105" mi="5" ci="0" mb="0" cb="0"/><line nr="1108" mi="3" ci="0" mb="2" cb="0"/><line nr="1109" mi="2" ci="0" mb="0" cb="0"/><line nr="1111" mi="1" ci="0" mb="0" cb="0"/><line nr="1112" mi="1" ci="0" mb="0" cb="0"/><line nr="1113" mi="2" ci="0" mb="0" cb="0"/><line nr="1126" mi="2" ci="0" mb="0" cb="0"/><line nr="1127" mi="3" ci="0" mb="0" cb="0"/><line nr="1128" mi="1" ci="0" mb="0" cb="0"/><line nr="1133" mi="2" ci="0" mb="0" cb="0"/><line nr="1134" mi="9" ci="0" mb="2" cb="0"/><line nr="1135" mi="6" ci="0" mb="0" cb="0"/><line nr="1136" mi="5" ci="0" mb="0" cb="0"/><line nr="1137" mi="2" ci="0" mb="2" cb="0"/><line nr="1138" mi="5" ci="0" mb="0" cb="0"/><line nr="1141" mi="3" ci="0" mb="2" cb="0"/><line nr="1142" mi="2" ci="0" mb="0" cb="0"/><line nr="1144" mi="1" ci="0" mb="0" cb="0"/><line nr="1145" mi="1" ci="0" mb="0" cb="0"/><line nr="1146" mi="2" ci="0" mb="0" cb="0"/><line nr="1165" mi="2" ci="0" mb="0" cb="0"/><line nr="1166" mi="3" ci="0" mb="0" cb="0"/><line nr="1167" mi="1" ci="0" mb="0" cb="0"/><line nr="1171" mi="9" ci="0" mb="2" cb="0"/><line nr="1172" mi="2" ci="0" mb="2" cb="0"/><line nr="1173" mi="3" ci="0" mb="2" cb="0"/><line nr="1174" mi="2" ci="0" mb="0" cb="0"/><line nr="1176" mi="5" ci="0" mb="2" cb="0"/><line nr="1177" mi="2" ci="0" mb="0" cb="0"/><line nr="1179" mi="1" ci="0" mb="0" cb="0"/><line nr="1180" mi="2" ci="0" mb="0" cb="0"/><line nr="1191" mi="2" ci="0" mb="0" cb="0"/><line nr="1192" mi="3" ci="0" mb="0" cb="0"/><line nr="1193" mi="1" ci="0" mb="0" cb="0"/><line nr="1197" mi="6" ci="0" mb="0" cb="0"/><line nr="1198" mi="9" ci="0" mb="2" cb="0"/><line nr="1199" mi="10" ci="0" mb="2" cb="0"/><line nr="1200" mi="2" ci="0" mb="2" cb="0"/><line nr="1201" mi="2" ci="0" mb="2" cb="0"/><line nr="1202" mi="5" ci="0" mb="0" cb="0"/><line nr="1204" mi="4" ci="0" mb="2" cb="0"/><line nr="1205" mi="4" ci="0" mb="0" cb="0"/><line nr="1207" mi="1" ci="0" mb="0" cb="0"/><line nr="1208" mi="1" ci="0" mb="0" cb="0"/><line nr="1209" mi="7" ci="0" mb="2" cb="0"/><line nr="1221" mi="2" ci="0" mb="0" cb="0"/><line nr="1222" mi="3" ci="0" mb="0" cb="0"/><line nr="1223" mi="1" ci="0" mb="0" cb="0"/><line nr="1227" mi="9" ci="0" mb="2" cb="0"/><line nr="1228" mi="10" ci="0" mb="2" cb="0"/><line nr="1229" mi="2" ci="0" mb="2" cb="0"/><line nr="1230" mi="2" ci="0" mb="2" cb="0"/><line nr="1231" mi="2" ci="0" mb="0" cb="0"/><line nr="1233" mi="4" ci="0" mb="2" cb="0"/><line nr="1234" mi="2" ci="0" mb="0" cb="0"/><line nr="1236" mi="1" ci="0" mb="0" cb="0"/><line nr="1237" mi="1" ci="0" mb="0" cb="0"/><line nr="1238" mi="2" ci="0" mb="0" cb="0"/><line nr="1250" mi="2" ci="0" mb="0" cb="0"/><line nr="1251" mi="3" ci="0" mb="0" cb="0"/><line nr="1252" mi="1" ci="0" mb="0" cb="0"/><line nr="1256" mi="9" ci="0" mb="2" cb="0"/><line nr="1257" mi="10" ci="0" mb="2" cb="0"/><line nr="1258" mi="2" ci="0" mb="2" cb="0"/><line nr="1259" mi="2" ci="0" mb="2" cb="0"/><line nr="1260" mi="2" ci="0" mb="0" cb="0"/><line nr="1262" mi="4" ci="0" mb="2" cb="0"/><line nr="1263" mi="2" ci="0" mb="0" cb="0"/><line nr="1265" mi="1" ci="0" mb="0" cb="0"/><line nr="1266" mi="1" ci="0" mb="0" cb="0"/><line nr="1267" mi="2" ci="0" mb="0" cb="0"/><line nr="1279" mi="2" ci="0" mb="0" cb="0"/><line nr="1280" mi="1" ci="0" mb="0" cb="0"/><line nr="1286" mi="6" ci="0" mb="0" cb="0"/><line nr="1287" mi="4" ci="0" mb="2" cb="0"/><line nr="1288" mi="5" ci="0" mb="0" cb="0"/><line nr="1290" mi="3" ci="0" mb="0" cb="0"/><line nr="1291" mi="2" ci="0" mb="0" cb="0"/><line nr="1292" mi="11" ci="0" mb="2" cb="0"/><line nr="1293" mi="4" ci="0" mb="0" cb="0"/><line nr="1294" mi="10" ci="0" mb="0" cb="0"/><line nr="1295" mi="8" ci="0" mb="0" cb="0"/><line nr="1297" mi="4" ci="0" mb="0" cb="0"/><line nr="1298" mi="16" ci="0" mb="2" cb="0"/><line nr="1299" mi="4" ci="0" mb="0" cb="0"/><line nr="1301" mi="2" ci="0" mb="0" cb="0"/><line nr="1309" mi="2" ci="0" mb="0" cb="0"/><line nr="1310" mi="1" ci="0" mb="0" cb="0"/><line nr="1314" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1522" covered="130"/><counter type="BRANCH" missed="118" covered="0"/><counter type="LINE" missed="390" covered="39"/><counter type="COMPLEXITY" missed="166" covered="28"/><counter type="METHOD" missed="107" covered="28"/><counter type="CLASS" missed="31" covered="10"/></sourcefile><sourcefile name="FnFloat.java"><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="197" mi="4" ci="0" mb="0" cb="0"/><line nr="211" mi="4" ci="0" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="0" cb="0"/><line nr="238" mi="3" ci="0" mb="0" cb="0"/><line nr="251" mi="3" ci="0" mb="0" cb="0"/><line nr="264" mi="3" ci="0" mb="0" cb="0"/><line nr="279" mi="4" ci="0" mb="0" cb="0"/><line nr="294" mi="4" ci="0" mb="0" cb="0"/><line nr="308" mi="3" ci="0" mb="0" cb="0"/><line nr="322" mi="3" ci="0" mb="0" cb="0"/><line nr="337" mi="3" ci="0" mb="0" cb="0"/><line nr="352" mi="3" ci="0" mb="0" cb="0"/><line nr="366" mi="3" ci="0" mb="0" cb="0"/><line nr="380" mi="3" ci="0" mb="0" cb="0"/><line nr="395" mi="3" ci="0" mb="0" cb="0"/><line nr="410" mi="3" ci="0" mb="0" cb="0"/><line nr="427" mi="3" ci="0" mb="0" cb="0"/><line nr="442" mi="3" ci="0" mb="0" cb="0"/><line nr="465" mi="3" ci="0" mb="0" cb="0"/><line nr="480" mi="3" ci="0" mb="0" cb="0"/><line nr="503" mi="3" ci="0" mb="0" cb="0"/><line nr="518" mi="3" ci="0" mb="0" cb="0"/><line nr="537" mi="3" ci="0" mb="0" cb="0"/><line nr="552" mi="3" ci="0" mb="0" cb="0"/><line nr="574" mi="4" ci="0" mb="0" cb="0"/><line nr="595" mi="4" ci="0" mb="0" cb="0"/><line nr="612" mi="4" ci="0" mb="0" cb="0"/><line nr="633" mi="4" ci="0" mb="0" cb="0"/><line nr="653" mi="4" ci="0" mb="0" cb="0"/><line nr="680" mi="4" ci="0" mb="0" cb="0"/><line nr="706" mi="4" ci="0" mb="0" cb="0"/><line nr="736" mi="4" ci="0" mb="0" cb="0"/><line nr="756" mi="2" ci="0" mb="0" cb="0"/><line nr="769" mi="2" ci="0" mb="0" cb="0"/><line nr="789" mi="2" ci="0" mb="0" cb="0"/><line nr="800" mi="2" ci="0" mb="0" cb="0"/><line nr="811" mi="2" ci="0" mb="0" cb="0"/><line nr="822" mi="2" ci="0" mb="0" cb="0"/><line nr="837" mi="5" ci="0" mb="0" cb="0"/><line nr="851" mi="5" ci="0" mb="0" cb="0"/><line nr="862" mi="2" ci="0" mb="0" cb="0"/><line nr="873" mi="2" ci="0" mb="0" cb="0"/><line nr="884" mi="2" ci="0" mb="0" cb="0"/><line nr="895" mi="2" ci="0" mb="0" cb="0"/><line nr="910" mi="5" ci="0" mb="0" cb="0"/><line nr="924" mi="5" ci="0" mb="0" cb="0"/><line nr="935" mi="0" ci="2" mb="0" cb="0"/><line nr="947" mi="6" ci="0" mb="0" cb="0"/><line nr="959" mi="4" ci="0" mb="0" cb="0"/><line nr="971" mi="4" ci="0" mb="0" cb="0"/><line nr="983" mi="4" ci="0" mb="0" cb="0"/><line nr="995" mi="4" ci="0" mb="0" cb="0"/><line nr="1007" mi="4" ci="0" mb="0" cb="0"/><line nr="1019" mi="4" ci="0" mb="0" cb="0"/><line nr="1032" mi="0" ci="6" mb="0" cb="0"/><line nr="1044" mi="4" ci="0" mb="0" cb="0"/><line nr="1056" mi="4" ci="0" mb="0" cb="0"/><line nr="1068" mi="4" ci="0" mb="0" cb="0"/><line nr="1080" mi="4" ci="0" mb="0" cb="0"/><line nr="1092" mi="4" ci="0" mb="0" cb="0"/><line nr="1104" mi="4" ci="0" mb="0" cb="0"/><line nr="1117" mi="6" ci="0" mb="0" cb="0"/><line nr="1129" mi="4" ci="0" mb="0" cb="0"/><line nr="1141" mi="4" ci="0" mb="0" cb="0"/><line nr="1153" mi="4" ci="0" mb="0" cb="0"/><line nr="1165" mi="4" ci="0" mb="0" cb="0"/><line nr="1177" mi="4" ci="0" mb="0" cb="0"/><line nr="1189" mi="4" ci="0" mb="0" cb="0"/><line nr="1204" mi="0" ci="7" mb="0" cb="0"/><line nr="1218" mi="5" ci="0" mb="0" cb="0"/><line nr="1232" mi="5" ci="0" mb="0" cb="0"/><line nr="1246" mi="5" ci="0" mb="0" cb="0"/><line nr="1260" mi="5" ci="0" mb="0" cb="0"/><line nr="1274" mi="5" ci="0" mb="0" cb="0"/><line nr="1288" mi="5" ci="0" mb="0" cb="0"/><line nr="1303" mi="7" ci="0" mb="0" cb="0"/><line nr="1317" mi="5" ci="0" mb="0" cb="0"/><line nr="1331" mi="5" ci="0" mb="0" cb="0"/><line nr="1345" mi="5" ci="0" mb="0" cb="0"/><line nr="1359" mi="5" ci="0" mb="0" cb="0"/><line nr="1373" mi="5" ci="0" mb="0" cb="0"/><line nr="1387" mi="5" ci="0" mb="0" cb="0"/><line nr="1400" mi="0" ci="6" mb="0" cb="0"/><line nr="1413" mi="4" ci="0" mb="0" cb="0"/><line nr="1426" mi="4" ci="0" mb="0" cb="0"/><line nr="1439" mi="0" ci="4" mb="0" cb="0"/><line nr="1452" mi="4" ci="0" mb="0" cb="0"/><line nr="1465" mi="4" ci="0" mb="0" cb="0"/><line nr="1478" mi="4" ci="0" mb="0" cb="0"/><line nr="1490" mi="0" ci="6" mb="0" cb="0"/><line nr="1502" mi="4" ci="0" mb="0" cb="0"/><line nr="1514" mi="4" ci="0" mb="0" cb="0"/><line nr="1526" mi="4" ci="0" mb="0" cb="0"/><line nr="1538" mi="4" ci="0" mb="0" cb="0"/><line nr="1550" mi="4" ci="0" mb="0" cb="0"/><line nr="1562" mi="4" ci="0" mb="0" cb="0"/><line nr="1577" mi="7" ci="0" mb="0" cb="0"/><line nr="1591" mi="5" ci="0" mb="0" cb="0"/><line nr="1605" mi="5" ci="0" mb="0" cb="0"/><line nr="1619" mi="5" ci="0" mb="0" cb="0"/><line nr="1633" mi="5" ci="0" mb="0" cb="0"/><line nr="1647" mi="5" ci="0" mb="0" cb="0"/><line nr="1661" mi="5" ci="0" mb="0" cb="0"/><line nr="1675" mi="7" ci="0" mb="0" cb="0"/><line nr="1688" mi="5" ci="0" mb="0" cb="0"/><line nr="1701" mi="5" ci="0" mb="0" cb="0"/><line nr="1714" mi="5" ci="0" mb="0" cb="0"/><line nr="1727" mi="5" ci="0" mb="0" cb="0"/><line nr="1740" mi="5" ci="0" mb="0" cb="0"/><line nr="1753" mi="5" ci="0" mb="0" cb="0"/><line nr="1766" mi="0" ci="5" mb="0" cb="0"/><line nr="1780" mi="6" ci="0" mb="0" cb="0"/><line nr="1794" mi="6" ci="0" mb="0" cb="0"/><line nr="1811" mi="4" ci="0" mb="0" cb="0"/><line nr="1827" mi="4" ci="0" mb="0" cb="0"/><line nr="1834" mi="0" ci="2" mb="1" cb="1"/><line nr="1835" mi="2" ci="0" mb="0" cb="0"/><line nr="1837" mi="0" ci="4" mb="0" cb="0"/><line nr="1848" mi="0" ci="2" mb="0" cb="0"/><line nr="1849" mi="0" ci="1" mb="0" cb="0"/><line nr="1853" mi="4" ci="0" mb="2" cb="0"/><line nr="1854" mi="2" ci="0" mb="0" cb="0"/><line nr="1856" mi="5" ci="0" mb="0" cb="0"/><line nr="1857" mi="10" ci="0" mb="2" cb="0"/><line nr="1858" mi="2" ci="0" mb="2" cb="0"/><line nr="1859" mi="4" ci="0" mb="2" cb="0"/><line nr="1860" mi="2" ci="0" mb="0" cb="0"/><line nr="1863" mi="1" ci="0" mb="0" cb="0"/><line nr="1864" mi="2" ci="0" mb="0" cb="0"/><line nr="1871" mi="0" ci="2" mb="0" cb="0"/><line nr="1872" mi="0" ci="1" mb="0" cb="0"/><line nr="1876" mi="4" ci="0" mb="2" cb="0"/><line nr="1877" mi="2" ci="0" mb="0" cb="0"/><line nr="1879" mi="5" ci="0" mb="0" cb="0"/><line nr="1880" mi="10" ci="0" mb="2" cb="0"/><line nr="1881" mi="2" ci="0" mb="2" cb="0"/><line nr="1882" mi="4" ci="0" mb="2" cb="0"/><line nr="1883" mi="2" ci="0" mb="0" cb="0"/><line nr="1886" mi="1" ci="0" mb="0" cb="0"/><line nr="1887" mi="2" ci="0" mb="0" cb="0"/><line nr="1894" mi="0" ci="2" mb="0" cb="0"/><line nr="1895" mi="0" ci="1" mb="0" cb="0"/><line nr="1899" mi="3" ci="0" mb="0" cb="0"/><line nr="1900" mi="10" ci="0" mb="2" cb="0"/><line nr="1901" mi="2" ci="0" mb="2" cb="0"/><line nr="1902" mi="7" ci="0" mb="0" cb="0"/><line nr="1904" mi="1" ci="0" mb="0" cb="0"/><line nr="1905" mi="4" ci="0" mb="0" cb="0"/><line nr="1915" mi="0" ci="2" mb="0" cb="0"/><line nr="1916" mi="0" ci="3" mb="0" cb="0"/><line nr="1917" mi="0" ci="3" mb="0" cb="0"/><line nr="1918" mi="0" ci="1" mb="0" cb="0"/><line nr="1921" mi="2" ci="0" mb="0" cb="0"/><line nr="1922" mi="3" ci="0" mb="0" cb="0"/><line nr="1923" mi="3" ci="0" mb="0" cb="0"/><line nr="1924" mi="3" ci="0" mb="0" cb="0"/><line nr="1925" mi="1" ci="0" mb="0" cb="0"/><line nr="1928" mi="2" ci="0" mb="0" cb="0"/><line nr="1929" mi="3" ci="0" mb="0" cb="0"/><line nr="1930" mi="3" ci="0" mb="0" cb="0"/><line nr="1931" mi="3" ci="0" mb="0" cb="0"/><line nr="1932" mi="1" ci="0" mb="0" cb="0"/><line nr="1937" mi="2" ci="0" mb="0" cb="0"/><line nr="1938" mi="3" ci="0" mb="0" cb="0"/><line nr="1939" mi="10" ci="0" mb="2" cb="0"/><line nr="1940" mi="2" ci="0" mb="2" cb="0"/><line nr="1941" mi="7" ci="0" mb="0" cb="0"/><line nr="1942" mi="1" ci="0" mb="0" cb="0"/><line nr="1944" mi="1" ci="0" mb="0" cb="0"/><line nr="1945" mi="3" ci="0" mb="2" cb="0"/><line nr="1946" mi="10" ci="0" mb="0" cb="0"/><line nr="1948" mi="3" ci="0" mb="2" cb="0"/><line nr="1949" mi="10" ci="0" mb="0" cb="0"/><line nr="1951" mi="9" ci="0" mb="0" cb="0"/><line nr="1971" mi="0" ci="2" mb="0" cb="0"/><line nr="1972" mi="0" ci="1" mb="0" cb="0"/><line nr="1976" mi="3" ci="0" mb="2" cb="0"/><line nr="1977" mi="2" ci="0" mb="0" cb="0"/><line nr="1979" mi="4" ci="0" mb="0" cb="0"/><line nr="1980" mi="16" ci="0" mb="2" cb="0"/><line nr="1981" mi="2" ci="0" mb="2" cb="0"/><line nr="1982" mi="4" ci="0" mb="2" cb="0"/><line nr="1983" mi="2" ci="0" mb="0" cb="0"/><line nr="1987" mi="2" ci="0" mb="0" cb="0"/><line nr="1994" mi="0" ci="2" mb="0" cb="0"/><line nr="1995" mi="0" ci="1" mb="0" cb="0"/><line nr="1999" mi="3" ci="0" mb="2" cb="0"/><line nr="2000" mi="2" ci="0" mb="0" cb="0"/><line nr="2002" mi="4" ci="0" mb="0" cb="0"/><line nr="2003" mi="16" ci="0" mb="2" cb="0"/><line nr="2004" mi="2" ci="0" mb="2" cb="0"/><line nr="2005" mi="4" ci="0" mb="2" cb="0"/><line nr="2006" mi="2" ci="0" mb="0" cb="0"/><line nr="2010" mi="2" ci="0" mb="0" cb="0"/><line nr="2017" mi="0" ci="2" mb="0" cb="0"/><line nr="2018" mi="0" ci="1" mb="0" cb="0"/><line nr="2022" mi="3" ci="0" mb="0" cb="0"/><line nr="2023" mi="16" ci="0" mb="2" cb="0"/><line nr="2024" mi="2" ci="0" mb="2" cb="0"/><line nr="2025" mi="7" ci="0" mb="0" cb="0"/><line nr="2028" mi="4" ci="0" mb="0" cb="0"/><line nr="2038" mi="0" ci="2" mb="0" cb="0"/><line nr="2039" mi="0" ci="3" mb="0" cb="0"/><line nr="2040" mi="0" ci="3" mb="0" cb="0"/><line nr="2041" mi="0" ci="1" mb="0" cb="0"/><line nr="2044" mi="2" ci="0" mb="0" cb="0"/><line nr="2045" mi="3" ci="0" mb="0" cb="0"/><line nr="2046" mi="3" ci="0" mb="0" cb="0"/><line nr="2047" mi="3" ci="0" mb="0" cb="0"/><line nr="2048" mi="1" ci="0" mb="0" cb="0"/><line nr="2051" mi="2" ci="0" mb="0" cb="0"/><line nr="2052" mi="3" ci="0" mb="0" cb="0"/><line nr="2053" mi="3" ci="0" mb="0" cb="0"/><line nr="2054" mi="3" ci="0" mb="0" cb="0"/><line nr="2055" mi="1" ci="0" mb="0" cb="0"/><line nr="2060" mi="2" ci="0" mb="0" cb="0"/><line nr="2061" mi="3" ci="0" mb="0" cb="0"/><line nr="2062" mi="16" ci="0" mb="2" cb="0"/><line nr="2063" mi="2" ci="0" mb="2" cb="0"/><line nr="2064" mi="7" ci="0" mb="0" cb="0"/><line nr="2065" mi="1" ci="0" mb="0" cb="0"/><line nr="2068" mi="3" ci="0" mb="2" cb="0"/><line nr="2069" mi="10" ci="0" mb="0" cb="0"/><line nr="2071" mi="3" ci="0" mb="2" cb="0"/><line nr="2072" mi="10" ci="0" mb="0" cb="0"/><line nr="2074" mi="9" ci="0" mb="0" cb="0"/><line nr="2090" mi="0" ci="2" mb="0" cb="0"/><line nr="2091" mi="0" ci="1" mb="0" cb="0"/><line nr="2095" mi="0" ci="5" mb="0" cb="0"/><line nr="2104" mi="2" ci="0" mb="0" cb="0"/><line nr="2105" mi="3" ci="0" mb="0" cb="0"/><line nr="2106" mi="3" ci="0" mb="0" cb="0"/><line nr="2107" mi="1" ci="0" mb="0" cb="0"/><line nr="2111" mi="5" ci="0" mb="0" cb="0"/><line nr="2112" mi="8" ci="0" mb="0" cb="0"/><line nr="2114" mi="4" ci="0" mb="0" cb="0"/><line nr="2123" mi="0" ci="2" mb="0" cb="0"/><line nr="2124" mi="0" ci="3" mb="0" cb="0"/><line nr="2125" mi="0" ci="3" mb="0" cb="0"/><line nr="2126" mi="0" ci="3" mb="0" cb="0"/><line nr="2127" mi="0" ci="1" mb="0" cb="0"/><line nr="2131" mi="0" ci="5" mb="0" cb="0"/><line nr="2132" mi="0" ci="8" mb="0" cb="0"/><line nr="2134" mi="0" ci="4" mb="0" cb="0"/><line nr="2145" mi="2" ci="0" mb="0" cb="0"/><line nr="2146" mi="3" ci="0" mb="0" cb="0"/><line nr="2147" mi="3" ci="0" mb="0" cb="0"/><line nr="2148" mi="3" ci="0" mb="0" cb="0"/><line nr="2149" mi="3" ci="0" mb="0" cb="0"/><line nr="2150" mi="1" ci="0" mb="0" cb="0"/><line nr="2153" mi="2" ci="0" mb="0" cb="0"/><line nr="2154" mi="3" ci="0" mb="0" cb="0"/><line nr="2155" mi="3" ci="0" mb="0" cb="0"/><line nr="2156" mi="3" ci="0" mb="0" cb="0"/><line nr="2157" mi="3" ci="0" mb="0" cb="0"/><line nr="2158" mi="3" ci="0" mb="0" cb="0"/><line nr="2159" mi="1" ci="0" mb="0" cb="0"/><line nr="2162" mi="0" ci="2" mb="0" cb="0"/><line nr="2163" mi="0" ci="3" mb="0" cb="0"/><line nr="2164" mi="0" ci="3" mb="0" cb="0"/><line nr="2165" mi="0" ci="3" mb="0" cb="0"/><line nr="2166" mi="0" ci="3" mb="0" cb="0"/><line nr="2167" mi="0" ci="3" mb="0" cb="0"/><line nr="2168" mi="0" ci="1" mb="0" cb="0"/><line nr="2172" mi="0" ci="5" mb="0" cb="0"/><line nr="2174" mi="0" ci="3" mb="1" cb="1"/><line nr="2175" mi="11" ci="0" mb="0" cb="0"/><line nr="2176" mi="0" ci="3" mb="1" cb="1"/><line nr="2177" mi="0" ci="11" mb="0" cb="0"/><line nr="2179" mi="9" ci="0" mb="0" cb="0"/><line nr="2181" mi="0" ci="4" mb="0" cb="0"/><line nr="2190" mi="0" ci="2" mb="0" cb="0"/><line nr="2191" mi="0" ci="3" mb="0" cb="0"/><line nr="2192" mi="0" ci="1" mb="0" cb="0"/><line nr="2196" mi="0" ci="7" mb="0" cb="0"/><line nr="2197" mi="0" ci="4" mb="0" cb="0"/><line nr="2208" mi="0" ci="2" mb="0" cb="0"/><line nr="2209" mi="0" ci="3" mb="0" cb="0"/><line nr="2210" mi="0" ci="3" mb="0" cb="0"/><line nr="2211" mi="0" ci="3" mb="0" cb="0"/><line nr="2212" mi="0" ci="3" mb="0" cb="0"/><line nr="2213" mi="0" ci="1" mb="0" cb="0"/><line nr="2216" mi="2" ci="0" mb="0" cb="0"/><line nr="2217" mi="3" ci="0" mb="0" cb="0"/><line nr="2218" mi="3" ci="0" mb="0" cb="0"/><line nr="2219" mi="3" ci="0" mb="0" cb="0"/><line nr="2220" mi="3" ci="0" mb="0" cb="0"/><line nr="2221" mi="3" ci="0" mb="0" cb="0"/><line nr="2222" mi="1" ci="0" mb="0" cb="0"/><line nr="2225" mi="2" ci="0" mb="0" cb="0"/><line nr="2226" mi="3" ci="0" mb="0" cb="0"/><line nr="2227" mi="3" ci="0" mb="0" cb="0"/><line nr="2228" mi="3" ci="0" mb="0" cb="0"/><line nr="2229" mi="3" ci="0" mb="0" cb="0"/><line nr="2230" mi="3" ci="0" mb="0" cb="0"/><line nr="2231" mi="1" ci="0" mb="0" cb="0"/><line nr="2235" mi="0" ci="5" mb="0" cb="0"/><line nr="2237" mi="0" ci="3" mb="1" cb="1"/><line nr="2238" mi="11" ci="0" mb="0" cb="0"/><line nr="2239" mi="0" ci="3" mb="1" cb="1"/><line nr="2240" mi="13" ci="0" mb="0" cb="0"/><line nr="2242" mi="0" ci="8" mb="0" cb="0"/><line nr="2244" mi="0" ci="4" mb="0" cb="0"/><line nr="2255" mi="0" ci="2" mb="0" cb="0"/><line nr="2256" mi="0" ci="3" mb="0" cb="0"/><line nr="2257" mi="0" ci="3" mb="0" cb="0"/><line nr="2258" mi="0" ci="3" mb="0" cb="0"/><line nr="2259" mi="0" ci="1" mb="0" cb="0"/><line nr="2262" mi="2" ci="0" mb="0" cb="0"/><line nr="2263" mi="3" ci="0" mb="0" cb="0"/><line nr="2264" mi="3" ci="0" mb="0" cb="0"/><line nr="2265" mi="3" ci="0" mb="0" cb="0"/><line nr="2266" mi="3" ci="0" mb="0" cb="0"/><line nr="2267" mi="1" ci="0" mb="0" cb="0"/><line nr="2270" mi="2" ci="0" mb="0" cb="0"/><line nr="2271" mi="3" ci="0" mb="0" cb="0"/><line nr="2272" mi="3" ci="0" mb="0" cb="0"/><line nr="2273" mi="3" ci="0" mb="0" cb="0"/><line nr="2274" mi="3" ci="0" mb="0" cb="0"/><line nr="2275" mi="1" ci="0" mb="0" cb="0"/><line nr="2279" mi="0" ci="5" mb="0" cb="0"/><line nr="2281" mi="0" ci="3" mb="1" cb="1"/><line nr="2282" mi="8" ci="0" mb="0" cb="0"/><line nr="2283" mi="0" ci="3" mb="1" cb="1"/><line nr="2284" mi="10" ci="0" mb="0" cb="0"/><line nr="2286" mi="0" ci="5" mb="0" cb="0"/><line nr="2288" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1026" covered="283"/><counter type="BRANCH" missed="63" covered="7"/><counter type="LINE" missed="261" covered="87"/><counter type="COMPLEXITY" missed="174" covered="29"/><counter type="METHOD" missed="139" covered="29"/><counter type="CLASS" missed="1" covered="15"/></sourcefile><sourcefile name="FnMap.java"><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="6" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="27"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Call.java"><line nr="67" mi="9" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="9" ci="0" mb="0" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="9" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="9" ci="0" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="0" cb="0"/><line nr="194" mi="9" ci="0" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="0" cb="0"/><line nr="225" mi="9" ci="0" mb="0" cb="0"/><line nr="241" mi="4" ci="0" mb="0" cb="0"/><line nr="256" mi="9" ci="0" mb="0" cb="0"/><line nr="272" mi="4" ci="0" mb="0" cb="0"/><line nr="287" mi="9" ci="0" mb="0" cb="0"/><line nr="303" mi="4" ci="0" mb="0" cb="0"/><line nr="318" mi="9" ci="0" mb="0" cb="0"/><line nr="334" mi="4" ci="0" mb="0" cb="0"/><line nr="349" mi="9" ci="0" mb="0" cb="0"/><line nr="365" mi="4" ci="0" mb="0" cb="0"/><line nr="380" mi="9" ci="0" mb="0" cb="0"/><line nr="396" mi="4" ci="0" mb="0" cb="0"/><line nr="411" mi="0" ci="9" mb="0" cb="0"/><line nr="427" mi="0" ci="4" mb="0" cb="0"/><line nr="442" mi="9" ci="0" mb="0" cb="0"/><line nr="458" mi="4" ci="0" mb="0" cb="0"/><line nr="473" mi="9" ci="0" mb="0" cb="0"/><line nr="489" mi="4" ci="0" mb="0" cb="0"/><line nr="504" mi="9" ci="0" mb="0" cb="0"/><line nr="520" mi="4" ci="0" mb="0" cb="0"/><line nr="535" mi="9" ci="0" mb="0" cb="0"/><line nr="551" mi="4" ci="0" mb="0" cb="0"/><line nr="566" mi="9" ci="0" mb="0" cb="0"/><line nr="582" mi="4" ci="0" mb="0" cb="0"/><line nr="597" mi="9" ci="0" mb="0" cb="0"/><line nr="613" mi="4" ci="0" mb="0" cb="0"/><line nr="629" mi="10" ci="0" mb="0" cb="0"/><line nr="645" mi="5" ci="0" mb="0" cb="0"/><line nr="661" mi="10" ci="0" mb="0" cb="0"/><line nr="677" mi="5" ci="0" mb="0" cb="0"/><line nr="693" mi="10" ci="0" mb="0" cb="0"/><line nr="709" mi="5" ci="0" mb="0" cb="0"/><line nr="718" mi="0" ci="2" mb="0" cb="0"/><line nr="719" mi="0" ci="3" mb="0" cb="0"/><line nr="720" mi="0" ci="3" mb="0" cb="0"/><line nr="721" mi="0" ci="3" mb="0" cb="0"/><line nr="722" mi="0" ci="3" mb="0" cb="0"/><line nr="723" mi="0" ci="1" mb="0" cb="0"/><line nr="730" mi="0" ci="4" mb="0" cb="0"/><line nr="732" mi="0" ci="9" mb="0" cb="0"/><line nr="733" mi="0" ci="3" mb="0" cb="0"/><line nr="735" mi="0" ci="8" mb="3" cb="3"/><line nr="736" mi="0" ci="5" mb="1" cb="1"/><line nr="737" mi="13" ci="0" mb="0" cb="0"/><line nr="738" mi="5" ci="0" mb="0" cb="0"/><line nr="742" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="285" covered="59"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="42" covered="14"/><counter type="COMPLEXITY" missed="44" covered="4"/><counter type="METHOD" missed="40" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FnListOf.java"><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="6" ci="0" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="155" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="167" mi="5" ci="0" mb="0" cb="0"/><line nr="171" mi="6" ci="0" mb="0" cb="0"/><line nr="175" mi="5" ci="0" mb="0" cb="0"/><line nr="179" mi="6" ci="0" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="5" ci="0" mb="0" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="195" mi="0" ci="6" mb="0" cb="0"/><line nr="199" mi="0" ci="6" mb="0" cb="0"/><line nr="203" mi="5" ci="0" mb="0" cb="0"/><line nr="207" mi="5" ci="0" mb="0" cb="0"/><line nr="211" mi="5" ci="0" mb="0" cb="0"/><line nr="215" mi="5" ci="0" mb="0" cb="0"/><line nr="223" mi="4" ci="0" mb="0" cb="0"/><line nr="236" mi="5" ci="0" mb="0" cb="0"/><line nr="240" mi="5" ci="0" mb="0" cb="0"/><line nr="246" mi="4" ci="0" mb="0" cb="0"/><line nr="255" mi="5" ci="0" mb="0" cb="0"/><line nr="259" mi="5" ci="0" mb="0" cb="0"/><line nr="263" mi="6" ci="0" mb="0" cb="0"/><line nr="267" mi="0" ci="6" mb="0" cb="0"/><line nr="271" mi="6" ci="0" mb="0" cb="0"/><line nr="278" mi="4" ci="0" mb="0" cb="0"/><line nr="289" mi="0" ci="2" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="0"/><line nr="291" mi="0" ci="1" mb="0" cb="0"/><line nr="299" mi="0" ci="2" mb="0" cb="0"/><line nr="300" mi="0" ci="1" mb="0" cb="0"/><line nr="304" mi="0" ci="2" mb="0" cb="0"/><line nr="315" mi="3" ci="0" mb="0" cb="0"/><line nr="316" mi="1" ci="0" mb="0" cb="0"/><line nr="320" mi="2" ci="0" mb="0" cb="0"/><line nr="330" mi="0" ci="3" mb="0" cb="0"/><line nr="331" mi="0" ci="1" mb="0" cb="0"/><line nr="335" mi="0" ci="2" mb="0" cb="0"/><line nr="348" mi="0" ci="2" mb="0" cb="0"/><line nr="349" mi="0" ci="1" mb="0" cb="0"/><line nr="353" mi="0" ci="8" mb="0" cb="0"/><line nr="365" mi="0" ci="3" mb="0" cb="0"/><line nr="366" mi="0" ci="1" mb="0" cb="0"/><line nr="370" mi="0" ci="2" mb="0" cb="0"/><line nr="382" mi="0" ci="4" mb="0" cb="0"/><line nr="383" mi="0" ci="1" mb="0" cb="0"/><line nr="387" mi="0" ci="2" mb="0" cb="0"/><line nr="399" mi="0" ci="3" mb="0" cb="0"/><line nr="400" mi="0" ci="1" mb="0" cb="0"/><line nr="404" mi="0" ci="2" mb="0" cb="0"/><line nr="416" mi="0" ci="3" mb="0" cb="0"/><line nr="417" mi="0" ci="1" mb="0" cb="0"/><line nr="421" mi="0" ci="2" mb="0" cb="0"/><line nr="432" mi="3" ci="0" mb="0" cb="0"/><line nr="433" mi="1" ci="0" mb="0" cb="0"/><line nr="437" mi="2" ci="0" mb="0" cb="0"/><line nr="448" mi="0" ci="3" mb="0" cb="0"/><line nr="449" mi="0" ci="1" mb="0" cb="0"/><line nr="453" mi="0" ci="2" mb="0" cb="0"/><line nr="464" mi="3" ci="0" mb="0" cb="0"/><line nr="465" mi="1" ci="0" mb="0" cb="0"/><line nr="469" mi="2" ci="0" mb="0" cb="0"/><line nr="480" mi="0" ci="3" mb="0" cb="0"/><line nr="481" mi="0" ci="1" mb="0" cb="0"/><line nr="485" mi="0" ci="2" mb="0" cb="0"/><line nr="496" mi="0" ci="2" mb="0" cb="0"/><line nr="497" mi="0" ci="1" mb="0" cb="0"/><line nr="501" mi="0" ci="2" mb="0" cb="0"/><line nr="512" mi="3" ci="0" mb="0" cb="0"/><line nr="513" mi="1" ci="0" mb="0" cb="0"/><line nr="517" mi="2" ci="0" mb="0" cb="0"/><line nr="528" mi="3" ci="0" mb="0" cb="0"/><line nr="529" mi="1" ci="0" mb="0" cb="0"/><line nr="533" mi="2" ci="0" mb="0" cb="0"/><line nr="543" mi="3" ci="0" mb="0" cb="0"/><line nr="544" mi="1" ci="0" mb="0" cb="0"/><line nr="548" mi="2" ci="0" mb="0" cb="0"/><line nr="558" mi="3" ci="0" mb="0" cb="0"/><line nr="559" mi="1" ci="0" mb="0" cb="0"/><line nr="563" mi="2" ci="0" mb="0" cb="0"/><line nr="577" mi="0" ci="2" mb="0" cb="0"/><line nr="578" mi="0" ci="3" mb="0" cb="0"/><line nr="579" mi="0" ci="3" mb="0" cb="0"/><line nr="580" mi="0" ci="1" mb="0" cb="0"/><line nr="585" mi="0" ci="5" mb="0" cb="0"/><line nr="586" mi="0" ci="9" mb="0" cb="0"/><line nr="587" mi="0" ci="4" mb="0" cb="0"/><line nr="600" mi="0" ci="2" mb="0" cb="0"/><line nr="601" mi="0" ci="1" mb="0" cb="0"/><line nr="605" mi="0" ci="5" mb="0" cb="0"/><line nr="621" mi="2" ci="0" mb="0" cb="0"/><line nr="622" mi="3" ci="0" mb="0" cb="0"/><line nr="623" mi="3" ci="0" mb="0" cb="0"/><line nr="624" mi="1" ci="0" mb="0" cb="0"/><line nr="628" mi="4" ci="0" mb="0" cb="0"/><line nr="629" mi="9" ci="0" mb="2" cb="0"/><line nr="630" mi="9" ci="0" mb="0" cb="0"/><line nr="631" mi="1" ci="0" mb="0" cb="0"/><line nr="632" mi="2" ci="0" mb="0" cb="0"/><line nr="642" mi="2" ci="0" mb="0" cb="0"/><line nr="643" mi="3" ci="0" mb="0" cb="0"/><line nr="644" mi="3" ci="0" mb="0" cb="0"/><line nr="645" mi="1" ci="0" mb="0" cb="0"/><line nr="649" mi="4" ci="0" mb="0" cb="0"/><line nr="650" mi="9" ci="0" mb="2" cb="0"/><line nr="651" mi="9" ci="0" mb="0" cb="0"/><line nr="652" mi="1" ci="0" mb="0" cb="0"/><line nr="653" mi="2" ci="0" mb="0" cb="0"/><line nr="666" mi="0" ci="2" mb="0" cb="0"/><line nr="667" mi="0" ci="3" mb="0" cb="0"/><line nr="668" mi="0" ci="6" mb="0" cb="0"/><line nr="669" mi="0" ci="1" mb="0" cb="0"/><line nr="672" mi="2" ci="0" mb="0" cb="0"/><line nr="673" mi="3" ci="0" mb="0" cb="0"/><line nr="674" mi="4" ci="0" mb="0" cb="0"/><line nr="675" mi="1" ci="0" mb="0" cb="0"/><line nr="679" mi="0" ci="6" mb="1" cb="1"/><line nr="680" mi="8" ci="0" mb="0" cb="0"/><line nr="681" mi="6" ci="0" mb="0" cb="0"/><line nr="682" mi="5" ci="0" mb="0" cb="0"/><line nr="684" mi="0" ci="4" mb="0" cb="0"/><line nr="685" mi="0" ci="2" mb="0" cb="0"/><line nr="686" mi="0" ci="9" mb="0" cb="2"/><line nr="687" mi="0" ci="8" mb="0" cb="0"/><line nr="688" mi="0" ci="1" mb="0" cb="0"/><line nr="689" mi="0" ci="1" mb="0" cb="0"/><line nr="690" mi="0" ci="2" mb="0" cb="0"/><line nr="700" mi="2" ci="0" mb="0" cb="0"/><line nr="701" mi="3" ci="0" mb="0" cb="0"/><line nr="702" mi="6" ci="0" mb="0" cb="0"/><line nr="703" mi="1" ci="0" mb="0" cb="0"/><line nr="706" mi="2" ci="0" mb="0" cb="0"/><line nr="707" mi="3" ci="0" mb="0" cb="0"/><line nr="708" mi="4" ci="0" mb="0" cb="0"/><line nr="709" mi="1" ci="0" mb="0" cb="0"/><line nr="713" mi="6" ci="0" mb="2" cb="0"/><line nr="714" mi="8" ci="0" mb="0" cb="0"/><line nr="715" mi="6" ci="0" mb="0" cb="0"/><line nr="716" mi="5" ci="0" mb="0" cb="0"/><line nr="718" mi="4" ci="0" mb="0" cb="0"/><line nr="719" mi="2" ci="0" mb="0" cb="0"/><line nr="720" mi="9" ci="0" mb="2" cb="0"/><line nr="721" mi="8" ci="0" mb="0" cb="0"/><line nr="722" mi="1" ci="0" mb="0" cb="0"/><line nr="723" mi="1" ci="0" mb="0" cb="0"/><line nr="724" mi="2" ci="0" mb="0" cb="0"/><line nr="737" mi="2" ci="0" mb="0" cb="0"/><line nr="738" mi="3" ci="0" mb="0" cb="0"/><line nr="739" mi="3" ci="0" mb="0" cb="0"/><line nr="740" mi="1" ci="0" mb="0" cb="0"/><line nr="744" mi="4" ci="0" mb="0" cb="0"/><line nr="745" mi="9" ci="0" mb="2" cb="0"/><line nr="746" mi="7" ci="0" mb="0" cb="0"/><line nr="747" mi="2" ci="0" mb="2" cb="0"/><line nr="748" mi="5" ci="0" mb="0" cb="0"/><line nr="751" mi="7" ci="0" mb="0" cb="0"/><line nr="752" mi="1" ci="0" mb="0" cb="0"/><line nr="753" mi="2" ci="0" mb="0" cb="0"/><line nr="767" mi="2" ci="0" mb="0" cb="0"/><line nr="768" mi="3" ci="0" mb="0" cb="0"/><line nr="769" mi="3" ci="0" mb="0" cb="0"/><line nr="770" mi="3" ci="0" mb="0" cb="0"/><line nr="771" mi="3" ci="0" mb="0" cb="0"/><line nr="772" mi="1" ci="0" mb="0" cb="0"/><line nr="776" mi="4" ci="0" mb="0" cb="0"/><line nr="777" mi="9" ci="0" mb="2" cb="0"/><line nr="778" mi="6" ci="0" mb="0" cb="0"/><line nr="779" mi="6" ci="0" mb="0" cb="0"/><line nr="780" mi="5" ci="0" mb="0" cb="0"/><line nr="781" mi="1" ci="0" mb="0" cb="0"/><line nr="782" mi="2" ci="0" mb="0" cb="0"/><line nr="792" mi="0" ci="2" mb="0" cb="0"/><line nr="793" mi="0" ci="1" mb="0" cb="0"/><line nr="797" mi="0" ci="5" mb="1" cb="1"/><line nr="798" mi="5" ci="0" mb="0" cb="0"/><line nr="800" mi="0" ci="4" mb="0" cb="0"/><line nr="801" mi="0" ci="12" mb="0" cb="2"/><line nr="802" mi="0" ci="11" mb="0" cb="0"/><line nr="804" mi="0" ci="2" mb="0" cb="0"/><line nr="815" mi="4" ci="0" mb="0" cb="0"/><line nr="816" mi="11" ci="0" mb="2" cb="0"/><line nr="817" mi="3" ci="0" mb="0" cb="0"/><line nr="818" mi="4" ci="0" mb="0" cb="0"/><line nr="819" mi="8" ci="0" mb="0" cb="0"/><line nr="820" mi="7" ci="0" mb="0" cb="0"/><line nr="821" mi="1" ci="0" mb="0" cb="0"/><line nr="822" mi="2" ci="0" mb="0" cb="0"/><line nr="840" mi="2" ci="0" mb="0" cb="0"/><line nr="841" mi="3" ci="0" mb="0" cb="0"/><line nr="842" mi="3" ci="0" mb="0" cb="0"/><line nr="843" mi="1" ci="0" mb="0" cb="0"/><line nr="847" mi="4" ci="0" mb="0" cb="0"/><line nr="848" mi="9" ci="0" mb="2" cb="0"/><line nr="849" mi="6" ci="0" mb="0" cb="0"/><line nr="850" mi="5" ci="0" mb="0" cb="0"/><line nr="851" mi="2" ci="0" mb="2" cb="0"/><line nr="852" mi="4" ci="0" mb="0" cb="0"/><line nr="853" mi="5" ci="0" mb="0" cb="0"/><line nr="855" mi="4" ci="0" mb="0" cb="0"/><line nr="856" mi="1" ci="0" mb="0" cb="0"/><line nr="857" mi="2" ci="0" mb="0" cb="0"/><line nr="869" mi="2" ci="0" mb="0" cb="0"/><line nr="870" mi="3" ci="0" mb="0" cb="0"/><line nr="871" mi="3" ci="0" mb="0" cb="0"/><line nr="872" mi="1" ci="0" mb="0" cb="0"/><line nr="877" mi="4" ci="0" mb="0" cb="0"/><line nr="878" mi="9" ci="0" mb="2" cb="0"/><line nr="879" mi="6" ci="0" mb="0" cb="0"/><line nr="880" mi="5" ci="0" mb="0" cb="0"/><line nr="881" mi="2" ci="0" mb="2" cb="0"/><line nr="882" mi="4" ci="0" mb="0" cb="0"/><line nr="883" mi="5" ci="0" mb="0" cb="0"/><line nr="885" mi="4" ci="0" mb="0" cb="0"/><line nr="886" mi="1" ci="0" mb="0" cb="0"/><line nr="888" mi="2" ci="0" mb="0" cb="0"/><line nr="908" mi="0" ci="2" mb="0" cb="0"/><line nr="909" mi="0" ci="3" mb="0" cb="0"/><line nr="910" mi="0" ci="6" mb="0" cb="0"/><line nr="911" mi="0" ci="1" mb="0" cb="0"/><line nr="914" mi="2" ci="0" mb="0" cb="0"/><line nr="915" mi="3" ci="0" mb="0" cb="0"/><line nr="916" mi="4" ci="0" mb="0" cb="0"/><line nr="917" mi="1" ci="0" mb="0" cb="0"/><line nr="922" mi="0" ci="6" mb="1" cb="1"/><line nr="923" mi="8" ci="0" mb="0" cb="0"/><line nr="924" mi="6" ci="0" mb="0" cb="0"/><line nr="925" mi="5" ci="0" mb="0" cb="0"/><line nr="927" mi="0" ci="4" mb="0" cb="0"/><line nr="928" mi="0" ci="2" mb="0" cb="0"/><line nr="929" mi="0" ci="9" mb="0" cb="2"/><line nr="930" mi="0" ci="5" mb="0" cb="0"/><line nr="931" mi="0" ci="5" mb="0" cb="0"/><line nr="932" mi="0" ci="2" mb="0" cb="2"/><line nr="933" mi="0" ci="4" mb="0" cb="0"/><line nr="934" mi="0" ci="5" mb="0" cb="0"/><line nr="936" mi="0" ci="4" mb="0" cb="0"/><line nr="937" mi="0" ci="1" mb="0" cb="0"/><line nr="938" mi="0" ci="1" mb="0" cb="0"/><line nr="939" mi="0" ci="2" mb="0" cb="0"/><line nr="952" mi="0" ci="2" mb="0" cb="0"/><line nr="953" mi="0" ci="3" mb="0" cb="0"/><line nr="954" mi="0" ci="6" mb="0" cb="0"/><line nr="955" mi="0" ci="1" mb="0" cb="0"/><line nr="958" mi="2" ci="0" mb="0" cb="0"/><line nr="959" mi="3" ci="0" mb="0" cb="0"/><line nr="960" mi="4" ci="0" mb="0" cb="0"/><line nr="961" mi="1" ci="0" mb="0" cb="0"/><line nr="966" mi="0" ci="6" mb="1" cb="1"/><line nr="967" mi="8" ci="0" mb="0" cb="0"/><line nr="968" mi="6" ci="0" mb="0" cb="0"/><line nr="969" mi="5" ci="0" mb="0" cb="0"/><line nr="971" mi="0" ci="4" mb="0" cb="0"/><line nr="972" mi="0" ci="2" mb="0" cb="0"/><line nr="973" mi="0" ci="9" mb="0" cb="2"/><line nr="974" mi="0" ci="5" mb="0" cb="0"/><line nr="975" mi="0" ci="5" mb="0" cb="0"/><line nr="976" mi="0" ci="2" mb="0" cb="2"/><line nr="977" mi="0" ci="4" mb="0" cb="0"/><line nr="978" mi="0" ci="5" mb="0" cb="0"/><line nr="980" mi="0" ci="4" mb="0" cb="0"/><line nr="981" mi="0" ci="1" mb="0" cb="0"/><line nr="982" mi="0" ci="1" mb="0" cb="0"/><line nr="984" mi="0" ci="2" mb="0" cb="0"/><line nr="1003" mi="2" ci="0" mb="0" cb="0"/><line nr="1004" mi="3" ci="0" mb="0" cb="0"/><line nr="1005" mi="3" ci="0" mb="0" cb="0"/><line nr="1006" mi="1" ci="0" mb="0" cb="0"/><line nr="1010" mi="4" ci="0" mb="0" cb="0"/><line nr="1011" mi="9" ci="0" mb="2" cb="0"/><line nr="1012" mi="7" ci="0" mb="0" cb="0"/><line nr="1013" mi="2" ci="0" mb="2" cb="0"/><line nr="1014" mi="5" ci="0" mb="0" cb="0"/><line nr="1017" mi="3" ci="0" mb="0" cb="0"/><line nr="1018" mi="5" ci="0" mb="0" cb="0"/><line nr="1019" mi="2" ci="0" mb="2" cb="0"/><line nr="1020" mi="4" ci="0" mb="0" cb="0"/><line nr="1021" mi="5" ci="0" mb="0" cb="0"/><line nr="1023" mi="5" ci="0" mb="0" cb="0"/><line nr="1024" mi="1" ci="0" mb="0" cb="0"/><line nr="1025" mi="2" ci="0" mb="0" cb="0"/><line nr="1040" mi="2" ci="0" mb="0" cb="0"/><line nr="1041" mi="3" ci="0" mb="0" cb="0"/><line nr="1042" mi="3" ci="0" mb="0" cb="0"/><line nr="1043" mi="3" ci="0" mb="0" cb="0"/><line nr="1044" mi="3" ci="0" mb="0" cb="0"/><line nr="1045" mi="1" ci="0" mb="0" cb="0"/><line nr="1050" mi="4" ci="0" mb="0" cb="0"/><line nr="1051" mi="9" ci="0" mb="2" cb="0"/><line nr="1052" mi="6" ci="0" mb="0" cb="0"/><line nr="1053" mi="6" ci="0" mb="0" cb="0"/><line nr="1054" mi="5" ci="0" mb="0" cb="0"/><line nr="1055" mi="2" ci="0" mb="2" cb="0"/><line nr="1056" mi="4" ci="0" mb="0" cb="0"/><line nr="1057" mi="5" ci="0" mb="0" cb="0"/><line nr="1059" mi="4" ci="0" mb="0" cb="0"/><line nr="1060" mi="1" ci="0" mb="0" cb="0"/><line nr="1062" mi="2" ci="0" mb="0" cb="0"/><line nr="1075" mi="2" ci="0" mb="0" cb="0"/><line nr="1076" mi="1" ci="0" mb="0" cb="0"/><line nr="1080" mi="5" ci="0" mb="2" cb="0"/><line nr="1081" mi="5" ci="0" mb="0" cb="0"/><line nr="1083" mi="4" ci="0" mb="0" cb="0"/><line nr="1084" mi="12" ci="0" mb="2" cb="0"/><line nr="1085" mi="4" ci="0" mb="0" cb="0"/><line nr="1086" mi="5" ci="0" mb="0" cb="0"/><line nr="1087" mi="2" ci="0" mb="2" cb="0"/><line nr="1088" mi="4" ci="0" mb="0" cb="0"/><line nr="1089" mi="5" ci="0" mb="0" cb="0"/><line nr="1091" mi="8" ci="0" mb="0" cb="0"/><line nr="1093" mi="2" ci="0" mb="0" cb="0"/><line nr="1118" mi="2" ci="0" mb="0" cb="0"/><line nr="1119" mi="3" ci="0" mb="0" cb="0"/><line nr="1120" mi="1" ci="0" mb="0" cb="0"/><line nr="1125" mi="2" ci="0" mb="0" cb="0"/><line nr="1126" mi="9" ci="0" mb="2" cb="0"/><line nr="1127" mi="6" ci="0" mb="0" cb="0"/><line nr="1128" mi="5" ci="0" mb="0" cb="0"/><line nr="1129" mi="2" ci="0" mb="2" cb="0"/><line nr="1130" mi="5" ci="0" mb="0" cb="0"/><line nr="1133" mi="3" ci="0" mb="2" cb="0"/><line nr="1134" mi="2" ci="0" mb="0" cb="0"/><line nr="1136" mi="1" ci="0" mb="0" cb="0"/><line nr="1137" mi="1" ci="0" mb="0" cb="0"/><line nr="1138" mi="2" ci="0" mb="0" cb="0"/><line nr="1151" mi="2" ci="0" mb="0" cb="0"/><line nr="1152" mi="3" ci="0" mb="0" cb="0"/><line nr="1153" mi="1" ci="0" mb="0" cb="0"/><line nr="1158" mi="2" ci="0" mb="0" cb="0"/><line nr="1159" mi="9" ci="0" mb="2" cb="0"/><line nr="1160" mi="6" ci="0" mb="0" cb="0"/><line nr="1161" mi="5" ci="0" mb="0" cb="0"/><line nr="1162" mi="2" ci="0" mb="2" cb="0"/><line nr="1163" mi="5" ci="0" mb="0" cb="0"/><line nr="1166" mi="3" ci="0" mb="2" cb="0"/><line nr="1167" mi="2" ci="0" mb="0" cb="0"/><line nr="1169" mi="1" ci="0" mb="0" cb="0"/><line nr="1170" mi="1" ci="0" mb="0" cb="0"/><line nr="1171" mi="2" ci="0" mb="0" cb="0"/><line nr="1190" mi="2" ci="0" mb="0" cb="0"/><line nr="1191" mi="3" ci="0" mb="0" cb="0"/><line nr="1192" mi="1" ci="0" mb="0" cb="0"/><line nr="1196" mi="9" ci="0" mb="2" cb="0"/><line nr="1197" mi="2" ci="0" mb="2" cb="0"/><line nr="1198" mi="3" ci="0" mb="2" cb="0"/><line nr="1199" mi="2" ci="0" mb="0" cb="0"/><line nr="1201" mi="5" ci="0" mb="2" cb="0"/><line nr="1202" mi="2" ci="0" mb="0" cb="0"/><line nr="1204" mi="1" ci="0" mb="0" cb="0"/><line nr="1205" mi="2" ci="0" mb="0" cb="0"/><line nr="1216" mi="2" ci="0" mb="0" cb="0"/><line nr="1217" mi="3" ci="0" mb="0" cb="0"/><line nr="1218" mi="1" ci="0" mb="0" cb="0"/><line nr="1222" mi="6" ci="0" mb="0" cb="0"/><line nr="1223" mi="9" ci="0" mb="2" cb="0"/><line nr="1224" mi="10" ci="0" mb="2" cb="0"/><line nr="1225" mi="2" ci="0" mb="2" cb="0"/><line nr="1226" mi="2" ci="0" mb="2" cb="0"/><line nr="1227" mi="5" ci="0" mb="0" cb="0"/><line nr="1229" mi="4" ci="0" mb="2" cb="0"/><line nr="1230" mi="4" ci="0" mb="0" cb="0"/><line nr="1232" mi="1" ci="0" mb="0" cb="0"/><line nr="1233" mi="1" ci="0" mb="0" cb="0"/><line nr="1234" mi="7" ci="0" mb="2" cb="0"/><line nr="1246" mi="0" ci="2" mb="0" cb="0"/><line nr="1247" mi="0" ci="3" mb="0" cb="0"/><line nr="1248" mi="0" ci="1" mb="0" cb="0"/><line nr="1252" mi="0" ci="9" mb="1" cb="1"/><line nr="1253" mi="0" ci="10" mb="0" cb="2"/><line nr="1254" mi="0" ci="2" mb="1" cb="1"/><line nr="1255" mi="2" ci="0" mb="2" cb="0"/><line nr="1256" mi="2" ci="0" mb="0" cb="0"/><line nr="1258" mi="0" ci="4" mb="0" cb="2"/><line nr="1259" mi="0" ci="2" mb="0" cb="0"/><line nr="1261" mi="0" ci="1" mb="0" cb="0"/><line nr="1262" mi="0" ci="1" mb="0" cb="0"/><line nr="1263" mi="2" ci="0" mb="0" cb="0"/><line nr="1275" mi="2" ci="0" mb="0" cb="0"/><line nr="1276" mi="3" ci="0" mb="0" cb="0"/><line nr="1277" mi="1" ci="0" mb="0" cb="0"/><line nr="1281" mi="9" ci="0" mb="2" cb="0"/><line nr="1282" mi="10" ci="0" mb="2" cb="0"/><line nr="1283" mi="2" ci="0" mb="2" cb="0"/><line nr="1284" mi="2" ci="0" mb="2" cb="0"/><line nr="1285" mi="2" ci="0" mb="0" cb="0"/><line nr="1287" mi="4" ci="0" mb="2" cb="0"/><line nr="1288" mi="2" ci="0" mb="0" cb="0"/><line nr="1290" mi="1" ci="0" mb="0" cb="0"/><line nr="1291" mi="1" ci="0" mb="0" cb="0"/><line nr="1292" mi="2" ci="0" mb="0" cb="0"/><line nr="1305" mi="2" ci="0" mb="0" cb="0"/><line nr="1306" mi="1" ci="0" mb="0" cb="0"/><line nr="1312" mi="6" ci="0" mb="0" cb="0"/><line nr="1313" mi="4" ci="0" mb="2" cb="0"/><line nr="1314" mi="5" ci="0" mb="0" cb="0"/><line nr="1316" mi="3" ci="0" mb="0" cb="0"/><line nr="1317" mi="2" ci="0" mb="0" cb="0"/><line nr="1318" mi="11" ci="0" mb="2" cb="0"/><line nr="1319" mi="4" ci="0" mb="0" cb="0"/><line nr="1320" mi="10" ci="0" mb="0" cb="0"/><line nr="1321" mi="8" ci="0" mb="0" cb="0"/><line nr="1323" mi="4" ci="0" mb="0" cb="0"/><line nr="1324" mi="16" ci="0" mb="2" cb="0"/><line nr="1325" mi="4" ci="0" mb="0" cb="0"/><line nr="1327" mi="2" ci="0" mb="0" cb="0"/><line nr="1335" mi="2" ci="0" mb="0" cb="0"/><line nr="1336" mi="1" ci="0" mb="0" cb="0"/><line nr="1340" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1177" covered="432"/><counter type="BRANCH" missed="96" covered="22"/><counter type="LINE" missed="308" covered="123"/><counter type="COMPLEXITY" missed="137" covered="60"/><counter type="METHOD" missed="86" covered="52"/><counter type="CLASS" missed="24" covered="18"/></sourcefile><sourcefile name="Fn.java"><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><line nr="192" mi="3" ci="0" mb="0" cb="0"/><line nr="208" mi="3" ci="0" mb="0" cb="0"/><line nr="224" mi="3" ci="0" mb="0" cb="0"/><line nr="241" mi="3" ci="0" mb="0" cb="0"/><line nr="257" mi="3" ci="0" mb="0" cb="0"/><line nr="273" mi="3" ci="0" mb="0" cb="0"/><line nr="289" mi="3" ci="0" mb="0" cb="0"/><line nr="305" mi="3" ci="0" mb="0" cb="0"/><line nr="321" mi="3" ci="0" mb="0" cb="0"/><line nr="337" mi="3" ci="0" mb="0" cb="0"/><line nr="353" mi="3" ci="0" mb="0" cb="0"/><line nr="369" mi="3" ci="0" mb="0" cb="0"/><line nr="385" mi="3" ci="0" mb="0" cb="0"/><line nr="401" mi="3" ci="0" mb="0" cb="0"/><line nr="417" mi="3" ci="0" mb="0" cb="0"/><line nr="434" mi="3" ci="0" mb="0" cb="0"/><line nr="450" mi="3" ci="0" mb="0" cb="0"/><line nr="466" mi="3" ci="0" mb="0" cb="0"/><line nr="482" mi="3" ci="0" mb="0" cb="0"/><line nr="499" mi="3" ci="0" mb="0" cb="0"/><line nr="515" mi="3" ci="0" mb="0" cb="0"/><line nr="531" mi="3" ci="0" mb="0" cb="0"/><line nr="547" mi="3" ci="0" mb="0" cb="0"/><line nr="564" mi="3" ci="0" mb="0" cb="0"/><line nr="580" mi="3" ci="0" mb="0" cb="0"/><line nr="596" mi="3" ci="0" mb="0" cb="0"/><line nr="612" mi="3" ci="0" mb="0" cb="0"/><line nr="629" mi="3" ci="0" mb="0" cb="0"/><line nr="645" mi="3" ci="0" mb="0" cb="0"/><line nr="661" mi="3" ci="0" mb="0" cb="0"/><line nr="677" mi="3" ci="0" mb="0" cb="0"/><line nr="694" mi="3" ci="0" mb="0" cb="0"/><line nr="710" mi="3" ci="0" mb="0" cb="0"/><line nr="726" mi="3" ci="0" mb="0" cb="0"/><line nr="742" mi="3" ci="0" mb="0" cb="0"/><line nr="759" mi="3" ci="0" mb="0" cb="0"/><line nr="775" mi="3" ci="0" mb="0" cb="0"/><line nr="791" mi="3" ci="0" mb="0" cb="0"/><line nr="807" mi="3" ci="0" mb="0" cb="0"/><line nr="824" mi="3" ci="0" mb="0" cb="0"/><line nr="840" mi="3" ci="0" mb="0" cb="0"/><line nr="856" mi="3" ci="0" mb="0" cb="0"/><line nr="872" mi="3" ci="0" mb="0" cb="0"/><line nr="889" mi="3" ci="0" mb="0" cb="0"/><line nr="905" mi="3" ci="0" mb="0" cb="0"/><line nr="921" mi="3" ci="0" mb="0" cb="0"/><line nr="937" mi="3" ci="0" mb="0" cb="0"/><line nr="954" mi="3" ci="0" mb="0" cb="0"/><line nr="970" mi="3" ci="0" mb="0" cb="0"/><line nr="986" mi="3" ci="0" mb="0" cb="0"/><line nr="1002" mi="3" ci="0" mb="0" cb="0"/><line nr="1026" mi="9" ci="0" mb="0" cb="0"/><line nr="1044" mi="0" ci="6" mb="0" cb="0"/><line nr="1064" mi="6" ci="0" mb="0" cb="0"/><line nr="1082" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="189" covered="12"/><counter type="LINE" missed="59" covered="2"/><counter type="COMPLEXITY" missed="59" covered="2"/><counter type="METHOD" missed="59" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FnArrayOfArrayOf.java"><line nr="45" mi="7" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="16" ci="0" mb="2" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="9" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="FnListOfSetOf.java"><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="DecimalPoint.java"><line nr="30" mi="0" ci="16" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FnArrayOf.java"><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="6" ci="0" mb="0" cb="0"/><line nr="158" mi="6" ci="0" mb="0" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="166" mi="5" ci="0" mb="0" cb="0"/><line nr="170" mi="5" ci="0" mb="0" cb="0"/><line nr="174" mi="5" ci="0" mb="0" cb="0"/><line nr="178" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="6" ci="0" mb="0" cb="0"/><line nr="186" mi="6" ci="0" mb="0" cb="0"/><line nr="190" mi="7" ci="0" mb="0" cb="0"/><line nr="194" mi="4" ci="0" mb="0" cb="0"/><line nr="198" mi="7" ci="0" mb="0" cb="0"/><line nr="202" mi="6" ci="0" mb="0" cb="0"/><line nr="206" mi="0" ci="8" mb="0" cb="0"/><line nr="210" mi="0" ci="7" mb="0" cb="0"/><line nr="214" mi="7" ci="0" mb="0" cb="0"/><line nr="218" mi="6" ci="0" mb="0" cb="0"/><line nr="222" mi="7" ci="0" mb="0" cb="0"/><line nr="226" mi="6" ci="0" mb="0" cb="0"/><line nr="233" mi="6" ci="0" mb="0" cb="0"/><line nr="244" mi="5" ci="0" mb="0" cb="0"/><line nr="248" mi="5" ci="0" mb="0" cb="0"/><line nr="255" mi="4" ci="0" mb="0" cb="0"/><line nr="262" mi="5" ci="0" mb="0" cb="0"/><line nr="266" mi="5" ci="0" mb="0" cb="0"/><line nr="270" mi="6" ci="0" mb="0" cb="0"/><line nr="274" mi="6" ci="0" mb="0" cb="0"/><line nr="278" mi="6" ci="0" mb="0" cb="0"/><line nr="285" mi="4" ci="0" mb="0" cb="0"/><line nr="301" mi="0" ci="3" mb="0" cb="0"/><line nr="302" mi="0" ci="12" mb="0" cb="0"/><line nr="303" mi="0" ci="4" mb="0" cb="0"/><line nr="312" mi="0" ci="2" mb="0" cb="0"/><line nr="313" mi="0" ci="1" mb="0" cb="0"/><line nr="317" mi="0" ci="5" mb="0" cb="0"/><line nr="323" mi="0" ci="6" mb="0" cb="0"/><line nr="324" mi="0" ci="2" mb="0" cb="0"/><line nr="325" mi="0" ci="5" mb="0" cb="0"/><line nr="336" mi="0" ci="3" mb="0" cb="0"/><line nr="339" mi="0" ci="2" mb="0" cb="0"/><line nr="340" mi="0" ci="3" mb="0" cb="0"/><line nr="341" mi="0" ci="3" mb="0" cb="0"/><line nr="342" mi="0" ci="1" mb="0" cb="0"/><line nr="347" mi="0" ci="6" mb="0" cb="0"/><line nr="348" mi="0" ci="4" mb="0" cb="0"/><line nr="349" mi="0" ci="5" mb="0" cb="0"/><line nr="363" mi="0" ci="2" mb="0" cb="0"/><line nr="364" mi="0" ci="3" mb="0" cb="0"/><line nr="365" mi="0" ci="1" mb="0" cb="0"/><line nr="370" mi="0" ci="4" mb="0" cb="0"/><line nr="371" mi="0" ci="2" mb="0" cb="0"/><line nr="372" mi="0" ci="16" mb="0" cb="2"/><line nr="373" mi="0" ci="12" mb="0" cb="0"/><line nr="376" mi="0" ci="5" mb="0" cb="0"/><line nr="378" mi="0" ci="2" mb="0" cb="0"/><line nr="379" mi="0" ci="4" mb="0" cb="0"/><line nr="380" mi="0" ci="10" mb="0" cb="2"/><line nr="381" mi="0" ci="5" mb="0" cb="0"/><line nr="382" mi="0" ci="1" mb="0" cb="0"/><line nr="383" mi="0" ci="5" mb="0" cb="0"/><line nr="393" mi="0" ci="2" mb="0" cb="0"/><line nr="394" mi="0" ci="3" mb="0" cb="0"/><line nr="395" mi="0" ci="3" mb="0" cb="0"/><line nr="396" mi="0" ci="3" mb="1" cb="1"/><line nr="397" mi="5" ci="0" mb="0" cb="0"/><line nr="399" mi="0" ci="1" mb="0" cb="0"/><line nr="402" mi="0" ci="3" mb="0" cb="0"/><line nr="406" mi="0" ci="3" mb="0" cb="0"/><line nr="411" mi="0" ci="3" mb="1" cb="1"/><line nr="412" mi="5" ci="0" mb="0" cb="0"/><line nr="414" mi="0" ci="6" mb="0" cb="0"/><line nr="419" mi="2" ci="0" mb="0" cb="0"/><line nr="420" mi="2" ci="0" mb="0" cb="0"/><line nr="421" mi="10" ci="0" mb="2" cb="0"/><line nr="422" mi="3" ci="0" mb="0" cb="0"/><line nr="423" mi="2" ci="0" mb="0" cb="0"/><line nr="429" mi="3" ci="0" mb="2" cb="0"/><line nr="430" mi="2" ci="0" mb="0" cb="0"/><line nr="432" mi="2" ci="0" mb="2" cb="0"/><line nr="433" mi="2" ci="0" mb="0" cb="0"/><line nr="435" mi="5" ci="0" mb="2" cb="0"/><line nr="436" mi="2" ci="0" mb="0" cb="0"/><line nr="438" mi="3" ci="0" mb="0" cb="0"/><line nr="439" mi="6" ci="0" mb="0" cb="0"/><line nr="453" mi="2" ci="0" mb="0" cb="0"/><line nr="454" mi="1" ci="0" mb="0" cb="0"/><line nr="460" mi="2" ci="0" mb="0" cb="0"/><line nr="461" mi="5" ci="0" mb="2" cb="0"/><line nr="462" mi="7" ci="0" mb="0" cb="0"/><line nr="464" mi="4" ci="0" mb="0" cb="0"/><line nr="465" mi="7" ci="0" mb="0" cb="0"/><line nr="466" mi="1" ci="0" mb="0" cb="0"/><line nr="469" mi="8" ci="0" mb="0" cb="0"/><line nr="478" mi="2" ci="0" mb="0" cb="0"/><line nr="479" mi="1" ci="0" mb="0" cb="0"/><line nr="483" mi="4" ci="0" mb="2" cb="0"/><line nr="484" mi="2" ci="0" mb="0" cb="0"/><line nr="486" mi="4" ci="0" mb="0" cb="0"/><line nr="492" mi="3" ci="0" mb="0" cb="0"/><line nr="493" mi="3" ci="0" mb="2" cb="0"/><line nr="494" mi="8" ci="0" mb="2" cb="0"/><line nr="495" mi="2" ci="0" mb="0" cb="0"/><line nr="498" mi="2" ci="0" mb="0" cb="0"/><line nr="518" mi="0" ci="2" mb="0" cb="0"/><line nr="519" mi="0" ci="4" mb="0" cb="0"/><line nr="520" mi="0" ci="1" mb="0" cb="0"/><line nr="524" mi="0" ci="6" mb="0" cb="0"/><line nr="525" mi="0" ci="5" mb="0" cb="0"/><line nr="526" mi="0" ci="5" mb="0" cb="0"/><line nr="539" mi="0" ci="2" mb="0" cb="0"/><line nr="540" mi="0" ci="3" mb="0" cb="0"/><line nr="541" mi="0" ci="4" mb="0" cb="0"/><line nr="542" mi="0" ci="1" mb="0" cb="0"/><line nr="546" mi="0" ci="6" mb="0" cb="0"/><line nr="547" mi="0" ci="7" mb="0" cb="0"/><line nr="548" mi="0" ci="5" mb="0" cb="0"/><line nr="562" mi="2" ci="0" mb="0" cb="0"/><line nr="563" mi="3" ci="0" mb="0" cb="0"/><line nr="564" mi="6" ci="0" mb="0" cb="0"/><line nr="565" mi="1" ci="0" mb="0" cb="0"/><line nr="569" mi="6" ci="0" mb="0" cb="0"/><line nr="570" mi="5" ci="0" mb="0" cb="0"/><line nr="571" mi="5" ci="0" mb="0" cb="0"/><line nr="585" mi="0" ci="2" mb="0" cb="0"/><line nr="586" mi="0" ci="4" mb="0" cb="0"/><line nr="587" mi="0" ci="1" mb="0" cb="0"/><line nr="591" mi="0" ci="4" mb="0" cb="0"/><line nr="592" mi="0" ci="2" mb="0" cb="0"/><line nr="593" mi="0" ci="16" mb="0" cb="2"/><line nr="594" mi="0" ci="6" mb="1" cb="1"/><line nr="595" mi="4" ci="0" mb="0" cb="0"/><line nr="597" mi="0" ci="1" mb="0" cb="0"/><line nr="599" mi="0" ci="5" mb="0" cb="0"/><line nr="613" mi="2" ci="0" mb="0" cb="0"/><line nr="614" mi="4" ci="0" mb="0" cb="0"/><line nr="615" mi="1" ci="0" mb="0" cb="0"/><line nr="619" mi="6" ci="0" mb="0" cb="0"/><line nr="620" mi="5" ci="0" mb="0" cb="0"/><line nr="621" mi="5" ci="0" mb="0" cb="0"/><line nr="635" mi="2" ci="0" mb="0" cb="0"/><line nr="636" mi="3" ci="0" mb="0" cb="0"/><line nr="637" mi="3" ci="0" mb="0" cb="0"/><line nr="638" mi="1" ci="0" mb="0" cb="0"/><line nr="642" mi="4" ci="0" mb="0" cb="0"/><line nr="643" mi="16" ci="0" mb="2" cb="0"/><line nr="644" mi="8" ci="0" mb="2" cb="0"/><line nr="645" mi="4" ci="0" mb="0" cb="0"/><line nr="648" mi="5" ci="0" mb="0" cb="0"/><line nr="662" mi="2" ci="0" mb="0" cb="0"/><line nr="663" mi="3" ci="0" mb="0" cb="0"/><line nr="664" mi="3" ci="0" mb="0" cb="0"/><line nr="665" mi="1" ci="0" mb="0" cb="0"/><line nr="669" mi="4" ci="0" mb="0" cb="0"/><line nr="670" mi="16" ci="0" mb="2" cb="0"/><line nr="671" mi="8" ci="0" mb="2" cb="0"/><line nr="672" mi="4" ci="0" mb="0" cb="0"/><line nr="675" mi="5" ci="0" mb="0" cb="0"/><line nr="689" mi="2" ci="0" mb="0" cb="0"/><line nr="690" mi="4" ci="0" mb="0" cb="0"/><line nr="691" mi="1" ci="0" mb="0" cb="0"/><line nr="695" mi="4" ci="0" mb="0" cb="0"/><line nr="696" mi="2" ci="0" mb="0" cb="0"/><line nr="697" mi="16" ci="0" mb="2" cb="0"/><line nr="698" mi="6" ci="0" mb="2" cb="0"/><line nr="699" mi="4" ci="0" mb="0" cb="0"/><line nr="701" mi="1" ci="0" mb="0" cb="0"/><line nr="703" mi="5" ci="0" mb="0" cb="0"/><line nr="715" mi="0" ci="2" mb="0" cb="0"/><line nr="716" mi="0" ci="1" mb="0" cb="0"/><line nr="720" mi="0" ci="4" mb="0" cb="0"/><line nr="721" mi="0" ci="16" mb="0" cb="2"/><line nr="722" mi="0" ci="2" mb="0" cb="2"/><line nr="723" mi="0" ci="4" mb="0" cb="0"/><line nr="726" mi="0" ci="5" mb="0" cb="0"/><line nr="741" mi="2" ci="0" mb="0" cb="0"/><line nr="742" mi="3" ci="0" mb="0" cb="0"/><line nr="743" mi="3" ci="0" mb="0" cb="0"/><line nr="744" mi="1" ci="0" mb="0" cb="0"/><line nr="748" mi="4" ci="0" mb="0" cb="0"/><line nr="749" mi="16" ci="0" mb="2" cb="0"/><line nr="750" mi="2" ci="0" mb="2" cb="0"/><line nr="751" mi="8" ci="0" mb="2" cb="0"/><line nr="752" mi="5" ci="0" mb="0" cb="0"/><line nr="755" mi="4" ci="0" mb="0" cb="0"/><line nr="758" mi="5" ci="0" mb="0" cb="0"/><line nr="775" mi="2" ci="0" mb="0" cb="0"/><line nr="776" mi="3" ci="0" mb="0" cb="0"/><line nr="777" mi="3" ci="0" mb="0" cb="0"/><line nr="778" mi="1" ci="0" mb="0" cb="0"/><line nr="782" mi="4" ci="0" mb="0" cb="0"/><line nr="783" mi="16" ci="0" mb="2" cb="0"/><line nr="784" mi="2" ci="0" mb="2" cb="0"/><line nr="785" mi="8" ci="0" mb="2" cb="0"/><line nr="786" mi="5" ci="0" mb="0" cb="0"/><line nr="789" mi="4" ci="0" mb="0" cb="0"/><line nr="792" mi="5" ci="0" mb="0" cb="0"/><line nr="806" mi="2" ci="0" mb="0" cb="0"/><line nr="807" mi="3" ci="0" mb="0" cb="0"/><line nr="808" mi="3" ci="0" mb="0" cb="0"/><line nr="809" mi="1" ci="0" mb="0" cb="0"/><line nr="813" mi="4" ci="0" mb="0" cb="0"/><line nr="814" mi="16" ci="0" mb="2" cb="0"/><line nr="815" mi="2" ci="0" mb="2" cb="0"/><line nr="816" mi="8" ci="0" mb="2" cb="0"/><line nr="817" mi="4" ci="0" mb="0" cb="0"/><line nr="821" mi="5" ci="0" mb="0" cb="0"/><line nr="837" mi="2" ci="0" mb="0" cb="0"/><line nr="838" mi="3" ci="0" mb="0" cb="0"/><line nr="839" mi="3" ci="0" mb="0" cb="0"/><line nr="840" mi="1" ci="0" mb="0" cb="0"/><line nr="844" mi="4" ci="0" mb="0" cb="0"/><line nr="845" mi="16" ci="0" mb="2" cb="0"/><line nr="846" mi="2" ci="0" mb="2" cb="0"/><line nr="847" mi="8" ci="0" mb="2" cb="0"/><line nr="848" mi="4" ci="0" mb="0" cb="0"/><line nr="852" mi="5" ci="0" mb="0" cb="0"/><line nr="864" mi="0" ci="2" mb="0" cb="0"/><line nr="865" mi="0" ci="1" mb="0" cb="0"/><line nr="869" mi="0" ci="6" mb="0" cb="0"/><line nr="879" mi="0" ci="2" mb="0" cb="0"/><line nr="880" mi="0" ci="1" mb="0" cb="0"/><line nr="884" mi="0" ci="6" mb="0" cb="0"/><line nr="900" mi="2" ci="0" mb="0" cb="0"/><line nr="901" mi="3" ci="0" mb="0" cb="0"/><line nr="902" mi="3" ci="0" mb="0" cb="0"/><line nr="903" mi="1" ci="0" mb="0" cb="0"/><line nr="907" mi="4" ci="0" mb="0" cb="0"/><line nr="908" mi="16" ci="0" mb="2" cb="0"/><line nr="909" mi="9" ci="0" mb="0" cb="0"/><line nr="911" mi="2" ci="0" mb="0" cb="0"/><line nr="923" mi="2" ci="0" mb="0" cb="0"/><line nr="924" mi="3" ci="0" mb="0" cb="0"/><line nr="925" mi="3" ci="0" mb="0" cb="0"/><line nr="926" mi="1" ci="0" mb="0" cb="0"/><line nr="930" mi="4" ci="0" mb="0" cb="0"/><line nr="931" mi="16" ci="0" mb="2" cb="0"/><line nr="932" mi="9" ci="0" mb="0" cb="0"/><line nr="934" mi="2" ci="0" mb="0" cb="0"/><line nr="950" mi="2" ci="0" mb="0" cb="0"/><line nr="951" mi="3" ci="0" mb="0" cb="0"/><line nr="952" mi="6" ci="0" mb="0" cb="0"/><line nr="953" mi="1" ci="0" mb="0" cb="0"/><line nr="956" mi="2" ci="0" mb="0" cb="0"/><line nr="957" mi="3" ci="0" mb="0" cb="0"/><line nr="958" mi="4" ci="0" mb="0" cb="0"/><line nr="959" mi="1" ci="0" mb="0" cb="0"/><line nr="963" mi="6" ci="0" mb="2" cb="0"/><line nr="964" mi="14" ci="0" mb="0" cb="0"/><line nr="966" mi="5" ci="0" mb="0" cb="0"/><line nr="968" mi="4" ci="0" mb="0" cb="0"/><line nr="969" mi="2" ci="0" mb="0" cb="0"/><line nr="970" mi="16" ci="0" mb="2" cb="0"/><line nr="971" mi="8" ci="0" mb="0" cb="0"/><line nr="972" mi="1" ci="0" mb="0" cb="0"/><line nr="974" mi="2" ci="0" mb="0" cb="0"/><line nr="984" mi="2" ci="0" mb="0" cb="0"/><line nr="985" mi="3" ci="0" mb="0" cb="0"/><line nr="986" mi="6" ci="0" mb="0" cb="0"/><line nr="987" mi="1" ci="0" mb="0" cb="0"/><line nr="990" mi="2" ci="0" mb="0" cb="0"/><line nr="991" mi="3" ci="0" mb="0" cb="0"/><line nr="992" mi="4" ci="0" mb="0" cb="0"/><line nr="993" mi="1" ci="0" mb="0" cb="0"/><line nr="997" mi="6" ci="0" mb="2" cb="0"/><line nr="998" mi="14" ci="0" mb="0" cb="0"/><line nr="1000" mi="5" ci="0" mb="0" cb="0"/><line nr="1002" mi="4" ci="0" mb="0" cb="0"/><line nr="1003" mi="2" ci="0" mb="0" cb="0"/><line nr="1004" mi="16" ci="0" mb="2" cb="0"/><line nr="1005" mi="8" ci="0" mb="0" cb="0"/><line nr="1006" mi="1" ci="0" mb="0" cb="0"/><line nr="1008" mi="2" ci="0" mb="0" cb="0"/><line nr="1032" mi="0" ci="2" mb="0" cb="0"/><line nr="1033" mi="0" ci="3" mb="0" cb="0"/><line nr="1034" mi="0" ci="6" mb="0" cb="0"/><line nr="1035" mi="0" ci="3" mb="0" cb="0"/><line nr="1036" mi="0" ci="1" mb="0" cb="0"/><line nr="1039" mi="2" ci="0" mb="0" cb="0"/><line nr="1040" mi="3" ci="0" mb="0" cb="0"/><line nr="1041" mi="4" ci="0" mb="0" cb="0"/><line nr="1042" mi="3" ci="0" mb="0" cb="0"/><line nr="1043" mi="1" ci="0" mb="0" cb="0"/><line nr="1048" mi="0" ci="6" mb="1" cb="1"/><line nr="1049" mi="14" ci="0" mb="0" cb="0"/><line nr="1051" mi="5" ci="0" mb="0" cb="0"/><line nr="1053" mi="0" ci="4" mb="0" cb="0"/><line nr="1054" mi="0" ci="2" mb="0" cb="0"/><line nr="1055" mi="0" ci="16" mb="0" cb="2"/><line nr="1056" mi="0" ci="5" mb="0" cb="0"/><line nr="1057" mi="0" ci="5" mb="0" cb="0"/><line nr="1058" mi="0" ci="2" mb="0" cb="2"/><line nr="1059" mi="0" ci="4" mb="0" cb="0"/><line nr="1060" mi="0" ci="5" mb="0" cb="0"/><line nr="1062" mi="0" ci="4" mb="0" cb="0"/><line nr="1063" mi="0" ci="1" mb="0" cb="0"/><line nr="1065" mi="0" ci="5" mb="0" cb="0"/><line nr="1079" mi="0" ci="2" mb="0" cb="0"/><line nr="1080" mi="0" ci="3" mb="0" cb="0"/><line nr="1081" mi="0" ci="6" mb="0" cb="0"/><line nr="1082" mi="0" ci="3" mb="0" cb="0"/><line nr="1083" mi="0" ci="1" mb="0" cb="0"/><line nr="1086" mi="2" ci="0" mb="0" cb="0"/><line nr="1087" mi="3" ci="0" mb="0" cb="0"/><line nr="1088" mi="4" ci="0" mb="0" cb="0"/><line nr="1089" mi="3" ci="0" mb="0" cb="0"/><line nr="1090" mi="1" ci="0" mb="0" cb="0"/><line nr="1095" mi="0" ci="6" mb="1" cb="1"/><line nr="1096" mi="14" ci="0" mb="0" cb="0"/><line nr="1098" mi="5" ci="0" mb="0" cb="0"/><line nr="1100" mi="0" ci="4" mb="0" cb="0"/><line nr="1101" mi="0" ci="2" mb="0" cb="0"/><line nr="1102" mi="0" ci="16" mb="0" cb="2"/><line nr="1103" mi="0" ci="5" mb="0" cb="0"/><line nr="1104" mi="0" ci="5" mb="0" cb="0"/><line nr="1105" mi="0" ci="2" mb="0" cb="2"/><line nr="1106" mi="0" ci="4" mb="0" cb="0"/><line nr="1107" mi="0" ci="5" mb="0" cb="0"/><line nr="1109" mi="0" ci="4" mb="0" cb="0"/><line nr="1110" mi="0" ci="1" mb="0" cb="0"/><line nr="1113" mi="0" ci="5" mb="0" cb="0"/><line nr="1133" mi="2" ci="0" mb="0" cb="0"/><line nr="1134" mi="3" ci="0" mb="0" cb="0"/><line nr="1135" mi="3" ci="0" mb="0" cb="0"/><line nr="1136" mi="1" ci="0" mb="0" cb="0"/><line nr="1140" mi="4" ci="0" mb="0" cb="0"/><line nr="1141" mi="16" ci="0" mb="2" cb="0"/><line nr="1142" mi="7" ci="0" mb="0" cb="0"/><line nr="1143" mi="2" ci="0" mb="2" cb="0"/><line nr="1144" mi="5" ci="0" mb="0" cb="0"/><line nr="1147" mi="7" ci="0" mb="0" cb="0"/><line nr="1149" mi="2" ci="0" mb="0" cb="0"/><line nr="1162" mi="2" ci="0" mb="0" cb="0"/><line nr="1163" mi="3" ci="0" mb="0" cb="0"/><line nr="1164" mi="3" ci="0" mb="0" cb="0"/><line nr="1165" mi="3" ci="0" mb="0" cb="0"/><line nr="1166" mi="3" ci="0" mb="0" cb="0"/><line nr="1167" mi="1" ci="0" mb="0" cb="0"/><line nr="1171" mi="4" ci="0" mb="0" cb="0"/><line nr="1172" mi="16" ci="0" mb="2" cb="0"/><line nr="1173" mi="6" ci="0" mb="0" cb="0"/><line nr="1174" mi="6" ci="0" mb="0" cb="0"/><line nr="1175" mi="5" ci="0" mb="0" cb="0"/><line nr="1177" mi="2" ci="0" mb="0" cb="0"/><line nr="1188" mi="2" ci="0" mb="0" cb="0"/><line nr="1189" mi="1" ci="0" mb="0" cb="0"/><line nr="1193" mi="5" ci="0" mb="2" cb="0"/><line nr="1194" mi="5" ci="0" mb="0" cb="0"/><line nr="1196" mi="4" ci="0" mb="0" cb="0"/><line nr="1197" mi="12" ci="0" mb="2" cb="0"/><line nr="1198" mi="11" ci="0" mb="0" cb="0"/><line nr="1200" mi="2" ci="0" mb="0" cb="0"/><line nr="1211" mi="0" ci="4" mb="0" cb="0"/><line nr="1212" mi="0" ci="11" mb="0" cb="2"/><line nr="1213" mi="0" ci="3" mb="0" cb="0"/><line nr="1214" mi="0" ci="4" mb="0" cb="0"/><line nr="1215" mi="0" ci="8" mb="0" cb="0"/><line nr="1216" mi="0" ci="7" mb="0" cb="0"/><line nr="1217" mi="0" ci="1" mb="0" cb="0"/><line nr="1218" mi="0" ci="2" mb="0" cb="0"/><line nr="1231" mi="2" ci="0" mb="0" cb="0"/><line nr="1232" mi="3" ci="0" mb="0" cb="0"/><line nr="1233" mi="3" ci="0" mb="0" cb="0"/><line nr="1234" mi="3" ci="0" mb="0" cb="0"/><line nr="1235" mi="3" ci="0" mb="0" cb="0"/><line nr="1236" mi="1" ci="0" mb="0" cb="0"/><line nr="1241" mi="4" ci="0" mb="0" cb="0"/><line nr="1242" mi="16" ci="0" mb="2" cb="0"/><line nr="1243" mi="6" ci="0" mb="0" cb="0"/><line nr="1244" mi="5" ci="0" mb="0" cb="0"/><line nr="1245" mi="2" ci="0" mb="2" cb="0"/><line nr="1246" mi="4" ci="0" mb="0" cb="0"/><line nr="1247" mi="5" ci="0" mb="0" cb="0"/><line nr="1249" mi="4" ci="0" mb="0" cb="0"/><line nr="1252" mi="5" ci="0" mb="0" cb="0"/><line nr="1266" mi="2" ci="0" mb="0" cb="0"/><line nr="1267" mi="3" ci="0" mb="0" cb="0"/><line nr="1268" mi="3" ci="0" mb="0" cb="0"/><line nr="1269" mi="3" ci="0" mb="0" cb="0"/><line nr="1270" mi="3" ci="0" mb="0" cb="0"/><line nr="1271" mi="1" ci="0" mb="0" cb="0"/><line nr="1276" mi="4" ci="0" mb="0" cb="0"/><line nr="1277" mi="16" ci="0" mb="2" cb="0"/><line nr="1278" mi="6" ci="0" mb="0" cb="0"/><line nr="1279" mi="5" ci="0" mb="0" cb="0"/><line nr="1280" mi="2" ci="0" mb="2" cb="0"/><line nr="1281" mi="4" ci="0" mb="0" cb="0"/><line nr="1282" mi="5" ci="0" mb="0" cb="0"/><line nr="1284" mi="4" ci="0" mb="0" cb="0"/><line nr="1287" mi="5" ci="0" mb="0" cb="0"/><line nr="1302" mi="2" ci="0" mb="0" cb="0"/><line nr="1303" mi="3" ci="0" mb="0" cb="0"/><line nr="1304" mi="3" ci="0" mb="0" cb="0"/><line nr="1305" mi="3" ci="0" mb="0" cb="0"/><line nr="1306" mi="3" ci="0" mb="0" cb="0"/><line nr="1307" mi="1" ci="0" mb="0" cb="0"/><line nr="1312" mi="4" ci="0" mb="0" cb="0"/><line nr="1313" mi="16" ci="0" mb="2" cb="0"/><line nr="1314" mi="7" ci="0" mb="0" cb="0"/><line nr="1315" mi="2" ci="0" mb="2" cb="0"/><line nr="1316" mi="5" ci="0" mb="0" cb="0"/><line nr="1319" mi="3" ci="0" mb="0" cb="0"/><line nr="1320" mi="5" ci="0" mb="0" cb="0"/><line nr="1321" mi="2" ci="0" mb="2" cb="0"/><line nr="1322" mi="4" ci="0" mb="0" cb="0"/><line nr="1323" mi="5" ci="0" mb="0" cb="0"/><line nr="1325" mi="5" ci="0" mb="0" cb="0"/><line nr="1328" mi="5" ci="0" mb="0" cb="0"/><line nr="1344" mi="2" ci="0" mb="0" cb="0"/><line nr="1345" mi="3" ci="0" mb="0" cb="0"/><line nr="1346" mi="3" ci="0" mb="0" cb="0"/><line nr="1347" mi="3" ci="0" mb="0" cb="0"/><line nr="1348" mi="3" ci="0" mb="0" cb="0"/><line nr="1349" mi="3" ci="0" mb="0" cb="0"/><line nr="1350" mi="3" ci="0" mb="0" cb="0"/><line nr="1351" mi="1" ci="0" mb="0" cb="0"/><line nr="1356" mi="4" ci="0" mb="0" cb="0"/><line nr="1357" mi="16" ci="0" mb="2" cb="0"/><line nr="1358" mi="6" ci="0" mb="0" cb="0"/><line nr="1359" mi="6" ci="0" mb="0" cb="0"/><line nr="1360" mi="5" ci="0" mb="0" cb="0"/><line nr="1361" mi="2" ci="0" mb="2" cb="0"/><line nr="1362" mi="4" ci="0" mb="0" cb="0"/><line nr="1363" mi="5" ci="0" mb="0" cb="0"/><line nr="1365" mi="4" ci="0" mb="0" cb="0"/><line nr="1368" mi="5" ci="0" mb="0" cb="0"/><line nr="1382" mi="2" ci="0" mb="0" cb="0"/><line nr="1383" mi="3" ci="0" mb="0" cb="0"/><line nr="1384" mi="3" ci="0" mb="0" cb="0"/><line nr="1385" mi="1" ci="0" mb="0" cb="0"/><line nr="1390" mi="5" ci="0" mb="2" cb="0"/><line nr="1391" mi="5" ci="0" mb="0" cb="0"/><line nr="1394" mi="4" ci="0" mb="0" cb="0"/><line nr="1395" mi="12" ci="0" mb="2" cb="0"/><line nr="1396" mi="4" ci="0" mb="0" cb="0"/><line nr="1397" mi="5" ci="0" mb="0" cb="0"/><line nr="1398" mi="2" ci="0" mb="2" cb="0"/><line nr="1399" mi="4" ci="0" mb="0" cb="0"/><line nr="1400" mi="5" ci="0" mb="0" cb="0"/><line nr="1402" mi="8" ci="0" mb="0" cb="0"/><line nr="1405" mi="5" ci="0" mb="0" cb="0"/><line nr="1421" mi="2" ci="0" mb="0" cb="0"/><line nr="1422" mi="3" ci="0" mb="0" cb="0"/><line nr="1423" mi="1" ci="0" mb="0" cb="0"/><line nr="1428" mi="2" ci="0" mb="0" cb="0"/><line nr="1429" mi="16" ci="0" mb="2" cb="0"/><line nr="1430" mi="6" ci="0" mb="0" cb="0"/><line nr="1431" mi="5" ci="0" mb="0" cb="0"/><line nr="1432" mi="2" ci="0" mb="2" cb="0"/><line nr="1433" mi="5" ci="0" mb="0" cb="0"/><line nr="1436" mi="3" ci="0" mb="2" cb="0"/><line nr="1437" mi="2" ci="0" mb="0" cb="0"/><line nr="1439" mi="1" ci="0" mb="0" cb="0"/><line nr="1441" mi="2" ci="0" mb="0" cb="0"/><line nr="1454" mi="2" ci="0" mb="0" cb="0"/><line nr="1455" mi="3" ci="0" mb="0" cb="0"/><line nr="1456" mi="1" ci="0" mb="0" cb="0"/><line nr="1461" mi="2" ci="0" mb="0" cb="0"/><line nr="1462" mi="16" ci="0" mb="2" cb="0"/><line nr="1463" mi="6" ci="0" mb="0" cb="0"/><line nr="1464" mi="5" ci="0" mb="0" cb="0"/><line nr="1465" mi="2" ci="0" mb="2" cb="0"/><line nr="1466" mi="5" ci="0" mb="0" cb="0"/><line nr="1469" mi="3" ci="0" mb="2" cb="0"/><line nr="1470" mi="2" ci="0" mb="0" cb="0"/><line nr="1472" mi="1" ci="0" mb="0" cb="0"/><line nr="1474" mi="2" ci="0" mb="0" cb="0"/><line nr="1488" mi="2" ci="0" mb="0" cb="0"/><line nr="1489" mi="3" ci="0" mb="0" cb="0"/><line nr="1490" mi="1" ci="0" mb="0" cb="0"/><line nr="1494" mi="16" ci="0" mb="2" cb="0"/><line nr="1495" mi="2" ci="0" mb="2" cb="0"/><line nr="1496" mi="3" ci="0" mb="2" cb="0"/><line nr="1497" mi="2" ci="0" mb="0" cb="0"/><line nr="1499" mi="5" ci="0" mb="2" cb="0"/><line nr="1500" mi="2" ci="0" mb="0" cb="0"/><line nr="1503" mi="2" ci="0" mb="0" cb="0"/><line nr="1514" mi="2" ci="0" mb="0" cb="0"/><line nr="1515" mi="3" ci="0" mb="0" cb="0"/><line nr="1516" mi="1" ci="0" mb="0" cb="0"/><line nr="1520" mi="6" ci="0" mb="0" cb="0"/><line nr="1521" mi="16" ci="0" mb="2" cb="0"/><line nr="1522" mi="10" ci="0" mb="2" cb="0"/><line nr="1523" mi="2" ci="0" mb="2" cb="0"/><line nr="1524" mi="2" ci="0" mb="2" cb="0"/><line nr="1525" mi="5" ci="0" mb="0" cb="0"/><line nr="1527" mi="4" ci="0" mb="2" cb="0"/><line nr="1528" mi="4" ci="0" mb="0" cb="0"/><line nr="1530" mi="1" ci="0" mb="0" cb="0"/><line nr="1532" mi="7" ci="0" mb="2" cb="0"/><line nr="1544" mi="2" ci="0" mb="0" cb="0"/><line nr="1545" mi="3" ci="0" mb="0" cb="0"/><line nr="1546" mi="1" ci="0" mb="0" cb="0"/><line nr="1550" mi="16" ci="0" mb="2" cb="0"/><line nr="1551" mi="10" ci="0" mb="2" cb="0"/><line nr="1552" mi="2" ci="0" mb="2" cb="0"/><line nr="1553" mi="2" ci="0" mb="2" cb="0"/><line nr="1554" mi="2" ci="0" mb="0" cb="0"/><line nr="1556" mi="4" ci="0" mb="2" cb="0"/><line nr="1557" mi="2" ci="0" mb="0" cb="0"/><line nr="1559" mi="1" ci="0" mb="0" cb="0"/><line nr="1561" mi="2" ci="0" mb="0" cb="0"/><line nr="1573" mi="2" ci="0" mb="0" cb="0"/><line nr="1574" mi="3" ci="0" mb="0" cb="0"/><line nr="1575" mi="1" ci="0" mb="0" cb="0"/><line nr="1579" mi="16" ci="0" mb="2" cb="0"/><line nr="1580" mi="10" ci="0" mb="2" cb="0"/><line nr="1581" mi="2" ci="0" mb="2" cb="0"/><line nr="1582" mi="2" ci="0" mb="2" cb="0"/><line nr="1583" mi="2" ci="0" mb="0" cb="0"/><line nr="1585" mi="4" ci="0" mb="2" cb="0"/><line nr="1586" mi="2" ci="0" mb="0" cb="0"/><line nr="1588" mi="1" ci="0" mb="0" cb="0"/><line nr="1590" mi="2" ci="0" mb="0" cb="0"/><line nr="1602" mi="2" ci="0" mb="0" cb="0"/><line nr="1603" mi="1" ci="0" mb="0" cb="0"/><line nr="1609" mi="4" ci="0" mb="0" cb="0"/><line nr="1610" mi="4" ci="0" mb="2" cb="0"/><line nr="1611" mi="2" ci="0" mb="0" cb="0"/><line nr="1613" mi="3" ci="0" mb="0" cb="0"/><line nr="1614" mi="2" ci="0" mb="0" cb="0"/><line nr="1615" mi="11" ci="0" mb="2" cb="0"/><line nr="1616" mi="4" ci="0" mb="0" cb="0"/><line nr="1617" mi="10" ci="0" mb="0" cb="0"/><line nr="1618" mi="8" ci="0" mb="0" cb="0"/><line nr="1620" mi="2" ci="0" mb="0" cb="0"/><line nr="1628" mi="2" ci="0" mb="0" cb="0"/><line nr="1629" mi="1" ci="0" mb="0" cb="0"/><line nr="1633" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1889" covered="561"/><counter type="BRANCH" missed="159" covered="25"/><counter type="LINE" missed="421" covered="131"/><counter type="COMPLEXITY" missed="190" covered="51"/><counter type="METHOD" missed="108" covered="41"/><counter type="CLASS" missed="31" covered="13"/></sourcefile><sourcefile name="FnArray.java"><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="216" mi="2" ci="0" mb="0" cb="0"/><line nr="229" mi="2" ci="0" mb="0" cb="0"/><line nr="242" mi="2" ci="0" mb="0" cb="0"/><line nr="255" mi="2" ci="0" mb="0" cb="0"/><line nr="268" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="80"/><counter type="LINE" missed="15" covered="17"/><counter type="COMPLEXITY" missed="15" covered="4"/><counter type="METHOD" missed="15" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FnStringAuxNumberConverters.java"><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="20" mb="0" cb="0"/><line nr="66" mi="0" ci="24" mb="0" cb="0"/><line nr="73" mi="10" ci="15" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="6" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="2" cb="3"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="1" cb="1"/><line nr="139" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="15" ci="0" mb="0" cb="0"/><line nr="148" mi="7" ci="0" mb="0" cb="0"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="14" ci="0" mb="0" cb="0"/><line nr="155" mi="5" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="0" cb="2"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="15" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="1" cb="1"/><line nr="183" mi="4" ci="0" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="2" cb="0"/><line nr="186" mi="4" ci="0" mb="0" cb="0"/><line nr="188" mi="4" ci="0" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="1" cb="1"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="5" ci="0" mb="0" cb="0"/><line nr="202" mi="4" ci="0" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="2" cb="0"/><line nr="204" mi="2" ci="0" mb="0" cb="0"/><line nr="206" mi="15" ci="0" mb="0" cb="0"/><line nr="207" mi="11" ci="0" mb="2" cb="0"/><line nr="219" mi="0" ci="20" mb="0" cb="0"/><line nr="220" mi="0" ci="24" mb="0" cb="0"/><line nr="222" mi="21" ci="6" mb="0" cb="0"/><line nr="223" mi="21" ci="6" mb="0" cb="0"/><line nr="224" mi="21" ci="6" mb="0" cb="0"/><line nr="225" mi="21" ci="6" mb="0" cb="0"/><line nr="226" mi="21" ci="6" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="3" ci="0" mb="0" cb="0"/><line nr="235" mi="1" ci="0" mb="0" cb="0"/><line nr="238" mi="3" ci="0" mb="0" cb="0"/><line nr="239" mi="1" ci="0" mb="0" cb="0"/><line nr="242" mi="3" ci="0" mb="0" cb="0"/><line nr="243" mi="1" ci="0" mb="0" cb="0"/><line nr="247" mi="3" ci="0" mb="0" cb="0"/><line nr="248" mi="3" ci="0" mb="0" cb="0"/><line nr="249" mi="3" ci="0" mb="0" cb="0"/><line nr="250" mi="3" ci="0" mb="0" cb="0"/><line nr="251" mi="1" ci="0" mb="0" cb="0"/><line nr="255" mi="3" ci="0" mb="0" cb="0"/><line nr="256" mi="3" ci="0" mb="0" cb="0"/><line nr="257" mi="3" ci="0" mb="0" cb="0"/><line nr="258" mi="3" ci="0" mb="0" cb="0"/><line nr="259" mi="1" ci="0" mb="0" cb="0"/><line nr="263" mi="3" ci="0" mb="0" cb="0"/><line nr="264" mi="3" ci="0" mb="0" cb="0"/><line nr="265" mi="3" ci="0" mb="0" cb="0"/><line nr="266" mi="3" ci="0" mb="0" cb="0"/><line nr="267" mi="3" ci="0" mb="0" cb="0"/><line nr="268" mi="5" ci="0" mb="0" cb="0"/><line nr="269" mi="4" ci="0" mb="0" cb="0"/><line nr="270" mi="1" ci="0" mb="0" cb="0"/><line nr="274" mi="3" ci="0" mb="0" cb="0"/><line nr="275" mi="3" ci="0" mb="0" cb="0"/><line nr="276" mi="3" ci="0" mb="0" cb="0"/><line nr="277" mi="3" ci="0" mb="0" cb="0"/><line nr="278" mi="3" ci="0" mb="0" cb="0"/><line nr="279" mi="6" ci="0" mb="0" cb="0"/><line nr="280" mi="4" ci="0" mb="0" cb="0"/><line nr="281" mi="1" ci="0" mb="0" cb="0"/><line nr="285" mi="0" ci="3" mb="0" cb="0"/><line nr="286" mi="0" ci="3" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="3" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="0"/><line nr="291" mi="0" ci="1" mb="0" cb="0"/><line nr="298" mi="0" ci="6" mb="4" cb="1"/><line nr="300" mi="7" ci="0" mb="0" cb="0"/><line nr="302" mi="6" ci="0" mb="0" cb="0"/><line nr="307" mi="5" ci="0" mb="0" cb="0"/><line nr="308" mi="6" ci="0" mb="0" cb="0"/><line nr="309" mi="5" ci="0" mb="2" cb="0"/><line nr="310" mi="4" ci="0" mb="0" cb="0"/><line nr="311" mi="3" ci="0" mb="0" cb="0"/><line nr="313" mi="6" ci="0" mb="0" cb="0"/><line nr="314" mi="1" ci="0" mb="0" cb="0"/><line nr="315" mi="15" ci="0" mb="0" cb="0"/><line nr="319" mi="0" ci="9" mb="0" cb="0"/><line nr="320" mi="1" ci="0" mb="0" cb="0"/><line nr="322" mi="14" ci="0" mb="0" cb="0"/><line nr="326" mi="5" ci="0" mb="0" cb="0"/><line nr="335" mi="0" ci="2" mb="0" cb="0"/><line nr="336" mi="0" ci="3" mb="1" cb="1"/><line nr="337" mi="0" ci="4" mb="0" cb="0"/><line nr="338" mi="3" ci="0" mb="2" cb="0"/><line nr="339" mi="7" ci="0" mb="0" cb="0"/><line nr="341" mi="6" ci="0" mb="0" cb="0"/><line nr="343" mi="0" ci="5" mb="0" cb="0"/><line nr="344" mi="0" ci="4" mb="0" cb="0"/><line nr="350" mi="0" ci="8" mb="0" cb="0"/><line nr="360" mi="0" ci="16" mb="0" cb="0"/><line nr="361" mi="0" ci="18" mb="0" cb="0"/><line nr="363" mi="15" ci="9" mb="0" cb="0"/><line nr="364" mi="15" ci="9" mb="0" cb="0"/><line nr="365" mi="15" ci="9" mb="0" cb="0"/><line nr="366" mi="15" ci="9" mb="0" cb="0"/><line nr="367" mi="15" ci="9" mb="0" cb="0"/><line nr="371" mi="0" ci="2" mb="0" cb="0"/><line nr="372" mi="0" ci="1" mb="0" cb="0"/><line nr="376" mi="3" ci="0" mb="0" cb="0"/><line nr="377" mi="1" ci="0" mb="0" cb="0"/><line nr="381" mi="0" ci="3" mb="0" cb="0"/><line nr="382" mi="0" ci="1" mb="0" cb="0"/><line nr="386" mi="3" ci="0" mb="0" cb="0"/><line nr="387" mi="1" ci="0" mb="0" cb="0"/><line nr="391" mi="0" ci="3" mb="0" cb="0"/><line nr="392" mi="0" ci="3" mb="0" cb="0"/><line nr="393" mi="0" ci="3" mb="0" cb="0"/><line nr="394" mi="0" ci="3" mb="0" cb="0"/><line nr="395" mi="0" ci="3" mb="0" cb="0"/><line nr="396" mi="0" ci="1" mb="0" cb="0"/><line nr="400" mi="3" ci="0" mb="0" cb="0"/><line nr="401" mi="3" ci="0" mb="0" cb="0"/><line nr="402" mi="3" ci="0" mb="0" cb="0"/><line nr="403" mi="3" ci="0" mb="0" cb="0"/><line nr="404" mi="3" ci="0" mb="0" cb="0"/><line nr="405" mi="3" ci="0" mb="0" cb="0"/><line nr="406" mi="5" ci="0" mb="0" cb="0"/><line nr="407" mi="4" ci="0" mb="0" cb="0"/><line nr="408" mi="1" ci="0" mb="0" cb="0"/><line nr="412" mi="3" ci="0" mb="0" cb="0"/><line nr="413" mi="3" ci="0" mb="0" cb="0"/><line nr="414" mi="3" ci="0" mb="0" cb="0"/><line nr="415" mi="3" ci="0" mb="0" cb="0"/><line nr="416" mi="3" ci="0" mb="0" cb="0"/><line nr="417" mi="3" ci="0" mb="0" cb="0"/><line nr="418" mi="6" ci="0" mb="0" cb="0"/><line nr="419" mi="4" ci="0" mb="0" cb="0"/><line nr="420" mi="1" ci="0" mb="0" cb="0"/><line nr="424" mi="3" ci="0" mb="0" cb="0"/><line nr="425" mi="3" ci="0" mb="0" cb="0"/><line nr="426" mi="3" ci="0" mb="0" cb="0"/><line nr="427" mi="3" ci="0" mb="0" cb="0"/><line nr="428" mi="3" ci="0" mb="0" cb="0"/><line nr="429" mi="3" ci="0" mb="0" cb="0"/><line nr="430" mi="3" ci="0" mb="0" cb="0"/><line nr="431" mi="1" ci="0" mb="0" cb="0"/><line nr="436" mi="0" ci="6" mb="3" cb="1"/><line nr="438" mi="0" ci="8" mb="0" cb="0"/><line nr="443" mi="5" ci="0" mb="0" cb="0"/><line nr="444" mi="6" ci="0" mb="0" cb="0"/><line nr="445" mi="5" ci="0" mb="2" cb="0"/><line nr="446" mi="4" ci="0" mb="0" cb="0"/><line nr="447" mi="3" ci="0" mb="0" cb="0"/><line nr="449" mi="8" ci="0" mb="0" cb="0"/><line nr="450" mi="1" ci="0" mb="0" cb="0"/><line nr="451" mi="15" ci="0" mb="0" cb="0"/><line nr="455" mi="11" ci="0" mb="0" cb="0"/><line nr="456" mi="1" ci="0" mb="0" cb="0"/><line nr="458" mi="14" ci="0" mb="0" cb="0"/><line nr="462" mi="5" ci="0" mb="0" cb="0"/><line nr="469" mi="0" ci="2" mb="0" cb="0"/><line nr="470" mi="0" ci="3" mb="0" cb="2"/><line nr="471" mi="0" ci="4" mb="0" cb="0"/><line nr="472" mi="0" ci="3" mb="1" cb="1"/><line nr="473" mi="7" ci="0" mb="0" cb="0"/><line nr="475" mi="0" ci="6" mb="0" cb="0"/><line nr="477" mi="0" ci="5" mb="0" cb="0"/><line nr="478" mi="0" ci="4" mb="0" cb="0"/><line nr="484" mi="0" ci="8" mb="0" cb="0"/><line nr="497" mi="0" ci="2" mb="0" cb="0"/><line nr="498" mi="0" ci="1" mb="0" cb="0"/><line nr="501" mi="3" ci="0" mb="0" cb="0"/><line nr="502" mi="1" ci="0" mb="0" cb="0"/><line nr="505" mi="0" ci="3" mb="0" cb="0"/><line nr="506" mi="0" ci="1" mb="0" cb="0"/><line nr="509" mi="5" ci="0" mb="0" cb="0"/><line nr="510" mi="1" ci="0" mb="0" cb="0"/><line nr="513" mi="5" ci="0" mb="0" cb="0"/><line nr="514" mi="1" ci="0" mb="0" cb="0"/><line nr="517" mi="5" ci="0" mb="0" cb="0"/><line nr="518" mi="1" ci="0" mb="0" cb="0"/><line nr="521" mi="0" ci="4" mb="0" cb="0"/><line nr="522" mi="0" ci="1" mb="0" cb="0"/><line nr="525" mi="3" ci="0" mb="0" cb="0"/><line nr="526" mi="1" ci="0" mb="0" cb="0"/><line nr="531" mi="0" ci="3" mb="1" cb="1"/><line nr="532" mi="0" ci="5" mb="0" cb="0"/><line nr="533" mi="0" ci="3" mb="0" cb="0"/><line nr="534" mi="0" ci="2" mb="0" cb="0"/><line nr="535" mi="3" ci="0" mb="2" cb="0"/><line nr="536" mi="6" ci="0" mb="0" cb="0"/><line nr="538" mi="4" ci="0" mb="0" cb="0"/><line nr="547" mi="0" ci="3" mb="0" cb="0"/><line nr="548" mi="0" ci="4" mb="0" cb="0"/><line nr="551" mi="0" ci="2" mb="0" cb="0"/><line nr="552" mi="0" ci="1" mb="0" cb="0"/><line nr="555" mi="3" ci="0" mb="0" cb="0"/><line nr="556" mi="1" ci="0" mb="0" cb="0"/><line nr="559" mi="0" ci="3" mb="0" cb="0"/><line nr="560" mi="0" ci="1" mb="0" cb="0"/><line nr="563" mi="5" ci="0" mb="0" cb="0"/><line nr="564" mi="1" ci="0" mb="0" cb="0"/><line nr="567" mi="5" ci="0" mb="0" cb="0"/><line nr="568" mi="1" ci="0" mb="0" cb="0"/><line nr="571" mi="5" ci="0" mb="0" cb="0"/><line nr="572" mi="1" ci="0" mb="0" cb="0"/><line nr="575" mi="0" ci="4" mb="0" cb="0"/><line nr="576" mi="0" ci="1" mb="0" cb="0"/><line nr="579" mi="3" ci="0" mb="0" cb="0"/><line nr="580" mi="1" ci="0" mb="0" cb="0"/><line nr="584" mi="4" ci="7" mb="3" cb="1"/><line nr="587" mi="3" ci="3" mb="3" cb="1"/><line nr="588" mi="0" ci="2" mb="0" cb="0"/><line nr="589" mi="0" ci="3" mb="1" cb="1"/><line nr="590" mi="0" ci="4" mb="0" cb="0"/><line nr="592" mi="4" ci="0" mb="0" cb="0"/><line nr="594" mi="0" ci="8" mb="0" cb="2"/><line nr="595" mi="0" ci="6" mb="0" cb="2"/><line nr="596" mi="0" ci="16" mb="0" cb="0"/><line nr="601" mi="0" ci="4" mb="0" cb="0"/><line nr="609" mi="0" ci="3" mb="0" cb="0"/><line nr="610" mi="0" ci="4" mb="0" cb="0"/><line nr="613" mi="0" ci="2" mb="0" cb="0"/><line nr="614" mi="0" ci="1" mb="0" cb="0"/><line nr="617" mi="3" ci="0" mb="0" cb="0"/><line nr="618" mi="1" ci="0" mb="0" cb="0"/><line nr="621" mi="0" ci="3" mb="0" cb="0"/><line nr="622" mi="0" ci="1" mb="0" cb="0"/><line nr="625" mi="5" ci="0" mb="0" cb="0"/><line nr="626" mi="1" ci="0" mb="0" cb="0"/><line nr="629" mi="5" ci="0" mb="0" cb="0"/><line nr="630" mi="1" ci="0" mb="0" cb="0"/><line nr="633" mi="5" ci="0" mb="0" cb="0"/><line nr="634" mi="1" ci="0" mb="0" cb="0"/><line nr="637" mi="4" ci="0" mb="0" cb="0"/><line nr="638" mi="1" ci="0" mb="0" cb="0"/><line nr="641" mi="3" ci="0" mb="0" cb="0"/><line nr="642" mi="1" ci="0" mb="0" cb="0"/><line nr="646" mi="4" ci="7" mb="3" cb="1"/><line nr="649" mi="3" ci="3" mb="3" cb="1"/><line nr="650" mi="0" ci="2" mb="0" cb="0"/><line nr="651" mi="0" ci="3" mb="1" cb="1"/><line nr="652" mi="0" ci="4" mb="0" cb="0"/><line nr="654" mi="4" ci="0" mb="0" cb="0"/><line nr="656" mi="0" ci="9" mb="0" cb="2"/><line nr="657" mi="0" ci="7" mb="0" cb="2"/><line nr="658" mi="0" ci="16" mb="0" cb="0"/><line nr="663" mi="0" ci="4" mb="0" cb="0"/><line nr="673" mi="0" ci="2" mb="0" cb="0"/><line nr="674" mi="0" ci="1" mb="0" cb="0"/><line nr="677" mi="3" ci="0" mb="0" cb="0"/><line nr="678" mi="1" ci="0" mb="0" cb="0"/><line nr="681" mi="3" ci="0" mb="0" cb="0"/><line nr="682" mi="1" ci="0" mb="0" cb="0"/><line nr="685" mi="3" ci="0" mb="0" cb="0"/><line nr="686" mi="1" ci="0" mb="0" cb="0"/><line nr="689" mi="4" ci="0" mb="0" cb="0"/><line nr="690" mi="1" ci="0" mb="0" cb="0"/><line nr="693" mi="4" ci="0" mb="0" cb="0"/><line nr="694" mi="1" ci="0" mb="0" cb="0"/><line nr="697" mi="4" ci="0" mb="0" cb="0"/><line nr="698" mi="1" ci="0" mb="0" cb="0"/><line nr="701" mi="3" ci="0" mb="0" cb="0"/><line nr="702" mi="1" ci="0" mb="0" cb="0"/><line nr="705" mi="3" ci="0" mb="0" cb="0"/><line nr="706" mi="1" ci="0" mb="0" cb="0"/><line nr="710" mi="0" ci="3" mb="1" cb="1"/><line nr="711" mi="7" ci="0" mb="0" cb="0"/><line nr="712" mi="0" ci="3" mb="1" cb="1"/><line nr="713" mi="0" ci="4" mb="0" cb="0"/><line nr="714" mi="3" ci="0" mb="2" cb="0"/><line nr="715" mi="5" ci="0" mb="0" cb="0"/><line nr="716" mi="3" ci="0" mb="2" cb="0"/><line nr="717" mi="5" ci="0" mb="0" cb="0"/><line nr="719" mi="4" ci="0" mb="0" cb="0"/><line nr="727" mi="6" ci="0" mb="0" cb="0"/><line nr="736" mi="0" ci="3" mb="0" cb="0"/><line nr="737" mi="0" ci="4" mb="0" cb="0"/><line nr="741" mi="0" ci="2" mb="0" cb="0"/><line nr="742" mi="0" ci="1" mb="0" cb="0"/><line nr="745" mi="3" ci="0" mb="0" cb="0"/><line nr="746" mi="1" ci="0" mb="0" cb="0"/><line nr="749" mi="3" ci="0" mb="0" cb="0"/><line nr="750" mi="1" ci="0" mb="0" cb="0"/><line nr="753" mi="3" ci="0" mb="0" cb="0"/><line nr="754" mi="1" ci="0" mb="0" cb="0"/><line nr="757" mi="4" ci="0" mb="0" cb="0"/><line nr="758" mi="1" ci="0" mb="0" cb="0"/><line nr="761" mi="4" ci="0" mb="0" cb="0"/><line nr="762" mi="1" ci="0" mb="0" cb="0"/><line nr="765" mi="4" ci="0" mb="0" cb="0"/><line nr="766" mi="1" ci="0" mb="0" cb="0"/><line nr="769" mi="3" ci="0" mb="0" cb="0"/><line nr="770" mi="1" ci="0" mb="0" cb="0"/><line nr="773" mi="3" ci="0" mb="0" cb="0"/><line nr="774" mi="1" ci="0" mb="0" cb="0"/><line nr="778" mi="4" ci="7" mb="3" cb="1"/><line nr="781" mi="3" ci="3" mb="3" cb="1"/><line nr="782" mi="0" ci="2" mb="0" cb="0"/><line nr="783" mi="0" ci="3" mb="1" cb="1"/><line nr="784" mi="0" ci="5" mb="0" cb="0"/><line nr="786" mi="3" ci="0" mb="0" cb="0"/><line nr="788" mi="0" ci="8" mb="1" cb="1"/><line nr="789" mi="0" ci="4" mb="1" cb="1"/><line nr="790" mi="16" ci="0" mb="0" cb="0"/><line nr="795" mi="0" ci="4" mb="0" cb="0"/><line nr="803" mi="4" ci="0" mb="0" cb="0"/><line nr="812" mi="0" ci="3" mb="0" cb="0"/><line nr="813" mi="0" ci="4" mb="0" cb="0"/><line nr="816" mi="0" ci="2" mb="0" cb="0"/><line nr="817" mi="0" ci="1" mb="0" cb="0"/><line nr="820" mi="3" ci="0" mb="0" cb="0"/><line nr="821" mi="1" ci="0" mb="0" cb="0"/><line nr="824" mi="3" ci="0" mb="0" cb="0"/><line nr="825" mi="1" ci="0" mb="0" cb="0"/><line nr="828" mi="3" ci="0" mb="0" cb="0"/><line nr="829" mi="1" ci="0" mb="0" cb="0"/><line nr="832" mi="0" ci="4" mb="0" cb="0"/><line nr="833" mi="0" ci="1" mb="0" cb="0"/><line nr="836" mi="4" ci="0" mb="0" cb="0"/><line nr="837" mi="1" ci="0" mb="0" cb="0"/><line nr="840" mi="4" ci="0" mb="0" cb="0"/><line nr="841" mi="1" ci="0" mb="0" cb="0"/><line nr="844" mi="3" ci="0" mb="0" cb="0"/><line nr="845" mi="1" ci="0" mb="0" cb="0"/><line nr="848" mi="3" ci="0" mb="0" cb="0"/><line nr="849" mi="1" ci="0" mb="0" cb="0"/><line nr="853" mi="4" ci="7" mb="3" cb="1"/><line nr="856" mi="3" ci="3" mb="3" cb="1"/><line nr="857" mi="0" ci="2" mb="0" cb="0"/><line nr="858" mi="0" ci="3" mb="1" cb="1"/><line nr="859" mi="0" ci="5" mb="0" cb="0"/><line nr="861" mi="3" ci="0" mb="0" cb="0"/><line nr="863" mi="0" ci="9" mb="1" cb="1"/><line nr="864" mi="0" ci="5" mb="1" cb="1"/><line nr="865" mi="16" ci="0" mb="0" cb="0"/><line nr="870" mi="0" ci="4" mb="0" cb="0"/><line nr="878" mi="4" ci="0" mb="0" cb="0"/><line nr="887" mi="0" ci="3" mb="0" cb="0"/><line nr="888" mi="0" ci="4" mb="0" cb="0"/><line nr="891" mi="0" ci="2" mb="0" cb="0"/><line nr="892" mi="0" ci="1" mb="0" cb="0"/><line nr="895" mi="3" ci="0" mb="0" cb="0"/><line nr="896" mi="1" ci="0" mb="0" cb="0"/><line nr="899" mi="3" ci="0" mb="0" cb="0"/><line nr="900" mi="1" ci="0" mb="0" cb="0"/><line nr="903" mi="3" ci="0" mb="0" cb="0"/><line nr="904" mi="1" ci="0" mb="0" cb="0"/><line nr="907" mi="4" ci="0" mb="0" cb="0"/><line nr="908" mi="1" ci="0" mb="0" cb="0"/><line nr="911" mi="4" ci="0" mb="0" cb="0"/><line nr="912" mi="1" ci="0" mb="0" cb="0"/><line nr="915" mi="4" ci="0" mb="0" cb="0"/><line nr="916" mi="1" ci="0" mb="0" cb="0"/><line nr="919" mi="3" ci="0" mb="0" cb="0"/><line nr="920" mi="1" ci="0" mb="0" cb="0"/><line nr="923" mi="3" ci="0" mb="0" cb="0"/><line nr="924" mi="1" ci="0" mb="0" cb="0"/><line nr="928" mi="11" ci="0" mb="4" cb="0"/><line nr="931" mi="6" ci="0" mb="4" cb="0"/><line nr="932" mi="2" ci="0" mb="0" cb="0"/><line nr="933" mi="3" ci="0" mb="2" cb="0"/><line nr="934" mi="5" ci="0" mb="0" cb="0"/><line nr="936" mi="3" ci="0" mb="0" cb="0"/><line nr="938" mi="9" ci="0" mb="2" cb="0"/><line nr="939" mi="5" ci="0" mb="2" cb="0"/><line nr="940" mi="16" ci="0" mb="0" cb="0"/><line nr="945" mi="4" ci="0" mb="0" cb="0"/><line nr="953" mi="4" ci="0" mb="0" cb="0"/><line nr="962" mi="0" ci="3" mb="0" cb="0"/><line nr="963" mi="0" ci="4" mb="0" cb="0"/><line nr="966" mi="0" ci="2" mb="0" cb="0"/><line nr="967" mi="0" ci="1" mb="0" cb="0"/><line nr="970" mi="3" ci="0" mb="0" cb="0"/><line nr="971" mi="1" ci="0" mb="0" cb="0"/><line nr="974" mi="3" ci="0" mb="0" cb="0"/><line nr="975" mi="1" ci="0" mb="0" cb="0"/><line nr="978" mi="3" ci="0" mb="0" cb="0"/><line nr="979" mi="1" ci="0" mb="0" cb="0"/><line nr="982" mi="4" ci="0" mb="0" cb="0"/><line nr="983" mi="1" ci="0" mb="0" cb="0"/><line nr="986" mi="4" ci="0" mb="0" cb="0"/><line nr="987" mi="1" ci="0" mb="0" cb="0"/><line nr="990" mi="4" ci="0" mb="0" cb="0"/><line nr="991" mi="1" ci="0" mb="0" cb="0"/><line nr="994" mi="3" ci="0" mb="0" cb="0"/><line nr="995" mi="1" ci="0" mb="0" cb="0"/><line nr="998" mi="3" ci="0" mb="0" cb="0"/><line nr="999" mi="1" ci="0" mb="0" cb="0"/><line nr="1003" mi="11" ci="0" mb="4" cb="0"/><line nr="1006" mi="6" ci="0" mb="4" cb="0"/><line nr="1007" mi="2" ci="0" mb="0" cb="0"/><line nr="1008" mi="3" ci="0" mb="2" cb="0"/><line nr="1009" mi="5" ci="0" mb="0" cb="0"/><line nr="1011" mi="3" ci="0" mb="0" cb="0"/><line nr="1013" mi="9" ci="0" mb="2" cb="0"/><line nr="1014" mi="5" ci="0" mb="2" cb="0"/><line nr="1015" mi="16" ci="0" mb="0" cb="0"/><line nr="1020" mi="4" ci="0" mb="0" cb="0"/><line nr="1028" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1212" covered="793"/><counter type="BRANCH" missed="95" covered="41"/><counter type="LINE" missed="275" covered="176"/><counter type="COMPLEXITY" missed="140" covered="56"/><counter type="METHOD" missed="76" covered="48"/><counter type="CLASS" missed="0" covered="15"/></sourcefile><sourcefile name="FnBoolean.java"><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="3" ci="0" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="3" ci="0" mb="0" cb="0"/><line nr="231" mi="3" ci="0" mb="0" cb="0"/><line nr="250" mi="5" ci="0" mb="0" cb="0"/><line nr="266" mi="5" ci="0" mb="0" cb="0"/><line nr="283" mi="5" ci="0" mb="0" cb="0"/><line nr="299" mi="5" ci="0" mb="0" cb="0"/><line nr="313" mi="2" ci="0" mb="0" cb="0"/><line nr="326" mi="2" ci="0" mb="0" cb="0"/><line nr="353" mi="0" ci="6" mb="0" cb="0"/><line nr="369" mi="0" ci="6" mb="0" cb="0"/><line nr="385" mi="0" ci="5" mb="0" cb="0"/><line nr="401" mi="2" ci="0" mb="0" cb="0"/><line nr="414" mi="2" ci="0" mb="0" cb="0"/><line nr="428" mi="4" ci="0" mb="0" cb="0"/><line nr="442" mi="4" ci="0" mb="0" cb="0"/><line nr="459" mi="0" ci="2" mb="0" cb="0"/><line nr="460" mi="0" ci="4" mb="0" cb="2"/><line nr="461" mi="0" ci="4" mb="0" cb="0"/><line nr="462" mi="0" ci="5" mb="0" cb="0"/><line nr="463" mi="0" ci="4" mb="0" cb="2"/><line nr="464" mi="0" ci="4" mb="0" cb="0"/><line nr="465" mi="0" ci="5" mb="0" cb="0"/><line nr="466" mi="0" ci="4" mb="0" cb="2"/><line nr="467" mi="0" ci="4" mb="0" cb="0"/><line nr="468" mi="0" ci="5" mb="0" cb="0"/><line nr="469" mi="0" ci="4" mb="0" cb="2"/><line nr="470" mi="0" ci="4" mb="0" cb="0"/><line nr="471" mi="0" ci="5" mb="0" cb="0"/><line nr="472" mi="0" ci="4" mb="0" cb="2"/><line nr="473" mi="0" ci="4" mb="0" cb="0"/><line nr="474" mi="0" ci="5" mb="0" cb="0"/><line nr="475" mi="0" ci="4" mb="0" cb="2"/><line nr="476" mi="0" ci="4" mb="0" cb="0"/><line nr="477" mi="0" ci="5" mb="0" cb="0"/><line nr="478" mi="0" ci="4" mb="0" cb="2"/><line nr="479" mi="0" ci="4" mb="0" cb="0"/><line nr="480" mi="0" ci="5" mb="0" cb="0"/><line nr="481" mi="0" ci="4" mb="1" cb="1"/><line nr="482" mi="0" ci="4" mb="0" cb="0"/><line nr="483" mi="0" ci="5" mb="0" cb="0"/><line nr="485" mi="14" ci="0" mb="0" cb="0"/><line nr="487" mi="0" ci="1" mb="0" cb="0"/><line nr="493" mi="9" ci="0" mb="2" cb="0"/><line nr="510" mi="0" ci="2" mb="0" cb="0"/><line nr="511" mi="0" ci="1" mb="0" cb="0"/><line nr="515" mi="7" ci="0" mb="2" cb="0"/><line nr="530" mi="0" ci="2" mb="0" cb="0"/><line nr="531" mi="0" ci="3" mb="0" cb="0"/><line nr="532" mi="0" ci="3" mb="0" cb="0"/><line nr="533" mi="0" ci="3" mb="0" cb="0"/><line nr="534" mi="0" ci="3" mb="0" cb="0"/><line nr="535" mi="0" ci="1" mb="0" cb="0"/><line nr="539" mi="0" ci="7" mb="0" cb="0"/><line nr="540" mi="0" ci="2" mb="1" cb="1"/><line nr="541" mi="5" ci="0" mb="0" cb="0"/><line nr="544" mi="0" ci="3" mb="1" cb="1"/><line nr="545" mi="2" ci="0" mb="0" cb="0"/><line nr="547" mi="0" ci="7" mb="0" cb="0"/><line nr="548" mi="0" ci="2" mb="1" cb="1"/><line nr="549" mi="5" ci="0" mb="0" cb="0"/><line nr="552" mi="0" ci="3" mb="0" cb="2"/><line nr="553" mi="0" ci="2" mb="0" cb="0"/><line nr="556" mi="0" ci="2" mb="0" cb="0"/><line nr="572" mi="0" ci="2" mb="0" cb="0"/><line nr="573" mi="0" ci="3" mb="0" cb="0"/><line nr="574" mi="0" ci="3" mb="0" cb="0"/><line nr="575" mi="0" ci="3" mb="0" cb="0"/><line nr="576" mi="0" ci="3" mb="0" cb="0"/><line nr="577" mi="0" ci="1" mb="0" cb="0"/><line nr="581" mi="0" ci="7" mb="0" cb="0"/><line nr="582" mi="0" ci="2" mb="1" cb="1"/><line nr="583" mi="5" ci="0" mb="0" cb="0"/><line nr="586" mi="0" ci="3" mb="1" cb="1"/><line nr="587" mi="0" ci="2" mb="0" cb="0"/><line nr="590" mi="7" ci="0" mb="0" cb="0"/><line nr="591" mi="2" ci="0" mb="2" cb="0"/><line nr="592" mi="5" ci="0" mb="0" cb="0"/><line nr="595" mi="3" ci="0" mb="2" cb="0"/><line nr="596" mi="2" ci="0" mb="0" cb="0"/><line nr="599" mi="2" ci="0" mb="0" cb="0"/><line nr="616" mi="0" ci="2" mb="0" cb="0"/><line nr="617" mi="0" ci="3" mb="0" cb="0"/><line nr="618" mi="0" ci="3" mb="0" cb="0"/><line nr="619" mi="0" ci="1" mb="0" cb="0"/><line nr="622" mi="0" ci="7" mb="0" cb="0"/><line nr="623" mi="0" ci="2" mb="1" cb="1"/><line nr="624" mi="5" ci="0" mb="0" cb="0"/><line nr="627" mi="0" ci="3" mb="1" cb="1"/><line nr="628" mi="2" ci="0" mb="0" cb="0"/><line nr="630" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="138" covered="276"/><counter type="BRANCH" missed="16" covered="24"/><counter type="LINE" missed="37" covered="75"/><counter type="COMPLEXITY" missed="36" covered="21"/><counter type="METHOD" missed="24" covered="13"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="ExpressionFunction.java"><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FnSet.java"><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="191" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="2" ci="0" mb="0" cb="0"/><line nr="217" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="2" ci="0" mb="0" cb="0"/><line nr="256" mi="2" ci="0" mb="0" cb="0"/><line nr="269" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="44" covered="75"/><counter type="LINE" missed="16" covered="16"/><counter type="COMPLEXITY" missed="16" covered="3"/><counter type="METHOD" missed="16" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TimeStyle.java"><line nr="32" mi="24" ci="0" mb="0" cb="0"/><line nr="33" mi="12" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="12" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="12" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="12" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="90" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="5" covered="0"/></sourcefile><sourcefile name="FnCollection.java"><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="9" mb="0" cb="2"/><line nr="125" mi="0" ci="12" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="10" mb="0" cb="2"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="1" cb="1"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="1" cb="1"/><line nr="166" mi="5" ci="0" mb="0" cb="0"/><line nr="168" mi="0" ci="6" mb="0" cb="0"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="10" ci="0" mb="2" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="2" cb="0"/><line nr="184" mi="2" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="2" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="5" ci="0" mb="2" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="3" ci="0" mb="0" cb="0"/><line nr="193" mi="6" ci="0" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="219" mi="0" ci="5" mb="0" cb="0"/><line nr="220" mi="0" ci="5" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="1" mb="0" cb="0"/><line nr="243" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="7" mb="0" cb="0"/><line nr="245" mi="0" ci="4" mb="0" cb="0"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="6" mb="0" cb="0"/><line nr="264" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="0" ci="5" mb="0" cb="0"/><line nr="269" mi="0" ci="5" mb="0" cb="0"/><line nr="270" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="0" ci="4" mb="0" cb="0"/><line nr="288" mi="0" ci="1" mb="0" cb="0"/><line nr="292" mi="0" ci="4" mb="0" cb="0"/><line nr="293" mi="0" ci="2" mb="0" cb="0"/><line nr="294" mi="0" ci="9" mb="0" cb="2"/><line nr="295" mi="0" ci="6" mb="0" cb="2"/><line nr="296" mi="0" ci="4" mb="0" cb="0"/><line nr="298" mi="0" ci="1" mb="0" cb="0"/><line nr="299" mi="0" ci="1" mb="0" cb="0"/><line nr="300" mi="0" ci="4" mb="0" cb="0"/><line nr="316" mi="2" ci="0" mb="0" cb="0"/><line nr="317" mi="4" ci="0" mb="0" cb="0"/><line nr="318" mi="1" ci="0" mb="0" cb="0"/><line nr="322" mi="5" ci="0" mb="0" cb="0"/><line nr="323" mi="5" ci="0" mb="0" cb="0"/><line nr="324" mi="4" ci="0" mb="0" cb="0"/><line nr="340" mi="0" ci="2" mb="0" cb="0"/><line nr="341" mi="0" ci="3" mb="0" cb="0"/><line nr="342" mi="0" ci="3" mb="0" cb="0"/><line nr="343" mi="0" ci="1" mb="0" cb="0"/><line nr="347" mi="0" ci="4" mb="0" cb="0"/><line nr="348" mi="0" ci="9" mb="0" cb="2"/><line nr="349" mi="0" ci="8" mb="0" cb="2"/><line nr="350" mi="0" ci="4" mb="0" cb="0"/><line nr="352" mi="0" ci="1" mb="0" cb="0"/><line nr="353" mi="0" ci="4" mb="0" cb="0"/><line nr="370" mi="2" ci="0" mb="0" cb="0"/><line nr="371" mi="3" ci="0" mb="0" cb="0"/><line nr="372" mi="3" ci="0" mb="0" cb="0"/><line nr="373" mi="1" ci="0" mb="0" cb="0"/><line nr="377" mi="4" ci="0" mb="0" cb="0"/><line nr="378" mi="9" ci="0" mb="2" cb="0"/><line nr="379" mi="8" ci="0" mb="2" cb="0"/><line nr="380" mi="4" ci="0" mb="0" cb="0"/><line nr="382" mi="1" ci="0" mb="0" cb="0"/><line nr="383" mi="4" ci="0" mb="0" cb="0"/><line nr="399" mi="0" ci="2" mb="0" cb="0"/><line nr="400" mi="0" ci="4" mb="0" cb="0"/><line nr="401" mi="0" ci="1" mb="0" cb="0"/><line nr="405" mi="0" ci="4" mb="0" cb="0"/><line nr="406" mi="0" ci="2" mb="0" cb="0"/><line nr="407" mi="0" ci="9" mb="0" cb="2"/><line nr="408" mi="0" ci="6" mb="0" cb="2"/><line nr="409" mi="0" ci="4" mb="0" cb="0"/><line nr="411" mi="0" ci="1" mb="0" cb="0"/><line nr="412" mi="0" ci="1" mb="0" cb="0"/><line nr="413" mi="0" ci="4" mb="0" cb="0"/><line nr="427" mi="0" ci="2" mb="0" cb="0"/><line nr="428" mi="0" ci="1" mb="0" cb="0"/><line nr="432" mi="0" ci="4" mb="0" cb="0"/><line nr="433" mi="0" ci="9" mb="0" cb="2"/><line nr="434" mi="0" ci="2" mb="0" cb="2"/><line nr="435" mi="0" ci="4" mb="0" cb="0"/><line nr="437" mi="0" ci="1" mb="0" cb="0"/><line nr="438" mi="0" ci="4" mb="0" cb="0"/><line nr="455" mi="2" ci="0" mb="0" cb="0"/><line nr="456" mi="3" ci="0" mb="0" cb="0"/><line nr="457" mi="3" ci="0" mb="0" cb="0"/><line nr="458" mi="1" ci="0" mb="0" cb="0"/><line nr="462" mi="4" ci="0" mb="0" cb="0"/><line nr="463" mi="9" ci="0" mb="2" cb="0"/><line nr="464" mi="2" ci="0" mb="2" cb="0"/><line nr="465" mi="8" ci="0" mb="2" cb="0"/><line nr="466" mi="5" ci="0" mb="0" cb="0"/><line nr="469" mi="4" ci="0" mb="0" cb="0"/><line nr="471" mi="1" ci="0" mb="0" cb="0"/><line nr="472" mi="4" ci="0" mb="0" cb="0"/><line nr="491" mi="2" ci="0" mb="0" cb="0"/><line nr="492" mi="3" ci="0" mb="0" cb="0"/><line nr="493" mi="3" ci="0" mb="0" cb="0"/><line nr="494" mi="1" ci="0" mb="0" cb="0"/><line nr="498" mi="4" ci="0" mb="0" cb="0"/><line nr="499" mi="9" ci="0" mb="2" cb="0"/><line nr="500" mi="2" ci="0" mb="2" cb="0"/><line nr="501" mi="8" ci="0" mb="2" cb="0"/><line nr="502" mi="5" ci="0" mb="0" cb="0"/><line nr="505" mi="4" ci="0" mb="0" cb="0"/><line nr="507" mi="1" ci="0" mb="0" cb="0"/><line nr="508" mi="4" ci="0" mb="0" cb="0"/><line nr="525" mi="0" ci="2" mb="0" cb="0"/><line nr="526" mi="0" ci="3" mb="0" cb="0"/><line nr="527" mi="0" ci="3" mb="0" cb="0"/><line nr="528" mi="0" ci="1" mb="0" cb="0"/><line nr="532" mi="0" ci="4" mb="0" cb="0"/><line nr="533" mi="0" ci="9" mb="0" cb="2"/><line nr="534" mi="0" ci="2" mb="0" cb="2"/><line nr="535" mi="0" ci="8" mb="0" cb="2"/><line nr="536" mi="0" ci="4" mb="0" cb="0"/><line nr="539" mi="0" ci="1" mb="0" cb="0"/><line nr="540" mi="0" ci="4" mb="0" cb="0"/><line nr="558" mi="2" ci="0" mb="0" cb="0"/><line nr="559" mi="3" ci="0" mb="0" cb="0"/><line nr="560" mi="3" ci="0" mb="0" cb="0"/><line nr="561" mi="1" ci="0" mb="0" cb="0"/><line nr="565" mi="4" ci="0" mb="0" cb="0"/><line nr="566" mi="9" ci="0" mb="2" cb="0"/><line nr="567" mi="2" ci="0" mb="2" cb="0"/><line nr="568" mi="8" ci="0" mb="2" cb="0"/><line nr="569" mi="4" ci="0" mb="0" cb="0"/><line nr="572" mi="1" ci="0" mb="0" cb="0"/><line nr="573" mi="4" ci="0" mb="0" cb="0"/><line nr="587" mi="2" ci="0" mb="0" cb="0"/><line nr="588" mi="1" ci="0" mb="0" cb="0"/><line nr="593" mi="4" ci="0" mb="0" cb="0"/><line nr="594" mi="10" ci="0" mb="2" cb="0"/><line nr="595" mi="5" ci="0" mb="0" cb="0"/><line nr="596" mi="1" ci="0" mb="0" cb="0"/><line nr="597" mi="4" ci="0" mb="0" cb="0"/><line nr="610" mi="2" ci="0" mb="0" cb="0"/><line nr="611" mi="1" ci="0" mb="0" cb="0"/><line nr="616" mi="4" ci="0" mb="0" cb="0"/><line nr="617" mi="10" ci="0" mb="2" cb="0"/><line nr="618" mi="4" ci="0" mb="0" cb="0"/><line nr="619" mi="1" ci="0" mb="0" cb="0"/><line nr="620" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="300" covered="392"/><counter type="BRANCH" missed="36" covered="28"/><counter type="LINE" missed="80" covered="109"/><counter type="COMPLEXITY" missed="35" covered="40"/><counter type="METHOD" missed="16" covered="27"/><counter type="CLASS" missed="7" covered="12"/></sourcefile><sourcefile name="FnSetOfListOf.java"><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="AbstractNotNullNonConvertingFunc.java"><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FnInteger.java"><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="3" ci="0" mb="0" cb="0"/><line nr="187" mi="3" ci="0" mb="0" cb="0"/><line nr="201" mi="4" ci="0" mb="0" cb="0"/><line nr="215" mi="4" ci="0" mb="0" cb="0"/><line nr="226" mi="2" ci="0" mb="0" cb="0"/><line nr="242" mi="3" ci="0" mb="0" cb="0"/><line nr="255" mi="3" ci="0" mb="0" cb="0"/><line nr="268" mi="3" ci="0" mb="0" cb="0"/><line nr="283" mi="4" ci="0" mb="0" cb="0"/><line nr="298" mi="4" ci="0" mb="0" cb="0"/><line nr="312" mi="3" ci="0" mb="0" cb="0"/><line nr="326" mi="3" ci="0" mb="0" cb="0"/><line nr="341" mi="3" ci="0" mb="0" cb="0"/><line nr="356" mi="3" ci="0" mb="0" cb="0"/><line nr="371" mi="3" ci="0" mb="0" cb="0"/><line nr="385" mi="3" ci="0" mb="0" cb="0"/><line nr="400" mi="3" ci="0" mb="0" cb="0"/><line nr="415" mi="3" ci="0" mb="0" cb="0"/><line nr="431" mi="3" ci="0" mb="0" cb="0"/><line nr="450" mi="3" ci="0" mb="0" cb="0"/><line nr="466" mi="3" ci="0" mb="0" cb="0"/><line nr="486" mi="3" ci="0" mb="0" cb="0"/><line nr="502" mi="3" ci="0" mb="0" cb="0"/><line nr="523" mi="3" ci="0" mb="0" cb="0"/><line nr="540" mi="3" ci="0" mb="0" cb="0"/><line nr="561" mi="3" ci="0" mb="0" cb="0"/><line nr="579" mi="4" ci="0" mb="0" cb="0"/><line nr="600" mi="4" ci="0" mb="0" cb="0"/><line nr="618" mi="4" ci="0" mb="0" cb="0"/><line nr="638" mi="4" ci="0" mb="0" cb="0"/><line nr="658" mi="4" ci="0" mb="0" cb="0"/><line nr="682" mi="4" ci="0" mb="0" cb="0"/><line nr="706" mi="4" ci="0" mb="0" cb="0"/><line nr="730" mi="4" ci="0" mb="0" cb="0"/><line nr="750" mi="2" ci="0" mb="0" cb="0"/><line nr="763" mi="2" ci="0" mb="0" cb="0"/><line nr="783" mi="2" ci="0" mb="0" cb="0"/><line nr="794" mi="2" ci="0" mb="0" cb="0"/><line nr="805" mi="2" ci="0" mb="0" cb="0"/><line nr="816" mi="2" ci="0" mb="0" cb="0"/><line nr="831" mi="5" ci="0" mb="0" cb="0"/><line nr="845" mi="5" ci="0" mb="0" cb="0"/><line nr="856" mi="2" ci="0" mb="0" cb="0"/><line nr="867" mi="2" ci="0" mb="0" cb="0"/><line nr="878" mi="2" ci="0" mb="0" cb="0"/><line nr="889" mi="2" ci="0" mb="0" cb="0"/><line nr="904" mi="5" ci="0" mb="0" cb="0"/><line nr="918" mi="5" ci="0" mb="0" cb="0"/><line nr="929" mi="0" ci="2" mb="0" cb="0"/><line nr="941" mi="0" ci="6" mb="0" cb="0"/><line nr="953" mi="4" ci="0" mb="0" cb="0"/><line nr="965" mi="4" ci="0" mb="0" cb="0"/><line nr="977" mi="0" ci="4" mb="0" cb="0"/><line nr="989" mi="4" ci="0" mb="0" cb="0"/><line nr="1001" mi="4" ci="0" mb="0" cb="0"/><line nr="1013" mi="4" ci="0" mb="0" cb="0"/><line nr="1026" mi="0" ci="6" mb="0" cb="0"/><line nr="1038" mi="4" ci="0" mb="0" cb="0"/><line nr="1050" mi="4" ci="0" mb="0" cb="0"/><line nr="1062" mi="4" ci="0" mb="0" cb="0"/><line nr="1074" mi="4" ci="0" mb="0" cb="0"/><line nr="1086" mi="4" ci="0" mb="0" cb="0"/><line nr="1098" mi="4" ci="0" mb="0" cb="0"/><line nr="1111" mi="6" ci="0" mb="0" cb="0"/><line nr="1123" mi="4" ci="0" mb="0" cb="0"/><line nr="1135" mi="4" ci="0" mb="0" cb="0"/><line nr="1147" mi="4" ci="0" mb="0" cb="0"/><line nr="1159" mi="4" ci="0" mb="0" cb="0"/><line nr="1171" mi="4" ci="0" mb="0" cb="0"/><line nr="1183" mi="4" ci="0" mb="0" cb="0"/><line nr="1198" mi="0" ci="7" mb="0" cb="0"/><line nr="1212" mi="5" ci="0" mb="0" cb="0"/><line nr="1226" mi="5" ci="0" mb="0" cb="0"/><line nr="1240" mi="5" ci="0" mb="0" cb="0"/><line nr="1254" mi="5" ci="0" mb="0" cb="0"/><line nr="1268" mi="5" ci="0" mb="0" cb="0"/><line nr="1282" mi="5" ci="0" mb="0" cb="0"/><line nr="1297" mi="0" ci="7" mb="0" cb="0"/><line nr="1311" mi="5" ci="0" mb="0" cb="0"/><line nr="1325" mi="5" ci="0" mb="0" cb="0"/><line nr="1339" mi="0" ci="5" mb="0" cb="0"/><line nr="1353" mi="5" ci="0" mb="0" cb="0"/><line nr="1367" mi="5" ci="0" mb="0" cb="0"/><line nr="1381" mi="5" ci="0" mb="0" cb="0"/><line nr="1395" mi="8" ci="0" mb="0" cb="0"/><line nr="1409" mi="8" ci="0" mb="0" cb="0"/><line nr="1423" mi="8" ci="0" mb="0" cb="0"/><line nr="1437" mi="8" ci="0" mb="0" cb="0"/><line nr="1451" mi="7" ci="0" mb="0" cb="0"/><line nr="1465" mi="7" ci="0" mb="0" cb="0"/><line nr="1479" mi="7" ci="0" mb="0" cb="0"/><line nr="1493" mi="7" ci="0" mb="0" cb="0"/><line nr="1507" mi="5" ci="0" mb="0" cb="0"/><line nr="1520" mi="6" ci="0" mb="0" cb="0"/><line nr="1533" mi="4" ci="0" mb="0" cb="0"/><line nr="1546" mi="4" ci="0" mb="0" cb="0"/><line nr="1559" mi="4" ci="0" mb="0" cb="0"/><line nr="1572" mi="4" ci="0" mb="0" cb="0"/><line nr="1585" mi="4" ci="0" mb="0" cb="0"/><line nr="1598" mi="4" ci="0" mb="0" cb="0"/><line nr="1610" mi="0" ci="6" mb="0" cb="0"/><line nr="1622" mi="4" ci="0" mb="0" cb="0"/><line nr="1634" mi="4" ci="0" mb="0" cb="0"/><line nr="1646" mi="4" ci="0" mb="0" cb="0"/><line nr="1658" mi="4" ci="0" mb="0" cb="0"/><line nr="1670" mi="4" ci="0" mb="0" cb="0"/><line nr="1682" mi="4" ci="0" mb="0" cb="0"/><line nr="1697" mi="7" ci="0" mb="0" cb="0"/><line nr="1711" mi="5" ci="0" mb="0" cb="0"/><line nr="1725" mi="5" ci="0" mb="0" cb="0"/><line nr="1739" mi="5" ci="0" mb="0" cb="0"/><line nr="1753" mi="5" ci="0" mb="0" cb="0"/><line nr="1767" mi="5" ci="0" mb="0" cb="0"/><line nr="1781" mi="5" ci="0" mb="0" cb="0"/><line nr="1795" mi="7" ci="0" mb="0" cb="0"/><line nr="1808" mi="5" ci="0" mb="0" cb="0"/><line nr="1821" mi="5" ci="0" mb="0" cb="0"/><line nr="1834" mi="5" ci="0" mb="0" cb="0"/><line nr="1847" mi="5" ci="0" mb="0" cb="0"/><line nr="1860" mi="5" ci="0" mb="0" cb="0"/><line nr="1873" mi="5" ci="0" mb="0" cb="0"/><line nr="1886" mi="0" ci="5" mb="0" cb="0"/><line nr="1900" mi="6" ci="0" mb="0" cb="0"/><line nr="1914" mi="6" ci="0" mb="0" cb="0"/><line nr="1931" mi="4" ci="0" mb="0" cb="0"/><line nr="1947" mi="4" ci="0" mb="0" cb="0"/><line nr="1954" mi="0" ci="2" mb="1" cb="1"/><line nr="1955" mi="2" ci="0" mb="0" cb="0"/><line nr="1957" mi="0" ci="4" mb="0" cb="0"/><line nr="1967" mi="0" ci="2" mb="0" cb="0"/><line nr="1968" mi="0" ci="1" mb="0" cb="0"/><line nr="1972" mi="4" ci="0" mb="2" cb="0"/><line nr="1973" mi="2" ci="0" mb="0" cb="0"/><line nr="1975" mi="5" ci="0" mb="0" cb="0"/><line nr="1976" mi="10" ci="0" mb="2" cb="0"/><line nr="1977" mi="2" ci="0" mb="2" cb="0"/><line nr="1978" mi="4" ci="0" mb="2" cb="0"/><line nr="1979" mi="2" ci="0" mb="0" cb="0"/><line nr="1982" mi="1" ci="0" mb="0" cb="0"/><line nr="1983" mi="2" ci="0" mb="0" cb="0"/><line nr="1990" mi="0" ci="2" mb="0" cb="0"/><line nr="1991" mi="0" ci="1" mb="0" cb="0"/><line nr="1995" mi="4" ci="0" mb="2" cb="0"/><line nr="1996" mi="2" ci="0" mb="0" cb="0"/><line nr="1998" mi="5" ci="0" mb="0" cb="0"/><line nr="1999" mi="10" ci="0" mb="2" cb="0"/><line nr="2000" mi="2" ci="0" mb="2" cb="0"/><line nr="2001" mi="4" ci="0" mb="2" cb="0"/><line nr="2002" mi="2" ci="0" mb="0" cb="0"/><line nr="2005" mi="1" ci="0" mb="0" cb="0"/><line nr="2006" mi="2" ci="0" mb="0" cb="0"/><line nr="2013" mi="0" ci="2" mb="0" cb="0"/><line nr="2014" mi="0" ci="1" mb="0" cb="0"/><line nr="2018" mi="3" ci="0" mb="0" cb="0"/><line nr="2019" mi="10" ci="0" mb="2" cb="0"/><line nr="2020" mi="2" ci="0" mb="2" cb="0"/><line nr="2021" mi="7" ci="0" mb="0" cb="0"/><line nr="2023" mi="1" ci="0" mb="0" cb="0"/><line nr="2024" mi="4" ci="0" mb="0" cb="0"/><line nr="2034" mi="0" ci="2" mb="0" cb="0"/><line nr="2035" mi="0" ci="3" mb="0" cb="0"/><line nr="2036" mi="0" ci="3" mb="0" cb="0"/><line nr="2037" mi="0" ci="1" mb="0" cb="0"/><line nr="2040" mi="2" ci="0" mb="0" cb="0"/><line nr="2041" mi="3" ci="0" mb="0" cb="0"/><line nr="2042" mi="3" ci="0" mb="0" cb="0"/><line nr="2043" mi="3" ci="0" mb="0" cb="0"/><line nr="2044" mi="1" ci="0" mb="0" cb="0"/><line nr="2047" mi="2" ci="0" mb="0" cb="0"/><line nr="2048" mi="3" ci="0" mb="0" cb="0"/><line nr="2049" mi="3" ci="0" mb="0" cb="0"/><line nr="2050" mi="3" ci="0" mb="0" cb="0"/><line nr="2051" mi="1" ci="0" mb="0" cb="0"/><line nr="2056" mi="2" ci="0" mb="0" cb="0"/><line nr="2057" mi="3" ci="0" mb="0" cb="0"/><line nr="2058" mi="10" ci="0" mb="2" cb="0"/><line nr="2059" mi="2" ci="0" mb="2" cb="0"/><line nr="2060" mi="7" ci="0" mb="0" cb="0"/><line nr="2061" mi="1" ci="0" mb="0" cb="0"/><line nr="2063" mi="1" ci="0" mb="0" cb="0"/><line nr="2064" mi="3" ci="0" mb="2" cb="0"/><line nr="2065" mi="10" ci="0" mb="0" cb="0"/><line nr="2067" mi="3" ci="0" mb="2" cb="0"/><line nr="2068" mi="10" ci="0" mb="0" cb="0"/><line nr="2070" mi="9" ci="0" mb="0" cb="0"/><line nr="2084" mi="0" ci="2" mb="0" cb="0"/><line nr="2085" mi="0" ci="1" mb="0" cb="0"/><line nr="2089" mi="3" ci="0" mb="2" cb="0"/><line nr="2090" mi="2" ci="0" mb="0" cb="0"/><line nr="2092" mi="4" ci="0" mb="0" cb="0"/><line nr="2093" mi="16" ci="0" mb="2" cb="0"/><line nr="2094" mi="2" ci="0" mb="2" cb="0"/><line nr="2095" mi="4" ci="0" mb="2" cb="0"/><line nr="2096" mi="2" ci="0" mb="0" cb="0"/><line nr="2100" mi="2" ci="0" mb="0" cb="0"/><line nr="2107" mi="0" ci="2" mb="0" cb="0"/><line nr="2108" mi="0" ci="1" mb="0" cb="0"/><line nr="2112" mi="3" ci="0" mb="2" cb="0"/><line nr="2113" mi="2" ci="0" mb="0" cb="0"/><line nr="2115" mi="4" ci="0" mb="0" cb="0"/><line nr="2116" mi="16" ci="0" mb="2" cb="0"/><line nr="2117" mi="2" ci="0" mb="2" cb="0"/><line nr="2118" mi="4" ci="0" mb="2" cb="0"/><line nr="2119" mi="2" ci="0" mb="0" cb="0"/><line nr="2123" mi="2" ci="0" mb="0" cb="0"/><line nr="2130" mi="0" ci="2" mb="0" cb="0"/><line nr="2131" mi="0" ci="1" mb="0" cb="0"/><line nr="2135" mi="3" ci="0" mb="0" cb="0"/><line nr="2136" mi="16" ci="0" mb="2" cb="0"/><line nr="2137" mi="2" ci="0" mb="2" cb="0"/><line nr="2138" mi="7" ci="0" mb="0" cb="0"/><line nr="2141" mi="4" ci="0" mb="0" cb="0"/><line nr="2151" mi="0" ci="2" mb="0" cb="0"/><line nr="2152" mi="0" ci="3" mb="0" cb="0"/><line nr="2153" mi="0" ci="3" mb="0" cb="0"/><line nr="2154" mi="0" ci="1" mb="0" cb="0"/><line nr="2157" mi="2" ci="0" mb="0" cb="0"/><line nr="2158" mi="3" ci="0" mb="0" cb="0"/><line nr="2159" mi="3" ci="0" mb="0" cb="0"/><line nr="2160" mi="3" ci="0" mb="0" cb="0"/><line nr="2161" mi="1" ci="0" mb="0" cb="0"/><line nr="2164" mi="2" ci="0" mb="0" cb="0"/><line nr="2165" mi="3" ci="0" mb="0" cb="0"/><line nr="2166" mi="3" ci="0" mb="0" cb="0"/><line nr="2167" mi="3" ci="0" mb="0" cb="0"/><line nr="2168" mi="1" ci="0" mb="0" cb="0"/><line nr="2173" mi="2" ci="0" mb="0" cb="0"/><line nr="2174" mi="3" ci="0" mb="0" cb="0"/><line nr="2175" mi="16" ci="0" mb="2" cb="0"/><line nr="2176" mi="2" ci="0" mb="2" cb="0"/><line nr="2177" mi="7" ci="0" mb="0" cb="0"/><line nr="2178" mi="1" ci="0" mb="0" cb="0"/><line nr="2181" mi="3" ci="0" mb="2" cb="0"/><line nr="2182" mi="10" ci="0" mb="0" cb="0"/><line nr="2184" mi="3" ci="0" mb="2" cb="0"/><line nr="2185" mi="10" ci="0" mb="0" cb="0"/><line nr="2187" mi="9" ci="0" mb="0" cb="0"/><line nr="2202" mi="0" ci="2" mb="0" cb="0"/><line nr="2203" mi="0" ci="1" mb="0" cb="0"/><line nr="2207" mi="0" ci="5" mb="0" cb="0"/><line nr="2216" mi="0" ci="2" mb="0" cb="0"/><line nr="2217" mi="0" ci="3" mb="0" cb="0"/><line nr="2218" mi="0" ci="3" mb="0" cb="0"/><line nr="2219" mi="0" ci="1" mb="0" cb="0"/><line nr="2223" mi="0" ci="5" mb="0" cb="0"/><line nr="2224" mi="0" ci="8" mb="0" cb="0"/><line nr="2226" mi="0" ci="4" mb="0" cb="0"/><line nr="2235" mi="0" ci="2" mb="0" cb="0"/><line nr="2236" mi="0" ci="3" mb="0" cb="0"/><line nr="2237" mi="0" ci="3" mb="0" cb="0"/><line nr="2238" mi="0" ci="3" mb="0" cb="0"/><line nr="2239" mi="0" ci="1" mb="0" cb="0"/><line nr="2243" mi="0" ci="5" mb="0" cb="0"/><line nr="2244" mi="0" ci="8" mb="0" cb="0"/><line nr="2246" mi="0" ci="4" mb="0" cb="0"/><line nr="2257" mi="2" ci="0" mb="0" cb="0"/><line nr="2258" mi="3" ci="0" mb="0" cb="0"/><line nr="2259" mi="3" ci="0" mb="0" cb="0"/><line nr="2260" mi="3" ci="0" mb="0" cb="0"/><line nr="2261" mi="3" ci="0" mb="0" cb="0"/><line nr="2262" mi="1" ci="0" mb="0" cb="0"/><line nr="2265" mi="0" ci="2" mb="0" cb="0"/><line nr="2266" mi="0" ci="3" mb="0" cb="0"/><line nr="2267" mi="0" ci="3" mb="0" cb="0"/><line nr="2268" mi="0" ci="3" mb="0" cb="0"/><line nr="2269" mi="0" ci="3" mb="0" cb="0"/><line nr="2270" mi="0" ci="3" mb="0" cb="0"/><line nr="2271" mi="0" ci="1" mb="0" cb="0"/><line nr="2274" mi="0" ci="2" mb="0" cb="0"/><line nr="2275" mi="0" ci="3" mb="0" cb="0"/><line nr="2276" mi="0" ci="3" mb="0" cb="0"/><line nr="2277" mi="0" ci="3" mb="0" cb="0"/><line nr="2278" mi="0" ci="3" mb="0" cb="0"/><line nr="2279" mi="0" ci="3" mb="0" cb="0"/><line nr="2280" mi="0" ci="1" mb="0" cb="0"/><line nr="2284" mi="0" ci="5" mb="0" cb="0"/><line nr="2286" mi="0" ci="3" mb="0" cb="2"/><line nr="2287" mi="0" ci="11" mb="0" cb="0"/><line nr="2288" mi="0" ci="3" mb="1" cb="1"/><line nr="2289" mi="0" ci="11" mb="0" cb="0"/><line nr="2291" mi="9" ci="0" mb="0" cb="0"/><line nr="2293" mi="0" ci="4" mb="0" cb="0"/><line nr="2303" mi="2" ci="0" mb="0" cb="0"/><line nr="2304" mi="3" ci="0" mb="0" cb="0"/><line nr="2305" mi="1" ci="0" mb="0" cb="0"/><line nr="2309" mi="7" ci="0" mb="0" cb="0"/><line nr="2310" mi="2" ci="0" mb="0" cb="0"/><line nr="2319" mi="2" ci="0" mb="0" cb="0"/><line nr="2320" mi="3" ci="0" mb="0" cb="0"/><line nr="2321" mi="1" ci="0" mb="0" cb="0"/><line nr="2325" mi="7" ci="0" mb="0" cb="0"/><line nr="2326" mi="4" ci="0" mb="0" cb="0"/><line nr="2337" mi="0" ci="2" mb="0" cb="0"/><line nr="2338" mi="0" ci="3" mb="0" cb="0"/><line nr="2339" mi="0" ci="3" mb="0" cb="0"/><line nr="2340" mi="0" ci="3" mb="0" cb="0"/><line nr="2341" mi="0" ci="3" mb="0" cb="0"/><line nr="2342" mi="0" ci="1" mb="0" cb="0"/><line nr="2345" mi="2" ci="0" mb="0" cb="0"/><line nr="2346" mi="3" ci="0" mb="0" cb="0"/><line nr="2347" mi="3" ci="0" mb="0" cb="0"/><line nr="2348" mi="3" ci="0" mb="0" cb="0"/><line nr="2349" mi="3" ci="0" mb="0" cb="0"/><line nr="2350" mi="3" ci="0" mb="0" cb="0"/><line nr="2351" mi="1" ci="0" mb="0" cb="0"/><line nr="2354" mi="2" ci="0" mb="0" cb="0"/><line nr="2355" mi="3" ci="0" mb="0" cb="0"/><line nr="2356" mi="3" ci="0" mb="0" cb="0"/><line nr="2357" mi="3" ci="0" mb="0" cb="0"/><line nr="2358" mi="3" ci="0" mb="0" cb="0"/><line nr="2359" mi="3" ci="0" mb="0" cb="0"/><line nr="2360" mi="1" ci="0" mb="0" cb="0"/><line nr="2364" mi="0" ci="5" mb="0" cb="0"/><line nr="2366" mi="0" ci="3" mb="1" cb="1"/><line nr="2367" mi="11" ci="0" mb="0" cb="0"/><line nr="2368" mi="0" ci="3" mb="1" cb="1"/><line nr="2369" mi="13" ci="0" mb="0" cb="0"/><line nr="2371" mi="0" ci="8" mb="0" cb="0"/><line nr="2373" mi="0" ci="4" mb="0" cb="0"/><line nr="2384" mi="0" ci="2" mb="0" cb="0"/><line nr="2385" mi="0" ci="3" mb="0" cb="0"/><line nr="2386" mi="0" ci="3" mb="0" cb="0"/><line nr="2387" mi="0" ci="3" mb="0" cb="0"/><line nr="2388" mi="0" ci="1" mb="0" cb="0"/><line nr="2391" mi="2" ci="0" mb="0" cb="0"/><line nr="2392" mi="3" ci="0" mb="0" cb="0"/><line nr="2393" mi="3" ci="0" mb="0" cb="0"/><line nr="2394" mi="3" ci="0" mb="0" cb="0"/><line nr="2395" mi="3" ci="0" mb="0" cb="0"/><line nr="2396" mi="1" ci="0" mb="0" cb="0"/><line nr="2399" mi="2" ci="0" mb="0" cb="0"/><line nr="2400" mi="3" ci="0" mb="0" cb="0"/><line nr="2401" mi="3" ci="0" mb="0" cb="0"/><line nr="2402" mi="3" ci="0" mb="0" cb="0"/><line nr="2403" mi="3" ci="0" mb="0" cb="0"/><line nr="2404" mi="1" ci="0" mb="0" cb="0"/><line nr="2408" mi="0" ci="5" mb="0" cb="0"/><line nr="2410" mi="0" ci="3" mb="1" cb="1"/><line nr="2411" mi="8" ci="0" mb="0" cb="0"/><line nr="2412" mi="0" ci="3" mb="1" cb="1"/><line nr="2413" mi="10" ci="0" mb="0" cb="0"/><line nr="2415" mi="0" ci="5" mb="0" cb="0"/><line nr="2417" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1056" covered="333"/><counter type="BRANCH" missed="62" covered="8"/><counter type="LINE" missed="263" covered="99"/><counter type="COMPLEXITY" missed="181" covered="33"/><counter type="METHOD" missed="147" covered="32"/><counter type="CLASS" missed="2" covered="15"/></sourcefile><sourcefile name="FnDate.java"><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="108" mi="6" ci="0" mb="0" cb="0"/><line nr="122" mi="6" ci="0" mb="0" cb="0"/><line nr="136" mi="6" ci="0" mb="0" cb="0"/><line nr="150" mi="6" ci="0" mb="0" cb="0"/><line nr="164" mi="6" ci="0" mb="0" cb="0"/><line nr="178" mi="6" ci="0" mb="0" cb="0"/><line nr="192" mi="6" ci="0" mb="0" cb="0"/><line nr="210" mi="6" ci="0" mb="0" cb="0"/><line nr="224" mi="6" ci="0" mb="0" cb="0"/><line nr="238" mi="6" ci="0" mb="0" cb="0"/><line nr="252" mi="6" ci="0" mb="0" cb="0"/><line nr="266" mi="6" ci="0" mb="0" cb="0"/><line nr="280" mi="6" ci="0" mb="0" cb="0"/><line nr="294" mi="6" ci="0" mb="0" cb="0"/><line nr="308" mi="6" ci="0" mb="0" cb="0"/><line nr="326" mi="5" ci="0" mb="0" cb="0"/><line nr="343" mi="5" ci="0" mb="0" cb="0"/><line nr="358" mi="5" ci="0" mb="0" cb="0"/><line nr="372" mi="5" ci="0" mb="0" cb="0"/><line nr="392" mi="5" ci="0" mb="0" cb="0"/><line nr="409" mi="6" ci="0" mb="0" cb="0"/><line nr="426" mi="6" ci="0" mb="0" cb="0"/><line nr="441" mi="6" ci="0" mb="0" cb="0"/><line nr="458" mi="7" ci="0" mb="0" cb="0"/><line nr="475" mi="7" ci="0" mb="0" cb="0"/><line nr="494" mi="2" ci="0" mb="0" cb="0"/><line nr="507" mi="5" ci="0" mb="0" cb="0"/><line nr="520" mi="2" ci="0" mb="0" cb="0"/><line nr="533" mi="5" ci="0" mb="0" cb="0"/><line nr="559" mi="2" ci="0" mb="0" cb="0"/><line nr="583" mi="2" ci="0" mb="0" cb="0"/><line nr="607" mi="2" ci="0" mb="0" cb="0"/><line nr="631" mi="2" ci="0" mb="0" cb="0"/><line nr="646" mi="3" ci="0" mb="0" cb="0"/><line nr="660" mi="3" ci="0" mb="0" cb="0"/><line nr="677" mi="2" ci="0" mb="0" cb="0"/><line nr="690" mi="2" ci="0" mb="0" cb="0"/><line nr="711" mi="2" ci="0" mb="0" cb="0"/><line nr="712" mi="3" ci="0" mb="0" cb="0"/><line nr="713" mi="3" ci="0" mb="0" cb="0"/><line nr="714" mi="1" ci="0" mb="0" cb="0"/><line nr="718" mi="2" ci="0" mb="0" cb="0"/><line nr="719" mi="4" ci="0" mb="0" cb="0"/><line nr="720" mi="6" ci="0" mb="0" cb="0"/><line nr="721" mi="3" ci="0" mb="0" cb="0"/><line nr="733" mi="2" ci="0" mb="0" cb="0"/><line nr="734" mi="3" ci="0" mb="0" cb="0"/><line nr="735" mi="3" ci="0" mb="0" cb="0"/><line nr="736" mi="1" ci="0" mb="0" cb="0"/><line nr="740" mi="2" ci="0" mb="0" cb="0"/><line nr="741" mi="4" ci="0" mb="0" cb="0"/><line nr="742" mi="6" ci="0" mb="0" cb="0"/><line nr="743" mi="3" ci="0" mb="0" cb="0"/><line nr="756" mi="2" ci="0" mb="0" cb="0"/><line nr="757" mi="3" ci="0" mb="0" cb="0"/><line nr="758" mi="3" ci="0" mb="0" cb="0"/><line nr="759" mi="1" ci="0" mb="0" cb="0"/><line nr="763" mi="2" ci="0" mb="0" cb="0"/><line nr="764" mi="4" ci="0" mb="0" cb="0"/><line nr="765" mi="6" ci="0" mb="0" cb="0"/><line nr="766" mi="3" ci="0" mb="0" cb="0"/><line nr="778" mi="2" ci="0" mb="0" cb="0"/><line nr="779" mi="3" ci="0" mb="0" cb="0"/><line nr="780" mi="1" ci="0" mb="0" cb="0"/><line nr="784" mi="2" ci="0" mb="0" cb="0"/><line nr="785" mi="4" ci="0" mb="0" cb="0"/><line nr="786" mi="5" ci="0" mb="0" cb="0"/><line nr="787" mi="3" ci="0" mb="0" cb="0"/><line nr="799" mi="2" ci="0" mb="0" cb="0"/><line nr="800" mi="3" ci="0" mb="0" cb="0"/><line nr="801" mi="1" ci="0" mb="0" cb="0"/><line nr="805" mi="2" ci="0" mb="0" cb="0"/><line nr="806" mi="4" ci="0" mb="0" cb="0"/><line nr="807" mi="5" ci="0" mb="0" cb="0"/><line nr="808" mi="3" ci="0" mb="0" cb="0"/><line nr="819" mi="2" ci="0" mb="0" cb="0"/><line nr="820" mi="3" ci="0" mb="0" cb="0"/><line nr="821" mi="3" ci="0" mb="0" cb="0"/><line nr="822" mi="1" ci="0" mb="0" cb="0"/><line nr="826" mi="6" ci="0" mb="0" cb="0"/><line nr="837" mi="2" ci="0" mb="0" cb="0"/><line nr="838" mi="3" ci="0" mb="0" cb="0"/><line nr="839" mi="3" ci="0" mb="0" cb="0"/><line nr="840" mi="1" ci="0" mb="0" cb="0"/><line nr="844" mi="6" ci="0" mb="0" cb="0"/><line nr="853" mi="18" ci="0" mb="0" cb="0"/><line nr="854" mi="18" ci="0" mb="0" cb="0"/><line nr="855" mi="18" ci="0" mb="0" cb="0"/><line nr="856" mi="18" ci="0" mb="0" cb="0"/><line nr="859" mi="2" ci="0" mb="0" cb="0"/><line nr="861" mi="3" ci="0" mb="0" cb="0"/><line nr="863" mi="3" ci="0" mb="0" cb="0"/><line nr="864" mi="1" ci="0" mb="0" cb="0"/><line nr="867" mi="2" ci="0" mb="0" cb="0"/><line nr="869" mi="3" ci="0" mb="0" cb="0"/><line nr="870" mi="3" ci="0" mb="0" cb="0"/><line nr="872" mi="3" ci="0" mb="0" cb="0"/><line nr="873" mi="3" ci="0" mb="0" cb="0"/><line nr="874" mi="1" ci="0" mb="0" cb="0"/><line nr="877" mi="2" ci="0" mb="0" cb="0"/><line nr="879" mi="3" ci="0" mb="0" cb="0"/><line nr="880" mi="3" ci="0" mb="0" cb="0"/><line nr="882" mi="3" ci="0" mb="0" cb="0"/><line nr="883" mi="4" ci="0" mb="0" cb="0"/><line nr="884" mi="1" ci="0" mb="0" cb="0"/><line nr="887" mi="2" ci="0" mb="0" cb="0"/><line nr="889" mi="3" ci="0" mb="0" cb="0"/><line nr="890" mi="3" ci="0" mb="0" cb="0"/><line nr="892" mi="3" ci="0" mb="0" cb="0"/><line nr="893" mi="3" ci="0" mb="0" cb="0"/><line nr="894" mi="1" ci="0" mb="0" cb="0"/><line nr="897" mi="2" ci="0" mb="0" cb="0"/><line nr="899" mi="3" ci="0" mb="0" cb="0"/><line nr="900" mi="3" ci="0" mb="0" cb="0"/><line nr="901" mi="3" ci="0" mb="0" cb="0"/><line nr="903" mi="3" ci="0" mb="0" cb="0"/><line nr="904" mi="3" ci="0" mb="0" cb="0"/><line nr="905" mi="3" ci="0" mb="0" cb="0"/><line nr="906" mi="1" ci="0" mb="0" cb="0"/><line nr="909" mi="2" ci="0" mb="0" cb="0"/><line nr="911" mi="3" ci="0" mb="0" cb="0"/><line nr="912" mi="3" ci="0" mb="0" cb="0"/><line nr="913" mi="3" ci="0" mb="0" cb="0"/><line nr="915" mi="3" ci="0" mb="0" cb="0"/><line nr="916" mi="3" ci="0" mb="0" cb="0"/><line nr="917" mi="4" ci="0" mb="0" cb="0"/><line nr="918" mi="1" ci="0" mb="0" cb="0"/><line nr="922" mi="4" ci="0" mb="2" cb="0"/><line nr="923" mi="8" ci="0" mb="0" cb="0"/><line nr="925" mi="3" ci="0" mb="2" cb="0"/><line nr="926" mi="10" ci="0" mb="0" cb="0"/><line nr="928" mi="2" ci="0" mb="0" cb="0"/><line nr="933" mi="12" ci="0" mb="6" cb="0"/><line nr="937" mi="5" ci="0" mb="2" cb="0"/><line nr="938" mi="5" ci="0" mb="0" cb="0"/><line nr="940" mi="4" ci="0" mb="0" cb="0"/><line nr="947" mi="3" ci="0" mb="0" cb="0"/><line nr="948" mi="3" ci="0" mb="0" cb="0"/><line nr="949" mi="11" ci="0" mb="4" cb="0"/><line nr="952" mi="2" ci="0" mb="0" cb="0"/><line nr="953" mi="6" ci="0" mb="4" cb="0"/><line nr="954" mi="7" ci="0" mb="0" cb="0"/><line nr="955" mi="4" ci="0" mb="2" cb="0"/><line nr="956" mi="3" ci="0" mb="0" cb="0"/><line nr="957" mi="3" ci="0" mb="2" cb="0"/><line nr="958" mi="8" ci="0" mb="2" cb="0"/><line nr="959" mi="3" ci="0" mb="0" cb="0"/><line nr="961" mi="7" ci="0" mb="2" cb="0"/><line nr="962" mi="3" ci="0" mb="0" cb="0"/><line nr="965" mi="4" ci="0" mb="0" cb="0"/><line nr="977" mi="6" ci="0" mb="0" cb="0"/><line nr="980" mi="2" ci="0" mb="0" cb="0"/><line nr="981" mi="1" ci="0" mb="0" cb="0"/><line nr="984" mi="2" ci="0" mb="0" cb="0"/><line nr="985" mi="4" ci="0" mb="0" cb="0"/><line nr="986" mi="1" ci="0" mb="0" cb="0"/><line nr="991" mi="2" ci="0" mb="0" cb="0"/><line nr="992" mi="4" ci="0" mb="0" cb="0"/><line nr="994" mi="3" ci="0" mb="2" cb="0"/><line nr="995" mi="2" ci="0" mb="0" cb="0"/><line nr="997" mi="6" ci="0" mb="0" cb="0"/><line nr="1011" mi="6" ci="0" mb="0" cb="0"/><line nr="1014" mi="2" ci="0" mb="0" cb="0"/><line nr="1015" mi="1" ci="0" mb="0" cb="0"/><line nr="1018" mi="2" ci="0" mb="0" cb="0"/><line nr="1019" mi="4" ci="0" mb="0" cb="0"/><line nr="1020" mi="1" ci="0" mb="0" cb="0"/><line nr="1025" mi="2" ci="0" mb="0" cb="0"/><line nr="1026" mi="4" ci="0" mb="0" cb="0"/><line nr="1028" mi="3" ci="0" mb="2" cb="0"/><line nr="1029" mi="3" ci="0" mb="0" cb="0"/><line nr="1031" mi="7" ci="0" mb="0" cb="0"/><line nr="1041" mi="6" ci="0" mb="0" cb="0"/><line nr="1044" mi="2" ci="0" mb="0" cb="0"/><line nr="1045" mi="1" ci="0" mb="0" cb="0"/><line nr="1048" mi="2" ci="0" mb="0" cb="0"/><line nr="1049" mi="4" ci="0" mb="0" cb="0"/><line nr="1050" mi="1" ci="0" mb="0" cb="0"/><line nr="1055" mi="2" ci="0" mb="0" cb="0"/><line nr="1056" mi="4" ci="0" mb="0" cb="0"/><line nr="1058" mi="3" ci="0" mb="2" cb="0"/><line nr="1059" mi="3" ci="0" mb="0" cb="0"/><line nr="1061" mi="7" ci="0" mb="0" cb="0"/><line nr="1079" mi="2" ci="0" mb="0" cb="0"/><line nr="1080" mi="2" ci="0" mb="0" cb="0"/><line nr="1081" mi="2" ci="0" mb="0" cb="0"/><line nr="1082" mi="2" ci="0" mb="0" cb="0"/><line nr="1083" mi="2" ci="0" mb="0" cb="0"/><line nr="1084" mi="2" ci="0" mb="0" cb="0"/><line nr="1085" mi="2" ci="0" mb="0" cb="0"/><line nr="1087" mi="2" ci="0" mb="0" cb="0"/><line nr="1088" mi="3" ci="0" mb="0" cb="0"/><line nr="1089" mi="7" ci="0" mb="4" cb="0"/><line nr="1090" mi="5" ci="0" mb="0" cb="0"/><line nr="1091" mi="2" ci="0" mb="0" cb="0"/><line nr="1095" mi="5" ci="0" mb="0" cb="0"/><line nr="1096" mi="5" ci="0" mb="0" cb="0"/><line nr="1097" mi="5" ci="0" mb="2" cb="0"/><line nr="1098" mi="4" ci="0" mb="0" cb="0"/><line nr="1099" mi="3" ci="0" mb="0" cb="0"/><line nr="1101" mi="3" ci="0" mb="0" cb="0"/><line nr="1102" mi="5" ci="0" mb="0" cb="0"/><line nr="1105" mi="2" ci="0" mb="0" cb="0"/><line nr="1106" mi="5" ci="0" mb="0" cb="0"/><line nr="1107" mi="7" ci="0" mb="0" cb="0"/><line nr="1108" mi="5" ci="0" mb="0" cb="0"/><line nr="1109" mi="5" ci="0" mb="0" cb="0"/><line nr="1110" mi="5" ci="0" mb="0" cb="0"/><line nr="1111" mi="5" ci="0" mb="0" cb="0"/><line nr="1112" mi="5" ci="0" mb="0" cb="0"/><line nr="1114" mi="3" ci="0" mb="0" cb="0"/><line nr="1125" mi="2" ci="0" mb="0" cb="0"/><line nr="1126" mi="1" ci="0" mb="0" cb="0"/><line nr="1131" mi="5" ci="0" mb="2" cb="0"/><line nr="1132" mi="4" ci="0" mb="2" cb="0"/><line nr="1133" mi="4" ci="0" mb="2" cb="0"/><line nr="1134" mi="3" ci="0" mb="2" cb="0"/><line nr="1135" mi="8" ci="0" mb="0" cb="0"/><line nr="1138" mi="7" ci="0" mb="0" cb="0"/><line nr="1140" mi="4" ci="0" mb="2" cb="0"/><line nr="1141" mi="5" ci="0" mb="0" cb="0"/><line nr="1144" mi="4" ci="0" mb="0" cb="0"/><line nr="1145" mi="4" ci="0" mb="0" cb="0"/><line nr="1146" mi="4" ci="0" mb="0" cb="0"/><line nr="1147" mi="3" ci="0" mb="0" cb="0"/><line nr="1148" mi="11" ci="0" mb="2" cb="0"/><line nr="1149" mi="11" ci="0" mb="2" cb="0"/><line nr="1150" mi="11" ci="0" mb="2" cb="0"/><line nr="1151" mi="10" ci="0" mb="2" cb="0"/><line nr="1164" mi="2" ci="0" mb="0" cb="0"/><line nr="1165" mi="1" ci="0" mb="0" cb="0"/><line nr="1170" mi="16" ci="0" mb="8" cb="0"/><line nr="1174" mi="15" ci="0" mb="0" cb="0"/><line nr="1179" mi="4" ci="0" mb="2" cb="0"/><line nr="1180" mi="5" ci="0" mb="0" cb="0"/><line nr="1183" mi="20" ci="0" mb="2" cb="0"/><line nr="1187" mi="10" ci="0" mb="2" cb="0"/><line nr="1188" mi="10" ci="0" mb="2" cb="0"/><line nr="1189" mi="10" ci="0" mb="2" cb="0"/><line nr="1190" mi="1" ci="0" mb="0" cb="0"/><line nr="1202" mi="2" ci="0" mb="0" cb="0"/><line nr="1203" mi="1" ci="0" mb="0" cb="0"/><line nr="1208" mi="5" ci="0" mb="2" cb="0"/><line nr="1209" mi="4" ci="0" mb="2" cb="0"/><line nr="1210" mi="4" ci="0" mb="2" cb="0"/><line nr="1211" mi="3" ci="0" mb="2" cb="0"/><line nr="1212" mi="8" ci="0" mb="0" cb="0"/><line nr="1215" mi="7" ci="0" mb="0" cb="0"/><line nr="1217" mi="4" ci="0" mb="2" cb="0"/><line nr="1218" mi="5" ci="0" mb="0" cb="0"/><line nr="1221" mi="4" ci="0" mb="0" cb="0"/><line nr="1222" mi="5" ci="0" mb="0" cb="0"/><line nr="1223" mi="5" ci="0" mb="0" cb="0"/><line nr="1224" mi="4" ci="0" mb="0" cb="0"/><line nr="1225" mi="12" ci="0" mb="2" cb="0"/><line nr="1226" mi="12" ci="0" mb="2" cb="0"/><line nr="1227" mi="12" ci="0" mb="2" cb="0"/><line nr="1228" mi="11" ci="0" mb="2" cb="0"/><line nr="1241" mi="2" ci="0" mb="0" cb="0"/><line nr="1242" mi="1" ci="0" mb="0" cb="0"/><line nr="1247" mi="16" ci="0" mb="8" cb="0"/><line nr="1251" mi="15" ci="0" mb="0" cb="0"/><line nr="1256" mi="4" ci="0" mb="2" cb="0"/><line nr="1257" mi="5" ci="0" mb="0" cb="0"/><line nr="1260" mi="5" ci="0" mb="0" cb="0"/><line nr="1261" mi="4" ci="0" mb="0" cb="0"/><line nr="1262" mi="4" ci="0" mb="0" cb="0"/><line nr="1263" mi="8" ci="0" mb="2" cb="0"/><line nr="1264" mi="11" ci="0" mb="2" cb="0"/><line nr="1265" mi="11" ci="0" mb="2" cb="0"/><line nr="1266" mi="11" ci="0" mb="2" cb="0"/><line nr="1267" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1265" covered="0"/><counter type="BRANCH" missed="112" covered="0"/><counter type="LINE" missed="282" covered="0"/><counter type="COMPLEXITY" missed="138" covered="0"/><counter type="METHOD" missed="82" covered="0"/><counter type="CLASS" missed="16" covered="0"/></sourcefile><sourcefile name="FnSetOfArrayOf.java"><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="ExecCtx.java"/><sourcefile name="FnCalendar.java"><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="0" cb="0"/><line nr="93" mi="6" ci="0" mb="0" cb="0"/><line nr="107" mi="6" ci="0" mb="0" cb="0"/><line nr="121" mi="6" ci="0" mb="0" cb="0"/><line nr="135" mi="6" ci="0" mb="0" cb="0"/><line nr="149" mi="6" ci="0" mb="0" cb="0"/><line nr="163" mi="6" ci="0" mb="0" cb="0"/><line nr="177" mi="6" ci="0" mb="0" cb="0"/><line nr="195" mi="6" ci="0" mb="0" cb="0"/><line nr="209" mi="6" ci="0" mb="0" cb="0"/><line nr="223" mi="6" ci="0" mb="0" cb="0"/><line nr="237" mi="6" ci="0" mb="0" cb="0"/><line nr="251" mi="6" ci="0" mb="0" cb="0"/><line nr="265" mi="6" ci="0" mb="0" cb="0"/><line nr="279" mi="6" ci="0" mb="0" cb="0"/><line nr="293" mi="6" ci="0" mb="0" cb="0"/><line nr="310" mi="5" ci="0" mb="0" cb="0"/><line nr="327" mi="0" ci="5" mb="0" cb="0"/><line nr="341" mi="5" ci="0" mb="0" cb="0"/><line nr="355" mi="0" ci="5" mb="0" cb="0"/><line nr="374" mi="0" ci="5" mb="0" cb="0"/><line nr="391" mi="0" ci="6" mb="0" cb="0"/><line nr="408" mi="6" ci="0" mb="0" cb="0"/><line nr="423" mi="6" ci="0" mb="0" cb="0"/><line nr="440" mi="7" ci="0" mb="0" cb="0"/><line nr="457" mi="7" ci="0" mb="0" cb="0"/><line nr="473" mi="2" ci="0" mb="0" cb="0"/><line nr="486" mi="5" ci="0" mb="0" cb="0"/><line nr="499" mi="2" ci="0" mb="0" cb="0"/><line nr="512" mi="5" ci="0" mb="0" cb="0"/><line nr="541" mi="0" ci="2" mb="0" cb="0"/><line nr="565" mi="2" ci="0" mb="0" cb="0"/><line nr="589" mi="2" ci="0" mb="0" cb="0"/><line nr="613" mi="0" ci="2" mb="0" cb="0"/><line nr="630" mi="3" ci="0" mb="0" cb="0"/><line nr="644" mi="3" ci="0" mb="0" cb="0"/><line nr="662" mi="2" ci="0" mb="0" cb="0"/><line nr="675" mi="2" ci="0" mb="0" cb="0"/><line nr="696" mi="2" ci="0" mb="0" cb="0"/><line nr="697" mi="3" ci="0" mb="0" cb="0"/><line nr="698" mi="3" ci="0" mb="0" cb="0"/><line nr="699" mi="1" ci="0" mb="0" cb="0"/><line nr="703" mi="4" ci="0" mb="0" cb="0"/><line nr="704" mi="6" ci="0" mb="0" cb="0"/><line nr="705" mi="2" ci="0" mb="0" cb="0"/><line nr="717" mi="2" ci="0" mb="0" cb="0"/><line nr="718" mi="3" ci="0" mb="0" cb="0"/><line nr="719" mi="3" ci="0" mb="0" cb="0"/><line nr="720" mi="1" ci="0" mb="0" cb="0"/><line nr="724" mi="4" ci="0" mb="0" cb="0"/><line nr="725" mi="6" ci="0" mb="0" cb="0"/><line nr="726" mi="2" ci="0" mb="0" cb="0"/><line nr="739" mi="2" ci="0" mb="0" cb="0"/><line nr="740" mi="3" ci="0" mb="0" cb="0"/><line nr="741" mi="3" ci="0" mb="0" cb="0"/><line nr="742" mi="1" ci="0" mb="0" cb="0"/><line nr="746" mi="4" ci="0" mb="0" cb="0"/><line nr="747" mi="6" ci="0" mb="0" cb="0"/><line nr="748" mi="2" ci="0" mb="0" cb="0"/><line nr="760" mi="2" ci="0" mb="0" cb="0"/><line nr="761" mi="3" ci="0" mb="0" cb="0"/><line nr="762" mi="1" ci="0" mb="0" cb="0"/><line nr="766" mi="4" ci="0" mb="0" cb="0"/><line nr="767" mi="5" ci="0" mb="0" cb="0"/><line nr="768" mi="2" ci="0" mb="0" cb="0"/><line nr="780" mi="0" ci="2" mb="0" cb="0"/><line nr="781" mi="0" ci="3" mb="0" cb="0"/><line nr="782" mi="0" ci="1" mb="0" cb="0"/><line nr="786" mi="0" ci="4" mb="0" cb="0"/><line nr="787" mi="0" ci="5" mb="0" cb="0"/><line nr="788" mi="0" ci="2" mb="0" cb="0"/><line nr="799" mi="2" ci="0" mb="0" cb="0"/><line nr="800" mi="3" ci="0" mb="0" cb="0"/><line nr="801" mi="3" ci="0" mb="0" cb="0"/><line nr="802" mi="1" ci="0" mb="0" cb="0"/><line nr="806" mi="6" ci="0" mb="0" cb="0"/><line nr="817" mi="0" ci="2" mb="0" cb="0"/><line nr="818" mi="0" ci="3" mb="0" cb="0"/><line nr="819" mi="0" ci="3" mb="0" cb="0"/><line nr="820" mi="0" ci="1" mb="0" cb="0"/><line nr="824" mi="0" ci="6" mb="0" cb="0"/><line nr="833" mi="12" ci="6" mb="0" cb="0"/><line nr="834" mi="12" ci="6" mb="0" cb="0"/><line nr="835" mi="12" ci="6" mb="0" cb="0"/><line nr="836" mi="12" ci="6" mb="0" cb="0"/><line nr="839" mi="0" ci="2" mb="0" cb="0"/><line nr="841" mi="0" ci="3" mb="0" cb="0"/><line nr="843" mi="0" ci="3" mb="0" cb="0"/><line nr="844" mi="0" ci="1" mb="0" cb="0"/><line nr="847" mi="0" ci="2" mb="0" cb="0"/><line nr="849" mi="0" ci="3" mb="0" cb="0"/><line nr="850" mi="0" ci="3" mb="0" cb="0"/><line nr="852" mi="0" ci="3" mb="0" cb="0"/><line nr="853" mi="0" ci="3" mb="0" cb="0"/><line nr="854" mi="0" ci="1" mb="0" cb="0"/><line nr="857" mi="2" ci="0" mb="0" cb="0"/><line nr="859" mi="3" ci="0" mb="0" cb="0"/><line nr="860" mi="3" ci="0" mb="0" cb="0"/><line nr="862" mi="3" ci="0" mb="0" cb="0"/><line nr="863" mi="4" ci="0" mb="0" cb="0"/><line nr="864" mi="1" ci="0" mb="0" cb="0"/><line nr="867" mi="2" ci="0" mb="0" cb="0"/><line nr="869" mi="3" ci="0" mb="0" cb="0"/><line nr="870" mi="3" ci="0" mb="0" cb="0"/><line nr="872" mi="3" ci="0" mb="0" cb="0"/><line nr="873" mi="3" ci="0" mb="0" cb="0"/><line nr="874" mi="1" ci="0" mb="0" cb="0"/><line nr="877" mi="2" ci="0" mb="0" cb="0"/><line nr="879" mi="3" ci="0" mb="0" cb="0"/><line nr="880" mi="3" ci="0" mb="0" cb="0"/><line nr="881" mi="3" ci="0" mb="0" cb="0"/><line nr="883" mi="3" ci="0" mb="0" cb="0"/><line nr="884" mi="3" ci="0" mb="0" cb="0"/><line nr="885" mi="3" ci="0" mb="0" cb="0"/><line nr="886" mi="1" ci="0" mb="0" cb="0"/><line nr="889" mi="2" ci="0" mb="0" cb="0"/><line nr="891" mi="3" ci="0" mb="0" cb="0"/><line nr="892" mi="3" ci="0" mb="0" cb="0"/><line nr="893" mi="3" ci="0" mb="0" cb="0"/><line nr="895" mi="3" ci="0" mb="0" cb="0"/><line nr="896" mi="3" ci="0" mb="0" cb="0"/><line nr="897" mi="4" ci="0" mb="0" cb="0"/><line nr="898" mi="1" ci="0" mb="0" cb="0"/><line nr="902" mi="0" ci="4" mb="1" cb="1"/><line nr="903" mi="0" ci="8" mb="0" cb="0"/><line nr="905" mi="3" ci="0" mb="2" cb="0"/><line nr="906" mi="10" ci="0" mb="0" cb="0"/><line nr="908" mi="2" ci="0" mb="0" cb="0"/><line nr="913" mi="5" ci="7" mb="5" cb="1"/><line nr="917" mi="0" ci="5" mb="0" cb="2"/><line nr="918" mi="0" ci="5" mb="0" cb="0"/><line nr="920" mi="0" ci="5" mb="0" cb="0"/><line nr="927" mi="3" ci="0" mb="0" cb="0"/><line nr="928" mi="3" ci="0" mb="0" cb="0"/><line nr="929" mi="11" ci="0" mb="4" cb="0"/><line nr="932" mi="2" ci="0" mb="0" cb="0"/><line nr="933" mi="6" ci="0" mb="4" cb="0"/><line nr="934" mi="7" ci="0" mb="0" cb="0"/><line nr="935" mi="4" ci="0" mb="2" cb="0"/><line nr="936" mi="3" ci="0" mb="0" cb="0"/><line nr="937" mi="3" ci="0" mb="2" cb="0"/><line nr="938" mi="8" ci="0" mb="2" cb="0"/><line nr="939" mi="3" ci="0" mb="0" cb="0"/><line nr="941" mi="7" ci="0" mb="2" cb="0"/><line nr="942" mi="3" ci="0" mb="0" cb="0"/><line nr="945" mi="5" ci="0" mb="0" cb="0"/><line nr="957" mi="3" ci="3" mb="0" cb="0"/><line nr="960" mi="0" ci="2" mb="0" cb="0"/><line nr="961" mi="0" ci="1" mb="0" cb="0"/><line nr="964" mi="2" ci="0" mb="0" cb="0"/><line nr="965" mi="4" ci="0" mb="0" cb="0"/><line nr="966" mi="1" ci="0" mb="0" cb="0"/><line nr="971" mi="2" ci="0" mb="0" cb="0"/><line nr="972" mi="4" ci="0" mb="0" cb="0"/><line nr="974" mi="3" ci="0" mb="2" cb="0"/><line nr="975" mi="2" ci="0" mb="0" cb="0"/><line nr="977" mi="6" ci="0" mb="0" cb="0"/><line nr="987" mi="3" ci="3" mb="0" cb="0"/><line nr="990" mi="0" ci="2" mb="0" cb="0"/><line nr="991" mi="0" ci="1" mb="0" cb="0"/><line nr="994" mi="2" ci="0" mb="0" cb="0"/><line nr="995" mi="4" ci="0" mb="0" cb="0"/><line nr="996" mi="1" ci="0" mb="0" cb="0"/><line nr="1001" mi="2" ci="0" mb="0" cb="0"/><line nr="1002" mi="4" ci="0" mb="0" cb="0"/><line nr="1004" mi="3" ci="0" mb="2" cb="0"/><line nr="1005" mi="2" ci="0" mb="0" cb="0"/><line nr="1007" mi="6" ci="0" mb="0" cb="0"/><line nr="1025" mi="0" ci="2" mb="0" cb="0"/><line nr="1026" mi="0" ci="2" mb="0" cb="0"/><line nr="1027" mi="0" ci="2" mb="0" cb="0"/><line nr="1028" mi="0" ci="2" mb="0" cb="0"/><line nr="1029" mi="0" ci="2" mb="0" cb="0"/><line nr="1030" mi="0" ci="2" mb="0" cb="0"/><line nr="1031" mi="0" ci="2" mb="0" cb="0"/><line nr="1033" mi="0" ci="2" mb="0" cb="0"/><line nr="1034" mi="0" ci="3" mb="0" cb="0"/><line nr="1035" mi="0" ci="7" mb="2" cb="2"/><line nr="1036" mi="5" ci="0" mb="0" cb="0"/><line nr="1037" mi="2" ci="0" mb="0" cb="0"/><line nr="1041" mi="5" ci="0" mb="0" cb="0"/><line nr="1042" mi="5" ci="0" mb="0" cb="0"/><line nr="1043" mi="5" ci="0" mb="2" cb="0"/><line nr="1044" mi="4" ci="0" mb="0" cb="0"/><line nr="1045" mi="3" ci="0" mb="0" cb="0"/><line nr="1047" mi="3" ci="0" mb="0" cb="0"/><line nr="1048" mi="5" ci="0" mb="0" cb="0"/><line nr="1051" mi="0" ci="2" mb="0" cb="0"/><line nr="1052" mi="0" ci="5" mb="0" cb="0"/><line nr="1053" mi="0" ci="7" mb="0" cb="0"/><line nr="1054" mi="0" ci="5" mb="0" cb="0"/><line nr="1055" mi="0" ci="5" mb="0" cb="0"/><line nr="1056" mi="0" ci="5" mb="0" cb="0"/><line nr="1057" mi="0" ci="5" mb="0" cb="0"/><line nr="1058" mi="0" ci="5" mb="0" cb="0"/><line nr="1060" mi="0" ci="2" mb="0" cb="0"/><line nr="1071" mi="0" ci="2" mb="0" cb="0"/><line nr="1072" mi="0" ci="1" mb="0" cb="0"/><line nr="1077" mi="0" ci="5" mb="1" cb="1"/><line nr="1078" mi="1" ci="3" mb="1" cb="1"/><line nr="1079" mi="4" ci="0" mb="2" cb="0"/><line nr="1080" mi="3" ci="0" mb="2" cb="0"/><line nr="1081" mi="8" ci="0" mb="0" cb="0"/><line nr="1084" mi="7" ci="0" mb="0" cb="0"/><line nr="1086" mi="0" ci="4" mb="1" cb="1"/><line nr="1087" mi="5" ci="0" mb="0" cb="0"/><line nr="1090" mi="0" ci="4" mb="0" cb="0"/><line nr="1091" mi="0" ci="4" mb="0" cb="0"/><line nr="1092" mi="0" ci="4" mb="0" cb="0"/><line nr="1093" mi="0" ci="3" mb="0" cb="0"/><line nr="1094" mi="2" ci="9" mb="1" cb="1"/><line nr="1095" mi="2" ci="9" mb="1" cb="1"/><line nr="1096" mi="5" ci="6" mb="1" cb="1"/><line nr="1097" mi="5" ci="5" mb="1" cb="1"/><line nr="1110" mi="0" ci="2" mb="0" cb="0"/><line nr="1111" mi="0" ci="1" mb="0" cb="0"/><line nr="1116" mi="16" ci="0" mb="8" cb="0"/><line nr="1120" mi="15" ci="0" mb="0" cb="0"/><line nr="1125" mi="4" ci="0" mb="2" cb="0"/><line nr="1126" mi="5" ci="0" mb="0" cb="0"/><line nr="1129" mi="20" ci="0" mb="2" cb="0"/><line nr="1133" mi="10" ci="0" mb="2" cb="0"/><line nr="1134" mi="10" ci="0" mb="2" cb="0"/><line nr="1135" mi="10" ci="0" mb="2" cb="0"/><line nr="1136" mi="1" ci="0" mb="0" cb="0"/><line nr="1148" mi="0" ci="2" mb="0" cb="0"/><line nr="1149" mi="0" ci="1" mb="0" cb="0"/><line nr="1154" mi="5" ci="0" mb="2" cb="0"/><line nr="1155" mi="4" ci="0" mb="2" cb="0"/><line nr="1156" mi="4" ci="0" mb="2" cb="0"/><line nr="1157" mi="3" ci="0" mb="2" cb="0"/><line nr="1158" mi="8" ci="0" mb="0" cb="0"/><line nr="1161" mi="7" ci="0" mb="0" cb="0"/><line nr="1163" mi="4" ci="0" mb="2" cb="0"/><line nr="1164" mi="5" ci="0" mb="0" cb="0"/><line nr="1167" mi="4" ci="0" mb="0" cb="0"/><line nr="1168" mi="5" ci="0" mb="0" cb="0"/><line nr="1169" mi="5" ci="0" mb="0" cb="0"/><line nr="1170" mi="4" ci="0" mb="0" cb="0"/><line nr="1171" mi="12" ci="0" mb="2" cb="0"/><line nr="1172" mi="12" ci="0" mb="2" cb="0"/><line nr="1173" mi="12" ci="0" mb="2" cb="0"/><line nr="1174" mi="11" ci="0" mb="2" cb="0"/><line nr="1187" mi="0" ci="2" mb="0" cb="0"/><line nr="1188" mi="0" ci="1" mb="0" cb="0"/><line nr="1193" mi="8" ci="8" mb="6" cb="2"/><line nr="1197" mi="15" ci="0" mb="0" cb="0"/><line nr="1202" mi="0" ci="4" mb="1" cb="1"/><line nr="1203" mi="5" ci="0" mb="0" cb="0"/><line nr="1206" mi="0" ci="5" mb="0" cb="0"/><line nr="1207" mi="0" ci="4" mb="0" cb="0"/><line nr="1208" mi="0" ci="4" mb="0" cb="0"/><line nr="1209" mi="0" ci="8" mb="1" cb="1"/><line nr="1210" mi="2" ci="9" mb="1" cb="1"/><line nr="1211" mi="5" ci="6" mb="1" cb="1"/><line nr="1212" mi="5" ci="6" mb="1" cb="1"/><line nr="1213" mi="2" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="836" covered="367"/><counter type="BRANCH" missed="90" covered="20"/><counter type="LINE" missed="166" covered="97"/><counter type="COMPLEXITY" missed="107" covered="25"/><counter type="METHOD" missed="53" covered="24"/><counter type="CLASS" missed="5" covered="10"/></sourcefile><sourcefile name="FnListOfArrayOf.java"><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="MapBuilder.java"><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FnArrayOfListOf.java"><line nr="44" mi="7" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="16" ci="0" mb="2" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="9" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="FnDouble.java"><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="4" ci="0" mb="0" cb="0"/><line nr="159" mi="7" ci="0" mb="0" cb="0"/><line nr="185" mi="7" ci="0" mb="0" cb="0"/><line nr="215" mi="9" ci="0" mb="0" cb="0"/><line nr="246" mi="9" ci="0" mb="0" cb="0"/><line nr="277" mi="9" ci="0" mb="0" cb="0"/><line nr="308" mi="9" ci="0" mb="0" cb="0"/><line nr="324" mi="2" ci="0" mb="0" cb="0"/><line nr="337" mi="3" ci="0" mb="0" cb="0"/><line nr="350" mi="3" ci="0" mb="0" cb="0"/><line nr="363" mi="3" ci="0" mb="0" cb="0"/><line nr="377" mi="4" ci="0" mb="0" cb="0"/><line nr="391" mi="4" ci="0" mb="0" cb="0"/><line nr="416" mi="7" ci="0" mb="0" cb="0"/><line nr="444" mi="7" ci="0" mb="0" cb="0"/><line nr="476" mi="9" ci="0" mb="0" cb="0"/><line nr="509" mi="9" ci="0" mb="0" cb="0"/><line nr="542" mi="9" ci="0" mb="0" cb="0"/><line nr="575" mi="9" ci="0" mb="0" cb="0"/><line nr="590" mi="2" ci="0" mb="0" cb="0"/><line nr="606" mi="3" ci="0" mb="0" cb="0"/><line nr="619" mi="3" ci="0" mb="0" cb="0"/><line nr="632" mi="3" ci="0" mb="0" cb="0"/><line nr="647" mi="4" ci="0" mb="0" cb="0"/><line nr="662" mi="4" ci="0" mb="0" cb="0"/><line nr="684" mi="7" ci="0" mb="0" cb="0"/><line nr="709" mi="7" ci="0" mb="0" cb="0"/><line nr="738" mi="9" ci="0" mb="0" cb="0"/><line nr="768" mi="9" ci="0" mb="0" cb="0"/><line nr="798" mi="9" ci="0" mb="0" cb="0"/><line nr="828" mi="9" ci="0" mb="0" cb="0"/><line nr="846" mi="3" ci="0" mb="0" cb="0"/><line nr="860" mi="3" ci="0" mb="0" cb="0"/><line nr="875" mi="3" ci="0" mb="0" cb="0"/><line nr="890" mi="3" ci="0" mb="0" cb="0"/><line nr="904" mi="3" ci="0" mb="0" cb="0"/><line nr="918" mi="3" ci="0" mb="0" cb="0"/><line nr="933" mi="3" ci="0" mb="0" cb="0"/><line nr="948" mi="3" ci="0" mb="0" cb="0"/><line nr="965" mi="3" ci="0" mb="0" cb="0"/><line nr="983" mi="3" ci="0" mb="0" cb="0"/><line nr="1005" mi="3" ci="0" mb="0" cb="0"/><line nr="1022" mi="3" ci="0" mb="0" cb="0"/><line nr="1043" mi="3" ci="0" mb="0" cb="0"/><line nr="1059" mi="3" ci="0" mb="0" cb="0"/><line nr="1080" mi="3" ci="0" mb="0" cb="0"/><line nr="1096" mi="3" ci="0" mb="0" cb="0"/><line nr="1117" mi="4" ci="0" mb="0" cb="0"/><line nr="1139" mi="4" ci="0" mb="0" cb="0"/><line nr="1159" mi="4" ci="0" mb="0" cb="0"/><line nr="1179" mi="4" ci="0" mb="0" cb="0"/><line nr="1201" mi="4" ci="0" mb="0" cb="0"/><line nr="1229" mi="4" ci="0" mb="0" cb="0"/><line nr="1257" mi="4" ci="0" mb="0" cb="0"/><line nr="1284" mi="4" ci="0" mb="0" cb="0"/><line nr="1305" mi="2" ci="0" mb="0" cb="0"/><line nr="1318" mi="2" ci="0" mb="0" cb="0"/><line nr="1339" mi="0" ci="2" mb="0" cb="0"/><line nr="1350" mi="0" ci="2" mb="0" cb="0"/><line nr="1361" mi="0" ci="2" mb="0" cb="0"/><line nr="1372" mi="0" ci="2" mb="0" cb="0"/><line nr="1387" mi="0" ci="5" mb="0" cb="0"/><line nr="1401" mi="5" ci="0" mb="0" cb="0"/><line nr="1412" mi="2" ci="0" mb="0" cb="0"/><line nr="1423" mi="2" ci="0" mb="0" cb="0"/><line nr="1434" mi="2" ci="0" mb="0" cb="0"/><line nr="1445" mi="2" ci="0" mb="0" cb="0"/><line nr="1460" mi="5" ci="0" mb="0" cb="0"/><line nr="1474" mi="5" ci="0" mb="0" cb="0"/><line nr="1486" mi="5" ci="0" mb="0" cb="0"/><line nr="1498" mi="5" ci="0" mb="0" cb="0"/><line nr="1509" mi="0" ci="2" mb="0" cb="0"/><line nr="1521" mi="0" ci="6" mb="0" cb="0"/><line nr="1533" mi="4" ci="0" mb="0" cb="0"/><line nr="1545" mi="4" ci="0" mb="0" cb="0"/><line nr="1557" mi="0" ci="4" mb="0" cb="0"/><line nr="1569" mi="4" ci="0" mb="0" cb="0"/><line nr="1581" mi="4" ci="0" mb="0" cb="0"/><line nr="1593" mi="4" ci="0" mb="0" cb="0"/><line nr="1606" mi="0" ci="6" mb="0" cb="0"/><line nr="1618" mi="4" ci="0" mb="0" cb="0"/><line nr="1630" mi="4" ci="0" mb="0" cb="0"/><line nr="1642" mi="4" ci="0" mb="0" cb="0"/><line nr="1654" mi="4" ci="0" mb="0" cb="0"/><line nr="1666" mi="4" ci="0" mb="0" cb="0"/><line nr="1678" mi="4" ci="0" mb="0" cb="0"/><line nr="1691" mi="6" ci="0" mb="0" cb="0"/><line nr="1703" mi="4" ci="0" mb="0" cb="0"/><line nr="1715" mi="4" ci="0" mb="0" cb="0"/><line nr="1727" mi="4" ci="0" mb="0" cb="0"/><line nr="1739" mi="4" ci="0" mb="0" cb="0"/><line nr="1751" mi="4" ci="0" mb="0" cb="0"/><line nr="1763" mi="4" ci="0" mb="0" cb="0"/><line nr="1778" mi="0" ci="7" mb="0" cb="0"/><line nr="1792" mi="5" ci="0" mb="0" cb="0"/><line nr="1806" mi="5" ci="0" mb="0" cb="0"/><line nr="1820" mi="5" ci="0" mb="0" cb="0"/><line nr="1834" mi="5" ci="0" mb="0" cb="0"/><line nr="1848" mi="5" ci="0" mb="0" cb="0"/><line nr="1862" mi="5" ci="0" mb="0" cb="0"/><line nr="1877" mi="7" ci="0" mb="0" cb="0"/><line nr="1891" mi="5" ci="0" mb="0" cb="0"/><line nr="1905" mi="5" ci="0" mb="0" cb="0"/><line nr="1919" mi="5" ci="0" mb="0" cb="0"/><line nr="1933" mi="5" ci="0" mb="0" cb="0"/><line nr="1947" mi="5" ci="0" mb="0" cb="0"/><line nr="1961" mi="5" ci="0" mb="0" cb="0"/><line nr="1974" mi="6" ci="0" mb="0" cb="0"/><line nr="1987" mi="4" ci="0" mb="0" cb="0"/><line nr="2000" mi="4" ci="0" mb="0" cb="0"/><line nr="2013" mi="4" ci="0" mb="0" cb="0"/><line nr="2026" mi="4" ci="0" mb="0" cb="0"/><line nr="2039" mi="4" ci="0" mb="0" cb="0"/><line nr="2052" mi="4" ci="0" mb="0" cb="0"/><line nr="2068" mi="7" ci="0" mb="0" cb="0"/><line nr="2083" mi="5" ci="0" mb="0" cb="0"/><line nr="2098" mi="5" ci="0" mb="0" cb="0"/><line nr="2113" mi="5" ci="0" mb="0" cb="0"/><line nr="2128" mi="5" ci="0" mb="0" cb="0"/><line nr="2143" mi="5" ci="0" mb="0" cb="0"/><line nr="2158" mi="5" ci="0" mb="0" cb="0"/><line nr="2171" mi="6" ci="0" mb="0" cb="0"/><line nr="2183" mi="4" ci="0" mb="0" cb="0"/><line nr="2195" mi="4" ci="0" mb="0" cb="0"/><line nr="2207" mi="4" ci="0" mb="0" cb="0"/><line nr="2219" mi="4" ci="0" mb="0" cb="0"/><line nr="2231" mi="4" ci="0" mb="0" cb="0"/><line nr="2243" mi="4" ci="0" mb="0" cb="0"/><line nr="2258" mi="7" ci="0" mb="0" cb="0"/><line nr="2272" mi="5" ci="0" mb="0" cb="0"/><line nr="2286" mi="5" ci="0" mb="0" cb="0"/><line nr="2300" mi="5" ci="0" mb="0" cb="0"/><line nr="2314" mi="5" ci="0" mb="0" cb="0"/><line nr="2328" mi="5" ci="0" mb="0" cb="0"/><line nr="2342" mi="5" ci="0" mb="0" cb="0"/><line nr="2356" mi="7" ci="0" mb="0" cb="0"/><line nr="2369" mi="5" ci="0" mb="0" cb="0"/><line nr="2382" mi="5" ci="0" mb="0" cb="0"/><line nr="2395" mi="5" ci="0" mb="0" cb="0"/><line nr="2408" mi="5" ci="0" mb="0" cb="0"/><line nr="2421" mi="5" ci="0" mb="0" cb="0"/><line nr="2434" mi="5" ci="0" mb="0" cb="0"/><line nr="2447" mi="0" ci="5" mb="0" cb="0"/><line nr="2461" mi="6" ci="0" mb="0" cb="0"/><line nr="2475" mi="6" ci="0" mb="0" cb="0"/><line nr="2492" mi="4" ci="0" mb="0" cb="0"/><line nr="2508" mi="4" ci="0" mb="0" cb="0"/><line nr="2514" mi="0" ci="2" mb="1" cb="1"/><line nr="2515" mi="2" ci="0" mb="0" cb="0"/><line nr="2517" mi="0" ci="4" mb="0" cb="0"/><line nr="2528" mi="0" ci="2" mb="0" cb="0"/><line nr="2529" mi="0" ci="1" mb="0" cb="0"/><line nr="2533" mi="0" ci="4" mb="1" cb="1"/><line nr="2534" mi="2" ci="0" mb="0" cb="0"/><line nr="2536" mi="0" ci="5" mb="0" cb="0"/><line nr="2537" mi="0" ci="10" mb="0" cb="2"/><line nr="2538" mi="0" ci="2" mb="1" cb="1"/><line nr="2539" mi="0" ci="4" mb="0" cb="2"/><line nr="2540" mi="0" ci="2" mb="0" cb="0"/><line nr="2543" mi="0" ci="1" mb="0" cb="0"/><line nr="2544" mi="0" ci="2" mb="0" cb="0"/><line nr="2551" mi="0" ci="2" mb="0" cb="0"/><line nr="2552" mi="0" ci="1" mb="0" cb="0"/><line nr="2556" mi="0" ci="4" mb="1" cb="1"/><line nr="2557" mi="2" ci="0" mb="0" cb="0"/><line nr="2559" mi="0" ci="5" mb="0" cb="0"/><line nr="2560" mi="0" ci="10" mb="0" cb="2"/><line nr="2561" mi="0" ci="2" mb="1" cb="1"/><line nr="2562" mi="0" ci="4" mb="0" cb="2"/><line nr="2563" mi="0" ci="2" mb="0" cb="0"/><line nr="2566" mi="0" ci="1" mb="0" cb="0"/><line nr="2567" mi="0" ci="2" mb="0" cb="0"/><line nr="2574" mi="0" ci="2" mb="0" cb="0"/><line nr="2575" mi="0" ci="1" mb="0" cb="0"/><line nr="2579" mi="0" ci="3" mb="0" cb="0"/><line nr="2580" mi="0" ci="10" mb="0" cb="2"/><line nr="2581" mi="0" ci="2" mb="1" cb="1"/><line nr="2582" mi="0" ci="6" mb="0" cb="0"/><line nr="2584" mi="0" ci="1" mb="0" cb="0"/><line nr="2585" mi="0" ci="4" mb="0" cb="0"/><line nr="2595" mi="0" ci="2" mb="0" cb="0"/><line nr="2596" mi="0" ci="3" mb="0" cb="0"/><line nr="2597" mi="0" ci="3" mb="0" cb="0"/><line nr="2598" mi="0" ci="1" mb="0" cb="0"/><line nr="2601" mi="2" ci="0" mb="0" cb="0"/><line nr="2602" mi="3" ci="0" mb="0" cb="0"/><line nr="2603" mi="3" ci="0" mb="0" cb="0"/><line nr="2604" mi="3" ci="0" mb="0" cb="0"/><line nr="2605" mi="1" ci="0" mb="0" cb="0"/><line nr="2608" mi="0" ci="2" mb="0" cb="0"/><line nr="2609" mi="0" ci="3" mb="0" cb="0"/><line nr="2610" mi="0" ci="3" mb="0" cb="0"/><line nr="2611" mi="0" ci="3" mb="0" cb="0"/><line nr="2612" mi="0" ci="1" mb="0" cb="0"/><line nr="2617" mi="0" ci="2" mb="0" cb="0"/><line nr="2618" mi="0" ci="3" mb="0" cb="0"/><line nr="2619" mi="0" ci="10" mb="0" cb="2"/><line nr="2620" mi="0" ci="2" mb="1" cb="1"/><line nr="2621" mi="0" ci="6" mb="0" cb="0"/><line nr="2622" mi="0" ci="1" mb="0" cb="0"/><line nr="2624" mi="0" ci="1" mb="0" cb="0"/><line nr="2625" mi="0" ci="3" mb="1" cb="1"/><line nr="2626" mi="10" ci="0" mb="0" cb="0"/><line nr="2628" mi="0" ci="3" mb="0" cb="2"/><line nr="2629" mi="0" ci="10" mb="0" cb="0"/><line nr="2631" mi="0" ci="9" mb="0" cb="0"/><line nr="2647" mi="0" ci="2" mb="0" cb="0"/><line nr="2648" mi="0" ci="1" mb="0" cb="0"/><line nr="2652" mi="3" ci="0" mb="2" cb="0"/><line nr="2653" mi="2" ci="0" mb="0" cb="0"/><line nr="2655" mi="4" ci="0" mb="0" cb="0"/><line nr="2656" mi="16" ci="0" mb="2" cb="0"/><line nr="2657" mi="2" ci="0" mb="2" cb="0"/><line nr="2658" mi="4" ci="0" mb="2" cb="0"/><line nr="2659" mi="2" ci="0" mb="0" cb="0"/><line nr="2663" mi="2" ci="0" mb="0" cb="0"/><line nr="2670" mi="0" ci="2" mb="0" cb="0"/><line nr="2671" mi="0" ci="1" mb="0" cb="0"/><line nr="2675" mi="3" ci="0" mb="2" cb="0"/><line nr="2676" mi="2" ci="0" mb="0" cb="0"/><line nr="2678" mi="4" ci="0" mb="0" cb="0"/><line nr="2679" mi="16" ci="0" mb="2" cb="0"/><line nr="2680" mi="2" ci="0" mb="2" cb="0"/><line nr="2681" mi="4" ci="0" mb="2" cb="0"/><line nr="2682" mi="2" ci="0" mb="0" cb="0"/><line nr="2686" mi="2" ci="0" mb="0" cb="0"/><line nr="2693" mi="0" ci="2" mb="0" cb="0"/><line nr="2694" mi="0" ci="1" mb="0" cb="0"/><line nr="2698" mi="3" ci="0" mb="0" cb="0"/><line nr="2699" mi="16" ci="0" mb="2" cb="0"/><line nr="2700" mi="2" ci="0" mb="2" cb="0"/><line nr="2701" mi="6" ci="0" mb="0" cb="0"/><line nr="2704" mi="4" ci="0" mb="0" cb="0"/><line nr="2714" mi="0" ci="2" mb="0" cb="0"/><line nr="2715" mi="0" ci="3" mb="0" cb="0"/><line nr="2716" mi="0" ci="3" mb="0" cb="0"/><line nr="2717" mi="0" ci="1" mb="0" cb="0"/><line nr="2720" mi="2" ci="0" mb="0" cb="0"/><line nr="2721" mi="3" ci="0" mb="0" cb="0"/><line nr="2722" mi="3" ci="0" mb="0" cb="0"/><line nr="2723" mi="3" ci="0" mb="0" cb="0"/><line nr="2724" mi="1" ci="0" mb="0" cb="0"/><line nr="2727" mi="2" ci="0" mb="0" cb="0"/><line nr="2728" mi="3" ci="0" mb="0" cb="0"/><line nr="2729" mi="3" ci="0" mb="0" cb="0"/><line nr="2730" mi="3" ci="0" mb="0" cb="0"/><line nr="2731" mi="1" ci="0" mb="0" cb="0"/><line nr="2736" mi="2" ci="0" mb="0" cb="0"/><line nr="2737" mi="3" ci="0" mb="0" cb="0"/><line nr="2738" mi="16" ci="0" mb="2" cb="0"/><line nr="2739" mi="2" ci="0" mb="2" cb="0"/><line nr="2740" mi="6" ci="0" mb="0" cb="0"/><line nr="2741" mi="1" ci="0" mb="0" cb="0"/><line nr="2744" mi="3" ci="0" mb="2" cb="0"/><line nr="2745" mi="10" ci="0" mb="0" cb="0"/><line nr="2747" mi="3" ci="0" mb="2" cb="0"/><line nr="2748" mi="10" ci="0" mb="0" cb="0"/><line nr="2750" mi="9" ci="0" mb="0" cb="0"/><line nr="2770" mi="2" ci="0" mb="0" cb="0"/><line nr="2771" mi="3" ci="0" mb="0" cb="0"/><line nr="2772" mi="3" ci="0" mb="0" cb="0"/><line nr="2773" mi="3" ci="0" mb="0" cb="0"/><line nr="2774" mi="1" ci="0" mb="0" cb="0"/><line nr="2777" mi="2" ci="0" mb="0" cb="0"/><line nr="2778" mi="3" ci="0" mb="0" cb="0"/><line nr="2779" mi="3" ci="0" mb="0" cb="0"/><line nr="2780" mi="3" ci="0" mb="0" cb="0"/><line nr="2781" mi="1" ci="0" mb="0" cb="0"/><line nr="2785" mi="3" ci="0" mb="2" cb="0"/><line nr="2786" mi="10" ci="0" mb="0" cb="0"/><line nr="2788" mi="9" ci="0" mb="0" cb="0"/><line nr="2795" mi="0" ci="2" mb="0" cb="0"/><line nr="2796" mi="0" ci="1" mb="0" cb="0"/><line nr="2800" mi="0" ci="5" mb="0" cb="0"/><line nr="2809" mi="0" ci="2" mb="0" cb="0"/><line nr="2810" mi="0" ci="3" mb="0" cb="0"/><line nr="2811" mi="0" ci="3" mb="0" cb="0"/><line nr="2812" mi="0" ci="1" mb="0" cb="0"/><line nr="2816" mi="0" ci="4" mb="0" cb="0"/><line nr="2817" mi="0" ci="7" mb="0" cb="0"/><line nr="2818" mi="0" ci="4" mb="0" cb="0"/><line nr="2827" mi="0" ci="2" mb="0" cb="0"/><line nr="2828" mi="0" ci="3" mb="0" cb="0"/><line nr="2829" mi="0" ci="3" mb="0" cb="0"/><line nr="2830" mi="0" ci="3" mb="0" cb="0"/><line nr="2831" mi="0" ci="1" mb="0" cb="0"/><line nr="2835" mi="0" ci="4" mb="0" cb="0"/><line nr="2836" mi="0" ci="7" mb="0" cb="0"/><line nr="2837" mi="0" ci="4" mb="0" cb="0"/><line nr="2848" mi="2" ci="0" mb="0" cb="0"/><line nr="2849" mi="3" ci="0" mb="0" cb="0"/><line nr="2850" mi="3" ci="0" mb="0" cb="0"/><line nr="2851" mi="3" ci="0" mb="0" cb="0"/><line nr="2852" mi="3" ci="0" mb="0" cb="0"/><line nr="2853" mi="1" ci="0" mb="0" cb="0"/><line nr="2856" mi="2" ci="0" mb="0" cb="0"/><line nr="2857" mi="3" ci="0" mb="0" cb="0"/><line nr="2858" mi="3" ci="0" mb="0" cb="0"/><line nr="2859" mi="3" ci="0" mb="0" cb="0"/><line nr="2860" mi="3" ci="0" mb="0" cb="0"/><line nr="2861" mi="3" ci="0" mb="0" cb="0"/><line nr="2862" mi="1" ci="0" mb="0" cb="0"/><line nr="2865" mi="0" ci="2" mb="0" cb="0"/><line nr="2866" mi="0" ci="3" mb="0" cb="0"/><line nr="2867" mi="0" ci="3" mb="0" cb="0"/><line nr="2868" mi="0" ci="3" mb="0" cb="0"/><line nr="2869" mi="0" ci="3" mb="0" cb="0"/><line nr="2870" mi="0" ci="3" mb="0" cb="0"/><line nr="2871" mi="0" ci="1" mb="0" cb="0"/><line nr="2875" mi="0" ci="4" mb="0" cb="0"/><line nr="2877" mi="0" ci="3" mb="1" cb="1"/><line nr="2878" mi="10" ci="0" mb="0" cb="0"/><line nr="2879" mi="0" ci="3" mb="1" cb="1"/><line nr="2880" mi="0" ci="10" mb="0" cb="0"/><line nr="2882" mi="8" ci="0" mb="0" cb="0"/><line nr="2884" mi="0" ci="4" mb="0" cb="0"/><line nr="2895" mi="2" ci="0" mb="0" cb="0"/><line nr="2896" mi="3" ci="0" mb="0" cb="0"/><line nr="2897" mi="3" ci="0" mb="0" cb="0"/><line nr="2898" mi="1" ci="0" mb="0" cb="0"/><line nr="2901" mi="2" ci="0" mb="0" cb="0"/><line nr="2902" mi="3" ci="0" mb="0" cb="0"/><line nr="2903" mi="3" ci="0" mb="0" cb="0"/><line nr="2904" mi="1" ci="0" mb="0" cb="0"/><line nr="2908" mi="3" ci="0" mb="2" cb="0"/><line nr="2909" mi="7" ci="0" mb="0" cb="0"/><line nr="2910" mi="6" ci="0" mb="0" cb="0"/><line nr="2912" mi="7" ci="0" mb="0" cb="0"/><line nr="2913" mi="4" ci="0" mb="0" cb="0"/><line nr="2924" mi="2" ci="0" mb="0" cb="0"/><line nr="2925" mi="3" ci="0" mb="0" cb="0"/><line nr="2926" mi="3" ci="0" mb="0" cb="0"/><line nr="2927" mi="3" ci="0" mb="0" cb="0"/><line nr="2928" mi="3" ci="0" mb="0" cb="0"/><line nr="2929" mi="1" ci="0" mb="0" cb="0"/><line nr="2932" mi="2" ci="0" mb="0" cb="0"/><line nr="2933" mi="3" ci="0" mb="0" cb="0"/><line nr="2934" mi="3" ci="0" mb="0" cb="0"/><line nr="2935" mi="3" ci="0" mb="0" cb="0"/><line nr="2936" mi="3" ci="0" mb="0" cb="0"/><line nr="2937" mi="3" ci="0" mb="0" cb="0"/><line nr="2938" mi="1" ci="0" mb="0" cb="0"/><line nr="2941" mi="2" ci="0" mb="0" cb="0"/><line nr="2942" mi="3" ci="0" mb="0" cb="0"/><line nr="2943" mi="3" ci="0" mb="0" cb="0"/><line nr="2944" mi="3" ci="0" mb="0" cb="0"/><line nr="2945" mi="3" ci="0" mb="0" cb="0"/><line nr="2946" mi="3" ci="0" mb="0" cb="0"/><line nr="2947" mi="1" ci="0" mb="0" cb="0"/><line nr="2951" mi="4" ci="0" mb="0" cb="0"/><line nr="2953" mi="3" ci="0" mb="2" cb="0"/><line nr="2954" mi="10" ci="0" mb="0" cb="0"/><line nr="2955" mi="3" ci="0" mb="2" cb="0"/><line nr="2956" mi="12" ci="0" mb="0" cb="0"/><line nr="2958" mi="7" ci="0" mb="0" cb="0"/><line nr="2960" mi="4" ci="0" mb="0" cb="0"/><line nr="2971" mi="0" ci="2" mb="0" cb="0"/><line nr="2972" mi="0" ci="3" mb="0" cb="0"/><line nr="2973" mi="0" ci="3" mb="0" cb="0"/><line nr="2974" mi="0" ci="3" mb="0" cb="0"/><line nr="2975" mi="0" ci="1" mb="0" cb="0"/><line nr="2978" mi="2" ci="0" mb="0" cb="0"/><line nr="2979" mi="3" ci="0" mb="0" cb="0"/><line nr="2980" mi="3" ci="0" mb="0" cb="0"/><line nr="2981" mi="3" ci="0" mb="0" cb="0"/><line nr="2982" mi="3" ci="0" mb="0" cb="0"/><line nr="2983" mi="1" ci="0" mb="0" cb="0"/><line nr="2986" mi="2" ci="0" mb="0" cb="0"/><line nr="2987" mi="3" ci="0" mb="0" cb="0"/><line nr="2988" mi="3" ci="0" mb="0" cb="0"/><line nr="2989" mi="3" ci="0" mb="0" cb="0"/><line nr="2990" mi="3" ci="0" mb="0" cb="0"/><line nr="2991" mi="1" ci="0" mb="0" cb="0"/><line nr="2995" mi="0" ci="4" mb="0" cb="0"/><line nr="2997" mi="0" ci="3" mb="1" cb="1"/><line nr="2998" mi="8" ci="0" mb="0" cb="0"/><line nr="2999" mi="0" ci="3" mb="1" cb="1"/><line nr="3000" mi="10" ci="0" mb="0" cb="0"/><line nr="3002" mi="0" ci="5" mb="0" cb="0"/><line nr="3004" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1165" covered="402"/><counter type="BRANCH" missed="48" covered="26"/><counter type="LINE" missed="277" covered="120"/><counter type="COMPLEXITY" missed="194" covered="43"/><counter type="METHOD" missed="164" covered="36"/><counter type="CLASS" missed="3" covered="14"/></sourcefile><sourcefile name="FnListOfListOf.java"><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="FnSetOfSetOf.java"><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="FnArrayOfSetOf.java"><line nr="45" mi="7" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="16" ci="0" mb="2" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="9" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="FnLong.java"><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="4" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="184" mi="3" ci="0" mb="0" cb="0"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="212" mi="4" ci="0" mb="0" cb="0"/><line nr="223" mi="2" ci="0" mb="0" cb="0"/><line nr="239" mi="3" ci="0" mb="0" cb="0"/><line nr="252" mi="3" ci="0" mb="0" cb="0"/><line nr="265" mi="3" ci="0" mb="0" cb="0"/><line nr="280" mi="4" ci="0" mb="0" cb="0"/><line nr="295" mi="4" ci="0" mb="0" cb="0"/><line nr="309" mi="3" ci="0" mb="0" cb="0"/><line nr="323" mi="3" ci="0" mb="0" cb="0"/><line nr="338" mi="3" ci="0" mb="0" cb="0"/><line nr="353" mi="3" ci="0" mb="0" cb="0"/><line nr="367" mi="3" ci="0" mb="0" cb="0"/><line nr="381" mi="3" ci="0" mb="0" cb="0"/><line nr="396" mi="3" ci="0" mb="0" cb="0"/><line nr="411" mi="3" ci="0" mb="0" cb="0"/><line nr="429" mi="3" ci="0" mb="0" cb="0"/><line nr="447" mi="3" ci="0" mb="0" cb="0"/><line nr="462" mi="3" ci="0" mb="0" cb="0"/><line nr="483" mi="3" ci="0" mb="0" cb="0"/><line nr="498" mi="3" ci="0" mb="0" cb="0"/><line nr="518" mi="3" ci="0" mb="0" cb="0"/><line nr="533" mi="3" ci="0" mb="0" cb="0"/><line nr="552" mi="3" ci="0" mb="0" cb="0"/><line nr="569" mi="4" ci="0" mb="0" cb="0"/><line nr="590" mi="4" ci="0" mb="0" cb="0"/><line nr="610" mi="4" ci="0" mb="0" cb="0"/><line nr="631" mi="4" ci="0" mb="0" cb="0"/><line nr="651" mi="4" ci="0" mb="0" cb="0"/><line nr="679" mi="4" ci="0" mb="0" cb="0"/><line nr="705" mi="4" ci="0" mb="0" cb="0"/><line nr="731" mi="4" ci="0" mb="0" cb="0"/><line nr="750" mi="2" ci="0" mb="0" cb="0"/><line nr="763" mi="2" ci="0" mb="0" cb="0"/><line nr="783" mi="2" ci="0" mb="0" cb="0"/><line nr="794" mi="2" ci="0" mb="0" cb="0"/><line nr="805" mi="2" ci="0" mb="0" cb="0"/><line nr="816" mi="2" ci="0" mb="0" cb="0"/><line nr="831" mi="5" ci="0" mb="0" cb="0"/><line nr="845" mi="5" ci="0" mb="0" cb="0"/><line nr="856" mi="2" ci="0" mb="0" cb="0"/><line nr="867" mi="2" ci="0" mb="0" cb="0"/><line nr="878" mi="2" ci="0" mb="0" cb="0"/><line nr="889" mi="2" ci="0" mb="0" cb="0"/><line nr="904" mi="5" ci="0" mb="0" cb="0"/><line nr="918" mi="5" ci="0" mb="0" cb="0"/><line nr="929" mi="0" ci="2" mb="0" cb="0"/><line nr="941" mi="0" ci="6" mb="0" cb="0"/><line nr="953" mi="4" ci="0" mb="0" cb="0"/><line nr="965" mi="4" ci="0" mb="0" cb="0"/><line nr="977" mi="4" ci="0" mb="0" cb="0"/><line nr="989" mi="4" ci="0" mb="0" cb="0"/><line nr="1001" mi="4" ci="0" mb="0" cb="0"/><line nr="1013" mi="4" ci="0" mb="0" cb="0"/><line nr="1026" mi="0" ci="6" mb="0" cb="0"/><line nr="1038" mi="4" ci="0" mb="0" cb="0"/><line nr="1050" mi="4" ci="0" mb="0" cb="0"/><line nr="1062" mi="4" ci="0" mb="0" cb="0"/><line nr="1074" mi="4" ci="0" mb="0" cb="0"/><line nr="1086" mi="4" ci="0" mb="0" cb="0"/><line nr="1098" mi="4" ci="0" mb="0" cb="0"/><line nr="1111" mi="6" ci="0" mb="0" cb="0"/><line nr="1123" mi="4" ci="0" mb="0" cb="0"/><line nr="1135" mi="4" ci="0" mb="0" cb="0"/><line nr="1147" mi="4" ci="0" mb="0" cb="0"/><line nr="1159" mi="4" ci="0" mb="0" cb="0"/><line nr="1171" mi="4" ci="0" mb="0" cb="0"/><line nr="1183" mi="4" ci="0" mb="0" cb="0"/><line nr="1198" mi="0" ci="7" mb="0" cb="0"/><line nr="1212" mi="5" ci="0" mb="0" cb="0"/><line nr="1226" mi="5" ci="0" mb="0" cb="0"/><line nr="1240" mi="5" ci="0" mb="0" cb="0"/><line nr="1254" mi="5" ci="0" mb="0" cb="0"/><line nr="1268" mi="5" ci="0" mb="0" cb="0"/><line nr="1282" mi="5" ci="0" mb="0" cb="0"/><line nr="1297" mi="7" ci="0" mb="0" cb="0"/><line nr="1311" mi="5" ci="0" mb="0" cb="0"/><line nr="1325" mi="5" ci="0" mb="0" cb="0"/><line nr="1339" mi="5" ci="0" mb="0" cb="0"/><line nr="1353" mi="5" ci="0" mb="0" cb="0"/><line nr="1367" mi="5" ci="0" mb="0" cb="0"/><line nr="1381" mi="5" ci="0" mb="0" cb="0"/><line nr="1396" mi="8" ci="0" mb="0" cb="0"/><line nr="1410" mi="8" ci="0" mb="0" cb="0"/><line nr="1424" mi="8" ci="0" mb="0" cb="0"/><line nr="1438" mi="8" ci="0" mb="0" cb="0"/><line nr="1452" mi="7" ci="0" mb="0" cb="0"/><line nr="1466" mi="7" ci="0" mb="0" cb="0"/><line nr="1480" mi="7" ci="0" mb="0" cb="0"/><line nr="1494" mi="7" ci="0" mb="0" cb="0"/><line nr="1508" mi="5" ci="0" mb="0" cb="0"/><line nr="1521" mi="6" ci="0" mb="0" cb="0"/><line nr="1534" mi="4" ci="0" mb="0" cb="0"/><line nr="1547" mi="4" ci="0" mb="0" cb="0"/><line nr="1560" mi="4" ci="0" mb="0" cb="0"/><line nr="1573" mi="4" ci="0" mb="0" cb="0"/><line nr="1586" mi="4" ci="0" mb="0" cb="0"/><line nr="1599" mi="4" ci="0" mb="0" cb="0"/><line nr="1611" mi="6" ci="0" mb="0" cb="0"/><line nr="1623" mi="4" ci="0" mb="0" cb="0"/><line nr="1635" mi="4" ci="0" mb="0" cb="0"/><line nr="1647" mi="4" ci="0" mb="0" cb="0"/><line nr="1659" mi="4" ci="0" mb="0" cb="0"/><line nr="1671" mi="4" ci="0" mb="0" cb="0"/><line nr="1683" mi="4" ci="0" mb="0" cb="0"/><line nr="1698" mi="7" ci="0" mb="0" cb="0"/><line nr="1712" mi="5" ci="0" mb="0" cb="0"/><line nr="1726" mi="5" ci="0" mb="0" cb="0"/><line nr="1740" mi="5" ci="0" mb="0" cb="0"/><line nr="1754" mi="5" ci="0" mb="0" cb="0"/><line nr="1768" mi="5" ci="0" mb="0" cb="0"/><line nr="1782" mi="5" ci="0" mb="0" cb="0"/><line nr="1796" mi="7" ci="0" mb="0" cb="0"/><line nr="1809" mi="5" ci="0" mb="0" cb="0"/><line nr="1822" mi="5" ci="0" mb="0" cb="0"/><line nr="1835" mi="5" ci="0" mb="0" cb="0"/><line nr="1848" mi="5" ci="0" mb="0" cb="0"/><line nr="1861" mi="5" ci="0" mb="0" cb="0"/><line nr="1874" mi="5" ci="0" mb="0" cb="0"/><line nr="1887" mi="0" ci="5" mb="0" cb="0"/><line nr="1901" mi="6" ci="0" mb="0" cb="0"/><line nr="1915" mi="6" ci="0" mb="0" cb="0"/><line nr="1932" mi="4" ci="0" mb="0" cb="0"/><line nr="1948" mi="4" ci="0" mb="0" cb="0"/><line nr="1954" mi="0" ci="2" mb="1" cb="1"/><line nr="1955" mi="2" ci="0" mb="0" cb="0"/><line nr="1957" mi="0" ci="4" mb="0" cb="0"/><line nr="1967" mi="0" ci="2" mb="0" cb="0"/><line nr="1968" mi="0" ci="1" mb="0" cb="0"/><line nr="1972" mi="4" ci="0" mb="2" cb="0"/><line nr="1973" mi="2" ci="0" mb="0" cb="0"/><line nr="1975" mi="5" ci="0" mb="0" cb="0"/><line nr="1976" mi="10" ci="0" mb="2" cb="0"/><line nr="1977" mi="2" ci="0" mb="2" cb="0"/><line nr="1978" mi="4" ci="0" mb="2" cb="0"/><line nr="1979" mi="2" ci="0" mb="0" cb="0"/><line nr="1982" mi="1" ci="0" mb="0" cb="0"/><line nr="1983" mi="2" ci="0" mb="0" cb="0"/><line nr="1990" mi="0" ci="2" mb="0" cb="0"/><line nr="1991" mi="0" ci="1" mb="0" cb="0"/><line nr="1995" mi="4" ci="0" mb="2" cb="0"/><line nr="1996" mi="2" ci="0" mb="0" cb="0"/><line nr="1998" mi="5" ci="0" mb="0" cb="0"/><line nr="1999" mi="10" ci="0" mb="2" cb="0"/><line nr="2000" mi="2" ci="0" mb="2" cb="0"/><line nr="2001" mi="4" ci="0" mb="2" cb="0"/><line nr="2002" mi="2" ci="0" mb="0" cb="0"/><line nr="2005" mi="1" ci="0" mb="0" cb="0"/><line nr="2006" mi="2" ci="0" mb="0" cb="0"/><line nr="2013" mi="0" ci="2" mb="0" cb="0"/><line nr="2014" mi="0" ci="1" mb="0" cb="0"/><line nr="2018" mi="3" ci="0" mb="0" cb="0"/><line nr="2019" mi="10" ci="0" mb="2" cb="0"/><line nr="2020" mi="2" ci="0" mb="2" cb="0"/><line nr="2021" mi="6" ci="0" mb="0" cb="0"/><line nr="2023" mi="1" ci="0" mb="0" cb="0"/><line nr="2024" mi="4" ci="0" mb="0" cb="0"/><line nr="2034" mi="0" ci="2" mb="0" cb="0"/><line nr="2035" mi="0" ci="3" mb="0" cb="0"/><line nr="2036" mi="0" ci="3" mb="0" cb="0"/><line nr="2037" mi="0" ci="1" mb="0" cb="0"/><line nr="2040" mi="2" ci="0" mb="0" cb="0"/><line nr="2041" mi="3" ci="0" mb="0" cb="0"/><line nr="2042" mi="3" ci="0" mb="0" cb="0"/><line nr="2043" mi="3" ci="0" mb="0" cb="0"/><line nr="2044" mi="1" ci="0" mb="0" cb="0"/><line nr="2047" mi="2" ci="0" mb="0" cb="0"/><line nr="2048" mi="3" ci="0" mb="0" cb="0"/><line nr="2049" mi="3" ci="0" mb="0" cb="0"/><line nr="2050" mi="3" ci="0" mb="0" cb="0"/><line nr="2051" mi="1" ci="0" mb="0" cb="0"/><line nr="2056" mi="2" ci="0" mb="0" cb="0"/><line nr="2057" mi="3" ci="0" mb="0" cb="0"/><line nr="2058" mi="10" ci="0" mb="2" cb="0"/><line nr="2059" mi="2" ci="0" mb="2" cb="0"/><line nr="2060" mi="6" ci="0" mb="0" cb="0"/><line nr="2061" mi="1" ci="0" mb="0" cb="0"/><line nr="2063" mi="1" ci="0" mb="0" cb="0"/><line nr="2064" mi="3" ci="0" mb="2" cb="0"/><line nr="2065" mi="10" ci="0" mb="0" cb="0"/><line nr="2067" mi="3" ci="0" mb="2" cb="0"/><line nr="2068" mi="10" ci="0" mb="0" cb="0"/><line nr="2070" mi="9" ci="0" mb="0" cb="0"/><line nr="2091" mi="0" ci="2" mb="0" cb="0"/><line nr="2092" mi="0" ci="1" mb="0" cb="0"/><line nr="2096" mi="3" ci="0" mb="2" cb="0"/><line nr="2097" mi="2" ci="0" mb="0" cb="0"/><line nr="2099" mi="4" ci="0" mb="0" cb="0"/><line nr="2100" mi="16" ci="0" mb="2" cb="0"/><line nr="2101" mi="2" ci="0" mb="2" cb="0"/><line nr="2102" mi="4" ci="0" mb="2" cb="0"/><line nr="2103" mi="2" ci="0" mb="0" cb="0"/><line nr="2107" mi="2" ci="0" mb="0" cb="0"/><line nr="2114" mi="0" ci="2" mb="0" cb="0"/><line nr="2115" mi="0" ci="1" mb="0" cb="0"/><line nr="2119" mi="3" ci="0" mb="2" cb="0"/><line nr="2120" mi="2" ci="0" mb="0" cb="0"/><line nr="2122" mi="4" ci="0" mb="0" cb="0"/><line nr="2123" mi="16" ci="0" mb="2" cb="0"/><line nr="2124" mi="2" ci="0" mb="2" cb="0"/><line nr="2125" mi="4" ci="0" mb="2" cb="0"/><line nr="2126" mi="2" ci="0" mb="0" cb="0"/><line nr="2130" mi="2" ci="0" mb="0" cb="0"/><line nr="2137" mi="0" ci="2" mb="0" cb="0"/><line nr="2138" mi="0" ci="1" mb="0" cb="0"/><line nr="2142" mi="3" ci="0" mb="0" cb="0"/><line nr="2143" mi="16" ci="0" mb="2" cb="0"/><line nr="2144" mi="2" ci="0" mb="2" cb="0"/><line nr="2145" mi="6" ci="0" mb="0" cb="0"/><line nr="2148" mi="4" ci="0" mb="0" cb="0"/><line nr="2158" mi="0" ci="2" mb="0" cb="0"/><line nr="2159" mi="0" ci="3" mb="0" cb="0"/><line nr="2160" mi="0" ci="3" mb="0" cb="0"/><line nr="2161" mi="0" ci="1" mb="0" cb="0"/><line nr="2164" mi="2" ci="0" mb="0" cb="0"/><line nr="2165" mi="3" ci="0" mb="0" cb="0"/><line nr="2166" mi="3" ci="0" mb="0" cb="0"/><line nr="2167" mi="3" ci="0" mb="0" cb="0"/><line nr="2168" mi="1" ci="0" mb="0" cb="0"/><line nr="2171" mi="2" ci="0" mb="0" cb="0"/><line nr="2172" mi="3" ci="0" mb="0" cb="0"/><line nr="2173" mi="3" ci="0" mb="0" cb="0"/><line nr="2174" mi="3" ci="0" mb="0" cb="0"/><line nr="2175" mi="1" ci="0" mb="0" cb="0"/><line nr="2180" mi="2" ci="0" mb="0" cb="0"/><line nr="2181" mi="3" ci="0" mb="0" cb="0"/><line nr="2182" mi="16" ci="0" mb="2" cb="0"/><line nr="2183" mi="2" ci="0" mb="2" cb="0"/><line nr="2184" mi="6" ci="0" mb="0" cb="0"/><line nr="2185" mi="1" ci="0" mb="0" cb="0"/><line nr="2188" mi="3" ci="0" mb="2" cb="0"/><line nr="2189" mi="10" ci="0" mb="0" cb="0"/><line nr="2191" mi="3" ci="0" mb="2" cb="0"/><line nr="2192" mi="10" ci="0" mb="0" cb="0"/><line nr="2194" mi="9" ci="0" mb="0" cb="0"/><line nr="2215" mi="0" ci="2" mb="0" cb="0"/><line nr="2216" mi="0" ci="1" mb="0" cb="0"/><line nr="2220" mi="0" ci="5" mb="0" cb="0"/><line nr="2229" mi="0" ci="2" mb="0" cb="0"/><line nr="2230" mi="0" ci="3" mb="0" cb="0"/><line nr="2231" mi="0" ci="3" mb="0" cb="0"/><line nr="2232" mi="0" ci="1" mb="0" cb="0"/><line nr="2236" mi="0" ci="4" mb="0" cb="0"/><line nr="2237" mi="0" ci="7" mb="0" cb="0"/><line nr="2239" mi="0" ci="4" mb="0" cb="0"/><line nr="2248" mi="0" ci="2" mb="0" cb="0"/><line nr="2249" mi="0" ci="3" mb="0" cb="0"/><line nr="2250" mi="0" ci="3" mb="0" cb="0"/><line nr="2251" mi="0" ci="3" mb="0" cb="0"/><line nr="2252" mi="0" ci="1" mb="0" cb="0"/><line nr="2256" mi="0" ci="4" mb="0" cb="0"/><line nr="2257" mi="0" ci="7" mb="0" cb="0"/><line nr="2259" mi="0" ci="4" mb="0" cb="0"/><line nr="2270" mi="2" ci="0" mb="0" cb="0"/><line nr="2271" mi="3" ci="0" mb="0" cb="0"/><line nr="2272" mi="3" ci="0" mb="0" cb="0"/><line nr="2273" mi="3" ci="0" mb="0" cb="0"/><line nr="2274" mi="3" ci="0" mb="0" cb="0"/><line nr="2275" mi="1" ci="0" mb="0" cb="0"/><line nr="2278" mi="2" ci="0" mb="0" cb="0"/><line nr="2279" mi="3" ci="0" mb="0" cb="0"/><line nr="2280" mi="3" ci="0" mb="0" cb="0"/><line nr="2281" mi="3" ci="0" mb="0" cb="0"/><line nr="2282" mi="3" ci="0" mb="0" cb="0"/><line nr="2283" mi="3" ci="0" mb="0" cb="0"/><line nr="2284" mi="1" ci="0" mb="0" cb="0"/><line nr="2287" mi="0" ci="2" mb="0" cb="0"/><line nr="2288" mi="0" ci="3" mb="0" cb="0"/><line nr="2289" mi="0" ci="3" mb="0" cb="0"/><line nr="2290" mi="0" ci="3" mb="0" cb="0"/><line nr="2291" mi="0" ci="3" mb="0" cb="0"/><line nr="2292" mi="0" ci="3" mb="0" cb="0"/><line nr="2293" mi="0" ci="1" mb="0" cb="0"/><line nr="2297" mi="0" ci="4" mb="0" cb="0"/><line nr="2299" mi="0" ci="3" mb="1" cb="1"/><line nr="2300" mi="10" ci="0" mb="0" cb="0"/><line nr="2301" mi="0" ci="3" mb="1" cb="1"/><line nr="2302" mi="0" ci="10" mb="0" cb="0"/><line nr="2304" mi="8" ci="0" mb="0" cb="0"/><line nr="2306" mi="0" ci="4" mb="0" cb="0"/><line nr="2316" mi="2" ci="0" mb="0" cb="0"/><line nr="2317" mi="3" ci="0" mb="0" cb="0"/><line nr="2318" mi="1" ci="0" mb="0" cb="0"/><line nr="2322" mi="7" ci="0" mb="0" cb="0"/><line nr="2323" mi="2" ci="0" mb="0" cb="0"/><line nr="2332" mi="2" ci="0" mb="0" cb="0"/><line nr="2333" mi="3" ci="0" mb="0" cb="0"/><line nr="2334" mi="1" ci="0" mb="0" cb="0"/><line nr="2338" mi="7" ci="0" mb="0" cb="0"/><line nr="2339" mi="4" ci="0" mb="0" cb="0"/><line nr="2350" mi="2" ci="0" mb="0" cb="0"/><line nr="2351" mi="3" ci="0" mb="0" cb="0"/><line nr="2352" mi="3" ci="0" mb="0" cb="0"/><line nr="2353" mi="3" ci="0" mb="0" cb="0"/><line nr="2354" mi="3" ci="0" mb="0" cb="0"/><line nr="2355" mi="1" ci="0" mb="0" cb="0"/><line nr="2358" mi="2" ci="0" mb="0" cb="0"/><line nr="2359" mi="3" ci="0" mb="0" cb="0"/><line nr="2360" mi="3" ci="0" mb="0" cb="0"/><line nr="2361" mi="3" ci="0" mb="0" cb="0"/><line nr="2362" mi="3" ci="0" mb="0" cb="0"/><line nr="2363" mi="3" ci="0" mb="0" cb="0"/><line nr="2364" mi="1" ci="0" mb="0" cb="0"/><line nr="2367" mi="2" ci="0" mb="0" cb="0"/><line nr="2368" mi="3" ci="0" mb="0" cb="0"/><line nr="2369" mi="3" ci="0" mb="0" cb="0"/><line nr="2370" mi="3" ci="0" mb="0" cb="0"/><line nr="2371" mi="3" ci="0" mb="0" cb="0"/><line nr="2372" mi="3" ci="0" mb="0" cb="0"/><line nr="2373" mi="1" ci="0" mb="0" cb="0"/><line nr="2377" mi="4" ci="0" mb="0" cb="0"/><line nr="2379" mi="3" ci="0" mb="2" cb="0"/><line nr="2380" mi="10" ci="0" mb="0" cb="0"/><line nr="2381" mi="3" ci="0" mb="2" cb="0"/><line nr="2382" mi="12" ci="0" mb="0" cb="0"/><line nr="2384" mi="7" ci="0" mb="0" cb="0"/><line nr="2386" mi="4" ci="0" mb="0" cb="0"/><line nr="2397" mi="0" ci="2" mb="0" cb="0"/><line nr="2398" mi="0" ci="3" mb="0" cb="0"/><line nr="2399" mi="0" ci="3" mb="0" cb="0"/><line nr="2400" mi="0" ci="3" mb="0" cb="0"/><line nr="2401" mi="0" ci="1" mb="0" cb="0"/><line nr="2404" mi="2" ci="0" mb="0" cb="0"/><line nr="2405" mi="3" ci="0" mb="0" cb="0"/><line nr="2406" mi="3" ci="0" mb="0" cb="0"/><line nr="2407" mi="3" ci="0" mb="0" cb="0"/><line nr="2408" mi="3" ci="0" mb="0" cb="0"/><line nr="2409" mi="1" ci="0" mb="0" cb="0"/><line nr="2412" mi="2" ci="0" mb="0" cb="0"/><line nr="2413" mi="3" ci="0" mb="0" cb="0"/><line nr="2414" mi="3" ci="0" mb="0" cb="0"/><line nr="2415" mi="3" ci="0" mb="0" cb="0"/><line nr="2416" mi="3" ci="0" mb="0" cb="0"/><line nr="2417" mi="1" ci="0" mb="0" cb="0"/><line nr="2421" mi="0" ci="4" mb="0" cb="0"/><line nr="2423" mi="0" ci="3" mb="1" cb="1"/><line nr="2424" mi="8" ci="0" mb="0" cb="0"/><line nr="2425" mi="0" ci="3" mb="1" cb="1"/><line nr="2426" mi="10" ci="0" mb="0" cb="0"/><line nr="2428" mi="0" ci="5" mb="0" cb="0"/><line nr="2430" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1135" covered="237"/><counter type="BRANCH" missed="65" covered="5"/><counter type="LINE" missed="286" covered="76"/><counter type="COMPLEXITY" missed="189" covered="25"/><counter type="METHOD" missed="154" covered="25"/><counter type="CLASS" missed="3" covered="14"/></sourcefile><sourcefile name="FnBigInteger.java"><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="172" mi="3" ci="0" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="4" ci="0" mb="0" cb="0"/><line nr="213" mi="4" ci="0" mb="0" cb="0"/><line nr="224" mi="2" ci="0" mb="0" cb="0"/><line nr="240" mi="3" ci="0" mb="0" cb="0"/><line nr="253" mi="3" ci="0" mb="0" cb="0"/><line nr="266" mi="3" ci="0" mb="0" cb="0"/><line nr="281" mi="4" ci="0" mb="0" cb="0"/><line nr="296" mi="4" ci="0" mb="0" cb="0"/><line nr="310" mi="3" ci="0" mb="0" cb="0"/><line nr="325" mi="3" ci="0" mb="0" cb="0"/><line nr="339" mi="3" ci="0" mb="0" cb="0"/><line nr="354" mi="3" ci="0" mb="0" cb="0"/><line nr="371" mi="3" ci="0" mb="0" cb="0"/><line nr="397" mi="3" ci="0" mb="0" cb="0"/><line nr="420" mi="3" ci="0" mb="0" cb="0"/><line nr="446" mi="3" ci="0" mb="0" cb="0"/><line nr="471" mi="4" ci="0" mb="0" cb="0"/><line nr="491" mi="4" ci="0" mb="0" cb="0"/><line nr="509" mi="4" ci="0" mb="0" cb="0"/><line nr="528" mi="4" ci="0" mb="0" cb="0"/><line nr="547" mi="4" ci="0" mb="0" cb="0"/><line nr="575" mi="4" ci="0" mb="0" cb="0"/><line nr="603" mi="4" ci="0" mb="0" cb="0"/><line nr="629" mi="4" ci="0" mb="0" cb="0"/><line nr="651" mi="2" ci="0" mb="0" cb="0"/><line nr="664" mi="2" ci="0" mb="0" cb="0"/><line nr="683" mi="2" ci="0" mb="0" cb="0"/><line nr="694" mi="2" ci="0" mb="0" cb="0"/><line nr="705" mi="2" ci="0" mb="0" cb="0"/><line nr="716" mi="2" ci="0" mb="0" cb="0"/><line nr="730" mi="0" ci="5" mb="0" cb="0"/><line nr="745" mi="5" ci="0" mb="0" cb="0"/><line nr="756" mi="2" ci="0" mb="0" cb="0"/><line nr="767" mi="2" ci="0" mb="0" cb="0"/><line nr="778" mi="2" ci="0" mb="0" cb="0"/><line nr="789" mi="2" ci="0" mb="0" cb="0"/><line nr="803" mi="5" ci="0" mb="0" cb="0"/><line nr="818" mi="5" ci="0" mb="0" cb="0"/><line nr="829" mi="0" ci="2" mb="0" cb="0"/><line nr="841" mi="6" ci="0" mb="0" cb="0"/><line nr="853" mi="4" ci="0" mb="0" cb="0"/><line nr="865" mi="4" ci="0" mb="0" cb="0"/><line nr="877" mi="4" ci="0" mb="0" cb="0"/><line nr="889" mi="4" ci="0" mb="0" cb="0"/><line nr="901" mi="4" ci="0" mb="0" cb="0"/><line nr="913" mi="4" ci="0" mb="0" cb="0"/><line nr="926" mi="0" ci="6" mb="0" cb="0"/><line nr="938" mi="4" ci="0" mb="0" cb="0"/><line nr="950" mi="4" ci="0" mb="0" cb="0"/><line nr="962" mi="4" ci="0" mb="0" cb="0"/><line nr="974" mi="4" ci="0" mb="0" cb="0"/><line nr="986" mi="4" ci="0" mb="0" cb="0"/><line nr="998" mi="4" ci="0" mb="0" cb="0"/><line nr="1011" mi="0" ci="6" mb="0" cb="0"/><line nr="1023" mi="4" ci="0" mb="0" cb="0"/><line nr="1035" mi="4" ci="0" mb="0" cb="0"/><line nr="1047" mi="4" ci="0" mb="0" cb="0"/><line nr="1059" mi="4" ci="0" mb="0" cb="0"/><line nr="1071" mi="4" ci="0" mb="0" cb="0"/><line nr="1083" mi="4" ci="0" mb="0" cb="0"/><line nr="1097" mi="7" ci="0" mb="0" cb="0"/><line nr="1111" mi="7" ci="0" mb="0" cb="0"/><line nr="1125" mi="7" ci="0" mb="0" cb="0"/><line nr="1139" mi="7" ci="0" mb="0" cb="0"/><line nr="1153" mi="6" ci="0" mb="0" cb="0"/><line nr="1167" mi="6" ci="0" mb="0" cb="0"/><line nr="1181" mi="6" ci="0" mb="0" cb="0"/><line nr="1195" mi="6" ci="0" mb="0" cb="0"/><line nr="1209" mi="0" ci="5" mb="0" cb="0"/><line nr="1222" mi="6" ci="0" mb="0" cb="0"/><line nr="1235" mi="4" ci="0" mb="0" cb="0"/><line nr="1248" mi="4" ci="0" mb="0" cb="0"/><line nr="1261" mi="4" ci="0" mb="0" cb="0"/><line nr="1274" mi="4" ci="0" mb="0" cb="0"/><line nr="1287" mi="4" ci="0" mb="0" cb="0"/><line nr="1300" mi="4" ci="0" mb="0" cb="0"/><line nr="1312" mi="0" ci="6" mb="0" cb="0"/><line nr="1324" mi="4" ci="0" mb="0" cb="0"/><line nr="1336" mi="4" ci="0" mb="0" cb="0"/><line nr="1348" mi="4" ci="0" mb="0" cb="0"/><line nr="1360" mi="4" ci="0" mb="0" cb="0"/><line nr="1372" mi="4" ci="0" mb="0" cb="0"/><line nr="1384" mi="4" ci="0" mb="0" cb="0"/><line nr="1397" mi="0" ci="5" mb="0" cb="0"/><line nr="1414" mi="4" ci="0" mb="0" cb="0"/><line nr="1421" mi="0" ci="2" mb="1" cb="1"/><line nr="1422" mi="2" ci="0" mb="0" cb="0"/><line nr="1424" mi="0" ci="3" mb="1" cb="1"/><line nr="1425" mi="4" ci="0" mb="0" cb="0"/><line nr="1427" mi="0" ci="3" mb="1" cb="1"/><line nr="1428" mi="0" ci="3" mb="0" cb="0"/><line nr="1430" mi="5" ci="0" mb="0" cb="0"/><line nr="1441" mi="0" ci="2" mb="0" cb="0"/><line nr="1442" mi="0" ci="1" mb="0" cb="0"/><line nr="1446" mi="4" ci="0" mb="2" cb="0"/><line nr="1447" mi="2" ci="0" mb="0" cb="0"/><line nr="1449" mi="5" ci="0" mb="0" cb="0"/><line nr="1450" mi="10" ci="0" mb="2" cb="0"/><line nr="1451" mi="2" ci="0" mb="2" cb="0"/><line nr="1452" mi="4" ci="0" mb="2" cb="0"/><line nr="1453" mi="2" ci="0" mb="0" cb="0"/><line nr="1456" mi="1" ci="0" mb="0" cb="0"/><line nr="1457" mi="2" ci="0" mb="0" cb="0"/><line nr="1464" mi="0" ci="2" mb="0" cb="0"/><line nr="1465" mi="0" ci="1" mb="0" cb="0"/><line nr="1469" mi="4" ci="0" mb="2" cb="0"/><line nr="1470" mi="2" ci="0" mb="0" cb="0"/><line nr="1472" mi="5" ci="0" mb="0" cb="0"/><line nr="1473" mi="10" ci="0" mb="2" cb="0"/><line nr="1474" mi="2" ci="0" mb="2" cb="0"/><line nr="1475" mi="4" ci="0" mb="2" cb="0"/><line nr="1476" mi="2" ci="0" mb="0" cb="0"/><line nr="1479" mi="1" ci="0" mb="0" cb="0"/><line nr="1480" mi="2" ci="0" mb="0" cb="0"/><line nr="1487" mi="0" ci="2" mb="0" cb="0"/><line nr="1488" mi="0" ci="1" mb="0" cb="0"/><line nr="1492" mi="3" ci="0" mb="0" cb="0"/><line nr="1493" mi="10" ci="0" mb="2" cb="0"/><line nr="1494" mi="2" ci="0" mb="2" cb="0"/><line nr="1495" mi="4" ci="0" mb="0" cb="0"/><line nr="1497" mi="1" ci="0" mb="0" cb="0"/><line nr="1498" mi="2" ci="0" mb="0" cb="0"/><line nr="1508" mi="0" ci="2" mb="0" cb="0"/><line nr="1509" mi="0" ci="3" mb="0" cb="0"/><line nr="1510" mi="0" ci="3" mb="0" cb="0"/><line nr="1511" mi="0" ci="1" mb="0" cb="0"/><line nr="1514" mi="0" ci="2" mb="0" cb="0"/><line nr="1515" mi="0" ci="3" mb="0" cb="0"/><line nr="1516" mi="0" ci="3" mb="0" cb="0"/><line nr="1517" mi="0" ci="3" mb="0" cb="0"/><line nr="1518" mi="0" ci="1" mb="0" cb="0"/><line nr="1521" mi="2" ci="0" mb="0" cb="0"/><line nr="1522" mi="3" ci="0" mb="0" cb="0"/><line nr="1523" mi="3" ci="0" mb="0" cb="0"/><line nr="1524" mi="3" ci="0" mb="0" cb="0"/><line nr="1525" mi="1" ci="0" mb="0" cb="0"/><line nr="1530" mi="0" ci="2" mb="0" cb="0"/><line nr="1531" mi="0" ci="3" mb="0" cb="0"/><line nr="1532" mi="0" ci="10" mb="0" cb="2"/><line nr="1533" mi="0" ci="2" mb="1" cb="1"/><line nr="1534" mi="0" ci="7" mb="0" cb="0"/><line nr="1535" mi="0" ci="1" mb="0" cb="0"/><line nr="1537" mi="0" ci="1" mb="0" cb="0"/><line nr="1538" mi="0" ci="3" mb="1" cb="1"/><line nr="1539" mi="0" ci="13" mb="0" cb="0"/><line nr="1541" mi="3" ci="0" mb="2" cb="0"/><line nr="1542" mi="14" ci="0" mb="0" cb="0"/><line nr="1544" mi="11" ci="0" mb="0" cb="0"/><line nr="1560" mi="0" ci="2" mb="0" cb="0"/><line nr="1561" mi="0" ci="1" mb="0" cb="0"/><line nr="1565" mi="3" ci="0" mb="2" cb="0"/><line nr="1566" mi="2" ci="0" mb="0" cb="0"/><line nr="1568" mi="4" ci="0" mb="0" cb="0"/><line nr="1569" mi="16" ci="0" mb="2" cb="0"/><line nr="1570" mi="2" ci="0" mb="2" cb="0"/><line nr="1571" mi="4" ci="0" mb="2" cb="0"/><line nr="1572" mi="2" ci="0" mb="0" cb="0"/><line nr="1576" mi="2" ci="0" mb="0" cb="0"/><line nr="1583" mi="0" ci="2" mb="0" cb="0"/><line nr="1584" mi="0" ci="1" mb="0" cb="0"/><line nr="1588" mi="3" ci="0" mb="2" cb="0"/><line nr="1589" mi="2" ci="0" mb="0" cb="0"/><line nr="1591" mi="4" ci="0" mb="0" cb="0"/><line nr="1592" mi="16" ci="0" mb="2" cb="0"/><line nr="1593" mi="2" ci="0" mb="2" cb="0"/><line nr="1594" mi="4" ci="0" mb="2" cb="0"/><line nr="1595" mi="2" ci="0" mb="0" cb="0"/><line nr="1599" mi="2" ci="0" mb="0" cb="0"/><line nr="1606" mi="0" ci="2" mb="0" cb="0"/><line nr="1607" mi="0" ci="1" mb="0" cb="0"/><line nr="1611" mi="3" ci="0" mb="0" cb="0"/><line nr="1612" mi="16" ci="0" mb="2" cb="0"/><line nr="1613" mi="2" ci="0" mb="2" cb="0"/><line nr="1614" mi="4" ci="0" mb="0" cb="0"/><line nr="1617" mi="2" ci="0" mb="0" cb="0"/><line nr="1627" mi="0" ci="2" mb="0" cb="0"/><line nr="1628" mi="0" ci="3" mb="0" cb="0"/><line nr="1629" mi="0" ci="3" mb="0" cb="0"/><line nr="1630" mi="0" ci="1" mb="0" cb="0"/><line nr="1633" mi="2" ci="0" mb="0" cb="0"/><line nr="1634" mi="3" ci="0" mb="0" cb="0"/><line nr="1635" mi="3" ci="0" mb="0" cb="0"/><line nr="1636" mi="3" ci="0" mb="0" cb="0"/><line nr="1637" mi="1" ci="0" mb="0" cb="0"/><line nr="1640" mi="2" ci="0" mb="0" cb="0"/><line nr="1641" mi="3" ci="0" mb="0" cb="0"/><line nr="1642" mi="3" ci="0" mb="0" cb="0"/><line nr="1643" mi="3" ci="0" mb="0" cb="0"/><line nr="1644" mi="1" ci="0" mb="0" cb="0"/><line nr="1649" mi="2" ci="0" mb="0" cb="0"/><line nr="1650" mi="3" ci="0" mb="0" cb="0"/><line nr="1651" mi="16" ci="0" mb="2" cb="0"/><line nr="1652" mi="2" ci="0" mb="2" cb="0"/><line nr="1653" mi="7" ci="0" mb="0" cb="0"/><line nr="1654" mi="1" ci="0" mb="0" cb="0"/><line nr="1657" mi="3" ci="0" mb="2" cb="0"/><line nr="1658" mi="13" ci="0" mb="0" cb="0"/><line nr="1660" mi="3" ci="0" mb="2" cb="0"/><line nr="1661" mi="14" ci="0" mb="0" cb="0"/><line nr="1663" mi="11" ci="0" mb="0" cb="0"/><line nr="1678" mi="0" ci="2" mb="0" cb="0"/><line nr="1679" mi="0" ci="1" mb="0" cb="0"/><line nr="1683" mi="0" ci="3" mb="0" cb="0"/><line nr="1692" mi="2" ci="0" mb="0" cb="0"/><line nr="1693" mi="3" ci="0" mb="0" cb="0"/><line nr="1694" mi="3" ci="0" mb="0" cb="0"/><line nr="1695" mi="1" ci="0" mb="0" cb="0"/><line nr="1699" mi="2" ci="0" mb="0" cb="0"/><line nr="1700" mi="5" ci="0" mb="0" cb="0"/><line nr="1702" mi="2" ci="0" mb="0" cb="0"/><line nr="1711" mi="0" ci="2" mb="0" cb="0"/><line nr="1712" mi="0" ci="3" mb="0" cb="0"/><line nr="1713" mi="0" ci="3" mb="0" cb="0"/><line nr="1714" mi="0" ci="3" mb="0" cb="0"/><line nr="1715" mi="0" ci="1" mb="0" cb="0"/><line nr="1719" mi="0" ci="2" mb="0" cb="0"/><line nr="1720" mi="0" ci="5" mb="0" cb="0"/><line nr="1722" mi="0" ci="2" mb="0" cb="0"/><line nr="1733" mi="0" ci="2" mb="0" cb="0"/><line nr="1734" mi="0" ci="3" mb="0" cb="0"/><line nr="1735" mi="0" ci="3" mb="0" cb="0"/><line nr="1736" mi="0" ci="3" mb="0" cb="0"/><line nr="1737" mi="0" ci="3" mb="0" cb="0"/><line nr="1738" mi="0" ci="1" mb="0" cb="0"/><line nr="1741" mi="2" ci="0" mb="0" cb="0"/><line nr="1742" mi="3" ci="0" mb="0" cb="0"/><line nr="1743" mi="3" ci="0" mb="0" cb="0"/><line nr="1744" mi="3" ci="0" mb="0" cb="0"/><line nr="1745" mi="3" ci="0" mb="0" cb="0"/><line nr="1746" mi="3" ci="0" mb="0" cb="0"/><line nr="1747" mi="1" ci="0" mb="0" cb="0"/><line nr="1750" mi="2" ci="0" mb="0" cb="0"/><line nr="1751" mi="3" ci="0" mb="0" cb="0"/><line nr="1752" mi="3" ci="0" mb="0" cb="0"/><line nr="1753" mi="3" ci="0" mb="0" cb="0"/><line nr="1754" mi="3" ci="0" mb="0" cb="0"/><line nr="1755" mi="3" ci="0" mb="0" cb="0"/><line nr="1756" mi="1" ci="0" mb="0" cb="0"/><line nr="1760" mi="0" ci="5" mb="0" cb="0"/><line nr="1762" mi="0" ci="3" mb="1" cb="1"/><line nr="1763" mi="15" ci="0" mb="0" cb="0"/><line nr="1764" mi="0" ci="3" mb="1" cb="1"/><line nr="1765" mi="16" ci="0" mb="0" cb="0"/><line nr="1767" mi="0" ci="13" mb="0" cb="0"/><line nr="1779" mi="0" ci="2" mb="0" cb="0"/><line nr="1780" mi="0" ci="3" mb="0" cb="0"/><line nr="1781" mi="0" ci="1" mb="0" cb="0"/><line nr="1785" mi="0" ci="5" mb="0" cb="0"/><line nr="1794" mi="2" ci="0" mb="0" cb="0"/><line nr="1795" mi="3" ci="0" mb="0" cb="0"/><line nr="1796" mi="1" ci="0" mb="0" cb="0"/><line nr="1800" mi="5" ci="0" mb="0" cb="0"/><line nr="1809" mi="0" ci="2" mb="0" cb="0"/><line nr="1810" mi="0" ci="3" mb="0" cb="0"/><line nr="1811" mi="0" ci="3" mb="0" cb="0"/><line nr="1812" mi="0" ci="1" mb="0" cb="0"/><line nr="1816" mi="0" ci="2" mb="0" cb="0"/><line nr="1817" mi="0" ci="5" mb="0" cb="0"/><line nr="1818" mi="0" ci="2" mb="0" cb="0"/><line nr="1827" mi="0" ci="2" mb="0" cb="0"/><line nr="1828" mi="0" ci="3" mb="0" cb="0"/><line nr="1829" mi="0" ci="1" mb="0" cb="0"/><line nr="1833" mi="0" ci="2" mb="0" cb="0"/><line nr="1834" mi="0" ci="5" mb="0" cb="0"/><line nr="1835" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="768" covered="283"/><counter type="BRANCH" missed="57" covered="9"/><counter type="LINE" missed="194" covered="92"/><counter type="COMPLEXITY" missed="137" covered="32"/><counter type="METHOD" missed="105" covered="31"/><counter type="CLASS" missed="2" covered="15"/></sourcefile><sourcefile name="DateStyle.java"><line nr="32" mi="24" ci="0" mb="0" cb="0"/><line nr="33" mi="12" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="12" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="12" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="12" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="90" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="5" covered="0"/></sourcefile><sourcefile name="AbstractNullAsNullFunction.java"><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="2"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IFunction.java"/><sourcefile name="AbstractNotNullFunction.java"><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="1" cb="1"/><line nr="49" mi="8" ci="0" mb="0" cb="0"/><line nr="50" mi="8" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="24343" covered="8778"/><counter type="BRANCH" missed="1495" covered="365"/><counter type="LINE" missed="5949" covered="2390"/><counter type="COMPLEXITY" missed="3481" covered="791"/><counter type="METHOD" missed="2642" covered="695"/><counter type="CLASS" missed="231" covered="283"/></package><package name="org/op4j/operators/impl/op/generic"><class name="org/op4j/operators/impl/op/generic/Level0GenericUniqSelectedOperator" sourcefilename="Level0GenericUniqSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="39"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqSelectedOperator;" line="44"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqSelectedOperator;" line="49"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/lang/Object;" line="54"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="24"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/operators/impl/op/generic/Level0GenericUniqOperator" sourcefilename="Level0GenericUniqOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intoSingletonArrayOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="60"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intoSingletonList" desc="()Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="65"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zipKeyBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="71"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValueBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="77"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKey" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="83"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zipValue" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="89"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intoSingletonMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="95"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intoSingletonSet" desc="()Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="100"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="castToArrayOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="105"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToListOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="110"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToMapOf" desc="(Lorg/javaruntype/type/Type;Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="115"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="castToSetOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="120"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castTo" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="125"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/lang/Object;" line="162"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqSelectedOperator;" line="169"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqSelectedOperator;" line="174"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/op/generic/Level0GenericUniqSelectedOperator;" line="179"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/op/generic/Level0GenericUniqSelectedOperator;" line="190"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="202"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="207"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceIfNullWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="212"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="221"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="226"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="231"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="236"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="241"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="246"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="251"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="256"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="235" covered="89"/><counter type="LINE" missed="21" covered="10"/><counter type="COMPLEXITY" missed="21" covered="9"/><counter type="METHOD" missed="21" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Level0GenericUniqOperator.java"><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="10" mb="0" cb="0"/><line nr="65" mi="0" ci="9" mb="0" cb="0"/><line nr="71" mi="13" ci="0" mb="0" cb="0"/><line nr="77" mi="13" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="18" mb="0" cb="0"/><line nr="89" mi="18" ci="0" mb="0" cb="0"/><line nr="95" mi="13" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="9" mb="0" cb="0"/><line nr="105" mi="15" ci="0" mb="0" cb="0"/><line nr="110" mi="14" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="18" mb="0" cb="0"/><line nr="120" mi="14" ci="0" mb="0" cb="0"/><line nr="125" mi="14" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="8" mb="0" cb="0"/><line nr="174" mi="8" ci="0" mb="0" cb="0"/><line nr="179" mi="7" ci="0" mb="0" cb="0"/><line nr="190" mi="7" ci="0" mb="0" cb="0"/><line nr="202" mi="0" ci="9" mb="0" cb="0"/><line nr="207" mi="9" ci="0" mb="0" cb="0"/><line nr="212" mi="6" ci="0" mb="0" cb="0"/><line nr="221" mi="11" ci="0" mb="0" cb="0"/><line nr="226" mi="11" ci="0" mb="0" cb="0"/><line nr="231" mi="10" ci="0" mb="0" cb="0"/><line nr="236" mi="10" ci="0" mb="0" cb="0"/><line nr="241" mi="10" ci="0" mb="0" cb="0"/><line nr="246" mi="10" ci="0" mb="0" cb="0"/><line nr="251" mi="11" ci="0" mb="0" cb="0"/><line nr="256" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="235" covered="89"/><counter type="LINE" missed="21" covered="10"/><counter type="COMPLEXITY" missed="21" covered="9"/><counter type="METHOD" missed="21" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Level0GenericUniqSelectedOperator.java"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="9" mb="0" cb="0"/><line nr="49" mi="9" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="24"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="244" covered="113"/><counter type="LINE" missed="22" covered="15"/><counter type="COMPLEXITY" missed="22" covered="13"/><counter type="METHOD" missed="22" covered="13"/><counter type="CLASS" missed="0" covered="2"/></package><package name="org/op4j/target"><class name="org/op4j/target/ExecutionTargetExecuteIfOperation" sourcefilename="ExecutionTargetExecuteIfOperation.java"><method name="&lt;init&gt;" desc="(ZLorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/target/Target$Normalisation;)V" line="54"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/Object;[[Lorg/op4j/target/ExecutionTargetOperation;Ljava/lang/Integer;)Ljava/lang/Object;" line="67"><counter type="INSTRUCTION" missed="107" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="125" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="40" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/target/ExecutionTargetOperation" sourcefilename="ExecutionTargetOperation.java"/><class name="org/op4j/target/ExecutionTargetSelectNotNullAndMatchingOperation" sourcefilename="ExecutionTargetSelectNotNullAndMatchingOperation.java"><method name="&lt;init&gt;" desc="(IZLorg/op4j/functions/IFunction;)V" line="43"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/Object;[[Lorg/op4j/target/ExecutionTargetOperation;Ljava/lang/Integer;)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="76" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/target/ExecutionTargetExecuteOperation" sourcefilename="ExecutionTargetExecuteOperation.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/target/Target$Normalisation;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;[[Lorg/op4j/target/ExecutionTargetOperation;Ljava/lang/Integer;)Ljava/lang/Object;" line="61"><counter type="INSTRUCTION" missed="52" covered="21"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="17" covered="5"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="52" covered="30"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="17" covered="9"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/target/ExecutionTarget" sourcefilename="ExecutionTarget.java"><method name="forFn" desc="(Lorg/op4j/target/Target$Normalisation;)Lorg/op4j/target/ExecutionTarget;" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forOp" desc="(Ljava/lang/Object;Lorg/op4j/target/Target$Normalisation;)Lorg/op4j/target/ExecutionTarget;" line="61"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cloneOperations" desc="([[Lorg/op4j/target/ExecutionTargetOperation;)[[Lorg/op4j/target/ExecutionTargetOperation;" line="69"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normaliseTarget" desc="(Ljava/lang/Object;Lorg/op4j/target/Target$Normalisation;)Ljava/lang/Object;" line="83"><counter type="INSTRUCTION" missed="5" covered="35"/><counter type="BRANCH" missed="2" covered="5"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addOperation" desc="([[Lorg/op4j/target/ExecutionTargetOperation;ILorg/op4j/target/ExecutionTargetOperation;)[[Lorg/op4j/target/ExecutionTargetOperation;" line="116"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addOperationAndBlockLevel" desc="([[Lorg/op4j/target/ExecutionTargetOperation;ILorg/op4j/target/ExecutionTargetOperation;)[[Lorg/op4j/target/ExecutionTargetOperation;" line="139"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addPreviousBlockLevelRelation" desc="([II)[I" line="161"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target$Normalisation;)V" line="175"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lorg/op4j/target/Target$Normalisation;)V" line="194"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lorg/op4j/target/Target$Normalisation;I[[Lorg/op4j/target/ExecutionTargetOperation;[I)V" line="218"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doEndIterate" desc="(Ljava/lang/Class;)Lorg/op4j/target/Target;" line="234"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doEndOn" desc="()Lorg/op4j/target/Target;" line="251"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doEndSelect" desc="()Lorg/op4j/target/Target;" line="263"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doExecute" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/target/Target$Normalisation;)Lorg/op4j/target/Target;" line="276"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doExecuteIfNull" desc="(ZLorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/target/Target$Normalisation;)Lorg/op4j/target/Target;" line="291"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doExecuteIf" desc="(ZLorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/target/Target$Normalisation;)Lorg/op4j/target/Target;" line="306"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doExecuteIfIndex" desc="(Z[ILorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/target/Target$Normalisation;)Lorg/op4j/target/Target;" line="319"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doIterate" desc="(Lorg/op4j/target/Target$Structure;)Lorg/op4j/target/Target;" line="333"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doOnKey" desc="()Lorg/op4j/target/Target;" line="350"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doOnValue" desc="()Lorg/op4j/target/Target;" line="367"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doReplaceWith" desc="(Ljava/lang/Object;Lorg/op4j/target/Target$Normalisation;)Lorg/op4j/target/Target;" line="384"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doSelectIndex" desc="(ZLjava/util/List;)Lorg/op4j/target/Target;" line="399"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doSelectMapKeys" desc="(ZLjava/util/List;)Lorg/op4j/target/Target;" line="416"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doSelectMatching" desc="(ZLorg/op4j/functions/IFunction;)Lorg/op4j/target/Target;" line="433"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doSelectNotNullAndMatching" desc="(ZLorg/op4j/functions/IFunction;)Lorg/op4j/target/Target;" line="450"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doSelectNull" desc="(Z)Lorg/op4j/target/Target;" line="467"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doSelectNullOrMatching" desc="(ZLorg/op4j/functions/IFunction;)Lorg/op4j/target/Target;" line="484"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCast" desc="(Lorg/op4j/target/Target$CastType;[Lorg/javaruntype/type/Type;)Lorg/op4j/target/Target;" line="502"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doMap" desc="(Lorg/op4j/target/Target$Structure;Lorg/op4j/functions/IFunction;Ljava/lang/Class;)Lorg/op4j/target/Target;" line="516"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doMapIfNull" desc="(ZLorg/op4j/target/Target$Structure;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Ljava/lang/Class;)Lorg/op4j/target/Target;" line="530"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doMapIf" desc="(ZLorg/op4j/target/Target$Structure;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Ljava/lang/Class;)Lorg/op4j/target/Target;" line="544"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/lang/Object;" line="559"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="565"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doExecute" desc="(Ljava/lang/Object;Lorg/op4j/target/Target$Normalisation;[[Lorg/op4j/target/ExecutionTargetOperation;)Ljava/lang/Object;" line="572"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="348" covered="687"/><counter type="BRANCH" missed="2" covered="23"/><counter type="LINE" missed="63" covered="129"/><counter type="COMPLEXITY" missed="13" covered="36"/><counter type="METHOD" missed="11" covered="23"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/target/ExecutionTargetIterateOpenOperation" sourcefilename="ExecutionTargetIterateOpenOperation.java"><method name="&lt;init&gt;" desc="(ILorg/op4j/target/Target$Structure;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="(Ljava/lang/Class;)Lorg/op4j/target/ExecutionTargetIterateClosedOperation;" line="48"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;[[Lorg/op4j/target/ExecutionTargetOperation;Ljava/lang/Integer;)Ljava/lang/Object;" line="54"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="18"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/target/ExecutionTargetOnKeyOperation" sourcefilename="ExecutionTargetOnKeyOperation.java"><method name="&lt;init&gt;" desc="(I)V" line="41"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/Object;[[Lorg/op4j/target/ExecutionTargetOperation;Ljava/lang/Integer;)Ljava/lang/Object;" line="48"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/target/Target" sourcefilename="Target.java"><method name="&lt;init&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="map" desc="(Lorg/op4j/target/Target$Structure;Lorg/op4j/functions/IFunction;Ljava/lang/Class;)Lorg/op4j/target/Target;" line="75"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapIfNotNull" desc="(Lorg/op4j/target/Target$Structure;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Ljava/lang/Class;)Lorg/op4j/target/Target;" line="80"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNull" desc="(Lorg/op4j/target/Target$Structure;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Ljava/lang/Class;)Lorg/op4j/target/Target;" line="85"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfTrue" desc="(Lorg/op4j/target/Target$Structure;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Ljava/lang/Class;)Lorg/op4j/target/Target;" line="90"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapIfFalse" desc="(Lorg/op4j/target/Target$Structure;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Ljava/lang/Class;)Lorg/op4j/target/Target;" line="96"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cast" desc="(Lorg/op4j/target/Target$CastType;[Lorg/javaruntype/type/Type;)Lorg/op4j/target/Target;" line="104"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterate" desc="(Lorg/op4j/target/Target$Structure;)Lorg/op4j/target/Target;" line="108"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onKey" desc="()Lorg/op4j/target/Target;" line="112"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onValue" desc="()Lorg/op4j/target/Target;" line="116"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endOn" desc="()Lorg/op4j/target/Target;" line="121"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIterate" desc="(Ljava/lang/Class;)Lorg/op4j/target/Target;" line="129"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endSelect" desc="()Lorg/op4j/target/Target;" line="137"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selectIndex" desc="([I)Lorg/op4j/target/Target;" line="142"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="selectIndexNot" desc="([I)Lorg/op4j/target/Target;" line="147"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="selectMapKeys" desc="([Ljava/lang/Object;)Lorg/op4j/target/Target;" line="152"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="selectMapKeysNot" desc="([Ljava/lang/Object;)Lorg/op4j/target/Target;" line="157"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="selectMatching" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/target/Target;" line="163"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selectNotMatching" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/target/Target;" line="170"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="selectNull" desc="()Lorg/op4j/target/Target;" line="176"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selectNotNull" desc="()Lorg/op4j/target/Target;" line="181"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selectNullOrMatching" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/target/Target;" line="187"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="selectNullOrNotMatching" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/target/Target;" line="194"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="selectNotNullAndMatching" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/target/Target;" line="201"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="selectNotNullAndNotMatching" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/target/Target;" line="208"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;Lorg/op4j/target/Target$Normalisation;)Lorg/op4j/target/Target;" line="218"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/target/Target;" line="229"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/target/Target$Normalisation;)Lorg/op4j/target/Target;" line="234"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="executeIfNotNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/target/Target$Normalisation;)Lorg/op4j/target/Target;" line="240"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeIfNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/target/Target$Normalisation;)Lorg/op4j/target/Target;" line="246"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/target/Target$Normalisation;)Lorg/op4j/target/Target;" line="252"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/target/Target$Normalisation;)Lorg/op4j/target/Target;" line="259"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeIfIndex" desc="([ILorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/target/Target$Normalisation;)Lorg/op4j/target/Target;" line="266"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeIfIndexNot" desc="([ILorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/target/Target$Normalisation;)Lorg/op4j/target/Target;" line="273"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="186" covered="80"/><counter type="LINE" missed="40" covered="20"/><counter type="COMPLEXITY" missed="21" covered="13"/><counter type="METHOD" missed="21" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/target/ExecutionTargetMapOperation" sourcefilename="ExecutionTargetMapOperation.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target$Structure;Lorg/op4j/functions/IFunction;Ljava/lang/Class;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;[[Lorg/op4j/target/ExecutionTargetOperation;Ljava/lang/Integer;)Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="65" covered="76"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="12" covered="18"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="65" covered="88"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="12" covered="23"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/target/ExecutionTargetMapIfOperation" sourcefilename="ExecutionTargetMapIfOperation.java"><method name="&lt;init&gt;" desc="(ZLorg/op4j/target/Target$Structure;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Ljava/lang/Class;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;[[Lorg/op4j/target/ExecutionTargetOperation;Ljava/lang/Integer;)Ljava/lang/Object;" line="70"><counter type="INSTRUCTION" missed="157" covered="65"/><counter type="BRANCH" missed="17" covered="7"/><counter type="LINE" missed="30" covered="15"/><counter type="COMPLEXITY" missed="11" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="157" covered="86"/><counter type="BRANCH" missed="17" covered="7"/><counter type="LINE" missed="30" covered="23"/><counter type="COMPLEXITY" missed="11" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/target/ExecutionTargetSelectNullOperation" sourcefilename="ExecutionTargetSelectNullOperation.java"><method name="&lt;init&gt;" desc="(IZ)V" line="39"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;[[Lorg/op4j/target/ExecutionTargetOperation;Ljava/lang/Integer;)Ljava/lang/Object;" line="48"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/target/ExecutionTargetCastOperation" sourcefilename="ExecutionTargetCastOperation.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target$CastType;[Lorg/javaruntype/type/Type;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;[[Lorg/op4j/target/ExecutionTargetOperation;Ljava/lang/Integer;)Ljava/lang/Object;" line="58"><counter type="INSTRUCTION" missed="69" covered="37"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="14" covered="8"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="69" covered="46"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="14" covered="12"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/target/ExecutionTargetSelectMapKeysOperation" sourcefilename="ExecutionTargetSelectMapKeysOperation.java"><method name="&lt;init&gt;" desc="(IZLjava/util/List;)V" line="42"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/Object;[[Lorg/op4j/target/ExecutionTargetOperation;Ljava/lang/Integer;)Ljava/lang/Object;" line="52"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/target/ExecutionTargetMapIfNullOperation" sourcefilename="ExecutionTargetMapIfNullOperation.java"><method name="&lt;init&gt;" desc="(ZLorg/op4j/target/Target$Structure;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Ljava/lang/Class;)V" line="54"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/Object;[[Lorg/op4j/target/ExecutionTargetOperation;Ljava/lang/Integer;)Ljava/lang/Object;" line="67"><counter type="INSTRUCTION" missed="216" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="36" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="234" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="43" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/target/Target$CastType" sourcefilename="Target.java"><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/target/ExecutionTargetReplaceWithOperation" sourcefilename="ExecutionTargetReplaceWithOperation.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lorg/op4j/target/Target$Normalisation;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;[[Lorg/op4j/target/ExecutionTargetOperation;Ljava/lang/Integer;)Ljava/lang/Object;" line="57"><counter type="INSTRUCTION" missed="34" covered="24"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="12" covered="6"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="34" covered="33"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="12" covered="10"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/target/Target$Normalisation" sourcefilename="Target.java"><method name="ARRAY" desc="(Ljava/lang/Class;)Lorg/op4j/target/Target$Normalisation;" line="307"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target$Normalisation$NormalisationType;Ljava/lang/Class;)V" line="312"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNormalisationType" desc="()Lorg/op4j/target/Target$Normalisation$NormalisationType;" line="318"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArrayComponentClass" desc="()Ljava/lang/Class;" line="322"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="292"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/target/ExecutionTargetSelectNullOrMatchingOperation" sourcefilename="ExecutionTargetSelectNullOrMatchingOperation.java"><method name="&lt;init&gt;" desc="(IZLorg/op4j/functions/IFunction;)V" line="43"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/Object;[[Lorg/op4j/target/ExecutionTargetOperation;Ljava/lang/Integer;)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="90" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="102" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/target/ExecutionTargetExecuteIfIndexOperation" sourcefilename="ExecutionTargetExecuteIfIndexOperation.java"><method name="&lt;init&gt;" desc="(Z[ILorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/target/Target$Normalisation;)V" line="55"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/Object;[[Lorg/op4j/target/ExecutionTargetOperation;Ljava/lang/Integer;)Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="102" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="120" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="38" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/target/ExecutionTargetOnValueOperation" sourcefilename="ExecutionTargetOnValueOperation.java"><method name="&lt;init&gt;" desc="(I)V" line="41"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/Object;[[Lorg/op4j/target/ExecutionTargetOperation;Ljava/lang/Integer;)Ljava/lang/Object;" line="48"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/target/ExecutionTargetExecuteIfNullOperation" sourcefilename="ExecutionTargetExecuteIfNullOperation.java"><method name="&lt;init&gt;" desc="(ZLorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/target/Target$Normalisation;)V" line="52"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/Object;[[Lorg/op4j/target/ExecutionTargetOperation;Ljava/lang/Integer;)Ljava/lang/Object;" line="64"><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="106" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/target/ExecutionTargetIterateClosedOperation" sourcefilename="ExecutionTargetIterateClosedOperation.java"><method name="&lt;init&gt;" desc="(ILorg/op4j/target/Target$Structure;Ljava/lang/Class;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;[[Lorg/op4j/target/ExecutionTargetOperation;Ljava/lang/Integer;)Ljava/lang/Object;" line="59"><counter type="INSTRUCTION" missed="108" covered="171"/><counter type="BRANCH" missed="13" covered="16"/><counter type="LINE" missed="23" covered="33"/><counter type="COMPLEXITY" missed="8" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="108" covered="183"/><counter type="BRANCH" missed="13" covered="16"/><counter type="LINE" missed="23" covered="38"/><counter type="COMPLEXITY" missed="8" covered="10"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/target/ExecutionTargetSelectMatchingOperation" sourcefilename="ExecutionTargetSelectMatchingOperation.java"><method name="&lt;init&gt;" desc="(IZLorg/op4j/functions/IFunction;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/Object;[[Lorg/op4j/target/ExecutionTargetOperation;Ljava/lang/Integer;)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="6" covered="54"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="66"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/target/ExecutionTargetSelectIndexOperation" sourcefilename="ExecutionTargetSelectIndexOperation.java"><method name="&lt;init&gt;" desc="(IZLjava/util/List;)V" line="41"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/lang/Object;[[Lorg/op4j/target/ExecutionTargetOperation;Ljava/lang/Integer;)Ljava/lang/Object;" line="51"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/target/Target$Structure" sourcefilename="Target.java"><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/target/Target$Normalisation$NormalisationType" sourcefilename="Target.java"><method name="&lt;clinit&gt;" desc="()V" line="288"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ExecutionTargetSelectIndexOperation.java"><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="7" ci="0" mb="2" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="13" ci="0" mb="2" cb="0"/><line nr="54" mi="11" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ExecutionTargetSelectMatchingOperation.java"><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="10" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="11" mb="1" cb="5"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="13" mb="0" cb="2"/><line nr="64" mi="0" ci="11" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="66"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExecutionTargetCastOperation.java"><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="5" cb="1"/><line nr="63" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="6" ci="0" mb="0" cb="0"/><line nr="69" mi="6" ci="0" mb="0" cb="0"/><line nr="70" mi="10" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="75" mi="6" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="10" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="6" ci="0" mb="0" cb="0"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="69" covered="46"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="14" covered="12"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExecutionTargetExecuteIfNullOperation.java"><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="8" ci="0" mb="4" cb="0"/><line nr="67" mi="3" ci="0" mb="2" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="8" ci="0" mb="0" cb="0"/><line nr="75" mi="7" ci="0" mb="6" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="8" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="106" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ExecutionTargetIterateClosedOperation.java"><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="1" cb="1"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="2" cb="3"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="10" mb="0" cb="2"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="13" mb="0" cb="2"/><line nr="75" mi="0" ci="12" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="9" mb="0" cb="2"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="13" mb="0" cb="2"/><line nr="89" mi="0" ci="12" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="11" ci="0" mb="2" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="13" ci="0" mb="2" cb="0"/><line nr="105" mi="12" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="2" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="2" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="9" ci="0" mb="2" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="7" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="9" mb="0" cb="2"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="13" mb="0" cb="2"/><line nr="133" mi="0" ci="12" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="108" covered="183"/><counter type="BRANCH" missed="13" covered="16"/><counter type="LINE" missed="23" covered="38"/><counter type="COMPLEXITY" missed="8" covered="10"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExecutionTargetMapIfNullOperation.java"><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="2" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="6" ci="0" mb="4" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="10" ci="0" mb="2" cb="0"/><line nr="85" mi="27" ci="0" mb="6" cb="0"/><line nr="89" mi="12" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="9" ci="0" mb="2" cb="0"/><line nr="100" mi="22" ci="0" mb="6" cb="0"/><line nr="104" mi="10" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="9" ci="0" mb="2" cb="0"/><line nr="117" mi="22" ci="0" mb="6" cb="0"/><line nr="121" mi="10" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="1" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="13" ci="0" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="234" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="43" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ExecutionTargetSelectNotNullAndMatchingOperation.java"><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="2" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="10" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="11" ci="0" mb="6" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="13" ci="0" mb="2" cb="0"/><line nr="68" mi="11" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="76" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ExecutionTargetSelectNullOperation.java"><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="4"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="13" mb="0" cb="2"/><line nr="51" mi="0" ci="11" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExecutionTarget.java"><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="10" mb="0" cb="2"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="2" cb="5"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="10" mb="0" cb="2"/><line nr="118" mi="0" ci="3" mb="0" cb="2"/><line nr="119" mi="0" ci="10" mb="0" cb="0"/><line nr="121" mi="0" ci="12" mb="0" cb="2"/><line nr="122" mi="0" ci="10" mb="0" cb="0"/><line nr="124" mi="0" ci="10" mb="0" cb="0"/><line nr="126" mi="0" ci="8" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="10" mb="0" cb="2"/><line nr="141" mi="0" ci="3" mb="0" cb="2"/><line nr="142" mi="0" ci="10" mb="0" cb="0"/><line nr="144" mi="0" ci="12" mb="0" cb="2"/><line nr="145" mi="0" ci="10" mb="0" cb="0"/><line nr="147" mi="0" ci="10" mb="0" cb="0"/><line nr="149" mi="0" ci="8" mb="0" cb="0"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="10" mb="0" cb="2"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="7" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="7" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="1" mb="0" cb="0"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="0" ci="6" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="9" mb="0" cb="0"/><line nr="239" mi="0" ci="8" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="12" mb="0" cb="0"/><line nr="251" mi="6" ci="0" mb="0" cb="0"/><line nr="252" mi="4" ci="0" mb="0" cb="0"/><line nr="254" mi="12" ci="0" mb="0" cb="0"/><line nr="263" mi="0" ci="6" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="266" mi="0" ci="12" mb="0" cb="0"/><line nr="276" mi="0" ci="6" mb="0" cb="0"/><line nr="278" mi="0" ci="5" mb="0" cb="0"/><line nr="279" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="0" ci="13" mb="0" cb="0"/><line nr="291" mi="8" ci="0" mb="0" cb="0"/><line nr="293" mi="5" ci="0" mb="0" cb="0"/><line nr="294" mi="2" ci="0" mb="0" cb="0"/><line nr="296" mi="13" ci="0" mb="0" cb="0"/><line nr="306" mi="9" ci="0" mb="0" cb="0"/><line nr="308" mi="5" ci="0" mb="0" cb="0"/><line nr="309" mi="2" ci="0" mb="0" cb="0"/><line nr="311" mi="13" ci="0" mb="0" cb="0"/><line nr="319" mi="9" ci="0" mb="0" cb="0"/><line nr="321" mi="5" ci="0" mb="0" cb="0"/><line nr="322" mi="2" ci="0" mb="0" cb="0"/><line nr="324" mi="13" ci="0" mb="0" cb="0"/><line nr="333" mi="0" ci="4" mb="0" cb="0"/><line nr="334" mi="0" ci="6" mb="0" cb="0"/><line nr="336" mi="0" ci="5" mb="0" cb="0"/><line nr="337" mi="0" ci="2" mb="0" cb="0"/><line nr="338" mi="0" ci="4" mb="0" cb="0"/><line nr="339" mi="0" ci="2" mb="0" cb="0"/><line nr="341" mi="0" ci="11" mb="0" cb="0"/><line nr="350" mi="4" ci="0" mb="0" cb="0"/><line nr="351" mi="5" ci="0" mb="0" cb="0"/><line nr="353" mi="5" ci="0" mb="0" cb="0"/><line nr="354" mi="2" ci="0" mb="0" cb="0"/><line nr="355" mi="4" ci="0" mb="0" cb="0"/><line nr="356" mi="2" ci="0" mb="0" cb="0"/><line nr="358" mi="11" ci="0" mb="0" cb="0"/><line nr="367" mi="4" ci="0" mb="0" cb="0"/><line nr="368" mi="5" ci="0" mb="0" cb="0"/><line nr="370" mi="5" ci="0" mb="0" cb="0"/><line nr="371" mi="2" ci="0" mb="0" cb="0"/><line nr="372" mi="4" ci="0" mb="0" cb="0"/><line nr="373" mi="2" ci="0" mb="0" cb="0"/><line nr="375" mi="11" ci="0" mb="0" cb="0"/><line nr="384" mi="0" ci="6" mb="0" cb="0"/><line nr="386" mi="0" ci="5" mb="0" cb="0"/><line nr="387" mi="0" ci="2" mb="0" cb="0"/><line nr="389" mi="0" ci="13" mb="0" cb="0"/><line nr="399" mi="4" ci="0" mb="0" cb="0"/><line nr="400" mi="7" ci="0" mb="0" cb="0"/><line nr="402" mi="5" ci="0" mb="0" cb="0"/><line nr="403" mi="2" ci="0" mb="0" cb="0"/><line nr="404" mi="4" ci="0" mb="0" cb="0"/><line nr="405" mi="2" ci="0" mb="0" cb="0"/><line nr="407" mi="11" ci="0" mb="0" cb="0"/><line nr="416" mi="4" ci="0" mb="0" cb="0"/><line nr="417" mi="7" ci="0" mb="0" cb="0"/><line nr="419" mi="5" ci="0" mb="0" cb="0"/><line nr="420" mi="2" ci="0" mb="0" cb="0"/><line nr="421" mi="4" ci="0" mb="0" cb="0"/><line nr="422" mi="2" ci="0" mb="0" cb="0"/><line nr="424" mi="11" ci="0" mb="0" cb="0"/><line nr="433" mi="0" ci="4" mb="0" cb="0"/><line nr="434" mi="0" ci="7" mb="0" cb="0"/><line nr="436" mi="0" ci="5" mb="0" cb="0"/><line nr="437" mi="0" ci="2" mb="0" cb="0"/><line nr="438" mi="0" ci="4" mb="0" cb="0"/><line nr="439" mi="0" ci="2" mb="0" cb="0"/><line nr="441" mi="0" ci="11" mb="0" cb="0"/><line nr="450" mi="4" ci="0" mb="0" cb="0"/><line nr="451" mi="7" ci="0" mb="0" cb="0"/><line nr="453" mi="5" ci="0" mb="0" cb="0"/><line nr="454" mi="2" ci="0" mb="0" cb="0"/><line nr="455" mi="4" ci="0" mb="0" cb="0"/><line nr="456" mi="2" ci="0" mb="0" cb="0"/><line nr="458" mi="11" ci="0" mb="0" cb="0"/><line nr="467" mi="0" ci="4" mb="0" cb="0"/><line nr="468" mi="0" ci="6" mb="0" cb="0"/><line nr="470" mi="0" ci="5" mb="0" cb="0"/><line nr="471" mi="0" ci="2" mb="0" cb="0"/><line nr="472" mi="0" ci="4" mb="0" cb="0"/><line nr="473" mi="0" ci="2" mb="0" cb="0"/><line nr="475" mi="0" ci="11" mb="0" cb="0"/><line nr="484" mi="4" ci="0" mb="0" cb="0"/><line nr="485" mi="7" ci="0" mb="0" cb="0"/><line nr="487" mi="5" ci="0" mb="0" cb="0"/><line nr="488" mi="2" ci="0" mb="0" cb="0"/><line nr="489" mi="4" ci="0" mb="0" cb="0"/><line nr="490" mi="2" ci="0" mb="0" cb="0"/><line nr="492" mi="11" ci="0" mb="0" cb="0"/><line nr="502" mi="0" ci="6" mb="0" cb="0"/><line nr="504" mi="0" ci="5" mb="0" cb="0"/><line nr="505" mi="0" ci="2" mb="0" cb="0"/><line nr="507" mi="0" ci="13" mb="0" cb="0"/><line nr="516" mi="0" ci="7" mb="0" cb="0"/><line nr="518" mi="0" ci="5" mb="0" cb="0"/><line nr="519" mi="0" ci="2" mb="0" cb="0"/><line nr="521" mi="0" ci="13" mb="0" cb="0"/><line nr="530" mi="9" ci="0" mb="0" cb="0"/><line nr="532" mi="5" ci="0" mb="0" cb="0"/><line nr="533" mi="2" ci="0" mb="0" cb="0"/><line nr="535" mi="13" ci="0" mb="0" cb="0"/><line nr="544" mi="0" ci="10" mb="0" cb="0"/><line nr="546" mi="0" ci="5" mb="0" cb="0"/><line nr="547" mi="0" ci="2" mb="0" cb="0"/><line nr="549" mi="0" ci="13" mb="0" cb="0"/><line nr="559" mi="0" ci="8" mb="0" cb="0"/><line nr="565" mi="0" ci="7" mb="0" cb="0"/><line nr="572" mi="0" ci="4" mb="0" cb="0"/><line nr="573" mi="0" ci="3" mb="0" cb="0"/><line nr="574" mi="0" ci="12" mb="0" cb="2"/><line nr="575" mi="0" ci="10" mb="0" cb="0"/><line nr="577" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="348" covered="687"/><counter type="BRANCH" missed="2" covered="23"/><counter type="LINE" missed="63" covered="129"/><counter type="COMPLEXITY" missed="13" covered="36"/><counter type="METHOD" missed="11" covered="23"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExecutionTargetSelectNullOrMatchingOperation.java"><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="2" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="13" ci="0" mb="2" cb="0"/><line nr="57" mi="11" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="10" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="11" ci="0" mb="6" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="13" ci="0" mb="2" cb="0"/><line nr="74" mi="11" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="102" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Target.java"><line nr="39" mi="0" ci="44" mb="0" cb="0"/><line nr="41" mi="0" ci="24" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="24" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="8" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="8" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="9" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="9" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="6" ci="0" mb="0" cb="0"/><line nr="147" mi="6" ci="0" mb="0" cb="0"/><line nr="152" mi="6" ci="0" mb="0" cb="0"/><line nr="157" mi="6" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="171" mi="5" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="3" ci="0" mb="0" cb="0"/><line nr="188" mi="5" ci="0" mb="0" cb="0"/><line nr="194" mi="3" ci="0" mb="0" cb="0"/><line nr="195" mi="5" ci="0" mb="0" cb="0"/><line nr="201" mi="3" ci="0" mb="0" cb="0"/><line nr="202" mi="5" ci="0" mb="0" cb="0"/><line nr="208" mi="3" ci="0" mb="0" cb="0"/><line nr="209" mi="5" ci="0" mb="0" cb="0"/><line nr="218" mi="0" ci="5" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="3" ci="0" mb="0" cb="0"/><line nr="241" mi="7" ci="0" mb="0" cb="0"/><line nr="246" mi="3" ci="0" mb="0" cb="0"/><line nr="247" mi="7" ci="0" mb="0" cb="0"/><line nr="252" mi="3" ci="0" mb="0" cb="0"/><line nr="253" mi="3" ci="0" mb="0" cb="0"/><line nr="254" mi="8" ci="0" mb="0" cb="0"/><line nr="259" mi="3" ci="0" mb="0" cb="0"/><line nr="260" mi="3" ci="0" mb="0" cb="0"/><line nr="261" mi="8" ci="0" mb="0" cb="0"/><line nr="266" mi="3" ci="0" mb="0" cb="0"/><line nr="267" mi="3" ci="0" mb="0" cb="0"/><line nr="268" mi="8" ci="0" mb="0" cb="0"/><line nr="273" mi="3" ci="0" mb="0" cb="0"/><line nr="274" mi="3" ci="0" mb="0" cb="0"/><line nr="275" mi="8" ci="0" mb="0" cb="0"/><line nr="288" mi="0" ci="28" mb="0" cb="0"/><line nr="289" mi="0" ci="6" mb="0" cb="0"/><line nr="290" mi="0" ci="30" mb="0" cb="0"/><line nr="292" mi="0" ci="6" mb="0" cb="0"/><line nr="293" mi="0" ci="6" mb="0" cb="0"/><line nr="294" mi="0" ci="6" mb="0" cb="0"/><line nr="295" mi="0" ci="6" mb="0" cb="0"/><line nr="296" mi="0" ci="7" mb="0" cb="0"/><line nr="307" mi="0" ci="6" mb="0" cb="0"/><line nr="312" mi="0" ci="2" mb="0" cb="0"/><line nr="313" mi="0" ci="3" mb="0" cb="0"/><line nr="314" mi="0" ci="3" mb="0" cb="0"/><line nr="315" mi="0" ci="1" mb="0" cb="0"/><line nr="318" mi="0" ci="3" mb="0" cb="0"/><line nr="322" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="186" covered="294"/><counter type="LINE" missed="40" covered="39"/><counter type="COMPLEXITY" missed="21" covered="21"/><counter type="METHOD" missed="21" covered="21"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="ExecutionTargetReplaceWithOperation.java"><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="4" cb="2"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="8" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="33"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="12" covered="10"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExecutionTargetExecuteOperation.java"><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="9" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="5" cb="1"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="52" covered="30"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="17" covered="9"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExecutionTargetExecuteIfOperation.java"><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="6" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="2" cb="0"/><line nr="81" mi="3" ci="0" mb="2" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="7" ci="0" mb="6" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="8" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="125" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="40" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ExecutionTargetOnKeyOperation.java"><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="2" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="2" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="13" ci="0" mb="2" cb="0"/><line nr="59" mi="11" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="14" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ExecutionTargetIterateOpenOperation.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="9" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="18"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExecutionTargetExecuteIfIndexOperation.java"><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="2" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="6" ci="0" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="2" cb="0"/><line nr="80" mi="3" ci="0" mb="2" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="7" ci="0" mb="6" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="120" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="38" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ExecutionTargetOnValueOperation.java"><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="2" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="2" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="13" ci="0" mb="2" cb="0"/><line nr="59" mi="11" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="14" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ExecutionTargetMapOperation.java"><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="1" cb="1"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="2" cb="2"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="10" ci="0" mb="2" cb="0"/><line nr="79" mi="14" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="9" mb="0" cb="2"/><line nr="89" mi="0" ci="12" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="9" mb="0" cb="2"/><line nr="101" mi="0" ci="12" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="13" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="65" covered="88"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="12" covered="23"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExecutionTargetOperation.java"/><sourcefile name="ExecutionTargetSelectMapKeysOperation.java"><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="2" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="8" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="13" ci="0" mb="2" cb="0"/><line nr="62" mi="11" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ExecutionTargetMapIfOperation.java"><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="1" cb="1"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="3" cb="1"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="10" ci="0" mb="2" cb="0"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="89" mi="6" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="19" ci="0" mb="4" cb="0"/><line nr="95" mi="8" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="9" mb="0" cb="2"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="2" ci="14" mb="1" cb="3"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="4" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="9" ci="0" mb="2" cb="0"/><line nr="126" mi="6" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="129" mi="16" ci="0" mb="4" cb="0"/><line nr="133" mi="6" ci="0" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="13" ci="0" mb="0" cb="0"/><line nr="145" mi="1" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="157" covered="86"/><counter type="BRANCH" missed="17" covered="7"/><counter type="LINE" missed="30" covered="23"/><counter type="COMPLEXITY" missed="11" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="2041" covered="1578"/><counter type="BRANCH" missed="160" covered="70"/><counter type="LINE" missed="458" covered="312"/><counter type="COMPLEXITY" missed="154" covered="95"/><counter type="METHOD" missed="53" covered="62"/><counter type="CLASS" missed="10" covered="15"/></package><package name="org/op4j"><class name="org/op4j/Op" sourcefilename="Op.java"><method name="on" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="80"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="on" desc="(Lorg/javaruntype/type/Type;Ljava/lang/Object;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="95"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="on" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/array/Level0IndefiniteArrayOperator;" line="110"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="(Lorg/javaruntype/type/Type;[Ljava/lang/Object;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="125"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="([B)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="138"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="([S)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="151"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="([I)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="164"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="on" desc="([J)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="177"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="on" desc="([F)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="190"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="([D)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="203"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="([C)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="216"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="([Z)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="229"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="([Ljava/lang/Byte;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="242"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="([Ljava/lang/Short;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="255"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="([Ljava/lang/Integer;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="268"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="([Ljava/lang/Long;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="281"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="([Ljava/lang/Float;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="294"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="([Ljava/lang/Double;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="307"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="([Ljava/lang/Character;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="320"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="([Ljava/lang/Boolean;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="333"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="([Ljava/lang/String;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="346"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="on" desc="([Ljava/math/BigInteger;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="359"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="([Ljava/math/BigDecimal;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="372"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="([Ljava/util/Calendar;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="385"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="([Ljava/util/Date;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="398"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="([Ljava/sql/Date;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="411"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="([Ljava/sql/Timestamp;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="424"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="(Ljava/util/List;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="439"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="on" desc="(Lorg/javaruntype/type/Type;Ljava/util/List;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="454"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="(Ljava/util/Map;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="468"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="(Lorg/javaruntype/type/Type;Lorg/javaruntype/type/Type;Ljava/util/Map;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="485"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="on" desc="(Ljava/util/Set;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="499"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="on" desc="(Lorg/javaruntype/type/Type;Ljava/util/Set;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="514"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArray" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/array/Level0IndefiniteArrayOperator;" line="531"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayOf" desc="(Lorg/javaruntype/type/Type;[Ljava/lang/Object;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="547"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onArray" desc="([B)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="560"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArray" desc="([S)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="573"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArray" desc="([I)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="586"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArray" desc="([J)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="599"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArray" desc="([F)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="612"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArray" desc="([D)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="625"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArray" desc="([C)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="638"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArray" desc="([Z)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="651"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArray" desc="([Ljava/lang/Byte;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="664"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArray" desc="([Ljava/lang/Short;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="677"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArray" desc="([Ljava/lang/Integer;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="690"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArray" desc="([Ljava/lang/Long;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="703"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArray" desc="([Ljava/lang/Float;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="716"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArray" desc="([Ljava/lang/Double;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="729"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArray" desc="([Ljava/lang/Character;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="742"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArray" desc="([Ljava/lang/Boolean;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="755"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArray" desc="([Ljava/lang/String;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="768"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArray" desc="([Ljava/math/BigInteger;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="781"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArray" desc="([Ljava/math/BigDecimal;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="794"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArray" desc="([Ljava/util/Calendar;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="807"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArray" desc="([Ljava/util/Date;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="820"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArray" desc="([Ljava/sql/Date;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="833"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArray" desc="([Ljava/sql/Timestamp;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="846"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayFor" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/array/Level0IndefiniteArrayOperator;" line="868"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayFor" desc="([Ljava/lang/Byte;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="881"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayFor" desc="([Ljava/lang/Short;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="894"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayFor" desc="([Ljava/lang/Integer;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="907"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onArrayFor" desc="([Ljava/lang/Long;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="920"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayFor" desc="([Ljava/lang/Float;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="933"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayFor" desc="([Ljava/lang/Double;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="946"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayFor" desc="([Ljava/lang/Character;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="959"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayFor" desc="([Ljava/lang/Boolean;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="972"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayFor" desc="([Ljava/lang/String;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="985"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onArrayFor" desc="([Ljava/math/BigInteger;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="998"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayFor" desc="([Ljava/math/BigDecimal;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="1011"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayFor" desc="([Ljava/util/Calendar;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="1024"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayFor" desc="([Ljava/util/Date;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="1037"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayFor" desc="([Ljava/sql/Date;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="1050"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onArrayFor" desc="([Ljava/sql/Timestamp;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="1063"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onList" desc="(Ljava/util/List;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="1087"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onListOf" desc="(Lorg/javaruntype/type/Type;Ljava/util/List;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="1102"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onListFor" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="1115"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onMap" desc="(Ljava/util/Map;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="1131"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onMapOf" desc="(Lorg/javaruntype/type/Type;Lorg/javaruntype/type/Type;Ljava/util/Map;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="1148"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onMapFor" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0BuildingMapOperator;" line="1164"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onSet" desc="(Ljava/util/Set;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="1181"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onSetOf" desc="(Lorg/javaruntype/type/Type;Ljava/util/Set;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="1196"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onSetFor" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="1209"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="319" covered="107"/><counter type="LINE" missed="67" covered="18"/><counter type="COMPLEXITY" missed="67" covered="16"/><counter type="METHOD" missed="67" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Op.java"><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="5" ci="0" mb="0" cb="0"/><line nr="203" mi="5" ci="0" mb="0" cb="0"/><line nr="216" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="5" ci="0" mb="0" cb="0"/><line nr="242" mi="4" ci="0" mb="0" cb="0"/><line nr="255" mi="4" ci="0" mb="0" cb="0"/><line nr="268" mi="4" ci="0" mb="0" cb="0"/><line nr="281" mi="4" ci="0" mb="0" cb="0"/><line nr="294" mi="4" ci="0" mb="0" cb="0"/><line nr="307" mi="4" ci="0" mb="0" cb="0"/><line nr="320" mi="4" ci="0" mb="0" cb="0"/><line nr="333" mi="4" ci="0" mb="0" cb="0"/><line nr="346" mi="0" ci="4" mb="0" cb="0"/><line nr="359" mi="4" ci="0" mb="0" cb="0"/><line nr="372" mi="4" ci="0" mb="0" cb="0"/><line nr="385" mi="4" ci="0" mb="0" cb="0"/><line nr="398" mi="4" ci="0" mb="0" cb="0"/><line nr="411" mi="5" ci="0" mb="0" cb="0"/><line nr="424" mi="5" ci="0" mb="0" cb="0"/><line nr="439" mi="0" ci="3" mb="0" cb="0"/><line nr="454" mi="5" ci="0" mb="0" cb="0"/><line nr="468" mi="3" ci="0" mb="0" cb="0"/><line nr="485" mi="5" ci="0" mb="0" cb="0"/><line nr="499" mi="0" ci="3" mb="0" cb="0"/><line nr="514" mi="5" ci="0" mb="0" cb="0"/><line nr="531" mi="7" ci="0" mb="0" cb="0"/><line nr="547" mi="0" ci="10" mb="0" cb="0"/><line nr="560" mi="5" ci="0" mb="0" cb="0"/><line nr="573" mi="5" ci="0" mb="0" cb="0"/><line nr="586" mi="5" ci="0" mb="0" cb="0"/><line nr="599" mi="5" ci="0" mb="0" cb="0"/><line nr="612" mi="5" ci="0" mb="0" cb="0"/><line nr="625" mi="5" ci="0" mb="0" cb="0"/><line nr="638" mi="5" ci="0" mb="0" cb="0"/><line nr="651" mi="5" ci="0" mb="0" cb="0"/><line nr="664" mi="4" ci="0" mb="0" cb="0"/><line nr="677" mi="4" ci="0" mb="0" cb="0"/><line nr="690" mi="4" ci="0" mb="0" cb="0"/><line nr="703" mi="4" ci="0" mb="0" cb="0"/><line nr="716" mi="4" ci="0" mb="0" cb="0"/><line nr="729" mi="4" ci="0" mb="0" cb="0"/><line nr="742" mi="4" ci="0" mb="0" cb="0"/><line nr="755" mi="4" ci="0" mb="0" cb="0"/><line nr="768" mi="4" ci="0" mb="0" cb="0"/><line nr="781" mi="4" ci="0" mb="0" cb="0"/><line nr="794" mi="4" ci="0" mb="0" cb="0"/><line nr="807" mi="4" ci="0" mb="0" cb="0"/><line nr="820" mi="4" ci="0" mb="0" cb="0"/><line nr="833" mi="5" ci="0" mb="0" cb="0"/><line nr="846" mi="5" ci="0" mb="0" cb="0"/><line nr="868" mi="8" ci="0" mb="0" cb="0"/><line nr="881" mi="5" ci="0" mb="0" cb="0"/><line nr="894" mi="5" ci="0" mb="0" cb="0"/><line nr="907" mi="0" ci="5" mb="0" cb="0"/><line nr="920" mi="5" ci="0" mb="0" cb="0"/><line nr="933" mi="5" ci="0" mb="0" cb="0"/><line nr="946" mi="5" ci="0" mb="0" cb="0"/><line nr="959" mi="5" ci="0" mb="0" cb="0"/><line nr="972" mi="5" ci="0" mb="0" cb="0"/><line nr="985" mi="0" ci="5" mb="0" cb="0"/><line nr="998" mi="5" ci="0" mb="0" cb="0"/><line nr="1011" mi="5" ci="0" mb="0" cb="0"/><line nr="1024" mi="5" ci="0" mb="0" cb="0"/><line nr="1037" mi="5" ci="0" mb="0" cb="0"/><line nr="1050" mi="6" ci="0" mb="0" cb="0"/><line nr="1063" mi="6" ci="0" mb="0" cb="0"/><line nr="1087" mi="0" ci="7" mb="0" cb="0"/><line nr="1102" mi="7" ci="0" mb="0" cb="0"/><line nr="1115" mi="0" ci="8" mb="0" cb="0"/><line nr="1131" mi="0" ci="7" mb="0" cb="0"/><line nr="1148" mi="7" ci="0" mb="0" cb="0"/><line nr="1164" mi="0" ci="4" mb="0" cb="0"/><line nr="1165" mi="0" ci="5" mb="0" cb="0"/><line nr="1166" mi="0" ci="7" mb="0" cb="0"/><line nr="1181" mi="0" ci="7" mb="0" cb="0"/><line nr="1196" mi="7" ci="0" mb="0" cb="0"/><line nr="1209" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="319" covered="107"/><counter type="LINE" missed="67" covered="18"/><counter type="COMPLEXITY" missed="67" covered="16"/><counter type="METHOD" missed="67" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="319" covered="107"/><counter type="LINE" missed="67" covered="18"/><counter type="COMPLEXITY" missed="67" covered="16"/><counter type="METHOD" missed="67" covered="16"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/op4j/operators/impl/fn/list"><class name="org/op4j/operators/impl/fn/list/Level1ListElementsOperator" sourcefilename="Level1ListElementsOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="46"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endFor" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="51"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castTo" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/list/Level1ListElementsOperator;" line="56"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="69"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndex" desc="([I)Lorg/op4j/operators/impl/fn/list/Level1ListElementsSelectedOperator;" line="74"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndexNot" desc="([I)Lorg/op4j/operators/impl/fn/list/Level1ListElementsSelectedOperator;" line="79"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListElementsSelectedOperator;" line="84"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListElementsSelectedOperator;" line="89"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/fn/list/Level1ListElementsSelectedOperator;" line="94"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/fn/list/Level1ListElementsSelectedOperator;" line="105"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListElementsOperator;" line="118"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/list/Level1ListElementsOperator;" line="123"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceIfNullWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/list/Level1ListElementsOperator;" line="128"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListElementsOperator;" line="136"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListElementsOperator;" line="141"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfIndex" desc="([ILorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListElementsOperator;" line="146"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfIndex" desc="([ILorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListElementsOperator;" line="151"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfIndexNot" desc="([ILorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListElementsOperator;" line="156"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfIndexNot" desc="([ILorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListElementsOperator;" line="161"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListElementsOperator;" line="167"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListElementsOperator;" line="173"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListElementsOperator;" line="179"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListElementsOperator;" line="185"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListElementsOperator;" line="191"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListElementsOperator;" line="197"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="221" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="25" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/list/Level1ListElementsSelectedOperator" sourcefilename="Level1ListElementsSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/fn/list/Level1ListElementsOperator;" line="42"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListElementsSelectedOperator;" line="47"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/list/Level1ListElementsSelectedOperator;" line="52"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="57"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/list/Level0ListSelectedOperator" sourcefilename="Level0ListSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEach" desc="()Lorg/op4j/operators/impl/fn/list/Level1ListSelectedElementsOperator;" line="46"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="distinct" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="51"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sortBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="57"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insertAll" desc="(I[Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="62"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexes" desc="([I)Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="67"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllEqual" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="72"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="78"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="84"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="90"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="96"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="102"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="108"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexesNot" desc="([I)Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="113"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNull" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="118"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="123"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsList" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="128"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="133"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="138"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="144"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insert" desc="(ILjava/lang/Object;)Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="149"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="154"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="(Ljava/util/Comparator;)Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="160"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="165"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/util/List;)Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="170"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="175"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="250" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="26" covered="0"/><counter type="METHOD" missed="26" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/list/Level1ListSelectedElementsSelectedOperator" sourcefilename="Level1ListSelectedElementsSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/fn/list/Level1ListSelectedElementsOperator;" line="42"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListSelectedElementsSelectedOperator;" line="47"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/list/Level1ListSelectedElementsSelectedOperator;" line="52"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="57"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/fn/list/Level0ListOperator" sourcefilename="Level0ListOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="62"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="66"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insert" desc="(ILjava/lang/Object;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="71"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insertAll" desc="(I[Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="75"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="81"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="distinct" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="86"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEach" desc="()Lorg/op4j/operators/impl/fn/list/Level1ListElementsOperator;" line="91"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexes" desc="([I)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="96"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllEqual" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="101"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="107"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="112"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="117"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="122"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="128"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="134"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexesNot" desc="([I)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="139"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNull" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="144"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="151"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="(Ljava/util/Comparator;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="157"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArrayOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/array/Level0ArrayOperator;" line="162"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="couple" desc="()Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="167"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="coupleAndGroup" desc="()Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="171"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="178"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="183"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeys" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="187"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValues" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="191"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeysBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="198"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="203"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeys" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="207"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValues" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="211"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="218"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toGroupMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="223"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSet" desc="()Lorg/op4j/operators/impl/fn/set/Level0SetOperator;" line="228"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="233"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generic" desc="()Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="238"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="246"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToListOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="250"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="258"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="263"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="268"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="279"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsList" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="292"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="300"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/util/List;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="305"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceIfNullWith" desc="(Ljava/util/List;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="310"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="317"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="all" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="332"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="any" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/generic/Level0GenericUniqOperator;" line="338"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sortBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="346"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeysFrom" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="359"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeysFrom" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="363"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesFrom" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="367"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesFrom" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="371"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysFrom" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="375"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysFrom" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="379"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesFrom" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="383"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesFrom" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="387"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverse" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="392"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toGroupMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="400"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/map/Level0MapOperator;" line="406"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalseAsList" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="414"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalseAsList" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="418"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNullAsList" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="422"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNullAsList" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="426"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNullAsList" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="430"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNullAsList" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="434"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrueAsList" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="438"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrueAsList" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="442"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="448"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="452"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNotNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="456"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNotNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="460"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="464"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="468"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="472"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level0ListOperator;" line="476"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="741" covered="13"/><counter type="LINE" missed="75" covered="3"/><counter type="COMPLEXITY" missed="75" covered="2"/><counter type="METHOD" missed="75" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/operators/impl/fn/list/Level1ListSelectedElementsOperator" sourcefilename="Level1ListSelectedElementsOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListSelectedElementsSelectedOperator;" line="42"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListSelectedElementsSelectedOperator;" line="47"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/fn/list/Level1ListSelectedElementsSelectedOperator;" line="52"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/fn/list/Level1ListSelectedElementsSelectedOperator;" line="57"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndex" desc="([I)Lorg/op4j/operators/impl/fn/list/Level1ListSelectedElementsSelectedOperator;" line="62"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndexNot" desc="([I)Lorg/op4j/operators/impl/fn/list/Level1ListSelectedElementsSelectedOperator;" line="67"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endFor" desc="()Lorg/op4j/operators/impl/fn/list/Level0ListSelectedOperator;" line="72"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListSelectedElementsSelectedOperator;" line="77"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListSelectedElementsSelectedOperator;" line="82"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListSelectedElementsSelectedOperator;" line="87"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListSelectedElementsSelectedOperator;" line="92"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/fn/list/Level1ListSelectedElementsOperator;" line="97"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/fn/list/Level1ListSelectedElementsOperator;" line="102"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lorg/op4j/functions/Function;" line="107"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="112" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Level1ListSelectedElementsSelectedOperator.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="0" cb="0"/><line nr="47" mi="9" ci="0" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level1ListElementsSelectedOperator.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="0" cb="0"/><line nr="47" mi="9" ci="0" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level0ListOperator.java"><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="15" ci="0" mb="0" cb="0"/><line nr="66" mi="10" ci="0" mb="0" cb="0"/><line nr="71" mi="16" ci="0" mb="0" cb="0"/><line nr="75" mi="11" ci="0" mb="0" cb="0"/><line nr="81" mi="10" ci="0" mb="0" cb="0"/><line nr="86" mi="9" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="0" cb="0"/><line nr="96" mi="10" ci="0" mb="0" cb="0"/><line nr="101" mi="10" ci="0" mb="0" cb="0"/><line nr="107" mi="10" ci="0" mb="0" cb="0"/><line nr="112" mi="10" ci="0" mb="0" cb="0"/><line nr="117" mi="10" ci="0" mb="0" cb="0"/><line nr="122" mi="10" ci="0" mb="0" cb="0"/><line nr="128" mi="10" ci="0" mb="0" cb="0"/><line nr="134" mi="10" ci="0" mb="0" cb="0"/><line nr="139" mi="10" ci="0" mb="0" cb="0"/><line nr="144" mi="9" ci="0" mb="0" cb="0"/><line nr="151" mi="9" ci="0" mb="0" cb="0"/><line nr="157" mi="10" ci="0" mb="0" cb="0"/><line nr="162" mi="11" ci="0" mb="0" cb="0"/><line nr="167" mi="9" ci="0" mb="0" cb="0"/><line nr="171" mi="9" ci="0" mb="0" cb="0"/><line nr="178" mi="10" ci="0" mb="0" cb="0"/><line nr="183" mi="10" ci="0" mb="0" cb="0"/><line nr="187" mi="10" ci="0" mb="0" cb="0"/><line nr="191" mi="10" ci="0" mb="0" cb="0"/><line nr="198" mi="10" ci="0" mb="0" cb="0"/><line nr="203" mi="10" ci="0" mb="0" cb="0"/><line nr="207" mi="10" ci="0" mb="0" cb="0"/><line nr="211" mi="10" ci="0" mb="0" cb="0"/><line nr="218" mi="10" ci="0" mb="0" cb="0"/><line nr="223" mi="10" ci="0" mb="0" cb="0"/><line nr="228" mi="0" ci="9" mb="0" cb="0"/><line nr="233" mi="6" ci="0" mb="0" cb="0"/><line nr="238" mi="6" ci="0" mb="0" cb="0"/><line nr="246" mi="5" ci="0" mb="0" cb="0"/><line nr="250" mi="5" ci="0" mb="0" cb="0"/><line nr="258" mi="8" ci="0" mb="0" cb="0"/><line nr="263" mi="8" ci="0" mb="0" cb="0"/><line nr="268" mi="7" ci="0" mb="0" cb="0"/><line nr="279" mi="7" ci="0" mb="0" cb="0"/><line nr="292" mi="9" ci="0" mb="0" cb="0"/><line nr="300" mi="9" ci="0" mb="0" cb="0"/><line nr="305" mi="9" ci="0" mb="0" cb="0"/><line nr="310" mi="6" ci="0" mb="0" cb="0"/><line nr="317" mi="10" ci="0" mb="0" cb="0"/><line nr="332" mi="11" ci="0" mb="0" cb="0"/><line nr="338" mi="11" ci="0" mb="0" cb="0"/><line nr="346" mi="11" ci="0" mb="0" cb="0"/><line nr="359" mi="10" ci="0" mb="0" cb="0"/><line nr="363" mi="10" ci="0" mb="0" cb="0"/><line nr="367" mi="10" ci="0" mb="0" cb="0"/><line nr="371" mi="10" ci="0" mb="0" cb="0"/><line nr="375" mi="10" ci="0" mb="0" cb="0"/><line nr="379" mi="10" ci="0" mb="0" cb="0"/><line nr="383" mi="10" ci="0" mb="0" cb="0"/><line nr="387" mi="10" ci="0" mb="0" cb="0"/><line nr="392" mi="9" ci="0" mb="0" cb="0"/><line nr="400" mi="11" ci="0" mb="0" cb="0"/><line nr="406" mi="11" ci="0" mb="0" cb="0"/><line nr="414" mi="11" ci="0" mb="0" cb="0"/><line nr="418" mi="11" ci="0" mb="0" cb="0"/><line nr="422" mi="10" ci="0" mb="0" cb="0"/><line nr="426" mi="10" ci="0" mb="0" cb="0"/><line nr="430" mi="10" ci="0" mb="0" cb="0"/><line nr="434" mi="10" ci="0" mb="0" cb="0"/><line nr="438" mi="11" ci="0" mb="0" cb="0"/><line nr="442" mi="11" ci="0" mb="0" cb="0"/><line nr="448" mi="12" ci="0" mb="0" cb="0"/><line nr="452" mi="12" ci="0" mb="0" cb="0"/><line nr="456" mi="11" ci="0" mb="0" cb="0"/><line nr="460" mi="11" ci="0" mb="0" cb="0"/><line nr="464" mi="11" ci="0" mb="0" cb="0"/><line nr="468" mi="11" ci="0" mb="0" cb="0"/><line nr="472" mi="12" ci="0" mb="0" cb="0"/><line nr="476" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="741" covered="13"/><counter type="LINE" missed="75" covered="3"/><counter type="COMPLEXITY" missed="75" covered="2"/><counter type="METHOD" missed="75" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Level0ListSelectedOperator.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="9" ci="0" mb="0" cb="0"/><line nr="57" mi="10" ci="0" mb="0" cb="0"/><line nr="62" mi="11" ci="0" mb="0" cb="0"/><line nr="67" mi="10" ci="0" mb="0" cb="0"/><line nr="72" mi="10" ci="0" mb="0" cb="0"/><line nr="78" mi="10" ci="0" mb="0" cb="0"/><line nr="84" mi="10" ci="0" mb="0" cb="0"/><line nr="90" mi="10" ci="0" mb="0" cb="0"/><line nr="96" mi="10" ci="0" mb="0" cb="0"/><line nr="102" mi="10" ci="0" mb="0" cb="0"/><line nr="108" mi="10" ci="0" mb="0" cb="0"/><line nr="113" mi="10" ci="0" mb="0" cb="0"/><line nr="118" mi="9" ci="0" mb="0" cb="0"/><line nr="123" mi="7" ci="0" mb="0" cb="0"/><line nr="128" mi="9" ci="0" mb="0" cb="0"/><line nr="133" mi="15" ci="0" mb="0" cb="0"/><line nr="138" mi="10" ci="0" mb="0" cb="0"/><line nr="144" mi="10" ci="0" mb="0" cb="0"/><line nr="149" mi="16" ci="0" mb="0" cb="0"/><line nr="154" mi="9" ci="0" mb="0" cb="0"/><line nr="160" mi="10" ci="0" mb="0" cb="0"/><line nr="165" mi="10" ci="0" mb="0" cb="0"/><line nr="170" mi="9" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="250" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="26" covered="0"/><counter type="METHOD" missed="26" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level1ListElementsOperator.java"><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="8" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="8" ci="0" mb="0" cb="0"/><line nr="79" mi="8" ci="0" mb="0" cb="0"/><line nr="84" mi="8" ci="0" mb="0" cb="0"/><line nr="89" mi="8" ci="0" mb="0" cb="0"/><line nr="94" mi="7" ci="0" mb="0" cb="0"/><line nr="105" mi="7" ci="0" mb="0" cb="0"/><line nr="118" mi="9" ci="0" mb="0" cb="0"/><line nr="123" mi="9" ci="0" mb="0" cb="0"/><line nr="128" mi="6" ci="0" mb="0" cb="0"/><line nr="136" mi="11" ci="0" mb="0" cb="0"/><line nr="141" mi="11" ci="0" mb="0" cb="0"/><line nr="146" mi="11" ci="0" mb="0" cb="0"/><line nr="151" mi="11" ci="0" mb="0" cb="0"/><line nr="156" mi="11" ci="0" mb="0" cb="0"/><line nr="161" mi="11" ci="0" mb="0" cb="0"/><line nr="167" mi="10" ci="0" mb="0" cb="0"/><line nr="173" mi="10" ci="0" mb="0" cb="0"/><line nr="179" mi="10" ci="0" mb="0" cb="0"/><line nr="185" mi="10" ci="0" mb="0" cb="0"/><line nr="191" mi="11" ci="0" mb="0" cb="0"/><line nr="197" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="221" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="25" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level1ListSelectedElementsOperator.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="8" ci="0" mb="0" cb="0"/><line nr="47" mi="8" ci="0" mb="0" cb="0"/><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="8" ci="0" mb="0" cb="0"/><line nr="67" mi="8" ci="0" mb="0" cb="0"/><line nr="72" mi="8" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="82" mi="8" ci="0" mb="0" cb="0"/><line nr="87" mi="8" ci="0" mb="0" cb="0"/><line nr="92" mi="8" ci="0" mb="0" cb="0"/><line nr="97" mi="9" ci="0" mb="0" cb="0"/><line nr="102" mi="9" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="112" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="1390" covered="13"/><counter type="LINE" missed="156" covered="3"/><counter type="COMPLEXITY" missed="151" covered="2"/><counter type="METHOD" missed="151" covered="2"/><counter type="CLASS" missed="5" covered="1"/></package><package name="org/op4j/operators/intf/array"><class name="org/op4j/operators/intf/array/ILevel1ArraySelectedElementsOperator" sourcefilename="ILevel1ArraySelectedElementsOperator.java"/><class name="org/op4j/operators/intf/array/ILevel1ArrayElementsOperator" sourcefilename="ILevel1ArrayElementsOperator.java"/><class name="org/op4j/operators/intf/array/ILevel0ArraySelectedOperator" sourcefilename="ILevel0ArraySelectedOperator.java"/><class name="org/op4j/operators/intf/array/ILevel1ArrayElementsSelectedOperator" sourcefilename="ILevel1ArrayElementsSelectedOperator.java"/><class name="org/op4j/operators/intf/array/ILevel0ArrayOperator" sourcefilename="ILevel0ArrayOperator.java"/><class name="org/op4j/operators/intf/array/ILevel1ArraySelectedElementsSelectedOperator" sourcefilename="ILevel1ArraySelectedElementsSelectedOperator.java"/><class name="org/op4j/operators/intf/array/ILevel0IndefiniteArrayOperator" sourcefilename="ILevel0IndefiniteArrayOperator.java"/><sourcefile name="ILevel0ArrayOperator.java"/><sourcefile name="ILevel1ArrayElementsSelectedOperator.java"/><sourcefile name="ILevel1ArrayElementsOperator.java"/><sourcefile name="ILevel0IndefiniteArrayOperator.java"/><sourcefile name="ILevel0ArraySelectedOperator.java"/><sourcefile name="ILevel1ArraySelectedElementsSelectedOperator.java"/><sourcefile name="ILevel1ArraySelectedElementsOperator.java"/></package><package name="org/javatuples"><class name="org/javatuples/Pair" sourcefilename="Pair.java"><method name="with" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Pair;" line="53"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromArray" desc="([Ljava/lang/Object;)Lorg/javatuples/Pair;" line="67"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromCollection" desc="(Ljava/util/Collection;)Lorg/javatuples/Pair;" line="87"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue0" desc="()Ljava/lang/Object;" line="111"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue1" desc="()Ljava/lang/Object;" line="116"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()I" line="122"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;)Lorg/javatuples/Triplet;" line="136"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;)Lorg/javatuples/Triplet;" line="141"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;)Lorg/javatuples/Triplet;" line="146"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Quartet;" line="155"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Quartet;" line="160"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Quartet;" line="165"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="176"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="181"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="186"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="197"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="202"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="207"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="217"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="222"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="227"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="237"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="242"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="247"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="257"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="262"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="267"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="277"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="282"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="287"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Triplet;" line="299"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Triplet;" line="303"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Triplet;" line="307"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Quartet;" line="317"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Quartet;" line="321"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Quartet;" line="325"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Quintet;" line="336"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Quintet;" line="340"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Quintet;" line="344"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Sextet;" line="356"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Sextet;" line="360"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Sextet;" line="364"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Septet;" line="375"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Septet;" line="379"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Septet;" line="383"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Sextet;)Lorg/javatuples/Octet;" line="394"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Sextet;)Lorg/javatuples/Octet;" line="398"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Sextet;)Lorg/javatuples/Octet;" line="402"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Septet;)Lorg/javatuples/Ennead;" line="413"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Septet;)Lorg/javatuples/Ennead;" line="417"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Septet;)Lorg/javatuples/Ennead;" line="421"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Octet;)Lorg/javatuples/Decade;" line="432"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Octet;)Lorg/javatuples/Decade;" line="436"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Octet;)Lorg/javatuples/Decade;" line="440"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;)Lorg/javatuples/Triplet;" line="452"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Triplet;" line="457"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Quartet;" line="464"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Quartet;" line="469"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="476"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Quintet;" line="481"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="488"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Sextet;" line="493"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="501"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Septet;" line="506"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="514"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Sextet;)Lorg/javatuples/Octet;" line="519"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="527"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Septet;)Lorg/javatuples/Ennead;" line="532"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="540"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Octet;)Lorg/javatuples/Decade;" line="545"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt0" desc="(Ljava/lang/Object;)Lorg/javatuples/Pair;" line="557"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt1" desc="(Ljava/lang/Object;)Lorg/javatuples/Pair;" line="562"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom0" desc="()Lorg/javatuples/Unit;" line="575"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom1" desc="()Lorg/javatuples/Unit;" line="580"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="780" covered="29"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="81" covered="6"/><counter type="COMPLEXITY" missed="76" covered="3"/><counter type="METHOD" missed="72" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/javatuples/Septet" sourcefilename="Septet.java"><method name="with" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="68"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromArray" desc="([Ljava/lang/Object;)Lorg/javatuples/Septet;" line="82"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromCollection" desc="(Ljava/util/Collection;)Lorg/javatuples/Septet;" line="104"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="127"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue0" desc="()Ljava/lang/Object;" line="139"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue1" desc="()Ljava/lang/Object;" line="144"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue2" desc="()Ljava/lang/Object;" line="149"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue3" desc="()Ljava/lang/Object;" line="154"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue4" desc="()Ljava/lang/Object;" line="159"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue5" desc="()Ljava/lang/Object;" line="164"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue6" desc="()Ljava/lang/Object;" line="169"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSize" desc="()I" line="175"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;)Lorg/javatuples/Octet;" line="185"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;)Lorg/javatuples/Octet;" line="191"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;)Lorg/javatuples/Octet;" line="197"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;)Lorg/javatuples/Octet;" line="203"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Ljava/lang/Object;)Lorg/javatuples/Octet;" line="209"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Ljava/lang/Object;)Lorg/javatuples/Octet;" line="215"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt6" desc="(Ljava/lang/Object;)Lorg/javatuples/Octet;" line="221"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt7" desc="(Ljava/lang/Object;)Lorg/javatuples/Octet;" line="227"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="237"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="243"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="249"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="255"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="261"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="267"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt6" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="273"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt7" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="279"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="291"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="297"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="303"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="309"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="315"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="321"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt6" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="327"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt7" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="333"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Octet;" line="342"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Octet;" line="346"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Octet;" line="350"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Octet;" line="354"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Octet;" line="358"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Octet;" line="362"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt6" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Octet;" line="366"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt7" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Octet;" line="370"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Ennead;" line="380"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Ennead;" line="384"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Ennead;" line="388"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Ennead;" line="392"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Ennead;" line="396"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Ennead;" line="400"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt6" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Ennead;" line="404"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt7" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Ennead;" line="408"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Decade;" line="419"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Decade;" line="423"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Decade;" line="427"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Decade;" line="431"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Decade;" line="435"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Decade;" line="439"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt6" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Decade;" line="443"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt7" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Decade;" line="447"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;)Lorg/javatuples/Octet;" line="457"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Octet;" line="462"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="469"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Ennead;" line="474"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="481"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Decade;" line="486"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt0" desc="(Ljava/lang/Object;)Lorg/javatuples/Septet;" line="495"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt1" desc="(Ljava/lang/Object;)Lorg/javatuples/Septet;" line="500"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt2" desc="(Ljava/lang/Object;)Lorg/javatuples/Septet;" line="505"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt3" desc="(Ljava/lang/Object;)Lorg/javatuples/Septet;" line="510"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt4" desc="(Ljava/lang/Object;)Lorg/javatuples/Septet;" line="515"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt5" desc="(Ljava/lang/Object;)Lorg/javatuples/Septet;" line="520"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt6" desc="(Ljava/lang/Object;)Lorg/javatuples/Septet;" line="525"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom0" desc="()Lorg/javatuples/Sextet;" line="540"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom1" desc="()Lorg/javatuples/Sextet;" line="545"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom2" desc="()Lorg/javatuples/Sextet;" line="550"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom3" desc="()Lorg/javatuples/Sextet;" line="555"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom4" desc="()Lorg/javatuples/Sextet;" line="560"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom5" desc="()Lorg/javatuples/Sextet;" line="565"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom6" desc="()Lorg/javatuples/Sextet;" line="570"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1089" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="99" covered="0"/><counter type="COMPLEXITY" missed="84" covered="0"/><counter type="METHOD" missed="80" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/javatuples/Decade" sourcefilename="Decade.java"><method name="with" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="76"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromArray" desc="([Ljava/lang/Object;)Lorg/javatuples/Decade;" line="90"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromCollection" desc="(Ljava/util/Collection;)Lorg/javatuples/Decade;" line="112"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="138"><counter type="INSTRUCTION" missed="76" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue0" desc="()Ljava/lang/Object;" line="153"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue1" desc="()Ljava/lang/Object;" line="158"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue2" desc="()Ljava/lang/Object;" line="163"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue3" desc="()Ljava/lang/Object;" line="168"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue4" desc="()Ljava/lang/Object;" line="173"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue5" desc="()Ljava/lang/Object;" line="178"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue6" desc="()Ljava/lang/Object;" line="183"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue7" desc="()Ljava/lang/Object;" line="188"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue8" desc="()Ljava/lang/Object;" line="193"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue9" desc="()Ljava/lang/Object;" line="198"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSize" desc="()I" line="204"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt0" desc="(Ljava/lang/Object;)Lorg/javatuples/Decade;" line="210"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt1" desc="(Ljava/lang/Object;)Lorg/javatuples/Decade;" line="215"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt2" desc="(Ljava/lang/Object;)Lorg/javatuples/Decade;" line="220"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt3" desc="(Ljava/lang/Object;)Lorg/javatuples/Decade;" line="225"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt4" desc="(Ljava/lang/Object;)Lorg/javatuples/Decade;" line="230"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt5" desc="(Ljava/lang/Object;)Lorg/javatuples/Decade;" line="235"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt6" desc="(Ljava/lang/Object;)Lorg/javatuples/Decade;" line="240"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt7" desc="(Ljava/lang/Object;)Lorg/javatuples/Decade;" line="245"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt8" desc="(Ljava/lang/Object;)Lorg/javatuples/Decade;" line="250"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt9" desc="(Ljava/lang/Object;)Lorg/javatuples/Decade;" line="255"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom0" desc="()Lorg/javatuples/Ennead;" line="267"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom1" desc="()Lorg/javatuples/Ennead;" line="272"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom2" desc="()Lorg/javatuples/Ennead;" line="277"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom3" desc="()Lorg/javatuples/Ennead;" line="282"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom4" desc="()Lorg/javatuples/Ennead;" line="287"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom5" desc="()Lorg/javatuples/Ennead;" line="292"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom6" desc="()Lorg/javatuples/Ennead;" line="297"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom7" desc="()Lorg/javatuples/Ennead;" line="302"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom8" desc="()Lorg/javatuples/Ennead;" line="307"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom9" desc="()Lorg/javatuples/Ennead;" line="312"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="681" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="57" covered="0"/><counter type="COMPLEXITY" missed="39" covered="0"/><counter type="METHOD" missed="35" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/javatuples/Octet" sourcefilename="Octet.java"><method name="with" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="71"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromArray" desc="([Ljava/lang/Object;)Lorg/javatuples/Octet;" line="85"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromCollection" desc="(Ljava/util/Collection;)Lorg/javatuples/Octet;" line="107"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="130"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue0" desc="()Ljava/lang/Object;" line="143"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue1" desc="()Ljava/lang/Object;" line="148"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue2" desc="()Ljava/lang/Object;" line="153"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue3" desc="()Ljava/lang/Object;" line="158"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue4" desc="()Ljava/lang/Object;" line="163"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue5" desc="()Ljava/lang/Object;" line="168"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue6" desc="()Ljava/lang/Object;" line="173"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue7" desc="()Ljava/lang/Object;" line="178"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSize" desc="()I" line="184"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="193"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="199"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="205"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="211"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="217"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="223"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt6" desc="(Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="229"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt7" desc="(Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="235"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt8" desc="(Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="241"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="251"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="257"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="263"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="269"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="275"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="281"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt6" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="287"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt7" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="293"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt8" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="299"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Ennead;" line="308"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Ennead;" line="312"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Ennead;" line="316"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Ennead;" line="320"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Ennead;" line="324"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Ennead;" line="328"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt6" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Ennead;" line="332"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt7" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Ennead;" line="336"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt8" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Ennead;" line="340"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Decade;" line="350"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Decade;" line="354"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Decade;" line="358"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Decade;" line="362"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Decade;" line="366"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Decade;" line="370"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt6" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Decade;" line="374"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt7" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Decade;" line="378"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt8" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Decade;" line="382"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="392"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Ennead;" line="397"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="404"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Decade;" line="409"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt0" desc="(Ljava/lang/Object;)Lorg/javatuples/Octet;" line="418"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt1" desc="(Ljava/lang/Object;)Lorg/javatuples/Octet;" line="423"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt2" desc="(Ljava/lang/Object;)Lorg/javatuples/Octet;" line="428"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt3" desc="(Ljava/lang/Object;)Lorg/javatuples/Octet;" line="433"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt4" desc="(Ljava/lang/Object;)Lorg/javatuples/Octet;" line="438"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt5" desc="(Ljava/lang/Object;)Lorg/javatuples/Octet;" line="443"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt6" desc="(Ljava/lang/Object;)Lorg/javatuples/Octet;" line="448"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt7" desc="(Ljava/lang/Object;)Lorg/javatuples/Octet;" line="453"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom0" desc="()Lorg/javatuples/Septet;" line="467"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom1" desc="()Lorg/javatuples/Septet;" line="472"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom2" desc="()Lorg/javatuples/Septet;" line="477"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom3" desc="()Lorg/javatuples/Septet;" line="482"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom4" desc="()Lorg/javatuples/Septet;" line="487"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom5" desc="()Lorg/javatuples/Septet;" line="492"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom6" desc="()Lorg/javatuples/Septet;" line="497"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom7" desc="()Lorg/javatuples/Septet;" line="502"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1007" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="89" covered="0"/><counter type="COMPLEXITY" missed="73" covered="0"/><counter type="METHOD" missed="69" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/javatuples/Ennead" sourcefilename="Ennead.java"><method name="with" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="74"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromArray" desc="([Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="88"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromCollection" desc="(Ljava/util/Collection;)Lorg/javatuples/Ennead;" line="110"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="134"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue0" desc="()Ljava/lang/Object;" line="148"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue1" desc="()Ljava/lang/Object;" line="153"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue2" desc="()Ljava/lang/Object;" line="158"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue3" desc="()Ljava/lang/Object;" line="163"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue4" desc="()Ljava/lang/Object;" line="168"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue5" desc="()Ljava/lang/Object;" line="173"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue6" desc="()Ljava/lang/Object;" line="178"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue7" desc="()Ljava/lang/Object;" line="183"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue8" desc="()Ljava/lang/Object;" line="188"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSize" desc="()I" line="194"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;)Lorg/javatuples/Decade;" line="201"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;)Lorg/javatuples/Decade;" line="207"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;)Lorg/javatuples/Decade;" line="213"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;)Lorg/javatuples/Decade;" line="219"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Ljava/lang/Object;)Lorg/javatuples/Decade;" line="225"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Ljava/lang/Object;)Lorg/javatuples/Decade;" line="231"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt6" desc="(Ljava/lang/Object;)Lorg/javatuples/Decade;" line="237"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt7" desc="(Ljava/lang/Object;)Lorg/javatuples/Decade;" line="243"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt8" desc="(Ljava/lang/Object;)Lorg/javatuples/Decade;" line="249"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt9" desc="(Ljava/lang/Object;)Lorg/javatuples/Decade;" line="255"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Decade;" line="263"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Decade;" line="267"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Decade;" line="271"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Decade;" line="275"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Decade;" line="279"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Decade;" line="283"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt6" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Decade;" line="287"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt7" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Decade;" line="291"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt8" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Decade;" line="295"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt9" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Decade;" line="299"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;)Lorg/javatuples/Decade;" line="306"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Decade;" line="311"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt0" desc="(Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="319"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt1" desc="(Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="324"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt2" desc="(Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="329"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt3" desc="(Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="334"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt4" desc="(Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="339"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt5" desc="(Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="344"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt6" desc="(Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="349"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt7" desc="(Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="354"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt8" desc="(Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="359"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom0" desc="()Lorg/javatuples/Octet;" line="370"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom1" desc="()Lorg/javatuples/Octet;" line="375"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom2" desc="()Lorg/javatuples/Octet;" line="380"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom3" desc="()Lorg/javatuples/Octet;" line="385"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom4" desc="()Lorg/javatuples/Octet;" line="390"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom5" desc="()Lorg/javatuples/Octet;" line="395"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom6" desc="()Lorg/javatuples/Octet;" line="400"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom7" desc="()Lorg/javatuples/Octet;" line="405"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom8" desc="()Lorg/javatuples/Octet;" line="410"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="872" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="75" covered="0"/><counter type="COMPLEXITY" missed="58" covered="0"/><counter type="METHOD" missed="54" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/javatuples/KeyValue" sourcefilename="KeyValue.java"><method name="with" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/KeyValue;" line="54"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromArray" desc="([Ljava/lang/Object;)Lorg/javatuples/KeyValue;" line="68"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromCollection" desc="(Ljava/util/Collection;)Lorg/javatuples/KeyValue;" line="79"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="93"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKey" desc="()Ljava/lang/Object;" line="100"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/Object;" line="105"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSize" desc="()I" line="111"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setKey" desc="(Ljava/lang/Object;)Lorg/javatuples/KeyValue;" line="117"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Ljava/lang/Object;)Lorg/javatuples/KeyValue;" line="122"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="117" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/javatuples/Unit" sourcefilename="Unit.java"><method name="with" desc="(Ljava/lang/Object;)Lorg/javatuples/Unit;" line="49"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromArray" desc="([Ljava/lang/Object;)Lorg/javatuples/Unit;" line="63"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromCollection" desc="(Ljava/util/Collection;)Lorg/javatuples/Unit;" line="83"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="97"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue0" desc="()Ljava/lang/Object;" line="103"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSize" desc="()I" line="109"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;)Lorg/javatuples/Pair;" line="123"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;)Lorg/javatuples/Pair;" line="128"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Triplet;" line="137"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Triplet;" line="142"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Quartet;" line="153"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Quartet;" line="158"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="169"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="174"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="184"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="189"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="199"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="204"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="214"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="219"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="229"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="234"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="244"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="249"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Pair;" line="261"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Pair;" line="265"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Triplet;" line="275"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Triplet;" line="279"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Quartet;" line="290"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Quartet;" line="294"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Quintet;" line="306"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Quintet;" line="310"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Sextet;" line="321"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Sextet;" line="325"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Sextet;)Lorg/javatuples/Septet;" line="336"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Sextet;)Lorg/javatuples/Septet;" line="340"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Septet;)Lorg/javatuples/Octet;" line="351"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Septet;)Lorg/javatuples/Octet;" line="355"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Octet;)Lorg/javatuples/Ennead;" line="366"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Octet;)Lorg/javatuples/Ennead;" line="370"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Ennead;)Lorg/javatuples/Decade;" line="381"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Ennead;)Lorg/javatuples/Decade;" line="385"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;)Lorg/javatuples/Pair;" line="397"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Pair;" line="402"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Triplet;" line="409"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Triplet;" line="414"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Quartet;" line="421"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Quartet;" line="426"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="433"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Quintet;" line="438"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="446"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Sextet;" line="451"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="459"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Sextet;)Lorg/javatuples/Septet;" line="464"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="472"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Septet;)Lorg/javatuples/Octet;" line="477"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="485"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Octet;)Lorg/javatuples/Ennead;" line="490"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="498"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Ennead;)Lorg/javatuples/Decade;" line="503"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt0" desc="(Ljava/lang/Object;)Lorg/javatuples/Unit;" line="516"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="632" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="72" covered="0"/><counter type="COMPLEXITY" missed="65" covered="0"/><counter type="METHOD" missed="61" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/javatuples/Quartet" sourcefilename="Quartet.java"><method name="with" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Quartet;" line="59"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromArray" desc="([Ljava/lang/Object;)Lorg/javatuples/Quartet;" line="73"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromCollection" desc="(Ljava/util/Collection;)Lorg/javatuples/Quartet;" line="93"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="111"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue0" desc="()Ljava/lang/Object;" line="120"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue1" desc="()Ljava/lang/Object;" line="125"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue2" desc="()Ljava/lang/Object;" line="130"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue3" desc="()Ljava/lang/Object;" line="135"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSize" desc="()I" line="141"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="151"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="156"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="161"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="166"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="171"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="180"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="185"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="190"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="195"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="200"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="211"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="216"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="221"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="226"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="231"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="242"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="247"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="252"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="257"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="262"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="272"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="277"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="282"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="287"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="292"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="302"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="307"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="312"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="317"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="322"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Quintet;" line="333"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Quintet;" line="337"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Quintet;" line="341"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Quintet;" line="345"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Quintet;" line="349"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Sextet;" line="359"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Sextet;" line="363"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Sextet;" line="367"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Sextet;" line="371"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Sextet;" line="375"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Septet;" line="386"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Septet;" line="390"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Septet;" line="394"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Septet;" line="398"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Septet;" line="402"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Octet;" line="414"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Octet;" line="418"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Octet;" line="422"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Octet;" line="426"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Octet;" line="430"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Ennead;" line="441"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Ennead;" line="445"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Ennead;" line="449"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Ennead;" line="453"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Ennead;" line="457"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Sextet;)Lorg/javatuples/Decade;" line="468"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Sextet;)Lorg/javatuples/Decade;" line="472"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Sextet;)Lorg/javatuples/Decade;" line="476"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Sextet;)Lorg/javatuples/Decade;" line="480"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Lorg/javatuples/Sextet;)Lorg/javatuples/Decade;" line="484"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="493"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Quintet;" line="498"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="505"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Sextet;" line="510"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="517"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Septet;" line="522"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="529"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Octet;" line="534"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="542"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Ennead;" line="547"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="555"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Sextet;)Lorg/javatuples/Decade;" line="560"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt0" desc="(Ljava/lang/Object;)Lorg/javatuples/Quartet;" line="572"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt1" desc="(Ljava/lang/Object;)Lorg/javatuples/Quartet;" line="577"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt2" desc="(Ljava/lang/Object;)Lorg/javatuples/Quartet;" line="582"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt3" desc="(Ljava/lang/Object;)Lorg/javatuples/Quartet;" line="587"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom0" desc="()Lorg/javatuples/Triplet;" line="602"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom1" desc="()Lorg/javatuples/Triplet;" line="607"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom2" desc="()Lorg/javatuples/Triplet;" line="612"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom3" desc="()Lorg/javatuples/Triplet;" line="617"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1047" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="103" covered="0"/><counter type="COMPLEXITY" missed="93" covered="0"/><counter type="METHOD" missed="89" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/javatuples/Tuple" sourcefilename="Tuple.java"><method name="&lt;init&gt;" desc="(I[Ljava/lang/Object;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="(I)Ljava/lang/Object;" line="79"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="90"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="96"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="101"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsAll" desc="(Ljava/util/Collection;)Z" line="117"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsAll" desc="([Ljava/lang/Object;)Z" line="127"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indexOf" desc="(Ljava/lang/Object;)I" line="141"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lastIndexOf" desc="(Ljava/lang/Object;)I" line="159"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toList" desc="()Ljava/util/List;" line="179"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="()[Ljava/lang/Object;" line="185"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="192"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="203"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="224" covered="14"/><counter type="BRANCH" missed="44" covered="0"/><counter type="LINE" missed="58" covered="5"/><counter type="COMPLEXITY" missed="33" covered="2"/><counter type="METHOD" missed="11" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/javatuples/Sextet" sourcefilename="Sextet.java"><method name="with" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="65"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromArray" desc="([Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="79"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromCollection" desc="(Ljava/util/Collection;)Lorg/javatuples/Sextet;" line="101"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="123"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue0" desc="()Ljava/lang/Object;" line="134"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue1" desc="()Ljava/lang/Object;" line="139"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue2" desc="()Ljava/lang/Object;" line="144"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue3" desc="()Ljava/lang/Object;" line="149"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue4" desc="()Ljava/lang/Object;" line="154"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue5" desc="()Ljava/lang/Object;" line="159"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSize" desc="()I" line="165"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;)Lorg/javatuples/Septet;" line="176"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;)Lorg/javatuples/Septet;" line="181"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;)Lorg/javatuples/Septet;" line="186"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;)Lorg/javatuples/Septet;" line="191"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Ljava/lang/Object;)Lorg/javatuples/Septet;" line="196"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Ljava/lang/Object;)Lorg/javatuples/Septet;" line="201"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt6" desc="(Ljava/lang/Object;)Lorg/javatuples/Septet;" line="206"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="215"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="220"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="225"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="230"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="235"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="240"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt6" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="245"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="256"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="261"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="266"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="271"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="276"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="281"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt6" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="286"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="297"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="302"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="307"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="312"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="317"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="322"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt6" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="327"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Septet;" line="336"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Septet;" line="340"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Septet;" line="344"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Septet;" line="348"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Septet;" line="352"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Septet;" line="356"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt6" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Septet;" line="360"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Octet;" line="370"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Octet;" line="374"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Octet;" line="378"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Octet;" line="382"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Octet;" line="386"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Octet;" line="390"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt6" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Octet;" line="394"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Ennead;" line="405"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Ennead;" line="409"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Ennead;" line="413"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Ennead;" line="417"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Ennead;" line="421"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Ennead;" line="425"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt6" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Ennead;" line="429"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Decade;" line="441"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Decade;" line="445"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Decade;" line="449"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Decade;" line="453"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Decade;" line="457"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Decade;" line="461"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt6" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Decade;" line="465"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;)Lorg/javatuples/Septet;" line="477"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Septet;" line="482"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="489"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Octet;" line="494"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="501"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Ennead;" line="506"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="513"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Decade;" line="518"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt0" desc="(Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="529"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt1" desc="(Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="534"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt2" desc="(Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="539"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt3" desc="(Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="544"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt4" desc="(Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="549"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt5" desc="(Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="554"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom0" desc="()Lorg/javatuples/Quintet;" line="565"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom1" desc="()Lorg/javatuples/Quintet;" line="570"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom2" desc="()Lorg/javatuples/Quintet;" line="575"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom3" desc="()Lorg/javatuples/Quintet;" line="580"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom4" desc="()Lorg/javatuples/Quintet;" line="585"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom5" desc="()Lorg/javatuples/Quintet;" line="590"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1121" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="105" covered="0"/><counter type="COMPLEXITY" missed="91" covered="0"/><counter type="METHOD" missed="87" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/javatuples/LabelValue" sourcefilename="LabelValue.java"><method name="with" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/LabelValue;" line="54"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromArray" desc="([Ljava/lang/Object;)Lorg/javatuples/LabelValue;" line="68"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromCollection" desc="(Ljava/util/Collection;)Lorg/javatuples/LabelValue;" line="79"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="95"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLabel" desc="()Ljava/lang/Object;" line="102"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/Object;" line="107"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSize" desc="()I" line="113"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLabel" desc="(Ljava/lang/Object;)Lorg/javatuples/LabelValue;" line="119"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Ljava/lang/Object;)Lorg/javatuples/LabelValue;" line="124"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="117" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/javatuples/Quintet" sourcefilename="Quintet.java"><method name="with" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="62"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromArray" desc="([Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="76"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromCollection" desc="(Ljava/util/Collection;)Lorg/javatuples/Quintet;" line="97"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="117"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue0" desc="()Ljava/lang/Object;" line="127"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue1" desc="()Ljava/lang/Object;" line="132"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue2" desc="()Ljava/lang/Object;" line="137"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue3" desc="()Ljava/lang/Object;" line="142"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue4" desc="()Ljava/lang/Object;" line="147"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSize" desc="()I" line="153"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="164"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="169"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="174"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="179"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="184"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="189"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="198"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="203"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="208"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="213"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="218"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="223"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="234"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="239"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="244"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="249"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="254"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="259"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="270"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="275"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="280"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="285"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="290"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="295"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="305"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="310"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="315"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="320"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="325"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="330"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Sextet;" line="341"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Sextet;" line="345"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Sextet;" line="349"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Sextet;" line="353"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Sextet;" line="357"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Sextet;" line="361"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Septet;" line="371"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Septet;" line="375"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Septet;" line="379"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Septet;" line="383"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Septet;" line="387"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Septet;" line="391"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Octet;" line="402"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Octet;" line="406"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Octet;" line="410"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Octet;" line="414"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Octet;" line="418"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Octet;" line="422"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Ennead;" line="434"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Ennead;" line="438"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Ennead;" line="442"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Ennead;" line="446"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Ennead;" line="450"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Ennead;" line="454"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Decade;" line="465"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Decade;" line="469"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Decade;" line="473"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Decade;" line="477"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt4" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Decade;" line="481"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt5" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Decade;" line="485"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="494"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Sextet;" line="499"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="506"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Septet;" line="511"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="518"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Octet;" line="523"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="530"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Ennead;" line="535"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="543"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Decade;" line="548"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt0" desc="(Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="557"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt1" desc="(Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="562"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt2" desc="(Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="567"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt3" desc="(Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="572"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt4" desc="(Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="577"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom0" desc="()Lorg/javatuples/Quartet;" line="589"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom1" desc="()Lorg/javatuples/Quartet;" line="594"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom2" desc="()Lorg/javatuples/Quartet;" line="599"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom3" desc="()Lorg/javatuples/Quartet;" line="604"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom4" desc="()Lorg/javatuples/Quartet;" line="609"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1106" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="106" covered="0"/><counter type="COMPLEXITY" missed="94" covered="0"/><counter type="METHOD" missed="90" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/javatuples/Triplet" sourcefilename="Triplet.java"><method name="with" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Triplet;" line="56"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromArray" desc="([Ljava/lang/Object;)Lorg/javatuples/Triplet;" line="70"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromCollection" desc="(Ljava/util/Collection;)Lorg/javatuples/Triplet;" line="90"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="109"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue0" desc="()Ljava/lang/Object;" line="117"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue1" desc="()Ljava/lang/Object;" line="122"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue2" desc="()Ljava/lang/Object;" line="127"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSize" desc="()I" line="133"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;)Lorg/javatuples/Quartet;" line="145"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;)Lorg/javatuples/Quartet;" line="150"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;)Lorg/javatuples/Quartet;" line="155"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;)Lorg/javatuples/Quartet;" line="160"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="169"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="174"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="179"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="184"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="195"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="200"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="205"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="210"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="221"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="226"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="231"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="236"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="246"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="251"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="256"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="261"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="271"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="276"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="281"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="286"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="296"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="301"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="306"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="311"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Quartet;" line="322"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Quartet;" line="326"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Quartet;" line="330"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Quartet;" line="334"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Quintet;" line="344"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Quintet;" line="348"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Quintet;" line="352"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Quintet;" line="356"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Sextet;" line="367"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Sextet;" line="371"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Sextet;" line="375"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Sextet;" line="379"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Septet;" line="391"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Septet;" line="395"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Septet;" line="399"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Septet;" line="403"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Octet;" line="414"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Octet;" line="418"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Octet;" line="422"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Octet;" line="426"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Sextet;)Lorg/javatuples/Ennead;" line="437"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Sextet;)Lorg/javatuples/Ennead;" line="441"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Sextet;)Lorg/javatuples/Ennead;" line="445"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Sextet;)Lorg/javatuples/Ennead;" line="449"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt0" desc="(Lorg/javatuples/Septet;)Lorg/javatuples/Decade;" line="460"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt1" desc="(Lorg/javatuples/Septet;)Lorg/javatuples/Decade;" line="464"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt2" desc="(Lorg/javatuples/Septet;)Lorg/javatuples/Decade;" line="468"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAt3" desc="(Lorg/javatuples/Septet;)Lorg/javatuples/Decade;" line="472"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;)Lorg/javatuples/Quartet;" line="481"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Unit;)Lorg/javatuples/Quartet;" line="486"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Quintet;" line="493"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Pair;)Lorg/javatuples/Quintet;" line="498"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Sextet;" line="505"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Triplet;)Lorg/javatuples/Sextet;" line="510"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Septet;" line="517"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Quartet;)Lorg/javatuples/Septet;" line="522"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Octet;" line="530"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Quintet;)Lorg/javatuples/Octet;" line="535"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Ennead;" line="543"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Sextet;)Lorg/javatuples/Ennead;" line="548"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/javatuples/Decade;" line="556"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/javatuples/Septet;)Lorg/javatuples/Decade;" line="561"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt0" desc="(Ljava/lang/Object;)Lorg/javatuples/Triplet;" line="572"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt1" desc="(Ljava/lang/Object;)Lorg/javatuples/Triplet;" line="577"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAt2" desc="(Ljava/lang/Object;)Lorg/javatuples/Triplet;" line="582"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom0" desc="()Lorg/javatuples/Pair;" line="593"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom1" desc="()Lorg/javatuples/Pair;" line="598"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFrom2" desc="()Lorg/javatuples/Pair;" line="603"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="947" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="97" covered="0"/><counter type="COMPLEXITY" missed="88" covered="0"/><counter type="METHOD" missed="84" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Decade.java"><line nr="76" mi="14" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="2" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="2" cb="0"/><line nr="94" mi="13" ci="0" mb="0" cb="0"/><line nr="96" mi="34" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="2" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="2" cb="0"/><line nr="116" mi="13" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="10" ci="0" mb="0" cb="0"/><line nr="121" mi="10" ci="0" mb="0" cb="0"/><line nr="138" mi="45" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="188" mi="3" ci="0" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="204" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="23" ci="0" mb="0" cb="0"/><line nr="215" mi="23" ci="0" mb="0" cb="0"/><line nr="220" mi="23" ci="0" mb="0" cb="0"/><line nr="225" mi="23" ci="0" mb="0" cb="0"/><line nr="230" mi="23" ci="0" mb="0" cb="0"/><line nr="235" mi="23" ci="0" mb="0" cb="0"/><line nr="240" mi="23" ci="0" mb="0" cb="0"/><line nr="245" mi="23" ci="0" mb="0" cb="0"/><line nr="250" mi="23" ci="0" mb="0" cb="0"/><line nr="255" mi="23" ci="0" mb="0" cb="0"/><line nr="267" mi="22" ci="0" mb="0" cb="0"/><line nr="272" mi="22" ci="0" mb="0" cb="0"/><line nr="277" mi="22" ci="0" mb="0" cb="0"/><line nr="282" mi="22" ci="0" mb="0" cb="0"/><line nr="287" mi="22" ci="0" mb="0" cb="0"/><line nr="292" mi="22" ci="0" mb="0" cb="0"/><line nr="297" mi="22" ci="0" mb="0" cb="0"/><line nr="302" mi="22" ci="0" mb="0" cb="0"/><line nr="307" mi="22" ci="0" mb="0" cb="0"/><line nr="312" mi="22" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="681" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="57" covered="0"/><counter type="COMPLEXITY" missed="39" covered="0"/><counter type="METHOD" missed="35" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LabelValue.java"><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="2" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="2" cb="0"/><line nr="72" mi="13" ci="0" mb="0" cb="0"/><line nr="74" mi="10" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="2" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="2" cb="0"/><line nr="83" mi="13" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="8" ci="0" mb="0" cb="0"/><line nr="95" mi="13" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="7" ci="0" mb="0" cb="0"/><line nr="124" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="117" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Pair.java"><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="2" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="2" cb="0"/><line nr="71" mi="13" ci="0" mb="0" cb="0"/><line nr="73" mi="10" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="2" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="2" cb="0"/><line nr="91" mi="13" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="8" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="13" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="9" ci="0" mb="0" cb="0"/><line nr="141" mi="9" ci="0" mb="0" cb="0"/><line nr="146" mi="9" ci="0" mb="0" cb="0"/><line nr="155" mi="10" ci="0" mb="0" cb="0"/><line nr="160" mi="10" ci="0" mb="0" cb="0"/><line nr="165" mi="10" ci="0" mb="0" cb="0"/><line nr="176" mi="11" ci="0" mb="0" cb="0"/><line nr="181" mi="11" ci="0" mb="0" cb="0"/><line nr="186" mi="11" ci="0" mb="0" cb="0"/><line nr="197" mi="12" ci="0" mb="0" cb="0"/><line nr="202" mi="12" ci="0" mb="0" cb="0"/><line nr="207" mi="12" ci="0" mb="0" cb="0"/><line nr="217" mi="13" ci="0" mb="0" cb="0"/><line nr="222" mi="13" ci="0" mb="0" cb="0"/><line nr="227" mi="13" ci="0" mb="0" cb="0"/><line nr="237" mi="14" ci="0" mb="0" cb="0"/><line nr="242" mi="14" ci="0" mb="0" cb="0"/><line nr="247" mi="14" ci="0" mb="0" cb="0"/><line nr="257" mi="15" ci="0" mb="0" cb="0"/><line nr="262" mi="15" ci="0" mb="0" cb="0"/><line nr="267" mi="15" ci="0" mb="0" cb="0"/><line nr="277" mi="16" ci="0" mb="0" cb="0"/><line nr="282" mi="16" ci="0" mb="0" cb="0"/><line nr="287" mi="16" ci="0" mb="0" cb="0"/><line nr="299" mi="5" ci="0" mb="0" cb="0"/><line nr="303" mi="5" ci="0" mb="0" cb="0"/><line nr="307" mi="5" ci="0" mb="0" cb="0"/><line nr="317" mi="7" ci="0" mb="0" cb="0"/><line nr="321" mi="7" ci="0" mb="0" cb="0"/><line nr="325" mi="7" ci="0" mb="0" cb="0"/><line nr="336" mi="9" ci="0" mb="0" cb="0"/><line nr="340" mi="9" ci="0" mb="0" cb="0"/><line nr="344" mi="9" ci="0" mb="0" cb="0"/><line nr="356" mi="11" ci="0" mb="0" cb="0"/><line nr="360" mi="11" ci="0" mb="0" cb="0"/><line nr="364" mi="11" ci="0" mb="0" cb="0"/><line nr="375" mi="13" ci="0" mb="0" cb="0"/><line nr="379" mi="13" ci="0" mb="0" cb="0"/><line nr="383" mi="13" ci="0" mb="0" cb="0"/><line nr="394" mi="15" ci="0" mb="0" cb="0"/><line nr="398" mi="15" ci="0" mb="0" cb="0"/><line nr="402" mi="15" ci="0" mb="0" cb="0"/><line nr="413" mi="17" ci="0" mb="0" cb="0"/><line nr="417" mi="17" ci="0" mb="0" cb="0"/><line nr="421" mi="17" ci="0" mb="0" cb="0"/><line nr="432" mi="19" ci="0" mb="0" cb="0"/><line nr="436" mi="19" ci="0" mb="0" cb="0"/><line nr="440" mi="19" ci="0" mb="0" cb="0"/><line nr="452" mi="4" ci="0" mb="0" cb="0"/><line nr="457" mi="4" ci="0" mb="0" cb="0"/><line nr="464" mi="5" ci="0" mb="0" cb="0"/><line nr="469" mi="4" ci="0" mb="0" cb="0"/><line nr="476" mi="6" ci="0" mb="0" cb="0"/><line nr="481" mi="4" ci="0" mb="0" cb="0"/><line nr="488" mi="7" ci="0" mb="0" cb="0"/><line nr="493" mi="4" ci="0" mb="0" cb="0"/><line nr="501" mi="8" ci="0" mb="0" cb="0"/><line nr="506" mi="4" ci="0" mb="0" cb="0"/><line nr="514" mi="9" ci="0" mb="0" cb="0"/><line nr="519" mi="4" ci="0" mb="0" cb="0"/><line nr="527" mi="10" ci="0" mb="0" cb="0"/><line nr="532" mi="4" ci="0" mb="0" cb="0"/><line nr="540" mi="11" ci="0" mb="0" cb="0"/><line nr="545" mi="4" ci="0" mb="0" cb="0"/><line nr="557" mi="7" ci="0" mb="0" cb="0"/><line nr="562" mi="7" ci="0" mb="0" cb="0"/><line nr="575" mi="6" ci="0" mb="0" cb="0"/><line nr="580" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="780" covered="29"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="81" covered="6"/><counter type="COMPLEXITY" missed="76" covered="3"/><counter type="METHOD" missed="72" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KeyValue.java"><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="2" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="2" cb="0"/><line nr="72" mi="13" ci="0" mb="0" cb="0"/><line nr="74" mi="10" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="2" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="2" cb="0"/><line nr="83" mi="13" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="8" ci="0" mb="0" cb="0"/><line nr="93" mi="13" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="7" ci="0" mb="0" cb="0"/><line nr="122" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="117" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Tuple.java"><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="2" cb="0"/><line nr="80" mi="12" ci="0" mb="0" cb="0"/><line nr="81" mi="6" ci="0" mb="0" cb="0"/><line nr="82" mi="7" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="10" ci="0" mb="2" cb="0"/><line nr="102" mi="2" ci="0" mb="2" cb="0"/><line nr="103" mi="2" ci="0" mb="2" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="2" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="9" ci="0" mb="2" cb="0"/><line nr="118" mi="4" ci="0" mb="2" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="2" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="130" mi="16" ci="0" mb="2" cb="0"/><line nr="131" mi="4" ci="0" mb="2" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="10" ci="0" mb="2" cb="0"/><line nr="143" mi="2" ci="0" mb="2" cb="0"/><line nr="144" mi="2" ci="0" mb="2" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="2" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="1" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="9" ci="0" mb="2" cb="0"/><line nr="160" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="2" ci="0" mb="2" cb="0"/><line nr="162" mi="2" ci="0" mb="2" cb="0"/><line nr="163" mi="2" ci="0" mb="0" cb="0"/><line nr="166" mi="4" ci="0" mb="2" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="7" ci="0" mb="0" cb="0"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="194" mi="10" ci="0" mb="2" cb="0"/><line nr="195" mi="3" ci="0" mb="0" cb="0"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="2" cb="0"/><line nr="204" mi="2" ci="0" mb="0" cb="0"/><line nr="206" mi="2" ci="0" mb="2" cb="0"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><line nr="209" mi="5" ci="0" mb="2" cb="0"/><line nr="210" mi="2" ci="0" mb="0" cb="0"/><line nr="212" mi="3" ci="0" mb="0" cb="0"/><line nr="213" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="224" covered="14"/><counter type="BRANCH" missed="44" covered="0"/><counter type="LINE" missed="58" covered="5"/><counter type="COMPLEXITY" missed="33" covered="2"/><counter type="METHOD" missed="11" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Triplet.java"><line nr="56" mi="7" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="2" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="2" cb="0"/><line nr="74" mi="13" ci="0" mb="0" cb="0"/><line nr="76" mi="13" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="2" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="2" cb="0"/><line nr="94" mi="13" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="10" ci="0" mb="0" cb="0"/><line nr="109" mi="17" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="11" ci="0" mb="0" cb="0"/><line nr="150" mi="11" ci="0" mb="0" cb="0"/><line nr="155" mi="11" ci="0" mb="0" cb="0"/><line nr="160" mi="11" ci="0" mb="0" cb="0"/><line nr="169" mi="12" ci="0" mb="0" cb="0"/><line nr="174" mi="12" ci="0" mb="0" cb="0"/><line nr="179" mi="12" ci="0" mb="0" cb="0"/><line nr="184" mi="12" ci="0" mb="0" cb="0"/><line nr="195" mi="13" ci="0" mb="0" cb="0"/><line nr="200" mi="13" ci="0" mb="0" cb="0"/><line nr="205" mi="13" ci="0" mb="0" cb="0"/><line nr="210" mi="13" ci="0" mb="0" cb="0"/><line nr="221" mi="14" ci="0" mb="0" cb="0"/><line nr="226" mi="14" ci="0" mb="0" cb="0"/><line nr="231" mi="14" ci="0" mb="0" cb="0"/><line nr="236" mi="14" ci="0" mb="0" cb="0"/><line nr="246" mi="15" ci="0" mb="0" cb="0"/><line nr="251" mi="15" ci="0" mb="0" cb="0"/><line nr="256" mi="15" ci="0" mb="0" cb="0"/><line nr="261" mi="15" ci="0" mb="0" cb="0"/><line nr="271" mi="16" ci="0" mb="0" cb="0"/><line nr="276" mi="16" ci="0" mb="0" cb="0"/><line nr="281" mi="16" ci="0" mb="0" cb="0"/><line nr="286" mi="16" ci="0" mb="0" cb="0"/><line nr="296" mi="17" ci="0" mb="0" cb="0"/><line nr="301" mi="17" ci="0" mb="0" cb="0"/><line nr="306" mi="17" ci="0" mb="0" cb="0"/><line nr="311" mi="17" ci="0" mb="0" cb="0"/><line nr="322" mi="5" ci="0" mb="0" cb="0"/><line nr="326" mi="5" ci="0" mb="0" cb="0"/><line nr="330" mi="5" ci="0" mb="0" cb="0"/><line nr="334" mi="5" ci="0" mb="0" cb="0"/><line nr="344" mi="7" ci="0" mb="0" cb="0"/><line nr="348" mi="7" ci="0" mb="0" cb="0"/><line nr="352" mi="7" ci="0" mb="0" cb="0"/><line nr="356" mi="7" ci="0" mb="0" cb="0"/><line nr="367" mi="9" ci="0" mb="0" cb="0"/><line nr="371" mi="9" ci="0" mb="0" cb="0"/><line nr="375" mi="9" ci="0" mb="0" cb="0"/><line nr="379" mi="9" ci="0" mb="0" cb="0"/><line nr="391" mi="11" ci="0" mb="0" cb="0"/><line nr="395" mi="11" ci="0" mb="0" cb="0"/><line nr="399" mi="11" ci="0" mb="0" cb="0"/><line nr="403" mi="11" ci="0" mb="0" cb="0"/><line nr="414" mi="13" ci="0" mb="0" cb="0"/><line nr="418" mi="13" ci="0" mb="0" cb="0"/><line nr="422" mi="13" ci="0" mb="0" cb="0"/><line nr="426" mi="13" ci="0" mb="0" cb="0"/><line nr="437" mi="15" ci="0" mb="0" cb="0"/><line nr="441" mi="15" ci="0" mb="0" cb="0"/><line nr="445" mi="15" ci="0" mb="0" cb="0"/><line nr="449" mi="15" ci="0" mb="0" cb="0"/><line nr="460" mi="17" ci="0" mb="0" cb="0"/><line nr="464" mi="17" ci="0" mb="0" cb="0"/><line nr="468" mi="17" ci="0" mb="0" cb="0"/><line nr="472" mi="17" ci="0" mb="0" cb="0"/><line nr="481" mi="4" ci="0" mb="0" cb="0"/><line nr="486" mi="4" ci="0" mb="0" cb="0"/><line nr="493" mi="5" ci="0" mb="0" cb="0"/><line nr="498" mi="4" ci="0" mb="0" cb="0"/><line nr="505" mi="6" ci="0" mb="0" cb="0"/><line nr="510" mi="4" ci="0" mb="0" cb="0"/><line nr="517" mi="7" ci="0" mb="0" cb="0"/><line nr="522" mi="4" ci="0" mb="0" cb="0"/><line nr="530" mi="8" ci="0" mb="0" cb="0"/><line nr="535" mi="4" ci="0" mb="0" cb="0"/><line nr="543" mi="9" ci="0" mb="0" cb="0"/><line nr="548" mi="4" ci="0" mb="0" cb="0"/><line nr="556" mi="10" ci="0" mb="0" cb="0"/><line nr="561" mi="4" ci="0" mb="0" cb="0"/><line nr="572" mi="9" ci="0" mb="0" cb="0"/><line nr="577" mi="9" ci="0" mb="0" cb="0"/><line nr="582" mi="9" ci="0" mb="0" cb="0"/><line nr="593" mi="8" ci="0" mb="0" cb="0"/><line nr="598" mi="8" ci="0" mb="0" cb="0"/><line nr="603" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="947" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="97" covered="0"/><counter type="COMPLEXITY" missed="88" covered="0"/><counter type="METHOD" missed="84" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Unit.java"><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="2" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="2" cb="0"/><line nr="67" mi="13" ci="0" mb="0" cb="0"/><line nr="69" mi="7" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="2" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="2" cb="0"/><line nr="87" mi="13" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="9" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="7" ci="0" mb="0" cb="0"/><line nr="128" mi="7" ci="0" mb="0" cb="0"/><line nr="137" mi="8" ci="0" mb="0" cb="0"/><line nr="142" mi="8" ci="0" mb="0" cb="0"/><line nr="153" mi="9" ci="0" mb="0" cb="0"/><line nr="158" mi="9" ci="0" mb="0" cb="0"/><line nr="169" mi="10" ci="0" mb="0" cb="0"/><line nr="174" mi="10" ci="0" mb="0" cb="0"/><line nr="184" mi="11" ci="0" mb="0" cb="0"/><line nr="189" mi="11" ci="0" mb="0" cb="0"/><line nr="199" mi="12" ci="0" mb="0" cb="0"/><line nr="204" mi="12" ci="0" mb="0" cb="0"/><line nr="214" mi="13" ci="0" mb="0" cb="0"/><line nr="219" mi="13" ci="0" mb="0" cb="0"/><line nr="229" mi="14" ci="0" mb="0" cb="0"/><line nr="234" mi="14" ci="0" mb="0" cb="0"/><line nr="244" mi="15" ci="0" mb="0" cb="0"/><line nr="249" mi="15" ci="0" mb="0" cb="0"/><line nr="261" mi="5" ci="0" mb="0" cb="0"/><line nr="265" mi="5" ci="0" mb="0" cb="0"/><line nr="275" mi="7" ci="0" mb="0" cb="0"/><line nr="279" mi="7" ci="0" mb="0" cb="0"/><line nr="290" mi="9" ci="0" mb="0" cb="0"/><line nr="294" mi="9" ci="0" mb="0" cb="0"/><line nr="306" mi="11" ci="0" mb="0" cb="0"/><line nr="310" mi="11" ci="0" mb="0" cb="0"/><line nr="321" mi="13" ci="0" mb="0" cb="0"/><line nr="325" mi="13" ci="0" mb="0" cb="0"/><line nr="336" mi="15" ci="0" mb="0" cb="0"/><line nr="340" mi="15" ci="0" mb="0" cb="0"/><line nr="351" mi="17" ci="0" mb="0" cb="0"/><line nr="355" mi="17" ci="0" mb="0" cb="0"/><line nr="366" mi="19" ci="0" mb="0" cb="0"/><line nr="370" mi="19" ci="0" mb="0" cb="0"/><line nr="381" mi="21" ci="0" mb="0" cb="0"/><line nr="385" mi="21" ci="0" mb="0" cb="0"/><line nr="397" mi="4" ci="0" mb="0" cb="0"/><line nr="402" mi="4" ci="0" mb="0" cb="0"/><line nr="409" mi="5" ci="0" mb="0" cb="0"/><line nr="414" mi="4" ci="0" mb="0" cb="0"/><line nr="421" mi="6" ci="0" mb="0" cb="0"/><line nr="426" mi="4" ci="0" mb="0" cb="0"/><line nr="433" mi="7" ci="0" mb="0" cb="0"/><line nr="438" mi="4" ci="0" mb="0" cb="0"/><line nr="446" mi="8" ci="0" mb="0" cb="0"/><line nr="451" mi="4" ci="0" mb="0" cb="0"/><line nr="459" mi="9" ci="0" mb="0" cb="0"/><line nr="464" mi="4" ci="0" mb="0" cb="0"/><line nr="472" mi="10" ci="0" mb="0" cb="0"/><line nr="477" mi="4" ci="0" mb="0" cb="0"/><line nr="485" mi="11" ci="0" mb="0" cb="0"/><line nr="490" mi="4" ci="0" mb="0" cb="0"/><line nr="498" mi="12" ci="0" mb="0" cb="0"/><line nr="503" mi="4" ci="0" mb="0" cb="0"/><line nr="516" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="632" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="72" covered="0"/><counter type="COMPLEXITY" missed="65" covered="0"/><counter type="METHOD" missed="61" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Ennead.java"><line nr="74" mi="13" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="2" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="2" cb="0"/><line nr="92" mi="13" ci="0" mb="0" cb="0"/><line nr="94" mi="31" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="2" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="2" cb="0"/><line nr="114" mi="13" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="10" ci="0" mb="0" cb="0"/><line nr="119" mi="8" ci="0" mb="0" cb="0"/><line nr="134" mi="41" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="188" mi="3" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="23" ci="0" mb="0" cb="0"/><line nr="207" mi="23" ci="0" mb="0" cb="0"/><line nr="213" mi="23" ci="0" mb="0" cb="0"/><line nr="219" mi="23" ci="0" mb="0" cb="0"/><line nr="225" mi="23" ci="0" mb="0" cb="0"/><line nr="231" mi="23" ci="0" mb="0" cb="0"/><line nr="237" mi="23" ci="0" mb="0" cb="0"/><line nr="243" mi="23" ci="0" mb="0" cb="0"/><line nr="249" mi="23" ci="0" mb="0" cb="0"/><line nr="255" mi="23" ci="0" mb="0" cb="0"/><line nr="263" mi="5" ci="0" mb="0" cb="0"/><line nr="267" mi="5" ci="0" mb="0" cb="0"/><line nr="271" mi="5" ci="0" mb="0" cb="0"/><line nr="275" mi="5" ci="0" mb="0" cb="0"/><line nr="279" mi="5" ci="0" mb="0" cb="0"/><line nr="283" mi="5" ci="0" mb="0" cb="0"/><line nr="287" mi="5" ci="0" mb="0" cb="0"/><line nr="291" mi="5" ci="0" mb="0" cb="0"/><line nr="295" mi="5" ci="0" mb="0" cb="0"/><line nr="299" mi="5" ci="0" mb="0" cb="0"/><line nr="306" mi="4" ci="0" mb="0" cb="0"/><line nr="311" mi="4" ci="0" mb="0" cb="0"/><line nr="319" mi="21" ci="0" mb="0" cb="0"/><line nr="324" mi="21" ci="0" mb="0" cb="0"/><line nr="329" mi="21" ci="0" mb="0" cb="0"/><line nr="334" mi="21" ci="0" mb="0" cb="0"/><line nr="339" mi="21" ci="0" mb="0" cb="0"/><line nr="344" mi="21" ci="0" mb="0" cb="0"/><line nr="349" mi="21" ci="0" mb="0" cb="0"/><line nr="354" mi="21" ci="0" mb="0" cb="0"/><line nr="359" mi="21" ci="0" mb="0" cb="0"/><line nr="370" mi="20" ci="0" mb="0" cb="0"/><line nr="375" mi="20" ci="0" mb="0" cb="0"/><line nr="380" mi="20" ci="0" mb="0" cb="0"/><line nr="385" mi="20" ci="0" mb="0" cb="0"/><line nr="390" mi="20" ci="0" mb="0" cb="0"/><line nr="395" mi="20" ci="0" mb="0" cb="0"/><line nr="400" mi="20" ci="0" mb="0" cb="0"/><line nr="405" mi="20" ci="0" mb="0" cb="0"/><line nr="410" mi="20" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="872" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="75" covered="0"/><counter type="COMPLEXITY" missed="58" covered="0"/><counter type="METHOD" missed="54" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Septet.java"><line nr="68" mi="11" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="2" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="2" cb="0"/><line nr="86" mi="13" ci="0" mb="0" cb="0"/><line nr="88" mi="25" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="2" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="2" cb="0"/><line nr="108" mi="13" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="10" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="33" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="3" ci="0" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="185" mi="19" ci="0" mb="0" cb="0"/><line nr="191" mi="19" ci="0" mb="0" cb="0"/><line nr="197" mi="19" ci="0" mb="0" cb="0"/><line nr="203" mi="19" ci="0" mb="0" cb="0"/><line nr="209" mi="19" ci="0" mb="0" cb="0"/><line nr="215" mi="19" ci="0" mb="0" cb="0"/><line nr="221" mi="19" ci="0" mb="0" cb="0"/><line nr="227" mi="19" ci="0" mb="0" cb="0"/><line nr="237" mi="20" ci="0" mb="0" cb="0"/><line nr="243" mi="20" ci="0" mb="0" cb="0"/><line nr="249" mi="20" ci="0" mb="0" cb="0"/><line nr="255" mi="20" ci="0" mb="0" cb="0"/><line nr="261" mi="20" ci="0" mb="0" cb="0"/><line nr="267" mi="20" ci="0" mb="0" cb="0"/><line nr="273" mi="20" ci="0" mb="0" cb="0"/><line nr="279" mi="20" ci="0" mb="0" cb="0"/><line nr="291" mi="21" ci="0" mb="0" cb="0"/><line nr="297" mi="21" ci="0" mb="0" cb="0"/><line nr="303" mi="21" ci="0" mb="0" cb="0"/><line nr="309" mi="21" ci="0" mb="0" cb="0"/><line nr="315" mi="21" ci="0" mb="0" cb="0"/><line nr="321" mi="21" ci="0" mb="0" cb="0"/><line nr="327" mi="21" ci="0" mb="0" cb="0"/><line nr="333" mi="21" ci="0" mb="0" cb="0"/><line nr="342" mi="5" ci="0" mb="0" cb="0"/><line nr="346" mi="5" ci="0" mb="0" cb="0"/><line nr="350" mi="5" ci="0" mb="0" cb="0"/><line nr="354" mi="5" ci="0" mb="0" cb="0"/><line nr="358" mi="5" ci="0" mb="0" cb="0"/><line nr="362" mi="5" ci="0" mb="0" cb="0"/><line nr="366" mi="5" ci="0" mb="0" cb="0"/><line nr="370" mi="5" ci="0" mb="0" cb="0"/><line nr="380" mi="7" ci="0" mb="0" cb="0"/><line nr="384" mi="7" ci="0" mb="0" cb="0"/><line nr="388" mi="7" ci="0" mb="0" cb="0"/><line nr="392" mi="7" ci="0" mb="0" cb="0"/><line nr="396" mi="7" ci="0" mb="0" cb="0"/><line nr="400" mi="7" ci="0" mb="0" cb="0"/><line nr="404" mi="7" ci="0" mb="0" cb="0"/><line nr="408" mi="7" ci="0" mb="0" cb="0"/><line nr="419" mi="9" ci="0" mb="0" cb="0"/><line nr="423" mi="9" ci="0" mb="0" cb="0"/><line nr="427" mi="9" ci="0" mb="0" cb="0"/><line nr="431" mi="9" ci="0" mb="0" cb="0"/><line nr="435" mi="9" ci="0" mb="0" cb="0"/><line nr="439" mi="9" ci="0" mb="0" cb="0"/><line nr="443" mi="9" ci="0" mb="0" cb="0"/><line nr="447" mi="9" ci="0" mb="0" cb="0"/><line nr="457" mi="4" ci="0" mb="0" cb="0"/><line nr="462" mi="4" ci="0" mb="0" cb="0"/><line nr="469" mi="5" ci="0" mb="0" cb="0"/><line nr="474" mi="4" ci="0" mb="0" cb="0"/><line nr="481" mi="6" ci="0" mb="0" cb="0"/><line nr="486" mi="4" ci="0" mb="0" cb="0"/><line nr="495" mi="17" ci="0" mb="0" cb="0"/><line nr="500" mi="17" ci="0" mb="0" cb="0"/><line nr="505" mi="17" ci="0" mb="0" cb="0"/><line nr="510" mi="17" ci="0" mb="0" cb="0"/><line nr="515" mi="17" ci="0" mb="0" cb="0"/><line nr="520" mi="17" ci="0" mb="0" cb="0"/><line nr="525" mi="17" ci="0" mb="0" cb="0"/><line nr="540" mi="16" ci="0" mb="0" cb="0"/><line nr="545" mi="16" ci="0" mb="0" cb="0"/><line nr="550" mi="16" ci="0" mb="0" cb="0"/><line nr="555" mi="16" ci="0" mb="0" cb="0"/><line nr="560" mi="16" ci="0" mb="0" cb="0"/><line nr="565" mi="16" ci="0" mb="0" cb="0"/><line nr="570" mi="16" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1089" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="99" covered="0"/><counter type="COMPLEXITY" missed="84" covered="0"/><counter type="METHOD" missed="80" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Quintet.java"><line nr="62" mi="9" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="2" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="2" cb="0"/><line nr="80" mi="13" ci="0" mb="0" cb="0"/><line nr="82" mi="19" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="2" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="2" cb="0"/><line nr="101" mi="13" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="10" ci="0" mb="0" cb="0"/><line nr="117" mi="25" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="15" ci="0" mb="0" cb="0"/><line nr="169" mi="15" ci="0" mb="0" cb="0"/><line nr="174" mi="15" ci="0" mb="0" cb="0"/><line nr="179" mi="15" ci="0" mb="0" cb="0"/><line nr="184" mi="15" ci="0" mb="0" cb="0"/><line nr="189" mi="15" ci="0" mb="0" cb="0"/><line nr="198" mi="16" ci="0" mb="0" cb="0"/><line nr="203" mi="16" ci="0" mb="0" cb="0"/><line nr="208" mi="16" ci="0" mb="0" cb="0"/><line nr="213" mi="16" ci="0" mb="0" cb="0"/><line nr="218" mi="16" ci="0" mb="0" cb="0"/><line nr="223" mi="16" ci="0" mb="0" cb="0"/><line nr="234" mi="17" ci="0" mb="0" cb="0"/><line nr="239" mi="17" ci="0" mb="0" cb="0"/><line nr="244" mi="17" ci="0" mb="0" cb="0"/><line nr="249" mi="17" ci="0" mb="0" cb="0"/><line nr="254" mi="17" ci="0" mb="0" cb="0"/><line nr="259" mi="17" ci="0" mb="0" cb="0"/><line nr="270" mi="18" ci="0" mb="0" cb="0"/><line nr="275" mi="18" ci="0" mb="0" cb="0"/><line nr="280" mi="18" ci="0" mb="0" cb="0"/><line nr="285" mi="18" ci="0" mb="0" cb="0"/><line nr="290" mi="18" ci="0" mb="0" cb="0"/><line nr="295" mi="18" ci="0" mb="0" cb="0"/><line nr="305" mi="19" ci="0" mb="0" cb="0"/><line nr="310" mi="19" ci="0" mb="0" cb="0"/><line nr="315" mi="19" ci="0" mb="0" cb="0"/><line nr="320" mi="19" ci="0" mb="0" cb="0"/><line nr="325" mi="19" ci="0" mb="0" cb="0"/><line nr="330" mi="19" ci="0" mb="0" cb="0"/><line nr="341" mi="5" ci="0" mb="0" cb="0"/><line nr="345" mi="5" ci="0" mb="0" cb="0"/><line nr="349" mi="5" ci="0" mb="0" cb="0"/><line nr="353" mi="5" ci="0" mb="0" cb="0"/><line nr="357" mi="5" ci="0" mb="0" cb="0"/><line nr="361" mi="5" ci="0" mb="0" cb="0"/><line nr="371" mi="7" ci="0" mb="0" cb="0"/><line nr="375" mi="7" ci="0" mb="0" cb="0"/><line nr="379" mi="7" ci="0" mb="0" cb="0"/><line nr="383" mi="7" ci="0" mb="0" cb="0"/><line nr="387" mi="7" ci="0" mb="0" cb="0"/><line nr="391" mi="7" ci="0" mb="0" cb="0"/><line nr="402" mi="9" ci="0" mb="0" cb="0"/><line nr="406" mi="9" ci="0" mb="0" cb="0"/><line nr="410" mi="9" ci="0" mb="0" cb="0"/><line nr="414" mi="9" ci="0" mb="0" cb="0"/><line nr="418" mi="9" ci="0" mb="0" cb="0"/><line nr="422" mi="9" ci="0" mb="0" cb="0"/><line nr="434" mi="11" ci="0" mb="0" cb="0"/><line nr="438" mi="11" ci="0" mb="0" cb="0"/><line nr="442" mi="11" ci="0" mb="0" cb="0"/><line nr="446" mi="11" ci="0" mb="0" cb="0"/><line nr="450" mi="11" ci="0" mb="0" cb="0"/><line nr="454" mi="11" ci="0" mb="0" cb="0"/><line nr="465" mi="13" ci="0" mb="0" cb="0"/><line nr="469" mi="13" ci="0" mb="0" cb="0"/><line nr="473" mi="13" ci="0" mb="0" cb="0"/><line nr="477" mi="13" ci="0" mb="0" cb="0"/><line nr="481" mi="13" ci="0" mb="0" cb="0"/><line nr="485" mi="13" ci="0" mb="0" cb="0"/><line nr="494" mi="4" ci="0" mb="0" cb="0"/><line nr="499" mi="4" ci="0" mb="0" cb="0"/><line nr="506" mi="5" ci="0" mb="0" cb="0"/><line nr="511" mi="4" ci="0" mb="0" cb="0"/><line nr="518" mi="6" ci="0" mb="0" cb="0"/><line nr="523" mi="4" ci="0" mb="0" cb="0"/><line nr="530" mi="7" ci="0" mb="0" cb="0"/><line nr="535" mi="4" ci="0" mb="0" cb="0"/><line nr="543" mi="8" ci="0" mb="0" cb="0"/><line nr="548" mi="4" ci="0" mb="0" cb="0"/><line nr="557" mi="13" ci="0" mb="0" cb="0"/><line nr="562" mi="13" ci="0" mb="0" cb="0"/><line nr="567" mi="13" ci="0" mb="0" cb="0"/><line nr="572" mi="13" ci="0" mb="0" cb="0"/><line nr="577" mi="13" ci="0" mb="0" cb="0"/><line nr="589" mi="12" ci="0" mb="0" cb="0"/><line nr="594" mi="12" ci="0" mb="0" cb="0"/><line nr="599" mi="12" ci="0" mb="0" cb="0"/><line nr="604" mi="12" ci="0" mb="0" cb="0"/><line nr="609" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1106" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="106" covered="0"/><counter type="COMPLEXITY" missed="94" covered="0"/><counter type="METHOD" missed="90" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Sextet.java"><line nr="65" mi="10" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="2" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="2" cb="0"/><line nr="83" mi="13" ci="0" mb="0" cb="0"/><line nr="85" mi="22" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="2" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="2" cb="0"/><line nr="105" mi="13" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="10" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="29" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="3" ci="0" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="176" mi="17" ci="0" mb="0" cb="0"/><line nr="181" mi="17" ci="0" mb="0" cb="0"/><line nr="186" mi="17" ci="0" mb="0" cb="0"/><line nr="191" mi="17" ci="0" mb="0" cb="0"/><line nr="196" mi="17" ci="0" mb="0" cb="0"/><line nr="201" mi="17" ci="0" mb="0" cb="0"/><line nr="206" mi="17" ci="0" mb="0" cb="0"/><line nr="215" mi="18" ci="0" mb="0" cb="0"/><line nr="220" mi="18" ci="0" mb="0" cb="0"/><line nr="225" mi="18" ci="0" mb="0" cb="0"/><line nr="230" mi="18" ci="0" mb="0" cb="0"/><line nr="235" mi="18" ci="0" mb="0" cb="0"/><line nr="240" mi="18" ci="0" mb="0" cb="0"/><line nr="245" mi="18" ci="0" mb="0" cb="0"/><line nr="256" mi="19" ci="0" mb="0" cb="0"/><line nr="261" mi="19" ci="0" mb="0" cb="0"/><line nr="266" mi="19" ci="0" mb="0" cb="0"/><line nr="271" mi="19" ci="0" mb="0" cb="0"/><line nr="276" mi="19" ci="0" mb="0" cb="0"/><line nr="281" mi="19" ci="0" mb="0" cb="0"/><line nr="286" mi="19" ci="0" mb="0" cb="0"/><line nr="297" mi="20" ci="0" mb="0" cb="0"/><line nr="302" mi="20" ci="0" mb="0" cb="0"/><line nr="307" mi="20" ci="0" mb="0" cb="0"/><line nr="312" mi="20" ci="0" mb="0" cb="0"/><line nr="317" mi="20" ci="0" mb="0" cb="0"/><line nr="322" mi="20" ci="0" mb="0" cb="0"/><line nr="327" mi="20" ci="0" mb="0" cb="0"/><line nr="336" mi="5" ci="0" mb="0" cb="0"/><line nr="340" mi="5" ci="0" mb="0" cb="0"/><line nr="344" mi="5" ci="0" mb="0" cb="0"/><line nr="348" mi="5" ci="0" mb="0" cb="0"/><line nr="352" mi="5" ci="0" mb="0" cb="0"/><line nr="356" mi="5" ci="0" mb="0" cb="0"/><line nr="360" mi="5" ci="0" mb="0" cb="0"/><line nr="370" mi="7" ci="0" mb="0" cb="0"/><line nr="374" mi="7" ci="0" mb="0" cb="0"/><line nr="378" mi="7" ci="0" mb="0" cb="0"/><line nr="382" mi="7" ci="0" mb="0" cb="0"/><line nr="386" mi="7" ci="0" mb="0" cb="0"/><line nr="390" mi="7" ci="0" mb="0" cb="0"/><line nr="394" mi="7" ci="0" mb="0" cb="0"/><line nr="405" mi="9" ci="0" mb="0" cb="0"/><line nr="409" mi="9" ci="0" mb="0" cb="0"/><line nr="413" mi="9" ci="0" mb="0" cb="0"/><line nr="417" mi="9" ci="0" mb="0" cb="0"/><line nr="421" mi="9" ci="0" mb="0" cb="0"/><line nr="425" mi="9" ci="0" mb="0" cb="0"/><line nr="429" mi="9" ci="0" mb="0" cb="0"/><line nr="441" mi="11" ci="0" mb="0" cb="0"/><line nr="445" mi="11" ci="0" mb="0" cb="0"/><line nr="449" mi="11" ci="0" mb="0" cb="0"/><line nr="453" mi="11" ci="0" mb="0" cb="0"/><line nr="457" mi="11" ci="0" mb="0" cb="0"/><line nr="461" mi="11" ci="0" mb="0" cb="0"/><line nr="465" mi="11" ci="0" mb="0" cb="0"/><line nr="477" mi="4" ci="0" mb="0" cb="0"/><line nr="482" mi="4" ci="0" mb="0" cb="0"/><line nr="489" mi="5" ci="0" mb="0" cb="0"/><line nr="494" mi="4" ci="0" mb="0" cb="0"/><line nr="501" mi="6" ci="0" mb="0" cb="0"/><line nr="506" mi="4" ci="0" mb="0" cb="0"/><line nr="513" mi="7" ci="0" mb="0" cb="0"/><line nr="518" mi="4" ci="0" mb="0" cb="0"/><line nr="529" mi="15" ci="0" mb="0" cb="0"/><line nr="534" mi="15" ci="0" mb="0" cb="0"/><line nr="539" mi="15" ci="0" mb="0" cb="0"/><line nr="544" mi="15" ci="0" mb="0" cb="0"/><line nr="549" mi="15" ci="0" mb="0" cb="0"/><line nr="554" mi="15" ci="0" mb="0" cb="0"/><line nr="565" mi="14" ci="0" mb="0" cb="0"/><line nr="570" mi="14" ci="0" mb="0" cb="0"/><line nr="575" mi="14" ci="0" mb="0" cb="0"/><line nr="580" mi="14" ci="0" mb="0" cb="0"/><line nr="585" mi="14" ci="0" mb="0" cb="0"/><line nr="590" mi="14" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1121" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="105" covered="0"/><counter type="COMPLEXITY" missed="91" covered="0"/><counter type="METHOD" missed="87" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Quartet.java"><line nr="59" mi="8" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="2" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="2" cb="0"/><line nr="77" mi="13" ci="0" mb="0" cb="0"/><line nr="79" mi="16" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="2" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="2" cb="0"/><line nr="97" mi="13" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="12" ci="0" mb="0" cb="0"/><line nr="111" mi="21" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="13" ci="0" mb="0" cb="0"/><line nr="156" mi="13" ci="0" mb="0" cb="0"/><line nr="161" mi="13" ci="0" mb="0" cb="0"/><line nr="166" mi="13" ci="0" mb="0" cb="0"/><line nr="171" mi="13" ci="0" mb="0" cb="0"/><line nr="180" mi="14" ci="0" mb="0" cb="0"/><line nr="185" mi="14" ci="0" mb="0" cb="0"/><line nr="190" mi="14" ci="0" mb="0" cb="0"/><line nr="195" mi="14" ci="0" mb="0" cb="0"/><line nr="200" mi="14" ci="0" mb="0" cb="0"/><line nr="211" mi="15" ci="0" mb="0" cb="0"/><line nr="216" mi="15" ci="0" mb="0" cb="0"/><line nr="221" mi="15" ci="0" mb="0" cb="0"/><line nr="226" mi="15" ci="0" mb="0" cb="0"/><line nr="231" mi="15" ci="0" mb="0" cb="0"/><line nr="242" mi="16" ci="0" mb="0" cb="0"/><line nr="247" mi="16" ci="0" mb="0" cb="0"/><line nr="252" mi="16" ci="0" mb="0" cb="0"/><line nr="257" mi="16" ci="0" mb="0" cb="0"/><line nr="262" mi="16" ci="0" mb="0" cb="0"/><line nr="272" mi="17" ci="0" mb="0" cb="0"/><line nr="277" mi="17" ci="0" mb="0" cb="0"/><line nr="282" mi="17" ci="0" mb="0" cb="0"/><line nr="287" mi="17" ci="0" mb="0" cb="0"/><line nr="292" mi="17" ci="0" mb="0" cb="0"/><line nr="302" mi="18" ci="0" mb="0" cb="0"/><line nr="307" mi="18" ci="0" mb="0" cb="0"/><line nr="312" mi="18" ci="0" mb="0" cb="0"/><line nr="317" mi="18" ci="0" mb="0" cb="0"/><line nr="322" mi="18" ci="0" mb="0" cb="0"/><line nr="333" mi="5" ci="0" mb="0" cb="0"/><line nr="337" mi="5" ci="0" mb="0" cb="0"/><line nr="341" mi="5" ci="0" mb="0" cb="0"/><line nr="345" mi="5" ci="0" mb="0" cb="0"/><line nr="349" mi="5" ci="0" mb="0" cb="0"/><line nr="359" mi="7" ci="0" mb="0" cb="0"/><line nr="363" mi="7" ci="0" mb="0" cb="0"/><line nr="367" mi="7" ci="0" mb="0" cb="0"/><line nr="371" mi="7" ci="0" mb="0" cb="0"/><line nr="375" mi="7" ci="0" mb="0" cb="0"/><line nr="386" mi="9" ci="0" mb="0" cb="0"/><line nr="390" mi="9" ci="0" mb="0" cb="0"/><line nr="394" mi="9" ci="0" mb="0" cb="0"/><line nr="398" mi="9" ci="0" mb="0" cb="0"/><line nr="402" mi="9" ci="0" mb="0" cb="0"/><line nr="414" mi="11" ci="0" mb="0" cb="0"/><line nr="418" mi="11" ci="0" mb="0" cb="0"/><line nr="422" mi="11" ci="0" mb="0" cb="0"/><line nr="426" mi="11" ci="0" mb="0" cb="0"/><line nr="430" mi="11" ci="0" mb="0" cb="0"/><line nr="441" mi="13" ci="0" mb="0" cb="0"/><line nr="445" mi="13" ci="0" mb="0" cb="0"/><line nr="449" mi="13" ci="0" mb="0" cb="0"/><line nr="453" mi="13" ci="0" mb="0" cb="0"/><line nr="457" mi="13" ci="0" mb="0" cb="0"/><line nr="468" mi="15" ci="0" mb="0" cb="0"/><line nr="472" mi="15" ci="0" mb="0" cb="0"/><line nr="476" mi="15" ci="0" mb="0" cb="0"/><line nr="480" mi="15" ci="0" mb="0" cb="0"/><line nr="484" mi="15" ci="0" mb="0" cb="0"/><line nr="493" mi="4" ci="0" mb="0" cb="0"/><line nr="498" mi="4" ci="0" mb="0" cb="0"/><line nr="505" mi="5" ci="0" mb="0" cb="0"/><line nr="510" mi="4" ci="0" mb="0" cb="0"/><line nr="517" mi="6" ci="0" mb="0" cb="0"/><line nr="522" mi="4" ci="0" mb="0" cb="0"/><line nr="529" mi="7" ci="0" mb="0" cb="0"/><line nr="534" mi="4" ci="0" mb="0" cb="0"/><line nr="542" mi="8" ci="0" mb="0" cb="0"/><line nr="547" mi="4" ci="0" mb="0" cb="0"/><line nr="555" mi="9" ci="0" mb="0" cb="0"/><line nr="560" mi="4" ci="0" mb="0" cb="0"/><line nr="572" mi="11" ci="0" mb="0" cb="0"/><line nr="577" mi="11" ci="0" mb="0" cb="0"/><line nr="582" mi="11" ci="0" mb="0" cb="0"/><line nr="587" mi="11" ci="0" mb="0" cb="0"/><line nr="602" mi="10" ci="0" mb="0" cb="0"/><line nr="607" mi="10" ci="0" mb="0" cb="0"/><line nr="612" mi="10" ci="0" mb="0" cb="0"/><line nr="617" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1047" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="103" covered="0"/><counter type="COMPLEXITY" missed="93" covered="0"/><counter type="METHOD" missed="89" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Octet.java"><line nr="71" mi="12" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="2" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="2" cb="0"/><line nr="89" mi="13" ci="0" mb="0" cb="0"/><line nr="91" mi="28" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="2" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="2" cb="0"/><line nr="111" mi="13" ci="0" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="10" ci="0" mb="0" cb="0"/><line nr="116" mi="6" ci="0" mb="0" cb="0"/><line nr="130" mi="37" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="0" cb="0"/><line nr="184" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="21" ci="0" mb="0" cb="0"/><line nr="199" mi="21" ci="0" mb="0" cb="0"/><line nr="205" mi="21" ci="0" mb="0" cb="0"/><line nr="211" mi="21" ci="0" mb="0" cb="0"/><line nr="217" mi="21" ci="0" mb="0" cb="0"/><line nr="223" mi="21" ci="0" mb="0" cb="0"/><line nr="229" mi="21" ci="0" mb="0" cb="0"/><line nr="235" mi="21" ci="0" mb="0" cb="0"/><line nr="241" mi="21" ci="0" mb="0" cb="0"/><line nr="251" mi="22" ci="0" mb="0" cb="0"/><line nr="257" mi="22" ci="0" mb="0" cb="0"/><line nr="263" mi="22" ci="0" mb="0" cb="0"/><line nr="269" mi="22" ci="0" mb="0" cb="0"/><line nr="275" mi="22" ci="0" mb="0" cb="0"/><line nr="281" mi="22" ci="0" mb="0" cb="0"/><line nr="287" mi="22" ci="0" mb="0" cb="0"/><line nr="293" mi="22" ci="0" mb="0" cb="0"/><line nr="299" mi="22" ci="0" mb="0" cb="0"/><line nr="308" mi="5" ci="0" mb="0" cb="0"/><line nr="312" mi="5" ci="0" mb="0" cb="0"/><line nr="316" mi="5" ci="0" mb="0" cb="0"/><line nr="320" mi="5" ci="0" mb="0" cb="0"/><line nr="324" mi="5" ci="0" mb="0" cb="0"/><line nr="328" mi="5" ci="0" mb="0" cb="0"/><line nr="332" mi="5" ci="0" mb="0" cb="0"/><line nr="336" mi="5" ci="0" mb="0" cb="0"/><line nr="340" mi="5" ci="0" mb="0" cb="0"/><line nr="350" mi="7" ci="0" mb="0" cb="0"/><line nr="354" mi="7" ci="0" mb="0" cb="0"/><line nr="358" mi="7" ci="0" mb="0" cb="0"/><line nr="362" mi="7" ci="0" mb="0" cb="0"/><line nr="366" mi="7" ci="0" mb="0" cb="0"/><line nr="370" mi="7" ci="0" mb="0" cb="0"/><line nr="374" mi="7" ci="0" mb="0" cb="0"/><line nr="378" mi="7" ci="0" mb="0" cb="0"/><line nr="382" mi="7" ci="0" mb="0" cb="0"/><line nr="392" mi="4" ci="0" mb="0" cb="0"/><line nr="397" mi="4" ci="0" mb="0" cb="0"/><line nr="404" mi="5" ci="0" mb="0" cb="0"/><line nr="409" mi="4" ci="0" mb="0" cb="0"/><line nr="418" mi="19" ci="0" mb="0" cb="0"/><line nr="423" mi="19" ci="0" mb="0" cb="0"/><line nr="428" mi="19" ci="0" mb="0" cb="0"/><line nr="433" mi="19" ci="0" mb="0" cb="0"/><line nr="438" mi="19" ci="0" mb="0" cb="0"/><line nr="443" mi="19" ci="0" mb="0" cb="0"/><line nr="448" mi="19" ci="0" mb="0" cb="0"/><line nr="453" mi="19" ci="0" mb="0" cb="0"/><line nr="467" mi="18" ci="0" mb="0" cb="0"/><line nr="472" mi="18" ci="0" mb="0" cb="0"/><line nr="477" mi="18" ci="0" mb="0" cb="0"/><line nr="482" mi="18" ci="0" mb="0" cb="0"/><line nr="487" mi="18" ci="0" mb="0" cb="0"/><line nr="492" mi="18" ci="0" mb="0" cb="0"/><line nr="497" mi="18" ci="0" mb="0" cb="0"/><line nr="502" mi="18" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1007" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="89" covered="0"/><counter type="COMPLEXITY" missed="73" covered="0"/><counter type="METHOD" missed="69" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="9740" covered="43"/><counter type="BRANCH" missed="140" covered="0"/><counter type="LINE" missed="984" covered="11"/><counter type="COMPLEXITY" missed="820" covered="5"/><counter type="METHOD" missed="750" covered="5"/><counter type="CLASS" missed="11" covered="2"/></package><package name="org/op4j/operators/impl/op/array"><class name="org/op4j/operators/impl/op/array/Level1ArraySelectedElementsSelectedOperator" sourcefilename="Level1ArraySelectedElementsSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/target/Target;)V" line="38"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/op/array/Level1ArraySelectedElementsOperator;" line="44"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArraySelectedElementsSelectedOperator;" line="49"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/array/Level1ArraySelectedElementsSelectedOperator;" line="54"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()[Ljava/lang/Object;" line="59"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/array/Level1ArrayElementsOperator" sourcefilename="Level1ArrayElementsOperator.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/target/Target;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endFor" desc="()Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="53"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="castTo" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/array/Level1ArrayElementsOperator;" line="58"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()[Ljava/lang/Object;" line="67"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifIndex" desc="([I)Lorg/op4j/operators/impl/op/array/Level1ArrayElementsSelectedOperator;" line="72"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndexNot" desc="([I)Lorg/op4j/operators/impl/op/array/Level1ArrayElementsSelectedOperator;" line="77"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArrayElementsSelectedOperator;" line="82"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArrayElementsSelectedOperator;" line="87"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/op/array/Level1ArrayElementsSelectedOperator;" line="92"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/op/array/Level1ArrayElementsSelectedOperator;" line="103"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArrayElementsOperator;" line="116"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exec" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArrayElementsOperator;" line="125"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/array/Level1ArrayElementsOperator;" line="131"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceIfNullWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/array/Level1ArrayElementsOperator;" line="137"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArrayElementsOperator;" line="143"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalse" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArrayElementsOperator;" line="148"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfIndex" desc="([ILorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArrayElementsOperator;" line="153"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfIndex" desc="(Lorg/javaruntype/type/Type;[ILorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArrayElementsOperator;" line="158"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfIndexNot" desc="([ILorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArrayElementsOperator;" line="163"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfIndexNot" desc="(Lorg/javaruntype/type/Type;[ILorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArrayElementsOperator;" line="168"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArrayElementsOperator;" line="174"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNull" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArrayElementsOperator;" line="180"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArrayElementsOperator;" line="186"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNull" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArrayElementsOperator;" line="192"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArrayElementsOperator;" line="198"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrue" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArrayElementsOperator;" line="204"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="223" covered="49"/><counter type="LINE" missed="20" covered="8"/><counter type="COMPLEXITY" missed="20" covered="6"/><counter type="METHOD" missed="20" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/operators/impl/op/array/Level1ArrayElementsSelectedOperator" sourcefilename="Level1ArrayElementsSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/target/Target;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/op/array/Level1ArrayElementsOperator;" line="44"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArrayElementsSelectedOperator;" line="49"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/array/Level1ArrayElementsSelectedOperator;" line="54"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()[Ljava/lang/Object;" line="59"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="27"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/operators/impl/op/array/Level0ArrayOperator" sourcefilename="Level0ArrayOperator.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/target/Target;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="62"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="66"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(ILjava/lang/Object;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="71"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insertAll" desc="(I[Ljava/lang/Object;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="75"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="81"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="distinct" desc="()Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="85"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEach" desc="()Lorg/op4j/operators/impl/op/array/Level1ArrayElementsOperator;" line="89"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllIndexes" desc="([I)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="94"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllEqual" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="99"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="105"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="110"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="115"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="120"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="126"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="132"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexesNot" desc="([I)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="137"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNull" desc="()Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="143"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sort" desc="()Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="149"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sort" desc="(Ljava/util/Comparator;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="154"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toList" desc="()Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="158"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="couple" desc="()Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="163"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="coupleAndGroup" desc="()Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="167"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="173"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="177"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeys" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="181"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValues" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="185"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeysBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="191"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesBy" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="195"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeys" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="199"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zipAndGroupValues" desc="(Lorg/javaruntype/type/Type;[Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="203"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="210"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toGroupMapOf" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="214"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSet" desc="()Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="218"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()[Ljava/lang/Object;" line="223"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generic" desc="()Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="227"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="235"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToArrayOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="239"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="249"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="254"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="259"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="270"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsArray" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="281"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsArrayOf" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="289"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="297"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceWith" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="302"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceIfNullWith" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="307"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="312"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="317"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="all" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="328"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="any" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="333"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sortBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="341"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeysFrom" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="347"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeysFrom" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="351"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesFrom" desc="(Lorg/javaruntype/type/Type;Ljava/util/Collection;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="355"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesFrom" desc="(Lorg/javaruntype/type/Type;[Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="359"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysFrom" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="363"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysFrom" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="367"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesFrom" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="371"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesFrom" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="375"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverse" desc="()Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="380"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toGroupMapOf" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="385"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="390"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalseAsArray" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="399"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalseAsArrayOf" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="403"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNullAsArray" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="407"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNullAsArrayOf" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="411"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNullAsArray" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="415"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNullAsArrayOf" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="419"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrueAsArray" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="423"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrueAsArrayOf" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="427"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="433"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfFalse" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="437"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNotNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="441"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNotNull" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="445"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="449"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNull" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="453"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="457"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfTrue" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="461"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="777" covered="181"/><counter type="LINE" missed="63" covered="18"/><counter type="COMPLEXITY" missed="63" covered="16"/><counter type="METHOD" missed="63" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/operators/impl/op/array/Level1ArraySelectedElementsOperator" sourcefilename="Level1ArraySelectedElementsOperator.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/target/Target;)V" line="38"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArraySelectedElementsSelectedOperator;" line="44"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArraySelectedElementsSelectedOperator;" line="49"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/op/array/Level1ArraySelectedElementsSelectedOperator;" line="54"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/op/array/Level1ArraySelectedElementsSelectedOperator;" line="59"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndex" desc="([I)Lorg/op4j/operators/impl/op/array/Level1ArraySelectedElementsSelectedOperator;" line="64"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndexNot" desc="([I)Lorg/op4j/operators/impl/op/array/Level1ArraySelectedElementsSelectedOperator;" line="69"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endFor" desc="()Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="74"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArraySelectedElementsSelectedOperator;" line="79"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArraySelectedElementsSelectedOperator;" line="84"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArraySelectedElementsSelectedOperator;" line="89"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArraySelectedElementsSelectedOperator;" line="94"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level1ArraySelectedElementsOperator;" line="99"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/array/Level1ArraySelectedElementsOperator;" line="104"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()[Ljava/lang/Object;" line="109"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="143" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/array/Level0ArraySelectedOperator" sourcefilename="Level0ArraySelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/target/Target;)V" line="43"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEach" desc="()Lorg/op4j/operators/impl/op/array/Level1ArraySelectedElementsOperator;" line="49"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="distinct" desc="()Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="54"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sortBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="60"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insertAll" desc="(I[Ljava/lang/Object;)Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="65"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexes" desc="([I)Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="70"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllEqual" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="75"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="81"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="87"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="93"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="99"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="105"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="111"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexesNot" desc="([I)Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="116"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNull" desc="()Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="121"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsArray" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="126"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="131"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="136"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="141"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="147"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insert" desc="(ILjava/lang/Object;)Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="152"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="()Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="157"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="(Ljava/util/Comparator;)Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="163"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="168"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/array/Level0ArraySelectedOperator;" line="173"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()[Ljava/lang/Object;" line="178"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="309" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="26" covered="0"/><counter type="METHOD" missed="26" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/array/Level0IndefiniteArrayOperator" sourcefilename="Level0IndefiniteArrayOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="52"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toList" desc="()Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="57"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="couple" desc="()Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="62"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="67"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="72"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeys" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="76"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValues" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="80"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="88"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toGroupMapOf" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="93"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSet" desc="()Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="97"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generic" desc="()Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="103"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="109"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="115"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToArrayOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="119"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysFrom" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="127"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysFrom" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="131"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesFrom" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="135"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesFrom" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="139"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverse" desc="()Lorg/op4j/operators/impl/op/array/Level0IndefiniteArrayOperator;" line="145"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toGroupMapOf" desc="(Lorg/javaruntype/type/Type;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="152"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="158"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()[Ljava/lang/Object;" line="167"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="195" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="22" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Level0ArraySelectedOperator.java"><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="10" ci="0" mb="0" cb="0"/><line nr="54" mi="11" ci="0" mb="0" cb="0"/><line nr="60" mi="12" ci="0" mb="0" cb="0"/><line nr="65" mi="13" ci="0" mb="0" cb="0"/><line nr="70" mi="12" ci="0" mb="0" cb="0"/><line nr="75" mi="12" ci="0" mb="0" cb="0"/><line nr="81" mi="12" ci="0" mb="0" cb="0"/><line nr="87" mi="12" ci="0" mb="0" cb="0"/><line nr="93" mi="12" ci="0" mb="0" cb="0"/><line nr="99" mi="12" ci="0" mb="0" cb="0"/><line nr="105" mi="12" ci="0" mb="0" cb="0"/><line nr="111" mi="12" ci="0" mb="0" cb="0"/><line nr="116" mi="12" ci="0" mb="0" cb="0"/><line nr="121" mi="11" ci="0" mb="0" cb="0"/><line nr="126" mi="14" ci="0" mb="0" cb="0"/><line nr="131" mi="9" ci="0" mb="0" cb="0"/><line nr="136" mi="17" ci="0" mb="0" cb="0"/><line nr="141" mi="12" ci="0" mb="0" cb="0"/><line nr="147" mi="12" ci="0" mb="0" cb="0"/><line nr="152" mi="18" ci="0" mb="0" cb="0"/><line nr="157" mi="11" ci="0" mb="0" cb="0"/><line nr="163" mi="12" ci="0" mb="0" cb="0"/><line nr="168" mi="14" ci="0" mb="0" cb="0"/><line nr="173" mi="14" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="309" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="26" covered="0"/><counter type="METHOD" missed="26" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level0ArrayOperator.java"><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="17" mb="0" cb="0"/><line nr="66" mi="0" ci="12" mb="0" cb="0"/><line nr="71" mi="18" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="13" mb="0" cb="0"/><line nr="81" mi="12" ci="0" mb="0" cb="0"/><line nr="85" mi="11" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="10" mb="0" cb="0"/><line nr="94" mi="0" ci="12" mb="0" cb="0"/><line nr="99" mi="12" ci="0" mb="0" cb="0"/><line nr="105" mi="12" ci="0" mb="0" cb="0"/><line nr="110" mi="12" ci="0" mb="0" cb="0"/><line nr="115" mi="12" ci="0" mb="0" cb="0"/><line nr="120" mi="12" ci="0" mb="0" cb="0"/><line nr="126" mi="12" ci="0" mb="0" cb="0"/><line nr="132" mi="12" ci="0" mb="0" cb="0"/><line nr="137" mi="12" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="11" mb="0" cb="0"/><line nr="149" mi="0" ci="11" mb="0" cb="0"/><line nr="154" mi="0" ci="12" mb="0" cb="0"/><line nr="158" mi="0" ci="11" mb="0" cb="0"/><line nr="163" mi="11" ci="0" mb="0" cb="0"/><line nr="167" mi="11" ci="0" mb="0" cb="0"/><line nr="173" mi="12" ci="0" mb="0" cb="0"/><line nr="177" mi="12" ci="0" mb="0" cb="0"/><line nr="181" mi="12" ci="0" mb="0" cb="0"/><line nr="185" mi="12" ci="0" mb="0" cb="0"/><line nr="191" mi="12" ci="0" mb="0" cb="0"/><line nr="195" mi="13" ci="0" mb="0" cb="0"/><line nr="199" mi="0" ci="12" mb="0" cb="0"/><line nr="203" mi="0" ci="13" mb="0" cb="0"/><line nr="210" mi="12" ci="0" mb="0" cb="0"/><line nr="214" mi="13" ci="0" mb="0" cb="0"/><line nr="218" mi="0" ci="11" mb="0" cb="0"/><line nr="223" mi="0" ci="6" mb="0" cb="0"/><line nr="227" mi="6" ci="0" mb="0" cb="0"/><line nr="235" mi="5" ci="0" mb="0" cb="0"/><line nr="239" mi="5" ci="0" mb="0" cb="0"/><line nr="249" mi="10" ci="0" mb="0" cb="0"/><line nr="254" mi="10" ci="0" mb="0" cb="0"/><line nr="259" mi="9" ci="0" mb="0" cb="0"/><line nr="270" mi="9" ci="0" mb="0" cb="0"/><line nr="281" mi="14" ci="0" mb="0" cb="0"/><line nr="289" mi="12" ci="0" mb="0" cb="0"/><line nr="297" mi="0" ci="9" mb="0" cb="0"/><line nr="302" mi="0" ci="14" mb="0" cb="0"/><line nr="307" mi="6" ci="0" mb="0" cb="0"/><line nr="312" mi="12" ci="0" mb="0" cb="0"/><line nr="317" mi="14" ci="0" mb="0" cb="0"/><line nr="328" mi="12" ci="0" mb="0" cb="0"/><line nr="333" mi="12" ci="0" mb="0" cb="0"/><line nr="341" mi="14" ci="0" mb="0" cb="0"/><line nr="347" mi="12" ci="0" mb="0" cb="0"/><line nr="351" mi="12" ci="0" mb="0" cb="0"/><line nr="355" mi="13" ci="0" mb="0" cb="0"/><line nr="359" mi="13" ci="0" mb="0" cb="0"/><line nr="363" mi="12" ci="0" mb="0" cb="0"/><line nr="367" mi="12" ci="0" mb="0" cb="0"/><line nr="371" mi="12" ci="0" mb="0" cb="0"/><line nr="375" mi="12" ci="0" mb="0" cb="0"/><line nr="380" mi="13" ci="0" mb="0" cb="0"/><line nr="385" mi="14" ci="0" mb="0" cb="0"/><line nr="390" mi="13" ci="0" mb="0" cb="0"/><line nr="399" mi="16" ci="0" mb="0" cb="0"/><line nr="403" mi="14" ci="0" mb="0" cb="0"/><line nr="407" mi="15" ci="0" mb="0" cb="0"/><line nr="411" mi="13" ci="0" mb="0" cb="0"/><line nr="415" mi="15" ci="0" mb="0" cb="0"/><line nr="419" mi="13" ci="0" mb="0" cb="0"/><line nr="423" mi="16" ci="0" mb="0" cb="0"/><line nr="427" mi="14" ci="0" mb="0" cb="0"/><line nr="433" mi="16" ci="0" mb="0" cb="0"/><line nr="437" mi="14" ci="0" mb="0" cb="0"/><line nr="441" mi="15" ci="0" mb="0" cb="0"/><line nr="445" mi="13" ci="0" mb="0" cb="0"/><line nr="449" mi="15" ci="0" mb="0" cb="0"/><line nr="453" mi="13" ci="0" mb="0" cb="0"/><line nr="457" mi="16" ci="0" mb="0" cb="0"/><line nr="461" mi="14" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="777" covered="181"/><counter type="LINE" missed="63" covered="18"/><counter type="COMPLEXITY" missed="63" covered="16"/><counter type="METHOD" missed="63" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Level1ArrayElementsOperator.java"><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="12" mb="0" cb="0"/><line nr="58" mi="7" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="10" ci="0" mb="0" cb="0"/><line nr="77" mi="10" ci="0" mb="0" cb="0"/><line nr="82" mi="10" ci="0" mb="0" cb="0"/><line nr="87" mi="10" ci="0" mb="0" cb="0"/><line nr="92" mi="9" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="9" mb="0" cb="0"/><line nr="116" mi="0" ci="11" mb="0" cb="0"/><line nr="125" mi="10" ci="0" mb="0" cb="0"/><line nr="131" mi="11" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="143" mi="13" ci="0" mb="0" cb="0"/><line nr="148" mi="12" ci="0" mb="0" cb="0"/><line nr="153" mi="13" ci="0" mb="0" cb="0"/><line nr="158" mi="12" ci="0" mb="0" cb="0"/><line nr="163" mi="13" ci="0" mb="0" cb="0"/><line nr="168" mi="12" ci="0" mb="0" cb="0"/><line nr="174" mi="12" ci="0" mb="0" cb="0"/><line nr="180" mi="11" ci="0" mb="0" cb="0"/><line nr="186" mi="12" ci="0" mb="0" cb="0"/><line nr="192" mi="11" ci="0" mb="0" cb="0"/><line nr="198" mi="13" ci="0" mb="0" cb="0"/><line nr="204" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="223" covered="49"/><counter type="LINE" missed="20" covered="8"/><counter type="COMPLEXITY" missed="20" covered="6"/><counter type="METHOD" missed="20" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Level1ArraySelectedElementsOperator.java"><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="10" ci="0" mb="0" cb="0"/><line nr="49" mi="10" ci="0" mb="0" cb="0"/><line nr="54" mi="9" ci="0" mb="0" cb="0"/><line nr="59" mi="9" ci="0" mb="0" cb="0"/><line nr="64" mi="10" ci="0" mb="0" cb="0"/><line nr="69" mi="10" ci="0" mb="0" cb="0"/><line nr="74" mi="12" ci="0" mb="0" cb="0"/><line nr="79" mi="10" ci="0" mb="0" cb="0"/><line nr="84" mi="10" ci="0" mb="0" cb="0"/><line nr="89" mi="10" ci="0" mb="0" cb="0"/><line nr="94" mi="10" ci="0" mb="0" cb="0"/><line nr="99" mi="11" ci="0" mb="0" cb="0"/><line nr="104" mi="11" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="143" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level1ArrayElementsSelectedOperator.java"><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="9" mb="0" cb="0"/><line nr="49" mi="11" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="11" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="27"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Level1ArraySelectedElementsSelectedOperator.java"><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="9" ci="0" mb="0" cb="0"/><line nr="49" mi="11" ci="0" mb="0" cb="0"/><line nr="54" mi="11" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level0IndefiniteArrayOperator.java"><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="9" ci="0" mb="0" cb="0"/><line nr="62" mi="9" ci="0" mb="0" cb="0"/><line nr="67" mi="10" ci="0" mb="0" cb="0"/><line nr="72" mi="10" ci="0" mb="0" cb="0"/><line nr="76" mi="10" ci="0" mb="0" cb="0"/><line nr="80" mi="10" ci="0" mb="0" cb="0"/><line nr="88" mi="10" ci="0" mb="0" cb="0"/><line nr="93" mi="11" ci="0" mb="0" cb="0"/><line nr="97" mi="9" ci="0" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="0" cb="0"/><line nr="109" mi="9" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="10" ci="0" mb="0" cb="0"/><line nr="131" mi="10" ci="0" mb="0" cb="0"/><line nr="135" mi="10" ci="0" mb="0" cb="0"/><line nr="139" mi="10" ci="0" mb="0" cb="0"/><line nr="145" mi="9" ci="0" mb="0" cb="0"/><line nr="152" mi="12" ci="0" mb="0" cb="0"/><line nr="158" mi="11" ci="0" mb="0" cb="0"/><line nr="167" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="195" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="22" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="1704" covered="257"/><counter type="LINE" missed="160" covered="31"/><counter type="COMPLEXITY" missed="153" covered="25"/><counter type="METHOD" missed="153" covered="25"/><counter type="CLASS" missed="4" covered="3"/></package><package name="org/op4j/operators/impl/op/map"><class name="org/op4j/operators/impl/op/map/Level2MapSelectedEntriesKeySelectedOperator" sourcefilename="Level2MapSelectedEntriesKeySelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesKeyOperator;" line="41"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesKeySelectedOperator;" line="46"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesKeySelectedOperator;" line="51"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Map;" line="56"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/map/Level1MapEntriesOperator" sourcefilename="Level1MapEntriesOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="46"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endFor" desc="()Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="51"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onKey" desc="()Lorg/op4j/operators/impl/op/map/Level2MapEntriesKeyOperator;" line="56"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onValue" desc="()Lorg/op4j/operators/impl/op/map/Level2MapEntriesValueOperator;" line="61"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Map;" line="66"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndex" desc="([I)Lorg/op4j/operators/impl/op/map/Level1MapEntriesSelectedOperator;" line="73"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndexNot" desc="([I)Lorg/op4j/operators/impl/op/map/Level1MapEntriesSelectedOperator;" line="78"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifKeyEquals" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level1MapEntriesSelectedOperator;" line="83"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifKeyNotEquals" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level1MapEntriesSelectedOperator;" line="88"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level1MapEntriesSelectedOperator;" line="93"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level1MapEntriesSelectedOperator;" line="98"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsMapEntry" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level1MapEntriesOperator;" line="106"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListElementsOperator;" line="114"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/util/Map$Entry;)Lorg/op4j/operators/impl/op/map/Level1MapEntriesOperator;" line="119"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalseAsMapEntry" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level1MapEntriesOperator;" line="127"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalseAsMapEntry" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level1MapEntriesOperator;" line="132"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrueAsMapEntry" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level1MapEntriesOperator;" line="137"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrueAsMapEntry" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level1MapEntriesOperator;" line="142"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="149" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/map/Level2MapEntriesValueSelectedOperator" sourcefilename="Level2MapEntriesValueSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/op/map/Level2MapEntriesValueOperator;" line="41"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesValueSelectedOperator;" line="46"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesValueSelectedOperator;" line="51"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Map;" line="56"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/map/Level0MapSelectedOperator" sourcefilename="Level0MapSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="40"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sortBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapSelectedOperator;" line="46"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insertAll" desc="(ILjava/util/Map;)Lorg/op4j/operators/impl/op/map/Level0MapSelectedOperator;" line="52"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapSelectedOperator;" line="58"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapSelectedOperator;" line="64"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="69"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEachEntry" desc="()Lorg/op4j/operators/impl/op/map/Level1MapSelectedEntriesOperator;" line="74"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllKeys" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapSelectedOperator;" line="79"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllKeysNot" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapSelectedOperator;" line="84"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapSelectedOperator;" line="89"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapSelectedOperator;" line="94"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Ljava/util/Map;)Lorg/op4j/operators/impl/op/map/Level0MapSelectedOperator;" line="100"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insert" desc="(ILjava/lang/Object;Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapSelectedOperator;" line="105"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="()Lorg/op4j/operators/impl/op/map/Level0MapSelectedOperator;" line="110"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="(Ljava/util/Comparator;)Lorg/op4j/operators/impl/op/map/Level0MapSelectedOperator;" line="116"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/util/Map;)Lorg/op4j/operators/impl/op/map/Level0MapSelectedOperator;" line="121"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Map;" line="126"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="154" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="17" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/map/Level0BuildingMapOperator" sourcefilename="Level0BuildingMapOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="and" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0BuildingMapOperator;" line="61"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractKeys" desc="()Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="70"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractValues" desc="()Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="75"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEachEntry" desc="()Lorg/op4j/operators/impl/op/map/Level1MapEntriesOperator;" line="80"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="89"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insert" desc="(ILjava/lang/Object;Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="94"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Ljava/util/Map;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="100"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insertAll" desc="(ILjava/util/Map;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="106"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllKeys" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="111"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="117"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="122"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllKeysNot" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="127"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="()Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="141"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sort" desc="(Ljava/util/Comparator;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="147"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Map;" line="153"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generic" desc="()Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="158"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Lorg/javaruntype/type/Type;Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="168"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToMapOf" desc="(Lorg/javaruntype/type/Type;Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="172"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapSelectedOperator;" line="182"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapSelectedOperator;" line="187"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/op/map/Level0MapSelectedOperator;" line="192"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/op/map/Level0MapSelectedOperator;" line="203"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="216"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="224"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/util/Map;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="229"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceIfNullWith" desc="(Ljava/util/Map;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="234"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="all" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="249"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="any" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="255"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sortBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="267"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverse" desc="()Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="275"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalseAsMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="287"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalseAsMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="292"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNullAsMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="297"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNullAsMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="302"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNullAsMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="307"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNullAsMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="312"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrueAsMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="317"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrueAsMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="322"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="335" covered="24"/><counter type="LINE" missed="36" covered="4"/><counter type="COMPLEXITY" missed="36" covered="3"/><counter type="METHOD" missed="36" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/operators/impl/op/map/Level2MapEntriesKeyOperator" sourcefilename="Level2MapEntriesKeyOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="46"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endOn" desc="()Lorg/op4j/operators/impl/op/map/Level1MapEntriesOperator;" line="51"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castTo" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesKeyOperator;" line="56"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Map;" line="63"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesKeySelectedOperator;" line="68"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesKeySelectedOperator;" line="73"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/op/map/Level2MapEntriesKeySelectedOperator;" line="78"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/op/map/Level2MapEntriesKeySelectedOperator;" line="89"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesKeyOperator;" line="102"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesKeyOperator;" line="107"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceIfNullWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesKeyOperator;" line="112"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesKeyOperator;" line="123"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesKeyOperator;" line="128"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesKeyOperator;" line="133"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesKeyOperator;" line="138"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesKeyOperator;" line="143"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesKeyOperator;" line="148"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesKeyOperator;" line="153"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesKeyOperator;" line="158"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="168" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/map/Level2MapEntriesSelectedKeySelectedOperator" sourcefilename="Level2MapEntriesSelectedKeySelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedKeyOperator;" line="41"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedKeySelectedOperator;" line="46"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedKeySelectedOperator;" line="51"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Map;" line="56"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/map/Level2MapSelectedEntriesKeyOperator" sourcefilename="Level2MapSelectedEntriesKeyOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesKeySelectedOperator;" line="41"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesKeySelectedOperator;" line="46"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesKeySelectedOperator;" line="51"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesKeySelectedOperator;" line="56"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesKeySelectedOperator;" line="61"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesKeySelectedOperator;" line="66"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesKeySelectedOperator;" line="71"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesKeySelectedOperator;" line="76"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endOn" desc="()Lorg/op4j/operators/impl/op/map/Level1MapSelectedEntriesOperator;" line="81"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesKeyOperator;" line="86"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesKeyOperator;" line="91"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Map;" line="96"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/map/Level2MapEntriesSelectedValueOperator" sourcefilename="Level2MapEntriesSelectedValueOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedValueSelectedOperator;" line="41"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedValueSelectedOperator;" line="46"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedValueSelectedOperator;" line="51"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedValueSelectedOperator;" line="56"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedValueSelectedOperator;" line="61"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedValueSelectedOperator;" line="66"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedValueSelectedOperator;" line="71"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedValueSelectedOperator;" line="76"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endOn" desc="()Lorg/op4j/operators/impl/op/map/Level1MapEntriesSelectedOperator;" line="81"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedValueOperator;" line="86"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedValueOperator;" line="91"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Map;" line="96"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/map/Level2MapEntriesSelectedKeyOperator" sourcefilename="Level2MapEntriesSelectedKeyOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedKeySelectedOperator;" line="41"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedKeySelectedOperator;" line="46"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedKeySelectedOperator;" line="51"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedKeySelectedOperator;" line="56"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedKeySelectedOperator;" line="61"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedKeySelectedOperator;" line="66"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedKeySelectedOperator;" line="71"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedKeySelectedOperator;" line="76"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endOn" desc="()Lorg/op4j/operators/impl/op/map/Level1MapEntriesSelectedOperator;" line="81"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedKeyOperator;" line="86"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedKeyOperator;" line="91"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Map;" line="96"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedValueOperator" sourcefilename="Level2MapSelectedEntriesSelectedValueOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedValueSelectedOperator;" line="41"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedValueSelectedOperator;" line="46"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedValueSelectedOperator;" line="51"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedValueSelectedOperator;" line="56"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedValueSelectedOperator;" line="61"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedValueSelectedOperator;" line="66"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedValueSelectedOperator;" line="71"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedValueSelectedOperator;" line="76"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endOn" desc="()Lorg/op4j/operators/impl/op/map/Level1MapSelectedEntriesSelectedOperator;" line="81"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedValueOperator;" line="86"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedValueOperator;" line="91"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Map;" line="96"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/map/Level2MapEntriesSelectedValueSelectedOperator" sourcefilename="Level2MapEntriesSelectedValueSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedValueOperator;" line="41"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedValueSelectedOperator;" line="46"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedValueSelectedOperator;" line="51"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Map;" line="56"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/map/Level0MapOperator" sourcefilename="Level0MapOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractKeys" desc="()Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="58"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractValues" desc="()Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="63"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEachEntry" desc="()Lorg/op4j/operators/impl/op/map/Level1MapEntriesOperator;" line="68"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="77"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(ILjava/lang/Object;Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="82"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Ljava/util/Map;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="88"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertAll" desc="(ILjava/util/Map;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="94"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllKeys" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="99"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="105"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="110"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllKeysNot" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="115"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="()Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="129"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="(Ljava/util/Comparator;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="135"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Map;" line="141"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generic" desc="()Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="146"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/javaruntype/type/Type;Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="156"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="castToMapOf" desc="(Lorg/javaruntype/type/Type;Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="160"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapSelectedOperator;" line="170"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapSelectedOperator;" line="175"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/op/map/Level0MapSelectedOperator;" line="180"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/op/map/Level0MapSelectedOperator;" line="191"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="204"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="212"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/util/Map;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="217"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceIfNullWith" desc="(Ljava/util/Map;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="222"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="all" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="237"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="any" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="243"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sortBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="255"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverse" desc="()Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="262"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalseAsMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="274"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalseAsMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="279"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNullAsMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="284"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNullAsMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="289"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNullAsMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="294"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNullAsMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="299"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrueAsMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="304"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrueAsMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="309"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="294" covered="54"/><counter type="LINE" missed="31" covered="8"/><counter type="COMPLEXITY" missed="31" covered="7"/><counter type="METHOD" missed="31" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedValueSelectedOperator" sourcefilename="Level2MapSelectedEntriesSelectedValueSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedValueOperator;" line="41"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedValueSelectedOperator;" line="46"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedValueSelectedOperator;" line="51"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Map;" line="56"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/map/Level2MapEntriesKeySelectedOperator" sourcefilename="Level2MapEntriesKeySelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/op/map/Level2MapEntriesKeyOperator;" line="41"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesKeySelectedOperator;" line="46"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesKeySelectedOperator;" line="51"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Map;" line="56"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/map/Level1MapSelectedEntriesSelectedOperator" sourcefilename="Level1MapSelectedEntriesSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/op/map/Level1MapSelectedEntriesOperator;" line="42"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onKey" desc="()Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedKeyOperator;" line="47"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onValue" desc="()Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedValueOperator;" line="52"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsMapEntry" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level1MapSelectedEntriesSelectedOperator;" line="57"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/util/Map$Entry;)Lorg/op4j/operators/impl/op/map/Level1MapSelectedEntriesSelectedOperator;" line="62"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Map;" line="67"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/map/Level2MapSelectedEntriesValueOperator" sourcefilename="Level2MapSelectedEntriesValueOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesValueSelectedOperator;" line="41"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesValueSelectedOperator;" line="46"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesValueSelectedOperator;" line="51"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesValueSelectedOperator;" line="56"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesValueSelectedOperator;" line="61"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesValueSelectedOperator;" line="66"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesValueSelectedOperator;" line="71"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesValueSelectedOperator;" line="76"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endOn" desc="()Lorg/op4j/operators/impl/op/map/Level1MapSelectedEntriesOperator;" line="81"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesValueOperator;" line="86"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesValueOperator;" line="91"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Map;" line="96"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/map/Level2MapEntriesValueOperator" sourcefilename="Level2MapEntriesValueOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="46"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endOn" desc="()Lorg/op4j/operators/impl/op/map/Level1MapEntriesOperator;" line="51"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castTo" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesValueOperator;" line="56"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Map;" line="67"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesValueSelectedOperator;" line="72"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesValueSelectedOperator;" line="77"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/op/map/Level2MapEntriesValueSelectedOperator;" line="82"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/op/map/Level2MapEntriesValueSelectedOperator;" line="93"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesValueOperator;" line="106"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesValueOperator;" line="111"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceIfNullWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesValueOperator;" line="116"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesValueOperator;" line="129"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesValueOperator;" line="134"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesValueOperator;" line="139"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesValueOperator;" line="144"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesValueOperator;" line="149"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesValueOperator;" line="154"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesValueOperator;" line="159"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapEntriesValueOperator;" line="164"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="168" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedKeyOperator" sourcefilename="Level2MapSelectedEntriesSelectedKeyOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedKeySelectedOperator;" line="41"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedKeySelectedOperator;" line="46"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedKeySelectedOperator;" line="51"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedKeySelectedOperator;" line="56"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedKeySelectedOperator;" line="61"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedKeySelectedOperator;" line="66"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedKeySelectedOperator;" line="71"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedKeySelectedOperator;" line="76"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endOn" desc="()Lorg/op4j/operators/impl/op/map/Level1MapSelectedEntriesSelectedOperator;" line="81"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedKeyOperator;" line="86"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedKeyOperator;" line="91"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Map;" line="96"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/map/Level1MapEntriesSelectedOperator" sourcefilename="Level1MapEntriesSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/op/map/Level1MapEntriesOperator;" line="42"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onKey" desc="()Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedKeyOperator;" line="47"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onValue" desc="()Lorg/op4j/operators/impl/op/map/Level2MapEntriesSelectedValueOperator;" line="52"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsMapEntry" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level1MapEntriesSelectedOperator;" line="57"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/util/Map$Entry;)Lorg/op4j/operators/impl/op/map/Level1MapEntriesSelectedOperator;" line="62"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Map;" line="67"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/map/Level1MapSelectedEntriesOperator" sourcefilename="Level1MapSelectedEntriesOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level1MapSelectedEntriesSelectedOperator;" line="42"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level1MapSelectedEntriesSelectedOperator;" line="47"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndex" desc="([I)Lorg/op4j/operators/impl/op/map/Level1MapSelectedEntriesSelectedOperator;" line="52"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndexNot" desc="([I)Lorg/op4j/operators/impl/op/map/Level1MapSelectedEntriesSelectedOperator;" line="57"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endFor" desc="()Lorg/op4j/operators/impl/op/map/Level0MapSelectedOperator;" line="62"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifKeyEquals" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level1MapSelectedEntriesSelectedOperator;" line="67"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifKeyNotEquals" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level1MapSelectedEntriesSelectedOperator;" line="72"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onKey" desc="()Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesKeyOperator;" line="77"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onValue" desc="()Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesValueOperator;" line="82"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsMapEntry" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level1MapSelectedEntriesOperator;" line="87"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/util/Map$Entry;)Lorg/op4j/operators/impl/op/map/Level1MapSelectedEntriesOperator;" line="92"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Map;" line="97"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="96" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedKeySelectedOperator" sourcefilename="Level2MapSelectedEntriesSelectedKeySelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedKeyOperator;" line="41"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedKeySelectedOperator;" line="46"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesSelectedKeySelectedOperator;" line="51"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Map;" line="56"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/map/Level2MapSelectedEntriesValueSelectedOperator" sourcefilename="Level2MapSelectedEntriesValueSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesValueOperator;" line="41"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesValueSelectedOperator;" line="46"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level2MapSelectedEntriesValueSelectedOperator;" line="51"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Map;" line="56"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Level2MapSelectedEntriesSelectedKeyOperator.java"><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="8" ci="0" mb="0" cb="0"/><line nr="46" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="7" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="8" ci="0" mb="0" cb="0"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="76" mi="8" ci="0" mb="0" cb="0"/><line nr="81" mi="7" ci="0" mb="0" cb="0"/><line nr="86" mi="9" ci="0" mb="0" cb="0"/><line nr="91" mi="9" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level1MapSelectedEntriesOperator.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="8" ci="0" mb="0" cb="0"/><line nr="47" mi="8" ci="0" mb="0" cb="0"/><line nr="52" mi="8" ci="0" mb="0" cb="0"/><line nr="57" mi="8" ci="0" mb="0" cb="0"/><line nr="62" mi="8" ci="0" mb="0" cb="0"/><line nr="67" mi="8" ci="0" mb="0" cb="0"/><line nr="72" mi="8" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="0" cb="0"/><line nr="82" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="9" ci="0" mb="0" cb="0"/><line nr="92" mi="9" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="96" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapSelectedEntriesValueSelectedOperator.java"><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="46" mi="9" ci="0" mb="0" cb="0"/><line nr="51" mi="9" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapEntriesValueSelectedOperator.java"><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="46" mi="9" ci="0" mb="0" cb="0"/><line nr="51" mi="9" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapEntriesSelectedKeyOperator.java"><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="8" ci="0" mb="0" cb="0"/><line nr="46" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="7" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="8" ci="0" mb="0" cb="0"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="76" mi="8" ci="0" mb="0" cb="0"/><line nr="81" mi="7" ci="0" mb="0" cb="0"/><line nr="86" mi="9" ci="0" mb="0" cb="0"/><line nr="91" mi="9" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapSelectedEntriesValueOperator.java"><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="8" ci="0" mb="0" cb="0"/><line nr="46" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="7" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="8" ci="0" mb="0" cb="0"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="76" mi="8" ci="0" mb="0" cb="0"/><line nr="81" mi="7" ci="0" mb="0" cb="0"/><line nr="86" mi="9" ci="0" mb="0" cb="0"/><line nr="91" mi="9" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapSelectedEntriesSelectedKeySelectedOperator.java"><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="46" mi="9" ci="0" mb="0" cb="0"/><line nr="51" mi="9" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level0MapSelectedOperator.java"><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="10" ci="0" mb="0" cb="0"/><line nr="52" mi="11" ci="0" mb="0" cb="0"/><line nr="58" mi="10" ci="0" mb="0" cb="0"/><line nr="64" mi="10" ci="0" mb="0" cb="0"/><line nr="69" mi="7" ci="0" mb="0" cb="0"/><line nr="74" mi="8" ci="0" mb="0" cb="0"/><line nr="79" mi="10" ci="0" mb="0" cb="0"/><line nr="84" mi="10" ci="0" mb="0" cb="0"/><line nr="89" mi="9" ci="0" mb="0" cb="0"/><line nr="94" mi="11" ci="0" mb="0" cb="0"/><line nr="100" mi="10" ci="0" mb="0" cb="0"/><line nr="105" mi="12" ci="0" mb="0" cb="0"/><line nr="110" mi="9" ci="0" mb="0" cb="0"/><line nr="116" mi="10" ci="0" mb="0" cb="0"/><line nr="121" mi="9" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="154" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="17" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapEntriesValueOperator.java"><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="7" ci="0" mb="0" cb="0"/><line nr="56" mi="14" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="8" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="82" mi="7" ci="0" mb="0" cb="0"/><line nr="93" mi="7" ci="0" mb="0" cb="0"/><line nr="106" mi="9" ci="0" mb="0" cb="0"/><line nr="111" mi="9" ci="0" mb="0" cb="0"/><line nr="116" mi="6" ci="0" mb="0" cb="0"/><line nr="129" mi="11" ci="0" mb="0" cb="0"/><line nr="134" mi="11" ci="0" mb="0" cb="0"/><line nr="139" mi="10" ci="0" mb="0" cb="0"/><line nr="144" mi="10" ci="0" mb="0" cb="0"/><line nr="149" mi="10" ci="0" mb="0" cb="0"/><line nr="154" mi="10" ci="0" mb="0" cb="0"/><line nr="159" mi="11" ci="0" mb="0" cb="0"/><line nr="164" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="168" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level1MapEntriesSelectedOperator.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="0" cb="0"/><line nr="47" mi="7" ci="0" mb="0" cb="0"/><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="57" mi="9" ci="0" mb="0" cb="0"/><line nr="62" mi="9" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapEntriesSelectedValueOperator.java"><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="8" ci="0" mb="0" cb="0"/><line nr="46" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="7" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="8" ci="0" mb="0" cb="0"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="76" mi="8" ci="0" mb="0" cb="0"/><line nr="81" mi="7" ci="0" mb="0" cb="0"/><line nr="86" mi="9" ci="0" mb="0" cb="0"/><line nr="91" mi="9" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level1MapSelectedEntriesSelectedOperator.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="0" cb="0"/><line nr="47" mi="7" ci="0" mb="0" cb="0"/><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="57" mi="9" ci="0" mb="0" cb="0"/><line nr="62" mi="9" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapSelectedEntriesSelectedValueOperator.java"><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="8" ci="0" mb="0" cb="0"/><line nr="46" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="7" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="8" ci="0" mb="0" cb="0"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="76" mi="8" ci="0" mb="0" cb="0"/><line nr="81" mi="7" ci="0" mb="0" cb="0"/><line nr="86" mi="9" ci="0" mb="0" cb="0"/><line nr="91" mi="9" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapEntriesSelectedValueSelectedOperator.java"><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="46" mi="9" ci="0" mb="0" cb="0"/><line nr="51" mi="9" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapSelectedEntriesKeyOperator.java"><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="8" ci="0" mb="0" cb="0"/><line nr="46" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="7" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="8" ci="0" mb="0" cb="0"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="76" mi="8" ci="0" mb="0" cb="0"/><line nr="81" mi="7" ci="0" mb="0" cb="0"/><line nr="86" mi="9" ci="0" mb="0" cb="0"/><line nr="91" mi="9" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapSelectedEntriesKeySelectedOperator.java"><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="46" mi="9" ci="0" mb="0" cb="0"/><line nr="51" mi="9" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapSelectedEntriesSelectedValueSelectedOperator.java"><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="46" mi="9" ci="0" mb="0" cb="0"/><line nr="51" mi="9" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level0BuildingMapOperator.java"><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="11" mb="0" cb="0"/><line nr="70" mi="9" ci="0" mb="0" cb="0"/><line nr="75" mi="9" ci="0" mb="0" cb="0"/><line nr="80" mi="8" ci="0" mb="0" cb="0"/><line nr="89" mi="11" ci="0" mb="0" cb="0"/><line nr="94" mi="12" ci="0" mb="0" cb="0"/><line nr="100" mi="10" ci="0" mb="0" cb="0"/><line nr="106" mi="11" ci="0" mb="0" cb="0"/><line nr="111" mi="10" ci="0" mb="0" cb="0"/><line nr="117" mi="10" ci="0" mb="0" cb="0"/><line nr="122" mi="10" ci="0" mb="0" cb="0"/><line nr="127" mi="10" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="9" mb="0" cb="0"/><line nr="147" mi="10" ci="0" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="6" ci="0" mb="0" cb="0"/><line nr="168" mi="6" ci="0" mb="0" cb="0"/><line nr="172" mi="6" ci="0" mb="0" cb="0"/><line nr="182" mi="8" ci="0" mb="0" cb="0"/><line nr="187" mi="8" ci="0" mb="0" cb="0"/><line nr="192" mi="7" ci="0" mb="0" cb="0"/><line nr="203" mi="7" ci="0" mb="0" cb="0"/><line nr="216" mi="9" ci="0" mb="0" cb="0"/><line nr="224" mi="9" ci="0" mb="0" cb="0"/><line nr="229" mi="9" ci="0" mb="0" cb="0"/><line nr="234" mi="6" ci="0" mb="0" cb="0"/><line nr="249" mi="12" ci="0" mb="0" cb="0"/><line nr="255" mi="12" ci="0" mb="0" cb="0"/><line nr="267" mi="12" ci="0" mb="0" cb="0"/><line nr="275" mi="9" ci="0" mb="0" cb="0"/><line nr="287" mi="11" ci="0" mb="0" cb="0"/><line nr="292" mi="11" ci="0" mb="0" cb="0"/><line nr="297" mi="10" ci="0" mb="0" cb="0"/><line nr="302" mi="10" ci="0" mb="0" cb="0"/><line nr="307" mi="10" ci="0" mb="0" cb="0"/><line nr="312" mi="10" ci="0" mb="0" cb="0"/><line nr="317" mi="11" ci="0" mb="0" cb="0"/><line nr="322" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="335" covered="24"/><counter type="LINE" missed="36" covered="4"/><counter type="COMPLEXITY" missed="36" covered="3"/><counter type="METHOD" missed="36" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Level2MapEntriesKeySelectedOperator.java"><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="46" mi="9" ci="0" mb="0" cb="0"/><line nr="51" mi="9" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapEntriesSelectedKeySelectedOperator.java"><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="46" mi="9" ci="0" mb="0" cb="0"/><line nr="51" mi="9" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level1MapEntriesOperator.java"><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="8" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="8" ci="0" mb="0" cb="0"/><line nr="78" mi="8" ci="0" mb="0" cb="0"/><line nr="83" mi="8" ci="0" mb="0" cb="0"/><line nr="88" mi="8" ci="0" mb="0" cb="0"/><line nr="93" mi="8" ci="0" mb="0" cb="0"/><line nr="98" mi="8" ci="0" mb="0" cb="0"/><line nr="106" mi="9" ci="0" mb="0" cb="0"/><line nr="114" mi="9" ci="0" mb="0" cb="0"/><line nr="119" mi="9" ci="0" mb="0" cb="0"/><line nr="127" mi="11" ci="0" mb="0" cb="0"/><line nr="132" mi="11" ci="0" mb="0" cb="0"/><line nr="137" mi="11" ci="0" mb="0" cb="0"/><line nr="142" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="149" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level2MapEntriesKeyOperator.java"><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="7" ci="0" mb="0" cb="0"/><line nr="56" mi="14" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="8" ci="0" mb="0" cb="0"/><line nr="73" mi="8" ci="0" mb="0" cb="0"/><line nr="78" mi="7" ci="0" mb="0" cb="0"/><line nr="89" mi="7" ci="0" mb="0" cb="0"/><line nr="102" mi="9" ci="0" mb="0" cb="0"/><line nr="107" mi="9" ci="0" mb="0" cb="0"/><line nr="112" mi="6" ci="0" mb="0" cb="0"/><line nr="123" mi="11" ci="0" mb="0" cb="0"/><line nr="128" mi="11" ci="0" mb="0" cb="0"/><line nr="133" mi="10" ci="0" mb="0" cb="0"/><line nr="138" mi="10" ci="0" mb="0" cb="0"/><line nr="143" mi="10" ci="0" mb="0" cb="0"/><line nr="148" mi="10" ci="0" mb="0" cb="0"/><line nr="153" mi="11" ci="0" mb="0" cb="0"/><line nr="158" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="168" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level0MapOperator.java"><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="9" ci="0" mb="0" cb="0"/><line nr="63" mi="9" ci="0" mb="0" cb="0"/><line nr="68" mi="8" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="11" mb="0" cb="0"/><line nr="82" mi="0" ci="12" mb="0" cb="0"/><line nr="88" mi="0" ci="10" mb="0" cb="0"/><line nr="94" mi="11" ci="0" mb="0" cb="0"/><line nr="99" mi="10" ci="0" mb="0" cb="0"/><line nr="105" mi="10" ci="0" mb="0" cb="0"/><line nr="110" mi="10" ci="0" mb="0" cb="0"/><line nr="115" mi="10" ci="0" mb="0" cb="0"/><line nr="129" mi="9" ci="0" mb="0" cb="0"/><line nr="135" mi="10" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="160" mi="6" ci="0" mb="0" cb="0"/><line nr="170" mi="8" ci="0" mb="0" cb="0"/><line nr="175" mi="8" ci="0" mb="0" cb="0"/><line nr="180" mi="7" ci="0" mb="0" cb="0"/><line nr="191" mi="7" ci="0" mb="0" cb="0"/><line nr="204" mi="9" ci="0" mb="0" cb="0"/><line nr="212" mi="9" ci="0" mb="0" cb="0"/><line nr="217" mi="9" ci="0" mb="0" cb="0"/><line nr="222" mi="6" ci="0" mb="0" cb="0"/><line nr="237" mi="12" ci="0" mb="0" cb="0"/><line nr="243" mi="12" ci="0" mb="0" cb="0"/><line nr="255" mi="12" ci="0" mb="0" cb="0"/><line nr="262" mi="9" ci="0" mb="0" cb="0"/><line nr="274" mi="11" ci="0" mb="0" cb="0"/><line nr="279" mi="11" ci="0" mb="0" cb="0"/><line nr="284" mi="10" ci="0" mb="0" cb="0"/><line nr="289" mi="10" ci="0" mb="0" cb="0"/><line nr="294" mi="10" ci="0" mb="0" cb="0"/><line nr="299" mi="10" ci="0" mb="0" cb="0"/><line nr="304" mi="11" ci="0" mb="0" cb="0"/><line nr="309" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="294" covered="54"/><counter type="LINE" missed="31" covered="8"/><counter type="COMPLEXITY" missed="31" covered="7"/><counter type="METHOD" missed="31" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="2292" covered="78"/><counter type="LINE" missed="306" covered="12"/><counter type="COMPLEXITY" missed="285" covered="10"/><counter type="METHOD" missed="285" covered="10"/><counter type="CLASS" missed="21" covered="2"/></package><package name="org/op4j/operators/impl/op/set"><class name="org/op4j/operators/impl/op/set/Level1SetSelectedElementsOperator" sourcefilename="Level1SetSelectedElementsOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level1SetSelectedElementsSelectedOperator;" line="41"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level1SetSelectedElementsSelectedOperator;" line="46"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/op/set/Level1SetSelectedElementsSelectedOperator;" line="51"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/op/set/Level1SetSelectedElementsSelectedOperator;" line="56"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndex" desc="([I)Lorg/op4j/operators/impl/op/set/Level1SetSelectedElementsSelectedOperator;" line="61"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndexNot" desc="([I)Lorg/op4j/operators/impl/op/set/Level1SetSelectedElementsSelectedOperator;" line="66"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endFor" desc="()Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="71"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level1SetSelectedElementsSelectedOperator;" line="76"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level1SetSelectedElementsSelectedOperator;" line="81"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level1SetSelectedElementsSelectedOperator;" line="86"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level1SetSelectedElementsSelectedOperator;" line="91"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level1SetSelectedElementsOperator;" line="96"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/set/Level1SetSelectedElementsOperator;" line="101"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Set;" line="106"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="112" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/set/Level1SetElementsOperator" sourcefilename="Level1SetElementsOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endFor" desc="()Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="50"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="castTo" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/set/Level1SetElementsOperator;" line="55"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Set;" line="70"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifIndex" desc="([I)Lorg/op4j/operators/impl/op/set/Level1SetElementsSelectedOperator;" line="75"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndexNot" desc="([I)Lorg/op4j/operators/impl/op/set/Level1SetElementsSelectedOperator;" line="80"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level1SetElementsSelectedOperator;" line="85"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level1SetElementsSelectedOperator;" line="90"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/op/set/Level1SetElementsSelectedOperator;" line="95"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/op/set/Level1SetElementsSelectedOperator;" line="106"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level1SetElementsOperator;" line="118"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/set/Level1SetElementsOperator;" line="123"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceIfNullWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/set/Level1SetElementsOperator;" line="128"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level1SetElementsOperator;" line="139"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level1SetElementsOperator;" line="144"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfIndex" desc="([ILorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level1SetElementsOperator;" line="149"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfIndex" desc="([ILorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level1SetElementsOperator;" line="154"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfIndexNot" desc="([ILorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level1SetElementsOperator;" line="159"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfIndexNot" desc="([ILorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level1SetElementsOperator;" line="164"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level1SetElementsOperator;" line="170"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level1SetElementsOperator;" line="176"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level1SetElementsOperator;" line="182"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level1SetElementsOperator;" line="188"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level1SetElementsOperator;" line="194"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level1SetElementsOperator;" line="200"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="196" covered="25"/><counter type="LINE" missed="21" covered="5"/><counter type="COMPLEXITY" missed="21" covered="4"/><counter type="METHOD" missed="21" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/operators/impl/op/set/Level0SetOperator" sourcefilename="Level0SetOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="60"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="64"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(ILjava/lang/Object;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="69"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insertAll" desc="(I[Ljava/lang/Object;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="73"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="79"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEach" desc="()Lorg/op4j/operators/impl/op/set/Level1SetElementsOperator;" line="84"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllIndexes" desc="([I)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="89"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllEqual" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="94"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="100"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="105"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="110"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="115"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="121"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="127"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexesNot" desc="([I)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="132"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllNull" desc="()Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="137"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sort" desc="()Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="144"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="(Ljava/util/Comparator;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="150"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArrayOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="155"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toList" desc="()Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="160"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="couple" desc="()Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="165"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="coupleAndGroup" desc="()Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="169"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="175"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="180"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeys" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="184"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValues" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="188"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeysBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="194"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="199"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeys" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="203"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValues" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="207"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="213"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toGroupMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="218"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Set;" line="224"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generic" desc="()Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="229"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="240"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToSetOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="244"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="254"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="259"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="264"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="275"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsSet" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="288"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="296"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceWith" desc="(Ljava/util/Set;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="301"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceIfNullWith" desc="(Ljava/util/Set;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="306"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="313"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="all" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="323"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="any" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="329"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sortBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="342"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeysFrom" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="353"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeysFrom" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="357"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesFrom" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="361"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesFrom" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="365"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysFrom" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="369"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysFrom" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="373"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesFrom" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="377"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesFrom" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="381"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverse" desc="()Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="387"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toGroupMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="396"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="402"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalseAsSet" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="411"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalseAsSet" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="415"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNullAsSet" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="419"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNullAsSet" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="423"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNullAsSet" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="427"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNullAsSet" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="431"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrueAsSet" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="435"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrueAsSet" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="439"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="445"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="449"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNotNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="453"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNotNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="457"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="461"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="465"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="469"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="473"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="613" covered="131"/><counter type="LINE" missed="62" covered="15"/><counter type="COMPLEXITY" missed="62" covered="14"/><counter type="METHOD" missed="62" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/operators/impl/op/set/Level1SetSelectedElementsSelectedOperator" sourcefilename="Level1SetSelectedElementsSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/op/set/Level1SetSelectedElementsOperator;" line="41"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level1SetSelectedElementsSelectedOperator;" line="46"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/set/Level1SetSelectedElementsSelectedOperator;" line="51"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Set;" line="56"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/set/Level1SetElementsSelectedOperator" sourcefilename="Level1SetElementsSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/op/set/Level1SetElementsOperator;" line="41"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level1SetElementsSelectedOperator;" line="46"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/set/Level1SetElementsSelectedOperator;" line="51"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Set;" line="56"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/set/Level0SetSelectedOperator" sourcefilename="Level0SetSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="40"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEach" desc="()Lorg/op4j/operators/impl/op/set/Level1SetSelectedElementsOperator;" line="45"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sortBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="51"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insertAll" desc="(I[Ljava/lang/Object;)Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="56"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexes" desc="([I)Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="61"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllEqual" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="66"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="72"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="78"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="84"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="90"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="96"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="102"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexesNot" desc="([I)Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="107"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNull" desc="()Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="112"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="117"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsSet" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="122"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="127"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="132"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="138"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insert" desc="(ILjava/lang/Object;)Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="143"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="()Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="148"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="(Ljava/util/Comparator;)Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="154"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="159"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/util/Set;)Lorg/op4j/operators/impl/op/set/Level0SetSelectedOperator;" line="164"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/Set;" line="169"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="241" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="25" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Level1SetSelectedElementsSelectedOperator.java"><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="46" mi="9" ci="0" mb="0" cb="0"/><line nr="51" mi="9" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level0SetOperator.java"><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="15" mb="0" cb="0"/><line nr="64" mi="0" ci="10" mb="0" cb="0"/><line nr="69" mi="16" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="11" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="84" mi="0" ci="8" mb="0" cb="0"/><line nr="89" mi="0" ci="10" mb="0" cb="0"/><line nr="94" mi="10" ci="0" mb="0" cb="0"/><line nr="100" mi="10" ci="0" mb="0" cb="0"/><line nr="105" mi="10" ci="0" mb="0" cb="0"/><line nr="110" mi="10" ci="0" mb="0" cb="0"/><line nr="115" mi="10" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="10" mb="0" cb="0"/><line nr="127" mi="10" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="10" mb="0" cb="0"/><line nr="137" mi="0" ci="9" mb="0" cb="0"/><line nr="144" mi="9" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="10" mb="0" cb="0"/><line nr="155" mi="11" ci="0" mb="0" cb="0"/><line nr="160" mi="9" ci="0" mb="0" cb="0"/><line nr="165" mi="9" ci="0" mb="0" cb="0"/><line nr="169" mi="9" ci="0" mb="0" cb="0"/><line nr="175" mi="10" ci="0" mb="0" cb="0"/><line nr="180" mi="10" ci="0" mb="0" cb="0"/><line nr="184" mi="10" ci="0" mb="0" cb="0"/><line nr="188" mi="10" ci="0" mb="0" cb="0"/><line nr="194" mi="10" ci="0" mb="0" cb="0"/><line nr="199" mi="10" ci="0" mb="0" cb="0"/><line nr="203" mi="10" ci="0" mb="0" cb="0"/><line nr="207" mi="10" ci="0" mb="0" cb="0"/><line nr="213" mi="10" ci="0" mb="0" cb="0"/><line nr="218" mi="10" ci="0" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="229" mi="6" ci="0" mb="0" cb="0"/><line nr="240" mi="5" ci="0" mb="0" cb="0"/><line nr="244" mi="5" ci="0" mb="0" cb="0"/><line nr="254" mi="8" ci="0" mb="0" cb="0"/><line nr="259" mi="8" ci="0" mb="0" cb="0"/><line nr="264" mi="7" ci="0" mb="0" cb="0"/><line nr="275" mi="7" ci="0" mb="0" cb="0"/><line nr="288" mi="9" ci="0" mb="0" cb="0"/><line nr="296" mi="0" ci="9" mb="0" cb="0"/><line nr="301" mi="9" ci="0" mb="0" cb="0"/><line nr="306" mi="6" ci="0" mb="0" cb="0"/><line nr="313" mi="0" ci="10" mb="0" cb="0"/><line nr="323" mi="11" ci="0" mb="0" cb="0"/><line nr="329" mi="11" ci="0" mb="0" cb="0"/><line nr="342" mi="11" ci="0" mb="0" cb="0"/><line nr="353" mi="10" ci="0" mb="0" cb="0"/><line nr="357" mi="10" ci="0" mb="0" cb="0"/><line nr="361" mi="10" ci="0" mb="0" cb="0"/><line nr="365" mi="10" ci="0" mb="0" cb="0"/><line nr="369" mi="10" ci="0" mb="0" cb="0"/><line nr="373" mi="10" ci="0" mb="0" cb="0"/><line nr="377" mi="10" ci="0" mb="0" cb="0"/><line nr="381" mi="10" ci="0" mb="0" cb="0"/><line nr="387" mi="9" ci="0" mb="0" cb="0"/><line nr="396" mi="11" ci="0" mb="0" cb="0"/><line nr="402" mi="11" ci="0" mb="0" cb="0"/><line nr="411" mi="11" ci="0" mb="0" cb="0"/><line nr="415" mi="11" ci="0" mb="0" cb="0"/><line nr="419" mi="10" ci="0" mb="0" cb="0"/><line nr="423" mi="10" ci="0" mb="0" cb="0"/><line nr="427" mi="10" ci="0" mb="0" cb="0"/><line nr="431" mi="10" ci="0" mb="0" cb="0"/><line nr="435" mi="11" ci="0" mb="0" cb="0"/><line nr="439" mi="11" ci="0" mb="0" cb="0"/><line nr="445" mi="12" ci="0" mb="0" cb="0"/><line nr="449" mi="12" ci="0" mb="0" cb="0"/><line nr="453" mi="11" ci="0" mb="0" cb="0"/><line nr="457" mi="11" ci="0" mb="0" cb="0"/><line nr="461" mi="11" ci="0" mb="0" cb="0"/><line nr="465" mi="11" ci="0" mb="0" cb="0"/><line nr="469" mi="12" ci="0" mb="0" cb="0"/><line nr="473" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="613" covered="131"/><counter type="LINE" missed="62" covered="15"/><counter type="COMPLEXITY" missed="62" covered="14"/><counter type="METHOD" missed="62" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Level1SetElementsSelectedOperator.java"><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="46" mi="9" ci="0" mb="0" cb="0"/><line nr="51" mi="9" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level1SetElementsOperator.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="55" mi="7" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="8" ci="0" mb="0" cb="0"/><line nr="80" mi="8" ci="0" mb="0" cb="0"/><line nr="85" mi="8" ci="0" mb="0" cb="0"/><line nr="90" mi="8" ci="0" mb="0" cb="0"/><line nr="95" mi="7" ci="0" mb="0" cb="0"/><line nr="106" mi="7" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="9" mb="0" cb="0"/><line nr="123" mi="9" ci="0" mb="0" cb="0"/><line nr="128" mi="6" ci="0" mb="0" cb="0"/><line nr="139" mi="11" ci="0" mb="0" cb="0"/><line nr="144" mi="11" ci="0" mb="0" cb="0"/><line nr="149" mi="11" ci="0" mb="0" cb="0"/><line nr="154" mi="11" ci="0" mb="0" cb="0"/><line nr="159" mi="11" ci="0" mb="0" cb="0"/><line nr="164" mi="11" ci="0" mb="0" cb="0"/><line nr="170" mi="10" ci="0" mb="0" cb="0"/><line nr="176" mi="10" ci="0" mb="0" cb="0"/><line nr="182" mi="10" ci="0" mb="0" cb="0"/><line nr="188" mi="10" ci="0" mb="0" cb="0"/><line nr="194" mi="11" ci="0" mb="0" cb="0"/><line nr="200" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="196" covered="25"/><counter type="LINE" missed="21" covered="5"/><counter type="COMPLEXITY" missed="21" covered="4"/><counter type="METHOD" missed="21" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Level1SetSelectedElementsOperator.java"><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="8" ci="0" mb="0" cb="0"/><line nr="46" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="7" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="8" ci="0" mb="0" cb="0"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="76" mi="8" ci="0" mb="0" cb="0"/><line nr="81" mi="8" ci="0" mb="0" cb="0"/><line nr="86" mi="8" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="0" cb="0"/><line nr="96" mi="9" ci="0" mb="0" cb="0"/><line nr="101" mi="9" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="112" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level0SetSelectedOperator.java"><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="10" ci="0" mb="0" cb="0"/><line nr="56" mi="11" ci="0" mb="0" cb="0"/><line nr="61" mi="10" ci="0" mb="0" cb="0"/><line nr="66" mi="10" ci="0" mb="0" cb="0"/><line nr="72" mi="10" ci="0" mb="0" cb="0"/><line nr="78" mi="10" ci="0" mb="0" cb="0"/><line nr="84" mi="10" ci="0" mb="0" cb="0"/><line nr="90" mi="10" ci="0" mb="0" cb="0"/><line nr="96" mi="10" ci="0" mb="0" cb="0"/><line nr="102" mi="10" ci="0" mb="0" cb="0"/><line nr="107" mi="10" ci="0" mb="0" cb="0"/><line nr="112" mi="9" ci="0" mb="0" cb="0"/><line nr="117" mi="7" ci="0" mb="0" cb="0"/><line nr="122" mi="9" ci="0" mb="0" cb="0"/><line nr="127" mi="15" ci="0" mb="0" cb="0"/><line nr="132" mi="10" ci="0" mb="0" cb="0"/><line nr="138" mi="10" ci="0" mb="0" cb="0"/><line nr="143" mi="16" ci="0" mb="0" cb="0"/><line nr="148" mi="9" ci="0" mb="0" cb="0"/><line nr="154" mi="10" ci="0" mb="0" cb="0"/><line nr="159" mi="10" ci="0" mb="0" cb="0"/><line nr="164" mi="9" ci="0" mb="0" cb="0"/><line nr="169" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="241" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="25" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="1228" covered="156"/><counter type="LINE" missed="137" covered="20"/><counter type="COMPLEXITY" missed="133" covered="18"/><counter type="METHOD" missed="133" covered="18"/><counter type="CLASS" missed="4" covered="2"/></package><package name="org/op4j/operators/impl/op/list"><class name="org/op4j/operators/impl/op/list/Level0ListSelectedOperator" sourcefilename="Level0ListSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="40"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEach" desc="()Lorg/op4j/operators/impl/op/list/Level1ListSelectedElementsOperator;" line="45"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="distinct" desc="()Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="50"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sortBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="56"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insertAll" desc="(I[Ljava/lang/Object;)Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="61"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexes" desc="([I)Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="66"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllEqual" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="71"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="77"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="83"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="89"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="95"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="101"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="107"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexesNot" desc="([I)Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="112"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNull" desc="()Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="117"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="122"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsList" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="127"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="132"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="137"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="143"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insert" desc="(ILjava/lang/Object;)Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="148"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="()Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="153"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sort" desc="(Ljava/util/Comparator;)Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="159"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="164"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/util/List;)Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="169"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/List;" line="174"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="250" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="26" covered="0"/><counter type="METHOD" missed="26" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/list/Level1ListElementsOperator" sourcefilename="Level1ListElementsOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endFor" desc="()Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="50"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="castTo" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/list/Level1ListElementsOperator;" line="55"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/List;" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifIndex" desc="([I)Lorg/op4j/operators/impl/op/list/Level1ListElementsSelectedOperator;" line="73"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndexNot" desc="([I)Lorg/op4j/operators/impl/op/list/Level1ListElementsSelectedOperator;" line="78"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListElementsSelectedOperator;" line="83"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListElementsSelectedOperator;" line="88"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/op/list/Level1ListElementsSelectedOperator;" line="93"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/op/list/Level1ListElementsSelectedOperator;" line="104"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListElementsOperator;" line="116"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/list/Level1ListElementsOperator;" line="121"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceIfNullWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/list/Level1ListElementsOperator;" line="126"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListElementsOperator;" line="138"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListElementsOperator;" line="143"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfIndex" desc="([ILorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListElementsOperator;" line="148"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfIndex" desc="([ILorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListElementsOperator;" line="153"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfIndexNot" desc="([ILorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListElementsOperator;" line="158"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfIndexNot" desc="([ILorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListElementsOperator;" line="163"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListElementsOperator;" line="169"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListElementsOperator;" line="175"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListElementsOperator;" line="181"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListElementsOperator;" line="187"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListElementsOperator;" line="193"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListElementsOperator;" line="199"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="167" covered="54"/><counter type="LINE" missed="17" covered="9"/><counter type="COMPLEXITY" missed="17" covered="8"/><counter type="METHOD" missed="17" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/operators/impl/op/list/Level1ListElementsSelectedOperator" sourcefilename="Level1ListElementsSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/op/list/Level1ListElementsOperator;" line="41"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListElementsSelectedOperator;" line="46"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/list/Level1ListElementsSelectedOperator;" line="51"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/util/List;" line="56"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/operators/impl/op/list/Level1ListSelectedElementsSelectedOperator" sourcefilename="Level1ListSelectedElementsSelectedOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endIf" desc="()Lorg/op4j/operators/impl/op/list/Level1ListSelectedElementsOperator;" line="41"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListSelectedElementsSelectedOperator;" line="46"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/list/Level1ListSelectedElementsSelectedOperator;" line="51"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/List;" line="56"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/op4j/operators/impl/op/list/Level0ListOperator" sourcefilename="Level0ListOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="60"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="64"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(ILjava/lang/Object;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="69"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertAll" desc="(I[Ljava/lang/Object;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="73"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="79"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distinct" desc="()Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="84"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEach" desc="()Lorg/op4j/operators/impl/op/list/Level1ListElementsOperator;" line="89"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllIndexes" desc="([I)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="94"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllEqual" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="99"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="105"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="110"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="115"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="120"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="126"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="132"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAllIndexesNot" desc="([I)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="137"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllNull" desc="()Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="142"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sort" desc="()Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="149"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sort" desc="(Ljava/util/Comparator;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="155"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArrayOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/array/Level0ArrayOperator;" line="160"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="couple" desc="()Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="165"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="coupleAndGroup" desc="()Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="169"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="175"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="180"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeys" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="184"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zipValues" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="188"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeysBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="194"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="199"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeys" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="203"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zipAndGroupValues" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="207"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="215"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toGroupMap" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="220"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSet" desc="()Lorg/op4j/operators/impl/op/set/Level0SetOperator;" line="225"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/util/List;" line="231"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generic" desc="()Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="236"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="244"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToListOf" desc="(Lorg/javaruntype/type/Type;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="248"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="258"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="263"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="268"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="279"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execAsList" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="292"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="300"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceWith" desc="(Ljava/util/List;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="305"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceIfNullWith" desc="(Ljava/util/List;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="310"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="317"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="all" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="328"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="any" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/generic/Level0GenericUniqOperator;" line="334"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sortBy" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="343"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeysFrom" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="354"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupKeysFrom" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="358"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesFrom" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="362"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipAndGroupValuesFrom" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="366"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysFrom" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="370"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipKeysFrom" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="374"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesFrom" desc="(Ljava/util/Collection;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="378"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zipValuesFrom" desc="([Ljava/lang/Object;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="382"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverse" desc="()Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="388"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toGroupMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="394"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMap" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/map/Level0MapOperator;" line="400"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalseAsList" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="418"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfFalseAsList" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="422"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNullAsList" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="426"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNotNullAsList" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="430"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNullAsList" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="434"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfNullAsList" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="438"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrueAsList" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="442"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execIfTrueAsList" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="446"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="452"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfFalse" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="456"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNotNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="460"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNotNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="464"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNull" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="468"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfNull" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="472"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="476"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapIfTrue" desc="(Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level0ListOperator;" line="480"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="527" covered="226"/><counter type="LINE" missed="54" covered="24"/><counter type="COMPLEXITY" missed="54" covered="23"/><counter type="METHOD" missed="54" covered="23"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/op4j/operators/impl/op/list/Level1ListSelectedElementsOperator" sourcefilename="Level1ListSelectedElementsOperator.java"><method name="&lt;init&gt;" desc="(Lorg/op4j/target/Target;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListSelectedElementsSelectedOperator;" line="41"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListSelectedElementsSelectedOperator;" line="46"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNull" desc="()Lorg/op4j/operators/impl/op/list/Level1ListSelectedElementsSelectedOperator;" line="51"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNull" desc="()Lorg/op4j/operators/impl/op/list/Level1ListSelectedElementsSelectedOperator;" line="56"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndex" desc="([I)Lorg/op4j/operators/impl/op/list/Level1ListSelectedElementsSelectedOperator;" line="61"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIndexNot" desc="([I)Lorg/op4j/operators/impl/op/list/Level1ListSelectedElementsSelectedOperator;" line="66"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endFor" desc="()Lorg/op4j/operators/impl/op/list/Level0ListSelectedOperator;" line="71"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListSelectedElementsSelectedOperator;" line="76"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndFalse" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListSelectedElementsSelectedOperator;" line="81"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullOrTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListSelectedElementsSelectedOperator;" line="86"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNotNullAndTrue" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListSelectedElementsSelectedOperator;" line="91"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exec" desc="(Lorg/op4j/functions/IFunction;)Lorg/op4j/operators/impl/op/list/Level1ListSelectedElementsOperator;" line="96"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceWith" desc="(Ljava/lang/Object;)Lorg/op4j/operators/impl/op/list/Level1ListSelectedElementsOperator;" line="101"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/util/List;" line="106"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="112" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Level1ListElementsOperator.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="55" mi="7" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="8" ci="0" mb="0" cb="0"/><line nr="78" mi="8" ci="0" mb="0" cb="0"/><line nr="83" mi="8" ci="0" mb="0" cb="0"/><line nr="88" mi="8" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="104" mi="0" ci="7" mb="0" cb="0"/><line nr="116" mi="0" ci="9" mb="0" cb="0"/><line nr="121" mi="0" ci="9" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="11" ci="0" mb="0" cb="0"/><line nr="143" mi="11" ci="0" mb="0" cb="0"/><line nr="148" mi="11" ci="0" mb="0" cb="0"/><line nr="153" mi="11" ci="0" mb="0" cb="0"/><line nr="158" mi="11" ci="0" mb="0" cb="0"/><line nr="163" mi="11" ci="0" mb="0" cb="0"/><line nr="169" mi="10" ci="0" mb="0" cb="0"/><line nr="175" mi="10" ci="0" mb="0" cb="0"/><line nr="181" mi="10" ci="0" mb="0" cb="0"/><line nr="187" mi="10" ci="0" mb="0" cb="0"/><line nr="193" mi="11" ci="0" mb="0" cb="0"/><line nr="199" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="167" covered="54"/><counter type="LINE" missed="17" covered="9"/><counter type="COMPLEXITY" missed="17" covered="8"/><counter type="METHOD" missed="17" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Level1ListSelectedElementsSelectedOperator.java"><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="46" mi="9" ci="0" mb="0" cb="0"/><line nr="51" mi="9" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level0ListSelectedOperator.java"><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="8" ci="0" mb="0" cb="0"/><line nr="50" mi="9" ci="0" mb="0" cb="0"/><line nr="56" mi="10" ci="0" mb="0" cb="0"/><line nr="61" mi="11" ci="0" mb="0" cb="0"/><line nr="66" mi="10" ci="0" mb="0" cb="0"/><line nr="71" mi="10" ci="0" mb="0" cb="0"/><line nr="77" mi="10" ci="0" mb="0" cb="0"/><line nr="83" mi="10" ci="0" mb="0" cb="0"/><line nr="89" mi="10" ci="0" mb="0" cb="0"/><line nr="95" mi="10" ci="0" mb="0" cb="0"/><line nr="101" mi="10" ci="0" mb="0" cb="0"/><line nr="107" mi="10" ci="0" mb="0" cb="0"/><line nr="112" mi="10" ci="0" mb="0" cb="0"/><line nr="117" mi="9" ci="0" mb="0" cb="0"/><line nr="122" mi="7" ci="0" mb="0" cb="0"/><line nr="127" mi="9" ci="0" mb="0" cb="0"/><line nr="132" mi="15" ci="0" mb="0" cb="0"/><line nr="137" mi="10" ci="0" mb="0" cb="0"/><line nr="143" mi="10" ci="0" mb="0" cb="0"/><line nr="148" mi="16" ci="0" mb="0" cb="0"/><line nr="153" mi="9" ci="0" mb="0" cb="0"/><line nr="159" mi="10" ci="0" mb="0" cb="0"/><line nr="164" mi="10" ci="0" mb="0" cb="0"/><line nr="169" mi="9" ci="0" mb="0" cb="0"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="250" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="26" covered="0"/><counter type="METHOD" missed="26" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level1ListSelectedElementsOperator.java"><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="8" ci="0" mb="0" cb="0"/><line nr="46" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="7" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="8" ci="0" mb="0" cb="0"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="76" mi="8" ci="0" mb="0" cb="0"/><line nr="81" mi="8" ci="0" mb="0" cb="0"/><line nr="86" mi="8" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="0" cb="0"/><line nr="96" mi="9" ci="0" mb="0" cb="0"/><line nr="101" mi="9" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="112" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Level0ListOperator.java"><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="15" mb="0" cb="0"/><line nr="64" mi="0" ci="10" mb="0" cb="0"/><line nr="69" mi="0" ci="16" mb="0" cb="0"/><line nr="73" mi="0" ci="11" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="84" mi="0" ci="9" mb="0" cb="0"/><line nr="89" mi="0" ci="8" mb="0" cb="0"/><line nr="94" mi="0" ci="10" mb="0" cb="0"/><line nr="99" mi="10" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="10" mb="0" cb="0"/><line nr="110" mi="10" ci="0" mb="0" cb="0"/><line nr="115" mi="10" ci="0" mb="0" cb="0"/><line nr="120" mi="10" ci="0" mb="0" cb="0"/><line nr="126" mi="10" ci="0" mb="0" cb="0"/><line nr="132" mi="10" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="10" mb="0" cb="0"/><line nr="142" mi="0" ci="9" mb="0" cb="0"/><line nr="149" mi="0" ci="9" mb="0" cb="0"/><line nr="155" mi="10" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="11" mb="0" cb="0"/><line nr="165" mi="0" ci="9" mb="0" cb="0"/><line nr="169" mi="9" ci="0" mb="0" cb="0"/><line nr="175" mi="10" ci="0" mb="0" cb="0"/><line nr="180" mi="10" ci="0" mb="0" cb="0"/><line nr="184" mi="0" ci="10" mb="0" cb="0"/><line nr="188" mi="10" ci="0" mb="0" cb="0"/><line nr="194" mi="10" ci="0" mb="0" cb="0"/><line nr="199" mi="10" ci="0" mb="0" cb="0"/><line nr="203" mi="0" ci="10" mb="0" cb="0"/><line nr="207" mi="0" ci="10" mb="0" cb="0"/><line nr="215" mi="10" ci="0" mb="0" cb="0"/><line nr="220" mi="10" ci="0" mb="0" cb="0"/><line nr="225" mi="0" ci="9" mb="0" cb="0"/><line nr="231" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="6" ci="0" mb="0" cb="0"/><line nr="244" mi="5" ci="0" mb="0" cb="0"/><line nr="248" mi="5" ci="0" mb="0" cb="0"/><line nr="258" mi="8" ci="0" mb="0" cb="0"/><line nr="263" mi="8" ci="0" mb="0" cb="0"/><line nr="268" mi="7" ci="0" mb="0" cb="0"/><line nr="279" mi="7" ci="0" mb="0" cb="0"/><line nr="292" mi="9" ci="0" mb="0" cb="0"/><line nr="300" mi="0" ci="9" mb="0" cb="0"/><line nr="305" mi="9" ci="0" mb="0" cb="0"/><line nr="310" mi="6" ci="0" mb="0" cb="0"/><line nr="317" mi="0" ci="10" mb="0" cb="0"/><line nr="328" mi="11" ci="0" mb="0" cb="0"/><line nr="334" mi="11" ci="0" mb="0" cb="0"/><line nr="343" mi="11" ci="0" mb="0" cb="0"/><line nr="354" mi="10" ci="0" mb="0" cb="0"/><line nr="358" mi="10" ci="0" mb="0" cb="0"/><line nr="362" mi="10" ci="0" mb="0" cb="0"/><line nr="366" mi="10" ci="0" mb="0" cb="0"/><line nr="370" mi="10" ci="0" mb="0" cb="0"/><line nr="374" mi="10" ci="0" mb="0" cb="0"/><line nr="378" mi="10" ci="0" mb="0" cb="0"/><line nr="382" mi="10" ci="0" mb="0" cb="0"/><line nr="388" mi="9" ci="0" mb="0" cb="0"/><line nr="394" mi="11" ci="0" mb="0" cb="0"/><line nr="400" mi="11" ci="0" mb="0" cb="0"/><line nr="418" mi="11" ci="0" mb="0" cb="0"/><line nr="422" mi="11" ci="0" mb="0" cb="0"/><line nr="426" mi="10" ci="0" mb="0" cb="0"/><line nr="430" mi="10" ci="0" mb="0" cb="0"/><line nr="434" mi="10" ci="0" mb="0" cb="0"/><line nr="438" mi="10" ci="0" mb="0" cb="0"/><line nr="442" mi="11" ci="0" mb="0" cb="0"/><line nr="446" mi="11" ci="0" mb="0" cb="0"/><line nr="452" mi="12" ci="0" mb="0" cb="0"/><line nr="456" mi="12" ci="0" mb="0" cb="0"/><line nr="460" mi="11" ci="0" mb="0" cb="0"/><line nr="464" mi="11" ci="0" mb="0" cb="0"/><line nr="468" mi="11" ci="0" mb="0" cb="0"/><line nr="472" mi="11" ci="0" mb="0" cb="0"/><line nr="476" mi="12" ci="0" mb="0" cb="0"/><line nr="480" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="527" covered="226"/><counter type="LINE" missed="54" covered="24"/><counter type="COMPLEXITY" missed="54" covered="23"/><counter type="METHOD" missed="54" covered="23"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Level1ListElementsSelectedOperator.java"><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="9" mb="0" cb="0"/><line nr="51" mi="0" ci="9" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1089" covered="313"/><counter type="LINE" missed="120" covered="39"/><counter type="COMPLEXITY" missed="117" covered="36"/><counter type="METHOD" missed="117" covered="36"/><counter type="CLASS" missed="3" covered="3"/></package><counter type="INSTRUCTION" missed="50206" covered="11705"/><counter type="BRANCH" missed="1859" covered="457"/><counter type="LINE" missed="9076" covered="2916"/><counter type="COMPLEXITY" missed="6031" covered="1038"/><counter type="METHOD" missed="4981" covered="906"/><counter type="CLASS" missed="324" covered="321"/></report>