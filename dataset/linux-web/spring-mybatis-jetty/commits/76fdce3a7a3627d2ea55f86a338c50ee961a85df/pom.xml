<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>zx.soft</groupId>
		<artifactId>common-parent</artifactId>
		<version>1.0.0</version>
	</parent>

	<artifactId>spring-mybatis-jetty</artifactId>
	<version>1.1.0</version>
	<name>Spring Mybatis Jetty</name>

	<properties>
		<spring.old.version>3.2.3.RELEASE</spring.old.version>
	</properties>

	<dependencies>
		<!-- Spring包 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.old.version}</version><!--$NO-MVN-MAN-VER$-->
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.old.version}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.old.version}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.old.version}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.old.version}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.old.version}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.old.version}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		<!-- Jetty包 -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
		</dependency>
		<!-- 依赖注入 -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
		</dependency>
		<!-- Mybatis包 -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
		</dependency>
		<!-- Json包 -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
		</dependency>
		<!-- 日志包 -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-access</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<!-- Spring专用日志包 -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<!-- 测试包 -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
	</dependencies>

	<build>
		<!-- 配置该插件是为了存储Eclipse m2e配置文件，对Maven构建本省没有影响 -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>sql-maven-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<dependencies>
					<!-- 指定依赖的JDBC驱动 -->
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>5.1.25</version>
					</dependency>
				</dependencies>
				<!-- 所有execution的共同配置 -->
				<configuration>
					<driver>com.mysql.jdbc.Driver</driver>
					<url>jdbc:mysql://127.0.0.1:3306?characterEncoding=utf-8</url>
					<username>integration</username>
					<password></password>
					<encoding>UTF-8</encoding>
					<!-- 如果执行-Dmaven.test.skip=true，所有的executions都被忽略 -->
					<skip>${maven.test.skip}</skip>
				</configuration>
				<executions>
					<!-- 测试前清空数据库 -->
					<execution>
						<id>drop-db-before-test-if-any</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<autocommit>true</autocommit>
							<sqlCommand>DROP DATABASE IF EXISTS `user_dev`</sqlCommand>
							<!-- ignore error when database is not avaiable -->
							<onError>continue</onError>
						</configuration>
					</execution>
					<!-- 创建数据库 -->
					<execution>
						<id>create-db</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<autocommit>true</autocommit>
							<srcFiles>
								<srcFile>src/test/sql/user_db.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
					<!-- 创建数据表 -->
					<execution>
						<id>create-schema</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<autocommit>true</autocommit>
							<srcFiles>
								<srcFile>src/test/sql/user_schema.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
					<!-- 创建数据 -->
					<execution>
						<id>create-data</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<orderFile>ascending</orderFile>
							<fileset>
								<basedir>${basedir}</basedir>
								<includes>
									<include>src/test/sql/test_data2.sql</include>
									<include>src/test/sql/test_data1.sql</include>
								</includes>
							</fileset>
						</configuration>
					</execution>
					<!-- 测试结束清空数据库 -->
					<!-- <execution> <id>drop-db-after-test</id> <phase>process-test-resources</phase> 
						<goals> <goal>execute</goal> </goals> <configuration> <autocommit>true</autocommit> 
						<sqlCommand>DROP DATABASE IF EXISTS `user_dev`</sqlCommand> </configuration> 
						</execution> -->
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<excludes>
						<exclude>web_server.properties</exclude>
						<exclude>data_db.properties</exclude>
						<exclude>logback.xml</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/distribution.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<targetPath>webapp</targetPath>
				<directory>src/main/webapp</directory>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

		<finalName>${project.artifactId}-${project.version}</finalName>

	</build>

</project>