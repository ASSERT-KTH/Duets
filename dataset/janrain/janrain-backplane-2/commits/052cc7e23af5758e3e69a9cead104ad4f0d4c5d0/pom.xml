<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012 Janrain, Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.springframework.samples</groupId>
	<artifactId>backplane-server</artifactId>
	<name>backplane-server</name>
	<packaging>war</packaging>
  <version>${project.version}</version>
	<properties>
    <project.version>BP_2_0.2012.45_RC1</project.version>
		<org.springframework.version>3.0.3.RELEASE</org.springframework.version>
		<org.slf4j.version>1.5.10</org.slf4j.version>
    	<powermock.version>1.4.5</powermock.version>
  		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> 
	</properties>
	<dependencies>
		<!-- Spring -->
        <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
        <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
			

		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>
        <dependency>
            <groupId>avalon-framework</groupId>
            <artifactId>avalon-framework</artifactId>
            <version>4.1.3</version>
        </dependency>

        <!--  JSR 303 with Hibernate Validator -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.0.2.GA</version>
		</dependency>
		
		<!-- URL Rewrite -->
		<dependency>
			<groupId>org.tuckey</groupId>
			<artifactId>urlrewritefilter</artifactId>
			<version>3.1.0</version>
		</dependency>

		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<!--  for UriBuilder utility class -->
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>jsr311-api</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>1.4</version>
		</dependency>

		<!-- Apache commons -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.5</version>
		</dependency>

		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
		</dependency>

		<!-- JSON parser -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.6.0</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>1.6.0</version>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock.modules</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock.api</groupId>
			<artifactId>powermock-api-easymock</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>3.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-mock</artifactId>
			<version>2.0.8</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>2.5.6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>catalina</artifactId>
            <version>6.0.18</version>
			<scope>test</scope>
        </dependency>
		<dependency>
			<groupId>org.apache.xbean</groupId>
			<artifactId>xbean-spring</artifactId>
			<version>3.7</version>
		</dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk</artifactId>
            <version>1.2.9</version>
        </dependency>
        <!-- metrics -->
        <dependency>
            <groupId>com.yammer.metrics</groupId>
            <artifactId>metrics-core</artifactId>
            <version>2.1.2</version>
        </dependency>
        <dependency>
            <groupId>com.yammer.metrics</groupId>
            <artifactId>metrics-servlet</artifactId>
            <version>2.1.2</version>
        </dependency>
        <dependency>
            <groupId>com.yammer.metrics</groupId>
            <artifactId>metrics-log4j</artifactId>
            <version>2.1.2</version>
        </dependency>
         <dependency>
            <groupId>com.yammer.metrics</groupId>
            <artifactId>metrics-graphite</artifactId>
            <version>2.1.2</version>
        </dependency>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>2.7.2</version>
        </dependency>
         <!-- supersimpledb -->
        <dependency>
            <groupId>com.janrain.commons.supersimpledb</groupId>
            <artifactId>commons-supersimpledb</artifactId>
            <version>1.0.27</version>
        </dependency>
        <!-- intellij annotations library for @NotNull and @Nullable -->
        <dependency>
            <groupId>org.kohsuke.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>9.0</version>
        </dependency>
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <version>2.5.2</version>
            <type>pom</type>
        </dependency>

        <dependency>
            <!--
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>2.1.0</version>
            <type>jar</type>
            <scope>compile</scope>
            -->
            <!-- patched version below -->
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>2.1.0.a</version>

        </dependency>
        <dependency>
            <groupId>com.netflix.curator</groupId>
            <artifactId>curator-recipes</artifactId>
            <version>1.1.15</version>
        </dependency>
        <dependency>
        	<groupId>com.google.javascript</groupId>
        	<artifactId>closure-compiler</artifactId>
        	<version>rr2079.1</version>
        </dependency>
	</dependencies>
    <repositories>
        <!-- For Hibernate Validator -->
        <repository>
            <id>org.jboss.repository.release</id>
            <name>JBoss Maven Release Repository</name>
            <url>https://repository.jboss.org/nexus/content/repositories/releases</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

        <!-- Test tools respositories -->
        <repository>
            <id>powermock-repo</id>
            <url>http://powermock.googlecode.com/svn/repo/</url>
        </repository>
        <repository>
            <id>maven2-repository.dev.java.net</id>
            <name>Java.net Repository for Maven</name>
            <url>http://download.java.net/maven/2/</url>
            <layout>default</layout>
        </repository>
        <!-- Coda Hale's Metrics repo -->
        <repository>
            <id>repo.codahale.com</id>
            <url>http://repo.codahale.com</url>
        </repository>
        <!-- Scala plugin repo -->
        <repository>
            <id>scala</id>
            <name>Scala Tools</name>
            <url>http://scala-tools.org/repo-releases/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <!-- Janrain's supersimpledb dependency -->
        <repository>
            <id>janrain-repo</id>
            <url>https://repository-janrain.forge.cloudbees.com/release</url>
        </repository>

        <repository>
            <id>spy</id>
            <name>Spy Repository</name>
            <layout>default</layout>
            <url>http://files.couchbase.com/maven2/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>codehaus-release</id>
            <url>http://repository.codehaus.org</url>
        </repository>

    </repositories>
	<build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <showWarnings>true</showWarnings>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <warName>backplane-server-${project.version}</warName>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-war</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exploded</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>install</id>
                        <phase>install</phase>
                        <goals>
                            <goal>sources</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.scala-tools</groupId>
                <artifactId>maven-scala-plugin</artifactId>
                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>

                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <phase>test-compile</phase>
                    </execution>

                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- replace version in file -->
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>maven-replacer-plugin</artifactId>
                <version>1.3.2</version>
                <executions>
                    <execution>
                        <!-- the replace should happen before the app is packaged -->
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <file>target/${project.artifactId}-${project.version}/WEB-INF/classes/build.properties</file>
                    <replacements>
                        <replacement>
                            <token>MAVEN_BUILD_VERSION</token>
                            <value>${project.version}</value>
                        </replacement>
                    </replacements>
                </configuration>
            </plugin>
            		<plugin>
      	<groupId>org.codehaus.mojo</groupId>
      	<artifactId>exec-maven-plugin</artifactId>
      	<version>1.2.1</version>
          <executions>
            <execution>
              <id>shrink-js1</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>exec</goal>
              </goals>
      	<configuration>
           <executable>java</executable>
             <workingDirectory>${project.dir}</workingDirectory>
            <arguments>
              <argument>-classpath</argument>
              <classpath>
                <dependency>args4j:args4j</dependency>
                <dependency>com.google.guava:guava</dependency>
                <dependency>com.google.javascript:closure-compiler</dependency>
              </classpath>
              <argument>com.google.javascript.jscomp.CommandLineRunner</argument>
              <argument>--compilation_level</argument>
              <argument>SIMPLE_OPTIMIZATIONS</argument>
              <argument>--js</argument>
              <argument>src/main/webapp/static/backplane.js</argument>
              <argument>--js_output_file</argument>
              <argument>target/${project.artifactId}-${project.version}/static/backplane.js</argument>
            </arguments>
          </configuration>
            </execution>
           <execution>
              <id>shrink-js2</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>exec</goal>
              </goals>
      	<configuration>
           <executable>java</executable>
             <workingDirectory>${project.dir}</workingDirectory>
            <arguments>
              <argument>-classpath</argument>
              <classpath>
                <dependency>args4j:args4j</dependency>
                <dependency>com.google.guava:guava</dependency>
                <dependency>com.google.javascript:closure-compiler</dependency>
              </classpath>
              <argument>com.google.javascript.jscomp.CommandLineRunner</argument>
              <argument>--compilation_level</argument>
              <argument>SIMPLE_OPTIMIZATIONS</argument>
              <argument>--js</argument>
              <argument>src/main/webapp/static/backplane2.js</argument>
              <argument>--js_output_file</argument>
              <argument>target/${project.artifactId}-${project.version}/static/backplane2.js</argument>
            </arguments>
          </configuration>
            </execution>
          </executions>
      </plugin>
        </plugins>
	</build>
</project>
