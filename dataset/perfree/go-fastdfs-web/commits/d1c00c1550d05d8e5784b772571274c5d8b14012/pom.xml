<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.3.RELEASE</version>
		<relativePath/>
	</parent>
	<groupId>com.perfree</groupId>
	<artifactId>go-fastdfs-web</artifactId>
	<version>1.0.0</version>
	<name>go-fastdfs-web</name>
	<description>go-fastdfs-web</description>

	<properties>
		<java.version>1.8</java.version>
		<!-- log4j -->
		<log4j.version>1.3.8.RELEASE</log4j.version>
		<sqlite.version>3.25.2</sqlite.version>
		<!-- shiro -->
		<shiro.version>1.4.0</shiro.version>
		<!-- thymeleaf使用shiro标签 -->
		<thymeleaf.extras.shiro.version>2.0.0</thymeleaf.extras.shiro.version>
		<!-- springboot mybatis依赖 -->
		<mybatis.spring.boot.starter.version>1.3.2</mybatis.spring.boot.starter.version>
		<!-- pagehelper分页插件 -->
		<pagehelper.spring.boot.starter.version>1.2.9</pagehelper.spring.boot.starter.version>
		<docker.image.prefix>perfree</docker.image.prefix>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<!-- 使用了log4j，就要将spring-boot-starter-logging排除 -->
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- SpringBoot-mybatis依赖 -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>${mybatis.spring.boot.starter.version}</version>
		</dependency>
		<!--pagehelper -->
		<dependency>
			<groupId>com.github.pagehelper</groupId>
			<artifactId>pagehelper-spring-boot-starter</artifactId>
			<version>${pagehelper.spring.boot.starter.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.xerial</groupId>
		    <artifactId>sqlite-jdbc</artifactId>
		    <version>${sqlite.version}</version>
		</dependency>
	    <!-- log4j -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<!-- hutool -->
		<dependency>
			<groupId>cn.hutool</groupId>
			<artifactId>hutool-all</artifactId>
			<version>4.0.0</version>
		</dependency>
		<!-- shiro-->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<!-- thymeleaf使用shiro标签 -->
		<dependency>
			<groupId>com.github.theborakompanioni</groupId>
			<artifactId>thymeleaf-extras-shiro</artifactId>
			<version>${thymeleaf.extras.shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
			<version>3.9.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
		</dependency>
	</dependencies>

	<build>
		<finalName>go-fastdfs-web</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!--assembly插件-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptors>
						<descriptor>src/main/resources/assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- 使用Maven插件直接将应用打包为一个Docker镜像 -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>1.4.13</version>
				<configuration>
					<imageName>perfree/fastdfsweb</imageName>
					<repository>perfree/fastdfsweb</repository>
					<dockerfile>Dockerfile</dockerfile>
					<contextDirectory>${project.basedir}</contextDirectory>
					<buildArgs>
						<PACKAGE_FILE>target/${project.build.finalName}-${version}.tar.gz</PACKAGE_FILE>
					</buildArgs>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.${version}-tar.gz</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
		</plugins>
		<resources>
	        <resource>
	            <directory>src/main/resources</directory>
             	<includes>
                    <include>**/*.*</include>
                </includes>
	        </resource>
	    </resources>
	</build>

</project>
