<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	
	<modelVersion>4.0.0</modelVersion>
	
	<!-- brought in through the tamu core framework
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.2.5.RELEASE</version>
		<relativePath />
	</parent>
	-->
	
	<name>Vireo 4</name>
	<description>Vireo 4</description>
	<version>4.0.x-SNAPSHOT</version>
	<groupId>org.tdl</groupId>
	<artifactId>vireo</artifactId>
	<url>https://github.com/TexasDigitalLibrary/Vireo</url>
	<organization>
		<name>TDL</name>
		<url>http://www.tdl.org</url>
	</organization>
	
	<parent>
		<groupId>edu.tamu.framework</groupId>
		<artifactId>webservice-framework-parent</artifactId>
		<version>1.1.4</version>
	</parent>
	
	<properties>
		<start-class>org.tdl.vireo.Application</start-class>
		<m2eclipse.wtp.contextRoot>/</m2eclipse.wtp.contextRoot>
		<tomcat.version>7.0.59</tomcat.version>
		<java.version>1.8</java.version>
		<postgresql.version>9.4-1202-jdbc42</postgresql.version>
	</properties>
	
	<packaging>war</packaging>
	
	<repositories>
		<repository>
			<id>tamu-releases</id>
			<url>https://maven.library.tamu.edu/content/repositories/releases</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>edu.tamu.framework</groupId>
			<artifactId>webservice-framework-core</artifactId>
			<version>1.1.4</version>
		</dependency>
	
		<!-- Spring standalone JDK tools for JSP runtime compile (to avoid Embedded Jetty error on JSP compile at runtime) -->
		<dependency>
			<groupId>com.sun</groupId>
			<artifactId>tools</artifactId>
			<version>${java.version}</version>
			<systemPath>${java.home}/../lib/tools.jar</systemPath>
			<scope>system</scope>
		</dependency>
		<!-- Spring Boot Starter Web
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency> -->
		<!-- Spring Boot Starter Data - brought in through the tamu core framework
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency> JPA -->
		<!-- Spring Boot Data REST
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency> -->
		<!-- H2 in-memory SQL DB - brought in through the tamu core framework
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency> -->
		<!-- PostgreSQL SQL DB - brought in through the tamu core framework
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
		</dependency> -->
		<!-- MySQL SQL DB -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<!-- Spring Boot Starter Security - brought in through the tamu core framework
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
		</dependency> -->
		<!-- Spring Boot Loader Tools (for FileUtils.sha1Hash()) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-loader-tools</artifactId>
		</dependency>
		<!-- JSP Templates
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency> -->
		<!-- Testing
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency> -->
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<useSystemClassLoader>false</useSystemClassLoader>
				</configuration>
			</plugin>
			<!-- General Maven Execution Plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<!-- NPM Install -->
					<execution>
						<id>exec-npm-install</id>
						<phase>generate-sources</phase>
						<configuration>
							<executable>npm</executable>
							<arguments>
								<argument>install</argument>
							</arguments>
						</configuration>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
					<!-- Protractor Testing for AngularJS -->
					<execution>
						<id>exec-npm-run-protractor</id>
						<phase>test</phase>
						<configuration>
							<skip>true</skip>
							<executable>npm</executable>
							<arguments>
								<argument>run</argument>
								<argument>protractor</argument>
							</arguments>
						</configuration>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Karma Testing for AngularJS -->
			<plugin>
				<groupId>com.kelveden</groupId>
				<artifactId>maven-karma-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<id>maven-karma-test</id>
						<phase>test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<karmaExecutable>${basedir}/node_modules/.bin/karma</karmaExecutable>
							<configFile>src/main/resources/static/angular/test/karma.conf.js</configFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											exec-maven-plugin
										</artifactId>
										<versionRange>
											[1.3.2,)
										</versionRange>
										<goals>
											<goal>exec</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	
</project>