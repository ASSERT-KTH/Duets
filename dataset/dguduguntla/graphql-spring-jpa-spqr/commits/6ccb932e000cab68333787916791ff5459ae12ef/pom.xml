<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.gdp</groupId>
    <artifactId>graphql-spring-jpa-spqr</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>graphql-spring-jpa-spqr</name>
    <description>Demo project showing implementation of GraphQL using SPQR and Spring data JPA</description>

    <properties>
        <java.version>1.8</java.version>
        <playtika.version>1.12</playtika.version>
        <spring-cloud-context.version>2.0.1.RELEASE</spring-cloud-context.version>
        <graphql-spqr-version>0.0.4</graphql-spqr-version>
        <google-guava-version>21.0</google-guava-version>
        <model-mapper-version>2.3.0</model-mapper-version>
        <model-mapper-spring-starter-verion>1.0.0</model-mapper-spring-starter-verion>
        <docker-compose-plugin-version>2.0.1</docker-compose-plugin-version>
        <maven-compiler-plugin-version>3.8.0</maven-compiler-plugin-version>
        <commons-io-version>2.6</commons-io-version>
        <spring-data-jpa-entity-graph.version>2.0.5</spring-data-jpa-entity-graph.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io-version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>com.cosium.spring.data</groupId>
            <artifactId>spring-data-jpa-entity-graph</artifactId>
            <version>${spring-data-jpa-entity-graph.version}</version>
        </dependency>

        <dependency>
            <groupId>io.leangen.graphql</groupId>
            <artifactId>graphql-spqr-spring-boot-starter</artifactId>
            <version>${graphql-spqr-version}</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-java8</artifactId>
        </dependency>

        <dependency>
            <groupId>org.modelmapper</groupId>
            <artifactId>modelmapper</artifactId>
            <version>${model-mapper-version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.rozidan</groupId>
            <artifactId>modelmapper-spring-boot-starter</artifactId>
            <version>${model-mapper-spring-starter-verion}</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${google-guava-version}</version>
        </dependency>

        <!-- test-only dependencies for postgres test container-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-context</artifactId>
            <version>${spring-cloud-context.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.playtika.testcontainers</groupId>
            <artifactId>embedded-postgresql</artifactId>
            <version>${playtika.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin-version}</version>
                <configuration>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <!-- This is plugin is used to run docker-compose file to install local postgres db -->
            <plugin>
                <groupId>com.dkanejs.maven.plugins</groupId>
                <artifactId>docker-compose-maven-plugin</artifactId>
                <version>${docker-compose-plugin-version}</version>
                <executions>
                    <execution>
                        <id>up</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>up</goal>
                        </goals>
                        <configuration>
                            <composeFile>
                                ${project.basedir}/src/main/docker-graphdb-postgres/docker-compose.yml
                            </composeFile>
                            <detachedMode>true</detachedMode>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- This is plugin is used to sleep for a while postgres db is setup -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>sleep-for-postgres</id>
                        <phase>validate</phase>
                        <configuration>
                            <target>
                                <sleep seconds="5"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
