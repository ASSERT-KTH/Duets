<?xml version="1.0" encoding="UTF-8"?>
<project>

 <!-- General information -->

  <modelVersion>4.0.0</modelVersion>
  <groupId>com.fasterxml.uuid</groupId>
  <artifactId>java-uuid-generator</artifactId>
<!--
  <artifactId>jug</artifactId>
-->
  <name>Java UUID Generator</name>
  <version>2.9.0-SNAPSHOT</version>
  <packaging>bundle</packaging>
  <description>
Java UUID Generator (JUG) is a Java library for generating
Universally Unique IDentifiers, UUIDs (see http://en.wikipedia.org/wiki/UUID).
It can be used either as a component in a bigger application, or as a standalone command line tool.
JUG generates UUIDs according to the IETF UUID draft specification.
JUG supports all 3 official UUID generation methods.
</description>
  <scm>
    <connection>scm:git:git://github.com/cowtowncoder/java-uuid-generator.git</connection>
    <url>scm:git:git@github.com:cowtowncoder/java-uuid-generator.git</url>
    <developerConnection>scm:git:git@github.com:cowtowncoder/java-uuid-generator.git</developerConnection>
  </scm>
  <developers>
    <developer>
      <id>cowtowncoder</id>
      <name>Tatu Saloranta</name>
      <email>tatu.saloranta@iki.fi</email>
    </developer>
  </developers>

  <prerequisites>
    <maven>2.0.9</maven>
  </prerequisites>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

 <!-- Contact information -->
  <url>http://wiki.fasterxml.com/JugHome</url>
  <issueManagement>
    <url>http://github.com/cowtowncoder/java-uuid-generator/issues
</url>
  </issueManagement>

 <!-- Dependency information -->
 
  <dependencies>
    <dependency> <!-- log4j is optional, but needed for compilation -->
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.13</version>
      <scope>compile</scope>
    </dependency>
    <!-- and for testing, JUnit is needed -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>[4.0.0,5.0.0)</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

 <!-- Also: must specify non-standard source level -->
  <build>
    <plugins>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <source>1.6</source>
            <target>1.6</target>
          </configuration>
        </plugin>
        <plugin><!-- plug-in to attach source bundle in repo -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- javadocs? yes please -->
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-javadoc-plugin</artifactId>
         <version>2.6.1</version>
         <configuration>
         </configuration>
       </plugin>

       <!-- Plus, let's make jars OSGi bundles as well  -->
        <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-bundle-plugin</artifactId>
<!--version>2.0.0</version-->
          <extensions>true</extensions>
          <configuration>
            <instructions>
              <Bundle-Name>Jug</Bundle-Name>
              <Bundle-SymbolicName>${pom.artifactId}</Bundle-SymbolicName>
              <Bundle-Description>Java UUID Generator
</Bundle-Description>
              <Bundle-Vendor>FasterXML.com</Bundle-Vendor>
              <Import-Package>
</Import-Package>
              <DynamicImport-Package>
org.apache.log4j
</DynamicImport-Package>
              <Private-Package>
</Private-Package>
              <Export-Package>
com.fasterxml.uuid, com.fasterxml.uuid.ext
</Export-Package>
            </instructions>
          </configuration>
       </plugin>

        <!-- for maven release, need yet another plug-in -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.0</version>
        </plugin>
        <!-- And Sonatype also mandates GPG... oh brother -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <executions>
           <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
           </execution>
          </executions>
        </plugin>

    </plugins>
  </build>

  <!-- Licensing -->
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <organization>
    <name>FasterXML.com</name>
    <url>http://fasterxml.com</url>
  </organization>

  <!-- 01-May-2010, tatu: Let's publish via Sonatype OS repo
    -->
  <repositories>
    <repository>
      <id>sonatype</id>
      <name>Sonatype</name>
      <layout>default</layout>
<!--
      <url>http://repository.codehaus.org</url>
-->
      <url>http://oss.sonatype.org/content/repositories/releases</url>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
        <checksumPolicy>warn</checksumPolicy>
      </releases>
    </repository>
    <repository>
      <id>maven</id>
      <name>Maven</name>
      <layout>default</layout>
      <url>http://repo1.maven.org/maven2</url>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
        <checksumPolicy>warn</checksumPolicy>
      </releases>
    </repository>

  </repositories>

  <!-- Let's also try to automate deployments?
       18-Mar-2010, tatu: For now let's actually import via StaxMate
           section... see if that works ok.
    -->
  <distributionManagement>
    <snapshotRepository>
      <id>sonatype-nexus-snapshots</id>
      <name>Sonatype Nexus Snapshots</name>
      <url>http://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>sonatype-nexus-staging</id>
      <name>Nexus Release Repository</name>
      <url>http://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>

<!--
    <repository>
      <uniqueVersion>false</uniqueVersion>
      <id>sonatype-release</id>
      <name>Sonatype Maven2 Repository</name>
      <url>http://oss.sonatype.org/service/local/staging/deploy/maven2</url>
      <layout>default</layout>
    </repository>
-->

  </distributionManagement>

</project>
