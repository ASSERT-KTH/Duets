<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>co.cantina</groupId>
	<artifactId>spring-jooq</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>spring-jooq</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.0.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<yaml-properties-maven-plugin.version>1.1.3</yaml-properties-maven-plugin.version>
		
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>it.ozimov</groupId>
			<artifactId>yaml-properties-maven-plugin</artifactId>
			<version>${yaml-properties-maven-plugin.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>

		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>1.1.3</version>
		</dependency>
		<dependency>
		    <groupId>org.modelmapper.extensions</groupId>
		    <artifactId>modelmapper-jooq</artifactId>
		    <version>1.1.3</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>it.ozimov</groupId>
				<artifactId>yaml-properties-maven-plugin</artifactId>
				<version>${yaml-properties-maven-plugin.version}</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>src/main/resources/application.yml</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>

				<!-- Note that we're executing the Flyway plugin in the "generate-sources"
					phase -->
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>migrate</goal>
						</goals>
					</execution>
				</executions>

				<!-- Note that we need to prefix the db/migration path with filesystem:
					to prevent Flyway from looking for our migration scripts only on the classpath -->
				<configuration>
					<driver>${spring.datasource.driverClassName}</driver>
					<url>${spring.datasource.url}</url>
					<user>${spring.datasource.username}</user>
					<password>${spring.datasource.password}</password>
					<locations>
						<location>filesystem:src/main/resources/db/migration</location>
					</locations>
				</configuration>
			</plugin>


			<!-- The jOOQ code generator plugin -->
			<plugin>
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>

				<executions>
					<execution>
						<id>generate-mysql</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<jdbc>
								<driver>${spring.datasource.driverClassName}</driver>
								<url>${spring.datasource.url}</url>
								<user>${spring.datasource.username}</user>
								<password>${spring.datasource.password}</password>
							</jdbc>
							<generator>
								<database>
									<name>org.jooq.meta.mysql.MySQLDatabase</name>
									<includes>.*</includes>
									<excludes></excludes>
									<inputSchema>springjooq</inputSchema>
								</database>
								<generate>
									<deprecated>false</deprecated>
									<instanceFields>true</instanceFields>
									<pojos>false</pojos>
								</generate>
								<target>
									<packageName>co.cantina.spring.jooq.sample.model</packageName>
									<directory>target/generated-sources/jooq</directory>
								</target>
							</generator>
						</configuration>
					</execution>
				</executions>

				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>6.0.6</version>
					</dependency>
				</dependencies>

			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/jooq/</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>		
	</build>

</project>
