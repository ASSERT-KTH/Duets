<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.springfox</groupId>
    <artifactId>springfox-javadoc</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>springfox-javadoc</name>
    <description>generate Swagger/OpenAPI documentation from Javadoc using Springfox</description>

    <scm>
        <connection>https://github.com/springfox/springfox-javadoc.git</connection>
        <developerConnection>https://github.com/springfox/springfox-javadoc.git</developerConnection>
        <url>https://github.com/springfox/springfox-javadoc</url>
    </scm>

    <properties>
        <java.source.version>1.6</java.source.version>
        <java.target.version>1.6</java.target.version>
        <org.springframework.version>5.0.2.RELEASE</org.springframework.version>
        <jackson.version>2.9.2</jackson.version>
        <springfox.version>2.7.0</springfox.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>

        <!-- Spring Framework -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!-- Jackson JSON library -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- Springfox for Swagger JSON API documentation for REST services -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${springfox.version}</version>
        </dependency>
        
        <!-- necessary to compile our own Doclet that we use to generate Swagger documentation from JavaDoc -->
        <!-- XXX we could try and fix the Sonar warning about system scope by installing into the local Maven repository
            like we do for the Oracle driver, but is that really worth the clutter just to get rid of a warning? -->
        <dependency>
            <groupId>com.sun</groupId>
            <artifactId>tools</artifactId>
            <version>${java.source.version}</version>
            <scope>system</scope>
            <systemPath>${java.home}/../lib/tools.jar</systemPath>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>${java.source.version}</source>
                    <target>${java.target.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.4</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>javadoc</goal>
                        </goals>
                        <phase>process-classes</phase>
                        <configuration>
                            <doclet>springfox.javadoc.doclet.SwaggerPropertiesDoclet</doclet>
                            <docletArtifact>
                                <groupId>${project.groupId}</groupId>
                                <artifactId>${project.artifactId}</artifactId>
                                <version>${project.version}</version>
                            </docletArtifact>
                            <additionalparam>
                                -classdir ${project.build.outputDirectory}
                            </additionalparam>
                            <sourcepath>${project.build.sourceDirectory}</sourcepath>
                            <useStandardDocletOptions>false</useStandardDocletOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
