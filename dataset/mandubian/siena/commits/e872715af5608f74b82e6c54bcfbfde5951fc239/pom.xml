<?xml version="1.0" encoding="UTF-8"?>
<project>
	<modelVersion>4.0.0</modelVersion>
	<groupId>siena</groupId>
	<artifactId>siena</artifactId>
	<name>siena</name>
	<version>0.7.5</version>
	<url>http://www.sienaproject.com</url>
	<description>
		Siena is a persistence abstraction layer made in Java with various implementations:
		* siena-jdbc: persists objects into a relational database using JDBC (status: deeply tested)
		* siena-gae: persists objects into the Google App Engine's datastore using its low-level API (status: beta)
		* siena-sdb: persists objects using Amazon's SimpleDB (very experimental)
		* siena-remote: persists objects remotely using a remote web application that uses siena. (planning)
		
		Siena is also:
		* Intrusive. You make a class persistent by
		extending a certain class. Relationships are defined also in an
		intrusive way.
		* Simple. Simplicity is the most important thing.
		* Limited. Due to the simplicity there are several unsupported
		things such as JOINs.
		* Extensible. There are two interfaces you
		can implement on your own way.


	</description>


	<licenses>
		<license>
			<name>Apache 2</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>Apache License 2.0</comments>
		</license>
	</licenses>

	<organization>
		<name>Google Code</name>
		<url>http://code.google.com/</url>
	</organization>

	<developers>
		<developer>
			<id>gimenete</id>
			<name>Alberto Gimeno</name>
			<email>gimenete at gmail.com</email>
			<organization>Google Code</organization>
			<organizationUrl>http://code.google.com/</organizationUrl>
			<roles>
				<role>Architect</role>
				<role>Manager</role>
				<role>Developer</role>
			</roles>
		</developer>
		<developer>
			<id>jsanca</id>
			<name>Jonathan SÃ¡nchez</name>
			<email>jsanca at gmail.com</email>
			<organization>Google Code</organization>
			<organizationUrl>http://code.google.com/</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
		</developer>
	</developers>

	<issueManagement>
		<system>Gooble issues tracker</system>
		<url>http://code.google.com/p/siena/issues</url>
	</issueManagement>


	<reporting>
		<plugins>

			<!-- Code analysis -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>1.1.1</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.3</version>
			</plugin>


			<!-- Check the cobertura of the test cases -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.2</version>
			</plugin>


			<plugin>
				<!--  >groupId>org.apache.maven.plugins</groupId-->
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<show>private</show>
					<source>1.5</source>
					<aggregate>true</aggregate>

					<!-- >doclet>
						gr.spinellis.umlgraph.doclet.UmlGraphDoc
						</doclet>
						
						<docletArtifact>
						<groupId>gr.spinellis</groupId>
						<artifactId>UmlGraph</artifactId>
						<version>4.6</version>
						</docletArtifact>
						
						<additionalparam>
						-inferrel -inferdep -quiet -hide java.*
						-collpackages java.util.* -qualify
						-postfixpackage -nodefontsize 9
						-nodefontpackagesize 7
						
						</additionalparam -->

					<links>
						<link>
							http://java.sun.com/j2se/1.5.0/docs/api
						</link>
						<link>http://www.junit.org/junit/javadoc/</link>
						<link>http://www.dbunit.org/apidocs/</link>
						<link>http://db.apache.org/ddlutils/api/</link>
						<link>
							http://commons.apache.org/dbcp/apidocs/
						</link>

					</links>

				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<build>
		<finalName>siena</finalName>
		<plugins>
			<!-- Compiler settings -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<!-- Check code style -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<configuration>
					<consoleOutput>false</consoleOutput>
					<outputFileFormat>plain</outputFileFormat>
				</configuration>

			</plugin>
			<!-- Code analysis -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<configuration>
					<format>txt</format>
				</configuration>
				<version>2.3</version>
			</plugin>

			<!-- Test cases -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/BaseTest.java</exclude>
						<exclude>**/TestAll.java</exclude>
						<exclude>**/Person.java</exclude>
						<exclude>**/Message.java</exclude>
						<exclude>**/Discovery.java</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>


	<repositories>
		<repository>
			<id>repo1</id>
			<name>Maven Central Repository</name>
			<url>http://repo1.maven.org/maven2</url>
		</repository>
		<repository>
			<id>java.net</id>
			<url>http://download.java.net/maven/2</url>
		</repository>
		<repository>
			<id>ibiblio.org</id>
			<name>
				ibiblio Mirror of http://repo1.maven.org/maven2/
			</name>
			<url>http://mirrors.ibiblio.org/pub/mirrors/maven2</url>
		</repository>
	</repositories>



	<dependencies>
		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>1.6.1</version>
			<scope>compile</scope>
		</dependency>


		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.2</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.2.2</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>org.apache.ddlutils</groupId>
			<artifactId>ddlutils</artifactId>
			<version>1.0</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>2.2</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.6</version>
			<scope>test</scope>
		</dependency>
		
        <!-- Google App Engine Dependencies -->
		<dependency>
			<groupId>com.google</groupId>
			<artifactId>appengine-tools</artifactId>
			<version>1.2.8</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google</groupId>
			<artifactId>appengine-local-runtime-shared</artifactId>
			<version>1.2.8</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google</groupId>
			<artifactId>appengine-sdk-1.2.8-api</artifactId>
			<version>1.2.8</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.google</groupId>
			<artifactId>appengine-local-runtime</artifactId>
			<version>1.2.8</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google</groupId>
			<artifactId>appengine-api-stubs</artifactId>
			<version>1.2.8</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google</groupId>
			<artifactId>appengine-api-labs</artifactId>
			<version>1.2.8</version>
			<scope>test</scope>
		</dependency>
		
		<!-- Hbase dependencies -->
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hbase</artifactId>
			<version>0.19.3</version>
			<scope>compile</scope>
		</dependency>

	</dependencies>

</project>