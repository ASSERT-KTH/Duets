<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.htmlcleaner</groupId>
    <artifactId>htmlcleaner</artifactId>
    <packaging>jar</packaging>
    <version>2.2-amplafi-SNAPSHOT</version>
    <name>HtmlCleaner</name>
    <description>
        HtmlCleaner is an HTML parser written in Java. It transforms dirty HTML to well-formed XML following
        the same rules that most web-browsers use.
    </description>
    <url>http://htmlcleaner.sourceforge.net/</url>
    <inceptionYear>2006</inceptionYear>

    <licenses>
        <license>
            <name>BSD License</name>
            <url>http://www.opensource.org/licenses/bsd-license.php</url>
            <comments>
                OWNER = Vladimir Nikic
                YEAR = 2006-2008
            </comments>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Vladimir Nikic</name>
            <id>vnikic</id>
            <roles>
                <role>Project Admin</role>
                <role>Developer</role>
            </roles>
            <timezone>1</timezone>
            <email>vnikic@users.sourceforge.net</email>
        </developer>
    </developers>
<!-- 
    <scm>
        <url>http://htmlcleaner.svn.sourceforge.net/</url>
    </scm>
 -->
     <scm>
        <developerConnection>scm:svn:https://svn1.hosted-projects.com/transparentpolitics/modified-opensource/${artifactId}/trunk</developerConnection>
    </scm>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>jdom</groupId>
            <artifactId>jdom</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant</artifactId>
            <version>1.7.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.7</version>
            <scope>test</scope>
        </dependency>        
    </dependencies>

    <build>
        <!-- suggestion: move sources to src/main/java ;-)  -->
        <sourceDirectory>src</sourceDirectory>
        <!-- suggestion: move test sources to src/test/java :-) -->
        <testSourceDirectory>test</testSourceDirectory>
        <!-- suggestion: move test sources to src/test/resources :-) -->
        <testResources>
            <testResource>
                <directory>test</directory>
            </testResource>
        </testResources>

        
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <uniqueVersion>false</uniqueVersion>
                </configuration>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                            <goal>test-jar</goal>
                        </goals>
                        <configuration>
                            <attach>true</attach>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>config/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <!-- eclipse:configure-workspace adds M2_REPO to eclipse -->
                <!--
                    workspaceActiveCodeStyleProfileName Name of a profile in workspaceCodeStylesURL to activate. Default is
                    the first profile name in the code style file in workspaceCodeStylesURL
                -->
                <!-- workspaceCodeStylesURL    String      Point to a URL containing code styles content.
                      -->
                <configuration>
                    <!-- 
                  <workspaceCodeStylesURL></workspaceCodeStylesURL>
                   -->
                    <buildOutputDirectory>bin</buildOutputDirectory>

                </configuration>

            </plugin>            
        </plugins>
    </build>
    <distributionManagement>
        <repository>
            <id>amplafi.public</id>
            <url>ftp://amplafi.com/httpdocs/repository</url>
        </repository>
    </distributionManagement>
</project>
