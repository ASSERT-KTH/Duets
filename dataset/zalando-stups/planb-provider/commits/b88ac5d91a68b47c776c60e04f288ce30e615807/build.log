[INFO] Error stacktraces are turned on.
[INFO] Scanning for projects...
[INFO] 
[INFO] ------------------< org.zalando.planb:planb-provider >------------------
[INFO] Building Plan B OpenID Connect Provider 1.0-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.5:prepare-agent (default) @ planb-provider ---
[INFO] argLine set to -javaagent:/home/jdbl/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/tmp/tmp87glktzp/planb-provider/target/jacoco.exec
[INFO] 
[INFO] --- swagger-codegen-maven-plugin:0.4.22:codegen (generate-code) @ planb-provider ---
[INFO] No 'modelPackage' was specified, use configured 'apiPackage' : org.zalando.planb.provider.api
[INFO] register config : 'springinterfaces' with class : de.zalando.stups.swagger.codegen.language.SpringInterfaces
[INFO] register config : 'springinterfacesNoSwaggerAnnotations' with class : de.zalando.stups.swagger.codegen.language.SpringInterfacesNoSwaggerAnnotations
[INFO] register config : 'springinterfacesResponseEntity' with class : de.zalando.stups.swagger.codegen.language.SpringInterfacesResponseEntity
[INFO] register config : 'springinterfacesResponseEntityNoSwaggerAnnotations' with class : de.zalando.stups.swagger.codegen.language.SpringInterfacesResponseEntityNoSwaggerAnnotations
[INFO] register config : 'android' with class : io.swagger.codegen.languages.AndroidClientCodegen
[INFO] register config : 'async-scala' with class : io.swagger.codegen.languages.AsyncScalaClientCodegen
[INFO] register config : 'csharp' with class : io.swagger.codegen.languages.CSharpClientCodegen
[INFO] register config : 'dart' with class : io.swagger.codegen.languages.DartClientCodegen
[INFO] register config : 'flash' with class : io.swagger.codegen.languages.FlashClientCodegen
[INFO] register config : 'java' with class : io.swagger.codegen.languages.JavaClientCodegen
[INFO] register config : 'jaxrs' with class : io.swagger.codegen.languages.JaxRSServerCodegen
[INFO] register config : 'inflector' with class : io.swagger.codegen.languages.JavaInflectorServerCodegen
[INFO] register config : 'nodejs' with class : io.swagger.codegen.languages.NodeJSServerCodegen
[INFO] register config : 'objc' with class : io.swagger.codegen.languages.ObjcClientCodegen
[INFO] register config : 'perl' with class : io.swagger.codegen.languages.PerlClientCodegen
[INFO] register config : 'php' with class : io.swagger.codegen.languages.PhpClientCodegen
[INFO] register config : 'python' with class : io.swagger.codegen.languages.PythonClientCodegen
[INFO] register config : 'qt5cpp' with class : io.swagger.codegen.languages.Qt5CPPGenerator
[INFO] register config : 'ruby' with class : io.swagger.codegen.languages.RubyClientCodegen
[INFO] register config : 'scala' with class : io.swagger.codegen.languages.ScalaClientCodegen
[INFO] register config : 'scalatra' with class : io.swagger.codegen.languages.ScalatraServerCodegen
[INFO] register config : 'silex-PHP' with class : io.swagger.codegen.languages.SilexServerCodegen
[INFO] register config : 'sinatra' with class : io.swagger.codegen.languages.SinatraServerCodegen
[INFO] register config : 'spring-mvc' with class : io.swagger.codegen.languages.SpringMVCServerCodegen
[INFO] register config : 'dynamic-html' with class : io.swagger.codegen.languages.StaticDocCodegen
[INFO] register config : 'html' with class : io.swagger.codegen.languages.StaticHtmlGenerator
[INFO] register config : 'swagger' with class : io.swagger.codegen.languages.SwaggerGenerator
[INFO] register config : 'swagger-yaml' with class : io.swagger.codegen.languages.SwaggerYamlGenerator
[INFO] register config : 'swift' with class : io.swagger.codegen.languages.SwiftCodegen
[INFO] register config : 'tizen' with class : io.swagger.codegen.languages.TizenClientCodegen
[INFO] register config : 'typescript-angular' with class : io.swagger.codegen.languages.TypeScriptAngularClientCodegen
[INFO] register config : 'typescript-node' with class : io.swagger.codegen.languages.TypeScriptNodeClientCodegen
[INFO] register config : 'akka-scala' with class : io.swagger.codegen.languages.AkkaScalaClientCodegen
[INFO] register config : 'CsharpDotNet2' with class : io.swagger.codegen.languages.CsharpDotNet2ClientCodegen
[INFO] Generate for language : springinterfacesResponseEntityNoSwaggerAnnotations
reading from /tmp/tmp87glktzp/planb-provider/src/main/resources/api/plan-b-api.yml
writing file /tmp/tmp87glktzp/planb-provider/target/generated-sources/swagger-codegen/org/zalando/planb/provider/api/Client.java
writing file /tmp/tmp87glktzp/planb-provider/target/generated-sources/swagger-codegen/org/zalando/planb/provider/api/User.java
writing file /tmp/tmp87glktzp/planb-provider/target/generated-sources/swagger-codegen/org/zalando/planb/provider/api/Password.java
writing file /tmp/tmp87glktzp/planb-provider/target/generated-sources/swagger-codegen/org/zalando/planb/provider/api/Consent.java
writing file /tmp/tmp87glktzp/planb-provider/target/generated-sources/swagger-codegen/org/zalando/planb/provider/api/Error.java
[INFO] generated operationId clientsRealmIdPut	for Path: put /clients/{realm}/{id}
[INFO] generated operationId clientsRealmIdDelete	for Path: delete /clients/{realm}/{id}
[INFO] generated operationId clientsRealmIdPatch	for Path: patch /clients/{realm}/{id}
[INFO] generated operationId consentsRealmUsernameClient_idGet	for Path: get /consents/{realm}/{username}/{client_id}
[INFO] generated operationId consentsRealmUsernameClient_idDelete	for Path: delete /consents/{realm}/{username}/{client_id}
[INFO] generated operationId usersRealmIdPut	for Path: put /users/{realm}/{id}
[INFO] generated operationId usersRealmIdDelete	for Path: delete /users/{realm}/{id}
[INFO] generated operationId usersRealmIdPatch	for Path: patch /users/{realm}/{id}
[INFO] generated operationId usersRealmIdPasswordPost	for Path: post /users/{realm}/{id}/password
clientsRealmIdPut
{
  "responseHeaders" : [ ],
  "hasAuthMethods" : true,
  "hasConsumes" : true,
  "hasProduces" : false,
  "hasParams" : true,
  "subresourceOperation" : true,
  "hasMore" : true,
  "isResponseBinary" : false,
  "path" : "/{realm}/{id}",
  "operationId" : "clientsRealmIdPut",
  "httpMethod" : "PUT",
  "summary" : "Save client",
  "notes" : "Creates or overrides a client and all of its properties",
  "baseName" : "clients",
  "consumes" : [ {
    "hasMore" : null,
    "mediaType" : "application/json"
  } ],
  "bodyParam" : {
    "isBodyParam" : true,
    "secondaryParam" : true,
    "baseName" : "client",
    "paramName" : "client",
    "dataType" : "Client",
    "jsonSchema" : "{\n  \"in\" : \"body\",\n  \"name\" : \"client\",\n  \"required\" : true,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Client\"\n  }\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  },
  "allParams" : [ {
    "isPathParam" : true,
    "hasMore" : true,
    "baseName" : "realm",
    "paramName" : "realm",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"realm\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isPathParam" : true,
    "hasMore" : true,
    "secondaryParam" : true,
    "baseName" : "id",
    "paramName" : "id",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"id\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isBodyParam" : true,
    "secondaryParam" : true,
    "baseName" : "client",
    "paramName" : "client",
    "dataType" : "Client",
    "jsonSchema" : "{\n  \"in\" : \"body\",\n  \"name\" : \"client\",\n  \"required\" : true,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Client\"\n  }\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  } ],
  "bodyParams" : [ {
    "isBodyParam" : true,
    "baseName" : "client",
    "paramName" : "client",
    "dataType" : "Client",
    "jsonSchema" : "{\n  \"in\" : \"body\",\n  \"name\" : \"client\",\n  \"required\" : true,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Client\"\n  }\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  } ],
  "pathParams" : [ {
    "isPathParam" : true,
    "hasMore" : true,
    "baseName" : "realm",
    "paramName" : "realm",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"realm\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isPathParam" : true,
    "secondaryParam" : true,
    "baseName" : "id",
    "paramName" : "id",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"id\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  } ],
  "queryParams" : [ ],
  "headerParams" : [ ],
  "formParams" : [ ],
  "authMethods" : [ {
    "name" : "oauth2",
    "type" : "oauth2",
    "hasMore" : false,
    "isBasic" : false,
    "isOAuth" : true,
    "isApiKey" : false,
    "isKeyInQuery" : false,
    "isKeyInHeader" : false,
    "flow" : "implicit",
    "authorizationUrl" : "none",
    "scopes" : [ {
      "scope" : "uid",
      "hasMore" : null,
      "description" : "user identitiy"
    } ]
  } ],
  "tags" : [ "Clients" ],
  "responses" : [ {
    "headers" : [ ],
    "code" : "200",
    "message" : "Client has been saved",
    "hasMore" : true,
    "isDefault" : true,
    "simpleType" : true,
    "primitiveType" : true,
    "isMapContainer" : false,
    "isListContainer" : false,
    "isBinary" : false,
    "jsonSchema" : "{\n  \"description\" : \"Client has been saved\"\n}",
    "wildcard" : false
  }, {
    "headers" : [ ],
    "code" : "400",
    "message" : "Bad request",
    "hasMore" : true,
    "dataType" : "Error",
    "baseType" : "Error",
    "isDefault" : false,
    "simpleType" : true,
    "primitiveType" : false,
    "isBinary" : false,
    "schema" : {
      "$ref" : "#/definitions/Error"
    },
    "jsonSchema" : "{\n  \"description\" : \"Bad request\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Error\"\n  }\n}",
    "wildcard" : false
  }, {
    "headers" : [ ],
    "code" : "401",
    "message" : "Unauthorized request",
    "hasMore" : false,
    "dataType" : "Error",
    "baseType" : "Error",
    "isDefault" : false,
    "simpleType" : true,
    "primitiveType" : false,
    "isBinary" : false,
    "schema" : {
      "$ref" : "#/definitions/Error"
    },
    "jsonSchema" : "{\n  \"description\" : \"Unauthorized request\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Error\"\n  }\n}",
    "wildcard" : false
  } ],
  "imports" : [ "Error", "Client" ],
  "vendorExtensions" : { },
  "nickname" : "clientsRealmIdPut",
  "hasPathParams" : true,
  "hasQueryParams" : false,
  "hasBodyParam" : true,
  "hasHeaderParams" : false,
  "hasFormParams" : false
}
clientsRealmIdDelete
{
  "responseHeaders" : [ ],
  "hasAuthMethods" : true,
  "hasConsumes" : false,
  "hasProduces" : false,
  "hasParams" : true,
  "subresourceOperation" : true,
  "hasMore" : true,
  "isResponseBinary" : false,
  "path" : "/{realm}/{id}",
  "operationId" : "clientsRealmIdDelete",
  "httpMethod" : "DELETE",
  "summary" : "Delete a client",
  "notes" : "Remove a client completely.\\nDeleted clients won't be able to authenticate anymore.",
  "baseName" : "clients",
  "allParams" : [ {
    "isPathParam" : true,
    "hasMore" : true,
    "baseName" : "realm",
    "paramName" : "realm",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"realm\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isPathParam" : true,
    "secondaryParam" : true,
    "baseName" : "id",
    "paramName" : "id",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"id\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  } ],
  "bodyParams" : [ ],
  "pathParams" : [ {
    "isPathParam" : true,
    "hasMore" : true,
    "baseName" : "realm",
    "paramName" : "realm",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"realm\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isPathParam" : true,
    "secondaryParam" : true,
    "baseName" : "id",
    "paramName" : "id",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"id\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  } ],
  "queryParams" : [ ],
  "headerParams" : [ ],
  "formParams" : [ ],
  "authMethods" : [ {
    "name" : "oauth2",
    "type" : "oauth2",
    "hasMore" : false,
    "isBasic" : false,
    "isOAuth" : true,
    "isApiKey" : false,
    "isKeyInQuery" : false,
    "isKeyInHeader" : false,
    "flow" : "implicit",
    "authorizationUrl" : "none",
    "scopes" : [ {
      "scope" : "uid",
      "hasMore" : null,
      "description" : "user identitiy"
    } ]
  } ],
  "tags" : [ "Clients" ],
  "responses" : [ {
    "headers" : [ ],
    "code" : "200",
    "message" : "Client has been deleted",
    "hasMore" : true,
    "isDefault" : true,
    "simpleType" : true,
    "primitiveType" : true,
    "isMapContainer" : false,
    "isListContainer" : false,
    "isBinary" : false,
    "jsonSchema" : "{\n  \"description\" : \"Client has been deleted\"\n}",
    "wildcard" : false
  }, {
    "headers" : [ ],
    "code" : "400",
    "message" : "Bad request",
    "hasMore" : true,
    "dataType" : "Error",
    "baseType" : "Error",
    "isDefault" : false,
    "simpleType" : true,
    "primitiveType" : false,
    "isBinary" : false,
    "schema" : {
      "$ref" : "#/definitions/Error"
    },
    "jsonSchema" : "{\n  \"description\" : \"Bad request\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Error\"\n  }\n}",
    "wildcard" : false
  }, {
    "headers" : [ ],
    "code" : "401",
    "message" : "Unauthorized request",
    "hasMore" : false,
    "dataType" : "Error",
    "baseType" : "Error",
    "isDefault" : false,
    "simpleType" : true,
    "primitiveType" : false,
    "isBinary" : false,
    "schema" : {
      "$ref" : "#/definitions/Error"
    },
    "jsonSchema" : "{\n  \"description\" : \"Unauthorized request\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Error\"\n  }\n}",
    "wildcard" : false
  } ],
  "imports" : [ "Error" ],
  "vendorExtensions" : { },
  "nickname" : "clientsRealmIdDelete",
  "hasPathParams" : true,
  "hasQueryParams" : false,
  "hasBodyParam" : false,
  "hasHeaderParams" : false,
  "hasFormParams" : false
}
clientsRealmIdPatch
{
  "responseHeaders" : [ ],
  "hasAuthMethods" : true,
  "hasConsumes" : true,
  "hasProduces" : false,
  "hasParams" : true,
  "subresourceOperation" : true,
  "hasMore" : true,
  "isResponseBinary" : false,
  "path" : "/{realm}/{id}",
  "operationId" : "clientsRealmIdPatch",
  "httpMethod" : "PATCH",
  "summary" : "Save client properties",
  "notes" : "Updates the given client properties",
  "baseName" : "clients",
  "consumes" : [ {
    "hasMore" : null,
    "mediaType" : "application/json"
  } ],
  "bodyParam" : {
    "isBodyParam" : true,
    "secondaryParam" : true,
    "baseName" : "client",
    "paramName" : "client",
    "dataType" : "Client",
    "jsonSchema" : "{\n  \"in\" : \"body\",\n  \"name\" : \"client\",\n  \"required\" : true,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Client\"\n  }\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  },
  "allParams" : [ {
    "isPathParam" : true,
    "hasMore" : true,
    "baseName" : "realm",
    "paramName" : "realm",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"realm\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isPathParam" : true,
    "hasMore" : true,
    "secondaryParam" : true,
    "baseName" : "id",
    "paramName" : "id",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"id\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isBodyParam" : true,
    "secondaryParam" : true,
    "baseName" : "client",
    "paramName" : "client",
    "dataType" : "Client",
    "jsonSchema" : "{\n  \"in\" : \"body\",\n  \"name\" : \"client\",\n  \"required\" : true,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Client\"\n  }\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  } ],
  "bodyParams" : [ {
    "isBodyParam" : true,
    "baseName" : "client",
    "paramName" : "client",
    "dataType" : "Client",
    "jsonSchema" : "{\n  \"in\" : \"body\",\n  \"name\" : \"client\",\n  \"required\" : true,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Client\"\n  }\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  } ],
  "pathParams" : [ {
    "isPathParam" : true,
    "hasMore" : true,
    "baseName" : "realm",
    "paramName" : "realm",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"realm\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isPathParam" : true,
    "secondaryParam" : true,
    "baseName" : "id",
    "paramName" : "id",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"id\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  } ],
  "queryParams" : [ ],
  "headerParams" : [ ],
  "formParams" : [ ],
  "authMethods" : [ {
    "name" : "oauth2",
    "type" : "oauth2",
    "hasMore" : false,
    "isBasic" : false,
    "isOAuth" : true,
    "isApiKey" : false,
    "isKeyInQuery" : false,
    "isKeyInHeader" : false,
    "flow" : "implicit",
    "authorizationUrl" : "none",
    "scopes" : [ {
      "scope" : "uid",
      "hasMore" : null,
      "description" : "user identitiy"
    } ]
  } ],
  "tags" : [ "Clients" ],
  "responses" : [ {
    "headers" : [ ],
    "code" : "200",
    "message" : "Client has been updated",
    "hasMore" : true,
    "isDefault" : true,
    "simpleType" : true,
    "primitiveType" : true,
    "isMapContainer" : false,
    "isListContainer" : false,
    "isBinary" : false,
    "jsonSchema" : "{\n  \"description\" : \"Client has been updated\"\n}",
    "wildcard" : false
  }, {
    "headers" : [ ],
    "code" : "400",
    "message" : "Bad request",
    "hasMore" : true,
    "dataType" : "Error",
    "baseType" : "Error",
    "isDefault" : false,
    "simpleType" : true,
    "primitiveType" : false,
    "isBinary" : false,
    "schema" : {
      "$ref" : "#/definitions/Error"
    },
    "jsonSchema" : "{\n  \"description\" : \"Bad request\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Error\"\n  }\n}",
    "wildcard" : false
  }, {
    "headers" : [ ],
    "code" : "401",
    "message" : "Unauthorized request",
    "hasMore" : false,
    "dataType" : "Error",
    "baseType" : "Error",
    "isDefault" : false,
    "simpleType" : true,
    "primitiveType" : false,
    "isBinary" : false,
    "schema" : {
      "$ref" : "#/definitions/Error"
    },
    "jsonSchema" : "{\n  \"description\" : \"Unauthorized request\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Error\"\n  }\n}",
    "wildcard" : false
  } ],
  "imports" : [ "Error", "Client" ],
  "vendorExtensions" : { },
  "nickname" : "clientsRealmIdPatch",
  "hasPathParams" : true,
  "hasQueryParams" : false,
  "hasBodyParam" : true,
  "hasHeaderParams" : false,
  "hasFormParams" : false
}
writing file /tmp/tmp87glktzp/planb-provider/target/generated-sources/swagger-codegen/org/zalando/planb/provider/api/ClientsApi.java
consentsRealmUsernameClientIdGet
{
  "responseHeaders" : [ ],
  "hasAuthMethods" : true,
  "hasConsumes" : false,
  "hasProduces" : false,
  "hasParams" : true,
  "returnSimpleType" : true,
  "subresourceOperation" : true,
  "hasMore" : true,
  "isResponseBinary" : false,
  "path" : "/{realm}/{username}/{client_id}",
  "operationId" : "consentsRealmUsernameClientIdGet",
  "returnType" : "Consent",
  "httpMethod" : "GET",
  "returnBaseType" : "Consent",
  "summary" : "obtain consents",
  "notes" : "Obtain the stored consents for a given realm, user and client id",
  "baseName" : "consents",
  "defaultResponse" : "null",
  "allParams" : [ {
    "isPathParam" : true,
    "hasMore" : true,
    "baseName" : "realm",
    "paramName" : "realm",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"realm\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isPathParam" : true,
    "hasMore" : true,
    "secondaryParam" : true,
    "baseName" : "username",
    "paramName" : "username",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"username\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isPathParam" : true,
    "secondaryParam" : true,
    "baseName" : "client_id",
    "paramName" : "clientId",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"client_id\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  } ],
  "bodyParams" : [ ],
  "pathParams" : [ {
    "isPathParam" : true,
    "hasMore" : true,
    "baseName" : "realm",
    "paramName" : "realm",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"realm\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isPathParam" : true,
    "hasMore" : true,
    "secondaryParam" : true,
    "baseName" : "username",
    "paramName" : "username",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"username\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isPathParam" : true,
    "secondaryParam" : true,
    "baseName" : "client_id",
    "paramName" : "clientId",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"client_id\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  } ],
  "queryParams" : [ ],
  "headerParams" : [ ],
  "formParams" : [ ],
  "authMethods" : [ {
    "name" : "oauth2",
    "type" : "oauth2",
    "hasMore" : false,
    "isBasic" : false,
    "isOAuth" : true,
    "isApiKey" : false,
    "isKeyInQuery" : false,
    "isKeyInHeader" : false,
    "flow" : "implicit",
    "authorizationUrl" : "none",
    "scopes" : [ {
      "scope" : "uid",
      "hasMore" : null,
      "description" : "user identitiy"
    } ]
  } ],
  "tags" : [ "Consents" ],
  "responses" : [ {
    "headers" : [ ],
    "code" : "200",
    "message" : "The stored consent has successfully been obtained",
    "hasMore" : true,
    "dataType" : "Consent",
    "baseType" : "Consent",
    "isDefault" : true,
    "simpleType" : true,
    "primitiveType" : false,
    "isBinary" : false,
    "schema" : {
      "$ref" : "#/definitions/Consent"
    },
    "jsonSchema" : "{\n  \"description\" : \"The stored consent has successfully been obtained\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Consent\"\n  }\n}",
    "wildcard" : false
  }, {
    "headers" : [ ],
    "code" : "400",
    "message" : "Bad request",
    "hasMore" : true,
    "dataType" : "Error",
    "baseType" : "Error",
    "isDefault" : false,
    "simpleType" : true,
    "primitiveType" : false,
    "isBinary" : false,
    "schema" : {
      "$ref" : "#/definitions/Error"
    },
    "jsonSchema" : "{\n  \"description\" : \"Bad request\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Error\"\n  }\n}",
    "wildcard" : false
  }, {
    "headers" : [ ],
    "code" : "401",
    "message" : "Unauthorized request",
    "hasMore" : false,
    "dataType" : "Error",
    "baseType" : "Error",
    "isDefault" : false,
    "simpleType" : true,
    "primitiveType" : false,
    "isBinary" : false,
    "schema" : {
      "$ref" : "#/definitions/Error"
    },
    "jsonSchema" : "{\n  \"description\" : \"Unauthorized request\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Error\"\n  }\n}",
    "wildcard" : false
  } ],
  "imports" : [ "Consent", "Error" ],
  "examples" : [ {
    "contentType" : "application/json",
    "example" : "{\n  \"scopes\" : [ \"aeiou\" ]\n}"
  } ],
  "vendorExtensions" : { },
  "nickname" : "consentsRealmUsernameClientIdGet",
  "hasPathParams" : true,
  "hasQueryParams" : false,
  "hasBodyParam" : false,
  "hasHeaderParams" : false,
  "hasFormParams" : false
}
consentsRealmUsernameClientIdDelete
{
  "responseHeaders" : [ ],
  "hasAuthMethods" : true,
  "hasConsumes" : false,
  "hasProduces" : false,
  "hasParams" : true,
  "subresourceOperation" : true,
  "hasMore" : true,
  "isResponseBinary" : false,
  "path" : "/{realm}/{username}/{client_id}",
  "operationId" : "consentsRealmUsernameClientIdDelete",
  "httpMethod" : "DELETE",
  "summary" : "delete consents",
  "notes" : "Delete consents for a given realm, user and client id",
  "baseName" : "consents",
  "allParams" : [ {
    "isPathParam" : true,
    "hasMore" : true,
    "baseName" : "username",
    "paramName" : "username",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"username\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isPathParam" : true,
    "hasMore" : true,
    "secondaryParam" : true,
    "baseName" : "realm",
    "paramName" : "realm",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"realm\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isPathParam" : true,
    "secondaryParam" : true,
    "baseName" : "client_id",
    "paramName" : "clientId",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"client_id\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  } ],
  "bodyParams" : [ ],
  "pathParams" : [ {
    "isPathParam" : true,
    "hasMore" : true,
    "baseName" : "username",
    "paramName" : "username",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"username\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isPathParam" : true,
    "hasMore" : true,
    "secondaryParam" : true,
    "baseName" : "realm",
    "paramName" : "realm",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"realm\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isPathParam" : true,
    "secondaryParam" : true,
    "baseName" : "client_id",
    "paramName" : "clientId",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"client_id\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  } ],
  "queryParams" : [ ],
  "headerParams" : [ ],
  "formParams" : [ ],
  "authMethods" : [ {
    "name" : "oauth2",
    "type" : "oauth2",
    "hasMore" : false,
    "isBasic" : false,
    "isOAuth" : true,
    "isApiKey" : false,
    "isKeyInQuery" : false,
    "isKeyInHeader" : false,
    "flow" : "implicit",
    "authorizationUrl" : "none",
    "scopes" : [ {
      "scope" : "uid",
      "hasMore" : null,
      "description" : "user identitiy"
    } ]
  } ],
  "tags" : [ "Consents" ],
  "responses" : [ {
    "headers" : [ ],
    "code" : "204",
    "message" : "The consent has successfully been withdrawn",
    "hasMore" : true,
    "isDefault" : true,
    "simpleType" : true,
    "primitiveType" : true,
    "isMapContainer" : false,
    "isListContainer" : false,
    "isBinary" : false,
    "jsonSchema" : "{\n  \"description\" : \"The consent has successfully been withdrawn\"\n}",
    "wildcard" : false
  }, {
    "headers" : [ ],
    "code" : "400",
    "message" : "Bad request",
    "hasMore" : true,
    "dataType" : "Error",
    "baseType" : "Error",
    "isDefault" : false,
    "simpleType" : true,
    "primitiveType" : false,
    "isBinary" : false,
    "schema" : {
      "$ref" : "#/definitions/Error"
    },
    "jsonSchema" : "{\n  \"description\" : \"Bad request\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Error\"\n  }\n}",
    "wildcard" : false
  }, {
    "headers" : [ ],
    "code" : "401",
    "message" : "Unauthorized request",
    "hasMore" : false,
    "dataType" : "Error",
    "baseType" : "Error",
    "isDefault" : false,
    "simpleType" : true,
    "primitiveType" : false,
    "isBinary" : false,
    "schema" : {
      "$ref" : "#/definitions/Error"
    },
    "jsonSchema" : "{\n  \"description\" : \"Unauthorized request\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Error\"\n  }\n}",
    "wildcard" : false
  } ],
  "imports" : [ "Error" ],
  "vendorExtensions" : { },
  "nickname" : "consentsRealmUsernameClientIdDelete",
  "hasPathParams" : true,
  "hasQueryParams" : false,
  "hasBodyParam" : false,
  "hasHeaderParams" : false,
  "hasFormParams" : false
}
writing file /tmp/tmp87glktzp/planb-provider/target/generated-sources/swagger-codegen/org/zalando/planb/provider/api/ConsentsApi.java
usersRealmIdPut
{
  "responseHeaders" : [ ],
  "hasAuthMethods" : true,
  "hasConsumes" : true,
  "hasProduces" : false,
  "hasParams" : true,
  "subresourceOperation" : true,
  "hasMore" : true,
  "isResponseBinary" : false,
  "path" : "/{realm}/{id}",
  "operationId" : "usersRealmIdPut",
  "httpMethod" : "PUT",
  "summary" : "Save user",
  "notes" : "Creates or overrides a user and all of its properties",
  "baseName" : "users",
  "consumes" : [ {
    "hasMore" : null,
    "mediaType" : "application/json"
  } ],
  "bodyParam" : {
    "isBodyParam" : true,
    "secondaryParam" : true,
    "baseName" : "user",
    "paramName" : "user",
    "dataType" : "User",
    "jsonSchema" : "{\n  \"in\" : \"body\",\n  \"name\" : \"user\",\n  \"required\" : true,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/User\"\n  }\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  },
  "allParams" : [ {
    "isPathParam" : true,
    "hasMore" : true,
    "baseName" : "realm",
    "paramName" : "realm",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"realm\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isPathParam" : true,
    "hasMore" : true,
    "secondaryParam" : true,
    "baseName" : "id",
    "paramName" : "id",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"id\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isBodyParam" : true,
    "secondaryParam" : true,
    "baseName" : "user",
    "paramName" : "user",
    "dataType" : "User",
    "jsonSchema" : "{\n  \"in\" : \"body\",\n  \"name\" : \"user\",\n  \"required\" : true,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/User\"\n  }\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  } ],
  "bodyParams" : [ {
    "isBodyParam" : true,
    "baseName" : "user",
    "paramName" : "user",
    "dataType" : "User",
    "jsonSchema" : "{\n  \"in\" : \"body\",\n  \"name\" : \"user\",\n  \"required\" : true,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/User\"\n  }\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  } ],
  "pathParams" : [ {
    "isPathParam" : true,
    "hasMore" : true,
    "baseName" : "realm",
    "paramName" : "realm",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"realm\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isPathParam" : true,
    "secondaryParam" : true,
    "baseName" : "id",
    "paramName" : "id",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"id\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  } ],
  "queryParams" : [ ],
  "headerParams" : [ ],
  "formParams" : [ ],
  "authMethods" : [ {
    "name" : "oauth2",
    "type" : "oauth2",
    "hasMore" : false,
    "isBasic" : false,
    "isOAuth" : true,
    "isApiKey" : false,
    "isKeyInQuery" : false,
    "isKeyInHeader" : false,
    "flow" : "implicit",
    "authorizationUrl" : "none",
    "scopes" : [ {
      "scope" : "uid",
      "hasMore" : null,
      "description" : "user identitiy"
    } ]
  } ],
  "tags" : [ "Users" ],
  "responses" : [ {
    "headers" : [ ],
    "code" : "200",
    "message" : "User has been saved",
    "hasMore" : true,
    "isDefault" : true,
    "simpleType" : true,
    "primitiveType" : true,
    "isMapContainer" : false,
    "isListContainer" : false,
    "isBinary" : false,
    "jsonSchema" : "{\n  \"description\" : \"User has been saved\"\n}",
    "wildcard" : false
  }, {
    "headers" : [ ],
    "code" : "400",
    "message" : "Bad request",
    "hasMore" : true,
    "dataType" : "Error",
    "baseType" : "Error",
    "isDefault" : false,
    "simpleType" : true,
    "primitiveType" : false,
    "isBinary" : false,
    "schema" : {
      "$ref" : "#/definitions/Error"
    },
    "jsonSchema" : "{\n  \"description\" : \"Bad request\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Error\"\n  }\n}",
    "wildcard" : false
  }, {
    "headers" : [ ],
    "code" : "401",
    "message" : "Unauthorized request",
    "hasMore" : false,
    "dataType" : "Error",
    "baseType" : "Error",
    "isDefault" : false,
    "simpleType" : true,
    "primitiveType" : false,
    "isBinary" : false,
    "schema" : {
      "$ref" : "#/definitions/Error"
    },
    "jsonSchema" : "{\n  \"description\" : \"Unauthorized request\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Error\"\n  }\n}",
    "wildcard" : false
  } ],
  "imports" : [ "User", "Error" ],
  "vendorExtensions" : { },
  "nickname" : "usersRealmIdPut",
  "hasPathParams" : true,
  "hasQueryParams" : false,
  "hasBodyParam" : true,
  "hasHeaderParams" : false,
  "hasFormParams" : false
}
usersRealmIdDelete
{
  "responseHeaders" : [ ],
  "hasAuthMethods" : true,
  "hasConsumes" : false,
  "hasProduces" : false,
  "hasParams" : true,
  "subresourceOperation" : true,
  "hasMore" : true,
  "isResponseBinary" : false,
  "path" : "/{realm}/{id}",
  "operationId" : "usersRealmIdDelete",
  "httpMethod" : "DELETE",
  "summary" : "Delete a user",
  "notes" : "Remove a user completely.\\nDeleted users won't be able to authenticate anymore.",
  "baseName" : "users",
  "allParams" : [ {
    "isPathParam" : true,
    "hasMore" : true,
    "baseName" : "realm",
    "paramName" : "realm",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"realm\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isPathParam" : true,
    "secondaryParam" : true,
    "baseName" : "id",
    "paramName" : "id",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"id\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  } ],
  "bodyParams" : [ ],
  "pathParams" : [ {
    "isPathParam" : true,
    "hasMore" : true,
    "baseName" : "realm",
    "paramName" : "realm",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"realm\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isPathParam" : true,
    "secondaryParam" : true,
    "baseName" : "id",
    "paramName" : "id",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"id\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  } ],
  "queryParams" : [ ],
  "headerParams" : [ ],
  "formParams" : [ ],
  "authMethods" : [ {
    "name" : "oauth2",
    "type" : "oauth2",
    "hasMore" : false,
    "isBasic" : false,
    "isOAuth" : true,
    "isApiKey" : false,
    "isKeyInQuery" : false,
    "isKeyInHeader" : false,
    "flow" : "implicit",
    "authorizationUrl" : "none",
    "scopes" : [ {
      "scope" : "uid",
      "hasMore" : null,
      "description" : "user identitiy"
    } ]
  } ],
  "tags" : [ "Users" ],
  "responses" : [ {
    "headers" : [ ],
    "code" : "200",
    "message" : "User has been deleted",
    "hasMore" : true,
    "isDefault" : true,
    "simpleType" : true,
    "primitiveType" : true,
    "isMapContainer" : false,
    "isListContainer" : false,
    "isBinary" : false,
    "jsonSchema" : "{\n  \"description\" : \"User has been deleted\"\n}",
    "wildcard" : false
  }, {
    "headers" : [ ],
    "code" : "400",
    "message" : "Bad request",
    "hasMore" : true,
    "dataType" : "Error",
    "baseType" : "Error",
    "isDefault" : false,
    "simpleType" : true,
    "primitiveType" : false,
    "isBinary" : false,
    "schema" : {
      "$ref" : "#/definitions/Error"
    },
    "jsonSchema" : "{\n  \"description\" : \"Bad request\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Error\"\n  }\n}",
    "wildcard" : false
  }, {
    "headers" : [ ],
    "code" : "401",
    "message" : "Unauthorized request",
    "hasMore" : false,
    "dataType" : "Error",
    "baseType" : "Error",
    "isDefault" : false,
    "simpleType" : true,
    "primitiveType" : false,
    "isBinary" : false,
    "schema" : {
      "$ref" : "#/definitions/Error"
    },
    "jsonSchema" : "{\n  \"description\" : \"Unauthorized request\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Error\"\n  }\n}",
    "wildcard" : false
  } ],
  "imports" : [ "Error" ],
  "vendorExtensions" : { },
  "nickname" : "usersRealmIdDelete",
  "hasPathParams" : true,
  "hasQueryParams" : false,
  "hasBodyParam" : false,
  "hasHeaderParams" : false,
  "hasFormParams" : false
}
usersRealmIdPatch
{
  "responseHeaders" : [ ],
  "hasAuthMethods" : true,
  "hasConsumes" : true,
  "hasProduces" : false,
  "hasParams" : true,
  "subresourceOperation" : true,
  "hasMore" : true,
  "isResponseBinary" : false,
  "path" : "/{realm}/{id}",
  "operationId" : "usersRealmIdPatch",
  "httpMethod" : "PATCH",
  "summary" : "Save user properties",
  "notes" : "Updates the given user properties",
  "baseName" : "users",
  "consumes" : [ {
    "hasMore" : null,
    "mediaType" : "application/json"
  } ],
  "bodyParam" : {
    "isBodyParam" : true,
    "secondaryParam" : true,
    "baseName" : "user",
    "paramName" : "user",
    "dataType" : "User",
    "jsonSchema" : "{\n  \"in\" : \"body\",\n  \"name\" : \"user\",\n  \"required\" : true,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/User\"\n  }\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  },
  "allParams" : [ {
    "isPathParam" : true,
    "hasMore" : true,
    "baseName" : "realm",
    "paramName" : "realm",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"realm\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isPathParam" : true,
    "hasMore" : true,
    "secondaryParam" : true,
    "baseName" : "id",
    "paramName" : "id",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"id\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isBodyParam" : true,
    "secondaryParam" : true,
    "baseName" : "user",
    "paramName" : "user",
    "dataType" : "User",
    "jsonSchema" : "{\n  \"in\" : \"body\",\n  \"name\" : \"user\",\n  \"required\" : true,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/User\"\n  }\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  } ],
  "bodyParams" : [ {
    "isBodyParam" : true,
    "baseName" : "user",
    "paramName" : "user",
    "dataType" : "User",
    "jsonSchema" : "{\n  \"in\" : \"body\",\n  \"name\" : \"user\",\n  \"required\" : true,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/User\"\n  }\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  } ],
  "pathParams" : [ {
    "isPathParam" : true,
    "hasMore" : true,
    "baseName" : "realm",
    "paramName" : "realm",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"realm\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isPathParam" : true,
    "secondaryParam" : true,
    "baseName" : "id",
    "paramName" : "id",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"id\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  } ],
  "queryParams" : [ ],
  "headerParams" : [ ],
  "formParams" : [ ],
  "authMethods" : [ {
    "name" : "oauth2",
    "type" : "oauth2",
    "hasMore" : false,
    "isBasic" : false,
    "isOAuth" : true,
    "isApiKey" : false,
    "isKeyInQuery" : false,
    "isKeyInHeader" : false,
    "flow" : "implicit",
    "authorizationUrl" : "none",
    "scopes" : [ {
      "scope" : "uid",
      "hasMore" : null,
      "description" : "user identitiy"
    } ]
  } ],
  "tags" : [ "Users" ],
  "responses" : [ {
    "headers" : [ ],
    "code" : "200",
    "message" : "User has been updated",
    "hasMore" : true,
    "isDefault" : true,
    "simpleType" : true,
    "primitiveType" : true,
    "isMapContainer" : false,
    "isListContainer" : false,
    "isBinary" : false,
    "jsonSchema" : "{\n  \"description\" : \"User has been updated\"\n}",
    "wildcard" : false
  }, {
    "headers" : [ ],
    "code" : "400",
    "message" : "Bad request",
    "hasMore" : true,
    "dataType" : "Error",
    "baseType" : "Error",
    "isDefault" : false,
    "simpleType" : true,
    "primitiveType" : false,
    "isBinary" : false,
    "schema" : {
      "$ref" : "#/definitions/Error"
    },
    "jsonSchema" : "{\n  \"description\" : \"Bad request\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Error\"\n  }\n}",
    "wildcard" : false
  }, {
    "headers" : [ ],
    "code" : "401",
    "message" : "Unauthorized request",
    "hasMore" : false,
    "dataType" : "Error",
    "baseType" : "Error",
    "isDefault" : false,
    "simpleType" : true,
    "primitiveType" : false,
    "isBinary" : false,
    "schema" : {
      "$ref" : "#/definitions/Error"
    },
    "jsonSchema" : "{\n  \"description\" : \"Unauthorized request\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Error\"\n  }\n}",
    "wildcard" : false
  } ],
  "imports" : [ "User", "Error" ],
  "vendorExtensions" : { },
  "nickname" : "usersRealmIdPatch",
  "hasPathParams" : true,
  "hasQueryParams" : false,
  "hasBodyParam" : true,
  "hasHeaderParams" : false,
  "hasFormParams" : false
}
usersRealmIdPasswordPost
{
  "responseHeaders" : [ ],
  "hasAuthMethods" : true,
  "hasConsumes" : false,
  "hasProduces" : false,
  "hasParams" : true,
  "subresourceOperation" : true,
  "hasMore" : true,
  "isResponseBinary" : false,
  "path" : "/{realm}/{id}/password",
  "operationId" : "usersRealmIdPasswordPost",
  "httpMethod" : "POST",
  "summary" : "add password",
  "notes" : "Add the given password to the list of valid passwords of this user",
  "baseName" : "users",
  "bodyParam" : {
    "isBodyParam" : true,
    "secondaryParam" : true,
    "baseName" : "password",
    "paramName" : "password",
    "dataType" : "Password",
    "jsonSchema" : "{\n  \"in\" : \"body\",\n  \"name\" : \"password\",\n  \"required\" : true,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Password\"\n  }\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  },
  "allParams" : [ {
    "isPathParam" : true,
    "hasMore" : true,
    "baseName" : "realm",
    "paramName" : "realm",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"realm\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isPathParam" : true,
    "hasMore" : true,
    "secondaryParam" : true,
    "baseName" : "id",
    "paramName" : "id",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"id\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isBodyParam" : true,
    "secondaryParam" : true,
    "baseName" : "password",
    "paramName" : "password",
    "dataType" : "Password",
    "jsonSchema" : "{\n  \"in\" : \"body\",\n  \"name\" : \"password\",\n  \"required\" : true,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Password\"\n  }\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  } ],
  "bodyParams" : [ {
    "isBodyParam" : true,
    "baseName" : "password",
    "paramName" : "password",
    "dataType" : "Password",
    "jsonSchema" : "{\n  \"in\" : \"body\",\n  \"name\" : \"password\",\n  \"required\" : true,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Password\"\n  }\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  } ],
  "pathParams" : [ {
    "isPathParam" : true,
    "hasMore" : true,
    "baseName" : "realm",
    "paramName" : "realm",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"realm\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  }, {
    "isPathParam" : true,
    "secondaryParam" : true,
    "baseName" : "id",
    "paramName" : "id",
    "dataType" : "String",
    "jsonSchema" : "{\n  \"name\" : \"id\",\n  \"in\" : \"path\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
    "isEnum" : false,
    "vendorExtensions" : { },
    "required" : true
  } ],
  "queryParams" : [ ],
  "headerParams" : [ ],
  "formParams" : [ ],
  "authMethods" : [ {
    "name" : "oauth2",
    "type" : "oauth2",
    "hasMore" : false,
    "isBasic" : false,
    "isOAuth" : true,
    "isApiKey" : false,
    "isKeyInQuery" : false,
    "isKeyInHeader" : false,
    "flow" : "implicit",
    "authorizationUrl" : "none",
    "scopes" : [ {
      "scope" : "uid",
      "hasMore" : null,
      "description" : "user identitiy"
    } ]
  } ],
  "tags" : [ "Users" ],
  "responses" : [ {
    "headers" : [ ],
    "code" : "201",
    "message" : "The password has successfully been saved",
    "hasMore" : true,
    "isDefault" : true,
    "simpleType" : true,
    "primitiveType" : true,
    "isMapContainer" : false,
    "isListContainer" : false,
    "isBinary" : false,
    "jsonSchema" : "{\n  \"description\" : \"The password has successfully been saved\"\n}",
    "wildcard" : false
  }, {
    "headers" : [ ],
    "code" : "400",
    "message" : "Bad request",
    "hasMore" : true,
    "dataType" : "Error",
    "baseType" : "Error",
    "isDefault" : false,
    "simpleType" : true,
    "primitiveType" : false,
    "isBinary" : false,
    "schema" : {
      "$ref" : "#/definitions/Error"
    },
    "jsonSchema" : "{\n  \"description\" : \"Bad request\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Error\"\n  }\n}",
    "wildcard" : false
  }, {
    "headers" : [ ],
    "code" : "401",
    "message" : "Unauthorized request",
    "hasMore" : false,
    "dataType" : "Error",
    "baseType" : "Error",
    "isDefault" : false,
    "simpleType" : true,
    "primitiveType" : false,
    "isBinary" : false,
    "schema" : {
      "$ref" : "#/definitions/Error"
    },
    "jsonSchema" : "{\n  \"description\" : \"Unauthorized request\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Error\"\n  }\n}",
    "wildcard" : false
  } ],
  "imports" : [ "Error", "Password" ],
  "vendorExtensions" : { },
  "nickname" : "usersRealmIdPasswordPost",
  "hasPathParams" : true,
  "hasQueryParams" : false,
  "hasBodyParam" : true,
  "hasHeaderParams" : false,
  "hasFormParams" : false
}
writing file /tmp/tmp87glktzp/planb-provider/target/generated-sources/swagger-codegen/org/zalando/planb/provider/api/UsersApi.java
[INFO] 8 generated Files
[INFO] Generate .json file from .yaml
[INFO] File written to /tmp/tmp87glktzp/planb-provider/target/classes/plan-b-api.json
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ planb-provider ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 5 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.3:compile (default-compile) @ planb-provider ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 70 source files to /tmp/tmp87glktzp/planb-provider/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ planb-provider ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 15 resources
[INFO] 
[INFO] --- build-helper-maven-plugin:1.8:reserve-network-port (reserve-network-port) @ planb-provider ---
[INFO] Reserved port 39445 for cassandra.rpcPort
[INFO] Reserved port 38563 for cassandra.jmxPort
[INFO] Reserved port 39153 for cassandra.storagePort
[INFO] Reserved port 37673 for cassandra.stopPort
[INFO] Reserved port 33571 for cassandra.nativeTransportPort
[INFO] Reserved port 32815 for wiremock.port
[INFO] 
[INFO] --- maven-compiler-plugin:3.3:testCompile (default-testCompile) @ planb-provider ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 39 source files to /tmp/tmp87glktzp/planb-provider/target/test-classes
[INFO] 
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ planb-provider ---
[INFO] Surefire report directory: /tmp/tmp87glktzp/planb-provider/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.zalando.planb.provider.UserPasswordHashTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.129 sec - in org.zalando.planb.provider.UserPasswordHashTest
Running org.zalando.planb.provider.RealmConfigTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.22 sec - in org.zalando.planb.provider.RealmConfigTest
Running org.zalando.planb.provider.JWTIssuerTest
INFO  [main] o.z.p.p.OIDCKeyHolder - New signing key for new realm myrealm: mykey (RS256)
INFO  [main] o.z.p.p.OIDCKeyHolder - Adding public key mykey.
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.661 sec - in org.zalando.planb.provider.JWTIssuerTest
Running org.zalando.planb.provider.CassandraAuthorizationCodeServiceTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec - in org.zalando.planb.provider.CassandraAuthorizationCodeServiceTest
Running org.zalando.planb.provider.MetricTest
WARN  [main] o.z.p.p.Metric - Unable to submit timer metric 'hello'
java.lang.IllegalStateException: oops
	at org.zalando.planb.provider.Metric.finish(Metric.java:33) [classes/:?]
	at org.zalando.planb.provider.MetricTest.testFailToUpdateTimer(MetricTest.java:61) [test-classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_262]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_262]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_262]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_262]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) [junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) [junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367) [surefire-junit4-2.19.1.jar:2.19.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274) [surefire-junit4-2.19.1.jar:2.19.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238) [surefire-junit4-2.19.1.jar:2.19.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161) [surefire-junit4-2.19.1.jar:2.19.1]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290) [surefire-booter-2.19.1.jar:2.19.1]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242) [surefire-booter-2.19.1.jar:2.19.1]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.1.jar:2.19.1]
WARN  [main] o.z.p.p.Metric - Unable to submit timer metric 'hello'
java.lang.IllegalStateException: oops
	at org.zalando.planb.provider.Metric.finish(Metric.java:32) [classes/:?]
	at org.zalando.planb.provider.MetricTest.testFailToCreateTimer(MetricTest.java:47) [test-classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_262]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_262]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_262]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_262]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) [junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) [junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367) [surefire-junit4-2.19.1.jar:2.19.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274) [surefire-junit4-2.19.1.jar:2.19.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238) [surefire-junit4-2.19.1.jar:2.19.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161) [surefire-junit4-2.19.1.jar:2.19.1]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290) [surefire-booter-2.19.1.jar:2.19.1]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242) [surefire-booter-2.19.1.jar:2.19.1]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.1.jar:2.19.1]
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.197 sec - in org.zalando.planb.provider.MetricTest
Running org.zalando.planb.provider.RequestInfoMDCFilterTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.045 sec - in org.zalando.planb.provider.RequestInfoMDCFilterTest
Running org.zalando.planb.provider.AwsConfigDisabledTest
INFO  [main] o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
INFO  [main] o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.transaction.TransactionalTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [org/springframework/transaction/interceptor/TransactionAttributeSource]
INFO  [main] o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [org/springframework/transaction/interceptor/TransactionAttribute]
INFO  [main] o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@523f3c29, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2fd8b081, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2fe38b73, org.springframework.test.context.support.DirtiesContextTestExecutionListener@511a307e]
INFO  [main] o.m.log - Logging to org.apache.logging.slf4j.Log4jLogger@3df7e309 via org.mortbay.log.Slf4jLog
INFO  [main] o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@4adb2b87: startup date [Thu Jul 30 21:13:52 UTC 2020]; root of context hierarchy
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.18 sec - in org.zalando.planb.provider.AwsConfigDisabledTest
Running org.zalando.planb.provider.OIDCKeyHolderTest
INFO  [main] o.z.p.p.OIDCKeyHolder - New signing key for new realm myrealm: oldkey (RS256)
INFO  [main] o.z.p.p.OIDCKeyHolder - Adding public key oldkey.
INFO  [main] o.z.p.p.OIDCKeyHolder - New signing key for existing realm myrealm: newkey (RS256).
INFO  [main] o.z.p.p.OIDCKeyHolder - Removing public key oldkey.
INFO  [main] o.z.p.p.OIDCKeyHolder - Adding public key newkey.
ERROR [main] o.z.p.p.OIDCKeyHolder - Could not update key list.
java.lang.UnsupportedOperationException: Algorithm not supported for key invalidkey: INVALID-ALG
	at org.zalando.planb.provider.OIDCKeyHolder.loadKeys(OIDCKeyHolder.java:164) ~[classes/:?]
	at org.zalando.planb.provider.OIDCKeyHolder.checkKeys(OIDCKeyHolder.java:88) [classes/:?]
	at org.zalando.planb.provider.OIDCKeyHolder$$EnhancerByMockitoWithCGLIB$$60f7eae8.CGLIB$checkKeys$1(<generated>) [mockito-core-1.10.19.jar:?]
	at org.zalando.planb.provider.OIDCKeyHolder$$EnhancerByMockitoWithCGLIB$$60f7eae8$$FastClassByMockitoWithCGLIB$$f14aec9b.invoke(<generated>) [mockito-core-1.10.19.jar:?]
	at org.mockito.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:216) [mockito-core-1.10.19.jar:?]
	at org.mockito.internal.creation.cglib.DelegatingMockitoMethodProxy.invokeSuper(DelegatingMockitoMethodProxy.java:19) [mockito-core-1.10.19.jar:?]
	at org.mockito.internal.invocation.realmethod.DefaultRealMethod.invoke(DefaultRealMethod.java:21) [mockito-core-1.10.19.jar:?]
	at org.mockito.internal.invocation.realmethod.CleanTraceRealMethod.invoke(CleanTraceRealMethod.java:30) [mockito-core-1.10.19.jar:?]
	at org.mockito.internal.invocation.InvocationImpl.callRealMethod(InvocationImpl.java:112) [mockito-core-1.10.19.jar:?]
	at org.mockito.internal.stubbing.answers.CallsRealMethods.answer(CallsRealMethods.java:41) [mockito-core-1.10.19.jar:?]
	at org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:93) [mockito-core-1.10.19.jar:?]
	at org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29) [mockito-core-1.10.19.jar:?]
	at org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:38) [mockito-core-1.10.19.jar:?]
	at org.mockito.internal.creation.cglib.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:59) [mockito-core-1.10.19.jar:?]
	at org.zalando.planb.provider.OIDCKeyHolder$$EnhancerByMockitoWithCGLIB$$60f7eae8.checkKeys(<generated>) [mockito-core-1.10.19.jar:?]
	at org.zalando.planb.provider.OIDCKeyHolderTest.testInvalidAlgorithm(OIDCKeyHolderTest.java:85) [test-classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_262]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_262]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_262]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_262]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) [junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) [junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) [junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367) [surefire-junit4-2.19.1.jar:2.19.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274) [surefire-junit4-2.19.1.jar:2.19.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238) [surefire-junit4-2.19.1.jar:2.19.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161) [surefire-junit4-2.19.1.jar:2.19.1]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290) [surefire-booter-2.19.1.jar:2.19.1]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242) [surefire-booter-2.19.1.jar:2.19.1]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.1.jar:2.19.1]
INFO  [main] o.z.p.p.OIDCKeyHolder - New signing key for new realm myrealm: newkey (RS256)
INFO  [main] o.z.p.p.OIDCKeyHolder - Adding public key futurekey.
INFO  [main] o.z.p.p.OIDCKeyHolder - Adding public key oldkey.
INFO  [main] o.z.p.p.OIDCKeyHolder - Adding public key newkey.
INFO  [main] o.z.p.p.OIDCKeyHolder - Adding public key otherkey.
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.027 sec - in org.zalando.planb.provider.OIDCKeyHolderTest
Running org.zalando.planb.provider.AwsConfigTest
INFO  [main] o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
INFO  [main] o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.transaction.TransactionalTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [org/springframework/transaction/interceptor/TransactionAttributeSource]
INFO  [main] o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [org/springframework/transaction/interceptor/TransactionAttribute]
INFO  [main] o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@248f1090, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5eb20abb, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7514e658, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2762e667]
INFO  [main] o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@24d18d17: startup date [Thu Jul 30 21:13:53 UTC 2020]; root of context hierarchy
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.318 sec - in org.zalando.planb.provider.AwsConfigTest
Running org.zalando.planb.provider.OIDCControllerTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.021 sec - in org.zalando.planb.provider.OIDCControllerTest
Running org.zalando.planb.provider.ScopePropertiesTest
INFO  [main] o.s.t.c.s.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
INFO  [main] o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.transaction.TransactionalTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [org/springframework/transaction/interceptor/TransactionAttributeSource]
INFO  [main] o.s.t.c.s.DefaultTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [org/springframework/transaction/interceptor/TransactionAttribute]
INFO  [main] o.s.t.c.s.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@253e74c2, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6c76e4dc, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@56743526, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1d3f9494]
INFO  [main] o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@4bf16b95: startup date [Thu Jul 30 21:13:53 UTC 2020]; root of context hierarchy
INFO  [main] o.h.v.i.u.Version - HV000001: Hibernate Validator 5.2.4.Final
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.45 sec - in org.zalando.planb.provider.ScopePropertiesTest
Running org.zalando.planb.provider.GeneratedCodeTest
class User {  passwordHashes: [one, two]  scopes: ScOPE}
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec - in org.zalando.planb.provider.GeneratedCodeTest
Running org.zalando.planb.provider.realms.UpstreamUserRealmTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.112 sec - in org.zalando.planb.provider.realms.UpstreamUserRealmTest
Running org.zalando.planb.provider.realms.CustomerUserRealmTest
fo***de (0e37cadb)
fo***de (0e37cadb)
x@***ld (41648a28)

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec - in org.zalando.planb.provider.realms.CustomerUserRealmTest
Running org.zalando.planb.provider.realms.RealmTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 sec - in org.zalando.planb.provider.realms.RealmTest
INFO  [Thread-5] o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@4adb2b87: startup date [Thu Jul 30 21:13:52 UTC 2020]; root of context hierarchy
INFO  [Thread-9] o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@4bf16b95: startup date [Thu Jul 30 21:13:53 UTC 2020]; root of context hierarchy
INFO  [Thread-8] o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@24d18d17: startup date [Thu Jul 30 21:13:53 UTC 2020]; root of context hierarchy

Results :

Tests run: 40, Failures: 0, Errors: 0, Skipped: 0

[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.5:report (report) @ planb-provider ---
[INFO] Loading execution data file /tmp/tmp87glktzp/planb-provider/target/jacoco.exec
[INFO] Analyzed bundle 'Plan B OpenID Connect Provider' with 996 classes
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  54.299 s
[INFO] Finished at: 2020-07-30T21:13:56Z
[INFO] ------------------------------------------------------------------------
