<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>9</version>
	</parent>
	<groupId>org.biojava</groupId>
	<artifactId>biojava-spark</artifactId>
	<version>0.1.2-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>mmtf-spark</name>
	<url>http://maven.apache.org</url>

	<description>Biojava Spark is a series of libraries and functions for using Spark with Biojava.
    </description>
	<organization>
		<name>Biojava</name>
		<url>http://biojava.org/</url>
	</organization>
	<licenses>
		<license>
			<name>Apache 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0</url>
			<distribution>repo</distribution>
		</license>
	</licenses>



	<properties>

		<jdk.version>1.8</jdk.version>

		<!-- maven-compiler-plugin configuration -->
		<maven.compiler.source>${jdk.version}</maven.compiler.source>
		<maven.compiler.target>${jdk.version}</maven.compiler.target>

		<!-- sets the default encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.targetEncoding>UTF-8</project.build.targetEncoding>

		<scala.version>2.11</scala.version>
		<slf4j.version>1.7.20</slf4j.version>
		<log4j.version>2.5</log4j.version>
		<biojava.version>5.0.0-SNAPSHOT</biojava.version>
		<mmtf.version>0.2.1</mmtf.version>
		<mmtf-spark.version>0.0.4</mmtf-spark.version>
		<additionalparam>-Xdoclint:none</additionalparam>
	</properties>

	<scm>
		<connection>scm:git:git://github.com:biojava/biojava-spark.git</connection>
		<developerConnection>scm:git:git@github.com:biojava/biojava-spark.git</developerConnection>
		<url>https://github.com/biojava/biojava-spark</url>
		<tag>biojava-spark-0.1.0</tag>
	</scm>

	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<!-- binding for log4j 2 -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j.version}</version>
			<!-- runtime scope includes the test scope as well -->
			<scope>runtime</scope>
		</dependency>
		<!-- Log4j API and Core implementation required for binding -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
			<!-- runtime scope includes the test scope as well -->
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
			<!-- runtime scope includes the test scope as well -->
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>net.sourceforge.argparse4j</groupId>
			<artifactId>argparse4j</artifactId>
			<version>0.7.0</version>
		</dependency>
		<!-- for CSV support -->
		<dependency>

			<groupId>com.databricks</groupId>
			<artifactId>spark-csv_${scala.version}</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.biojava</groupId>
			<artifactId>biojava-structure</artifactId>
			<version>${biojava.version}</version>

		</dependency>
		<dependency>
			<groupId>org.rcsb</groupId>
			<artifactId>mmtf-spark</artifactId>
			<version>${mmtf-spark.version}</version>
		</dependency>
		<dependency>
			<groupId>org.rcsb</groupId>
			<artifactId>mmtf-codec</artifactId>
			<version>${mmtf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.rcsb</groupId>
			<artifactId>mmtf-api</artifactId>
			<version>${mmtf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jgrapht</groupId>
			<artifactId>jgrapht-core</artifactId>
			<version>0.9.2</version>
		</dependency>
		<dependency>
		<groupId>org.jgrapht</groupId>
		<artifactId>jgrapht-ext</artifactId>
		<version>0.9.2</version>

		</dependency>
	</dependencies>


	<build>
		<pluginManagement>


			<plugins>
				<plugin>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.10</version>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.6</version>
				</plugin>
				<plugin>
					<artifactId>maven-scm-plugin</artifactId>
					<version>1.9.4</version>
				</plugin>
				<plugin>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.19.1</version>
				</plugin>
				<plugin>
					<groupId>net.sf</groupId>
					<artifactId>stat-scm</artifactId>
					<version>1.2.0</version>
				</plugin>
				<plugin>
					<groupId>org.jvnet.jaxb2.maven2</groupId>
					<artifactId>maven-jaxb2-plugin</artifactId>
					<version>0.13.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.3</version>
					<configuration>
						<remoteTagging>true</remoteTagging>
						<preparationGoals>clean install</preparationGoals>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<!-- work around for GPG hanging issue http://jira.codehaus.org/browse/MGPG-9 -->
						<mavenExecutorId>forked-path</mavenExecutorId>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.3</version>
					<configuration>
						<source>${jdk.version}</source>
						<target>${jdk.version}</target>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.4.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<shadedClassifierName>allinone</shadedClassifierName>
							<artifactSet>
								<includes>
									<include>*:*</include>
								</includes>
							</artifactSet>
							<transformers>
								<transformer
										implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>reference.conf</resource>
								</transformer>
								<transformer
										implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>akka.Main</Main-Class>
									</manifestEntries>
								</transformer>
							</transformers>
							<filters>
								<filter>
									<!-- solution to the signature repackaging problem is this filter:
										exclude the signatures! -->
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<finalName>uber-${project.artifactId}-${project.version}</finalName>
				</configuration>
			</plugin>
			<!-- for deployment on OSS Sonatype -->
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.7</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>
		</plugins>
	</build>


</project>
