<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>id.au.ringerc</groupId>
  <artifactId>as7-eclipselink-integration</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>as7.eclipselink</name>
  <url>http://maven.apache.org</url>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <eclipselink.version.2.3.stable>2.3.2</eclipselink.version.2.3.stable>
    <eclipselink.version.2.3.milestone>2.3.3-M3</eclipselink.version.2.3.milestone>
    <eclipselink.version.2.4.milestone>2.4.0-RC2</eclipselink.version.2.4.milestone>
  </properties>
  <repositories>
    <repository>
      <id>eclipselink</id>
      <url>http://www.eclipse.org/downloads/download.php?r=1&amp;nf=1&amp;file=/rt/eclipselink/maven.repo</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jboss.arquillian</groupId>
        <artifactId>arquillian-bom</artifactId>
        <version>1.0.0.Final</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.eclipse.persistence</groupId>
      <artifactId>eclipselink</artifactId>
      <version>${eclipselink.version.2.4.milestone}</version>
      <scope>provided</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.eclipse.persistence</groupId>
      <artifactId>javax.persistence</artifactId>
      <version>2.0.3</version>
      <scope>provided</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
        <groupId>org.jboss.logging</groupId>
        <artifactId>jboss-logging</artifactId>
        <version>3.1.1.GA</version>
        <scope>provided</scope>
        <optional>true</optional>
    </dependency>
    <dependency>
    	<groupId>org.jboss</groupId>
    	<artifactId>jboss-vfs</artifactId>
    	<version>3.1.0.Final</version>
    	<scope>provided</scope>
    	<optional>true</optional>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-surefire-plugin</artifactId>
		<version>2.12</version>
		<configuration>
		  <!-- 
		      Some of our tests require system properties to be set, so we don't want
		      to fail the build when the tests fail.
		   -->
		  <testFailureIgnore>true</testFailureIgnore>
		</configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>

    <!-- 
             Profile that adds the JBoss AS 7 managed Arquillian container adapter
             to the runtime classpath so Arquillian can test against JBoss AS 7.
             
             This profile retains the test beans.xml and persistence.xml .
             
             TODO: Should check out Arquillian Drone to remote control the webui
             for functional testing.
        -->
    <profile>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>profile.default</name>
        </property>
      </activation>
      <id>jboss7-arq-remote</id>
      <dependencies>
        <dependency>
          <groupId>org.jboss.as</groupId>
          <artifactId>jboss-as-arquillian-container-remote</artifactId>
          <version>7.1.1.Final</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <!-- 
            Provide the Java EE APIs using JBoss's jboss-javaee-6.0 spec artifacts
         -->
    <profile>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>profile.default</name>
        </property>
      </activation>
      <id>jboss-javaee-dependencies</id>
      <dependencyManagement>
        <dependencies>
          <!-- Use the JBoss JavaEE artifacts instead of the javax ones; see below -->
          <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-6.0</artifactId>
            <type>pom</type>
            <version>3.0.0.Final</version>
            <scope>import</scope>
          </dependency>
        </dependencies>
      </dependencyManagement>
      <dependencies>
        <!-- Use the JBoss java EE API packaging instead of
             javax:javaee-api because the latter is a screwed up jar
             with stripped-out methods that breaks with "absent code" errors
             in exciting ways during certain uses. -->
        <!-- We shouldn't really pull in the whole spec, only the bits we use, so
             specify the APIs we use or expect to use explicitly -->
        <dependency>
          <groupId>org.jboss.spec.javax.ejb</groupId>
          <artifactId>jboss-ejb-api_3.1_spec</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.spec.javax.transaction</groupId>
          <artifactId>jboss-transaction-api_1.1_spec</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>javax.enterprise</groupId>
          <artifactId>cdi-api</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>javax.inject</groupId>
          <artifactId>javax.inject</artifactId>
          <scope>provided</scope>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
