<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.lightbend</groupId>
    <artifactId>drone-tracker</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>play2</packaging>
    <properties>
        <config.file>conf/application-dronetracker-dev.conf</config.file>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <play2.version>2.6.18</play2.version>
        <akka.version>2.5.15</akka.version>
        
        <akka.management.version>0.18.0</akka.management.version>
        <akka.http.version>10.0.13</akka.http.version>
        <cinnamon.version>2.10.4</cinnamon.version>
        <akka.sbr.version>1.1.2</akka.sbr.version>

        <!-- Keep the two variables below in sync -->
        <scala.bin.version>2.12</scala.bin.version>
        <scala.version>2.12.6</scala.version>

        <jar.plugin.version>2.6</jar.plugin.version>

    </properties>

    <name>Drone Tracker</name>

    <repositories>
        <repository>
            <id>lightbend-commercial</id>
            <name>Lightbend Commercial</name>
            <url>https://lightbend.bintray.com/commercial-releases</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>

        <!-- ############################################################################# -->
        <!-- play framework dependencies -->
        <dependency>
            <groupId>com.typesafe.play</groupId>
            <artifactId>play_${scala.bin.version}</artifactId>
            <version>${play2.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.play</groupId>
            <artifactId>play-ws_${scala.bin.version}</artifactId>
            <version>${play2.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.play</groupId>
            <artifactId>play-guice_${scala.bin.version}</artifactId>
            <version>${play2.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.play</groupId>
            <artifactId>play-test_${scala.bin.version}</artifactId>
            <version>${play2.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- default SLF4J logging implementation, can be replaced by other -->
        <!-- see https://www.playframework.com/documentation/2.6.x/SettingsLogger for more info -->
        <dependency>
            <groupId>com.typesafe.play</groupId>
            <artifactId>play-logback_${scala.bin.version}</artifactId>
            <version>${play2.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- required for: "run", "start" and "dist" -->
        <dependency>
            <groupId>com.typesafe.play</groupId>
            <artifactId>play-akka-http-server_${scala.bin.version}</artifactId>
            <version>${play2.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- only if using Java -->
        <dependency>
            <groupId>com.typesafe.play</groupId>
            <artifactId>play-java_${scala.bin.version}</artifactId>
            <version>${play2.version}</version>
        </dependency>
        <!-- junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <!-- ############################################################################# -->
        <!-- Akka dependencies -->
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-actor_${scala.bin.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-stream_${scala.bin.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-cluster_${scala.bin.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-cluster-sharding_${scala.bin.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>
        <dependency>
            <groupId>com.lightbend.akka.management</groupId>
            <artifactId>akka-management-cluster-bootstrap_${scala.bin.version}</artifactId>
            <version>${akka.management.version}</version>
        </dependency>
        <dependency>
            <groupId>com.lightbend.akka.discovery</groupId>
            <artifactId>akka-discovery-kubernetes-api_${scala.bin.version}</artifactId>
            <version>${akka.management.version}</version>
        </dependency>
        <dependency>
            <groupId>com.lightbend.akka.discovery</groupId>
            <artifactId>akka-discovery-dns_${scala.bin.version}</artifactId>
            <version>${akka.management.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-http_${scala.bin.version}</artifactId>
            <version>${akka.http.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-http-spray-json_${scala.bin.version}</artifactId>
            <version>${akka.http.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-http-jackson_${scala.bin.version}</artifactId>
            <version>${akka.http.version}</version>
        </dependency>

        <!-- ############################################################################# -->
        <!-- Lightbend Commercial Dependencies -->
        <dependency>
            <groupId>com.lightbend.cinnamon</groupId>
            <artifactId>cinnamon-akka-http_${scala.bin.version}</artifactId>
            <version>${cinnamon.version}</version>
        </dependency>
        <dependency>
            <groupId>com.lightbend.cinnamon</groupId>
            <artifactId>cinnamon-akka-stream_${scala.bin.version}</artifactId>
            <version>${cinnamon.version}</version>
        </dependency>
        <dependency>
            <groupId>com.lightbend.cinnamon</groupId>
            <artifactId>cinnamon-prometheus-httpserver_${scala.bin.version}</artifactId>
            <version>${cinnamon.version}</version>
        </dependency>
        <dependency>
            <groupId>com.lightbend.akka</groupId>
            <artifactId>akka-split-brain-resolver_${scala.bin.version}</artifactId>
            <version>${akka.sbr.version}</version>
        </dependency>

        <!-- ############################################################################# -->
        <!-- other application dependencies -->
        <dependency>
            <groupId>net.sf.geographiclib</groupId>
            <artifactId>GeographicLib-Java</artifactId>
            <version>1.49</version>
        </dependency>
        <dependency>
            <groupId>dnsjava</groupId>
            <artifactId>dnsjava</artifactId>
            <version>2.1.8</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
            <version>2.8.11</version>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>${project.basedir}/app</sourceDirectory>
        <testSourceDirectory>${project.basedir}/test</testSourceDirectory>
        <resources>
            <resource>
                <directory>${project.basedir}/conf</directory>
            </resource>
            <resource>
                <directory>${project.basedir}/public</directory>
                <targetPath>public</targetPath>
            </resource>
        </resources>

        <plugins>
            <!-- for building play application -->
            <plugin>
                <groupId>com.google.code.play2-maven-plugin</groupId>
                <artifactId>play2-maven-plugin</artifactId>
                <version>1.0.0-rc3</version>
                <extensions>true</extensions>
                <configuration>
                    <!-- if using controllers without dependency injection; default value is "injected"
                    <routesGenerator>static</routesGenerator> -->
                    <mainLang>java</mainLang>
                </configuration>
            </plugin>

            <!-- use assembly plugin to package application for more flexibility -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptor>assembly/bin.xml</descriptor>
                    <!--<finalName>apache-maven-cookbook-${pom.version}</finalName>-->
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.google.code.sbt-compiler-maven-plugin</groupId>
                <artifactId>sbt-compiler-maven-plugin</artifactId>
                <version>1.0.0</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${jar.plugin.version}</version>

                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!-- install cinnamon agent for application startup -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.lightbend.cinnamon</groupId>
                                    <artifactId>cinnamon-agent</artifactId>
                                    <version>${cinnamon.version}</version>
                                    <overWrite>true</overWrite>
                                    <destFileName>cinnamon-agent.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.scala-tools</groupId>
                <artifactId>maven-scala-plugin</artifactId>
                <version>2.15.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <jvmArgs>
                        <jvmArg>-Xms64m</jvmArg>
                        <jvmArg>-Xmx1024m</jvmArg>
                    </jvmArgs>
                </configuration>
            </plugin>

            <!-- local process execution -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <configuration>
                    <executable>java</executable>
                    <arguments>
                        <argument>-javaagent:${project.build.directory}/dependency/cinnamon-agent.jar</argument>
                        <argument>-classpath</argument>
                        <classpath />
                        <argument>-Dplay.http.secret.key=x</argument>
                        <argument>-Dconfig.file=${config.file}</argument>
                        <argument>play.core.server.ProdServerStart</argument>
                    </arguments>
                </configuration>
            </plugin>

            <!-- docker image build -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.26.0</version>
                <configuration>
                    <images>
                        <image>
                            <name>%g/%a:%l</name>
                            <alias>${project.artifactId}</alias>

                            <build>
                                <from>openjdk:8</from>
                                <assembly>
                                    <descriptor>${project.basedir}/assembly/bin.xml</descriptor>
                                </assembly>
                                <env>
                                    <PLAY_SECRET>x</PLAY_SECRET>
                                </env>
                                <ports>
                                    <port>9000/tcp</port>
                                    <port>9001/tcp</port>
                                </ports>
                                <cmd>sh /maven/bin/start -Dplay.http.secret.key=$PLAY_SECRET -Dconfig.resource=$CONFIG_RESOURCE</cmd>
                                <runCmds>
                                    <runcmd>chmod -R 777 /maven</runcmd>
                                </runCmds>
                            </build>
                            <run>
                                <env>
                                    <PLAY_SECRET>x</PLAY_SECRET>
                                </env>
                                <ports>
                                    <port>9000:9000</port>
                                    <port>9001:9001</port>
                                </ports>
                                <cmd>sh /maven/bin/start -Dplay.http.secret.key=$PLAY_SECRET -Dconfig.resource=$CONFIG_RESOURCE</cmd>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>

