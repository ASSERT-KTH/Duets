<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>es.cgalesanco</groupId>
  <artifactId>olap4j-js</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>Olap4j Javascript front end</name>
  <repositories>
    <repository>
      <id>pentaho</id>
      <url>http://repository.pentaho.org/artifactory/pentaho/</url>
      <name>Pentaho Repository</name>
    </repository>
    <repository>
      <id>pentaho-thirdparty</id>
      <url>http://repository.pentaho.org/artifactory/third-party/</url>
      <name>Pentaho Third Party Repository</name>
    </repository>
  </repositories>

  <properties>
    <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>cgalesanco</groupId>
      <artifactId>olap4j-query</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.olap4j</groupId>
      <artifactId>olap4j</artifactId>
      <version>1.1.0</version>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-core-asl</artifactId>
      <version>1.8.9</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.4</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>mondrian</artifactId>
      <version>3.5.0</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derby</artifactId>
      <version>10.9.1.0</version>
      <scope>runtime</scope>
    </dependency>
  </dependencies>
  <build>
    <finalName>Olap4j</finalName>

    <plugins>
      <!-- Jasmine Plugin ===============================================
     - Configured to run Javascript unit tests
     -  mvn jasmine:bdd
     -   starts a web server on port 8234 to let you run the Specs
     - TODO: Configure to include files in webapp/js/lib, so we can separate third party javascript libraries
     - ===============================================================-->
      <plugin>
        <groupId>com.github.searls</groupId>
        <artifactId>jasmine-maven-plugin</artifactId>
        <version>1.3.1.1-SNAPSHOT</version>
        <executions>
          <execution>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <srcDirectoryName>js</srcDirectoryName>
          <libDirectoryName>js/lib</libDirectoryName>
          <jsSrcDir>src/main/js</jsSrcDir>
          <jsTestSrcDir>src/test/js</jsTestSrcDir>
          <jsLibSrcDir>src/main/webapp/js/lib</jsLibSrcDir>
          <specRunnerTemplate>REQUIRE_JS</specRunnerTemplate>
          <preloadSources>
            <source>js/lib/require.js</source>
          </preloadSources>
          <!-- RequireJS configuration used to run the tests -->
          <customRunnerConfiguration>${basedir}/src/main/js/require-config.js
          </customRunnerConfiguration>
        </configuration>
      </plugin>

      <!-- WAR Plugin ==============================================
     - Configured to copy the Javascript in'src/main/javascript'
     - into the 'js' webapp directory.
     - ==========================================================-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.3</version>
        <configuration>
          <webResources>
            <resource>
              <directory>src/main/js</directory>
              <targetPath>js</targetPath>
              <filtering>false</filtering>
              <!-- Javascript is NOT filtered -->
            </resource>
          </webResources>
        </configuration>
      </plugin>

      <!-- JSLint Plugin =============================================
      - Javascript code style checking
      - ============================================================-->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jslint-maven-plugin</artifactId>
        <version>1.0.1</version>
        <configuration>
          <excludes>
            <exclude>require-config.js</exclude>  <!-- Excludes RequireJS config for Jasmine -->
            <exclude>lib/**/*</exclude>           <!-- Excludes third party libraries -->
          </excludes>
        </configuration>
      </plugin>

      <!-- Jetty Plugin =============================================
     - Configured to test run the web app
     - TODO: Fix config to include javascript source directories for the jetty:run and jetty:start goals
     - ===========================================================-->
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>8.1.8.v20121106</version>
        <configuration>
          <connectors>
            <!-- work around file locking on windows -->
            <connector implementation="org.eclipse.jetty.server.bio.SocketConnector">
              <port>8080</port>
              <!-- this connector defaults to 1300 for some reason -->
            </connector>
          </connectors>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
