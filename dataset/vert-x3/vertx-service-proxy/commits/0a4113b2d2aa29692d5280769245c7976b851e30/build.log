[INFO] Error stacktraces are turned on.
[INFO] Scanning for projects...
[INFO] 
[INFO] --------------------< io.vertx:vertx-service-proxy >--------------------
[INFO] Building vertx-service-proxy 4.0.0-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-enforcer-plugin:1.0:enforce (enforce-maven) @ vertx-service-proxy ---
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.5:prepare-agent (default) @ vertx-service-proxy ---
[INFO] argLine set to -javaagent:/home/jdbl/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/tmp/tmpylvm_imx/vertx-service-proxy/target/jacoco.exec
[INFO] 
[INFO] --- maven-resources-plugin:2.7:resources (default-resources) @ vertx-service-proxy ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 10 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ vertx-service-proxy ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 23 source files to /tmp/tmpylvm_imx/vertx-service-proxy/target/classes
[INFO] /tmp/tmpylvm_imx/vertx-service-proxy/src/main/java/io/vertx/serviceproxy/ServiceProxyBuilder.java: /tmp/tmpylvm_imx/vertx-service-proxy/src/main/java/io/vertx/serviceproxy/ServiceProxyBuilder.java uses unchecked or unsafe operations.
[INFO] /tmp/tmpylvm_imx/vertx-service-proxy/src/main/java/io/vertx/serviceproxy/ServiceProxyBuilder.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-processor-plugin:3.1.0:process (generate-sources) @ vertx-service-proxy ---
[INFO] diagnostic: Note: Loaded service_proxy_handler code generator
[INFO] diagnostic: Note: Loaded service_proxy code generator
[INFO] diagnostic: Note: Loaded cheatsheet code generator
[INFO] diagnostic: Note: Loaded cheatsheet code generator
[INFO] diagnostic: Note: Loaded data_object_converters code generator
[INFO] diagnostic: Note: Non future method examples.SomeDatabaseService: void save(java.lang.String collection, io.vertx.core.json.JsonObject document, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>> result)
[INFO] diagnostic: Note: Non future method examples.SomeDatabaseService: examples.SomeDatabaseService foo(java.lang.String collection, io.vertx.core.json.JsonObject document, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>> result)
[INFO] diagnostic: Note: Generated model examples.SomeDatabaseService: examples.SomeDatabaseServiceVertxProxyHandler
[INFO] diagnostic: Note: Generated model examples.SomeDatabaseService: examples.SomeDatabaseServiceVertxEBProxy
[WARNING] diagnostic: warning: Unclosed files for the types '[PathForCodeGenProcessor]'; these types will not undergo annotation processing
[WARNING] diagnostic: warning: The following options were not recognized by any processor: '[maven.artifactId, maven.version, maven.groupId]'
[INFO] 
[INFO] --- maven-processor-plugin:3.1.0:process-test (generate-test-sources) @ vertx-service-proxy ---
WARNING: io.vertx.codegen.CodeGen - Processed element io.vertx.serviceproxy.testmodel.impl.TestServiceImpl is in an implementation package 
WARNING: io.vertx.codegen.CodeGen - Processed element io.vertx.serviceproxy.testmodel.impl.TestConnectionImpl is in an implementation package 
[INFO] diagnostic: Note: Loaded service_proxy_handler code generator
[INFO] diagnostic: Note: Loaded service_proxy code generator
[INFO] diagnostic: Note: Loaded cheatsheet code generator
[INFO] diagnostic: Note: Loaded cheatsheet code generator
[INFO] diagnostic: Note: Loaded data_object_converters code generator
[INFO] diagnostic: Note: Loaded json-mappers.properties file:/tmp/tmpylvm_imx/vertx-service-proxy/src/test/resources/META-INF/vertx/json-mappers.properties
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void longDeliverySuccess(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.String>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void longDeliveryFailed(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.String>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void createConnection(java.lang.String str, io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.serviceproxy.testmodel.TestConnection>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void enumTypeAsResult(io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.serviceproxy.testmodel.SomeEnum>> someEnum)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void enumTypeAsResultNull(io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.serviceproxy.testmodel.SomeEnum>> someEnum)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void stringHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.String>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void stringNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.String>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void byteHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Byte>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void byteNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Byte>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void shortHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Short>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void shortNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Short>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void intHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Integer>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void intNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Integer>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void longHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Long>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void longNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Long>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void floatHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Float>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void floatNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Float>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void doubleHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Double>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void doubleNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Double>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void charHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Character>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void charNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Character>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void booleanHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Boolean>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void booleanNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Boolean>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void jsonObjectHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.core.json.JsonObject>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void jsonObjectNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.core.json.JsonObject>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void jsonArrayHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.core.json.JsonArray>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void jsonArrayNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.core.json.JsonArray>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void dataObjectHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.serviceproxy.testmodel.TestDataObject>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void dataObjectNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.serviceproxy.testmodel.TestDataObject>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void voidHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: io.vertx.serviceproxy.testmodel.TestService fluentMethod(java.lang.String str, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.String>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void failingMethod(io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.core.json.JsonObject>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void invokeWithMessage(io.vertx.core.json.JsonObject object, java.lang.String str, int i, char chr, io.vertx.serviceproxy.testmodel.SomeEnum senum, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.String>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listStringHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<java.lang.String>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listByteHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<java.lang.Byte>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listShortHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<java.lang.Short>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listIntHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<java.lang.Integer>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listLongHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<java.lang.Long>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listFloatHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<java.lang.Float>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listDoubleHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<java.lang.Double>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listCharHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<java.lang.Character>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listBoolHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<java.lang.Boolean>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listJsonObjectHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<io.vertx.core.json.JsonObject>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listJsonArrayHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<io.vertx.core.json.JsonArray>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listDataObjectHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<io.vertx.serviceproxy.testmodel.TestDataObject>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setStringHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<java.lang.String>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setByteHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<java.lang.Byte>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setShortHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<java.lang.Short>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setIntHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<java.lang.Integer>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setLongHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<java.lang.Long>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setFloatHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<java.lang.Float>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setDoubleHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<java.lang.Double>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setCharHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<java.lang.Character>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setBoolHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<java.lang.Boolean>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapStringHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,java.lang.String>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapByteHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,java.lang.Byte>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapShortHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,java.lang.Short>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapIntHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,java.lang.Integer>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapLongHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,java.lang.Long>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapFloatHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,java.lang.Float>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapDoubleHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,java.lang.Double>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapCharHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,java.lang.Character>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapBoolHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,java.lang.Boolean>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setJsonObjectHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<io.vertx.core.json.JsonObject>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapJsonObjectHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,io.vertx.core.json.JsonObject>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setJsonArrayHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<io.vertx.core.json.JsonArray>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapJsonArrayHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,io.vertx.core.json.JsonArray>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setDataObjectHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<io.vertx.serviceproxy.testmodel.TestDataObject>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapDataObject(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,io.vertx.serviceproxy.testmodel.TestDataObject>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void failingCall(java.lang.String value, io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.core.json.JsonObject>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listDataObjectContainingNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<io.vertx.serviceproxy.testmodel.TestDataObject>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setDataObjectContainingNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<io.vertx.serviceproxy.testmodel.TestDataObject>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void zonedDateTimeHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.time.ZonedDateTime>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listZonedDateTimeHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<java.time.ZonedDateTime>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setZonedDateTimeHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<java.time.ZonedDateTime>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapZonedDateTimeHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,java.time.ZonedDateTime>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service hello(java.lang.String name, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.String>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service methodUsingEnum(io.vertx.serviceproxy.testmodel.SomeEnum e, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Boolean>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service methodReturningEnum(io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.serviceproxy.testmodel.SomeEnum>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service methodReturningVertxEnum(io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.serviceproxy.testmodel.SomeVertxEnum>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service methodWithJsonObject(io.vertx.core.json.JsonObject json, io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.core.json.JsonObject>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service methodWithJsonArray(io.vertx.core.json.JsonArray json, io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.core.json.JsonArray>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service methodWithList(java.util.List<java.lang.String> list, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<java.lang.String>>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service methodWithDataObject(io.vertx.serviceproxy.testmodel.TestDataObject data, io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.serviceproxy.testmodel.TestDataObject>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service methodWithListOfDataObject(java.util.List<io.vertx.serviceproxy.testmodel.TestDataObject> list, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<io.vertx.serviceproxy.testmodel.TestDataObject>>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service methodWithStringDataObject(io.vertx.serviceproxy.testmodel.StringDataObject data, io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.serviceproxy.testmodel.StringDataObject>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service methodWithListOfStringDataObject(java.util.List<io.vertx.serviceproxy.testmodel.StringDataObject> list, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<io.vertx.serviceproxy.testmodel.StringDataObject>>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service methodWithListOfJsonObject(java.util.List<io.vertx.core.json.JsonObject> list, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<io.vertx.core.json.JsonObject>>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service methodWthFailingResult(java.lang.String input, io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.core.json.JsonObject>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestConnection: io.vertx.serviceproxy.testmodel.TestConnection startTransaction(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.String>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestConnection: io.vertx.serviceproxy.testmodel.TestConnection insert(java.lang.String name, io.vertx.core.json.JsonObject data, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.String>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestConnection: io.vertx.serviceproxy.testmodel.TestConnection commit(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.String>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestConnection: io.vertx.serviceproxy.testmodel.TestConnection rollback(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.String>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void longDeliverySuccess(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.String>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void longDeliveryFailed(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.String>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void createConnection(java.lang.String str, io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.serviceproxy.testmodel.TestConnection>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void enumTypeAsResult(io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.serviceproxy.testmodel.SomeEnum>> someEnum)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void enumTypeAsResultNull(io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.serviceproxy.testmodel.SomeEnum>> someEnum)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void stringHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.String>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void stringNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.String>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void byteHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Byte>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void byteNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Byte>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void shortHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Short>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void shortNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Short>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void intHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Integer>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void intNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Integer>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void longHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Long>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void longNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Long>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void floatHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Float>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void floatNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Float>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void doubleHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Double>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void doubleNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Double>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void charHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Character>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void charNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Character>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void booleanHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Boolean>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void booleanNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Boolean>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void jsonObjectHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.core.json.JsonObject>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void jsonObjectNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.core.json.JsonObject>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void jsonArrayHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.core.json.JsonArray>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void jsonArrayNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.core.json.JsonArray>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void dataObjectHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.serviceproxy.testmodel.TestDataObject>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void dataObjectNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.serviceproxy.testmodel.TestDataObject>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void voidHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: io.vertx.serviceproxy.testmodel.TestService fluentMethod(java.lang.String str, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.String>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void failingMethod(io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.core.json.JsonObject>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void invokeWithMessage(io.vertx.core.json.JsonObject object, java.lang.String str, int i, char chr, io.vertx.serviceproxy.testmodel.SomeEnum senum, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.String>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listStringHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<java.lang.String>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listByteHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<java.lang.Byte>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listShortHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<java.lang.Short>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listIntHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<java.lang.Integer>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listLongHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<java.lang.Long>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listFloatHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<java.lang.Float>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listDoubleHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<java.lang.Double>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listCharHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<java.lang.Character>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listBoolHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<java.lang.Boolean>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listJsonObjectHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<io.vertx.core.json.JsonObject>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listJsonArrayHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<io.vertx.core.json.JsonArray>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listDataObjectHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<io.vertx.serviceproxy.testmodel.TestDataObject>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setStringHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<java.lang.String>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setByteHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<java.lang.Byte>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setShortHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<java.lang.Short>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setIntHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<java.lang.Integer>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setLongHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<java.lang.Long>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setFloatHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<java.lang.Float>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setDoubleHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<java.lang.Double>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setCharHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<java.lang.Character>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setBoolHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<java.lang.Boolean>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapStringHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,java.lang.String>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapByteHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,java.lang.Byte>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapShortHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,java.lang.Short>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapIntHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,java.lang.Integer>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapLongHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,java.lang.Long>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapFloatHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,java.lang.Float>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapDoubleHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,java.lang.Double>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapCharHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,java.lang.Character>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapBoolHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,java.lang.Boolean>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setJsonObjectHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<io.vertx.core.json.JsonObject>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapJsonObjectHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,io.vertx.core.json.JsonObject>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setJsonArrayHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<io.vertx.core.json.JsonArray>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapJsonArrayHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,io.vertx.core.json.JsonArray>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setDataObjectHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<io.vertx.serviceproxy.testmodel.TestDataObject>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapDataObject(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,io.vertx.serviceproxy.testmodel.TestDataObject>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void failingCall(java.lang.String value, io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.core.json.JsonObject>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listDataObjectContainingNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<io.vertx.serviceproxy.testmodel.TestDataObject>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setDataObjectContainingNullHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<io.vertx.serviceproxy.testmodel.TestDataObject>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void zonedDateTimeHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.time.ZonedDateTime>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void listZonedDateTimeHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<java.time.ZonedDateTime>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void setZonedDateTimeHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Set<java.time.ZonedDateTime>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestService: void mapZonedDateTimeHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.Map<java.lang.String,java.time.ZonedDateTime>>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service hello(java.lang.String name, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.String>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service methodUsingEnum(io.vertx.serviceproxy.testmodel.SomeEnum e, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Boolean>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service methodReturningEnum(io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.serviceproxy.testmodel.SomeEnum>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service methodReturningVertxEnum(io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.serviceproxy.testmodel.SomeVertxEnum>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service methodWithJsonObject(io.vertx.core.json.JsonObject json, io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.core.json.JsonObject>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service methodWithJsonArray(io.vertx.core.json.JsonArray json, io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.core.json.JsonArray>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service methodWithList(java.util.List<java.lang.String> list, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<java.lang.String>>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service methodWithDataObject(io.vertx.serviceproxy.testmodel.TestDataObject data, io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.serviceproxy.testmodel.TestDataObject>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service methodWithListOfDataObject(java.util.List<io.vertx.serviceproxy.testmodel.TestDataObject> list, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<io.vertx.serviceproxy.testmodel.TestDataObject>>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service methodWithStringDataObject(io.vertx.serviceproxy.testmodel.StringDataObject data, io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.serviceproxy.testmodel.StringDataObject>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service methodWithListOfStringDataObject(java.util.List<io.vertx.serviceproxy.testmodel.StringDataObject> list, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<io.vertx.serviceproxy.testmodel.StringDataObject>>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service methodWithListOfJsonObject(java.util.List<io.vertx.core.json.JsonObject> list, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.util.List<io.vertx.core.json.JsonObject>>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.Service methodWthFailingResult(java.lang.String input, io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.core.json.JsonObject>> result)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestConnection: io.vertx.serviceproxy.testmodel.TestConnection startTransaction(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.String>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestConnection: io.vertx.serviceproxy.testmodel.TestConnection insert(java.lang.String name, io.vertx.core.json.JsonObject data, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.String>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestConnection: io.vertx.serviceproxy.testmodel.TestConnection commit(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.String>> resultHandler)
[INFO] diagnostic: Note: Non future method io.vertx.serviceproxy.testmodel.TestConnection: io.vertx.serviceproxy.testmodel.TestConnection rollback(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.String>> resultHandler)
[INFO] diagnostic: Note: Generated model io.vertx.serviceproxy.testmodel.OKService: io.vertx.serviceproxy.testmodel.OKServiceVertxProxyHandler
[INFO] diagnostic: Note: Generated model io.vertx.serviceproxy.testmodel.OKService: io.vertx.serviceproxy.testmodel.OKServiceVertxEBProxy
[INFO] diagnostic: Note: Generated model io.vertx.serviceproxy.testmodel.TestConnection: io.vertx.serviceproxy.testmodel.TestConnectionVertxEBProxy
[INFO] diagnostic: Note: Generated model io.vertx.serviceproxy.testmodel.TestService: io.vertx.serviceproxy.testmodel.TestServiceVertxEBProxy
[INFO] diagnostic: Note: Generated model io.vertx.serviceproxy.testmodel.TestConnection: io.vertx.serviceproxy.testmodel.TestConnectionVertxProxyHandler
[INFO] diagnostic: Note: Generated model io.vertx.serviceproxy.testmodel.TestBaseImportsService: io.vertx.serviceproxy.testmodel.TestBaseImportsServiceVertxProxyHandler
[INFO] diagnostic: Note: Generated model io.vertx.serviceproxy.testmodel.TestBaseImportsService: io.vertx.serviceproxy.testmodel.TestBaseImportsServiceVertxEBProxy
[INFO] diagnostic: Note: Generated model io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.ServiceVertxProxyHandler
[INFO] diagnostic: Note: Generated model io.vertx.serviceproxy.testmodel.TestService: io.vertx.serviceproxy.testmodel.TestServiceVertxProxyHandler
[INFO] diagnostic: Note: Generated model io.vertx.serviceproxy.clustered.Service: io.vertx.serviceproxy.clustered.ServiceVertxEBProxy
[INFO] 
[INFO] --- maven-resources-plugin:2.7:testResources (default-testResources) @ vertx-service-proxy ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 2 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ vertx-service-proxy ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 57 source files to /tmp/tmpylvm_imx/vertx-service-proxy/target/test-classes
[INFO] 
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ vertx-service-proxy ---
[INFO] Surefire report directory: /tmp/tmpylvm_imx/vertx-service-proxy/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running io.vertx.serviceproxy.clustered.ClusteredTest
Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.225 sec - in io.vertx.serviceproxy.clustered.ClusteredTest
Running io.vertx.serviceproxy.codegen.ProxyTest
Tests run: 14, Failures: 0, Errors: 14, Skipped: 0, Time elapsed: 0.013 sec <<< FAILURE! - in io.vertx.serviceproxy.codegen.ProxyTest
testValid(io.vertx.serviceproxy.codegen.ProxyTest)  Time elapsed: 0.003 sec  <<< ERROR!
java.lang.IllegalStateException: Can't find source on classpath: io/vertx/serviceproxy/codegen/proxytestapi/ValidProxy.java
	at io.vertx.serviceproxy.codegen.ProxyTest.generateProxyModel(ProxyTest.java:26)
	at io.vertx.serviceproxy.codegen.ProxyTest.testValid(ProxyTest.java:127)

testValidCloseWithFuture(io.vertx.serviceproxy.codegen.ProxyTest)  Time elapsed: 0.001 sec  <<< ERROR!
java.lang.IllegalStateException: Can't find source on classpath: io/vertx/serviceproxy/codegen/proxytestapi/ValidProxyCloseWithFuture.java
	at io.vertx.serviceproxy.codegen.ProxyTest.generateProxyModel(ProxyTest.java:26)
	at io.vertx.serviceproxy.codegen.ProxyTest.testValidCloseWithFuture(ProxyTest.java:152)

testInvalidReturn1(io.vertx.serviceproxy.codegen.ProxyTest)  Time elapsed: 0 sec  <<< ERROR!
java.lang.IllegalStateException: Can't find source on classpath: io/vertx/serviceproxy/codegen/proxytestapi/InvalidReturn1.java
	at io.vertx.serviceproxy.codegen.ProxyTest.generateProxyModel(ProxyTest.java:26)
	at io.vertx.serviceproxy.codegen.ProxyTest.testInvalidReturn1(ProxyTest.java:98)

testInvalidReturn2(io.vertx.serviceproxy.codegen.ProxyTest)  Time elapsed: 0 sec  <<< ERROR!
java.lang.IllegalStateException: Can't find source on classpath: io/vertx/serviceproxy/codegen/proxytestapi/InvalidReturn2.java
	at io.vertx.serviceproxy.codegen.ProxyTest.generateProxyModel(ProxyTest.java:26)
	at io.vertx.serviceproxy.codegen.ProxyTest.testInvalidReturn2(ProxyTest.java:108)

testInvalidReturn3(io.vertx.serviceproxy.codegen.ProxyTest)  Time elapsed: 0.001 sec  <<< ERROR!
java.lang.IllegalStateException: Can't find source on classpath: io/vertx/serviceproxy/codegen/proxytestapi/InvalidReturn3.java
	at io.vertx.serviceproxy.codegen.ProxyTest.generateProxyModel(ProxyTest.java:26)
	at io.vertx.serviceproxy.codegen.ProxyTest.testInvalidReturn3(ProxyTest.java:118)

testInvalidClose1(io.vertx.serviceproxy.codegen.ProxyTest)  Time elapsed: 0.001 sec  <<< ERROR!
java.lang.IllegalStateException: Can't find source on classpath: io/vertx/serviceproxy/codegen/proxytestapi/InvalidClose1.java
	at io.vertx.serviceproxy.codegen.ProxyTest.generateProxyModel(ProxyTest.java:26)
	at io.vertx.serviceproxy.codegen.ProxyTest.testInvalidClose1(ProxyTest.java:163)

testInvalidClose2(io.vertx.serviceproxy.codegen.ProxyTest)  Time elapsed: 0.001 sec  <<< ERROR!
java.lang.IllegalStateException: Can't find source on classpath: io/vertx/serviceproxy/codegen/proxytestapi/InvalidClose2.java
	at io.vertx.serviceproxy.codegen.ProxyTest.generateProxyModel(ProxyTest.java:26)
	at io.vertx.serviceproxy.codegen.ProxyTest.testInvalidClose2(ProxyTest.java:173)

testInvalidClose3(io.vertx.serviceproxy.codegen.ProxyTest)  Time elapsed: 0.001 sec  <<< ERROR!
java.lang.IllegalStateException: Can't find source on classpath: io/vertx/serviceproxy/codegen/proxytestapi/InvalidClose3.java
	at io.vertx.serviceproxy.codegen.ProxyTest.generateProxyModel(ProxyTest.java:26)
	at io.vertx.serviceproxy.codegen.ProxyTest.testInvalidClose3(ProxyTest.java:183)

testInvalidParamsDataObject(io.vertx.serviceproxy.codegen.ProxyTest)  Time elapsed: 0 sec  <<< ERROR!
java.lang.IllegalStateException: Can't find source on classpath: io/vertx/serviceproxy/codegen/proxytestapi/InvalidParamsDataObject.java
	at io.vertx.serviceproxy.codegen.ProxyTest.generateProxyModel(ProxyTest.java:26)
	at io.vertx.serviceproxy.codegen.ProxyTest.testInvalidParamsDataObject(ProxyTest.java:88)

testInvalidOverloaded(io.vertx.serviceproxy.codegen.ProxyTest)  Time elapsed: 0.001 sec  <<< ERROR!
java.lang.IllegalStateException: Can't find source on classpath: io/vertx/serviceproxy/codegen/proxytestapi/InvalidOverloaded.java
	at io.vertx.serviceproxy.codegen.ProxyTest.generateProxyModel(ProxyTest.java:26)
	at io.vertx.serviceproxy.codegen.ProxyTest.testInvalidOverloaded(ProxyTest.java:38)

testInvalidParams1(io.vertx.serviceproxy.codegen.ProxyTest)  Time elapsed: 0.001 sec  <<< ERROR!
java.lang.IllegalStateException: Can't find source on classpath: io/vertx/serviceproxy/codegen/proxytestapi/InvalidParams1.java
	at io.vertx.serviceproxy.codegen.ProxyTest.generateProxyModel(ProxyTest.java:26)
	at io.vertx.serviceproxy.codegen.ProxyTest.testInvalidParams1(ProxyTest.java:48)

testInvalidParams2(io.vertx.serviceproxy.codegen.ProxyTest)  Time elapsed: 0.001 sec  <<< ERROR!
java.lang.IllegalStateException: Can't find source on classpath: io/vertx/serviceproxy/codegen/proxytestapi/InvalidParams2.java
	at io.vertx.serviceproxy.codegen.ProxyTest.generateProxyModel(ProxyTest.java:26)
	at io.vertx.serviceproxy.codegen.ProxyTest.testInvalidParams2(ProxyTest.java:58)

testInvalidParams3(io.vertx.serviceproxy.codegen.ProxyTest)  Time elapsed: 0 sec  <<< ERROR!
java.lang.IllegalStateException: Can't find source on classpath: io/vertx/serviceproxy/codegen/proxytestapi/InvalidParams3.java
	at io.vertx.serviceproxy.codegen.ProxyTest.generateProxyModel(ProxyTest.java:26)
	at io.vertx.serviceproxy.codegen.ProxyTest.testInvalidParams3(ProxyTest.java:68)

testInvalidParams4(io.vertx.serviceproxy.codegen.ProxyTest)  Time elapsed: 0.001 sec  <<< ERROR!
java.lang.IllegalStateException: Can't find source on classpath: io/vertx/serviceproxy/codegen/proxytestapi/InvalidParams4.java
	at io.vertx.serviceproxy.codegen.ProxyTest.generateProxyModel(ProxyTest.java:26)
	at io.vertx.serviceproxy.codegen.ProxyTest.testInvalidParams4(ProxyTest.java:78)

Running io.vertx.serviceproxy.test.SecureServiceBinderTest
Starting test: SecureServiceBinderTest#testLocalWithToken 
Starting test: SecureServiceBinderTest#testWithoutToken 
Starting test: SecureServiceBinderTest#testLocalWithoutToken 
Starting test: SecureServiceBinderTest#testWithToken 
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.99 sec - in io.vertx.serviceproxy.test.SecureServiceBinderTest
Running io.vertx.serviceproxy.test.ServiceBinderTest
Starting test: ServiceBinderTest#testLocalFactory 
Starting test: ServiceBinderTest#testFactory 
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 sec - in io.vertx.serviceproxy.test.ServiceBinderTest
Running io.vertx.serviceproxy.test.ServiceProxyTest
Starting test: ServiceProxyTest#testListDataObjectHandler 
Starting test: ServiceProxyTest#testSetdataObjectTypeHavingNullValues 
Starting test: ServiceProxyTest#testBasicTypes 
Starting test: ServiceProxyTest#testMapBoolHandler 
Starting test: ServiceProxyTest#testDoubleHandler 
Starting test: ServiceProxyTest#testDataObjectNullHandler 
Starting test: ServiceProxyTest#testlistdataObjectTypeHavingNullValues 
Starting test: ServiceProxyTest#testStringHandler 
Starting test: ServiceProxyTest#testLongHandler 
Starting test: ServiceProxyTest#testSetdataObjectType 
Starting test: ServiceProxyTest#testSetDataObjectHandler 
Starting test: ServiceProxyTest#testListDataObjectTypeNull 
Starting test: ServiceProxyTest#testJsonArrayNullHandler 
Starting test: ServiceProxyTest#testConnection 
Starting test: ServiceProxyTest#testDataObjectTypeNull 
Starting test: ServiceProxyTest#testCharHandler 
Starting test: ServiceProxyTest#testEnumType 
Starting test: ServiceProxyTest#testSetDateTimeType 
Starting test: ServiceProxyTest#testMapShortHandler 
Starting test: ServiceProxyTest#testListByteHandler 
Starting test: ServiceProxyTest#testListDateTimeHandler 
Starting test: ServiceProxyTest#testSetBoolHandler 
Starting test: ServiceProxyTest#testCauseErrorHandling 
Starting test: ServiceProxyTest#testListIntHandler 
Starting test: ServiceProxyTest#testJsonObjectHandler 
Starting test: ServiceProxyTest#testShortHandler 
Starting test: ServiceProxyTest#testSetDataObjectTypeNull 
Starting test: ServiceProxyTest#testJsonTypesNull 
Starting test: ServiceProxyTest#testEnumTypeAsResultWithNull 
Starting test: ServiceProxyTest#testFailingMethod 
Starting test: ServiceProxyTest#testMapFloatHandler 
Starting test: ServiceProxyTest#testMapLongHandler 
Starting test: ServiceProxyTest#testMapJsonArrayHandler 
Starting test: ServiceProxyTest#testJsonArrayHandler 
Starting test: ServiceProxyTest#testErrorHandlingServiceExceptionSubclass 
Starting test: ServiceProxyTest#testMapCharHandler 
Starting test: ServiceProxyTest#testCallWithMessageParamWrongType 
Unhandled exception 
java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.String
	at io.vertx.serviceproxy.testmodel.TestServiceVertxProxyHandler.handle(TestServiceVertxProxyHandler.java:429)
	at io.vertx.serviceproxy.testmodel.TestServiceVertxProxyHandler.handle(TestServiceVertxProxyHandler.java:60)
	at io.vertx.core.impl.AbstractContext.emit(AbstractContext.java:181)
	at io.vertx.core.impl.AbstractContext.lambda$dispatch$0(AbstractContext.java:84)
	at io.vertx.core.impl.EventLoopContext.schedule(EventLoopContext.java:59)
	at io.vertx.core.impl.EventLoopContext$Duplicated.schedule(EventLoopContext.java:131)
	at io.vertx.core.impl.AbstractContext.schedule(AbstractContext.java:94)
	at io.vertx.core.impl.AbstractContext.dispatch(AbstractContext.java:84)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.next(HandlerRegistration.java:164)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.dispatch(HandlerRegistration.java:130)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:106)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:56)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Starting test: ServiceProxyTest#testMapdataObjectType 
Starting test: ServiceProxyTest#testUnregisteringTheService 
Starting test: ServiceProxyTest#testMapDateTimeHandler 
Starting test: ServiceProxyTest#testFloatHandler 
Starting test: ServiceProxyTest#testListShortHandler 
Starting test: ServiceProxyTest#testListTypes 
Starting test: ServiceProxyTest#testLocalServiceConnectionTimeout 
Starting test: ServiceProxyTest#testFluentNoParams 
Starting test: ServiceProxyTest#testConnectionTimeout 
Starting test: ServiceProxyTest#testListdataObjectType 
Starting test: ServiceProxyTest#testEnumTypeNull 
Starting test: ServiceProxyTest#testJsonTypes 
Starting test: ServiceProxyTest#testDoubleNullHandler 
Starting test: ServiceProxyTest#testDataObjectType 
Starting test: ServiceProxyTest#testMapDataObjectHandler 
Starting test: ServiceProxyTest#testSetLongHandler 
Starting test: ServiceProxyTest#testCallWithMessage 
Starting test: ServiceProxyTest#testListFloatHandler 
Starting test: ServiceProxyTest#testSetCharHandler 
Starting test: ServiceProxyTest#setSetJsonArrayHandler 
Starting test: ServiceProxyTest#testMapDoubleHandler 
Starting test: ServiceProxyTest#testListJsonObjectHandler 
Starting test: ServiceProxyTest#testByteHandler 
Starting test: ServiceProxyTest#testMapStringHandler 
Starting test: ServiceProxyTest#testMapIntHandler 
Starting test: ServiceProxyTest#testLocalServiceFromLocalSender 
Starting test: ServiceProxyTest#testSetShortHandler 
Starting test: ServiceProxyTest#testListDoubleHandler 
Starting test: ServiceProxyTest#testLongDelivery1 
Starting test: ServiceProxyTest#testLongDelivery2 
Starting test: ServiceProxyTest#testSetIntHandler 
Starting test: ServiceProxyTest#testStringNullHandler 
Starting test: ServiceProxyTest#testListStringHandler 
Starting test: ServiceProxyTest#testListBoolHandler 
Starting test: ServiceProxyTest#testSetJsonObjectHandler 
Starting test: ServiceProxyTest#testEnumTypeAsResult 
Starting test: ServiceProxyTest#testSetFloatHandler 
Starting test: ServiceProxyTest#testShortNullHandler 
Starting test: ServiceProxyTest#testJsonObjectNullHandler 
Starting test: ServiceProxyTest#testByteNullHandler 
Starting test: ServiceProxyTest#testMapByteHandler 
Starting test: ServiceProxyTest#testCharNullHandler 
Starting test: ServiceProxyTest#testMapTypes 
Starting test: ServiceProxyTest#testSetDateTimeHandler 
Starting test: ServiceProxyTest#testSetDoubleHandler 
Starting test: ServiceProxyTest#testErrorHandling 
Starting test: ServiceProxyTest#testSetStringHandler 
Starting test: ServiceProxyTest#testIntNullHandler 
Starting test: ServiceProxyTest#testProxyIgnore 
Starting test: ServiceProxyTest#testBooleanNullHandler 
Starting test: ServiceProxyTest#testFloatNullHandler 
Starting test: ServiceProxyTest#testDataObjectHandler 
Starting test: ServiceProxyTest#testCallWithMessageInvalidAction 
Unhandled exception 
java.lang.IllegalStateException: Invalid action: yourmum
	at io.vertx.serviceproxy.testmodel.TestServiceVertxProxyHandler.handle(TestServiceVertxProxyHandler.java:675)
	at io.vertx.serviceproxy.testmodel.TestServiceVertxProxyHandler.handle(TestServiceVertxProxyHandler.java:60)
	at io.vertx.core.impl.AbstractContext.emit(AbstractContext.java:181)
	at io.vertx.core.impl.AbstractContext.lambda$dispatch$0(AbstractContext.java:84)
	at io.vertx.core.impl.EventLoopContext.schedule(EventLoopContext.java:59)
	at io.vertx.core.impl.EventLoopContext$Duplicated.schedule(EventLoopContext.java:131)
	at io.vertx.core.impl.AbstractContext.schedule(AbstractContext.java:94)
	at io.vertx.core.impl.AbstractContext.dispatch(AbstractContext.java:84)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.next(HandlerRegistration.java:164)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.dispatch(HandlerRegistration.java:130)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:106)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:56)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)

Starting test: ServiceProxyTest#testNoParams 
Starting test: ServiceProxyTest#testListLongHandler 
Starting test: ServiceProxyTest#testLongNullHandler 
Starting test: ServiceProxyTest#testSetByteHandler 
Starting test: ServiceProxyTest#testMapDateTimeType 
Starting test: ServiceProxyTest#testBasicBoxedTypesNull 
Starting test: ServiceProxyTest#testListCharHandler 
Starting test: ServiceProxyTest#testBasicBoxedTypes 
Starting test: ServiceProxyTest#testVoidHandler 
Starting test: ServiceProxyTest#testIntHandler 
Starting test: ServiceProxyTest#testDateTimeType 
Starting test: ServiceProxyTest#testMapJsonObjectHandler 
Starting test: ServiceProxyTest#testFluentMethod 
Starting test: ServiceProxyTest#testAListContainingNullValues 
Starting test: ServiceProxyTest#testListJsonArrayHandler 
Starting test: ServiceProxyTest#testASetContainingNullValues 
Starting test: ServiceProxyTest#testDateTimeHandler 
Starting test: ServiceProxyTest#testBooleanHandler 
Starting test: ServiceProxyTest#testSetTypes 
Starting test: ServiceProxyTest#testListDateTimeType 
Tests run: 110, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 36.636 sec - in io.vertx.serviceproxy.test.ServiceProxyTest

Results :

Tests in error: 
  ProxyTest.testInvalidClose1:163->generateProxyModel:26 » IllegalState Can't fi...
  ProxyTest.testInvalidClose2:173->generateProxyModel:26 » IllegalState Can't fi...
  ProxyTest.testInvalidClose3:183->generateProxyModel:26 » IllegalState Can't fi...
  ProxyTest.testInvalidOverloaded:38->generateProxyModel:26 » IllegalState Can't...
  ProxyTest.testInvalidParams1:48->generateProxyModel:26 » IllegalState Can't fi...
  ProxyTest.testInvalidParams2:58->generateProxyModel:26 » IllegalState Can't fi...
  ProxyTest.testInvalidParams3:68->generateProxyModel:26 » IllegalState Can't fi...
  ProxyTest.testInvalidParams4:78->generateProxyModel:26 » IllegalState Can't fi...
  ProxyTest.testInvalidParamsDataObject:88->generateProxyModel:26 » IllegalState
  ProxyTest.testInvalidReturn1:98->generateProxyModel:26 » IllegalState Can't fi...
  ProxyTest.testInvalidReturn2:108->generateProxyModel:26 » IllegalState Can't f...
  ProxyTest.testInvalidReturn3:118->generateProxyModel:26 » IllegalState Can't f...
  ProxyTest.testValid:127->generateProxyModel:26 » IllegalState Can't find sourc...
  ProxyTest.testValidCloseWithFuture:152->generateProxyModel:26 » IllegalState C...

Tests run: 144, Failures: 0, Errors: 14, Skipped: 0

[ERROR] There are test failures.

Please refer to /tmp/tmpylvm_imx/vertx-service-proxy/target/surefire-reports for the individual test results.
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.5:report (report) @ vertx-service-proxy ---
[INFO] Skipping JaCoCo execution due to missing execution data file.
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  01:45 min
[INFO] Finished at: 2020-08-03T11:27:08Z
[INFO] ------------------------------------------------------------------------
