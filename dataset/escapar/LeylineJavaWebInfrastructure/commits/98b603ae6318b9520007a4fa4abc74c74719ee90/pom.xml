<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>moe.src</groupId>
	<artifactId>leyline</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>leyline</name>
	<description>A Brandnew Development Stack</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.0.M3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-batch</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jersey</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>
        <!--
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session</artifactId>
        </dependency>
        -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>19.0</version>
		</dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.4</version>
        </dependency>
        <dependency>
            <groupId>org.javatuples</groupId>
            <artifactId>javatuples</artifactId>
            <version>LATEST</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.javaslang</groupId>
            <artifactId>javaslang</artifactId>
            <version>2.0.0-RC4</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>LATEST</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>LATEST</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
	
	<repositories>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	<profiles>

		<profile>
			<id>mysql</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jooq</groupId>
						<artifactId>jooq-codegen-maven</artifactId>

						<executions>
							<execution>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>


						<dependencies>
							<dependency>
								<groupId>mysql</groupId>
								<artifactId>mysql-connector-java</artifactId>
								<version>${mysql.version}</version>
							</dependency>
						</dependencies>
						<configuration>

							<jdbc>
								<driver>com.mysql.jdbc.Driver</driver>
								<url>jdbc:mysql://localhost:3306/leyline</url>
								<user>root</user>
								<password>dookie1994</password>
							</jdbc>
							<generator>
								<database>
									<name>org.jooq.util.mysql.MySQLDatabase</name>
									<includes>.*</includes>
									<excludes />
									<inputSchema>leyline</inputSchema>
								</database>
								<target>
									<packageName>moe.src.leyline.infrastructure.persistence</packageName>
									<directory>src/main/java</directory>
								</target>
                                <!-- These properties can be added to the generate element: -->
                                <generate>
                                    <!-- Primary key / foreign key relations should be generated and used.
                                         This is a prerequisite for various advanced features.
                                         Defaults to true -->
                                    <relations>true</relations>

                                    <!-- Generate deprecated code for backwards compatibility
                                         Defaults to true -->
                                    <deprecated>true</deprecated>

                                    <!-- Generate the javax.annotation.Generated annotation to indicate
                                         jOOQ version used for source code.
                                         Defaults to true -->
                                    <generatedAnnotation>true</generatedAnnotation>

                                    <!-- Generate jOOQ Record classes for type-safe querying. You can
                                         turn this off, if you don't need "active records" for CRUD
                                         Defaults to true -->
                                    <records>true</records>

                                    <!-- Generate POJOs in addition to Record classes for usage of the
                                         ResultQuery.fetchInto(Class) API
                                         Defaults to false -->
                                    <pojos>true</pojos>

                                    <!-- Generate immutable POJOs for usage of the ResultQuery.fetchInto(Class) API
                                         This overrides any value set in <pojos/>
                                         Defaults to false -->
                                    <immutablePojos>false</immutablePojos>

                                    <!-- Generate interfaces that will be implemented by records and/or pojos.
                                         You can also use these interfaces in Record.into(Class<?>) and similar
                                         methods, to let jOOQ return proxy objects for them.
                                         Defaults to false -->
                                    <interfaces>false</interfaces>

                                    <!-- Generate DAOs in addition to POJO classes
                                         Defaults to false -->
                                    <daos>true</daos>

                                    <!-- Annotate POJOs and Records with JPA annotations for increased
                                         compatibility and better integration with JPA/Hibernate, etc
                                         Defaults to false -->
                                    <jpaAnnotations>false</jpaAnnotations>

                                    <!-- Annotate POJOs and Records with JSR-303 validation annotations
                                         Defaults to false -->
                                    <validationAnnotations>false</validationAnnotations>

                                    <!-- Annotate DAOs with useful spring annotations such as @Repository or @Autowired
                                         Defaults to false -->
                                    <springAnnotations>true</springAnnotations>

                                    <!-- Allow to turn off the generation of global object references, which include

                                         - Tables.java
                                         - Sequences.java
                                         - UDTs.java

                                         Turning off the generation of the above files may be necessary for very
                                         large schemas, which exceed the amount of allowed constants in a class's
                                         constant pool (64k) or, whose static initialiser would exceed 64k of
                                         byte code

                                         Defaults to true -->
                                    <globalObjectReferences>true</globalObjectReferences>

                                    <!-- Generate fluent setters in

                                         - records
                                         - pojos
                                         - interfaces

                                         Fluent setters are against the JavaBeans specification, but can be quite
                                         useful to those users who do not depend on EL, JSP, JSF, etc.

                                         Defaults to false -->
                                    <fluentSetters>true</fluentSetters>
                                </generate>
							</generator>

						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
