[INFO] Error stacktraces are turned on.
[INFO] Scanning for projects...
[INFO] 
[INFO] -------------------< de.muenchen.cove:cove-backend >--------------------
[INFO] Building cove_backend 1.0-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.5:prepare-agent (default) @ cove-backend ---
[INFO] argLine set to -javaagent:/home/jdbl/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/tmp/tmpfohgxc_i/cove-backend/target/jacoco.exec
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ cove-backend ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 20 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.6.2:compile (default-compile) @ cove-backend ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Compiling 38 source files to /tmp/tmpfohgxc_i/cove-backend/target/classes
[INFO] /tmp/tmpfohgxc_i/cove-backend/src/main/java/de/muenchen/cove/rest/PersonController.java: /tmp/tmpfohgxc_i/cove-backend/src/main/java/de/muenchen/cove/rest/PersonController.java uses unchecked or unsafe operations.
[INFO] /tmp/tmpfohgxc_i/cove-backend/src/main/java/de/muenchen/cove/rest/PersonController.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ cove-backend ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /tmp/tmpfohgxc_i/cove-backend/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.6.2:testCompile (default-testCompile) @ cove-backend ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Compiling 11 source files to /tmp/tmpfohgxc_i/cove-backend/target/test-classes
[INFO] /tmp/tmpfohgxc_i/cove-backend/src/test/java/de/muenchen/cove/nfcconverter/NfcConverterTest.java: /tmp/tmpfohgxc_i/cove-backend/src/test/java/de/muenchen/cove/nfcconverter/NfcConverterTest.java uses unchecked or unsafe operations.
[INFO] /tmp/tmpfohgxc_i/cove-backend/src/test/java/de/muenchen/cove/nfcconverter/NfcConverterTest.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ cove-backend ---
[INFO] Surefire report directory: /tmp/tmpfohgxc_i/cove-backend/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running de.muenchen.cove.rest.PersonControllerTest
22:53:17.528 [main] DEBUG org.springframework.test.context.junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class de.muenchen.cove.rest.PersonControllerTest]
22:53:17.543 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
22:53:17.570 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
22:53:17.653 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [de.muenchen.cove.rest.PersonControllerTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
22:53:17.685 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [de.muenchen.cove.rest.PersonControllerTest], using SpringBootContextLoader
22:53:17.694 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [de.muenchen.cove.rest.PersonControllerTest]: class path resource [de/muenchen/cove/rest/PersonControllerTest-context.xml] does not exist
22:53:17.701 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [de.muenchen.cove.rest.PersonControllerTest]: class path resource [de/muenchen/cove/rest/PersonControllerTestContext.groovy] does not exist
22:53:17.702 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [de.muenchen.cove.rest.PersonControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
22:53:18.054 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [de.muenchen.cove.rest.PersonControllerTest]: using defaults.
22:53:18.055 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener]
22:53:18.090 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@196624bf, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@50085d9c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5df7e31b, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@63a9c661, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4b425577, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5934153e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3bb9ca38, org.springframework.test.context.event.EventPublishingTestExecutionListener@160e99e0, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@4f3e9fbb, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@365afe87, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@43471a7e, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@21e45a6f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1a1ccaaf, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7b53b1ad, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3cc053]
22:53:18.094 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [de.muenchen.cove.rest.PersonControllerTest]
22:53:18.095 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [de.muenchen.cove.rest.PersonControllerTest]
22:53:18.097 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [de.muenchen.cove.rest.PersonControllerTest]
22:53:18.097 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [de.muenchen.cove.rest.PersonControllerTest]
22:53:18.098 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [de.muenchen.cove.rest.PersonControllerTest]
22:53:18.099 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [de.muenchen.cove.rest.PersonControllerTest]
22:53:18.105 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@58eac00e testClass = PersonControllerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6acffb2d testClass = PersonControllerTest, locations = '{}', classes = '{class de.muenchen.cove.MicroServiceApplication, class de.muenchen.cove.MicroServiceApplication}', contextInitializerClasses = '[]', activeProfiles = '{test, no-security}', propertySourceLocations = '{}', propertySourceProperties = '{spring.datasource.url=jdbc:h2:mem:cove;DB_CLOSE_ON_EXIT=FALSE, tomcat.gracefulshutdown.pre-wait-seconds=0, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@21e20ad5, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@24b4d544, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@65f2f9b0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@59d77850], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false]], class annotated with @DirtiesContext [false] with mode [null].
22:53:18.109 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [de.muenchen.cove.rest.PersonControllerTest]
22:53:18.109 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [de.muenchen.cove.rest.PersonControllerTest]
22:53:18.121 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@58eac00e testClass = PersonControllerTest, testInstance = de.muenchen.cove.rest.PersonControllerTest@2a87ba34, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6acffb2d testClass = PersonControllerTest, locations = '{}', classes = '{class de.muenchen.cove.MicroServiceApplication, class de.muenchen.cove.MicroServiceApplication}', contextInitializerClasses = '[]', activeProfiles = '{test, no-security}', propertySourceLocations = '{}', propertySourceProperties = '{spring.datasource.url=jdbc:h2:mem:cove;DB_CLOSE_ON_EXIT=FALSE, tomcat.gracefulshutdown.pre-wait-seconds=0, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@21e20ad5, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@24b4d544, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@65f2f9b0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@59d77850], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false]]].
22:53:18.197 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, spring.datasource.url=jdbc:h2:mem:cove;DB_CLOSE_ON_EXIT=FALSE, tomcat.gracefulshutdown.pre-wait-seconds=0, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}
---------------------------------------------------------------------------------------------------------------------------------------------------
  ____                                  _                  _                                             _              _
 |  _ \                                | |                | |                      /\                   | |            | |
 | |_) |   __ _   _ __   _ __    __ _  | | __  _   _    __| |   __ _   ______     /  \     _ __    ___  | |__     ___  | |_   _   _   _ __     ___
 |  _ <   / _` | | '__| | '__|  / _` | | |/ / | | | |  / _` |  / _` | |______|   / /\ \   | '__|  / __| | '_ \   / _ \ | __| | | | | | '_ \   / _ \
 | |_) | | (_| | | |    | |    | (_| | |   <  | |_| | | (_| | | (_| |           / ____ \  | |    | (__  | | | | |  __/ | |_  | |_| | | |_) | |  __/
 |____/   \__,_| |_|    |_|     \__,_| |_|\_\  \__,_|  \__,_|  \__,_|          /_/    \_\ |_|     \___| |_| |_|  \___|  \__|  \__, | | .__/   \___|
                                                                                                                               __/ | | |
                                                                                                                              |___/  |_|    by CCSE
 Application Name    : cove-backend-microservice
 Spring Boot Version :  (v2.2.4.RELEASE)
---------------------------------------------------------------------------------------------------------------------------------------------------

2020.07.30 22:53:20.074 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | PersonControllerTest | [SpringApplication.java : 655]  -  The following profiles are active: test,no-security
2020.07.30 22:53:21.439 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | RepositoryConfigurationDelegate | [RepositoryConfigurationDelegate.java : 127]  -  Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020.07.30 22:53:21.538 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | RepositoryConfigurationDelegate | [RepositoryConfigurationDelegate.java : 187]  -  Finished Spring Data repository scanning in 84ms. Found 1 JPA repository interfaces.
2020.07.30 22:53:22.966 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | GenericScope | [GenericScope.java : 295]  -  BeanFactory id=dcc9b6e1-8751-376d-b926-50a0e58fa465
2020.07.30 22:53:23.959 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | PostProcessorRegistrationDelegate$BeanPostProcessorChecker | [PostProcessorRegistrationDelegate.java : 330]  -  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.07.30 22:53:24.253 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | PostProcessorRegistrationDelegate$BeanPostProcessorChecker | [PostProcessorRegistrationDelegate.java : 330]  -  Bean 'org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$TraceOAuthConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$TraceOAuthConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020.07.30 22:53:24.362 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | GracefulShutdownHealthCheck | [GracefulShutdownHealthCheck.java : 47]  -  Gracefulshutdown healthcheck UP
2020.07.30 22:53:25.602 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | TomcatWebServer | [TomcatWebServer.java : 92]  -  Tomcat initialized with port(s): 0 (http)
2020.07.30 22:53:25.630 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | Http11NioProtocol | [DirectJDKLog.java : 173]  -  Initializing ProtocolHandler ["http-nio-auto-1"]
2020.07.30 22:53:25.631 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | StandardService | [DirectJDKLog.java : 173]  -  Starting service [Tomcat]
2020.07.30 22:53:25.632 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | StandardEngine | [DirectJDKLog.java : 173]  -  Starting Servlet engine: [Apache Tomcat/9.0.30]
2020.07.30 22:53:25.879 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | [/] | [DirectJDKLog.java : 173]  -  Initializing Spring embedded WebApplicationContext
2020.07.30 22:53:25.880 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | ContextLoader | [ServletWebServerApplicationContext.java : 278]  -  Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2020.07.30 22:53:25.880 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | ContextLoader | [ServletWebServerApplicationContext.java : 284]  -  Root WebApplicationContext: initialization completed in 5796 ms
2020.07.30 22:53:26.986 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | HikariDataSource | [HikariDataSource.java : 110]  -  HikariPool-1 - Starting...
2020.07.30 22:53:27.549 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | HikariDataSource | [HikariDataSource.java : 123]  -  HikariPool-1 - Start completed.
2020.07.30 22:53:27.564 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | H2ConsoleAutoConfiguration | [H2ConsoleAutoConfiguration.java : 74]  -  H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:cove'
2020.07.30 22:53:28.854 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | NfcRequestFilter | [NfcRequestFilter.java : 79]  -  Enabled content-type filtering to NFC for: text/html; application/json; application/hal+json; text/plain
2020.07.30 22:53:28.856 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcRequestFilter | [GenericFilterBean.java : 242]  -  Filter 'nfcRequestFilter' configured for use
2020.07.30 22:53:28.857 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | ForwardedHeaderFilter | [GenericFilterBean.java : 242]  -  Filter 'forwardedHeaderFilter' configured for use
2020.07.30 22:53:28.863 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | RequestResponseLoggingFilter | [RequestResponseLoggingFilter.java : 63]  -  Initializing filter: de.muenchen.cove.security.RequestResponseLoggingFilter@1400f9ca
2020.07.30 22:53:28.864 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | CacheControlConfiguration$CacheControlFilter | [GenericFilterBean.java : 242]  -  Filter 'cacheControlFilter' configured for use
2020.07.30 22:53:29.204 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | VersionPrinter | [Slf4jLog.java : 49]  -  Flyway Community Edition 6.0.8 by Redgate
2020.07.30 22:53:29.273 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | DatabaseFactory | [Slf4jLog.java : 49]  -  Database: jdbc:h2:mem:cove (H2 1.4)
2020.07.30 22:53:29.944 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | WARN | [main] | Database | [Slf4jLog.java : 53]  -  Flyway upgrade recommended: H2 1.4.200 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 1.4.199.
2020.07.30 22:53:30.134 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | DbValidate | [Slf4jLog.java : 49]  -  Successfully validated 6 migrations (execution time 00:00.083s)
2020.07.30 22:53:30.198 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | JdbcTableSchemaHistory | [Slf4jLog.java : 49]  -  Creating Schema History table "PUBLIC"."flyway_schema_history" ...
2020.07.30 22:53:30.360 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | DbMigrate | [Slf4jLog.java : 49]  -  Current version of schema "PUBLIC": << Empty Schema >>
2020.07.30 22:53:30.404 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | DbMigrate | [Slf4jLog.java : 49]  -  Migrating schema "PUBLIC" to version 1.0 - DDLInit
2020.07.30 22:53:30.573 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | DbMigrate | [Slf4jLog.java : 49]  -  Migrating schema "PUBLIC" to version 2.0 - DML InitData
2020.07.30 22:53:30.733 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | DbMigrate | [Slf4jLog.java : 49]  -  Migrating schema "PUBLIC" to version 3.0 - DDLUpdate
2020.07.30 22:53:30.912 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | DbMigrate | [Slf4jLog.java : 49]  -  Migrating schema "PUBLIC" to version 3.1 - DDLUpdate VERSION
2020.07.30 22:53:30.973 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | DbMigrate | [Slf4jLog.java : 49]  -  Migrating schema "PUBLIC" to version 3.2 - DATE to TIMESTAMP
2020.07.30 22:53:31.114 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | DbMigrate | [Slf4jLog.java : 49]  -  Migrating schema "PUBLIC" to version 4.0 - DML Insert
2020.07.30 22:53:31.152 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | DbMigrate | [Slf4jLog.java : 49]  -  Successfully applied 6 migrations to schema "PUBLIC" (execution time 00:00.809s)
2020.07.30 22:53:31.478 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | LogHelper | [LogHelper.java : 31]  -  HHH000204: Processing PersistenceUnitInfo [name: default]
2020.07.30 22:53:31.690 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | Version | [Version.java : 46]  -  HHH000412: Hibernate Core {5.4.10.Final}
2020.07.30 22:53:31.936 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | Version | [JavaReflectionManager.java : 49]  -  HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020.07.30 22:53:32.152 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | Dialect | [Dialect.java : 172]  -  HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020.07.30 22:53:33.788 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | Version | [Version.java : 27]  -  HSEARCH000034: Hibernate Search 5.11.0.Final
2020.07.30 22:53:34.785 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | JtaPlatformInitiator | [JtaPlatformInitiator.java : 52]  -  HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020.07.30 22:53:34.991 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | DirectoryProviderHelper | [DirectoryProviderHelper.java : 139]  -  HSEARCH000041: Index directory not found, creating: './index/default'
2020.07.30 22:53:34.992 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | DirectoryProviderHelper | [DirectoryProviderHelper.java : 139]  -  HSEARCH000041: Index directory not found, creating: './index/default/de.muenchen.cove.domain.Person'
2020.07.30 22:53:35.829 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | WARN | [main] | LuceneEmbeddedIndexFamilyImpl | [LuceneEmbeddedIndexFamilyImpl.java : 71]  -  HSEARCH000075: Configuration setting hibernate.search.lucene_version was not specified: using LUCENE_CURRENT.
2020.07.30 22:53:36.004 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | LocalContainerEntityManagerFactoryBean | [AbstractEntityManagerFactoryBean.java : 416]  -  Initialized JPA EntityManagerFactory for persistence unit 'default'
2020.07.30 22:53:38.343 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | WARN | [main] | JpaBaseConfiguration$JpaWebConfiguration | [JpaBaseConfiguration.java : 220]  -  spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020.07.30 22:53:38.647 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | UserDetailsServiceAutoConfiguration | [UserDetailsServiceAutoConfiguration.java : 86]  -  

Using generated security password: 5a6895eb-b595-4cf3-a2ee-752afd4e5f3d

2020.07.30 22:53:39.362 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | DefaultSecurityFilterChain | [DefaultSecurityFilterChain.java : 43]  -  Creating filter chain: Ant [pattern='/**'], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1dc3877b, org.springframework.security.web.context.SecurityContextPersistenceFilter@338616b1, org.springframework.security.web.header.HeaderWriterFilter@2ed7bb9c, org.springframework.security.web.authentication.logout.LogoutFilter@37d8bfd2, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@4fa32034, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@160a6e85, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@725842fb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@61ea2440, org.springframework.security.web.session.SessionManagementFilter@c65fc99, org.springframework.security.web.access.ExceptionTranslationFilter@5134eff3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@78e8603a]
2020.07.30 22:53:39.841 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | ThreadPoolTaskExecutor | [ExecutorConfigurationSupport.java : 171]  -  Initializing ExecutorService 'applicationTaskExecutor'
2020.07.30 22:53:39.922 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | RequestMappingHandlerAdapter | [RequestMappingHandlerAdapter.java : 615]  -  ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2020.07.30 22:53:40.126 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | RequestMappingHandlerMapping | [AbstractHandlerMethodMapping.java : 351]  -  9 mappings in 'requestMappingHandlerMapping'
2020.07.30 22:53:40.229 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | SimpleUrlHandlerMapping | [SimpleUrlHandlerMapping.java : 173]  -  Patterns [/webjars/**, /**, /explorer/**] in 'resourceHandlerMapping'
2020.07.30 22:53:40.258 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | ExceptionHandlerExceptionResolver | [ExceptionHandlerExceptionResolver.java : 297]  -  ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2020.07.30 22:53:42.691 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | Http11NioProtocol | [DirectJDKLog.java : 173]  -  Starting ProtocolHandler ["http-nio-auto-1"]
2020.07.30 22:53:42.735 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | TomcatWebServer | [TomcatWebServer.java : 204]  -  Tomcat started on port(s): 35863 (http) with context path ''
2020.07.30 22:53:42.863 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | TomcatWebServer | [TomcatWebServer.java : 92]  -  Tomcat initialized with port(s): 0 (http)
2020.07.30 22:53:42.865 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | Http11NioProtocol | [DirectJDKLog.java : 173]  -  Initializing ProtocolHandler ["http-nio-auto-2"]
2020.07.30 22:53:42.866 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | StandardService | [DirectJDKLog.java : 173]  -  Starting service [Tomcat]
2020.07.30 22:53:42.867 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | StandardEngine | [DirectJDKLog.java : 173]  -  Starting Servlet engine: [Apache Tomcat/9.0.30]
2020.07.30 22:53:42.871 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | [/] | [DirectJDKLog.java : 173]  -  Initializing Spring embedded WebApplicationContext
2020.07.30 22:53:42.871 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | ContextLoader | [ServletWebServerApplicationContext.java : 278]  -  Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2020.07.30 22:53:42.872 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | ContextLoader | [ServletWebServerApplicationContext.java : 284]  -  Root WebApplicationContext: initialization completed in 131 ms
2020.07.30 22:53:42.911 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | EndpointLinksResolver | [EndpointLinksResolver.java : 58]  -  Exposing 3 endpoint(s) beneath base path '/actuator'
2020.07.30 22:53:42.962 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | RequestMappingHandlerMapping | [AbstractHandlerMethodMapping.java : 351]  -  1 mappings in 'requestMappingHandlerMapping'
2020.07.30 22:53:42.975 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | SimpleUrlHandlerMapping | [SimpleUrlHandlerMapping.java : 173]  -  Patterns [/webjars/**, /**, /explorer/**] in 'resourceHandlerMapping'
2020.07.30 22:53:42.998 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | RequestMappingHandlerAdapter | [RequestMappingHandlerAdapter.java : 615]  -  ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2020.07.30 22:53:43.009 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | Http11NioProtocol | [DirectJDKLog.java : 173]  -  Starting ProtocolHandler ["http-nio-auto-2"]
2020.07.30 22:53:43.054 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | TomcatWebServer | [TomcatWebServer.java : 204]  -  Tomcat started on port(s): 39091 (http) with context path ''
2020.07.30 22:53:43.062 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | PersonControllerTest | [StartupInfoLogger.java : 61]  -  Started PersonControllerTest in 24.856 seconds (JVM running for 26.65)
2020.07.30 22:53:43.116 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | SearchConfiguration | [SearchConfiguration.java : 33]  -  Starting the index for Lucene-Search
Hibernate: 
    select
        count(*) as y0_ 
    from
        PERSON this_
2020.07.30 22:53:43.298 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [Hibernate Search: identifierloader-1] | SimpleIndexingProgressMonitor | [SimpleIndexingProgressMonitor.java : 73]  -  HSEARCH000027: Going to reindex 22 entities
Hibernate: 
    select
        this_.id as y0_ 
    from
        PERSON this_
Hibernate: 
    select
        this_.id as id1_1_0_,
        this_.CREATED_DATE as CREATED_2_1_0_,
        this_.KPBIS as KPBIS3_1_0_,
        this_.AKTUELLER_BEARBEITER as AKTUELLE4_1_0_,
        this_.arbeitsinfos as arbeitsi5_1_0_,
        this_.doku as doku6_1_0_,
        this_.ENDTELEFONAT as ENDTELEF7_1_0_,
        this_.ERSTKONTAKT as ERSTKONT8_1_0_,
        this_.geburtsdatum as geburtsd9_1_0_,
        this_.haushalt as haushal10_1_0_,
        this_.kategorie as kategor11_1_0_,
        this_.kommentare as komment12_1_0_,
        this_.land as land13_1_0_,
        this_.landkreis as landkre14_1_0_,
        this_.LETZTERKONTAKT as LETZTER15_1_0_,
        this_.mail as mail16_1_0_,
        this_.medEinrichtung as medEinr17_1_0_,
        this_.mobile as mobile18_1_0_,
        this_.name as name19_1_0_,
        this_.ort as ort20_1_0_,
        this_.ortsteil as ortstei21_1_0_,
        this_.plz as plz22_1_0_,
        this_.quarantaene_ende as quarant23_1_0_,
        this_.quarantaene_start as quarant24_1_0_,
        this_.standort as standor25_1_0_,
        this_.strasse as strasse26_1_0_,
        this_.telefon as telefon27_1_0_,
        this_.telefonnotizen as telefon28_1_0_,
        this_.VERSION as VERSION29_1_0_,
        this_.vorname as vorname30_1_0_ 
    from
        PERSON this_ 
    where
        this_.id in (
            ?, ?
        )
Hibernate: 
    select
        this_.id as id1_1_0_,
        this_.CREATED_DATE as CREATED_2_1_0_,
        this_.KPBIS as KPBIS3_1_0_,
        this_.AKTUELLER_BEARBEITER as AKTUELLE4_1_0_,
        this_.arbeitsinfos as arbeitsi5_1_0_,
        this_.doku as doku6_1_0_,
        this_.ENDTELEFONAT as ENDTELEF7_1_0_,
        this_.ERSTKONTAKT as ERSTKONT8_1_0_,
        this_.geburtsdatum as geburtsd9_1_0_,
        this_.haushalt as haushal10_1_0_,
        this_.kategorie as kategor11_1_0_,
        this_.kommentare as komment12_1_0_,
        this_.land as land13_1_0_,
        this_.landkreis as landkre14_1_0_,
        this_.LETZTERKONTAKT as LETZTER15_1_0_,
        this_.mail as mail16_1_0_,
        this_.medEinrichtung as medEinr17_1_0_,
        this_.mobile as mobile18_1_0_,
        this_.name as name19_1_0_,
        this_.ort as ort20_1_0_,
        this_.ortsteil as ortstei21_1_0_,
        this_.plz as plz22_1_0_,
        this_.quarantaene_ende as quarant23_1_0_,
        this_.quarantaene_start as quarant24_1_0_,
        this_.standort as standor25_1_0_,
        this_.strasse as strasse26_1_0_,
        this_.telefon as telefon27_1_0_,
        this_.telefonnotizen as telefon28_1_0_,
        this_.VERSION as VERSION29_1_0_,
        this_.vorname as vorname30_1_0_ 
    from
        PERSON this_ 
    where
        this_.id in (
            ?, ?, ?, ?, ?, ?, ?, ?, ?, ?
        )
Hibernate: 
    select
        this_.id as id1_1_0_,
        this_.CREATED_DATE as CREATED_2_1_0_,
        this_.KPBIS as KPBIS3_1_0_,
        this_.AKTUELLER_BEARBEITER as AKTUELLE4_1_0_,
        this_.arbeitsinfos as arbeitsi5_1_0_,
        this_.doku as doku6_1_0_,
        this_.ENDTELEFONAT as ENDTELEF7_1_0_,
        this_.ERSTKONTAKT as ERSTKONT8_1_0_,
        this_.geburtsdatum as geburtsd9_1_0_,
        this_.haushalt as haushal10_1_0_,
        this_.kategorie as kategor11_1_0_,
        this_.kommentare as komment12_1_0_,
        this_.land as land13_1_0_,
        this_.landkreis as landkre14_1_0_,
        this_.LETZTERKONTAKT as LETZTER15_1_0_,
        this_.mail as mail16_1_0_,
        this_.medEinrichtung as medEinr17_1_0_,
        this_.mobile as mobile18_1_0_,
        this_.name as name19_1_0_,
        this_.ort as ort20_1_0_,
        this_.ortsteil as ortstei21_1_0_,
        this_.plz as plz22_1_0_,
        this_.quarantaene_ende as quarant23_1_0_,
        this_.quarantaene_start as quarant24_1_0_,
        this_.standort as standor25_1_0_,
        this_.strasse as strasse26_1_0_,
        this_.telefon as telefon27_1_0_,
        this_.telefonnotizen as telefon28_1_0_,
        this_.VERSION as VERSION29_1_0_,
        this_.vorname as vorname30_1_0_ 
    from
        PERSON this_ 
    where
        this_.id in (
            ?, ?, ?, ?, ?, ?, ?, ?, ?, ?
        )
2020.07.30 22:53:44.305 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | SimpleIndexingProgressMonitor | [SimpleIndexingProgressMonitor.java : 78]  -  HSEARCH000028: Reindexed 22 entities
2020.07.30 22:53:44.306 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | SearchConfiguration | [SearchConfiguration.java : 37]  -  Finished index for Lucene-Search (Total Duration: 1190 ms)
2020.07.30 22:53:44.334 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | TransactionContext | [TransactionContext.java : 107]  -  Began transaction (1) for test context [DefaultTestContext@58eac00e testClass = PersonControllerTest, testInstance = de.muenchen.cove.rest.PersonControllerTest@2a87ba34, testMethod = test_getDailyCallStatistik@PersonControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6acffb2d testClass = PersonControllerTest, locations = '{}', classes = '{class de.muenchen.cove.MicroServiceApplication, class de.muenchen.cove.MicroServiceApplication}', contextInitializerClasses = '[]', activeProfiles = '{test, no-security}', propertySourceLocations = '{}', propertySourceProperties = '{spring.datasource.url=jdbc:h2:mem:cove;DB_CLOSE_ON_EXIT=FALSE, tomcat.gracefulshutdown.pre-wait-seconds=0, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@21e20ad5, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@24b4d544, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@65f2f9b0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@59d77850], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@411ade18]; rollback [true]
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    update
        KONTAKT 
    set
        personid=null 
    where
        personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    update
        KONTAKT 
    set
        personid=null 
    where
        personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie='I' 
        and (
            person0_.AKTUELLER_BEARBEITER is null 
            or person0_.AKTUELLER_BEARBEITER=''
        ) 
        and (
            person0_.ENDTELEFONAT is null
        ) 
        and (
            person0_.LETZTERKONTAKT<? 
            or person0_.LETZTERKONTAKT is null
        )
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie='I' 
        and (
            person0_.ENDTELEFONAT is null
        )
2020.07.30 22:53:44.911 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | TransactionContext | [TransactionContext.java : 139]  -  Rolled back transaction for test: [DefaultTestContext@58eac00e testClass = PersonControllerTest, testInstance = de.muenchen.cove.rest.PersonControllerTest@2a87ba34, testMethod = test_getDailyCallStatistik@PersonControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6acffb2d testClass = PersonControllerTest, locations = '{}', classes = '{class de.muenchen.cove.MicroServiceApplication, class de.muenchen.cove.MicroServiceApplication}', contextInitializerClasses = '[]', activeProfiles = '{test, no-security}', propertySourceLocations = '{}', propertySourceProperties = '{spring.datasource.url=jdbc:h2:mem:cove;DB_CLOSE_ON_EXIT=FALSE, tomcat.gracefulshutdown.pre-wait-seconds=0, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@21e20ad5, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@24b4d544, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@65f2f9b0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@59d77850], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false]]
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    update
        KONTAKT 
    set
        personid=null 
    where
        personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    update
        KONTAKT 
    set
        personid=null 
    where
        personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        KONTAKT 
    where
        id=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
2020.07.30 22:53:45.220 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | ERROR | [main] | PersonController | [PersonController.java : 204]  -  #generateEndgespraechAnruferListeFuerDatum Anzahl ist kleiner oder gleich 0.
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie='I' 
        and (
            person0_.AKTUELLER_BEARBEITER is null 
            or person0_.AKTUELLER_BEARBEITER=''
        ) 
        and (
            person0_.ENDTELEFONAT is null
        ) 
        and (
            person0_.LETZTERKONTAKT<? 
            or person0_.LETZTERKONTAKT is null
        )
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie='I' 
        and (
            person0_.ENDTELEFONAT is null
        )
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie='I' 
        and (
            person0_.AKTUELLER_BEARBEITER is null 
            or person0_.AKTUELLER_BEARBEITER=''
        ) 
        and (
            person0_.LETZTERKONTAKT<CURRENT_TIMESTAMP 
            or person0_.LETZTERKONTAKT is null
        ) 
        and (
            person0_.ENDTELEFONAT is null
        ) 
    order by
        person0_.LETZTERKONTAKT asc nulls last limit ?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie='I' 
        and (
            person0_.AKTUELLER_BEARBEITER is null 
            or person0_.AKTUELLER_BEARBEITER=''
        ) 
        and (
            person0_.LETZTERKONTAKT<CURRENT_TIMESTAMP 
            or person0_.LETZTERKONTAKT is null
        ) 
        and (
            person0_.ENDTELEFONAT is null
        )
Hibernate: 
    update
        PERSON 
    set
        CREATED_DATE=?,
        KPBIS=?,
        AKTUELLER_BEARBEITER=?,
        arbeitsinfos=?,
        doku=?,
        ENDTELEFONAT=?,
        ERSTKONTAKT=?,
        geburtsdatum=?,
        haushalt=?,
        kategorie=?,
        kommentare=?,
        land=?,
        landkreis=?,
        LETZTERKONTAKT=?,
        mail=?,
        medEinrichtung=?,
        mobile=?,
        name=?,
        ort=?,
        ortsteil=?,
        plz=?,
        quarantaene_ende=?,
        quarantaene_start=?,
        standort=?,
        strasse=?,
        telefon=?,
        telefonnotizen=?,
        VERSION=?,
        vorname=? 
    where
        id=? 
        and VERSION=?
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_ 
    where
        (
            person0_.kategorie='KP' 
            or person0_.kategorie='I'
        ) 
        and (
            person0_.ENDTELEFONAT is null
        ) 
        and person0_.quarantaene_ende<=? limit ?
2020.07.30 22:53:46.054 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | WARN | [main] | PersonController | [PersonController.java : 217]  -  #generateEndgespraechAnruferListeFuerDatum Keine Endgespräche für Datum gefunden.
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie='I' 
        and (
            person0_.AKTUELLER_BEARBEITER is null 
            or person0_.AKTUELLER_BEARBEITER=''
        ) 
        and (
            person0_.LETZTERKONTAKT<CURRENT_TIMESTAMP 
            or person0_.LETZTERKONTAKT is null
        ) 
        and (
            person0_.ENDTELEFONAT is null
        ) 
    order by
        person0_.LETZTERKONTAKT asc nulls last limit ?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie='I' 
        and (
            person0_.AKTUELLER_BEARBEITER is null 
            or person0_.AKTUELLER_BEARBEITER=''
        ) 
        and (
            person0_.LETZTERKONTAKT<CURRENT_TIMESTAMP 
            or person0_.LETZTERKONTAKT is null
        ) 
        and (
            person0_.ENDTELEFONAT is null
        )
Hibernate: 
    update
        PERSON 
    set
        CREATED_DATE=?,
        KPBIS=?,
        AKTUELLER_BEARBEITER=?,
        arbeitsinfos=?,
        doku=?,
        ENDTELEFONAT=?,
        ERSTKONTAKT=?,
        geburtsdatum=?,
        haushalt=?,
        kategorie=?,
        kommentare=?,
        land=?,
        landkreis=?,
        LETZTERKONTAKT=?,
        mail=?,
        medEinrichtung=?,
        mobile=?,
        name=?,
        ort=?,
        ortsteil=?,
        plz=?,
        quarantaene_ende=?,
        quarantaene_start=?,
        standort=?,
        strasse=?,
        telefon=?,
        telefonnotizen=?,
        VERSION=?,
        vorname=? 
    where
        id=? 
        and VERSION=?
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie=? 
        and (
            person0_.ENDTELEFONAT is null
        ) 
        and (
            person0_.AKTUELLER_BEARBEITER is null 
            or person0_.AKTUELLER_BEARBEITER=''
        ) 
        and (
            person0_.LETZTERKONTAKT<=CURRENT_TIMESTAMP 
            or person0_.LETZTERKONTAKT is null
        ) 
        and (
            person0_.quarantaene_ende>=? 
            or ? is null
        ) 
        and (
            person0_.quarantaene_ende is not null
        ) 
    order by
        person0_.quarantaene_ende ASC limit ?
2020.07.30 22:53:46.616 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | ERROR | [main] | PersonController | [PersonController.java : 322]  -  #handleReservierePersonFuerGespraech Keine nächste Person gefunden.
2020.07.30 22:53:46.621 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | TransactionContext | [TransactionContext.java : 107]  -  Began transaction (1) for test context [DefaultTestContext@58eac00e testClass = PersonControllerTest, testInstance = de.muenchen.cove.rest.PersonControllerTest@5fe31628, testMethod = testBericht@PersonControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6acffb2d testClass = PersonControllerTest, locations = '{}', classes = '{class de.muenchen.cove.MicroServiceApplication, class de.muenchen.cove.MicroServiceApplication}', contextInitializerClasses = '[]', activeProfiles = '{test, no-security}', propertySourceLocations = '{}', propertySourceProperties = '{spring.datasource.url=jdbc:h2:mem:cove;DB_CLOSE_ON_EXIT=FALSE, tomcat.gracefulshutdown.pre-wait-seconds=0, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@21e20ad5, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@24b4d544, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@65f2f9b0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@59d77850], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@411ade18]; rollback [true]
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie is null
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    left outer join
        PROBE proben1_ 
            on person0_.id=proben1_.PERSONID 
    where
        proben1_.ergebnis=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    left outer join
        PROBE proben1_ 
            on person0_.id=proben1_.PERSONID 
    where
        proben1_.ergebnis=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    left outer join
        PROBE proben1_ 
            on person0_.id=proben1_.PERSONID 
    where
        proben1_.ergebnis=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie=? 
        and (
            person0_.quarantaene_ende>=CURRENT_DATE 
            or person0_.quarantaene_ende is null
        )
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie=? 
        and (
            person0_.quarantaene_ende>=CURRENT_DATE 
            or person0_.quarantaene_ende is null
        )
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.medEinrichtung=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.medEinrichtung=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.medEinrichtung=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.medEinrichtung=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.medEinrichtung=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.medEinrichtung is null
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie='I' 
        and (
            person0_.KPBIS is not null
        )
2020.07.30 22:53:46.712 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | TransactionContext | [TransactionContext.java : 139]  -  Rolled back transaction for test: [DefaultTestContext@58eac00e testClass = PersonControllerTest, testInstance = de.muenchen.cove.rest.PersonControllerTest@5fe31628, testMethod = testBericht@PersonControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6acffb2d testClass = PersonControllerTest, locations = '{}', classes = '{class de.muenchen.cove.MicroServiceApplication, class de.muenchen.cove.MicroServiceApplication}', contextInitializerClasses = '[]', activeProfiles = '{test, no-security}', propertySourceLocations = '{}', propertySourceProperties = '{spring.datasource.url=jdbc:h2:mem:cove;DB_CLOSE_ON_EXIT=FALSE, tomcat.gracefulshutdown.pre-wait-seconds=0, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@21e20ad5, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@24b4d544, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@65f2f9b0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@59d77850], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false]]
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
2020.07.30 22:53:47.787 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | ERROR | [main] | PersonController | [PersonController.java : 342]  -  #getCurrentUsername exception occured trying to get current username:
java.lang.NullPointerException: null
	at de.muenchen.cove.rest.PersonController.getCurrentUsername(PersonController.java:335)
	at de.muenchen.cove.rest.PersonController.generateNextDailyCall(PersonController.java:253)
	at de.muenchen.cove.rest.PersonController$$FastClassBySpringCGLIB$$29e16afa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at de.muenchen.cove.rest.PersonController$$EnhancerBySpringCGLIB$$2122b228.generateNextDailyCall(<generated>)
	at de.muenchen.cove.rest.PersonControllerTest.test_generateNextDailyCall_noUsername(PersonControllerTest.java:227)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
2020.07.30 22:53:47.788 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | ERROR | [main] | PersonController | [PersonController.java : 255]  -  #generateNextDailyCall couldn't figure out current username to set as a Bearbeiter...
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
2020.07.30 22:53:48.063 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | ERROR | [main] | PersonController | [PersonController.java : 342]  -  #getCurrentUsername exception occured trying to get current username:
java.lang.NullPointerException: null
	at de.muenchen.cove.rest.PersonController.getCurrentUsername(PersonController.java:335)
	at de.muenchen.cove.rest.PersonController.generateNextEndgespraechCall(PersonController.java:284)
	at de.muenchen.cove.rest.PersonController$$FastClassBySpringCGLIB$$29e16afa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at de.muenchen.cove.rest.PersonController$$EnhancerBySpringCGLIB$$2122b228.generateNextEndgespraechCall(<generated>)
	at de.muenchen.cove.rest.PersonControllerTest.test_generateNextEndgespraechCall_noUsername(PersonControllerTest.java:258)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
2020.07.30 22:53:48.064 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | ERROR | [main] | PersonController | [PersonController.java : 286]  -  #generateNextEndgespraechCall couldn't figure out current username to set as a Bearbeiter...
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_ 
    where
        (
            person0_.kategorie='KP' 
            or person0_.kategorie='I'
        ) 
        and (
            person0_.ENDTELEFONAT is null
        ) 
        and person0_.quarantaene_ende<=? limit ?
Hibernate: 
    update
        PERSON 
    set
        CREATED_DATE=?,
        KPBIS=?,
        AKTUELLER_BEARBEITER=?,
        arbeitsinfos=?,
        doku=?,
        ENDTELEFONAT=?,
        ERSTKONTAKT=?,
        geburtsdatum=?,
        haushalt=?,
        kategorie=?,
        kommentare=?,
        land=?,
        landkreis=?,
        LETZTERKONTAKT=?,
        mail=?,
        medEinrichtung=?,
        mobile=?,
        name=?,
        ort=?,
        ortsteil=?,
        plz=?,
        quarantaene_ende=?,
        quarantaene_start=?,
        standort=?,
        strasse=?,
        telefon=?,
        telefonnotizen=?,
        VERSION=?,
        vorname=? 
    where
        id=? 
        and VERSION=?
Hibernate: 
    update
        PERSON 
    set
        CREATED_DATE=?,
        KPBIS=?,
        AKTUELLER_BEARBEITER=?,
        arbeitsinfos=?,
        doku=?,
        ENDTELEFONAT=?,
        ERSTKONTAKT=?,
        geburtsdatum=?,
        haushalt=?,
        kategorie=?,
        kommentare=?,
        land=?,
        landkreis=?,
        LETZTERKONTAKT=?,
        mail=?,
        medEinrichtung=?,
        mobile=?,
        name=?,
        ort=?,
        ortsteil=?,
        plz=?,
        quarantaene_ende=?,
        quarantaene_start=?,
        standort=?,
        strasse=?,
        telefon=?,
        telefonnotizen=?,
        VERSION=?,
        vorname=? 
    where
        id=? 
        and VERSION=?
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_ 
    where
        (
            person0_.kategorie='KP' 
            or person0_.kategorie='I'
        ) 
        and (
            person0_.ENDTELEFONAT is null
        ) 
        and person0_.quarantaene_ende<=? limit ?
2020.07.30 22:53:48.713 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | WARN | [main] | PersonController | [PersonController.java : 217]  -  #generateEndgespraechAnruferListeFuerDatum Keine Endgespräche für Datum gefunden.
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_ 
    where
        person0_.AKTUELLER_BEARBEITER=?
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie is null
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    left outer join
        PROBE proben1_ 
            on person0_.id=proben1_.PERSONID 
    where
        proben1_.ergebnis=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    left outer join
        PROBE proben1_ 
            on person0_.id=proben1_.PERSONID 
    where
        proben1_.ergebnis=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    left outer join
        PROBE proben1_ 
            on person0_.id=proben1_.PERSONID 
    where
        proben1_.ergebnis=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie=? 
        and (
            person0_.quarantaene_ende>=CURRENT_DATE 
            or person0_.quarantaene_ende is null
        )
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie=? 
        and (
            person0_.quarantaene_ende>=CURRENT_DATE 
            or person0_.quarantaene_ende is null
        )
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.medEinrichtung=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.medEinrichtung=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.medEinrichtung=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.medEinrichtung=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.medEinrichtung=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.medEinrichtung is null
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie='I' 
        and (
            person0_.KPBIS is not null
        )
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_0_,
        person0_.CREATED_DATE as CREATED_2_1_0_,
        person0_.KPBIS as KPBIS3_1_0_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_0_,
        person0_.arbeitsinfos as arbeitsi5_1_0_,
        person0_.doku as doku6_1_0_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_0_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_0_,
        person0_.geburtsdatum as geburtsd9_1_0_,
        person0_.haushalt as haushal10_1_0_,
        person0_.kategorie as kategor11_1_0_,
        person0_.kommentare as komment12_1_0_,
        person0_.land as land13_1_0_,
        person0_.landkreis as landkre14_1_0_,
        person0_.LETZTERKONTAKT as LETZTER15_1_0_,
        person0_.mail as mail16_1_0_,
        person0_.medEinrichtung as medEinr17_1_0_,
        person0_.mobile as mobile18_1_0_,
        person0_.name as name19_1_0_,
        person0_.ort as ort20_1_0_,
        person0_.ortsteil as ortstei21_1_0_,
        person0_.plz as plz22_1_0_,
        person0_.quarantaene_ende as quarant23_1_0_,
        person0_.quarantaene_start as quarant24_1_0_,
        person0_.standort as standor25_1_0_,
        person0_.strasse as strasse26_1_0_,
        person0_.telefon as telefon27_1_0_,
        person0_.telefonnotizen as telefon28_1_0_,
        person0_.VERSION as VERSION29_1_0_,
        person0_.vorname as vorname30_1_0_ 
    from
        PERSON person0_ 
    where
        person0_.id=?
Hibernate: 
    select
        person0_.id as id1_1_0_,
        person0_.CREATED_DATE as CREATED_2_1_0_,
        person0_.KPBIS as KPBIS3_1_0_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_0_,
        person0_.arbeitsinfos as arbeitsi5_1_0_,
        person0_.doku as doku6_1_0_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_0_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_0_,
        person0_.geburtsdatum as geburtsd9_1_0_,
        person0_.haushalt as haushal10_1_0_,
        person0_.kategorie as kategor11_1_0_,
        person0_.kommentare as komment12_1_0_,
        person0_.land as land13_1_0_,
        person0_.landkreis as landkre14_1_0_,
        person0_.LETZTERKONTAKT as LETZTER15_1_0_,
        person0_.mail as mail16_1_0_,
        person0_.medEinrichtung as medEinr17_1_0_,
        person0_.mobile as mobile18_1_0_,
        person0_.name as name19_1_0_,
        person0_.ort as ort20_1_0_,
        person0_.ortsteil as ortstei21_1_0_,
        person0_.plz as plz22_1_0_,
        person0_.quarantaene_ende as quarant23_1_0_,
        person0_.quarantaene_start as quarant24_1_0_,
        person0_.standort as standor25_1_0_,
        person0_.strasse as strasse26_1_0_,
        person0_.telefon as telefon27_1_0_,
        person0_.telefonnotizen as telefon28_1_0_,
        person0_.VERSION as VERSION29_1_0_,
        person0_.vorname as vorname30_1_0_ 
    from
        PERSON person0_ 
    where
        person0_.id=?
Hibernate: 
    select
        person0_.id as id1_1_0_,
        person0_.CREATED_DATE as CREATED_2_1_0_,
        person0_.KPBIS as KPBIS3_1_0_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_0_,
        person0_.arbeitsinfos as arbeitsi5_1_0_,
        person0_.doku as doku6_1_0_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_0_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_0_,
        person0_.geburtsdatum as geburtsd9_1_0_,
        person0_.haushalt as haushal10_1_0_,
        person0_.kategorie as kategor11_1_0_,
        person0_.kommentare as komment12_1_0_,
        person0_.land as land13_1_0_,
        person0_.landkreis as landkre14_1_0_,
        person0_.LETZTERKONTAKT as LETZTER15_1_0_,
        person0_.mail as mail16_1_0_,
        person0_.medEinrichtung as medEinr17_1_0_,
        person0_.mobile as mobile18_1_0_,
        person0_.name as name19_1_0_,
        person0_.ort as ort20_1_0_,
        person0_.ortsteil as ortstei21_1_0_,
        person0_.plz as plz22_1_0_,
        person0_.quarantaene_ende as quarant23_1_0_,
        person0_.quarantaene_start as quarant24_1_0_,
        person0_.standort as standor25_1_0_,
        person0_.strasse as strasse26_1_0_,
        person0_.telefon as telefon27_1_0_,
        person0_.telefonnotizen as telefon28_1_0_,
        person0_.VERSION as VERSION29_1_0_,
        person0_.vorname as vorname30_1_0_ 
    from
        PERSON person0_ 
    where
        person0_.id=?
Hibernate: 
    select
        this_.id as id1_1_0_,
        this_.CREATED_DATE as CREATED_2_1_0_,
        this_.KPBIS as KPBIS3_1_0_,
        this_.AKTUELLER_BEARBEITER as AKTUELLE4_1_0_,
        this_.arbeitsinfos as arbeitsi5_1_0_,
        this_.doku as doku6_1_0_,
        this_.ENDTELEFONAT as ENDTELEF7_1_0_,
        this_.ERSTKONTAKT as ERSTKONT8_1_0_,
        this_.geburtsdatum as geburtsd9_1_0_,
        this_.haushalt as haushal10_1_0_,
        this_.kategorie as kategor11_1_0_,
        this_.kommentare as komment12_1_0_,
        this_.land as land13_1_0_,
        this_.landkreis as landkre14_1_0_,
        this_.LETZTERKONTAKT as LETZTER15_1_0_,
        this_.mail as mail16_1_0_,
        this_.medEinrichtung as medEinr17_1_0_,
        this_.mobile as mobile18_1_0_,
        this_.name as name19_1_0_,
        this_.ort as ort20_1_0_,
        this_.ortsteil as ortstei21_1_0_,
        this_.plz as plz22_1_0_,
        this_.quarantaene_ende as quarant23_1_0_,
        this_.quarantaene_start as quarant24_1_0_,
        this_.standort as standor25_1_0_,
        this_.strasse as strasse26_1_0_,
        this_.telefon as telefon27_1_0_,
        this_.telefonnotizen as telefon28_1_0_,
        this_.VERSION as VERSION29_1_0_,
        this_.vorname as vorname30_1_0_ 
    from
        PERSON this_ 
    where
        (
            this_.id in (
                ?, ?
            )
        )
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_0_,
        person0_.CREATED_DATE as CREATED_2_1_0_,
        person0_.KPBIS as KPBIS3_1_0_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_0_,
        person0_.arbeitsinfos as arbeitsi5_1_0_,
        person0_.doku as doku6_1_0_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_0_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_0_,
        person0_.geburtsdatum as geburtsd9_1_0_,
        person0_.haushalt as haushal10_1_0_,
        person0_.kategorie as kategor11_1_0_,
        person0_.kommentare as komment12_1_0_,
        person0_.land as land13_1_0_,
        person0_.landkreis as landkre14_1_0_,
        person0_.LETZTERKONTAKT as LETZTER15_1_0_,
        person0_.mail as mail16_1_0_,
        person0_.medEinrichtung as medEinr17_1_0_,
        person0_.mobile as mobile18_1_0_,
        person0_.name as name19_1_0_,
        person0_.ort as ort20_1_0_,
        person0_.ortsteil as ortstei21_1_0_,
        person0_.plz as plz22_1_0_,
        person0_.quarantaene_ende as quarant23_1_0_,
        person0_.quarantaene_start as quarant24_1_0_,
        person0_.standort as standor25_1_0_,
        person0_.strasse as strasse26_1_0_,
        person0_.telefon as telefon27_1_0_,
        person0_.telefonnotizen as telefon28_1_0_,
        person0_.VERSION as VERSION29_1_0_,
        person0_.vorname as vorname30_1_0_ 
    from
        PERSON person0_ 
    where
        person0_.id=?
Hibernate: 
    select
        person0_.id as id1_1_0_,
        person0_.CREATED_DATE as CREATED_2_1_0_,
        person0_.KPBIS as KPBIS3_1_0_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_0_,
        person0_.arbeitsinfos as arbeitsi5_1_0_,
        person0_.doku as doku6_1_0_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_0_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_0_,
        person0_.geburtsdatum as geburtsd9_1_0_,
        person0_.haushalt as haushal10_1_0_,
        person0_.kategorie as kategor11_1_0_,
        person0_.kommentare as komment12_1_0_,
        person0_.land as land13_1_0_,
        person0_.landkreis as landkre14_1_0_,
        person0_.LETZTERKONTAKT as LETZTER15_1_0_,
        person0_.mail as mail16_1_0_,
        person0_.medEinrichtung as medEinr17_1_0_,
        person0_.mobile as mobile18_1_0_,
        person0_.name as name19_1_0_,
        person0_.ort as ort20_1_0_,
        person0_.ortsteil as ortstei21_1_0_,
        person0_.plz as plz22_1_0_,
        person0_.quarantaene_ende as quarant23_1_0_,
        person0_.quarantaene_start as quarant24_1_0_,
        person0_.standort as standor25_1_0_,
        person0_.strasse as strasse26_1_0_,
        person0_.telefon as telefon27_1_0_,
        person0_.telefonnotizen as telefon28_1_0_,
        person0_.VERSION as VERSION29_1_0_,
        person0_.vorname as vorname30_1_0_ 
    from
        PERSON person0_ 
    where
        person0_.id=?
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_ 
    where
        (
            person0_.kategorie='KP' 
            or person0_.kategorie='I'
        ) 
        and (
            person0_.ENDTELEFONAT is null
        ) 
        and person0_.quarantaene_ende<=? limit ?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        (
            person0_.kategorie='KP' 
            or person0_.kategorie='I'
        ) 
        and (
            person0_.ENDTELEFONAT is null
        ) 
        and person0_.quarantaene_ende<=?
Hibernate: 
    update
        PERSON 
    set
        CREATED_DATE=?,
        KPBIS=?,
        AKTUELLER_BEARBEITER=?,
        arbeitsinfos=?,
        doku=?,
        ENDTELEFONAT=?,
        ERSTKONTAKT=?,
        geburtsdatum=?,
        haushalt=?,
        kategorie=?,
        kommentare=?,
        land=?,
        landkreis=?,
        LETZTERKONTAKT=?,
        mail=?,
        medEinrichtung=?,
        mobile=?,
        name=?,
        ort=?,
        ortsteil=?,
        plz=?,
        quarantaene_ende=?,
        quarantaene_start=?,
        standort=?,
        strasse=?,
        telefon=?,
        telefonnotizen=?,
        VERSION=?,
        vorname=? 
    where
        id=? 
        and VERSION=?
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie='I' 
        and (
            person0_.AKTUELLER_BEARBEITER is null 
            or person0_.AKTUELLER_BEARBEITER=''
        ) 
        and (
            person0_.LETZTERKONTAKT<CURRENT_TIMESTAMP 
            or person0_.LETZTERKONTAKT is null
        ) 
        and (
            person0_.ENDTELEFONAT is null
        ) 
    order by
        person0_.LETZTERKONTAKT asc nulls last limit ?
2020.07.30 22:53:50.670 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | ERROR | [main] | PersonController | [PersonController.java : 322]  -  #handleReservierePersonFuerGespraech Keine nächste Person gefunden.
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 33.515 sec - in de.muenchen.cove.rest.PersonControllerTest
Running de.muenchen.cove.rest.PersonRepositoryTest
2020.07.30 22:53:50.693 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | SpringBootTestContextBootstrapper | [AbstractTestContextBootstrapper.java : 308]  -  Neither @ContextConfiguration nor @ContextHierarchy found for test class [de.muenchen.cove.rest.PersonRepositoryTest], using SpringBootContextLoader
2020.07.30 22:53:50.694 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | AbstractContextLoader | [AbstractContextLoader.java : 264]  -  Could not detect default resource locations for test class [de.muenchen.cove.rest.PersonRepositoryTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020.07.30 22:53:50.698 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | SpringBootTestContextBootstrapper | [AbstractTestContextBootstrapper.java : 248]  -  Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener]
2020.07.30 22:53:50.699 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | SpringBootTestContextBootstrapper | [AbstractTestContextBootstrapper.java : 177]  -  Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3b8efd5a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@50d686d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7532eec6, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4b7b9800, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7d3d818, org.springframework.test.context.transaction.TransactionalTestExecutionListener@69f3868f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@b5501a9, org.springframework.test.context.event.EventPublishingTestExecutionListener@1c79235b, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@5733bd4, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@70c1120b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@533a1df3, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@60c8f34, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1abdb9ba, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6214a1ac, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6142ed98]
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie=? 
        and (
            person0_.ENDTELEFONAT is null
        ) 
        and (
            person0_.AKTUELLER_BEARBEITER is null 
            or person0_.AKTUELLER_BEARBEITER=''
        ) 
        and (
            person0_.LETZTERKONTAKT<=CURRENT_TIMESTAMP 
            or person0_.LETZTERKONTAKT is null
        ) 
        and (
            person0_.quarantaene_ende>=? 
            or ? is null
        ) 
        and (
            person0_.quarantaene_ende is not null
        ) 
    order by
        person0_.quarantaene_ende ASC limit ?
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie=? 
        and (
            person0_.ENDTELEFONAT is null
        ) 
        and (
            person0_.AKTUELLER_BEARBEITER is null 
            or person0_.AKTUELLER_BEARBEITER=''
        ) 
        and (
            person0_.LETZTERKONTAKT<=CURRENT_TIMESTAMP 
            or person0_.LETZTERKONTAKT is null
        ) 
        and (
            person0_.quarantaene_ende>=? 
            or ? is null
        ) 
        and (
            person0_.quarantaene_ende is not null
        ) 
    order by
        person0_.quarantaene_ende ASC limit ?
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie=? 
        and (
            person0_.ENDTELEFONAT is null
        ) 
        and (
            person0_.AKTUELLER_BEARBEITER is null 
            or person0_.AKTUELLER_BEARBEITER=''
        ) 
        and (
            person0_.LETZTERKONTAKT<=CURRENT_TIMESTAMP 
            or person0_.LETZTERKONTAKT is null
        ) 
        and (
            person0_.quarantaene_ende>=? 
            or ? is null
        ) 
        and (
            person0_.quarantaene_ende is not null
        ) 
    order by
        person0_.quarantaene_ende ASC limit ?
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie=? 
        and (
            person0_.ENDTELEFONAT is null
        ) 
        and (
            person0_.AKTUELLER_BEARBEITER is null 
            or person0_.AKTUELLER_BEARBEITER=''
        ) 
        and (
            person0_.LETZTERKONTAKT<=CURRENT_TIMESTAMP 
            or person0_.LETZTERKONTAKT is null
        ) 
        and (
            person0_.quarantaene_ende>=? 
            or ? is null
        ) 
        and (
            person0_.quarantaene_ende is not null
        ) 
    order by
        person0_.quarantaene_ende ASC limit ?
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie=? 
        and (
            person0_.ENDTELEFONAT is null
        ) 
        and (
            person0_.AKTUELLER_BEARBEITER is null 
            or person0_.AKTUELLER_BEARBEITER=''
        ) 
        and (
            person0_.LETZTERKONTAKT<=CURRENT_TIMESTAMP 
            or person0_.LETZTERKONTAKT is null
        ) 
        and (
            person0_.quarantaene_ende>=? 
            or ? is null
        ) 
        and (
            person0_.quarantaene_ende is not null
        ) 
    order by
        person0_.quarantaene_ende ASC limit ?
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie='I' 
        and (
            person0_.ENDTELEFONAT is null
        )
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_ 
    where
        person0_.AKTUELLER_BEARBEITER=?
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        PERSON person0_ 
    where
        (
            person0_.kategorie='KP' 
            or person0_.kategorie='I'
        ) 
        and (
            person0_.ENDTELEFONAT is null
        ) 
        and person0_.quarantaene_ende<=?
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie=? 
        and (
            person0_.quarantaene_ende>=CURRENT_DATE 
            or person0_.quarantaene_ende is null
        )
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie=? 
        and (
            person0_.quarantaene_ende>=CURRENT_DATE 
            or person0_.quarantaene_ende is null
        )
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_ 
    where
        (
            person0_.kategorie='KP' 
            or person0_.kategorie='I'
        ) 
        and (
            person0_.ENDTELEFONAT is null
        ) 
        and person0_.quarantaene_ende<=?
2020.07.30 22:53:59.734 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | TransactionContext | [TransactionContext.java : 107]  -  Began transaction (1) for test context [DefaultTestContext@4a6d92cc testClass = PersonRepositoryTest, testInstance = de.muenchen.cove.rest.PersonRepositoryTest@42343be2, testMethod = testCounts@PersonRepositoryTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@306c00ba testClass = PersonRepositoryTest, locations = '{}', classes = '{class de.muenchen.cove.MicroServiceApplication, class de.muenchen.cove.MicroServiceApplication}', contextInitializerClasses = '[]', activeProfiles = '{test, no-security}', propertySourceLocations = '{}', propertySourceProperties = '{spring.datasource.url=jdbc:h2:mem:cove;DB_CLOSE_ON_EXIT=FALSE, tomcat.gracefulshutdown.pre-wait-seconds=0, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@21e20ad5, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@24b4d544, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@65f2f9b0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@59d77850], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@411ade18]; rollback [true]
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PROBE
        (PERSONID, CREATED_DATE, datum, ergebnis, kommentar) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.ortsteil=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.ortsteil=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.ortsteil=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    where
        person0_.ortsteil=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    left outer join
        PROBE proben1_ 
            on person0_.id=proben1_.PERSONID 
    where
        proben1_.ergebnis=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    left outer join
        PROBE proben1_ 
            on person0_.id=proben1_.PERSONID 
    where
        proben1_.ergebnis=?
Hibernate: 
    select
        count(person0_.id) as col_0_0_ 
    from
        PERSON person0_ 
    left outer join
        PROBE proben1_ 
            on person0_.id=proben1_.PERSONID 
    where
        proben1_.ergebnis=?
2020.07.30 22:53:59.803 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | TransactionContext | [TransactionContext.java : 139]  -  Rolled back transaction for test: [DefaultTestContext@4a6d92cc testClass = PersonRepositoryTest, testInstance = de.muenchen.cove.rest.PersonRepositoryTest@42343be2, testMethod = testCounts@PersonRepositoryTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@306c00ba testClass = PersonRepositoryTest, locations = '{}', classes = '{class de.muenchen.cove.MicroServiceApplication, class de.muenchen.cove.MicroServiceApplication}', contextInitializerClasses = '[]', activeProfiles = '{test, no-security}', propertySourceLocations = '{}', propertySourceProperties = '{spring.datasource.url=jdbc:h2:mem:cove;DB_CLOSE_ON_EXIT=FALSE, tomcat.gracefulshutdown.pre-wait-seconds=0, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@21e20ad5, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@24b4d544, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@65f2f9b0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@59d77850], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false]]
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    select
        kontakte0_.personid as personid7_0_0_,
        kontakte0_.id as id1_0_0_,
        kontakte0_.id as id1_0_1_,
        kontakte0_.CREATED_DATE as CREATED_2_0_1_,
        kontakte0_.kommentar as kommenta3_0_1_,
        kontakte0_.kontaktmit as kontaktm6_0_1_,
        kontakte0_.kontaktdatum as kontaktd4_0_1_,
        kontakte0_.kontakttyp as kontaktt5_0_1_,
        person1_.id as id1_1_2_,
        person1_.CREATED_DATE as CREATED_2_1_2_,
        person1_.KPBIS as KPBIS3_1_2_,
        person1_.AKTUELLER_BEARBEITER as AKTUELLE4_1_2_,
        person1_.arbeitsinfos as arbeitsi5_1_2_,
        person1_.doku as doku6_1_2_,
        person1_.ENDTELEFONAT as ENDTELEF7_1_2_,
        person1_.ERSTKONTAKT as ERSTKONT8_1_2_,
        person1_.geburtsdatum as geburtsd9_1_2_,
        person1_.haushalt as haushal10_1_2_,
        person1_.kategorie as kategor11_1_2_,
        person1_.kommentare as komment12_1_2_,
        person1_.land as land13_1_2_,
        person1_.landkreis as landkre14_1_2_,
        person1_.LETZTERKONTAKT as LETZTER15_1_2_,
        person1_.mail as mail16_1_2_,
        person1_.medEinrichtung as medEinr17_1_2_,
        person1_.mobile as mobile18_1_2_,
        person1_.name as name19_1_2_,
        person1_.ort as ort20_1_2_,
        person1_.ortsteil as ortstei21_1_2_,
        person1_.plz as plz22_1_2_,
        person1_.quarantaene_ende as quarant23_1_2_,
        person1_.quarantaene_start as quarant24_1_2_,
        person1_.standort as standor25_1_2_,
        person1_.strasse as strasse26_1_2_,
        person1_.telefon as telefon27_1_2_,
        person1_.telefonnotizen as telefon28_1_2_,
        person1_.VERSION as VERSION29_1_2_,
        person1_.vorname as vorname30_1_2_ 
    from
        KONTAKT kontakte0_ 
    left outer join
        PERSON person1_ 
            on kontakte0_.kontaktmit=person1_.id 
    where
        kontakte0_.personid=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PROBE 
    where
        PERSONID=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    delete 
    from
        PERSON 
    where
        id=? 
        and VERSION=?
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        PERSON
        (CREATED_DATE, KPBIS, AKTUELLER_BEARBEITER, arbeitsinfos, doku, ENDTELEFONAT, ERSTKONTAKT, geburtsdatum, haushalt, kategorie, kommentare, land, landkreis, LETZTERKONTAKT, mail, medEinrichtung, mobile, name, ort, ortsteil, plz, quarantaene_ende, quarantaene_start, standort, strasse, telefon, telefonnotizen, VERSION, vorname, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020.07.30 22:54:00.810 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | PersonRepositoryTest | [PersonRepositoryTest.java : 239]  -  saved Person > Person(super=BaseEntity(id=7d90e568-3c37-408a-8ed5-dd76d550a71b, createdDate=2020-07-30T22:53:59.885), version=0, name=5d4fe97a-d4d0-419a-b29b-4a5c4fb40055, vorname=0f1592ed-2a7d-4978-a03d-8c6ccc4c1986, kategorie=I, medEinrichtung=null, standort=null, geburtsdatum=null, strasse=null, plz=null, ort=null, landkreis=null, ortsteil=null, land=null, telefon=null, mobile=null, mail=null, kontakte=[], quarantaene=null, proben=[], arbeitsinfos=null, kommentare=null, haushalt=null, telefonnotizen=null, doku=null, KPBis=null, letzterKontakt=2020-07-30T22:52:59.877Z[Etc/UTC], erstKontaktErfolgtAm=null, endTelefonatErfolgtAm=null, aktuellerBearbeiter=null)
2020.07.30 22:54:00.811 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | PersonRepositoryTest | [PersonRepositoryTest.java : 239]  -  saved Person > Person(super=BaseEntity(id=3673bda5-78e9-43d7-ac2d-ebfd10cf902e, createdDate=2020-07-30T22:53:59.959), version=0, name=e2cce5d1-e1ee-4fdc-a273-0b8c262c4c3d, vorname=d72a3e44-702d-458a-b0e8-3c1fbf4540ca, kategorie=I, medEinrichtung=null, standort=null, geburtsdatum=null, strasse=null, plz=null, ort=null, landkreis=null, ortsteil=null, land=null, telefon=null, mobile=null, mail=null, kontakte=[], quarantaene=null, proben=[], arbeitsinfos=null, kommentare=null, haushalt=null, telefonnotizen=null, doku=null, KPBis=null, letzterKontakt=2020-07-30T22:54:59.877Z[Etc/UTC], erstKontaktErfolgtAm=null, endTelefonatErfolgtAm=null, aktuellerBearbeiter=null)
2020.07.30 22:54:00.811 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | PersonRepositoryTest | [PersonRepositoryTest.java : 239]  -  saved Person > Person(super=BaseEntity(id=1467bebd-858c-42c3-ba2c-d313adb59eba, createdDate=2020-07-30T22:54:00.024), version=0, name=a4aa044b-bdca-4840-b87f-8951a19f2ed1, vorname=8ec2a1ac-ede8-4db3-a06e-973313562c2d, kategorie=I, medEinrichtung=null, standort=null, geburtsdatum=null, strasse=null, plz=null, ort=null, landkreis=null, ortsteil=null, land=null, telefon=null, mobile=null, mail=null, kontakte=[], quarantaene=null, proben=[], arbeitsinfos=null, kommentare=null, haushalt=null, telefonnotizen=null, doku=null, KPBis=null, letzterKontakt=null, erstKontaktErfolgtAm=null, endTelefonatErfolgtAm=null, aktuellerBearbeiter=null)
2020.07.30 22:54:00.811 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | PersonRepositoryTest | [PersonRepositoryTest.java : 239]  -  saved Person > Person(super=BaseEntity(id=b39b3a2b-1b55-4c05-8abb-0341ac9e3eeb, createdDate=2020-07-30T22:54:00.096), version=0, name=9f95a7f8-4c4e-4279-9c90-59999a9b6c09, vorname=baae0414-3ebb-4a1b-8578-fcabff357a15, kategorie=I, medEinrichtung=null, standort=null, geburtsdatum=null, strasse=null, plz=null, ort=null, landkreis=null, ortsteil=null, land=null, telefon=null, mobile=null, mail=null, kontakte=[], quarantaene=null, proben=[], arbeitsinfos=null, kommentare=null, haushalt=null, telefonnotizen=null, doku=null, KPBis=null, letzterKontakt=null, erstKontaktErfolgtAm=null, endTelefonatErfolgtAm=null, aktuellerBearbeiter=Musterschueler)
2020.07.30 22:54:00.811 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | PersonRepositoryTest | [PersonRepositoryTest.java : 239]  -  saved Person > Person(super=BaseEntity(id=0e418c86-fe2d-4719-9e89-fd40d996dc91, createdDate=2020-07-30T22:54:00.174), version=0, name=6c59248c-fb6c-49c6-a899-b8857638082f, vorname=b675f59c-6238-4dd1-85a1-7da291c25841, kategorie=KP, medEinrichtung=null, standort=null, geburtsdatum=null, strasse=null, plz=null, ort=null, landkreis=null, ortsteil=null, land=null, telefon=null, mobile=null, mail=null, kontakte=[], quarantaene=null, proben=[], arbeitsinfos=null, kommentare=null, haushalt=null, telefonnotizen=null, doku=null, KPBis=null, letzterKontakt=null, erstKontaktErfolgtAm=null, endTelefonatErfolgtAm=null, aktuellerBearbeiter=null)
2020.07.30 22:54:00.811 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | PersonRepositoryTest | [PersonRepositoryTest.java : 239]  -  saved Person > Person(super=BaseEntity(id=46bdcb1c-6c26-4473-9d18-372a8bf2b4e5, createdDate=2020-07-30T22:54:00.244), version=0, name=5c7d4ca6-1d08-49af-bfbf-ad4150b3a3d3, vorname=c90a79f8-3cc4-4722-aecb-ee5a7d6792c5, kategorie=KP, medEinrichtung=null, standort=null, geburtsdatum=null, strasse=null, plz=null, ort=null, landkreis=null, ortsteil=null, land=null, telefon=null, mobile=null, mail=null, kontakte=[], quarantaene=null, proben=[], arbeitsinfos=null, kommentare=null, haushalt=null, telefonnotizen=null, doku=null, KPBis=null, letzterKontakt=null, erstKontaktErfolgtAm=null, endTelefonatErfolgtAm=null, aktuellerBearbeiter=null)
2020.07.30 22:54:00.811 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | PersonRepositoryTest | [PersonRepositoryTest.java : 239]  -  saved Person > Person(super=BaseEntity(id=454885ce-834f-48d3-9c60-038055ffaacd, createdDate=2020-07-30T22:54:00.300), version=0, name=736b7907-1ea3-48f2-8174-5aff8cf2f21e, vorname=917be678-c92a-4833-b297-085942956682, kategorie=KP, medEinrichtung=null, standort=null, geburtsdatum=null, strasse=null, plz=null, ort=null, landkreis=null, ortsteil=null, land=null, telefon=null, mobile=null, mail=null, kontakte=[], quarantaene=null, proben=[], arbeitsinfos=null, kommentare=null, haushalt=null, telefonnotizen=null, doku=null, KPBis=null, letzterKontakt=2020-07-30T22:53:59.877Z[Etc/UTC], erstKontaktErfolgtAm=null, endTelefonatErfolgtAm=null, aktuellerBearbeiter=null)
2020.07.30 22:54:00.812 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | PersonRepositoryTest | [PersonRepositoryTest.java : 239]  -  saved Person > Person(super=BaseEntity(id=476b0322-ba8a-455e-aaed-1e4f42fea64f, createdDate=2020-07-30T22:54:00.408), version=0, name=9e58306d-d7c6-43f6-9c26-24d0549d732f, vorname=827c87a6-cdbc-433c-91b7-951a4bf74e57, kategorie=KP, medEinrichtung=null, standort=null, geburtsdatum=null, strasse=null, plz=null, ort=null, landkreis=null, ortsteil=null, land=null, telefon=null, mobile=null, mail=null, kontakte=[], quarantaene=null, proben=[], arbeitsinfos=null, kommentare=null, haushalt=null, telefonnotizen=null, doku=null, KPBis=null, letzterKontakt=2020-07-30T22:52:59.877Z[Etc/UTC], erstKontaktErfolgtAm=null, endTelefonatErfolgtAm=null, aktuellerBearbeiter=null)
2020.07.30 22:54:00.812 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | PersonRepositoryTest | [PersonRepositoryTest.java : 239]  -  saved Person > Person(super=BaseEntity(id=d0ca0842-64a4-4ec3-9f2f-26cd698fe8be, createdDate=2020-07-30T22:54:00.488), version=0, name=7233567b-a621-4899-9af5-37de6ecb2bce, vorname=8237345c-d585-414a-ba78-dd74b3a774e6, kategorie=KP, medEinrichtung=null, standort=null, geburtsdatum=null, strasse=null, plz=null, ort=null, landkreis=null, ortsteil=null, land=null, telefon=null, mobile=null, mail=null, kontakte=[], quarantaene=null, proben=[], arbeitsinfos=null, kommentare=null, haushalt=null, telefonnotizen=null, doku=null, KPBis=null, letzterKontakt=2020-07-30T23:53:59.877Z[Etc/UTC], erstKontaktErfolgtAm=null, endTelefonatErfolgtAm=null, aktuellerBearbeiter=null)
2020.07.30 22:54:00.812 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | PersonRepositoryTest | [PersonRepositoryTest.java : 239]  -  saved Person > Person(super=BaseEntity(id=f8cefd33-5df0-4d3e-a6fb-414048f8bfb8, createdDate=2020-07-30T22:54:00.558), version=0, name=b18b15d4-5a0c-4e5b-bc27-912fb84307b8, vorname=437da79b-539a-4f1e-856b-bfedaf2738f7, kategorie=I, medEinrichtung=null, standort=null, geburtsdatum=null, strasse=null, plz=null, ort=null, landkreis=null, ortsteil=null, land=null, telefon=null, mobile=null, mail=null, kontakte=[], quarantaene=null, proben=[], arbeitsinfos=null, kommentare=null, haushalt=null, telefonnotizen=null, doku=null, KPBis=null, letzterKontakt=2020-07-30T22:48:59.877Z[Etc/UTC], erstKontaktErfolgtAm=null, endTelefonatErfolgtAm=null, aktuellerBearbeiter=null)
2020.07.30 22:54:00.812 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | PersonRepositoryTest | [PersonRepositoryTest.java : 239]  -  saved Person > Person(super=BaseEntity(id=7fae6ac5-47c0-4b57-b514-6314edfb8480, createdDate=2020-07-30T22:54:00.680), version=0, name=a406c785-01ec-440b-bd51-479add07906d, vorname=f85cf633-669c-4fd2-a825-b70c5ce681cd, kategorie=I, medEinrichtung=null, standort=null, geburtsdatum=null, strasse=null, plz=null, ort=null, landkreis=null, ortsteil=null, land=null, telefon=null, mobile=null, mail=null, kontakte=[], quarantaene=null, proben=[], arbeitsinfos=null, kommentare=null, haushalt=null, telefonnotizen=null, doku=null, KPBis=null, letzterKontakt=2020-07-30T22:38:59.877Z[Etc/UTC], erstKontaktErfolgtAm=null, endTelefonatErfolgtAm=null, aktuellerBearbeiter=null)
Hibernate: 
    select
        person0_.id as id1_1_,
        person0_.CREATED_DATE as CREATED_2_1_,
        person0_.KPBIS as KPBIS3_1_,
        person0_.AKTUELLER_BEARBEITER as AKTUELLE4_1_,
        person0_.arbeitsinfos as arbeitsi5_1_,
        person0_.doku as doku6_1_,
        person0_.ENDTELEFONAT as ENDTELEF7_1_,
        person0_.ERSTKONTAKT as ERSTKONT8_1_,
        person0_.geburtsdatum as geburtsd9_1_,
        person0_.haushalt as haushal10_1_,
        person0_.kategorie as kategor11_1_,
        person0_.kommentare as komment12_1_,
        person0_.land as land13_1_,
        person0_.landkreis as landkre14_1_,
        person0_.LETZTERKONTAKT as LETZTER15_1_,
        person0_.mail as mail16_1_,
        person0_.medEinrichtung as medEinr17_1_,
        person0_.mobile as mobile18_1_,
        person0_.name as name19_1_,
        person0_.ort as ort20_1_,
        person0_.ortsteil as ortstei21_1_,
        person0_.plz as plz22_1_,
        person0_.quarantaene_ende as quarant23_1_,
        person0_.quarantaene_start as quarant24_1_,
        person0_.standort as standor25_1_,
        person0_.strasse as strasse26_1_,
        person0_.telefon as telefon27_1_,
        person0_.telefonnotizen as telefon28_1_,
        person0_.VERSION as VERSION29_1_,
        person0_.vorname as vorname30_1_ 
    from
        PERSON person0_ 
    where
        person0_.kategorie='I' 
        and (
            person0_.AKTUELLER_BEARBEITER is null 
            or person0_.AKTUELLER_BEARBEITER=''
        ) 
        and (
            person0_.LETZTERKONTAKT<CURRENT_TIMESTAMP 
            or person0_.LETZTERKONTAKT is null
        ) 
        and (
            person0_.ENDTELEFONAT is null
        ) 
    order by
        person0_.LETZTERKONTAKT asc nulls last limit ?
Tests run: 10, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 10.139 sec - in de.muenchen.cove.rest.PersonRepositoryTest
Running de.muenchen.cove.configuration.CacheControlConfigurationTest
2020.07.30 22:54:00.822 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | SpringBootTestContextBootstrapper | [AbstractTestContextBootstrapper.java : 308]  -  Neither @ContextConfiguration nor @ContextHierarchy found for test class [de.muenchen.cove.configuration.CacheControlConfigurationTest], using SpringBootContextLoader
2020.07.30 22:54:00.826 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | AbstractContextLoader | [AbstractContextLoader.java : 264]  -  Could not detect default resource locations for test class [de.muenchen.cove.configuration.CacheControlConfigurationTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020.07.30 22:54:00.829 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | SpringBootTestContextBootstrapper | [AbstractTestContextBootstrapper.java : 248]  -  Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener]
2020.07.30 22:54:00.830 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | SpringBootTestContextBootstrapper | [AbstractTestContextBootstrapper.java : 177]  -  Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@13bc3f28, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7a714489, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1dbdc829, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@ad266d8, org.springframework.test.context.support.DirtiesContextTestExecutionListener@78654dd5, org.springframework.test.context.transaction.TransactionalTestExecutionListener@8401b5c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7b4f66fd, org.springframework.test.context.event.EventPublishingTestExecutionListener@62b23bea, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@30ebc98c, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@3879be36, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@38815f4a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4b9f5edb, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@25d6598d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@502bcb0f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6262a54f]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.009 sec - in de.muenchen.cove.configuration.CacheControlConfigurationTest
Running de.muenchen.cove.configuration.UnicodeConfigurationTest
2020.07.30 22:54:00.831 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | SpringBootTestContextBootstrapper | [AbstractTestContextBootstrapper.java : 308]  -  Neither @ContextConfiguration nor @ContextHierarchy found for test class [de.muenchen.cove.configuration.UnicodeConfigurationTest], using SpringBootContextLoader
2020.07.30 22:54:00.832 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | AbstractContextLoader | [AbstractContextLoader.java : 264]  -  Could not detect default resource locations for test class [de.muenchen.cove.configuration.UnicodeConfigurationTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020.07.30 22:54:00.835 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | SpringBootTestContextBootstrapper | [AbstractTestContextBootstrapper.java : 248]  -  Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener]
2020.07.30 22:54:00.836 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | SpringBootTestContextBootstrapper | [AbstractTestContextBootstrapper.java : 177]  -  Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3df53364, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3c7c9a22, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@438859e7, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5ca0a16e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@485ac78d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@10afe92e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@11e9cdbd, org.springframework.test.context.event.EventPublishingTestExecutionListener@489bb53f, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@5663650e, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@39ea1075, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6631b6d0, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7316c564, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3e10951d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@57104312, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3c7cf816]
Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.01 sec - in de.muenchen.cove.configuration.UnicodeConfigurationTest
Running de.muenchen.cove.nfcconverter.NfcConverterTest
2020.07.30 22:54:01.522 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | NfcRequestFilter | [NfcRequestFilter.java : 79]  -  Enabled content-type filtering to NFC for: text/html; application/json; text/plain
2020.07.30 22:54:01.526 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcRequestFilter | [NfcRequestFilter.java : 88]  -  Request-Type=org.mockito.codegen.HttpServletRequest$MockitoMock$576626348
2020.07.30 22:54:01.531 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcRequestFilter | [NfcRequestFilter.java : 89]  -  Intercepting request for URI /index.html?type=text/plain
2020.07.30 22:54:01.531 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcRequestFilter | [NfcRequestFilter.java : 92]  -  ContentType for request with URI: "text/plain"
2020.07.30 22:54:01.532 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcRequestFilter | [NfcRequestFilter.java : 94]  -  Processing request /index.html?type=text/plain.
2020.07.30 22:54:01.560 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "aM̂aöa".
2020.07.30 22:54:01.560 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 7.
2020.07.30 22:54:01.560 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "aM̂aöa".
2020.07.30 22:54:01.561 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 6.
2020.07.30 22:54:01.562 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "b M̂ b ö b".
2020.07.30 22:54:01.562 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 11.
2020.07.30 22:54:01.562 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "b M̂ b ö b".
2020.07.30 22:54:01.562 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 10.
2020.07.30 22:54:01.563 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "c M̂ c ö c".
2020.07.30 22:54:01.563 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 11.
2020.07.30 22:54:01.563 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "c M̂ c ö c".
2020.07.30 22:54:01.563 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 10.
2020.07.30 22:54:01.565 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "token".
2020.07.30 22:54:01.565 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 5.
2020.07.30 22:54:01.565 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "token".
2020.07.30 22:54:01.565 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 5.
2020.07.30 22:54:01.566 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "b M̂ b ö b".
2020.07.30 22:54:01.566 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 11.
2020.07.30 22:54:01.566 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "b M̂ b ö b".
2020.07.30 22:54:01.566 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 10.
2020.07.30 22:54:01.566 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "b M̂ b ö b".
2020.07.30 22:54:01.566 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 11.
2020.07.30 22:54:01.567 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "b M̂ b ö b".
2020.07.30 22:54:01.567 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 10.
2020.07.30 22:54:01.567 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "b m̂ b ö b".
2020.07.30 22:54:01.567 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 11.
2020.07.30 22:54:01.567 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "b m̂ b ö b".
2020.07.30 22:54:01.568 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 10.
2020.07.30 22:54:01.568 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "b M̂ b ö b".
2020.07.30 22:54:01.568 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 11.
2020.07.30 22:54:01.568 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "b M̂ b ö b".
2020.07.30 22:54:01.568 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 10.
2020.07.30 22:54:01.575 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "aM̂aöa".
2020.07.30 22:54:01.575 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 7.
2020.07.30 22:54:01.575 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "aM̂aöa".
2020.07.30 22:54:01.575 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 6.
2020.07.30 22:54:01.577 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "b M̂ b ö b".
2020.07.30 22:54:01.578 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 11.
2020.07.30 22:54:01.578 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "b M̂ b ö b".
2020.07.30 22:54:01.578 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 10.
2020.07.30 22:54:01.578 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "aM̂aöa".
2020.07.30 22:54:01.579 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 6.
2020.07.30 22:54:01.579 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "aM̂aöa".
2020.07.30 22:54:01.579 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 6.
2020.07.30 22:54:01.579 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "aM̂aöa".
2020.07.30 22:54:01.579 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 6.
2020.07.30 22:54:01.580 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "aM̂aöa".
2020.07.30 22:54:01.580 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 6.
2020.07.30 22:54:01.580 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcRequest | [NfcRequest.java : 169]  -  getReader()
2020.07.30 22:54:01.591 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcReader | [NfcReader.java : 46]  -  Converting Reader data to NFC.
2020.07.30 22:54:01.591 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "b M̂ b ö b".
2020.07.30 22:54:01.592 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 11.
2020.07.30 22:54:01.592 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "b M̂ b ö b".
2020.07.30 22:54:01.592 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 10.
2020.07.30 22:54:01.592 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcRequest | [NfcRequest.java : 180]  -  getPart(aM̂aöa)
2020.07.30 22:54:01.599 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | NfcRequestFilter | [NfcRequestFilter.java : 79]  -  Enabled content-type filtering to NFC for: text/html; text/plain
2020.07.30 22:54:01.600 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcRequestFilter | [NfcRequestFilter.java : 88]  -  Request-Type=org.mockito.codegen.HttpServletRequest$MockitoMock$576626348
2020.07.30 22:54:01.600 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcRequestFilter | [NfcRequestFilter.java : 89]  -  Intercepting request for URI /index.html?type=application/postscript
2020.07.30 22:54:01.601 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcRequestFilter | [NfcRequestFilter.java : 92]  -  ContentType for request with URI: "application/postscript"
2020.07.30 22:54:01.601 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcRequestFilter | [NfcRequestFilter.java : 97]  -  Skip processing of HTTP request since it's content type "application/postscript" is not in whitelist.
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.735 sec - in de.muenchen.cove.nfcconverter.NfcConverterTest
Running de.muenchen.cove.nfcconverter.NfcHelperTest
2020.07.30 22:54:01.616 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ô".
2020.07.30 22:54:01.616 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 2.
2020.07.30 22:54:01.617 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ô".
2020.07.30 22:54:01.617 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.617 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ẛ".
2020.07.30 22:54:01.617 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 2.
2020.07.30 22:54:01.618 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ẛ".
2020.07.30 22:54:01.618 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.619 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ô".
2020.07.30 22:54:01.619 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 2.
2020.07.30 22:54:01.619 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ô".
2020.07.30 22:54:01.619 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.619 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ṩ".
2020.07.30 22:54:01.619 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 3.
2020.07.30 22:54:01.619 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ṩ".
2020.07.30 22:54:01.619 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.620 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ṩ".
2020.07.30 22:54:01.620 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 3.
2020.07.30 22:54:01.620 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ṩ".
2020.07.30 22:54:01.620 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.620 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ẛ".
2020.07.30 22:54:01.620 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 2.
2020.07.30 22:54:01.620 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ẛ".
2020.07.30 22:54:01.620 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.621 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ô".
2020.07.30 22:54:01.621 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 2.
2020.07.30 22:54:01.621 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ô".
2020.07.30 22:54:01.621 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.621 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ṩ".
2020.07.30 22:54:01.621 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 3.
2020.07.30 22:54:01.621 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ṩ".
2020.07.30 22:54:01.622 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.622 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ẛ".
2020.07.30 22:54:01.622 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 2.
2020.07.30 22:54:01.622 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ẛ".
2020.07.30 22:54:01.624 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.629 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ẛ".
2020.07.30 22:54:01.629 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 2.
2020.07.30 22:54:01.629 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ẛ".
2020.07.30 22:54:01.629 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.629 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ô".
2020.07.30 22:54:01.630 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 2.
2020.07.30 22:54:01.630 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ô".
2020.07.30 22:54:01.630 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.630 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ṩ".
2020.07.30 22:54:01.630 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 3.
2020.07.30 22:54:01.630 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ṩ".
2020.07.30 22:54:01.630 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.631 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "token".
2020.07.30 22:54:01.631 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 5.
2020.07.30 22:54:01.631 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "token".
2020.07.30 22:54:01.631 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 5.
2020.07.30 22:54:01.631 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "[ẛ, ô, ṩ]".
2020.07.30 22:54:01.631 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 13.
2020.07.30 22:54:01.632 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "[ẛ, ô, ṩ]".
2020.07.30 22:54:01.632 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 9.
2020.07.30 22:54:01.632 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ô".
2020.07.30 22:54:01.632 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 2.
2020.07.30 22:54:01.632 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ô".
2020.07.30 22:54:01.632 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.632 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ṩ".
2020.07.30 22:54:01.632 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 3.
2020.07.30 22:54:01.633 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ṩ".
2020.07.30 22:54:01.633 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.633 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ṩ".
2020.07.30 22:54:01.633 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 3.
2020.07.30 22:54:01.633 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ṩ".
2020.07.30 22:54:01.633 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.633 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "token".
2020.07.30 22:54:01.633 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 5.
2020.07.30 22:54:01.634 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "token".
2020.07.30 22:54:01.634 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 5.
2020.07.30 22:54:01.634 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "[ẛ, ô, ṩ]".
2020.07.30 22:54:01.634 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 13.
2020.07.30 22:54:01.634 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "[ẛ, ô, ṩ]".
2020.07.30 22:54:01.634 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 9.
2020.07.30 22:54:01.636 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ô".
2020.07.30 22:54:01.637 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 2.
2020.07.30 22:54:01.637 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ô".
2020.07.30 22:54:01.637 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.637 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ṩ".
2020.07.30 22:54:01.637 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 3.
2020.07.30 22:54:01.637 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ṩ".
2020.07.30 22:54:01.637 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.638 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ṩ".
2020.07.30 22:54:01.638 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 3.
2020.07.30 22:54:01.638 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ṩ".
2020.07.30 22:54:01.638 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.638 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "token".
2020.07.30 22:54:01.638 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 5.
2020.07.30 22:54:01.638 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "token".
2020.07.30 22:54:01.639 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 5.
2020.07.30 22:54:01.639 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "[ẛ, ô, ṩ]".
2020.07.30 22:54:01.645 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 13.
2020.07.30 22:54:01.645 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "[ẛ, ô, ṩ]".
2020.07.30 22:54:01.645 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 9.
2020.07.30 22:54:01.645 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ô".
2020.07.30 22:54:01.646 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 2.
2020.07.30 22:54:01.646 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ô".
2020.07.30 22:54:01.646 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.646 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ṩ".
2020.07.30 22:54:01.646 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 3.
2020.07.30 22:54:01.646 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ṩ".
2020.07.30 22:54:01.646 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.646 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ṩ".
2020.07.30 22:54:01.647 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 3.
2020.07.30 22:54:01.647 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ṩ".
2020.07.30 22:54:01.647 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.648 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ẛ".
2020.07.30 22:54:01.648 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 2.
2020.07.30 22:54:01.648 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ẛ".
2020.07.30 22:54:01.648 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.648 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ô".
2020.07.30 22:54:01.648 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 2.
2020.07.30 22:54:01.649 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ô".
2020.07.30 22:54:01.649 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.649 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ṩ".
2020.07.30 22:54:01.649 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 3.
2020.07.30 22:54:01.649 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ṩ".
2020.07.30 22:54:01.649 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.650 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ẛ".
2020.07.30 22:54:01.650 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 2.
2020.07.30 22:54:01.650 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ẛ".
2020.07.30 22:54:01.650 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.650 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ô".
2020.07.30 22:54:01.650 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 2.
2020.07.30 22:54:01.650 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ô".
2020.07.30 22:54:01.650 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.651 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ṩ".
2020.07.30 22:54:01.651 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 3.
2020.07.30 22:54:01.651 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ṩ".
2020.07.30 22:54:01.651 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.651 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ẛ".
2020.07.30 22:54:01.652 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 2.
2020.07.30 22:54:01.652 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ẛ".
2020.07.30 22:54:01.652 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.652 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ẛ".
2020.07.30 22:54:01.652 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 2.
2020.07.30 22:54:01.652 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ẛ".
2020.07.30 22:54:01.652 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.653 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ô".
2020.07.30 22:54:01.653 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 2.
2020.07.30 22:54:01.653 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ô".
2020.07.30 22:54:01.653 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.653 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ô".
2020.07.30 22:54:01.653 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 2.
2020.07.30 22:54:01.653 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ô".
2020.07.30 22:54:01.653 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.653 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ṩ".
2020.07.30 22:54:01.653 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 3.
2020.07.30 22:54:01.654 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ṩ".
2020.07.30 22:54:01.654 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.654 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ṩ".
2020.07.30 22:54:01.654 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 3.
2020.07.30 22:54:01.654 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ṩ".
2020.07.30 22:54:01.654 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.655 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "token".
2020.07.30 22:54:01.655 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 5.
2020.07.30 22:54:01.655 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "token".
2020.07.30 22:54:01.655 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 5.
2020.07.30 22:54:01.655 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "[ẛ, ô, ṩ]".
2020.07.30 22:54:01.655 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 13.
2020.07.30 22:54:01.655 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "[ẛ, ô, ṩ]".
2020.07.30 22:54:01.655 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 9.
2020.07.30 22:54:01.655 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ô".
2020.07.30 22:54:01.656 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 2.
2020.07.30 22:54:01.656 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ô".
2020.07.30 22:54:01.656 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.656 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ṩ".
2020.07.30 22:54:01.656 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 3.
2020.07.30 22:54:01.656 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ṩ".
2020.07.30 22:54:01.656 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.656 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ṩ".
2020.07.30 22:54:01.656 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 3.
2020.07.30 22:54:01.657 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ṩ".
2020.07.30 22:54:01.657 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.657 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ẛ".
2020.07.30 22:54:01.657 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 2.
2020.07.30 22:54:01.657 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ẛ".
2020.07.30 22:54:01.657 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.658 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ẛ".
2020.07.30 22:54:01.658 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 2.
2020.07.30 22:54:01.658 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ẛ".
2020.07.30 22:54:01.658 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.669 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ô".
2020.07.30 22:54:01.669 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 2.
2020.07.30 22:54:01.670 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ô".
2020.07.30 22:54:01.670 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.670 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ô".
2020.07.30 22:54:01.670 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 2.
2020.07.30 22:54:01.670 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ô".
2020.07.30 22:54:01.670 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.670 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ṩ".
2020.07.30 22:54:01.670 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 3.
2020.07.30 22:54:01.670 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ṩ".
2020.07.30 22:54:01.670 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
2020.07.30 22:54:01.671 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 42]  -  String BEFORE nfc conversion: "ṩ".
2020.07.30 22:54:01.671 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 43]  -  Length of String BEFORE nfc conversion: 3.
2020.07.30 22:54:01.671 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 45]  -  String AFTER nfc conversion: "ṩ".
2020.07.30 22:54:01.671 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | DEBUG | [main] | NfcHelper | [NfcHelper.java : 46]  -  Length of String AFTER nfc conversion: 1.
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.112 sec - in de.muenchen.cove.nfcconverter.NfcHelperTest
Running de.muenchen.cove.gracefulshutdown.GracefulShutdownHealthCheckTest
2020.07.30 22:54:01.673 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | SpringBootTestContextBootstrapper | [AbstractTestContextBootstrapper.java : 308]  -  Neither @ContextConfiguration nor @ContextHierarchy found for test class [de.muenchen.cove.gracefulshutdown.GracefulShutdownHealthCheckTest], using SpringBootContextLoader
2020.07.30 22:54:01.677 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | AbstractContextLoader | [AbstractContextLoader.java : 264]  -  Could not detect default resource locations for test class [de.muenchen.cove.gracefulshutdown.GracefulShutdownHealthCheckTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020.07.30 22:54:01.680 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | SpringBootTestContextBootstrapper | [AbstractTestContextBootstrapper.java : 248]  -  Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener]
2020.07.30 22:54:01.681 | [cove-backend-microservice, TraceId: , SpanId: , Span-Export: ] | INFO | [main] | SpringBootTestContextBootstrapper | [AbstractTestContextBootstrapper.java : 177]  -  Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1379c3b8, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@548e2181, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5f467234, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@2f4a74dd, org.springframework.test.context.support.DirtiesContextTestExecutionListener@72f3168f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5754a379, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3befbc75, org.springframework.test.context.event.EventPublishingTestExecutionListener@477fdb49, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@2d52ea47, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@5f6fdbff, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@19a5d873, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2039ed9d, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1a033b0f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3b12ab93, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@c439ac2]
---------------------------------------------------------------------------------------------------------------------------------------------------
  ____                                  _                  _                                             _              _
 |  _ \                                | |                | |                      /\                   | |            | |
 | |_) |   __ _   _ __   _ __    __ _  | | __  _   _    __| |   __ _   ______     /  \     _ __    ___  | |__     ___  | |_   _   _   _ __     ___
 |  _ <   / _` | | '__| | '__|  / _` | | |/ / | | | |  / _` |  / _` | |______|   / /\ \   | '__|  / __| | '_ \   / _ \ | __| | | | | | '_ \   / _ \
 | |_) | | (_| | | |    | |    | (_| | |   <  | |_| | | (_| | | (_| |           / ____ \  | |    | (__  | | | | |  __/ | |_  | |_| | | |_) | |  __/
 |____/   \__,_| |_|    |_|     \__,_| |_|\_\  \__,_|  \__,_|  \__,_|          /_/    \_\ |_|     \___| |_| |_|  \___|  \__|  \__, | | .__/   \___|
                                                                                                                               __/ | | |
                                                                                                                              |___/  |_|    by CCSE
 Application Name    : cove-backend-microservice
 Spring Boot Version :  (v2.2.4.RELEASE)
---------------------------------------------------------------------------------------------------------------------------------------------------

Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.376 sec - in de.muenchen.cove.gracefulshutdown.GracefulShutdownHealthCheckTest

Results :

Tests run: 39, Failures: 0, Errors: 0, Skipped: 3

[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.5:report (report) @ cove-backend ---
[INFO] Loading execution data file /tmp/tmpfohgxc_i/cove-backend/target/jacoco.exec
[INFO] Analyzed bundle 'cove_backend' with 781 classes
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  05:13 min
[INFO] Finished at: 2020-07-30T22:54:06Z
[INFO] ------------------------------------------------------------------------
