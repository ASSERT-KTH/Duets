<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>science.atlarge.graphalytics</groupId>
	<artifactId>graphalytics-platforms-neo4j</artifactId>
	<version>0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<graphalytics.version>0.9.0</graphalytics.version>
		<hamcrest.version>1.3</hamcrest.version>
		<junit.version>4.11</junit.version>
		<log4j2.version>2.5</log4j2.version>
		<neo4j.version>3.3.4</neo4j.version>
	</properties>

	<scm>
		<developerConnection>scm:git:ssh://git@github.com/tudelft-atlarge/graphalytics-platforms-neo4j</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<dependencies>
		<dependency>
			<groupId>science.atlarge.graphalytics</groupId>
			<artifactId>graphalytics-core</artifactId>
			<version>${graphalytics.version}</version>
		</dependency>
		<dependency>
			<groupId>science.atlarge.graphalytics</groupId>
			<artifactId>graphalytics-core</artifactId>
			<version>${graphalytics.version}</version>
			<type>tar.gz</type>
			<classifier>resources</classifier>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>science.atlarge.graphalytics</groupId>
			<artifactId>graphalytics-validation</artifactId>
			<version>${graphalytics.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-1.2-api</artifactId>
			<version>${log4j2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j2.version}</version>
		</dependency>

		<dependency>
			<groupId>org.neo4j</groupId>
			<artifactId>neo4j</artifactId>
			<version>${neo4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.neo4j</groupId>
			<artifactId>neo4j-kernel</artifactId>
			<version>${neo4j.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.neo4j</groupId>
			<artifactId>neo4j-io</artifactId>
			<version>${neo4j.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>it.unimi.dsi</groupId>
			<artifactId>fastutil</artifactId>
			<version>7.0.7</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Java compiler settings -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<!-- Maven Shade plugin used by platform modules to create fat JARs -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<createDependencyReducedPom>false</createDependencyReducedPom>
					<minimizeJar>false</minimizeJar>
					<artifactSet>
						<excludes>
							<exclude>*:*:*:resources</exclude>
						</excludes>
					</artifactSet>
					<filters>
						<filter>
							<artifact>*:*</artifact>
							<excludes>
								<exclude>META-INF/*.SF</exclude>
								<exclude>META-INF/*.DSA</exclude>
								<exclude>META-INF/*.RSA</exclude>
							</excludes>
						</filter>
					</filters>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Maven release management -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<tagNameFormat>v@{project.version}</tagNameFormat>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<pushChanges>false</pushChanges>
				</configuration>
			</plugin>

			<!-- Plugin for ensuring the presence of license information -->
			<plugin>
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<header>http://www.pds.ewi.tudelft.nl/~mihai/copyright-notice-template</header>
					<properties>
						<owner>Delft University of Technology</owner>
						<project.inceptionYear>2015</project.inceptionYear>
					</properties>
					<excludes>
						<exclude>README</exclude>
						<exclude>LICENSE</exclude>
						<exclude>pom.xml</exclude>
						<exclude>src/test/resources/**</exclude>
						<exclude>src/main/resources/**</exclude>
						<exclude>src/main/assembly/**</exclude>
						<exclude>config-template/**</exclude>
					</excludes>
					<mapping>
						<java>SLASHSTAR_STYLE</java>
					</mapping>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Plugin for creating distribution archives -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.5.3</version>
				<executions>
					<execution>
						<id>bin</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/main/assembly/bin.xml</descriptor>
							</descriptors>
							<finalName>graphalytics-${graphalytics.version}-neo4j-${project.version}</finalName>
							<tarLongFileMode>posix</tarLongFileMode>
							<outputDirectory>${project.basedir}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>

