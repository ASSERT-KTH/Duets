<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.lgooddatepicker</groupId>
    <artifactId>LGoodDatePicker</artifactId>
    <version>4.2.1</version>
    <packaging>jar</packaging>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>
    <dependencies>
        <dependency>
            <!-- 
            Note: You are not required to include the JGoodies library in your project in order 
            to use LGoodDatePicker. (Also, it will not be automatically added to your project by 
            Maven). For all practical purposes, you can treat LGoodDatePicker as if it had no 
            dependencies. The only time the JGoodies dependency entry is required, is when 
            LGoodDatePicker itself is being built and packaged into a release jar. 
            
            In case it is needed, Maven automatically generates a copy of the LGoodDatePicker POM 
            file with the JGoodies dependency entry removed, as
            "LGoodDatePicker/Project/dependency-reduced-pom.xml".

            Technical details: All dependency class files are automatically packaged into one 
            "uber jar" (LGoodDatePicker-[version]-core.jar). Also, the jgoodies-forms dependency 
            is "shaded to a private copy" with the maven-shade-plugin, into the namespace 
            "com.shadedprivatejgoodies". This ensures that the included classes will not conflict 
            with any other versions of JGoodies that may be used by projects that use 
            LGoodDatePicker. For details on how this works, see:
            https://maven.apache.org/plugins/maven-shade-plugin/examples/class-relocation.html 
            -->
            <groupId>com.jgoodies</groupId>
            <artifactId>jgoodies-forms</artifactId>
            <version>1.8.0</version>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <!-- This turns on resource filtering so we can get the version number at runtime. -->
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.4.3</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <shadedClassifierName>core</shadedClassifierName> <!-- Any name that makes sense -->
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.lgooddatepicker.demo.Demo</mainClass>
                                </transformer>
                            </transformers>
                            <minimizeJar>true</minimizeJar>
                            <relocations>
                                <relocation>
                                    <pattern>com.jgoodies</pattern>
                                    <shadedPattern>com.shadedprivatejgoodies</shadedPattern>
                                    <excludes>
                                    </excludes>
                                </relocation>
                            </relocations>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9.1</version>
                <configuration>
                    <!-- Turn off errors resulting from the new (strict) Java 8 Javadoc standards. -->
                    <additionalparam>-Xdoclint:none</additionalparam>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <configuration>
                    <tasks>
                        <copy file="${project.build.directory}/${project.artifactId}-${project.version}-core.jar" tofile="${project.build.directory}/${project.artifactId}-${project.version}-executable-demo.jar"/>
                        <delete file="${project.build.directory}/${project.artifactId}-${project.version}.jar"/>
                    </tasks>
                </configuration>
                <executions>
                    <execution>
                        <phase>install</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>


