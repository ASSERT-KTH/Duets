<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="rxjava2-aws"><sessioninfo id="dffd3c91b19e-14ed07da" start="1596144642004" dump="1596144647075"/><package name="com/github/davidmoten/guavamini"><class name="com/github/davidmoten/guavamini/Lists" sourcefilename="Lists.java"><method name="newArrayList" desc="([Ljava/lang/Object;)Ljava/util/ArrayList;" line="17"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeArrayListCapacity" desc="(I)I" line="27"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="saturatedCast" desc="(J)I" line="44"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newArrayList" desc="()Ljava/util/ArrayList;" line="54"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newArrayList" desc="(Ljava/lang/Iterable;)Ljava/util/ArrayList;" line="58"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newArrayList" desc="(Ljava/util/Iterator;)Ljava/util/ArrayList;" line="65"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/davidmoten/guavamini/Collections2" sourcefilename="Collections2.java"><method name="cast" desc="(Ljava/lang/Iterable;)Ljava/util/Collection;" line="21"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/davidmoten/guavamini/Objects" sourcefilename="Objects.java"><method name="hashCode" desc="([Ljava/lang/Object;)I" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equal" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="16"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/davidmoten/guavamini/Optional" sourcefilename="Optional.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Z)V" line="8"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPresent" desc="()Z" line="19"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/lang/Object;" line="23"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="or" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="30"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNullable" desc="(Ljava/lang/Object;)Lcom/github/davidmoten/guavamini/Optional;" line="37"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Ljava/lang/Object;)Lcom/github/davidmoten/guavamini/Optional;" line="44"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="absent" desc="()Lcom/github/davidmoten/guavamini/Optional;" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/davidmoten/guavamini/Iterators" sourcefilename="Iterators.java"><method name="addAll" desc="(Ljava/util/Collection;Ljava/util/Iterator;)Z" line="27"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/davidmoten/guavamini/Preconditions" sourcefilename="Preconditions.java"><method name="checkNotNull" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkNotNull" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;" line="14"><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkArgument" desc="(ZLjava/lang/String;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkArgument" desc="(Z)V" line="25"><counter type="INSTRUCTION" missed="4" covered="3"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="19"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/guavamini/Optional$NotPresentException" sourcefilename="Optional.java"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/davidmoten/guavamini/Sets" sourcefilename="Sets.java"><method name="newHashSet" desc="([Ljava/lang/Object;)Ljava/util/HashSet;" line="19"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newHashSetWithExpectedSize" desc="(I)Ljava/util/HashSet;" line="26"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="capacity" desc="(I)I" line="36"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkNonnegative" desc="(ILjava/lang/String;)I" line="48"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newHashSet" desc="(Ljava/lang/Iterable;)Ljava/util/HashSet;" line="55"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newHashSet" desc="(Ljava/util/Iterator;)Ljava/util/HashSet;" line="60"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newHashSet" desc="()Ljava/util/HashSet;" line="66"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Sets.java"><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="4" ci="0" mb="0" cb="0"/><line nr="21" mi="4" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="6" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="2" cb="0"/><line nr="37" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="2" cb="0"/><line nr="41" mi="6" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="2" cb="0"/><line nr="49" mi="14" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="11" ci="0" mb="2" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Lists.java"><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="4" ci="0" mb="0" cb="0"/><line nr="20" mi="5" ci="0" mb="0" cb="0"/><line nr="21" mi="4" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="7" ci="0" mb="2" cb="0"/><line nr="30" mi="11" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="2" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="2" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="11" ci="0" mb="2" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Preconditions.java"><line nr="10" mi="0" ci="4" mb="0" cb="0"/><line nr="14" mi="0" ci="2" mb="1" cb="1"/><line nr="15" mi="5" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="2"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="1" cb="1"/><line nr="26" mi="4" ci="0" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="19"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Optional.java"><line nr="8" mi="2" ci="0" mb="0" cb="0"/><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="15" mi="4" ci="0" mb="0" cb="0"/><line nr="16" mi="1" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="2" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="2" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="2" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="6" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="15" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="Objects.java"><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="13" ci="0" mb="6" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Iterators.java"><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="2" cb="0"/><line nr="31" mi="8" ci="0" mb="0" cb="0"/><line nr="33" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Collections2.java"><line nr="21" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="282" covered="19"/><counter type="BRANCH" missed="34" covered="4"/><counter type="LINE" missed="70" covered="8"/><counter type="COMPLEXITY" missed="45" covered="5"/><counter type="METHOD" missed="27" covered="4"/><counter type="CLASS" missed="7" covered="1"/></package><package name="com/github/davidmoten/rx2/aws"><class name="com/github/davidmoten/rx2/aws/AwsClients" sourcefilename="AwsClients.java"><method name="createSqsClient" desc="(Lcom/amazonaws/auth/AWSCredentials;Lcom/amazonaws/ClientConfiguration;Lcom/amazonaws/regions/Regions;)Lcom/amazonaws/services/sqs/AmazonSQS;" line="19"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createS3Client" desc="(Lcom/amazonaws/auth/AWSCredentials;Lcom/amazonaws/ClientConfiguration;Lcom/amazonaws/regions/Regions;)Lcom/amazonaws/services/s3/AmazonS3;" line="27"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/aws/Sqs$SqsBuilder" sourcefilename="Sqs.java"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/aws/SqsQueue;)V" line="128"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bucketName" desc="(Ljava/lang/String;)Lcom/github/davidmoten/rx2/aws/Sqs$ViaS3Builder;" line="140"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sqsFactory" desc="(Ljava/util/concurrent/Callable;)Lcom/github/davidmoten/rx2/aws/Sqs$SqsBuilder;" line="145"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="waitTimes" desc="(Lio/reactivex/Flowable;Ljava/util/concurrent/TimeUnit;)Lcom/github/davidmoten/rx2/aws/Sqs$SqsBuilder;" line="150"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="interval" desc="(ILjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Lcom/github/davidmoten/rx2/aws/Sqs$SqsBuilder;" line="156"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="interval" desc="(ILjava/util/concurrent/TimeUnit;)Lcom/github/davidmoten/rx2/aws/Sqs$SqsBuilder;" line="163"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="logger" desc="(Ljava/util/function/Consumer;)Lcom/github/davidmoten/rx2/aws/Sqs$SqsBuilder;" line="167"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="messages" desc="()Lio/reactivex/Flowable;" line="172"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$interval$1" desc="(Ljava/lang/Long;)Ljava/lang/Integer;" line="158"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$waitTimes$0" desc="(Ljava/util/concurrent/TimeUnit;Ljava/lang/Number;)Ljava/lang/Integer;" line="151"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="92"/><counter type="LINE" missed="1" covered="22"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/aws/SqsQueue" sourcefilename="SqsQueue.java"><method name="fromQueueName" desc="(Ljava/lang/String;)Lcom/github/davidmoten/rx2/aws/SqsQueue;" line="18"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromQueueNameAndOwnerAccountId" desc="(Ljava/lang/String;Ljava/lang/String;)Lcom/github/davidmoten/rx2/aws/SqsQueue;" line="22"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromQueueUrl" desc="(Ljava/lang/String;)Lcom/github/davidmoten/rx2/aws/SqsQueue;" line="26"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V" line="29"><counter type="INSTRUCTION" missed="8" covered="36"/><counter type="BRANCH" missed="7" covered="3"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQueueUrl" desc="(Lcom/amazonaws/services/sqs/AmazonSQS;)Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getQueueUrl$0" desc="(Lcom/amazonaws/services/sqs/AmazonSQS;)Ljava/lang/String;" line="42"><counter type="INSTRUCTION" missed="7" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="69"/><counter type="BRANCH" missed="8" covered="4"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/aws/Sqs$ViaS3Builder" sourcefilename="Sqs.java"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/aws/Sqs$SqsBuilder;)V" line="181"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="s3Factory" desc="(Ljava/util/concurrent/Callable;)Lcom/github/davidmoten/rx2/aws/Sqs$SqsBuilder;" line="186"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/aws/SqsMessage" sourcefilename="SqsMessage.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;[BJLjava/util/Optional;Lcom/github/davidmoten/rx2/aws/SqsMessage$Service;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="messageReceiptHandle" desc="()Ljava/lang/String;" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="s3Id" desc="()Ljava/util/Optional;" line="33"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bytes" desc="()[B" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="message" desc="()Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastModifiedTime" desc="()J" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteMessage" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteMessage" desc="(Lcom/github/davidmoten/rx2/aws/SqsMessage$Client;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteMessageUsingFactory" desc="(Ljava/util/Optional;Ljava/util/concurrent/Callable;)V" line="65"><counter type="INSTRUCTION" missed="6" covered="19"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteMessage" desc="(Ljava/util/Optional;Lcom/amazonaws/services/sqs/AmazonSQS;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="96"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$deleteMessageUsingFactory$0" desc="(Ljava/util/concurrent/Callable;)Lcom/amazonaws/services/s3/AmazonS3;" line="67"><counter type="INSTRUCTION" missed="6" covered="4"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="162"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="6" covered="33"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/aws/Util" sourcefilename="Util.java"><method name="shutdown" desc="(Lcom/amazonaws/services/s3/AmazonS3;)V" line="15"><counter type="INSTRUCTION" missed="1" covered="4"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shutdown" desc="(Lcom/amazonaws/services/sqs/AmazonSQS;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/aws/SqsMessage$Service" sourcefilename="SqsMessage.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;Ljava/util/concurrent/Callable;Ljava/util/Optional;Lcom/amazonaws/services/sqs/AmazonSQS;Ljava/lang/String;Ljava/util/Optional;)V" line="115"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/aws/Sqs" sourcefilename="Sqs.java"><method name="queueName" desc="(Ljava/lang/String;)Lcom/github/davidmoten/rx2/aws/Sqs$SqsBuilder;" line="45"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ownerAccountId" desc="(Ljava/lang/String;)Lcom/github/davidmoten/rx2/aws/Sqs$BuilderWithOwnerAccountId;" line="49"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="queueUrl" desc="(Ljava/lang/String;)Lcom/github/davidmoten/rx2/aws/Sqs$SqsBuilder;" line="65"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sendToQueueUsingS3" desc="(Lcom/amazonaws/services/sqs/AmazonSQS;Ljava/lang/String;Lcom/amazonaws/services/s3/AmazonS3;Ljava/lang/String;Ljava/util/Map;[BLjava/util/concurrent/Callable;)Ljava/lang/String;" line="71"><counter type="INSTRUCTION" missed="18" covered="76"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="19"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sendToQueueUsingS3" desc="(Lcom/amazonaws/services/sqs/AmazonSQS;Ljava/lang/String;Lcom/amazonaws/services/s3/AmazonS3;Ljava/lang/String;[BLjava/util/concurrent/Callable;)Ljava/lang/String;" line="103"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sendToQueueUsingS3" desc="(Lcom/amazonaws/services/sqs/AmazonSQS;Ljava/lang/String;Lcom/amazonaws/services/s3/AmazonS3;Ljava/lang/String;[B)Ljava/lang/String;" line="108"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sendToQueueUsingS3" desc="(Lcom/amazonaws/services/sqs/AmazonSQS;Ljava/lang/String;Lcom/amazonaws/services/s3/AmazonS3;Ljava/lang/String;Ljava/util/Map;[B)Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="messages" desc="(Ljava/util/concurrent/Callable;Ljava/util/Optional;Lcom/github/davidmoten/rx2/aws/SqsQueue;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/function/Consumer;)Lio/reactivex/Flowable;" line="195"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFlowableWithSqs" desc="(Lcom/amazonaws/services/sqs/AmazonSQS;Ljava/util/Optional;Ljava/util/concurrent/Callable;Lcom/github/davidmoten/rx2/aws/SqsQueue;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/function/Consumer;)Lio/reactivex/Flowable;" line="210"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFlowableWithS3" desc="(Lcom/amazonaws/services/sqs/AmazonSQS;Ljava/util/Optional;Ljava/util/concurrent/Callable;Lcom/github/davidmoten/rx2/aws/SqsQueue;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/function/Consumer;)Lio/reactivex/Flowable;" line="224"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFlowablePolling" desc="(Lio/reactivex/Flowable;Lcom/github/davidmoten/rx2/aws/SqsMessage$Service;Ljava/util/function/Consumer;)Lio/reactivex/Flowable;" line="234"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(ILcom/github/davidmoten/rx2/aws/SqsMessage$Service;Ljava/util/function/Consumer;)Lio/reactivex/Flowable;" line="238"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFlowableContinousLongPolling" desc="(Lcom/github/davidmoten/rx2/aws/SqsMessage$Service;Ljava/util/function/Consumer;)Lio/reactivex/Flowable;" line="257"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextMessage" desc="(Lcom/amazonaws/services/sqs/model/Message;Lcom/github/davidmoten/rx2/aws/SqsMessage$Service;)Ljava/util/Optional;" line="301"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="request" desc="(Ljava/lang/String;I)Lcom/amazonaws/services/sqs/model/ReceiveMessageRequest;" line="333"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readAndClose" desc="(Ljava/io/InputStream;)[B" line="338"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$get$15" desc="(Ljava/util/Optional;)Lcom/github/davidmoten/rx2/aws/SqsMessage;" line="252"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$get$14" desc="(Ljava/util/Optional;)Z" line="251"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$get$13" desc="(Ljava/util/List;)Ljava/lang/Iterable;" line="250"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$get$12" desc="(Ljava/util/List;)Z" line="249"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$get$11" desc="(Lcom/github/davidmoten/rx2/aws/SqsMessage$Service;)Lorg/reactivestreams/Publisher;" line="243"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$null$10" desc="(Lcom/github/davidmoten/rx2/aws/SqsMessage$Service;Lcom/amazonaws/services/sqs/model/Message;)Ljava/util/Optional;" line="246"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$get$9" desc="(Lcom/github/davidmoten/rx2/aws/SqsMessage$Service;Lcom/amazonaws/services/sqs/model/Message;)Ljava/util/Optional;" line="241"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createFlowablePolling$8" desc="(Lcom/github/davidmoten/rx2/aws/SqsMessage$Service;Ljava/util/function/Consumer;Ljava/lang/Integer;)Lorg/reactivestreams/Publisher;" line="234"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createFlowableWithSqs$7" desc="(Ljava/util/Optional;)V" line="218"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createFlowableWithSqs$6" desc="(Lcom/amazonaws/services/sqs/AmazonSQS;Ljava/util/Optional;Ljava/util/concurrent/Callable;Lcom/github/davidmoten/rx2/aws/SqsQueue;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/function/Consumer;Ljava/util/Optional;)Lorg/reactivestreams/Publisher;" line="217"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createFlowableWithSqs$5" desc="(Ljava/util/Optional;)Ljava/util/Optional;" line="210"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$null$4" desc="(Ljava/util/concurrent/Callable;)Lcom/amazonaws/services/s3/AmazonS3;" line="212"><counter type="INSTRUCTION" missed="6" covered="4"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$messages$3" desc="(Lcom/amazonaws/services/sqs/AmazonSQS;)V" line="203"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$messages$2" desc="(Ljava/util/Optional;Ljava/util/concurrent/Callable;Lcom/github/davidmoten/rx2/aws/SqsQueue;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/function/Consumer;Lcom/amazonaws/services/sqs/AmazonSQS;)Lorg/reactivestreams/Publisher;" line="202"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$sendToQueueUsingS3$1" desc="()Ljava/lang/String;" line="115"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$sendToQueueUsingS3$0" desc="()Ljava/lang/String;" line="109"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="118"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="62" covered="425"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="11" covered="81"/><counter type="COMPLEXITY" missed="5" covered="34"/><counter type="METHOD" missed="4" covered="29"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/aws/Sqs$BuilderWithOwnerAccountId" sourcefilename="Sqs.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="55"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="queueName" desc="(Ljava/lang/String;)Lcom/github/davidmoten/rx2/aws/Sqs$SqsBuilder;" line="60"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/davidmoten/rx2/aws/SqsMessage$Client" sourcefilename="SqsMessage.java"><method name="&lt;clinit&gt;" desc="()V" line="101"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/aws/Sqs$1" sourcefilename="Sqs.java"><method name="&lt;init&gt;" desc="()V" line="118"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/lang/String;)V" line="123"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/aws/Sqs$State" sourcefilename="Sqs.java"><method name="&lt;init&gt;" desc="(Ljava/util/Queue;)V" line="326"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/aws/Sqs$ContinuousLongPollingSyncOnSubscribe" sourcefilename="Sqs.java"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/aws/SqsMessage$Service;Ljava/util/function/Consumer;)V" line="269"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Lcom/github/davidmoten/rx2/aws/Sqs$State;" line="276"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/davidmoten/rx2/aws/Sqs$State;Lio/reactivex/Emitter;)V" line="284"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AwsClients.java"><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SqsQueue.java"><line nr="18" mi="0" ci="8" mb="0" cb="0"/><line nr="22" mi="9" ci="0" mb="0" cb="0"/><line nr="26" mi="8" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="7" ci="6" mb="5" cb="1"/><line nr="34" mi="1" ci="9" mb="2" cb="2"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="8" mb="0" cb="0"/><line nr="42" mi="0" ci="8" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="1" cb="1"/><line nr="44" mi="7" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="69"/><counter type="BRANCH" missed="8" covered="4"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Sqs.java"><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="8" ci="0" mb="0" cb="0"/><line nr="65" mi="12" ci="0" mb="0" cb="0"/><line nr="66" mi="6" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="4" ci="7" mb="1" cb="1"/><line nr="85" mi="7" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="10" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="14" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="9" mb="0" cb="0"/><line nr="108" mi="0" ci="8" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="9" ci="0" mb="0" cb="0"/><line nr="115" mi="6" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="8" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="11" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="8" mb="0" cb="0"/><line nr="163" mi="6" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="14" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="186" mi="0" ci="6" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="11" mb="0" cb="0"/><line nr="202" mi="0" ci="9" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="17" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="5" ci="0" mb="0" cb="0"/><line nr="217" mi="0" ci="10" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="0" ci="12" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="2"/><line nr="226" mi="0" ci="7" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="13" mb="0" cb="0"/><line nr="238" mi="0" ci="11" mb="0" cb="0"/><line nr="239" mi="0" ci="1" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="5" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="12" mb="0" cb="0"/><line nr="244" mi="0" ci="1" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="246" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="249" mi="0" ci="9" mb="0" cb="2"/><line nr="250" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="0" ci="5" mb="0" cb="0"/><line nr="252" mi="0" ci="5" mb="0" cb="0"/><line nr="257" mi="0" ci="6" mb="0" cb="0"/><line nr="258" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="0" ci="8" mb="0" cb="0"/><line nr="277" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="0" cb="0"/><line nr="279" mi="0" ci="7" mb="0" cb="0"/><line nr="284" mi="0" ci="3" mb="0" cb="0"/><line nr="285" mi="0" ci="2" mb="0" cb="0"/><line nr="286" mi="0" ci="3" mb="0" cb="2"/><line nr="287" mi="0" ci="3" mb="0" cb="2"/><line nr="288" mi="0" ci="13" mb="0" cb="0"/><line nr="289" mi="0" ci="7" mb="0" cb="0"/><line nr="290" mi="0" ci="5" mb="0" cb="0"/><line nr="291" mi="0" ci="1" mb="0" cb="0"/><line nr="292" mi="0" ci="4" mb="0" cb="0"/><line nr="293" mi="0" ci="5" mb="0" cb="0"/><line nr="294" mi="0" ci="1" mb="0" cb="0"/><line nr="295" mi="0" ci="4" mb="0" cb="0"/><line nr="296" mi="0" ci="1" mb="0" cb="0"/><line nr="301" mi="0" ci="4" mb="0" cb="2"/><line nr="302" mi="0" ci="3" mb="0" cb="0"/><line nr="303" mi="0" ci="11" mb="0" cb="2"/><line nr="304" mi="0" ci="8" mb="0" cb="0"/><line nr="305" mi="0" ci="2" mb="0" cb="0"/><line nr="307" mi="0" ci="11" mb="0" cb="0"/><line nr="308" mi="0" ci="4" mb="0" cb="0"/><line nr="309" mi="0" ci="5" mb="0" cb="0"/><line nr="310" mi="0" ci="11" mb="0" cb="0"/><line nr="312" mi="0" ci="3" mb="0" cb="0"/><line nr="315" mi="0" ci="5" mb="0" cb="0"/><line nr="316" mi="0" ci="8" mb="0" cb="0"/><line nr="318" mi="0" ci="3" mb="0" cb="0"/><line nr="326" mi="0" ci="2" mb="0" cb="0"/><line nr="327" mi="0" ci="3" mb="0" cb="0"/><line nr="328" mi="0" ci="1" mb="0" cb="0"/><line nr="333" mi="0" ci="11" mb="0" cb="0"/><line nr="338" mi="0" ci="3" mb="0" cb="0"/><line nr="340" mi="0" ci="4" mb="0" cb="0"/><line nr="341" mi="0" ci="3" mb="0" cb="0"/><line nr="343" mi="0" ci="7" mb="0" cb="2"/><line nr="344" mi="0" ci="6" mb="0" cb="0"/><line nr="346" mi="0" ci="3" mb="0" cb="0"/><line nr="347" mi="0" ci="1" mb="0" cb="0"/><line nr="348" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="82" covered="624"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="16" covered="133"/><counter type="COMPLEXITY" missed="8" covered="53"/><counter type="METHOD" missed="7" covered="46"/><counter type="CLASS" missed="1" covered="6"/></sourcefile><sourcefile name="SqsMessage.java"><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="9" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="12" mb="0" cb="4"/><line nr="88" mi="0" ci="4" mb="0" cb="2"/><line nr="89" mi="0" ci="13" mb="0" cb="0"/><line nr="91" mi="0" ci="8" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="40" mb="0" cb="0"/><line nr="101" mi="0" ci="12" mb="0" cb="0"/><line nr="102" mi="0" ci="12" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="225"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="6" covered="49"/><counter type="COMPLEXITY" missed="2" covered="16"/><counter type="METHOD" missed="2" covered="12"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Util.java"><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="1" ci="0" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="133" covered="953"/><counter type="BRANCH" missed="9" covered="27"/><counter type="LINE" missed="26" covered="214"/><counter type="COMPLEXITY" missed="18" covered="77"/><counter type="METHOD" missed="11" covered="66"/><counter type="CLASS" missed="1" covered="12"/></package><package name="com/github/davidmoten/guavamini/annotations"><class name="com/github/davidmoten/guavamini/annotations/VisibleForTesting" sourcefilename="VisibleForTesting.java"/><sourcefile name="VisibleForTesting.java"/></package><counter type="INSTRUCTION" missed="415" covered="972"/><counter type="BRANCH" missed="43" covered="31"/><counter type="LINE" missed="96" covered="222"/><counter type="COMPLEXITY" missed="63" covered="82"/><counter type="METHOD" missed="38" covered="70"/><counter type="CLASS" missed="8" covered="13"/></report>