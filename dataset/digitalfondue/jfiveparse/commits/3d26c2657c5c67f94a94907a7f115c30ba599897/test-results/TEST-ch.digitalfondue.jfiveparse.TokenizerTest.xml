<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.689" tests="6717" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/local/openjdk-8/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.262-b10"/>
    <property name="animal.sniffer.skip" value="true"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/tmp/tmpeakjb4n9/jfiveparse"/>
    <property name="maven.javadoc.skip" value="true"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="source.skip" value="true"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/tmp/tmpeakjb4n9/jfiveparse"/>
    <property name="java.runtime.version" value="1.8.0_262-b10"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/local/openjdk-8/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="license.skip" value="true"/>
    <property name="maven.conf" value="/usr/share/maven/conf"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="maven.test.failure.ignore" value="true"/>
    <property name="os.version" value="4.15.0-109-generic"/>
    <property name="library.jansi.path" value="/usr/share/maven/lib/jansi-native"/>
    <property name="user.home" value="/home/jdbl"/>
    <property name="user.timezone" value="Etc/UTC"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="jdbl"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.6.0.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/local/openjdk-8/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher test -e --fail-never -ntp -Dmaven.test.failure.ignore=true -B -Dmaven.javadoc.skip=true -Drat.skip=true -Danimal.sniffer.skip=true -Dmaven.javadoc.skip=true -Dlicense.skip=true -Dsource.skip=true"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_262"/>
    <property name="java.ext.dirs" value="/usr/local/openjdk-8/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/local/openjdk-8/jre/lib/resources.jar:/usr/local/openjdk-8/jre/lib/rt.jar:/usr/local/openjdk-8/jre/lib/sunrsasign.jar:/usr/local/openjdk-8/jre/lib/jsse.jar:/usr/local/openjdk-8/jre/lib/jce.jar:/usr/local/openjdk-8/jre/lib/charsets.jar:/usr/local/openjdk-8/jre/lib/jfr.jar:/usr/local/openjdk-8/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="rat.skip" value="true"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="test[test3.test:&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.002"/>
  <testcase name="test[test3.test:&apos;\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos; &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;%&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.002"/>
  <testcase name="test[test3.test:&apos;&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;,&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt; &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;! &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;! \u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!--\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- \u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- \u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!-- \u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- \u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- \u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--  &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- !&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- &quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!-- &amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- &apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- ,&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- - &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -,&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- --&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -Y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -Z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -a&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -b&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- -\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!-- .&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- /&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- 0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- 1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- 9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- &lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- =&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- &gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- ?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- @&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- Y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- Z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!-- `&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- a&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- b&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!-- z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- {&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-- \uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!--&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--,&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!---\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--- &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---,&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!----\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---- &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---- -&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---- --&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---- --&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!----  --&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---- a--&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----!&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----! &gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----!LF&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----!CR&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----!CRLF&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----!a&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!----!a-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----!a--&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----!a--&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----!-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----!--&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----!--&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!----,&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!-----&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----Y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----Z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!----a&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----b&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!----{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!----\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!---=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---Y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---Z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---a&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---b&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!---{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!---\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!--B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--Y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--Z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--a&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--b&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!--{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!--\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.002"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE\u0008&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE\u000D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE\u001F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE \u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE \u0008&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE \u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE \u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE \u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE \u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE \u000D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE \u001F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE  &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE !&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE &quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE &amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE &apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE -&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE /&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE 0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE 1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE 9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE &lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE =&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE &gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE ?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE @&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE Y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE Z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE [&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE `&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a\u0008&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a\u000D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a\u001F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a \u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a \u0008&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a \u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a \u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a \u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a \u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a \u000D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a \u001F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a  &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a !&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a &quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a &amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a &apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a -&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a /&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a 0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a 1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a 9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a &lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a =&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a &gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a ?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a @&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC\u0008&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC\u000D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC\u001F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot; &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;&quot;\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;&quot; \u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;#&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;Y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;Z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;a&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;b&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&quot;\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC#&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos; &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;\u0008&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;\u000D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;\u001F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos; &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;#&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;&apos;&apos;\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;&apos;&apos;x\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;&apos;&apos; \u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;&apos;&apos; x\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;(&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;Y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;Z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;a&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;b&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&apos;\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;(&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;Y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;Z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;a&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;b&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&apos;\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC(&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLICA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLICB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLICY&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLICZ&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLICa&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLICb&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLICy&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLICz&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a PUBLIC\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM \u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM x\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM\u0008&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM\u000D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM\u001F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot; &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;#&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;Y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;Z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;a&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;b&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&quot;\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM#&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos; &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;\u0008&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;\u000D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;\u001F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos; &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos; \u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos; x\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;Y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;Z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;a&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;b&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&apos;\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;(&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;Y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;Z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;a&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;b&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&apos;\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM(&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEMA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEMB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEMY&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEMZ&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEMa&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEMb&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEMy&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEMz&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a SYSTEM\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a Y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a Z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a `&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a a&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a a\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a a\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a a\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a a\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a a\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a a &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a a!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a a&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a a&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a a&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a a-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a a/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a a0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a a1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a a9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a a&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a a=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a a&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a a?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a a@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a aA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a aB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a aY&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a aZ&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a a`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a aa&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a ab&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a ay&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a az&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a a{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a a\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a b&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a {&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a \uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE aA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE aB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE aY&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE aZ&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a[&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE aa&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE ab&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE ay&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE az&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE a\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE b&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE {&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE \uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEY&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEZ&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa\u0008&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa\u000D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa\u001F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa \u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa \u0008&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa \u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa \u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa \u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa \u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa \u000D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa \u001F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa  &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa !&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa &quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa &amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa &apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa -&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa /&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa 0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa 1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa 9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa &lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa =&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa &gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa ?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.004"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa @&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC\u0008&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC\u000D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC\u001F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot; &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;#&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;Y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;Z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;a&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;b&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&quot;\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC#&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos; &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;\u0008&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;\u000D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;\u001F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos; &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;#&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;(&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;Y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;Z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;a&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;b&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&apos;\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;(&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;Y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;Z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;a&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;b&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&apos;\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC(&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLICA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLICB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLICY&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLICZ&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLICa&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLICb&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLICy&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLICz&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa PUBLIC\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM\u0008&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM\u000D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM\u001F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot; &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;#&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;Y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;Z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;a&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;b&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&quot;\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM#&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos; &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;\u0008&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;\u000D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;\u001F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos; &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;Y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;Z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;a&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;b&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&apos;\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;(&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;Y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;Z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;a&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;b&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&apos;\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM(&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEMA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEMB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEMY&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEMZ&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEMa&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEMb&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEMy&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEMz&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa SYSTEM\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa Y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa Z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa `&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa a&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa a\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa a\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa a\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa a\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa a\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa a &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa a!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa a&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa a&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa a&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa a-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa a/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa a0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa a1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa a9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa a&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa a=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa a&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa a?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa a@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa aA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa aB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa aY&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa aZ&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa a`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa aa&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa ab&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa ay&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa az&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa a{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa a\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa b&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa {&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa \uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEaA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEaB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEaY&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEaZ&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa[&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEaa&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEab&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEay&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEaz&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEa\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEb&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEy&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPEz&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!DOCTYPE\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!Y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!Z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!a&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!b&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;!\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/ &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/ \u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;//&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/A&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;/B&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/Y&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/Z&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/[&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/a&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/b&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/y&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/z&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;/\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?\u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?\u0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?\u000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?\u000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?\u000C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;? &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;? \u0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?!&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?&quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?&amp;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?-&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;?/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?&lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;??&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?Y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?Z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?a&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?b&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;?\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;A&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.002"/>
  <testcase name="test[test3.test:&apos;&lt;B&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;Y&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;Z&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;[&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a\u0000&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a\u0008&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a\u0009&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a\u000A&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a\u000B&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a\u000C&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a\u000D&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a\u001F&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a &gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a &gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a \u0000&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;a \u0008&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a \u0009&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a \u000A&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a \u000B&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a \u000C&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a \u000D&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a \u001F&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a  &gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a !&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a &quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a #&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a &amp;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a &apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a (&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a -&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a .&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a /&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a 0&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a 1&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a 9&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a &lt;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a =&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;a ?&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a @&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a A&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a B&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a Y&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a Z&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a [&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a `&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a\u0000&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a\u0008&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a\u0009&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a\u000A&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a\u000B&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a\u000C&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a\u000D&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a\u001F&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a &gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a &gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a \u0000&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a \u0008&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a \u0009&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a \u000A&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a \u000B&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a \u000C&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a \u000D&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a \u001F&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;a a  &gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a !&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a &quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a #&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a &amp;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a &apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a (&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a -&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a .&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a /&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a 0&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a 1&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a 9&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a &lt;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a =&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a ?&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a @&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a A&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a B&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a Y&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a Z&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a [&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a `&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;a a a&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a b&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a y&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a z&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a {&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a \uDBC0\uDC00&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a!&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a#&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a&amp;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a(&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a-&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a.&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a/&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a0&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a1&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a9&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a&lt;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=\u0000&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=\u0008&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=\u0009&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=\u000A&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=\u000B&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=\u000C&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=\u000D&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=\u001F&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a= &gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=!&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;\u0000&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;\u0009&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;\u000A&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;\u000B&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;\u000C&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot; &quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;!&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;#&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;%&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;&amp;&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;&apos;&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;-&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;/&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;0&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;1&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;9&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;&lt;&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;=&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;&gt;&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;?&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;@&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;A&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;B&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;Y&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;Z&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;`&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;a&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;b&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;y&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;z&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;{&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&quot;\uDBC0\uDC00&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=#&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=%&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&amp;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;\u0000&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;\u0009&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;\u000A&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;\u000B&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;\u000C&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos; &apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;!&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&quot;&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;%&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&amp;&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;\u0000&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;\u0008&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;\u0009&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;\u000A&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;\u000B&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;\u000C&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;\u000D&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;\u001F&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos; &gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;!&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;&amp;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;-&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;.&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;/&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;0&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;1&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;9&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;&lt;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;=&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;?&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;@&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;A&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;B&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;Y&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;Z&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;`&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;a&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;b&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;y&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;z&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;{&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&apos;\uDBC0\uDC00&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;(&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;-&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;/&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;0&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;1&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;9&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&lt;&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;=&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;&gt;&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;?&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;@&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;A&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;B&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;Y&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;Z&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;`&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;a&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;b&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;y&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;z&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;{&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&apos;\uDBC0\uDC00&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=(&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=-&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=/&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=0&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=1&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=9&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=&lt;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a==&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=?&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=@&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=A&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=B&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=Y&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=Z&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=`&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a\u0000&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a\u0008&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a\u0009&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a\u000A&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a\u000B&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a\u000C&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a\u000D&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a\u001F&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a &gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a!&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a#&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a%&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a&amp;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a(&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a-&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a/&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a0&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a1&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a9&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a&lt;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a=&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a?&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a@&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=aA&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=aB&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=aY&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=aZ&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a`&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=aa&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=ab&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=ay&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=az&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a{&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=a\uDBC0\uDC00&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=b&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=y&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=z&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a={&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a=\uDBC0\uDC00&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a?&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a@&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a aA&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a aB&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a aY&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a aZ&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a[&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a`&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a aa&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;a ab&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a ay&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a az&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a{&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a a\uDBC0\uDC00&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a b&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a y&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a z&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a {&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a \uDBC0\uDC00&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a!&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a&amp;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a-&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a.&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;&lt;a/\u0000&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/\u0009&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/\u000A&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/\u000B&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/\u000C&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/ &gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/!&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/&quot;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/&amp;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/-&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a//&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/0&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/1&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/9&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/&lt;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/=&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/?&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/@&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/A&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/B&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/Y&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/Z&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/`&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/a&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/b&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/y&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/z&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/{&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a/\uDBC0\uDC00&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a0&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a1&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a9&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a&lt;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a=&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a?&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a@&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;aA&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;aB&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;aY&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;aZ&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a[&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a`&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;aa&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;ab&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;ay&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;az&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a{&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;a\uDBC0\uDC00&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;b&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;y&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;z&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&lt;\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;=&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;&gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test3.test:&apos;?&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;@&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;Y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;Z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;`&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;a&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;b&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;y&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;z&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;{&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test3.test:&apos;\uDBC0\uDC00&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: AElig without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.025"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: AElig; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: AMP without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: AMP; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Aacute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Aacute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Abreve without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Abreve; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Acirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Acirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Acy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Acy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Afr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Afr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Agrave without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Agrave; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Alpha without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Alpha; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Amacr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Amacr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: And without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: And; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Aogon without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Aogon; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Aopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Aopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ApplyFunction without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ApplyFunction; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Aring without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Aring; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Ascr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ascr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Assign without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Assign; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Atilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Atilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Auml without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Auml; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Backslash without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Backslash; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Barv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Barv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Barwed without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Barwed; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Bcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Bcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Because without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Because; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Bernoullis without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Bernoullis; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Beta without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Beta; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Bfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Bfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Bopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Bopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Breve without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Breve; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Bscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Bscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Bumpeq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Bumpeq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: CHcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: CHcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: COPY without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: COPY; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Cacute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Cacute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Cap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Cap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: CapitalDifferentialD without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: CapitalDifferentialD; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Cayleys without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Cayleys; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Ccaron without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ccaron; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ccedil without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ccedil; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Ccirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ccirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Cconint without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Cconint; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Cdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Cdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Cedilla without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Cedilla; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: CenterDot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: CenterDot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Cfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Cfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Chi without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Chi; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: CircleDot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: CircleDot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: CircleMinus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: CircleMinus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: CirclePlus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: CirclePlus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: CircleTimes without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: CircleTimes; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ClockwiseContourIntegral without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ClockwiseContourIntegral; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: CloseCurlyDoubleQuote without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: CloseCurlyDoubleQuote; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: CloseCurlyQuote without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: CloseCurlyQuote; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Colon without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Colon; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Colone without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Colone; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Congruent without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Congruent; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Conint without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Conint; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ContourIntegral without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ContourIntegral; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Copf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Copf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Coproduct without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Coproduct; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: CounterClockwiseContourIntegral without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: CounterClockwiseContourIntegral; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Cross without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Cross; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Cscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Cscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Cup without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Cup; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: CupCap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: CupCap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DD without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DD; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DDotrahd without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DDotrahd; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DJcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DJcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DScy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DScy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DZcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DZcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Dagger without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Dagger; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Darr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Darr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Dashv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Dashv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Dcaron without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Dcaron; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Dcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Dcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Del without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Del; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Delta without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Delta; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Dfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Dfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DiacriticalAcute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DiacriticalAcute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DiacriticalDot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DiacriticalDot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DiacriticalDoubleAcute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DiacriticalDoubleAcute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DiacriticalGrave without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DiacriticalGrave; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DiacriticalTilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DiacriticalTilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Diamond without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Diamond; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DifferentialD without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DifferentialD; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Dopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Dopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Dot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Dot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DotDot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DotDot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DotEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DotEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DoubleContourIntegral without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DoubleContourIntegral; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DoubleDot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DoubleDot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DoubleDownArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DoubleDownArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DoubleLeftArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DoubleLeftArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DoubleLeftRightArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DoubleLeftRightArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DoubleLeftTee without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DoubleLeftTee; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DoubleLongLeftArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DoubleLongLeftArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DoubleLongLeftRightArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DoubleLongLeftRightArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DoubleLongRightArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DoubleLongRightArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DoubleRightArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DoubleRightArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DoubleRightTee without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DoubleRightTee; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DoubleUpArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DoubleUpArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DoubleUpDownArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DoubleUpDownArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DoubleVerticalBar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DoubleVerticalBar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DownArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DownArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DownArrowBar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DownArrowBar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DownArrowUpArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DownArrowUpArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DownBreve without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DownBreve; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DownLeftRightVector without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DownLeftRightVector; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DownLeftTeeVector without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DownLeftTeeVector; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DownLeftVector without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DownLeftVector; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DownLeftVectorBar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DownLeftVectorBar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DownRightTeeVector without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DownRightTeeVector; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DownRightVector without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DownRightVector; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DownRightVectorBar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DownRightVectorBar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DownTee without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DownTee; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: DownTeeArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: DownTeeArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Downarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Downarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Dscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Dscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Dstrok without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Dstrok; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ENG without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ENG; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ETH without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ETH; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Eacute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Eacute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Ecaron without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ecaron; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ecirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ecirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Ecy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ecy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Edot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Edot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Efr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Efr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Egrave without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Egrave; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Element without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Element; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Emacr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Emacr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: EmptySmallSquare without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: EmptySmallSquare; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: EmptyVerySmallSquare without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: EmptyVerySmallSquare; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Eogon without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Eogon; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Eopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Eopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Epsilon without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Epsilon; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Equal without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Equal; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: EqualTilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: EqualTilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Equilibrium without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Equilibrium; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Escr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Escr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Esim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Esim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Eta without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Eta; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Euml without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Euml; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Exists without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Exists; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ExponentialE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ExponentialE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Fcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Fcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Ffr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ffr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: FilledSmallSquare without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: FilledSmallSquare; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: FilledVerySmallSquare without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: FilledVerySmallSquare; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Fopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Fopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ForAll without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ForAll; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Fouriertrf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Fouriertrf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Fscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Fscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: GJcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: GJcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: GT without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: GT; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Gamma without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Gamma; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Gammad without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Gammad; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Gbreve without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Gbreve; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Gcedil without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Gcedil; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Gcirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Gcirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Gcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Gcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Gdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Gdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Gfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Gfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Gg without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Gg; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Gopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Gopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: GreaterEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: GreaterEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: GreaterEqualLess without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: GreaterEqualLess; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: GreaterFullEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: GreaterFullEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: GreaterGreater without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: GreaterGreater; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: GreaterLess without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: GreaterLess; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: GreaterSlantEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: GreaterSlantEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: GreaterTilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: GreaterTilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Gscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Gscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Gt without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Gt; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: HARDcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: HARDcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Hacek without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Hacek; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Hat without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Hat; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Hcirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Hcirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Hfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Hfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: HilbertSpace without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: HilbertSpace; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Hopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Hopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: HorizontalLine without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: HorizontalLine; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Hscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Hscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Hstrok without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Hstrok; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: HumpDownHump without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: HumpDownHump; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: HumpEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: HumpEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: IEcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: IEcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: IJlig without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: IJlig; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: IOcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: IOcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Iacute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Iacute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Icirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Icirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Icy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Icy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Idot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Idot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Ifr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ifr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Igrave without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Igrave; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Im without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Im; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Imacr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Imacr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ImaginaryI without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ImaginaryI; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Implies without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Implies; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Int without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Int; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Integral without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Integral; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Intersection without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Intersection; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: InvisibleComma without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: InvisibleComma; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: InvisibleTimes without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: InvisibleTimes; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Iogon without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Iogon; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Iopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Iopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Iota without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Iota; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Iscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Iscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Itilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Itilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Iukcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Iukcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Iuml without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Iuml; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Jcirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Jcirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Jcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Jcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Jfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Jfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Jopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Jopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Jscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Jscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Jsercy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Jsercy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Jukcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Jukcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: KHcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: KHcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: KJcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: KJcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Kappa without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Kappa; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Kcedil without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Kcedil; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Kcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Kcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Kfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Kfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Kopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Kopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Kscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Kscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LJcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LJcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LT without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LT; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Lacute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Lacute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Lambda without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Lambda; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Lang without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Lang; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Laplacetrf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Laplacetrf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Larr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Larr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Lcaron without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Lcaron; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Lcedil without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Lcedil; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Lcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Lcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LeftAngleBracket without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LeftAngleBracket; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LeftArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LeftArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LeftArrowBar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LeftArrowBar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LeftArrowRightArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LeftArrowRightArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LeftCeiling without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LeftCeiling; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LeftDoubleBracket without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LeftDoubleBracket; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LeftDownTeeVector without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LeftDownTeeVector; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LeftDownVector without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LeftDownVector; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LeftDownVectorBar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LeftDownVectorBar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LeftFloor without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LeftFloor; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LeftRightArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LeftRightArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LeftRightVector without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LeftRightVector; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LeftTee without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LeftTee; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LeftTeeArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LeftTeeArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LeftTeeVector without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LeftTeeVector; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LeftTriangle without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LeftTriangle; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LeftTriangleBar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LeftTriangleBar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LeftTriangleEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LeftTriangleEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LeftUpDownVector without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LeftUpDownVector; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LeftUpTeeVector without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LeftUpTeeVector; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LeftUpVector without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LeftUpVector; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LeftUpVectorBar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LeftUpVectorBar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LeftVector without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LeftVector; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LeftVectorBar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LeftVectorBar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Leftarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Leftarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Leftrightarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Leftrightarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LessEqualGreater without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LessEqualGreater; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LessFullEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LessFullEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LessGreater without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LessGreater; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LessLess without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LessLess; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LessSlantEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LessSlantEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LessTilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LessTilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Lfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Lfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Ll without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ll; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Lleftarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Lleftarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Lmidot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Lmidot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LongLeftArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LongLeftArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LongLeftRightArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LongLeftRightArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LongRightArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LongRightArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Longleftarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Longleftarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Longleftrightarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Longleftrightarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Longrightarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Longrightarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Lopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Lopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LowerLeftArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LowerLeftArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: LowerRightArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: LowerRightArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Lscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Lscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Lsh without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Lsh; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Lstrok without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Lstrok; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Lt without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Lt; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Map without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Map; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Mcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Mcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: MediumSpace without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: MediumSpace; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Mellintrf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Mellintrf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Mfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Mfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: MinusPlus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: MinusPlus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Mopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Mopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Mscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Mscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Mu without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Mu; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NJcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NJcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Nacute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Nacute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Ncaron without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ncaron; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Ncedil without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ncedil; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Ncy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ncy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NegativeMediumSpace without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NegativeMediumSpace; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NegativeThickSpace without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NegativeThickSpace; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NegativeThinSpace without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NegativeThinSpace; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NegativeVeryThinSpace without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NegativeVeryThinSpace; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NestedGreaterGreater without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NestedGreaterGreater; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NestedLessLess without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NestedLessLess; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NewLine without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NewLine; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Nfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Nfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NoBreak without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NoBreak; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NonBreakingSpace without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NonBreakingSpace; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Nopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Nopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Not without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Not; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotCongruent without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotCongruent; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotCupCap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotCupCap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotDoubleVerticalBar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotDoubleVerticalBar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotElement without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotElement; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotEqualTilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotEqualTilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotExists without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotExists; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotGreater without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotGreater; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotGreaterEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotGreaterEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotGreaterFullEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotGreaterFullEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotGreaterGreater without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotGreaterGreater; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotGreaterLess without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotGreaterLess; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotGreaterSlantEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotGreaterSlantEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotGreaterTilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotGreaterTilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotHumpDownHump without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotHumpDownHump; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotHumpEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotHumpEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotLeftTriangle without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotLeftTriangle; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotLeftTriangleBar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotLeftTriangleBar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotLeftTriangleEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotLeftTriangleEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotLess without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotLess; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotLessEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotLessEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotLessGreater without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotLessGreater; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotLessLess without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotLessLess; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotLessSlantEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotLessSlantEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotLessTilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotLessTilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotNestedGreaterGreater without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotNestedGreaterGreater; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotNestedLessLess without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotNestedLessLess; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotPrecedes without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotPrecedes; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotPrecedesEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotPrecedesEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotPrecedesSlantEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotPrecedesSlantEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotReverseElement without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotReverseElement; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotRightTriangle without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotRightTriangle; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotRightTriangleBar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotRightTriangleBar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotRightTriangleEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotRightTriangleEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotSquareSubset without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotSquareSubset; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotSquareSubsetEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotSquareSubsetEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotSquareSuperset without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotSquareSuperset; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotSquareSupersetEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotSquareSupersetEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotSubset without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotSubset; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotSubsetEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotSubsetEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotSucceeds without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotSucceeds; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotSucceedsEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotSucceedsEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotSucceedsSlantEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotSucceedsSlantEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotSucceedsTilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotSucceedsTilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotSuperset without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotSuperset; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotSupersetEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotSupersetEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotTilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotTilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotTildeEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotTildeEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotTildeFullEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotTildeFullEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotTildeTilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotTildeTilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: NotVerticalBar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: NotVerticalBar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Nscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Nscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ntilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ntilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Nu without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Nu; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: OElig without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: OElig; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Oacute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Oacute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ocirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ocirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Ocy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ocy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Odblac without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Odblac; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Ofr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ofr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ograve without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ograve; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Omacr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Omacr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Omega without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Omega; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Omicron without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Omicron; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Oopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Oopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: OpenCurlyDoubleQuote without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: OpenCurlyDoubleQuote; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: OpenCurlyQuote without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: OpenCurlyQuote; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Or without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Or; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Oscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Oscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Oslash without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Oslash; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Otilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Otilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Otimes without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Otimes; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ouml without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ouml; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: OverBar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: OverBar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: OverBrace without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: OverBrace; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: OverBracket without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: OverBracket; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: OverParenthesis without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: OverParenthesis; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: PartialD without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: PartialD; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Pcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Pcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Pfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Pfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Phi without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Phi; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Pi without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Pi; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: PlusMinus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: PlusMinus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Poincareplane without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Poincareplane; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Popf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Popf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Pr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Pr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Precedes without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Precedes; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: PrecedesEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: PrecedesEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: PrecedesSlantEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: PrecedesSlantEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: PrecedesTilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: PrecedesTilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Prime without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Prime; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Product without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Product; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Proportion without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Proportion; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Proportional without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Proportional; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Pscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Pscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Psi without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Psi; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: QUOT without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: QUOT; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Qfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Qfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Qopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Qopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Qscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Qscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RBarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RBarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: REG without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: REG; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Racute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Racute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Rang without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Rang; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Rarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Rarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Rarrtl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Rarrtl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Rcaron without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Rcaron; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Rcedil without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Rcedil; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Rcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Rcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Re without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Re; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ReverseElement without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ReverseElement; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ReverseEquilibrium without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ReverseEquilibrium; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ReverseUpEquilibrium without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ReverseUpEquilibrium; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Rfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Rfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Rho without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Rho; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RightAngleBracket without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RightAngleBracket; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RightArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RightArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RightArrowBar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RightArrowBar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RightArrowLeftArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RightArrowLeftArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RightCeiling without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RightCeiling; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.008"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RightDoubleBracket without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RightDoubleBracket; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RightDownTeeVector without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RightDownTeeVector; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RightDownVector without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RightDownVector; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RightDownVectorBar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RightDownVectorBar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RightFloor without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RightFloor; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RightTee without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RightTee; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RightTeeArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RightTeeArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RightTeeVector without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RightTeeVector; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RightTriangle without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RightTriangle; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RightTriangleBar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RightTriangleBar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RightTriangleEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RightTriangleEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RightUpDownVector without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RightUpDownVector; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RightUpTeeVector without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RightUpTeeVector; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RightUpVector without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RightUpVector; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RightUpVectorBar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RightUpVectorBar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RightVector without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RightVector; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RightVectorBar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RightVectorBar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Rightarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Rightarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Ropf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ropf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RoundImplies without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RoundImplies; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Rrightarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Rrightarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Rscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Rscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Rsh without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Rsh; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: RuleDelayed without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: RuleDelayed; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: SHCHcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: SHCHcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: SHcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: SHcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: SOFTcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: SOFTcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Sacute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Sacute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Sc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Sc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Scaron without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Scaron; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Scedil without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Scedil; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Scirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Scirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Scy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Scy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Sfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Sfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ShortDownArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ShortDownArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ShortLeftArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ShortLeftArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ShortRightArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ShortRightArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ShortUpArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ShortUpArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Sigma without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Sigma; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: SmallCircle without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: SmallCircle; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Sopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Sopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Sqrt without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Sqrt; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Square without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Square; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: SquareIntersection without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: SquareIntersection; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: SquareSubset without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: SquareSubset; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: SquareSubsetEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: SquareSubsetEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: SquareSuperset without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: SquareSuperset; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: SquareSupersetEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: SquareSupersetEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: SquareUnion without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: SquareUnion; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Sscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Sscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Star without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Star; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Sub without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Sub; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Subset without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Subset; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: SubsetEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: SubsetEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Succeeds without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Succeeds; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: SucceedsEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: SucceedsEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: SucceedsSlantEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: SucceedsSlantEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: SucceedsTilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: SucceedsTilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: SuchThat without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: SuchThat; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Sum without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Sum; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Sup without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Sup; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Superset without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Superset; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: SupersetEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: SupersetEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Supset without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Supset; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: THORN without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: THORN; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: TRADE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: TRADE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: TSHcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: TSHcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: TScy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: TScy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Tab without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Tab; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Tau without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Tau; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Tcaron without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Tcaron; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Tcedil without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Tcedil; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Tcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Tcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Tfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Tfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Therefore without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Therefore; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Theta without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Theta; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ThickSpace without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ThickSpace; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ThinSpace without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ThinSpace; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Tilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Tilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: TildeEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: TildeEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: TildeFullEqual without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: TildeFullEqual; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: TildeTilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: TildeTilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Topf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Topf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: TripleDot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: TripleDot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Tscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Tscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Tstrok without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Tstrok; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Uacute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Uacute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Uarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Uarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Uarrocir without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Uarrocir; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Ubrcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ubrcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Ubreve without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ubreve; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ucirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ucirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Ucy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ucy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Udblac without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Udblac; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Ufr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ufr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ugrave without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ugrave; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Umacr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Umacr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: UnderBar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: UnderBar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: UnderBrace without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: UnderBrace; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: UnderBracket without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: UnderBracket; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: UnderParenthesis without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: UnderParenthesis; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Union without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Union; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: UnionPlus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: UnionPlus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Uogon without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Uogon; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Uopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Uopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: UpArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: UpArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: UpArrowBar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: UpArrowBar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: UpArrowDownArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: UpArrowDownArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: UpDownArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: UpDownArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: UpEquilibrium without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: UpEquilibrium; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: UpTee without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: UpTee; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: UpTeeArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: UpTeeArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Uparrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Uparrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Updownarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Updownarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: UpperLeftArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: UpperLeftArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: UpperRightArrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: UpperRightArrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Upsi without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Upsi; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Upsilon without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Upsilon; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Uring without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Uring; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Uscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Uscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Utilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Utilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Uuml without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Uuml; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: VDash without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: VDash; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Vbar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Vbar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Vcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Vcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Vdash without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Vdash; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Vdashl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Vdashl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Vee without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Vee; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Verbar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Verbar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Vert without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Vert; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: VerticalBar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: VerticalBar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: VerticalLine without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: VerticalLine; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: VerticalSeparator without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: VerticalSeparator; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: VerticalTilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: VerticalTilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: VeryThinSpace without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: VeryThinSpace; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Vfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Vfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Vopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Vopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Vscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Vscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Vvdash without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Vvdash; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Wcirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Wcirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Wedge without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Wedge; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Wfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Wfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Wopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Wopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Wscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Wscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Xfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Xfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Xi without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Xi; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Xopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Xopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Xscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Xscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: YAcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: YAcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: YIcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: YIcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: YUcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: YUcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Yacute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Yacute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Ycirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ycirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Ycy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Ycy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Yfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Yfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Yopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Yopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Yscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Yscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Yuml without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Yuml; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ZHcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ZHcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Zacute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Zacute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Zcaron without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Zcaron; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Zcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Zcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Zdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Zdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ZeroWidthSpace without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ZeroWidthSpace; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Zeta without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Zeta; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Zfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Zfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Zopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Zopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: Zscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: Zscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: aacute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: aacute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: abreve without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: abreve; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ac without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ac; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: acE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: acE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: acd without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: acd; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: acirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: acirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: acute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: acute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: acy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: acy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: aelig without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: aelig; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: af without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: af; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: afr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: afr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: agrave without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: agrave; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: alefsym without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: alefsym; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: aleph without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: aleph; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: alpha without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: alpha; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: amacr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: amacr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: amalg without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: amalg; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: amp without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: amp; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: and without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: and; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: andand without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: andand; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: andd without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: andd; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: andslope without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: andslope; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: andv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: andv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ang without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ang; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ange without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ange; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: angle without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: angle; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: angmsd without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: angmsd; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: angmsdaa without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: angmsdaa; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: angmsdab without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: angmsdab; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: angmsdac without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: angmsdac; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: angmsdad without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: angmsdad; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: angmsdae without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: angmsdae; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: angmsdaf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: angmsdaf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: angmsdag without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: angmsdag; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: angmsdah without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: angmsdah; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: angrt without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: angrt; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: angrtvb without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: angrtvb; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: angrtvbd without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.003"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: angrtvbd; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: angsph without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: angsph; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: angst without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: angst; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: angzarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: angzarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: aogon without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: aogon; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: aopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: aopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: apE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: apE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: apacir without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: apacir; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ape without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ape; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: apid without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: apid; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: apos without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: apos; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: approx without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: approx; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: approxeq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: approxeq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: aring without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: aring; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ascr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ascr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ast without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ast; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: asymp without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: asymp; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: asympeq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: asympeq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: atilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: atilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: auml without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: auml; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: awconint without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: awconint; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: awint without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: awint; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bNot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bNot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: backcong without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: backcong; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: backepsilon without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: backepsilon; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: backprime without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: backprime; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: backsim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: backsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: backsimeq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: backsimeq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: barvee without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: barvee; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: barwed without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: barwed; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: barwedge without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: barwedge; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bbrk without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bbrk; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bbrktbrk without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bbrktbrk; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bcong without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bcong; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bdquo without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bdquo; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: becaus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: becaus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: because without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: because; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bemptyv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bemptyv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bepsi without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bepsi; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bernou without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bernou; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: beta without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: beta; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: beth without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: beth; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: between without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: between; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bigcap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bigcap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bigcirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bigcirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bigcup without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bigcup; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bigodot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bigodot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bigoplus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bigoplus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bigotimes without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bigotimes; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bigsqcup without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bigsqcup; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bigstar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bigstar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bigtriangledown without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bigtriangledown; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bigtriangleup without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bigtriangleup; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: biguplus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: biguplus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bigvee without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bigvee; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bigwedge without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bigwedge; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bkarow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bkarow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: blacklozenge without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: blacklozenge; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: blacksquare without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: blacksquare; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: blacktriangle without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: blacktriangle; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: blacktriangledown without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: blacktriangledown; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: blacktriangleleft without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: blacktriangleleft; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: blacktriangleright without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: blacktriangleright; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: blank without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: blank; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: blk12 without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: blk12; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: blk14 without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: blk14; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: blk34 without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: blk34; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: block without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: block; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bne without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bne; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bnequiv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bnequiv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bnot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bnot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bottom without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bottom; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bowtie without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bowtie; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxDL without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxDL; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxDR without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxDR; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxDl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxDl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxDr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxDr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxH without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxH; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxHD without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxHD; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxHU without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxHU; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxHd without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxHd; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxHu without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxHu; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxUL without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxUL; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxUR without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxUR; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxUl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxUl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxUr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxUr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxV without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxV; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxVH without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxVH; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxVL without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxVL; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxVR without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxVR; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxVh without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxVh; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxVl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxVl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxVr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxVr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxbox without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxbox; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxdL without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxdL; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxdR without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxdR; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxdl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxdl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxdr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxdr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxh without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxh; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxhD without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxhD; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxhU without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxhU; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxhd without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxhd; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxhu without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxhu; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxminus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxminus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxplus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxplus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxtimes without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxtimes; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxuL without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxuL; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxuR without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxuR; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxul without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxul; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxur without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxur; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxvH without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxvH; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxvL without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxvL; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxvR without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxvR; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxvh without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxvh; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxvl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxvl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: boxvr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: boxvr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bprime without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bprime; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: breve without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: breve; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: brvbar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: brvbar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bsemi without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bsemi; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bsim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bsime without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bsime; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bsol without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bsol; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bsolb without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bsolb; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bsolhsub without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bsolhsub; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bull without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bull; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bullet without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bullet; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bump without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bump; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bumpE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bumpE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bumpe without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bumpe; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: bumpeq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: bumpeq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cacute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cacute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: capand without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: capand; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: capbrcup without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: capbrcup; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: capcap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: capcap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: capcup without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: capcup; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: capdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: capdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: caps without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: caps; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: caret without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: caret; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: caron without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: caron; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ccaps without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ccaps; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ccaron without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ccaron; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ccedil without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ccedil; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ccirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ccirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ccups without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ccups; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ccupssm without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ccupssm; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cedil without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cedil; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cemptyv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cemptyv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cent without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cent; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: centerdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: chcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: chcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: check without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: check; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: checkmark without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: checkmark; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: chi without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: chi; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cir without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cir; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cirE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cirE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: circ without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: circ; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: circeq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: circeq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: circlearrowleft without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: circlearrowleft; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: circlearrowright without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: circlearrowright; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: circledR without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: circledR; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: circledS without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: circledS; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: circledast without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: circledast; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: circledcirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: circledcirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: circleddash without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: circleddash; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cire without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cire; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cirfnint without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cirfnint; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cirmid without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cirmid; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cirscir without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cirscir; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: clubs without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: clubs; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: clubsuit without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: clubsuit; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: colon without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: colon; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: colone without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: colone; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: coloneq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: coloneq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: comma without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: comma; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: commat without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: commat; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: comp without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: comp; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: compfn without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: compfn; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: complement without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: complement; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: complexes without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: complexes; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cong without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cong; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: congdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: congdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: conint without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: conint; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: copf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: copf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: coprod without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: coprod; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: copy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: copy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: copysr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: crarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: crarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cross without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cross; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: csub without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: csub; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: csube without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: csube; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: csup without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: csup; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: csupe without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: csupe; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ctdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ctdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cudarrl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cudarrl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cudarrr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cudarrr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cuepr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cuepr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cuesc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cuesc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cularr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cularr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cularrp without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cularrp; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cup without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cup; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cupbrcap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cupbrcap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cupcap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cupcap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cupcup without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cupcup; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cupdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cupdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cupor without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cupor; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cups without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cups; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: curarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: curarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: curarrm without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: curarrm; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: curlyeqprec without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: curlyeqprec; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: curlyeqsucc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: curlyeqsucc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: curlyvee without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: curlyvee; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: curlywedge without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: curlywedge; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: curren without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: curren; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: curvearrowleft without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: curvearrowleft; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: curvearrowright without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: curvearrowright; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cuvee without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cuvee; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cuwed without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cuwed; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cwconint without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cwconint; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cwint without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cwint; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: cylcty without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: cylcty; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dArr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dArr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dHar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dHar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dagger without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dagger; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: daleth without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: daleth; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: darr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: darr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dash without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dash; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dashv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dashv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dbkarow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dbkarow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dblac without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dblac; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dcaron without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dcaron; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dd without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dd; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ddagger without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ddagger; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ddarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ddarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ddotseq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ddotseq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: deg without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: deg; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: delta without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: delta; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: demptyv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: demptyv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dfisht without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dfisht; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dharl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dharl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dharr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dharr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: diam without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: diam; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: diamond without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: diamond; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: diamondsuit without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: diamondsuit; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: diams without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: diams; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: die without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: die; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: digamma without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: digamma; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: disin without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: disin; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: div without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: div; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: divide without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: divide; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: divideontimes; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: divonx without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: divonx; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: djcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: djcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dlcorn without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dlcorn; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dlcrop without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dlcrop; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dollar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dollar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: doteq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: doteq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: doteqdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: doteqdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dotminus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dotminus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dotplus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dotplus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dotsquare without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dotsquare; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: doublebarwedge without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: doublebarwedge; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: downarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: downarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: downdownarrows without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: downdownarrows; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: downharpoonleft without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: downharpoonleft; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: downharpoonright without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: downharpoonright; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: drbkarow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: drbkarow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: drcorn without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: drcorn; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: drcrop without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: drcrop; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dscy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dscy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dsol without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dsol; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dstrok without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dstrok; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dtdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dtdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dtri without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dtri; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dtrif without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dtrif; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: duarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: duarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: duhar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: duhar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dwangle without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dwangle; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dzcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dzcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: dzigrarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: dzigrarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: eDDot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: eDDot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: eDot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: eDot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: eacute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: eacute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: easter without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: easter; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ecaron without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ecaron; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ecir without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ecir; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ecirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ecirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ecolon without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ecolon; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ecy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ecy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: edot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: edot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ee without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ee; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: efDot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: efDot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: efr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: efr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: eg without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: eg; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: egrave without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: egrave; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: egs without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: egs; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: egsdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: egsdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: el without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: el; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: elinters without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: elinters; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ell without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ell; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: els without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: els; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: elsdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: elsdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: emacr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: emacr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: empty without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: empty; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: emptyset without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: emptyset; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: emptyv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: emptyv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: emsp without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: emsp13 without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: emsp13; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: emsp14 without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: emsp14; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: emsp; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: eng without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: eng; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ensp without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ensp; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: eogon without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: eogon; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: eopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: eopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: epar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: epar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: eparsl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: eparsl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: eplus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: eplus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: epsi without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: epsi; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: epsilon without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: epsilon; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: epsiv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: epsiv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: eqcirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: eqcirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: eqcolon without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: eqcolon; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: eqsim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: eqsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: eqslantgtr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: eqslantgtr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: eqslantless without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: eqslantless; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: equals without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: equals; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: equest without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: equest; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: equiv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: equiv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: equivDD without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: equivDD; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: eqvparsl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: eqvparsl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: erDot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: erDot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: erarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: erarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: escr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: escr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: esdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: esdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: esim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: esim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: eta without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: eta; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: eth without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: eth; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: euml without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: euml; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: euro without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: euro; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: excl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: excl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: exist without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: exist; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: expectation without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: expectation; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: exponentiale without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: exponentiale; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: fallingdotseq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: fallingdotseq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: fcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: fcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: female without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: female; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ffilig without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ffilig; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: fflig without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: fflig; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ffllig without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ffllig; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ffr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ffr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: filig without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: filig; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: fjlig without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: fjlig; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: flat without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: flat; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: fllig without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: fllig; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: fltns without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: fltns; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: fnof without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: fnof; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: fopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: fopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: forall without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: forall; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: fork without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: fork; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: forkv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: forkv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: fpartint without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: fpartint; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: frac12 without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: frac12; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: frac13 without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: frac13; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: frac14 without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: frac14; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: frac15 without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: frac15; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: frac16 without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: frac16; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: frac18 without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: frac18; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: frac23 without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: frac23; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: frac25 without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: frac25; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: frac34 without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: frac34; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: frac35 without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: frac35; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: frac38 without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: frac38; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: frac45 without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: frac45; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: frac56 without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: frac56; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: frac58 without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: frac58; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: frac78 without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: frac78; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: frasl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: frasl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: frown without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: frown; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: fscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: fscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gEl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gEl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gacute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gacute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gamma without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gamma; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gammad without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gammad; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gbreve without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gbreve; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gcirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.002"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gcirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ge without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ge; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gel without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gel; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: geq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: geq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: geqq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: geqq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: geqslant without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: geqslant; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ges without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ges; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gescc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gescc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gesdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gesdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gesdoto without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gesdoto; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gesdotol without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gesdotol; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gesl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gesl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gesles without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gesles; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gg without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gg; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ggg without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ggg; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gimel without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gimel; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gjcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gjcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: glE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: glE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gla without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gla; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: glj without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: glj; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gnE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gnE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gnap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gnap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gnapprox without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gnapprox; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gne without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gne; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gneq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gneq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gneqq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gneqq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gnsim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gnsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: grave without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: grave; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gsim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gsime without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gsime; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gsiml without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gsiml; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gt without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gt; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gtcc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gtcir; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gtdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gtlPar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gtquest; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gtrapprox; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gtrarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gtrdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gtreqless; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gtreqqless; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gtrless; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gtrsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gvertneqq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gvertneqq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: gvnE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: gvnE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: hArr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: hArr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: hairsp without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: hairsp; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: half without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: half; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: hamilt without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: hamilt; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: hardcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: hardcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: harr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: harr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: harrcir without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: harrcir; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: harrw without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: harrw; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: hbar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: hbar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: hcirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: hcirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: hearts without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: hearts; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: heartsuit without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: heartsuit; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: hellip without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: hellip; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: hercon without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: hercon; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: hfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: hfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: hksearow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: hksearow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: hkswarow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: hkswarow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: hoarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: hoarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: homtht without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: homtht; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: hookleftarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: hookleftarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: hookrightarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: hookrightarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: hopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: hopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: horbar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: horbar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: hscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: hscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: hslash without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: hslash; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: hstrok without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: hstrok; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: hybull without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: hybull; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: hyphen without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: hyphen; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: iacute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: iacute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ic without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ic; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: icirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: icirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: icy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: icy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: iecy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: iecy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: iexcl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: iexcl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: iff without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: iff; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ifr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ifr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: igrave without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: igrave; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ii without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ii; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: iiiint without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: iiiint; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: iiint without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: iiint; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: iinfin without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: iinfin; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: iiota without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: iiota; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ijlig without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ijlig; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: imacr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: imacr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: image without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: image; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: imagline without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: imagline; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: imagpart without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: imagpart; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: imath without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: imath; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: imof without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: imof; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: imped without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: imped; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: in without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: in; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: incare without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: incare; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: infin without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: infin; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: infintie without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: infintie; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: inodot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: inodot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: int without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: int; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: intcal without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: intcal; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: integers without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: integers; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: intercal without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: intercal; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: intlarhk without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: intlarhk; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: intprod without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: intprod; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: iocy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: iocy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: iogon without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: iogon; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: iopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: iopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: iota without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: iota; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: iprod without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: iprod; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: iquest without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: iquest; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: iscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: iscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: isin without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: isin; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: isinE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: isinE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: isindot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: isindot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: isins without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: isins; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: isinsv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: isinsv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: isinv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: isinv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: it without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: it; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: itilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: itilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: iukcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: iukcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: iuml without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: iuml; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: jcirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: jcirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: jcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: jcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: jfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: jfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: jmath without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: jmath; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: jopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: jopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: jscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: jscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: jsercy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: jsercy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: jukcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: jukcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: kappa without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: kappa; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: kappav without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: kappav; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: kcedil without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: kcedil; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: kcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: kcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: kfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: kfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: kgreen without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: kgreen; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: khcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: khcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: kjcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: kjcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: kopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: kopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: kscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: kscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lAarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lAarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lArr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lArr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lAtail without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lAtail; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lBarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lBarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lEg without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lEg; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lHar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lHar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lacute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lacute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: laemptyv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: laemptyv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lagran without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lagran; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lambda without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lambda; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lang without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lang; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: langd without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: langd; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: langle without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: langle; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: laquo without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: laquo; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: larr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: larr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: larrb without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: larrb; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: larrbfs without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: larrbfs; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: larrfs without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: larrfs; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: larrhk without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: larrhk; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: larrlp without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: larrlp; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: larrpl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: larrpl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: larrsim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: larrsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: larrtl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: larrtl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lat without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lat; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: latail without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: latail; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: late without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: late; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lates without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lates; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lbarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lbarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lbbrk without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lbbrk; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lbrace without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lbrace; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lbrack without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lbrack; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lbrke without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lbrke; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lbrksld without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lbrksld; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lbrkslu without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lbrkslu; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lcaron without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lcaron; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lcedil without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lcedil; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lceil without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lceil; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lcub without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lcub; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ldca without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ldca; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ldquo without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ldquo; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ldquor without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ldquor; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ldrdhar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ldrdhar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ldrushar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ldrushar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ldsh without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ldsh; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: le without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: le; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: leftarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: leftarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: leftarrowtail without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: leftarrowtail; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: leftharpoondown without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: leftharpoondown; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: leftharpoonup without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: leftharpoonup; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: leftleftarrows without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: leftleftarrows; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: leftrightarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: leftrightarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: leftrightarrows without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: leftrightarrows; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: leftrightharpoons without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: leftrightharpoons; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: leftrightsquigarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: leftrightsquigarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: leftthreetimes without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: leftthreetimes; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: leg without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: leg; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: leq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: leq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: leqq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: leqq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: leqslant without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: leqslant; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: les without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: les; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lescc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lescc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lesdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lesdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lesdoto without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lesdoto; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lesdotor without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lesdotor; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lesg without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lesg; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lesges without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lesges; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lessapprox without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lessapprox; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lessdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lessdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lesseqgtr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lesseqgtr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lesseqqgtr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lesseqqgtr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lessgtr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lessgtr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lesssim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lesssim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lfisht without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lfisht; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lfloor without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lfloor; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lg without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lg; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lgE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lgE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lhard without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lhard; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lharu without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lharu; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lharul without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lharul; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lhblk without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lhblk; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ljcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ljcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ll without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ll; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: llarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: llarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: llcorner without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: llcorner; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: llhard without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: llhard; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lltri without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lltri; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lmidot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lmidot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lmoust without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lmoust; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lmoustache without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lmoustache; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lnE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lnE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lnap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lnap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lnapprox without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lnapprox; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lne without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lne; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lneq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lneq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lneqq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lneqq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lnsim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lnsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: loang without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: loang; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: loarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: loarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lobrk without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lobrk; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: longleftarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: longleftarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: longleftrightarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: longleftrightarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: longmapsto without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: longmapsto; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: longrightarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: longrightarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: looparrowleft without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: looparrowleft; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: looparrowright without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: looparrowright; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lopar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lopar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: loplus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: loplus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lotimes without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lotimes; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lowast without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lowast; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lowbar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lowbar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: loz without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: loz; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lozenge without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lozenge; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lozf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lozf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lpar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lpar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lparlt without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lparlt; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lrarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lrarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lrcorner without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lrcorner; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lrhar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lrhar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lrhard without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lrhard; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lrm without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lrm; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lrtri without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lrtri; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lsaquo without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lsaquo; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lsh without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lsh; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lsim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lsime without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lsime; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lsimg without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lsimg; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lsqb without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lsqb; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lsquo without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lsquo; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lsquor without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lsquor; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lstrok without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lstrok; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lt without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lt; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ltcc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ltcir; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ltdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lthree; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ltimes; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ltlarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ltquest; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ltrPar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ltri; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ltrie; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ltrif; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lurdshar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lurdshar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: luruhar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: luruhar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lvertneqq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lvertneqq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: lvnE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: lvnE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: mDDot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: mDDot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: macr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: macr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: male without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: male; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: malt without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: malt; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: maltese without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: maltese; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: map without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: map; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: mapsto without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: mapsto; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: mapstodown without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: mapstodown; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: mapstoleft without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: mapstoleft; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: mapstoup without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: mapstoup; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: marker without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: marker; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: mcomma without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: mcomma; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: mcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: mcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: mdash without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: mdash; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: measuredangle without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: measuredangle; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: mfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: mfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: mho without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: mho; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: micro without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: micro; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: mid without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: mid; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: midast without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: midast; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: midcir without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: midcir; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: middot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: middot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: minus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: minus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: minusb without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: minusb; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: minusd without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: minusd; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: minusdu without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: minusdu; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: mlcp without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: mlcp; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: mldr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: mldr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: mnplus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: mnplus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: models without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: models; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: mopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: mopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: mp without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: mp; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: mscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: mscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: mstpos without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: mstpos; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: mu without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: mu; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: multimap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: multimap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: mumap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: mumap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nGg without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nGg; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nGt without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nGt; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nGtv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nGtv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nLeftarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nLeftarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nLeftrightarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nLeftrightarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nLl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nLl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nLt without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nLt; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nLtv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nLtv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nRightarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nRightarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nVDash without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nVDash; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nVdash without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nVdash; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nabla without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nabla; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nacute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nacute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nang without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nang; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: napE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: napE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: napid without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: napid; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: napos without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: napos; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: napprox without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: napprox; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: natur without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: natur; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: natural without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: natural; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: naturals without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: naturals; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nbsp without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nbsp; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nbump without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nbump; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nbumpe without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nbumpe; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ncap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ncap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ncaron without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ncaron; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ncedil without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ncedil; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ncong without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ncong; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ncongdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ncongdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ncup without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ncup; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ncy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ncy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ndash without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ndash; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ne without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ne; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: neArr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: neArr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nearhk without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nearhk; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nearr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nearr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nearrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nearrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nedot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nedot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nequiv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nequiv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nesear without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nesear; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nesim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nesim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nexist without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nexist; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nexists without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nexists; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ngE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ngE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nge without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nge; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ngeq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ngeq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ngeqq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ngeqq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ngeqslant without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ngeqslant; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nges without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nges; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ngsim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ngsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ngt without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ngt; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ngtr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ngtr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nhArr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nhArr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nharr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nharr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nhpar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nhpar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ni without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ni; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nis without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nis; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nisd without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nisd; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: niv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: niv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: njcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: njcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nlArr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nlArr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nlE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nlE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nlarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nlarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nldr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nldr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nle without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nle; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nleftarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nleftarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nleftrightarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nleftrightarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nleq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nleq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nleqq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nleqq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nleqslant without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nleqslant; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nles without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nles; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nless without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nless; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nlsim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nlsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nlt without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nlt; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nltri without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nltri; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nltrie without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nltrie; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nmid without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nmid; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: not without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: not; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: notin; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: notinE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: notindot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: notinva; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: notinvb; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: notinvc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: notni; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: notniva; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: notnivb; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: notnivc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: npar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: npar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nparallel without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nparallel; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nparsl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nparsl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: npart without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: npart; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: npolint without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: npolint; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: npr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: npr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nprcue without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nprcue; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: npre without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: npre; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nprec without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nprec; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: npreceq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: npreceq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nrArr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nrArr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nrarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nrarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nrarrc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nrarrc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nrarrw without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nrarrw; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nrightarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nrightarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nrtri without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nrtri; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nrtrie without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nrtrie; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nsc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nsc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nsccue without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nsccue; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nsce without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nsce; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nshortmid without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nshortmid; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nshortparallel without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nshortparallel; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nsim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nsime without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nsime; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nsimeq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nsimeq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nsmid without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nsmid; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nspar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nspar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nsqsube without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nsqsube; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nsqsupe without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nsqsupe; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nsub without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nsub; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nsubE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nsubE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nsube without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nsube; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nsubset without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nsubset; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nsubseteq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nsubseteq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nsubseteqq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nsubseteqq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nsucc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nsucc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nsucceq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nsucceq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nsup without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nsup; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nsupE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nsupE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nsupe without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nsupe; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nsupset without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nsupset; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nsupseteq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nsupseteq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nsupseteqq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nsupseteqq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ntgl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ntgl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ntilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ntilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ntlg without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ntlg; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ntriangleleft without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ntriangleleft; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ntrianglelefteq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ntrianglelefteq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ntriangleright without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ntriangleright; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ntrianglerighteq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ntrianglerighteq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nu without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nu; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: num without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: num; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: numero without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: numero; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: numsp without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: numsp; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nvDash without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nvDash; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nvHarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nvHarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nvap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nvap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nvdash without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nvdash; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nvge without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nvge; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nvgt without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nvgt; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nvinfin without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nvinfin; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nvlArr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nvlArr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nvle without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nvle; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nvlt without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nvlt; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nvltrie without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nvltrie; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nvrArr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nvrArr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nvrtrie without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nvrtrie; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nvsim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nvsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nwArr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nwArr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nwarhk without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nwarhk; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nwarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nwarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nwarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nwarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: nwnear without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: nwnear; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: oS without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: oS; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: oacute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: oacute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: oast without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: oast; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ocir without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ocir; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ocirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ocirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ocy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ocy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: odash without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: odash; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: odblac without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: odblac; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: odiv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: odiv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: odot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: odot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: odsold without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: odsold; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: oelig without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: oelig; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ofcir without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ofcir; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ofr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ofr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ogon without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ogon; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ograve without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ograve; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ogt without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ogt; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ohbar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ohbar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ohm without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ohm; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: oint without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: oint; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: olarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: olarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: olcir without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: olcir; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: olcross without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: olcross; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: oline without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: oline; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: olt without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: olt; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: omacr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: omacr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: omega without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: omega; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: omicron without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: omicron; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: omid without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: omid; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ominus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ominus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: oopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: oopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: opar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: opar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: operp without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: operp; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: oplus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: oplus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: or without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: or; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: orarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: orarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ord without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ord; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: order without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: order; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: orderof without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: orderof; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ordf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ordf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ordm without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ordm; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: origof without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: origof; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: oror without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: oror; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: orslope without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: orslope; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: orv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: orv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: oscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: oscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: oslash without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: oslash; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: osol without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: osol; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: otilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: otilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: otimes without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: otimes; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: otimesas without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: otimesas; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ouml without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ouml; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ovbar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ovbar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: par without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: par; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: para without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: para; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: parallel; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: parsim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: parsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: parsl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: parsl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: part without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: part; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: pcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: pcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: percnt without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: percnt; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: period without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: period; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: permil without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: permil; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: perp without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: perp; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: pertenk without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: pertenk; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: pfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: pfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: phi without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: phi; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: phiv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: phiv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: phmmat without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: phmmat; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: phone without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: phone; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: pi without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: pi; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: pitchfork without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: pitchfork; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: piv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: piv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: planck without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: planck; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: planckh without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: planckh; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: plankv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: plankv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: plus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: plus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: plusacir without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: plusacir; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: plusb without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: plusb; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: pluscir without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: pluscir; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: plusdo without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: plusdo; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: plusdu without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: plusdu; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: pluse without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: pluse; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: plusmn without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: plusmn; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: plussim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: plussim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: plustwo without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: plustwo; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: pm without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: pm; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: pointint without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: pointint; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: popf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: popf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: pound without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: pound; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: pr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: pr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: prE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: prE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: prap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: prap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: prcue without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: prcue; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: pre without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: pre; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: prec without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: prec; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: precapprox without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: precapprox; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: preccurlyeq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: preccurlyeq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: preceq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: preceq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: precnapprox without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: precnapprox; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: precneqq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: precneqq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: precnsim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: precnsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: precsim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: precsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: prime without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: prime; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: primes without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: primes; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: prnE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: prnE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: prnap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: prnap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: prnsim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: prnsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: prod without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: prod; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: profalar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: profalar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: profline without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: profline; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: profsurf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: profsurf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: prop without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: prop; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: propto without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: propto; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: prsim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: prsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: prurel without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: prurel; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: pscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: pscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: psi without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: psi; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: puncsp without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: puncsp; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: qfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: qfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: qint without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: qint; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: qopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: qopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: qprime without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: qprime; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: qscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: qscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: quaternions without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: quaternions; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: quatint without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: quatint; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: quest without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: quest; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: questeq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: questeq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: quot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: quot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rAarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rAarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rArr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rArr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rAtail without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rAtail; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rBarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rBarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rHar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rHar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: race without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: race; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: racute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: racute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: radic without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: radic; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: raemptyv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: raemptyv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rang without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rang; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rangd without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rangd; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: range without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: range; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rangle without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rangle; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: raquo without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: raquo; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rarrap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rarrap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rarrb without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rarrb; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rarrbfs without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rarrbfs; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rarrc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rarrc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rarrfs without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rarrfs; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rarrhk without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rarrhk; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rarrlp without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rarrlp; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rarrpl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rarrpl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rarrsim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rarrsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rarrtl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rarrtl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rarrw without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rarrw; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ratail without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ratail; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ratio without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ratio; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rationals without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rationals; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rbarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rbarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rbbrk without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rbbrk; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rbrace without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rbrace; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rbrack without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rbrack; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rbrke without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rbrke; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rbrksld without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rbrksld; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rbrkslu without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rbrkslu; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rcaron without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rcaron; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rcedil without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rcedil; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rceil without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rceil; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rcub without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rcub; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rdca without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rdca; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rdldhar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rdldhar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rdquo without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rdquo; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rdquor without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rdquor; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rdsh without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rdsh; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: real without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: real; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: realine without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: realine; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: realpart without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: realpart; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: reals without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: reals; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rect without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rect; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: reg without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: reg; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rfisht without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rfisht; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rfloor without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rfloor; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rhard without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rhard; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rharu without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rharu; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rharul without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rharul; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rho without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rho; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rhov without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rhov; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rightarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rightarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rightarrowtail without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rightarrowtail; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rightharpoondown without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rightharpoondown; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rightharpoonup without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rightharpoonup; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rightleftarrows without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rightleftarrows; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rightleftharpoons without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rightleftharpoons; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rightrightarrows without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rightrightarrows; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rightsquigarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rightsquigarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rightthreetimes without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rightthreetimes; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ring without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ring; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: risingdotseq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: risingdotseq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rlarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rlarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rlhar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rlhar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rlm without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rlm; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rmoust without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rmoust; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rmoustache without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rmoustache; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rnmid without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rnmid; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: roang without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: roang; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: roarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: roarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: robrk without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: robrk; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ropar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ropar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ropf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ropf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: roplus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: roplus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rotimes without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rotimes; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rpar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rpar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rpargt without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rpargt; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rppolint without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rppolint; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rrarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rrarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rsaquo without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rsaquo; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rsh without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rsh; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rsqb without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rsqb; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rsquo without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rsquo; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rsquor without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rsquor; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rthree without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rthree; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rtimes without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rtimes; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rtri without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rtri; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rtrie without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rtrie; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rtrif without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rtrif; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rtriltri without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rtriltri; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ruluhar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ruluhar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: rx without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: rx; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sacute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sacute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sbquo without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sbquo; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: scE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: scE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: scap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: scap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: scaron without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: scaron; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sccue without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sccue; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sce without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sce; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: scedil without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: scedil; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: scirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: scirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: scnE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: scnE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: scnap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: scnap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: scnsim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: scnsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: scpolint without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: scpolint; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: scsim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: scsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: scy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: scy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sdotb without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sdotb; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sdote without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sdote; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: seArr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: seArr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: searhk without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: searhk; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: searr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: searr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: searrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: searrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sect without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sect; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: semi without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: semi; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: seswar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: seswar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: setminus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: setminus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: setmn without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: setmn; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sext without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sext; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sfrown without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sfrown; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sharp without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sharp; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: shchcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: shchcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: shcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: shcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: shortmid without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: shortmid; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: shortparallel without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: shortparallel; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: shy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: shy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sigma without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sigma; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sigmaf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sigmaf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sigmav without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sigmav; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: simdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: simdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sime without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sime; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: simeq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: simeq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: simg without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: simg; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: simgE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: simgE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: siml without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: siml; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: simlE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: simlE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: simne without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: simne; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: simplus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: simplus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: simrarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: simrarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: slarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: slarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: smallsetminus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: smallsetminus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: smashp without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: smashp; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: smeparsl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: smeparsl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: smid without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: smid; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: smile without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: smile; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: smt without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: smt; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: smte without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: smte; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: smtes without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: smtes; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: softcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: softcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sol without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sol; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: solb without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: solb; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: solbar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: solbar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: spades without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: spades; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: spadesuit without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: spadesuit; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: spar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: spar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sqcap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sqcap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sqcaps without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sqcaps; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sqcup without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sqcup; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sqcups without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sqcups; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sqsub without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sqsub; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sqsube without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sqsube; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sqsubset without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sqsubset; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sqsubseteq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sqsubseteq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sqsup without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sqsup; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sqsupe without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sqsupe; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sqsupset without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sqsupset; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sqsupseteq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sqsupseteq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: squ without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: squ; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: square without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: square; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: squarf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: squarf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: squf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: squf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: srarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: srarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ssetmn without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ssetmn; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ssmile without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ssmile; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sstarf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sstarf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: star without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: star; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: starf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: starf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: straightepsilon without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: straightepsilon; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: straightphi without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: straightphi; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: strns without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: strns; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sub without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sub; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: subE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: subE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: subdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: subdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sube without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sube; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: subedot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: subedot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: submult without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: submult; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: subnE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: subnE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: subne without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: subne; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: subplus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: subplus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: subrarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: subrarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: subset without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: subset; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: subseteq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: subseteq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: subseteqq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: subseteqq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: subsetneq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: subsetneq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: subsetneqq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: subsetneqq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: subsim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: subsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: subsub without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: subsub; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: subsup without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: subsup; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: succ without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: succ; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: succapprox without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: succapprox; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: succcurlyeq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: succcurlyeq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: succeq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: succeq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: succnapprox without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: succnapprox; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: succneqq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: succneqq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: succnsim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: succnsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: succsim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: succsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sum without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sum; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sung without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sung; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: sup without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sup1 without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sup1; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sup2 without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sup2; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sup3 without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sup3; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: sup; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: supE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: supE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: supdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: supdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: supdsub without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: supdsub; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: supe without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: supe; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: supedot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: supedot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: suphsol without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: suphsol; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: suphsub without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: suphsub; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: suplarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: suplarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: supmult without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: supmult; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: supnE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: supnE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: supne without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: supne; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: supplus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: supplus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: supset without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: supset; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: supseteq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: supseteq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: supseteqq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: supseteqq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: supsetneq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: supsetneq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: supsetneqq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: supsetneqq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: supsim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: supsim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: supsub without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: supsub; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: supsup without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: supsup; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: swArr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: swArr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: swarhk without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: swarhk; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: swarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: swarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: swarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: swarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: swnwar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: swnwar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: szlig without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: szlig; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: target without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: target; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: tau without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: tau; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: tbrk without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: tbrk; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: tcaron without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: tcaron; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: tcedil without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: tcedil; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: tcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: tcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: tdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: tdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: telrec without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: telrec; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: tfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: tfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: there4 without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: there4; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: therefore without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: therefore; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: theta without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: theta; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: thetasym without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: thetasym; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: thetav without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: thetav; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: thickapprox without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: thickapprox; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: thicksim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: thicksim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: thinsp without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: thinsp; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: thkap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: thkap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: thksim without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: thksim; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: thorn without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: thorn; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: tilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: tilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: times without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: times; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: timesb; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: timesbar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: timesd; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: tint without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: tint; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: toea without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: toea; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: top without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: top; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: topbot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: topbot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: topcir without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: topcir; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: topf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: topf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: topfork without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: topfork; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: tosa without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: tosa; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: tprime without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: tprime; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: trade without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: trade; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: triangle without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: triangle; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: triangledown without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: triangledown; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: triangleleft without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: triangleleft; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: trianglelefteq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: trianglelefteq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: triangleq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: triangleq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: triangleright without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: triangleright; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: trianglerighteq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: trianglerighteq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: tridot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: tridot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: trie without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: trie; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: triminus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: triminus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: triplus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: triplus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: trisb without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: trisb; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: tritime without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: tritime; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: trpezium without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: trpezium; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: tscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: tscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: tscy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: tscy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: tshcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: tshcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: tstrok without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: tstrok; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: twixt without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: twixt; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: twoheadleftarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: twoheadleftarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: twoheadrightarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: twoheadrightarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: uArr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: uArr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: uHar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: uHar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: uacute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: uacute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: uarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: uarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ubrcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ubrcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ubreve without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ubreve; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ucirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ucirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ucy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ucy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: udarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: udarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: udblac without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: udblac; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: udhar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: udhar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ufisht without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ufisht; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ufr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ufr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ugrave without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ugrave; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: uharl without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: uharl; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: uharr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: uharr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: uhblk without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: uhblk; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ulcorn without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ulcorn; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ulcorner without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ulcorner; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ulcrop without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ulcrop; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ultri without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ultri; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: umacr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: umacr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: uml without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: uml; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: uogon without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: uogon; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: uopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: uopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: uparrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: uparrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: updownarrow without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: updownarrow; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: upharpoonleft without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: upharpoonleft; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: upharpoonright without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: upharpoonright; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: uplus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: uplus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: upsi without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: upsi; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: upsih without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: upsih; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: upsilon without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: upsilon; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: upuparrows without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: upuparrows; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: urcorn without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: urcorn; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: urcorner without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: urcorner; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: urcrop without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: urcrop; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: uring without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: uring; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: urtri without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: urtri; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: uscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: uscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: utdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: utdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: utilde without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: utilde; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: utri without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: utri; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: utrif without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: utrif; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: uuarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: uuarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: uuml without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: uuml; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: uwangle without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: uwangle; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vArr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vArr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vBar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vBar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vBarv without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vBarv; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vDash without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vDash; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vangrt without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vangrt; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: varepsilon without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: varepsilon; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: varkappa without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: varkappa; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: varnothing without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: varnothing; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: varphi without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: varphi; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: varpi without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: varpi; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: varpropto without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: varpropto; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: varr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: varr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: varrho without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: varrho; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: varsigma without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: varsigma; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: varsubsetneq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: varsubsetneq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: varsubsetneqq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: varsubsetneqq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: varsupsetneq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: varsupsetneq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: varsupsetneqq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: varsupsetneqq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vartheta without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vartheta; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vartriangleleft without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vartriangleleft; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vartriangleright without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vartriangleright; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vdash without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vdash; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vee without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vee; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: veebar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: veebar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: veeeq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: veeeq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vellip without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vellip; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: verbar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: verbar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vert without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vert; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vltri without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vltri; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vnsub without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vnsub; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vnsup without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vnsup; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vprop without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vprop; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vrtri without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vrtri; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vsubnE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vsubnE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vsubne without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vsubne; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vsupnE without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vsupnE; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vsupne without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vsupne; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: vzigzag without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: vzigzag; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: wcirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: wcirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: wedbar without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: wedbar; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: wedge without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: wedge; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: wedgeq without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: wedgeq; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: weierp without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: weierp; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: wfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: wfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: wopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: wopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: wp without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: wp; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: wr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: wr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: wreath without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: wreath; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: wscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: wscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: xcap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: xcap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: xcirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: xcirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: xcup without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: xcup; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: xdtri without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: xdtri; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: xfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: xfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: xhArr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: xhArr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: xharr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: xharr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: xi without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: xi; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: xlArr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: xlArr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: xlarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: xlarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: xmap without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: xmap; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: xnis without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: xnis; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: xodot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: xodot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: xopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: xopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: xoplus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: xoplus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: xotime without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: xotime; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: xrArr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: xrArr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: xrarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: xrarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: xscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: xscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: xsqcup without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: xsqcup; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: xuplus without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: xuplus; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: xutri without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: xutri; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: xvee without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: xvee; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: xwedge without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: xwedge; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: yacute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: yacute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: yacy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: yacy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ycirc without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ycirc; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: ycy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: ycy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: yen without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: yen; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: yfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: yfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: yicy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: yicy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: yopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: yopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: yscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: yscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: yucy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: yucy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: yuml without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: yuml; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: zacute without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: zacute; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: zcaron without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: zcaron; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: zcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: zcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: zdot without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: zdot; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: zeetrf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: zeetrf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: zeta without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: zeta; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: zfr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: zfr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: zhcy without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: zhcy; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: zigrarr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: zigrarr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: zopf without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: zopf; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: zscr without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: zscr; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: zwj without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: zwj; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Bad named entity: zwnj without a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[namedEntities.test:&apos;Named entity: zwnj; with a semi-colon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+0001&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+0002&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+0003&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+0004&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+0005&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+0006&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+0007&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+0008&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+000E&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+000F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+0010&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+0011&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+0012&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+0013&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+0014&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+0015&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+0016&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+0017&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+0018&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+0019&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+001A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+001B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+001C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+001D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+001E&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+001F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+007F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDD0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDD1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDD2&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDD3&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDD4&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDD5&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDD6&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDD7&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDD8&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDD9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDDA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDDB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDDC&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDDD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDDE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDDF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDE0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDE1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDE2&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDE3&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDE4&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDE5&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDE6&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDE7&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDE8&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDE9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDEA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDEB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDEC&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDED&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDEE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FDEF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+1FFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+1FFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+2FFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+2FFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+3FFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+3FFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+4FFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+4FFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+5FFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+5FFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+6FFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+6FFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+7FFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+7FFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+8FFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+8FFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+9FFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+9FFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+AFFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+AFFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+BFFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+BFFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+CFFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+CFFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+DFFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+DFFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+EFFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+EFFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FFFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+FFFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+10FFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Invalid Unicode character U+10FFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0020&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0021&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0022&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0023&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0024&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0025&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0026&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0027&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0028&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0029&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+002A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+002B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+002C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+002D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+002E&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+002F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0030&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0031&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0032&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0033&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0034&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0035&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0036&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0037&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0038&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0039&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+003A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+003B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+003D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+003E&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+003F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0040&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0041&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0042&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0043&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0044&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0045&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0046&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0047&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0048&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0049&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+004A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+004B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+004C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+004D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+004E&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+004F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0050&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0051&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0052&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0053&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0054&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0055&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0056&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0057&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0058&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0059&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+005A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+005B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+005C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+005D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+005E&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+005F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0060&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0061&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0062&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0063&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0064&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0065&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0066&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0067&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0068&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0069&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+006A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+006B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+006C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+006D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+006E&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+006F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0070&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0071&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0072&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0073&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0074&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0075&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0076&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0077&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0078&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+0079&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+007A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+007B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+007C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+007D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+007E&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00A0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00A1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00A2&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00A3&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00A4&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00A5&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00A6&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00A7&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00A8&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00A9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00AA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00AB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00AC&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00AD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00AE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00AF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00B0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00B1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00B2&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00B3&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00B4&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00B5&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00B6&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00B7&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00B8&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00B9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00BA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00BB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00BC&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00BD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00BE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00BF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00C0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00C1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00C2&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00C3&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00C4&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00C5&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00C6&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00C7&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00C8&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00C9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00CA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00CB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00CC&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00CD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00CE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00CF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00D0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00D1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00D2&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00D3&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00D4&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00D5&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00D6&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00D7&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00D8&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00D9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00DA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00DB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00DC&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00DD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00DE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00DF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00E0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00E1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00E2&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00E3&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00E4&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00E5&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00E6&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00E7&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00E8&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00E9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00EA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00EB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00EC&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00ED&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00EE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00EF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00F0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00F1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00F2&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00F3&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00F4&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00F5&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00F6&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00F7&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00F8&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00F9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00FA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00FB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00FC&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00FD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00FE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+00FF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+D7FF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+E000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+FDCF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+FDF0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+FFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+10000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+1FFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+20000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+2FFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+30000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+3FFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+40000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+4FFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+50000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+5FFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+60000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+6FFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+70000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+7FFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+80000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+8FFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+90000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+9FFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+A0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+AFFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+B0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+BFFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+C0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+CFFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+D0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+DFFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+E0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+EFFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+F0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+FFFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+100000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeChars.test:&apos;Valid Unicode character U+10FFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test1.test:&apos;Correct Doctype lowercase&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Correct Doctype uppercase&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Correct Doctype mixed case&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Correct Doctype case with EOF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Truncated doctype start&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Doctype in error&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Single Start Tag&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Empty end tag&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Empty start tag&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Start Tag w/attribute&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Start Tag w/attribute no quotes&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Start/End Tag&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Two unclosed start tags&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;End Tag w/attribute&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Multiple atts&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Multiple atts no space&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Repeated attr&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Simple comment&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test1.test:&apos;Comment, Central dash no space&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Comment, two central dashes&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Unfinished comment&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Start of a comment&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Short comment&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Short comment two&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Short comment three&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Nested comment&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Ampersand EOF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Ampersand ampersand EOF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Ampersand space EOF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Unfinished entity&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Ampersand, number sign&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Unfinished numeric entity&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Entity with trailing semicolon (1)&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Entity with trailing semicolon (2)&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Entity without trailing semicolon (1)&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Entity without trailing semicolon (2)&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Partial entity match at end of file&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Non-ASCII character reference name&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;ASCII decimal entity&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;ASCII hexadecimal entity&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Hexadecimal entity in attribute&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Entity in attribute without semicolon ending in x&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Entity in attribute without semicolon ending in 1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Entity in attribute without semicolon ending in i&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test1.test:&apos;Entity in attribute without semicolon&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Unquoted attribute ending in ampersand&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Unquoted attribute at end of tag with final character of &amp;, with tag followed by characters&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;plaintext element&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test1.test:&apos;Open angled bracket in unquoted attribute value state&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;&lt; in attribute name&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;= in unquoted attribute value&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;= attribute&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;== attribute&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;=== attribute&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;==== attribute&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;&quot; after ampersand in double-quoted attribute value&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;&apos; after ampersand in double-quoted attribute value&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;&apos; after ampersand in single-quoted attribute value&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;&quot; after ampersand in single-quoted attribute value&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Text after bogus character reference&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Text after hex character reference&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Attribute name starting with &quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Attribute name starting with &apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Attribute name containing &quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Attribute name containing &apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Unquoted attribute value containing &apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Unquoted attribute value containing &quot;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Double-quoted attribute value not followed by whitespace&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Single-quoted attribute value not followed by whitespace&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Quoted attribute followed by permitted /&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Quoted attribute followed by non-permitted /&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;CR EOF after doctype name&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;CR EOF in tag name&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Slash EOF in tag name&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Zero hex numeric entity&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Zero decimal numeric entity&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Zero-prefixed hex numeric entity&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Zero-prefixed decimal numeric entity&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Empty hex numeric entities&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Invalid digit in hex numeric entity&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Empty decimal numeric entities&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Invalid digit in decimal numeric entity&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Non-BMP numeric entity&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Maximum non-BMP numeric entity&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Above maximum numeric entity&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;32-bit hex numeric entity&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;33-bit hex numeric entity&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;33-bit decimal numeric entity&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;65-bit hex numeric entity&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;65-bit decimal numeric entity&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Surrogate code point edge cases&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test4.test:&apos;Uppercase start tag name&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Uppercase end tag name&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Uppercase attribute name&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Tag/attribute name case edge values&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Duplicate different-case attributes&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Uppercase close tag attributes&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Duplicate close tag attributes&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Permitted slash&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Non-permitted slash&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Permitted slash but in close tag&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Doctype public case-sensitivity (1)&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Doctype public case-sensitivity (2)&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Doctype system case-sensitivity (1)&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Doctype system case-sensitivity (2)&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;U+0000 in lookahead region after non-matching character&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;U+0000 in lookahead region&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;U+0080 in lookahead region&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;U+FDD1 in lookahead region&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;U+1FFFF in lookahead region&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;CR followed by non-LF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;CR at EOF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;LF at EOF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;CR LF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;CR CR&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test4.test:&apos;LF LF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;LF CR&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;text CR CR CR text&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Doctype publik&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Doctype publi&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Doctype sistem&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Doctype sys&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Doctype html x&gt;text&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;Grave accent in unquoted attribute&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;EOF in tag name state &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;EOF in before attribute name state&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;EOF in attribute name state&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;EOF in after attribute name state&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;EOF in before attribute value state&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;EOF in attribute value (double quoted) state&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;EOF in attribute value (single quoted) state&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;EOF in attribute value (unquoted) state&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test4.test:&apos;EOF in after attribute value state&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Undefined named entity in attribute value ending in semicolon and whose name starts with a known entity name.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Entity name followed by the equals sign in an attribute value.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Ambiguous ampersand.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Semicolonless named entity &apos;not&apos; followed by &apos;i;&apos; in body&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Very long undefined named entity in body&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;CR as numeric entity&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;CR as hexadecimal numeric entity&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[entities.test:&apos;Windows-1252 EURO SIGN numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 REPLACEMENT CHAR numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 REPLACEMENT CHAR numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 REPLACEMENT CHAR numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 REPLACEMENT CHAR numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 REPLACEMENT CHAR numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 SINGLE LOW-9 QUOTATION MARK numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 LATIN SMALL LETTER F WITH HOOK numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 DOUBLE LOW-9 QUOTATION MARK numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 HORIZONTAL ELLIPSIS numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 DAGGER numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 DOUBLE DAGGER numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 MODIFIER LETTER CIRCUMFLEX ACCENT numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 PER MILLE SIGN numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 LATIN CAPITAL LETTER S WITH CARON numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 SINGLE LEFT-POINTING ANGLE QUOTATION MARK numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 LATIN CAPITAL LIGATURE OE numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 LATIN CAPITAL LETTER Z WITH CARON numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 LEFT SINGLE QUOTATION MARK numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 RIGHT SINGLE QUOTATION MARK numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 LEFT DOUBLE QUOTATION MARK numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 RIGHT DOUBLE QUOTATION MARK numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 BULLET numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 EN DASH numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 EM DASH numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 SMALL TILDE numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 TRADE MARK SIGN numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 LATIN SMALL LETTER S WITH CARON numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 SINGLE RIGHT-POINTING ANGLE QUOTATION MARK numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 LATIN SMALL LIGATURE OE numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 EURO SIGN hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 REPLACEMENT CHAR hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 REPLACEMENT CHAR hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 REPLACEMENT CHAR hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 REPLACEMENT CHAR hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 REPLACEMENT CHAR hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 SINGLE LOW-9 QUOTATION MARK hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 LATIN SMALL LETTER F WITH HOOK hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 DOUBLE LOW-9 QUOTATION MARK hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 HORIZONTAL ELLIPSIS hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 DAGGER hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 DOUBLE DAGGER hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 MODIFIER LETTER CIRCUMFLEX ACCENT hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 PER MILLE SIGN hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 LATIN CAPITAL LETTER S WITH CARON hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 SINGLE LEFT-POINTING ANGLE QUOTATION MARK hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 LATIN CAPITAL LIGATURE OE hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 LATIN CAPITAL LETTER Z WITH CARON hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 LEFT SINGLE QUOTATION MARK hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 RIGHT SINGLE QUOTATION MARK hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 LEFT DOUBLE QUOTATION MARK hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 RIGHT DOUBLE QUOTATION MARK hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 BULLET hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 EN DASH hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 EM DASH hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 SMALL TILDE hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 TRADE MARK SIGN hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 LATIN SMALL LETTER S WITH CARON hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 SINGLE RIGHT-POINTING ANGLE QUOTATION MARK hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 LATIN SMALL LIGATURE OE hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 LATIN SMALL LETTER Z WITH CARON hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Windows-1252 LATIN CAPITAL LETTER Y WITH DIAERESIS hexadecimal numeric entity.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Decimal numeric entity followed by hex character a.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Decimal numeric entity followed by hex character A.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Decimal numeric entity followed by hex character A.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[entities.test:&apos;Decimal numeric entity followed by hex character f.&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[escapeFlag.test:&apos;Commented close tag in RCDATA or RAWTEXT&apos;:RCDATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.002"/>
  <testcase name="test[escapeFlag.test:&apos;Commented close tag in RCDATA or RAWTEXT&apos;:RAWTEXT_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[escapeFlag.test:&apos;Bogus comment in RCDATA or RAWTEXT&apos;:RCDATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[escapeFlag.test:&apos;Bogus comment in RCDATA or RAWTEXT&apos;:RAWTEXT_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[escapeFlag.test:&apos;End tag surrounded by bogus comment in RCDATA or RAWTEXT&apos;:RCDATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[escapeFlag.test:&apos;End tag surrounded by bogus comment in RCDATA or RAWTEXT&apos;:RAWTEXT_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[escapeFlag.test:&apos;Commented entities in RCDATA&apos;:RCDATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[escapeFlag.test:&apos;Incorrect comment ending sequences in RCDATA or RAWTEXT&apos;:RCDATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[escapeFlag.test:&apos;Incorrect comment ending sequences in RCDATA or RAWTEXT&apos;:RAWTEXT_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[pendingSpecChanges.test:&apos;&lt;!---- &gt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;CR in bogus comment state&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;CRLF in bogus comment state&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;CRLFLF in bogus comment state&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;NUL in RCDATA, RAWTEXT, PLAINTEXT and Script data&apos;:RCDATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[domjs.test:&apos;NUL in RCDATA, RAWTEXT, PLAINTEXT and Script data&apos;:RAWTEXT_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;NUL in RCDATA, RAWTEXT, PLAINTEXT and Script data&apos;:PLAINTEXT_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;NUL in RCDATA, RAWTEXT, PLAINTEXT and Script data&apos;:SCRIPT_DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;NUL in script HTML comment&apos;:SCRIPT_DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;NUL in script HTML comment - double escaped&apos;:SCRIPT_DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;EOF in script HTML comment&apos;:SCRIPT_DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;EOF in script HTML comment after dash&apos;:SCRIPT_DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;EOF in script HTML comment after dash dash&apos;:SCRIPT_DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;EOF in script HTML comment double escaped after dash&apos;:SCRIPT_DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;EOF in script HTML comment double escaped after dash dash&apos;:SCRIPT_DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;EOF in script HTML comment - double escaped&apos;:SCRIPT_DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;leading U+FEFF must pass through&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[domjs.test:&apos;Non BMP-charref in in RCDATA&apos;:RCDATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;Bad charref in in RCDATA&apos;:RCDATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;lowercase endtags in RCDATA and RAWTEXT&apos;:RCDATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;lowercase endtags in RCDATA and RAWTEXT&apos;:RAWTEXT_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;bad endtag in RCDATA and RAWTEXT&apos;:RCDATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;bad endtag in RCDATA and RAWTEXT&apos;:RCDATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;bad endtag in RCDATA and RAWTEXT&apos;:RCDATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;bad endtag in RCDATA and RAWTEXT&apos;:RCDATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;bad endtag in RCDATA and RAWTEXT&apos;:RAWTEXT_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;bad endtag in RCDATA and RAWTEXT&apos;:RAWTEXT_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;bad endtag in RCDATA and RAWTEXT&apos;:RAWTEXT_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;bad endtag in RCDATA and RAWTEXT&apos;:RAWTEXT_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;Non BMP-charref in attribute&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;--!NUL in comment &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;space EOF after doctype &apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;CDATA in HTML content&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[domjs.test:&apos;CDATA content&apos;:CDATA_SECTION_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;DOCTYPE without name&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;DOCTYPE without space before name&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Incorrect DOCTYPE without a space before name&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;DOCTYPE with publicId&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;DOCTYPE with EOF after PUBLIC&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test2.test:&apos;DOCTYPE with EOF after PUBLIC &apos;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;DOCTYPE with EOF after PUBLIC &apos;x&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;DOCTYPE with systemId&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;DOCTYPE with publicId and systemId&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;DOCTYPE with &gt; in double-quoted publicId&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;DOCTYPE with &gt; in single-quoted publicId&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;DOCTYPE with &gt; in double-quoted systemId&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;DOCTYPE with &gt; in single-quoted systemId&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Incomplete doctype&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Numeric entity representing the NUL character&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Hexadecimal entity representing the NUL character&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Numeric entity representing a codepoint after 1114111 (U+10FFFF)&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Hexadecimal entity representing a codepoint after 1114111 (U+10FFFF)&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Hexadecimal entity pair representing a surrogate pair&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Hexadecimal entity with mixed uppercase and lowercase&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Entity without a name&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Unescaped ampersand in attribute value&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;StartTag containing &lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Non-void element containing trailing /&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Void element with permitted slash&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Void element with permitted slash (with attribute)&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;StartTag containing /&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Double-quoted attribute value&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Unescaped &lt;/&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Illegal end tag name&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Simili processing instruction&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;A bogus comment stops at &gt;, even if preceeded by two dashes&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Unescaped &lt;&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[test2.test:&apos;Null Byte Replacement&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Comment with dash&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Entity + newline&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Start tag with no attributes but space before the greater-than sign&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Empty attribute followed by uppercase attribute&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Double-quote after attribute name&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Single-quote after attribute name&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Empty end tag with following characters&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Empty end tag with following tag&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Empty end tag with following comment&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[test2.test:&apos;Empty end tag with following end tag&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[contentModelFlags.test:&apos;PLAINTEXT content model flag&apos;:PLAINTEXT_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[contentModelFlags.test:&apos;End tag closing RCDATA or RAWTEXT&apos;:RCDATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[contentModelFlags.test:&apos;End tag closing RCDATA or RAWTEXT&apos;:RAWTEXT_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[contentModelFlags.test:&apos;End tag closing RCDATA or RAWTEXT (case-insensitivity)&apos;:RCDATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[contentModelFlags.test:&apos;End tag closing RCDATA or RAWTEXT (case-insensitivity)&apos;:RAWTEXT_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[contentModelFlags.test:&apos;End tag closing RCDATA or RAWTEXT (ending with space)&apos;:RCDATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[contentModelFlags.test:&apos;End tag closing RCDATA or RAWTEXT (ending with space)&apos;:RAWTEXT_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[contentModelFlags.test:&apos;End tag closing RCDATA or RAWTEXT (ending with EOF)&apos;:RCDATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[contentModelFlags.test:&apos;End tag closing RCDATA or RAWTEXT (ending with EOF)&apos;:RAWTEXT_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[contentModelFlags.test:&apos;End tag closing RCDATA or RAWTEXT (ending with slash)&apos;:RCDATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[contentModelFlags.test:&apos;End tag closing RCDATA or RAWTEXT (ending with slash)&apos;:RAWTEXT_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[contentModelFlags.test:&apos;End tag not closing RCDATA or RAWTEXT (ending with left-angle-bracket)&apos;:RCDATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[contentModelFlags.test:&apos;End tag not closing RCDATA or RAWTEXT (ending with left-angle-bracket)&apos;:RAWTEXT_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[contentModelFlags.test:&apos;End tag with incorrect name in RCDATA or RAWTEXT&apos;:RCDATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[contentModelFlags.test:&apos;End tag with incorrect name in RCDATA or RAWTEXT&apos;:RAWTEXT_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[contentModelFlags.test:&apos;Partial end tags leading straight into partial end tags&apos;:RCDATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[contentModelFlags.test:&apos;Partial end tags leading straight into partial end tags&apos;:RAWTEXT_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[contentModelFlags.test:&apos;End tag with incorrect name in RCDATA or RAWTEXT (starting like correct name)&apos;:RCDATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[contentModelFlags.test:&apos;End tag with incorrect name in RCDATA or RAWTEXT (starting like correct name)&apos;:RAWTEXT_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[contentModelFlags.test:&apos;End tag closing RCDATA or RAWTEXT, switching back to PCDATA&apos;:RCDATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[contentModelFlags.test:&apos;End tag closing RCDATA or RAWTEXT, switching back to PCDATA&apos;:RAWTEXT_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[contentModelFlags.test:&apos;RAWTEXT w/ something looking like an entity&apos;:RAWTEXT_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[contentModelFlags.test:&apos;RCDATA w/ an entity&apos;:RCDATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid unterminated numeric entity character overflow before EOF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid unterminated numeric entity character overflow before EOF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid unterminated numeric entity character overflow before EOF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid unterminated numeric entity character overflow&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid unterminated numeric entity character overflow&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid unterminated numeric entity character overflow&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character overflow&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character overflow&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character overflow&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+0001&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+0002&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+0003&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+0004&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+0005&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+0006&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+0007&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+0008&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+000B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+000E&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+000F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+0010&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+0011&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+0012&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+0013&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+0014&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+0015&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+0016&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+0017&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+0018&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+0019&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+001A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+001B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+001C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+001D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+001E&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+001F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+007F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+D800&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+DFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDD0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDD1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDD2&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDD3&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDD4&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDD5&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDD6&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDD7&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDD8&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDD9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDDA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDDB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDDC&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDDD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDDE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDDF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDE0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDE1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDE2&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDE3&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDE4&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDE5&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDE6&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDE7&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDE8&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDE9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDEA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDEB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDEC&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDED&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDEE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FDEF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+1FFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+1FFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+2FFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+2FFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+3FFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+3FFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+4FFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+4FFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+5FFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+5FFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+6FFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+6FFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+7FFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+7FFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+8FFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+8FFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+9FFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+9FFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+AFFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+AFFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+BFFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+BFFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+CFFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+CFFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+DFFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+DFFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+EFFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+EFFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FFFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+FFFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+10FFFE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Invalid numeric entity character U+10FFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0009&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+000A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0020&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0021&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0022&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0023&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0024&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0025&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0026&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0027&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0028&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0029&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+002A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+002B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+002C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+002D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+002E&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+002F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0030&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0031&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0032&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0033&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0034&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0035&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0036&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0037&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0038&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0039&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+003A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+003B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+003C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+003D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+003E&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+003F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0040&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0041&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0042&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0043&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0044&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0045&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0046&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0047&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0048&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0049&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+004A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+004B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+004C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+004D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+004E&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+004F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0050&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0051&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0052&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0053&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0054&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0055&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0056&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0057&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0058&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0059&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+005A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+005B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+005C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+005D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+005E&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+005F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0060&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0061&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0062&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0063&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0064&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0065&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0066&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0067&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0068&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0069&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+006A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+006B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+006C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+006D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+006E&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+006F&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0070&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0071&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0072&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0073&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0074&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0075&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0076&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0077&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0078&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+0079&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+007A&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+007B&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+007C&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+007D&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+007E&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00A0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00A1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00A2&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00A3&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00A4&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00A5&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00A6&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00A7&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00A8&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00A9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00AA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00AB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00AC&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00AD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00AE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00AF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00B0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00B1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00B2&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00B3&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00B4&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00B5&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00B6&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00B7&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00B8&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00B9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00BA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00BB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00BC&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00BD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00BE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00BF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00C0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00C1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00C2&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00C3&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00C4&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00C5&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00C6&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00C7&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00C8&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00C9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00CA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00CB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00CC&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00CD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00CE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00CF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00D0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00D1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00D2&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00D3&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00D4&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00D5&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00D6&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00D7&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00D8&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00D9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00DA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00DB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00DC&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00DD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00DE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00DF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00E0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00E1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00E2&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00E3&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00E4&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00E5&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00E6&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00E7&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00E8&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00E9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00EA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00EB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00EC&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00ED&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00EE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00EF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00F0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00F1&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00F2&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00F3&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00F4&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00F5&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00F6&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00F7&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00F8&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00F9&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00FA&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00FB&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00FC&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00FD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00FE&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+00FF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+D7FF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+E000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+FDCF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+FDF0&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+FFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+10000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+1FFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+20000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+2FFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+30000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+3FFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+40000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+4FFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+50000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+5FFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+60000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+6FFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+70000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+7FFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+80000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+8FFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+90000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+9FFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+A0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+AFFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+B0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+BFFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+C0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+CFFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+D0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+DFFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+E0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+EFFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+F0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+FFFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+100000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[numericEntities.test:&apos;Valid numeric entity character U+10FFFD&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeCharsProblematic.test:&apos;Invalid Unicode character U+DFFF&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeCharsProblematic.test:&apos;Invalid Unicode character U+D800&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0.001"/>
  <testcase name="test[unicodeCharsProblematic.test:&apos;Invalid Unicode character U+DFFF with valid preceding character&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeCharsProblematic.test:&apos;Invalid Unicode character U+D800 with valid following character&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
  <testcase name="test[unicodeCharsProblematic.test:&apos;CR followed by U+0000&apos;:DATA_STATE]" classname="ch.digitalfondue.jfiveparse.TokenizerTest" time="0"/>
</testsuite>