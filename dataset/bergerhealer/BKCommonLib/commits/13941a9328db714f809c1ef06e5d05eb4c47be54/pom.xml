<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.bergerkiller.bukkit</groupId>
    <artifactId>BKCommonLib</artifactId>
    <version>1.11.2-v2-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>BKCommonLib</name>
    <url>https://github.com/bergerhealer/bkcommonlib/</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.mcversion>v1_11_R1</project.mcversion>
        <project.bversion>1.11.2-R0.1</project.bversion>
        <project.cbversion>1.11.2-R0.1</project.cbversion>
        <project.stableversion>1.68</project.stableversion>
        <project.stableserver>1.8.9-R0.1</project.stableserver>
        <project.stabledate>30 June 2015</project.stabledate>
        <junit.version>4.11</junit.version>
    </properties>

    <repositories>
        <!-- Repo for access to CraftBukkit -->
        <repository>
          <id>spigot-repo</id>
          <url>https://hub.spigotmc.org/nexus/content/groups/public/</url>
        </repository>

        <!-- Repo for access to Mountiplex -->
        <repository>
            <id>mgdev-repo</id>
            <url>https://maven.mg-dev.eu</url>
        </repository>

        <!-- Repo for access to Objenesis -->
        <repository>
            <id>mvnrepository</id>
            <url>https://mvnrepository.com/artifact/</url>
        </repository>

        <repository>
            <id>vault-repo</id>
            <url>http://nexus.hc.to/content/repositories/pub_releases</url>
        </repository>

    </repositories>

    <pluginRepositories>
        
        <!-- Repo for access to Mountiplex -->
        <pluginRepository>
            <id>mgdev-repo</id>
            <url>https://maven.mg-dev.eu</url>
        </pluginRepository>

    </pluginRepositories>

    <dependencies>
        <dependency>
            <groupId>org.spigotmc</groupId>
            <artifactId>spigot-api</artifactId>
            <version>${project.bversion}-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.bukkit</groupId>
            <artifactId>craftbukkit</artifactId>
            <version>${project.cbversion}-SNAPSHOT</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/lib/spigot.jar</systemPath>
        </dependency>

        <dependency>
            <groupId>com.bergerkiller.mountiplex</groupId>
            <artifactId>Mountiplex</artifactId>
            <version>1.0</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>net.milkbowl.vault</groupId>
            <artifactId>VaultAPI</artifactId>
            <version>1.5</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.kellerkindt</groupId>
            <artifactId>ShowCaseStandalone</artifactId>
            <version>695</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/lib/ShowCaseStandalone.jar</systemPath>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.comphenix.protocol</groupId>
            <artifactId>ProtocolLib</artifactId>
            <version>3.7.0-SNAPSHOT</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/lib/ProtocolLib.jar</systemPath>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
        </dependency>
        <!--
        <dependency>
            <groupId>com.googlecode.openpojo</groupId>
            <artifactId>openpojo</artifactId>
            <version>0.5.2</version>
            <scope>test</scope>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        -->
    </dependencies>

    <!-- Build -->
    <build>
        <defaultGoal>package</defaultGoal>

        <!-- Resources (the filtering allows us to use project properties in plugin.yml) -->
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <filtering>true</filtering>
                <includes>
                    <include>plugin.yml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.txt</include>
                </includes>
            </resource>
        </resources>

        <!-- Plugins -->
        <plugins>
            <!-- Turns the reflection template files into Java source code -->
            <plugin>
                <groupId>com.bergerkiller.mountiplex</groupId>
                <artifactId>Mountiplex</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <id>Generate reflection templates</id>
                        <goals>
                            <goal>create-reflection</goal>
                        </goals>
                        <phase>generate-sources</phase>

                        <configuration>
                            <source_root>src/main/java</source_root>
                            <target_root>src/main/java</target_root>
                            <generatorActions>
                                <generatorAction>
                                    <source>com/bergerkiller/templates/${project.mcversion}/init.txt</source>
                                    <target>com/bergerkiller/generated</target>
                                    <variables>
                                        <version>${project.mcversion}</version>
                                    </variables>
                                </generatorAction>
                            </generatorActions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Needed for shading in Mountiplex, CGLib and Objenesis -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadedArtifactAttached>false</shadedArtifactAttached>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <artifactSet>
                                <includes>
                                    <include>com.bergerkiller.mountiplex</include>
                                </includes>
                            </artifactSet>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Clean up (this is to make testing easier) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.4.1</version>
                <executions>
                    <execution>
                        <id>auto-clean</id>
                        <phase>install</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>original-*.jar</include>
                                        <include>*-shaded.jar</include>
                                    </includes>
                                    <followSymlinks>false</followSymlinks>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Copy artifacts to non-versioned jar name -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.bergerkiller.bukkit</groupId>
                                    <artifactId>BKCommonLib</artifactId>
                                    <version>${project.version}</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                    <destFileName>${project.name}.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Compiler plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>false</showDeprecation>
                </configuration>
            </plugin>
        </plugins>

        <!-- This section here is purely to stop lifecycle errors from happening in Eclipse IDE -->
        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            com.bergerkiller.mountiplex
                                        </groupId>
                                        <artifactId>
                                            Mountiplex
                                        </artifactId>
                                        <versionRange>
                                            [1.0,)
                                        </versionRange>
                                        <goals>
                                            <goal>
                                                create-reflection
                                            </goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
