<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>org.amneris</groupId>
	<artifactId>petstore</artifactId>
	<packaging>war</packaging>
	<version>0.1.0-SNAPSHOT</version>
	<name>petstore - My Tynamo project</name>
	<url>http://tynamo.org/</url>

<!--  -->

	<properties>
		<tapestry-version>5.1.0.5</tapestry-version>
		<tynamo-version>0.0.1</tynamo-version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<build>
		<finalName>petstore</finalName>
<!--
		<extensions>
			<extension>
				<groupId>hsqldb</groupId>
				<artifactId>hsqldb</artifactId>
				<version>${hsqldb.version}</version>
			</extension>
		</extensions>
-->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
					<optimize>true</optimize>
				</configuration>
			</plugin>

			<!-- Run the application using "mvn jetty:run" -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<configuration>
					<contextPath>/</contextPath>
					<!-- Log to the console. -->
					<requestLog implementation="org.mortbay.jetty.NCSARequestLog">
						<!-- This doesn't do anything for Jetty, but is a workaround for a Maven bug
							 that prevents the requestLog from being set. -->
						<append>true</append>
					</requestLog>
					<systemProperties>
						<systemProperty>
							<name>tapestry.compress-whitespace</name>
							<value>false</value>
						</systemProperty>
						<systemProperty>
							<name>tapestry.production-mode</name>
							<value>false</value>
						</systemProperty>
					</systemProperties>
				</configuration>
			</plugin>

			<!-- This changes the WAR file packaging so that what would normally go into WEB-INF/classes
				 is instead packaged as WEB-INF/lib/petstore.jar. This is necessary for Tapestry
				 to be able to search for page and component classes at startup. Only
				 certain application servers require this configuration, please see the documentation
				 at the Tapestry 5 project page (http://tapestry.apache.org/tapestry5/).
			 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<archiveClasses>true</archiveClasses>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/*UnitTest.java</include>
					</includes>
					<!-- Typically not needed, but configure arg line so you can run individual integration 
					tests with -Dtest=SomeIntegrationTest -->
					<argLine>-Dorg.mortbay.jetty.webapp.parentLoaderPriority=true -Dtapestry.production-mode=false</argLine>
				</configuration>
				<!-- Different configurations for unit and integration tests created mostly so you don't need
				to deal with cleaning up the database after each test (because
				running persistence tests between/after integrations tests might easily collide with existing data) -->
				<executions>
					<execution>
					<id>surefire-it</id>
					<phase>integration-test</phase>
					<configuration>
						<includes>
							<include>**/*IntegrationTest.java</include>
						</includes>
						<forkMode>once</forkMode>
						<argLine>-Dorg.mortbay.jetty.webapp.parentLoaderPriority=true -Dtapestry.production-mode=false</argLine>
					</configuration>
					<goals>
						<goal>test</goal>
					</goals>
					</execution>
				</executions>
			</plugin>

			<!-- This gets the plugin to clean up the cobertura.ser file left
		in the root directory. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.2</version>
				<executions>
					<execution>
						<id>clean</id>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<!-- Adds a report detailing the components, mixins and base classes defined by this module. -->
		<plugins>
			<plugin>
				<groupId>org.apache.tapestry</groupId>
				<artifactId>tapestry-component-report</artifactId>
				<version>${tapestry-version}</version>
				<configuration>
					<rootPackage>org.amneris.petstore</rootPackage>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.1.2</version>
				<configuration>
					<dependencyDetailsEnabled>false</dependencyDetailsEnabled>
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.2</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
			</plugin>
		</plugins>
	</reporting>

	<dependencies>

		<dependency>
			<groupId>org.apache.tapestry</groupId>
			<artifactId>tapestry-upload</artifactId>
			<version>${tapestry-version}</version>
		</dependency>

		<dependency>
			<groupId>org.tynamo</groupId>
			<artifactId>tapestry-model-hibernate</artifactId>
			<version>${tynamo-version}</version>
		</dependency>

		<dependency>
			<groupId>org.tynamo</groupId>
			<artifactId>tapestry-model-test</artifactId>
			<version>${tynamo-version}</version>
		</dependency>

		<dependency>
			<groupId>org.tynamo</groupId>
			<artifactId>tapestry-model-web</artifactId>
			<version>${tynamo-version}</version>
			<type>war</type>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.2.125</version>
		</dependency>

	</dependencies>

	<repositories>
		<!-- Don't use snapshots unless absolutely necessary -->
		<repository>
			<id>codehaus-ci</id>
			<name>Official snapshot repository available from Codehaus' Bamboo server</name>
			<url>http://ci.repository.codehaus.org</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
	</repositories>

</project>
