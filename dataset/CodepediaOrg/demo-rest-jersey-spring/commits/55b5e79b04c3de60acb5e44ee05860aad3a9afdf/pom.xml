<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.codingpedia</groupId>
	<artifactId>demo-rest-jersey-spring</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>DemoRestWS</name>
	<description>Example of building REST web services with spring, jersey and jpa2/hibernate</description>

	<properties>
		<spring.version>4.1.4.RELEASE</spring.version>
		<spring.security.version>3.2.5.RELEASE</spring.security.version>
		<jersey.version>2.14</jersey.version>
		<jackson.version>1.9.13</jackson.version>
		<hibernate.version>4.2.7.Final</hibernate.version>
		<jetty.maven.plugin.version>9.2.6.v20141205</jetty.maven.plugin.version> <!-- Adapt this to a version found on http://repo.maven.apache.org/maven2/org/eclipse/jetty/jetty-maven-plugin/ -->
		<logback.version>1.1.1</logback.version>
		<jcloverslf4j.version>1.7.6</jcloverslf4j.version>
	</properties>

	<repositories>
		<repository>
			<id>maven2-repository.java.net</id>
			<name>Java.net Repository for Maven</name>
			<url>http://download.java.net/maven/2/</url>
		</repository>
	</repositories>
	
	<scm>
		<developerConnection>scm:https://github.com/Codingpedia/demo-rest-jersey-spring.git</developerConnection>
		<url>https://github.com/Codingpedia/demo-rest-jersey-spring</url>
	</scm>
	
	<dependencies>
		<!-- Jersey-Spring http://mvnrepository.com/artifact/org.glassfish.jersey.ext/jersey-spring3/2.4.1 -->
		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-spring3</artifactId>
			<version>${jersey.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-web</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
			<version>${jersey.version}</version>
		</dependency>	
		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-entity-filtering</artifactId>
			<version>${jersey.version}</version>
		</dependency>				

		<!-- Spring 3 dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
			<exclusions>
			   <exclusion>
			      <groupId>commons-logging</groupId>
			      <artifactId>commons-logging</artifactId>
			   </exclusion>
			</exclusions>			
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- Spring security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
 		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
 		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		
		<!-- MySQL JDBC connector -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.27</version>
			<scope>provided</scope>
		</dependency>

		<!-- tomcat jdbc -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jdbc</artifactId>
			<version>7.0.35</version>
			<scope>provided</scope>
		</dependency>

		<!-- ******* JPA/Hibernate ******** -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>1.0.1.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<!-- testing -->
	    <!-- Jersey-client -->
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${jersey.version}</version>			
		</dependency>			
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.9.1</version>
		</dependency>		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.10.8</version>
		</dependency>		
		<dependency>
			<groupId>org.glassfish.jersey.test-framework.providers</groupId>
			<artifactId>jersey-test-framework-provider-external</artifactId>
			<version>2.5.1</version>
		</dependency>
		
		<!-- LogBack dependencies --> 
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>                                    
			<groupId>org.slf4j</groupId>                
			<artifactId>jcl-over-slf4j</artifactId>     
			<version>${jcloverslf4j.version}</version>  
		</dependency>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>${jackson.version}</version>
		</dependency>		
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>${jackson.version}</version>
		</dependency>		
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-jaxrs</artifactId>
			<version>${jackson.version}</version>
		</dependency>	
		
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>			  				
	</dependencies>

	<build>
		<plugins>
		    <!-- use the plugin to generate customed war name -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<warName>${project.artifactId}</warName>
			        <archive>
			            <manifest>
			                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
			                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
			            </manifest>
			        </archive>					
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>manifest</goal>
						</goals>
						<inherited>true</inherited>
					</execution>
				</executions>				
			</plugin>		    
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<providerImplementations>
						<git>jgit</git>
					</providerImplementations>
					<tagBase>https://github.com/Codingpedia/demo-rest-jersey-spring/releases</tagBase>
					<tagNameFormat>v@{project.version}</tagNameFormat>
				</configuration>
				<dependencies>
					<dependency>
				    	<groupId>org.apache.maven.scm</groupId>
				    	<artifactId>maven-scm-provider-jgit</artifactId>
				        <version>1.9.2</version>
					</dependency>
				</dependencies>				
			</plugin>			
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.maven.plugin.version}</version>
				<configuration>
					<jettyXml>${project.basedir}/src/main/resources/config/jetty9.xml</jettyXml>
					<!-- ,${project.basedir}/src/main/resources/config/jetty-ssl.xml, ${project.basedir}/src/main/resources/config/jetty-https.xml -->
					<stopKey>STOP</stopKey>
					<stopPort>9999</stopPort>
					<stopWait>5</stopWait>
					<scanIntervalSeconds>5</scanIntervalSeconds>
					<scanTargets>
						<scanTarget>${project.basedir}/src/main</scanTarget>
						<scanTarget>${project.basedir}/src/test</scanTarget>
					</scanTargets>
					<contextXml>${project.basedir}/src/test/resources/jetty-context.xml</contextXml>
					<webAppConfig>
						<contextPath>/${project.artifactId}</contextPath>
					</webAppConfig>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>5.1.27</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>
				
    <profiles>
        <profile>
            <id>failsafeTestRunner</id>	
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.16</version>
						<executions>
							<execution>
								<id>integration-test</id>
								<goals>
									<goal>integration-test</goal>
								</goals>
							</execution>
							<execution>
								<id>verify</id>
								<goals>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>		
					<plugin>
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-maven-plugin</artifactId>
						<version>${jetty.maven.plugin.version}</version>
						<configuration>
							<jettyConfig>${project.basedir}/src/main/resources/config/jetty9.xml</jettyConfig>
							<stopKey>STOP</stopKey>
							<stopPort>9999</stopPort>
							<stopWait>5</stopWait>
							<scanIntervalSeconds>5</scanIntervalSeconds>
							<scanTargets>
								<scanTarget>${project.basedir}/src/main</scanTarget>
								<scanTarget>${project.basedir}/src/test</scanTarget>
							</scanTargets>
							<contextXml>${project.basedir}/src/test/resources/jetty-context.xml</contextXml>
							<webAppConfig>
								<contextPath>/${project.artifactId}</contextPath>
							</webAppConfig>
						</configuration>
						<dependencies>
							<dependency>
								<groupId>mysql</groupId>
								<artifactId>mysql-connector-java</artifactId>
								<version>5.1.27</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>start-jetty</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>run-exploded</goal>
								</goals>
								<configuration>
									<scanIntervalSeconds>0</scanIntervalSeconds>
									<daemon>true</daemon>
								</configuration>
							</execution>
							<execution>
								<id>stop-jetty</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
        <!-- profile to run soapui integration tests against the "local" jetty started on local machine -->
        <profile>
            <id>soapuiTestRunner-local-jetty</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.smartbear.soapui</groupId>
                        <artifactId>soapui-maven-plugin</artifactId>
                        <version>5.0.0</version>
                        <executions>
                            <execution>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <projectFile>${project.basedir}/src/test/resources/soapui/Test-Demo-REST-Jersey-with-Spring-soapui-project.xml
                                    </projectFile>
                                    <outputFolder>${project.build.directory}\soapui-logs\test-results</outputFolder>                                         
                                    <projectProperties>
                                        <value>baseUrl=http://localhost:8888</value>
                                    </projectProperties>
                                    <!-- specify where to  put the soapui generated log files-->
									<soapuiProperties>
										<property>
											<name>soapui.logroot</name>
											<value>${project.build.directory}/soapui-logs/</value>
										</property>
									</soapuiProperties>                                    
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- profile to run soapui integration tests against the "development" machine. Here I have a local tomcat instance, and but in 
        a continuous integration environment, you could start the integration tests after the deployment job has been finished -->
        <profile>
            <id>soapuiTestRunner-dev-tomcat</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.smartbear.soapui</groupId>
                        <artifactId>soapui-maven-plugin</artifactId>
                        <version>5.0.0</version>
                        <executions>
                            <execution>
                                <!--Run as part of the test phase in the Maven lifecycle-->
                                <phase>test</phase>
                                <goals>
                                    <!--Run the test phase of com.smartbear.soapui:maven-soapui-plugin-->
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <projectFile>${project.basedir}/src/test/resources/soapui/Test-Demo-REST-Jersey-with-Spring-soapui-project.xml
                                    </projectFile>
                                    <outputFolder>${project.build.directory}\soapui-logs\test-results</outputFolder>                                    
                                    <projectProperties>
                                        <value>baseUrl=http://localhost:8080</value>
                                    </projectProperties>
                                    <junitReport>true</junitReport>
                                     <!-- specify where to  put the soapui generated log files-->
									<soapuiProperties>
										<property>
											<name>soapui.logroot</name>
											<value>${project.build.directory}/soapui-logs/</value>
										</property>
									</soapuiProperties>                                    
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>        		
	</profiles>                		
	    	
</project>  