<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.barton</groupId>
    <artifactId>deploy</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <dependencies>
        <dependency>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
            <version>3.6</version>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>4.0.9</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/ch.ethz.ganymed/ganymed-ssh2 -->
        <dependency>
            <groupId>ch.ethz.ganymed</groupId>
            <artifactId>ganymed-ssh2</artifactId>
            <version>262</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.jcraft</groupId>
            <artifactId>jsch</artifactId>
            <version>0.1.54</version>
        </dependency>

    </dependencies>
    <!--<build>
        <sourceDirectory>src/main/java</sourceDirectory>
        <resources>
            &lt;!&ndash; 把src/main/resources目录下所有的文件拷贝到conf目录中 &ndash;&gt;
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
                <targetPath>${project.build.directory}/conf</targetPath>
            </resource>
            &lt;!&ndash; 把lib目录下所有的文件拷贝到lib目录中
            （可能有些jar包没有办法在maven中找到，需要放在lib目录中） &ndash;&gt;
            <resource>
                <directory>lib</directory>
                <targetPath>${project.build.directory}/lib</targetPath>
            </resource>
            &lt;!&ndash; 把放在根目录下的脚本文件.sh,.bat拷贝到bin目录中 &ndash;&gt;
            <resource>
                <directory>.</directory>
                <includes>
                    <include>**/*.sh</include>
                    <include>**/*.bat</include>
                </includes>
                <targetPath>${project.build.directory}/bin</targetPath>
            </resource>
            &lt;!&ndash; 把src/main/resources目录下所有的文件拷贝到conf目录中 &ndash;&gt;
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.sh</include>
                    <include>**/*.bat</include>
                </includes>
                <targetPath>${project.build.directory}/bin</targetPath>
            </resource>
        </resources>

        <plugins>
            &lt;!&ndash; 用于编译的plugin &ndash;&gt;
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <fork>true</fork>
                    &lt;!&ndash;<defaultLibBundleDir>lib</defaultLibBundleDir>&ndash;&gt;
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                    &lt;!&ndash; 如果配置了JAVA_HOME,下面应该可以不用配 &ndash;&gt;
                    &lt;!&ndash;<executable>C:\Program Files (x86)\Java\jdk1.8.0_91\bin\javac.exe</executable>&ndash;&gt;
                </configuration>
            </plugin>
            &lt;!&ndash; 用于生成jar包的plugin &ndash;&gt;
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    &lt;!&ndash; 把生成的jar包放在lib目录下（和其他所有jar包一起） &ndash;&gt;
                    <outputDirectory>${project.build.directory}/lib</outputDirectory>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                        </manifest>
                    </archive>
                    <excludes>
                        &lt;!&ndash; 排除掉一些文件,不要放到jar包中，
                        这里是为了排除掉src/main/resources中的文件（它们应该放到conf目录）
                        这里只能指定要排除的目标文件，而不能指定源文件，虽然不够完美，但是基本能达到目的。 &ndash;&gt;
                        <exclude>*.xml</exclude>
                        <exclude>*.properties</exclude>
                    </excludes>
                </configuration>
            </plugin>

            &lt;!&ndash; 用于拷贝maven依赖的plugin &ndash;&gt;
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            &lt;!&ndash; 把依赖的所有maven jar包拷贝到lib目录中（这样所有的jar包都在lib目录中） &ndash;&gt;
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            &lt;!&ndash; 用于拷贝resource的plugin &ndash;&gt;
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            &lt;!&ndash; 配置生成源代码jar的plugin &ndash;&gt;
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <attach>true</attach>
                    &lt;!&ndash;<encoding>UTF-8</encoding>&ndash;&gt;
                    &lt;!&ndash; 配置源代码jar文件的存放路径，和其他jar文件一起放在lib目录 &ndash;&gt;
                    <outputDirectory>${project.build.directory}/lib</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>-->

</project>