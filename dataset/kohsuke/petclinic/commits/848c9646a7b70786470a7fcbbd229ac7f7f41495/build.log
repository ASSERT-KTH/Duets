[INFO] Error stacktraces are turned on.
[INFO] Scanning for projects...
[INFO] 
[INFO] ------------< org.springframework.samples:spring-petclinic >------------
[INFO] Building petclinic 1.0.0-SNAPSHOT
[INFO] --------------------------------[ war ]---------------------------------
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.5:prepare-agent (default) @ spring-petclinic ---
[INFO] argLine set to -javaagent:/home/jdbl/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/tmp/tmp3coyes9l/petclinic/target/jacoco.exec
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ spring-petclinic ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 19 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:compile (default-compile) @ spring-petclinic ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 44 source files to /tmp/tmp3coyes9l/petclinic/target/classes
[WARNING] bootstrap class path not set in conjunction with -source 1.6
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ spring-petclinic ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 7 resources
[INFO] skip non existing resourceDirectory /tmp/tmp3coyes9l/petclinic/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.0:testCompile (default-testCompile) @ spring-petclinic ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 6 source files to /tmp/tmp3coyes9l/petclinic/target/test-classes
[WARNING] bootstrap class path not set in conjunction with -source 1.6
[INFO] 
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ spring-petclinic ---
[INFO] Surefire report directory: /tmp/tmp3coyes9l/petclinic/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.springframework.samples.petclinic.model.ValidatorTests
INFO  Version - HV000001: Hibernate Validator 4.3.1.Final
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.045 sec - in org.springframework.samples.petclinic.model.ValidatorTests
Running org.springframework.samples.petclinic.web.VisitsViewTests
INFO  WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
INFO  WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1f84327b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@39549f33, org.springframework.test.context.support.DirtiesContextTestExecutionListener@dbddbe3, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7a83ccd2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@44aa2e13]
INFO  XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/samples/petclinic/web/VisitsViewTests-config.xml]
INFO  XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [spring/business-config.xml]
INFO  XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [spring/datasource-config.xml]
INFO  XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [spring/mvc-core-config.xml]
INFO  XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [spring/mvc-view-config.xml]
INFO  GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3c28e5b6: startup date [Thu Jul 30 22:01:01 UTC 2020]; root of context hierarchy
INFO  PropertyPlaceholderConfigurer - Loading properties file from class path resource [spring/data-access.properties]
INFO  PropertyPlaceholderConfigurer - Loading properties file from class path resource [spring/data-access.properties]
INFO  ScriptUtils - Executing SQL script from class path resource [db/hsqldb/initDB.sql]
INFO  ScriptUtils - Executed SQL script from class path resource [db/hsqldb/initDB.sql] in 13 ms.
INFO  ScriptUtils - Executing SQL script from class path resource [db/hsqldb/populateDB.sql]
INFO  ScriptUtils - Executed SQL script from class path resource [db/hsqldb/populateDB.sql] in 44 ms.
INFO  Jaxb2Marshaller - Creating JAXBContext with classes to be bound [class org.springframework.samples.petclinic.model.Vets]
INFO  RequestMappingHandlerMapping - Mapped "{[/owners/{ownerId}/pets/new],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.springframework.samples.petclinic.web.PetController.processCreationForm(org.springframework.samples.petclinic.model.Pet,org.springframework.validation.BindingResult,org.springframework.web.bind.support.SessionStatus)
INFO  RequestMappingHandlerMapping - Mapped "{[/owners/{ownerId}/pets/{petId}/edit],methods=[PUT || POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.springframework.samples.petclinic.web.PetController.processUpdateForm(org.springframework.samples.petclinic.model.Pet,org.springframework.validation.BindingResult,org.springframework.web.bind.support.SessionStatus)
INFO  RequestMappingHandlerMapping - Mapped "{[/owners/{ownerId}/pets/new],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.springframework.samples.petclinic.web.PetController.initCreationForm(int,java.util.Map<java.lang.String, java.lang.Object>)
INFO  RequestMappingHandlerMapping - Mapped "{[/owners/*/pets/{petId}/edit],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.springframework.samples.petclinic.web.PetController.initUpdateForm(int,java.util.Map<java.lang.String, java.lang.Object>)
INFO  RequestMappingHandlerMapping - Mapped "{[/owners/new],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,org.springframework.web.bind.support.SessionStatus)
INFO  RequestMappingHandlerMapping - Mapped "{[/owners],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processFindForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
INFO  RequestMappingHandlerMapping - Mapped "{[/owners/find],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initFindForm(java.util.Map<java.lang.String, java.lang.Object>)
INFO  RequestMappingHandlerMapping - Mapped "{[/owners/{ownerId}/edit],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initUpdateOwnerForm(int,org.springframework.ui.Model)
INFO  RequestMappingHandlerMapping - Mapped "{[/owners/new],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initCreationForm(java.util.Map<java.lang.String, java.lang.Object>)
INFO  RequestMappingHandlerMapping - Mapped "{[/owners/{ownerId}/edit],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processUpdateOwnerForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,org.springframework.web.bind.support.SessionStatus)
INFO  RequestMappingHandlerMapping - Mapped "{[/owners/{ownerId}],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.samples.petclinic.web.OwnerController.showOwner(int)
INFO  RequestMappingHandlerMapping - Mapped "{[/vets],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.springframework.samples.petclinic.web.VetController.showVetList(java.util.Map<java.lang.String, java.lang.Object>)
INFO  RequestMappingHandlerMapping - Mapped "{[/oups],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.springframework.samples.petclinic.web.CrashController.triggerException()
INFO  RequestMappingHandlerMapping - Mapped "{[/owners/*/pets/{petId}/visits/new],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.springframework.samples.petclinic.web.VisitController.initNewVisitForm(int,java.util.Map<java.lang.String, java.lang.Object>)
INFO  RequestMappingHandlerMapping - Mapped "{[/owners/{ownerId}/pets/{petId}/visits/new],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.springframework.samples.petclinic.web.VisitController.processNewVisitForm(org.springframework.samples.petclinic.model.Visit,org.springframework.validation.BindingResult)
INFO  RequestMappingHandlerMapping - Mapped "{[/owners/*/pets/{petId}/visits],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.springframework.samples.petclinic.web.VisitController.showVisits(int,java.util.Map<java.lang.String, java.lang.Object>)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@3c28e5b6: startup date [Thu Jul 30 22:01:01 UTC 2020]; root of context hierarchy
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@3c28e5b6: startup date [Thu Jul 30 22:01:01 UTC 2020]; root of context hierarchy
INFO  SimpleUrlHandlerMapping - Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0'
INFO  SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#1'
INFO  SimpleUrlHandlerMapping - Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
INFO  SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0'
INFO  MockServletContext - Initializing Spring FrameworkServlet ''
INFO  TestDispatcherServlet - FrameworkServlet '': initialization started
INFO  TestDispatcherServlet - FrameworkServlet '': initialization completed in 28 ms

MockHttpServletRequest:
         HTTP Method = GET
         Request URI = /vets.xml
          Parameters = {}
             Headers = {Accept=[text/xml]}

             Handler:
                Type = org.springframework.samples.petclinic.web.VetController
              Method = public java.lang.String org.springframework.samples.petclinic.web.VetController.showVetList(java.util.Map<java.lang.String, java.lang.Object>)

               Async:
       Async started = false
        Async result = null

  Resolved Exception:
                Type = null

        ModelAndView:
           View name = vets/vetList
                View = null
           Attribute = vets
               value = org.springframework.samples.petclinic.model.Vets@5f808de8
              errors = []

            FlashMap:

MockHttpServletResponse:
              Status = 406
       Error message = null
             Headers = {}
        Content type = null
                Body = 
       Forwarded URL = null
      Redirected URL = null
             Cookies = []
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.89 sec - in org.springframework.samples.petclinic.web.VisitsViewTests
Running org.springframework.samples.petclinic.service.ClinicServiceJdbcTests
INFO  DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
INFO  DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5b41f249, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@dda90c0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4756a913, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1000dbea, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4407b019]
INFO  XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [spring/business-config.xml]
INFO  XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [spring/datasource-config.xml]
INFO  GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@1d8264c9: startup date [Thu Jul 30 22:01:06 UTC 2020]; root of context hierarchy
INFO  PropertyPlaceholderConfigurer - Loading properties file from class path resource [spring/data-access.properties]
INFO  PropertyPlaceholderConfigurer - Loading properties file from class path resource [spring/data-access.properties]
INFO  ScriptUtils - Executing SQL script from class path resource [db/hsqldb/initDB.sql]
INFO  ScriptUtils - Executed SQL script from class path resource [db/hsqldb/initDB.sql] in 10 ms.
INFO  ScriptUtils - Executing SQL script from class path resource [db/hsqldb/populateDB.sql]
INFO  ScriptUtils - Executed SQL script from class path resource [db/hsqldb/populateDB.sql] in 26 ms.
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@64f6183e testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@39810d27, testMethod = sholdUpdatePetName@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@53e83eb0 testClass = ClinicServiceJdbcTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jdbc}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@79b5cc90]; rollback [true]
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@64f6183e testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@39810d27, testMethod = sholdUpdatePetName@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@53e83eb0 testClass = ClinicServiceJdbcTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jdbc}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@64f6183e testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@50f771c6, testMethod = shouldAddNewVisitForPet@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@53e83eb0 testClass = ClinicServiceJdbcTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jdbc}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@79b5cc90]; rollback [true]
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@64f6183e testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@50f771c6, testMethod = shouldAddNewVisitForPet@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@53e83eb0 testClass = ClinicServiceJdbcTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jdbc}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@64f6183e testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@690b300, testMethod = shouldUpdateOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@53e83eb0 testClass = ClinicServiceJdbcTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jdbc}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@79b5cc90]; rollback [true]
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@64f6183e testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@690b300, testMethod = shouldUpdateOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@53e83eb0 testClass = ClinicServiceJdbcTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jdbc}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@64f6183e testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@3952fa33, testMethod = shouldInsertPetIntoDatabaseAndGenerateId@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@53e83eb0 testClass = ClinicServiceJdbcTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jdbc}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@79b5cc90]; rollback [true]
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@64f6183e testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@3952fa33, testMethod = shouldInsertPetIntoDatabaseAndGenerateId@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@53e83eb0 testClass = ClinicServiceJdbcTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jdbc}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@64f6183e testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@183839f4, testMethod = shouldInsertOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@53e83eb0 testClass = ClinicServiceJdbcTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jdbc}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@79b5cc90]; rollback [true]
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@64f6183e testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@183839f4, testMethod = shouldInsertOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@53e83eb0 testClass = ClinicServiceJdbcTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jdbc}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.34 sec - in org.springframework.samples.petclinic.service.ClinicServiceJdbcTests
Running org.springframework.samples.petclinic.service.ClinicServiceJpaTests
INFO  DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
INFO  DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@679a6394, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@392aabea, org.springframework.test.context.support.DirtiesContextTestExecutionListener@52396d1e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3d3a30e5, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@9086215]
INFO  XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [spring/business-config.xml]
INFO  XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [spring/datasource-config.xml]
INFO  GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@6511ed25: startup date [Thu Jul 30 22:01:07 UTC 2020]; root of context hierarchy
INFO  PropertyPlaceholderConfigurer - Loading properties file from class path resource [spring/data-access.properties]
INFO  PropertyPlaceholderConfigurer - Loading properties file from class path resource [spring/data-access.properties]
INFO  LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'petclinic'
INFO  LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: petclinic
	...]
INFO  Version - HHH000412: Hibernate Core {4.3.8.Final}
INFO  Environment - HHH000206: hibernate.properties not found
INFO  Environment - HHH000021: Bytecode provider name : javassist
INFO  Version - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
INFO  Dialect - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
INFO  ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
INFO  ScriptUtils - Executing SQL script from class path resource [db/hsqldb/initDB.sql]
INFO  ScriptUtils - Executed SQL script from class path resource [db/hsqldb/initDB.sql] in 28 ms.
INFO  ScriptUtils - Executing SQL script from class path resource [db/hsqldb/populateDB.sql]
INFO  ScriptUtils - Executed SQL script from class path resource [db/hsqldb/populateDB.sql] in 9 ms.
Hibernate: select distinct vet0_.id as id1_5_0_, specialty2_.id as id1_2_1_, vet0_.first_name as first_na2_5_0_, vet0_.last_name as last_nam3_5_0_, specialty2_.name as name2_2_1_, specialtie1_.vet_id as vet_id1_5_0__, specialtie1_.specialty_id as specialt2_4_0__ from vets vet0_ left outer join vet_specialties specialtie1_ on vet0_.id=specialtie1_.vet_id left outer join specialties specialty2_ on specialtie1_.specialty_id=specialty2_.id order by vet0_.last_name, vet0_.first_name
Hibernate: select distinct owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet_id4_1_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select visits0_.pet_id as pet_id4_1_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select distinct owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@4ade8f0 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@4dd773d8, testMethod = sholdUpdatePetName@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@38e0982 testClass = ClinicServiceJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5808531e]; rollback [true]
Hibernate: select pet0_.id as id1_1_0_, pet0_.name as name2_1_0_, pet0_.birth_date as birth_da3_1_0_, pet0_.owner_id as owner_id4_1_0_, pet0_.type_id as type_id5_1_0_, owner1_.id as id1_0_1_, owner1_.first_name as first_na2_0_1_, owner1_.last_name as last_nam3_0_1_, owner1_.address as address4_0_1_, owner1_.city as city5_0_1_, owner1_.telephone as telephon6_0_1_, pettype2_.id as id1_3_2_, pettype2_.name as name2_3_2_, visits3_.pet_id as pet_id4_1_3_, visits3_.id as id1_6_3_, visits3_.id as id1_6_4_, visits3_.visit_date as visit_da2_6_4_, visits3_.description as descript3_6_4_, visits3_.pet_id as pet_id4_6_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@4ade8f0 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@4dd773d8, testMethod = sholdUpdatePetName@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@38e0982 testClass = ClinicServiceJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@4ade8f0 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@298ccf4f, testMethod = shouldAddNewVisitForPet@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@38e0982 testClass = ClinicServiceJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5808531e]; rollback [true]
Hibernate: select pet0_.id as id1_1_0_, pet0_.name as name2_1_0_, pet0_.birth_date as birth_da3_1_0_, pet0_.owner_id as owner_id4_1_0_, pet0_.type_id as type_id5_1_0_, owner1_.id as id1_0_1_, owner1_.first_name as first_na2_0_1_, owner1_.last_name as last_nam3_0_1_, owner1_.address as address4_0_1_, owner1_.city as city5_0_1_, owner1_.telephone as telephon6_0_1_, pettype2_.id as id1_3_2_, pettype2_.name as name2_3_2_, visits3_.pet_id as pet_id4_1_3_, visits3_.id as id1_6_3_, visits3_.id as id1_6_4_, visits3_.visit_date as visit_da2_6_4_, visits3_.description as descript3_6_4_, visits3_.pet_id as pet_id4_6_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?
Hibernate: insert into visits (id, visit_date, description, pet_id) values (default, ?, ?, ?)
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@4ade8f0 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@298ccf4f, testMethod = shouldAddNewVisitForPet@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@38e0982 testClass = ClinicServiceJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@4ade8f0 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@780435b0, testMethod = shouldUpdateOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@38e0982 testClass = ClinicServiceJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5808531e]; rollback [true]
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet_id4_1_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: update owners set first_name=?, last_name=?, address=?, city=?, telephone=? where id=?
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@4ade8f0 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@780435b0, testMethod = shouldUpdateOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@38e0982 testClass = ClinicServiceJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@4ade8f0 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@365e0842, testMethod = shouldInsertPetIntoDatabaseAndGenerateId@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@38e0982 testClass = ClinicServiceJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5808531e]; rollback [true]
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet_id4_1_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select visits0_.pet_id as pet_id4_1_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select pettype0_.id as id1_3_, pettype0_.name as name2_3_ from types pettype0_ order by pettype0_.name
Hibernate: insert into pets (id, name, birth_date, owner_id, type_id) values (default, ?, ?, ?, ?)
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@4ade8f0 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@365e0842, testMethod = shouldInsertPetIntoDatabaseAndGenerateId@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@38e0982 testClass = ClinicServiceJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@4ade8f0 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@16fa3231, testMethod = shouldInsertOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@38e0982 testClass = ClinicServiceJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5808531e]; rollback [true]
Hibernate: select distinct owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
Hibernate: insert into owners (id, first_name, last_name, address, city, telephone) values (default, ?, ?, ?, ?, ?)
Hibernate: select distinct owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@4ade8f0 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@16fa3231, testMethod = shouldInsertOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@38e0982 testClass = ClinicServiceJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet_id4_1_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select pettype0_.id as id1_3_, pettype0_.name as name2_3_ from types pettype0_ order by pettype0_.name
Hibernate: select pet0_.id as id1_1_0_, pet0_.name as name2_1_0_, pet0_.birth_date as birth_da3_1_0_, pet0_.owner_id as owner_id4_1_0_, pet0_.type_id as type_id5_1_0_, owner1_.id as id1_0_1_, owner1_.first_name as first_na2_0_1_, owner1_.last_name as last_nam3_0_1_, owner1_.address as address4_0_1_, owner1_.city as city5_0_1_, owner1_.telephone as telephon6_0_1_, pettype2_.id as id1_3_2_, pettype2_.name as name2_3_2_, visits3_.pet_id as pet_id4_1_3_, visits3_.id as id1_6_3_, visits3_.id as id1_6_4_, visits3_.visit_date as visit_da2_6_4_, visits3_.description as descript3_6_4_, visits3_.pet_id as pet_id4_6_4_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id left outer join visits visits3_ on pet0_.id=visits3_.pet_id where pet0_.id=?
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.661 sec - in org.springframework.samples.petclinic.service.ClinicServiceJpaTests
Running org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests
INFO  DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
INFO  DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@14022257, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@a1cfd17, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6c7554d6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3bad5fd1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3eb8c269]
INFO  XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [spring/business-config.xml]
INFO  XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [spring/datasource-config.xml]
INFO  GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@53a164ec: startup date [Thu Jul 30 22:01:10 UTC 2020]; root of context hierarchy
INFO  PropertyPlaceholderConfigurer - Loading properties file from class path resource [spring/data-access.properties]
INFO  PropertyPlaceholderConfigurer - Loading properties file from class path resource [spring/data-access.properties]
INFO  LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'petclinic'
INFO  LogHelper - HHH000204: Processing PersistenceUnitInfo [
	name: petclinic
	...]
INFO  Dialect - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
INFO  ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
WARN  EntityManagerFactoryRegistry - HHH000436: Entity manager factory name (petclinic) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
INFO  ScriptUtils - Executing SQL script from class path resource [db/hsqldb/initDB.sql]
INFO  ScriptUtils - Executed SQL script from class path resource [db/hsqldb/initDB.sql] in 23 ms.
INFO  ScriptUtils - Executing SQL script from class path resource [db/hsqldb/populateDB.sql]
INFO  ScriptUtils - Executed SQL script from class path resource [db/hsqldb/populateDB.sql] in 25 ms.
Hibernate: select vet0_.id as id1_5_, vet0_.first_name as first_na2_5_, vet0_.last_name as last_nam3_5_ from vets vet0_
Hibernate: select specialtie0_.vet_id as vet_id1_5_0_, specialtie0_.specialty_id as specialt2_4_0_, specialty1_.id as id1_2_1_, specialty1_.name as name2_2_1_ from vet_specialties specialtie0_ inner join specialties specialty1_ on specialtie0_.specialty_id=specialty1_.id where specialtie0_.vet_id=?
Hibernate: select specialtie0_.vet_id as vet_id1_5_0_, specialtie0_.specialty_id as specialt2_4_0_, specialty1_.id as id1_2_1_, specialty1_.name as name2_2_1_ from vet_specialties specialtie0_ inner join specialties specialty1_ on specialtie0_.specialty_id=specialty1_.id where specialtie0_.vet_id=?
Hibernate: select specialtie0_.vet_id as vet_id1_5_0_, specialtie0_.specialty_id as specialt2_4_0_, specialty1_.id as id1_2_1_, specialty1_.name as name2_2_1_ from vet_specialties specialtie0_ inner join specialties specialty1_ on specialtie0_.specialty_id=specialty1_.id where specialtie0_.vet_id=?
Hibernate: select specialtie0_.vet_id as vet_id1_5_0_, specialtie0_.specialty_id as specialt2_4_0_, specialty1_.id as id1_2_1_, specialty1_.name as name2_2_1_ from vet_specialties specialtie0_ inner join specialties specialty1_ on specialtie0_.specialty_id=specialty1_.id where specialtie0_.vet_id=?
Hibernate: select specialtie0_.vet_id as vet_id1_5_0_, specialtie0_.specialty_id as specialt2_4_0_, specialty1_.id as id1_2_1_, specialty1_.name as name2_2_1_ from vet_specialties specialtie0_ inner join specialties specialty1_ on specialtie0_.specialty_id=specialty1_.id where specialtie0_.vet_id=?
Hibernate: select specialtie0_.vet_id as vet_id1_5_0_, specialtie0_.specialty_id as specialt2_4_0_, specialty1_.id as id1_2_1_, specialty1_.name as name2_2_1_ from vet_specialties specialtie0_ inner join specialties specialty1_ on specialtie0_.specialty_id=specialty1_.id where specialtie0_.vet_id=?
Hibernate: select distinct owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet_id4_1_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select visits0_.pet_id as pet_id4_1_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select distinct owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@62da3efd testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@310568db, testMethod = sholdUpdatePetName@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@667d6614 testClass = ClinicServiceSpringDataJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{spring-data-jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@4f84260e]; rollback [true]
Hibernate: select pet0_.id as id1_1_, pet0_.name as name2_1_, pet0_.birth_date as birth_da3_1_, pet0_.owner_id as owner_id4_1_, pet0_.type_id as type_id5_1_ from pets pet0_ where pet0_.id=?
Hibernate: select owner0_.id as id1_0_0_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_ from owners owner0_ where owner0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet_id4_1_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: update pets set name=?, birth_date=?, owner_id=?, type_id=? where id=?
Hibernate: select pet0_.id as id1_1_, pet0_.name as name2_1_, pet0_.birth_date as birth_da3_1_, pet0_.owner_id as owner_id4_1_, pet0_.type_id as type_id5_1_ from pets pet0_ where pet0_.id=?
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@62da3efd testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@310568db, testMethod = sholdUpdatePetName@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@667d6614 testClass = ClinicServiceSpringDataJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{spring-data-jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@62da3efd testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@1fed7fb1, testMethod = shouldAddNewVisitForPet@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@667d6614 testClass = ClinicServiceSpringDataJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{spring-data-jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@4f84260e]; rollback [true]
Hibernate: select pet0_.id as id1_1_, pet0_.name as name2_1_, pet0_.birth_date as birth_da3_1_, pet0_.owner_id as owner_id4_1_, pet0_.type_id as type_id5_1_ from pets pet0_ where pet0_.id=?
Hibernate: select owner0_.id as id1_0_0_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_ from owners owner0_ where owner0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet_id4_1_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: insert into visits (id, visit_date, description, pet_id) values (default, ?, ?, ?)
Hibernate: select pet0_.id as id1_1_, pet0_.name as name2_1_, pet0_.birth_date as birth_da3_1_, pet0_.owner_id as owner_id4_1_, pet0_.type_id as type_id5_1_ from pets pet0_ where pet0_.id=?
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@62da3efd testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@1fed7fb1, testMethod = shouldAddNewVisitForPet@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@667d6614 testClass = ClinicServiceSpringDataJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{spring-data-jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@62da3efd testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@e2b11ce, testMethod = shouldUpdateOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@667d6614 testClass = ClinicServiceSpringDataJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{spring-data-jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@4f84260e]; rollback [true]
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet_id4_1_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: update owners set first_name=?, last_name=?, address=?, city=?, telephone=? where id=?
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@62da3efd testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@e2b11ce, testMethod = shouldUpdateOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@667d6614 testClass = ClinicServiceSpringDataJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{spring-data-jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@62da3efd testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@626dae84, testMethod = shouldInsertPetIntoDatabaseAndGenerateId@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@667d6614 testClass = ClinicServiceSpringDataJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{spring-data-jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@4f84260e]; rollback [true]
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet_id4_1_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select visits0_.pet_id as pet_id4_1_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select pettype0_.id as id1_3_, pettype0_.name as name2_3_ from types pettype0_ order by pettype0_.name
Hibernate: insert into pets (id, name, birth_date, owner_id, type_id) values (default, ?, ?, ?, ?)
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@62da3efd testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@626dae84, testMethod = shouldInsertPetIntoDatabaseAndGenerateId@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@667d6614 testClass = ClinicServiceSpringDataJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{spring-data-jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@62da3efd testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@6ccef254, testMethod = shouldInsertOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@667d6614 testClass = ClinicServiceSpringDataJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{spring-data-jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@4f84260e]; rollback [true]
Hibernate: select distinct owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
Hibernate: insert into owners (id, first_name, last_name, address, city, telephone) values (default, ?, ?, ?, ?, ?)
Hibernate: select distinct owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@62da3efd testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@6ccef254, testMethod = shouldInsertOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@667d6614 testClass = ClinicServiceSpringDataJpaTests, locations = '{classpath:spring/business-config.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{spring-data-jpa}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet_id4_1_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: select pettype0_.id as id1_3_, pettype0_.name as name2_3_ from types pettype0_ order by pettype0_.name
Hibernate: select pet0_.id as id1_1_, pet0_.name as name2_1_, pet0_.birth_date as birth_da3_1_, pet0_.owner_id as owner_id4_1_, pet0_.type_id as type_id5_1_ from pets pet0_ where pet0_.id=?
Hibernate: select owner0_.id as id1_0_0_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_ from owners owner0_ where owner0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet_id4_1_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.195 sec - in org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests
INFO  GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@3c28e5b6: startup date [Thu Jul 30 22:01:01 UTC 2020]; root of context hierarchy
INFO  GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@53a164ec: startup date [Thu Jul 30 22:01:10 UTC 2020]; root of context hierarchy
INFO  GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@1d8264c9: startup date [Thu Jul 30 22:01:06 UTC 2020]; root of context hierarchy
INFO  GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@6511ed25: startup date [Thu Jul 30 22:01:07 UTC 2020]; root of context hierarchy
INFO  LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'petclinic'
INFO  LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'petclinic'

Results :

Tests run: 32, Failures: 0, Errors: 0, Skipped: 0

[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.5:report (report) @ spring-petclinic ---
[INFO] Loading execution data file /tmp/tmp3coyes9l/petclinic/target/jacoco.exec
[INFO] Analyzed bundle 'petclinic' with 49 classes
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  34.344 s
[INFO] Finished at: 2020-07-30T22:01:12Z
[INFO] ------------------------------------------------------------------------
