<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.opentripplanner</groupId>
  <artifactId>opentripplanner</artifactId>
  <version>0.9.2-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>OpenTripPlanner</name>
  <url>http://opentripplanner.org/</url>

  <scm>
    <connection>scm:git:http://github.com/openplans/OpenTripPlanner.git</connection>
    <developerConnection>scm:git:ssh://git@github.com/openplans/OpenTripPlanner.git</developerConnection>
    <url>http://github.com/openplans/OpenTripPlanner</url>
  </scm>

  <modules>
    <module>openstreetmap</module>
    <module>opentripplanner-admin-webapp</module>
    <module>opentripplanner-api-extended</module>
    <module>opentripplanner-api-thrift</module>
    <module>opentripplanner-api-webapp</module>
    <module>opentripplanner-geocoder</module>
    <module>opentripplanner-graph-builder</module>
    <module>opentripplanner-gui</module>
    <module>opentripplanner-integration</module>
    <module>opentripplanner-routing</module>
    <module>opentripplanner-updater</module>
    <module>opentripplanner-utils</module>
    <module>opentripplanner-webapp</module>
    <module>opentripplanner-web-utils</module>
    <module>opentripplanner-analyst</module>
    <module>opentripplanner-analyst-client</module>
    <module>opentripplanner-leaflet-client</module>
    <module>opentripplanner-municoder</module>
    <module>otp-standalone</module>
    <module>otp-rest-api</module>
  </modules>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <autoVersionSubmodules>true</autoVersionSubmodules>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <argLine>-Xmx2G</argLine>
          <disableXmlReport>false</disableXmlReport>
        </configuration>
      </plugin>
    </plugins>
    
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-webdav</artifactId>
        <version>1.0-beta-2</version>
      </extension>
    </extensions>
    
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.5</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>1.7.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.8.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.2.2</version>
          <configuration>
            <!-- by default, release:prepare runs goals 'clean' and 'verify'.
            Javadoc generation in release:perform requires the new release
            versions of our artifacts to already be installed in the local 
            repository. -->
            <preparationGoals>clean install</preparationGoals>
            <!-- The site generation step can fail. Run it in release:prepare to make sure it
            works before tagging the release. Enunciate model validation is currently failing,
            apparently due to a problem in enunciate.
            <preparationGoals>clean install site</preparationGoals>
            -->
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.12</version>
        </plugin>
        <plugin>
          <!-- m2eclipse lifecycle mapping configuration -->
          <!-- should not affect builds outside IDE -->
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <versionRange>[1.0,)</versionRange>
                    <goals>
                      <goal>copy-dependencies</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <versionRange>[1.0,)</versionRange>
                    <goals>
                      <goal>revision</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <distributionManagement>
    <repository>
      <id>${distribution_id}</id>
      <name>${distribution_name}</name>
      <url>${distribution_url}</url>
    </repository>
    <snapshotRepository>
      <id>${snapshot_distribution_id}</id>
      <name>${snapshot_distribution_name}</name>
      <url>${snapshot_distribution_url}</url>
      <uniqueVersion>false</uniqueVersion>
    </snapshotRepository>
    <site>
      <id>opentripplanner-docs</id>
      <name>OpenTripPlanner Docs</name>
      <url>scp://www.opentripplanner.org:7777/var/www/opentripplanner.org/mvn-site</url>
    </site>
  </distributionManagement>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <!-- empty: disable project-info reports -->
            </reports>
          </reportSet>
        </reportSets>
      </plugin>      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <links>
            <link>http://developer.onebusaway.org/apidocs/modules/onebusaway-gtfs/1.3.0/</link>
          </links>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <!-- enable only aggregate-level javadoc generation -->
              <report>aggregate</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

  <!-- 
    CI Server profile
    Hudson by default defines a property BUILD_NUMBER which is used to enable this profile. 
  -->
  <profiles>
    <profile>
      <id>hudson</id>
      <activation>
        <property>
          <name>BUILD_NUMBER</name>
        </property>
      </activation>
      <!-- CI Server profile currently unused -->
      <distributionManagement>
      </distributionManagement>
    </profile>
  </profiles>

  <repositories>
    <!-- Hack to force maven to check central first. Maven central is inherited from the superpom,
      but ends up at the end of the list. Though most of the time the artifact is in central, 
      Maven tries to download from every other repository and fails before checking central.  
      Do not change the id from central2 to central, otherwise the entry will be ignored. -->
    <repository>
      <id>central2</id>
      <name>check central first to avoid a lot of not found warnings</name>
      <url>http://repo1.maven.org/maven2</url>
    </repository>    
    <repository>
        <id>download.java.net</id>
        <name>Java.net Repository for Maven</name>
        <url>http://download.java.net/maven/2/</url>
        <layout>default</layout>
    </repository>
    <repository>
      <id>releases.developer.onebusaway.org</id>
      <url>http://developer.onebusaway.org/maven/repository/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>osgeo</id>
      <name>Open Source Geospatial Foundation Repository</name>
      <url>http://download.osgeo.org/webdav/geotools/</url>
    </repository>
    <repository>
      <id>axis</id>
      <name>axis</name>
      <url>http://people.apache.org/repo/m1-ibiblio-rsync-repository/org.apache.axis2/</url>
    </repository>
    <repository>
      <id>opengeo</id>
      <name>OpenGeo Maven Repository</name>
      <url>http://repo.opengeo.org/</url>
    </repository>
  </repositories>

  <!-- define no dependencies in the top-level POM to minimize artifact size -->
  <dependencies>
  </dependencies>

  <!-- version numbers that will be inherited by subprojects actually using these dependencies -->
  <dependencyManagement>
    <dependencies>
      <!-- Spring -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aop</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-core</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-config</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-web</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- Geotools -->
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-coverage</artifactId>
        <version>${geotools.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-geojson</artifactId>
        <version>${geotools.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-geotiff</artifactId>
        <version>${geotools.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-referencing</artifactId>
        <version>${geotools.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-shapefile</artifactId>
        <version>${geotools.version}</version>
      </dependency>
        <dependency>
          <groupId>org.geotools</groupId>
          <artifactId>gt-arcgrid</artifactId>
          <version>${geotools.version}</version>
        </dependency>
      <dependency>
        <!-- provides EPSG database -->
        <groupId>org.geotools</groupId>
        <artifactId>gt-epsg-hsql</artifactId>
        <version>${geotools.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.hsqlsdb</groupId>
            <artifactId>hsqldb</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <!-- why are we excluding then re-including a different version of hsql? -->
        <groupId>org.hsqldb</groupId>
        <artifactId>hsqldb</artifactId>
        <version>2.0.0</version>
      </dependency>
      <!-- 
        JTS is a transitive dependency of Geotools, but some submodules only need JTS
        so require the same version here.
      -->
      <dependency>
        <groupId>com.vividsolutions</groupId>
        <artifactId>jts</artifactId>
        <version>1.13</version>
      </dependency>    
      <!-- Jersey -->
      <dependency>
        <groupId>com.sun.jersey</groupId>
        <artifactId>jersey-server</artifactId>
        <version>${jersey.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.jersey</groupId>
        <artifactId>jersey-servlet</artifactId>
        <version>${jersey.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.jersey</groupId>
        <artifactId>jersey-client</artifactId>
        <version>${jersey.version}</version>
        <scope>test</scope>
      </dependency>
        <dependency>
        <groupId>com.sun.jersey</groupId>
        <artifactId>jersey-core</artifactId>
        <version>${jersey.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.jersey</groupId>
        <artifactId>jersey-grizzly2</artifactId>
        <version>${jersey.version}</version>
      </dependency>
      <dependency>
        <!-- jersey-spring (contrib) versioning does not match Spring itself -->
        <groupId>com.sun.jersey.contribs</groupId>
        <artifactId>jersey-spring</artifactId>
        <version>1.9.1</version>
      </dependency>
      <!-- LOGGING -->
      <dependency>
        <!-- Logback is an implemetation of the SLF4J API (basically a new and improved log4j) -->
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>1.0.13</version>
      </dependency>
      <dependency>
        <!-- Jersey uses java.util logging, redirect it via slf4j API to Logback -->
        <groupId>org.slf4j</groupId>
        <artifactId>jul-to-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <!-- Spring uses jakarta commons logging. Redirect that via the SLF4J API to Logback -->
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <!-- Extensions to the Java standard library -->
      <dependency>
        <!-- Lombok provides annotation-driven field accessor methods -->
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>0.11.8</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <!-- Guava provides improved collections -->  
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>14.0.1</version>
      </dependency>
      <!-- Other -->
      <dependency>
        <groupId>org.onebusaway</groupId>
        <artifactId>onebusaway-gtfs</artifactId>
        <version>1.3.0</version>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.8.1</version>
        <scope>test</scope>
      </dependency>      
      <dependency>
        <groupId>net.sourceforge.javacsv</groupId>
        <artifactId>javacsv</artifactId>
        <version>2.0</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.jaxrs</groupId>
        <artifactId>jackson-jaxrs-json-provider</artifactId>
        <version>2.0.4</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <properties>
    <geotools.version>9.2</geotools.version>
    <slf4j.version>1.7.5</slf4j.version>
    <jersey.version>1.17.1</jersey.version>
    <spring.version>3.0.5.RELEASE</spring.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <distribution_id>opengeo</distribution_id>
    <distribution_name>OpenGeo Maven Repository</distribution_name>
    <distribution_url>dav:http://repo.opengeo.org</distribution_url>
    <snapshot_distribution_id>opengeo</snapshot_distribution_id>
    <snapshot_distribution_name>OpenGeo Maven Repository</snapshot_distribution_name>
    <snapshot_distribution_url>dav:http://repo.opengeo.org</snapshot_distribution_url>
  </properties>
</project>
