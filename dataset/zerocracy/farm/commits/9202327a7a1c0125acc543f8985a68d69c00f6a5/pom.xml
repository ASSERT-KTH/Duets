<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (c) 2016-2018 Zerocracy

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to read
the Software only. Permissions is hereby NOT GRANTED to use, copy, modify,
merge, publish, distribute, sublicense, and/or sell copies of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.jcabi</groupId>
    <artifactId>parent</artifactId>
    <version>0.49.2</version>
  </parent>
  <groupId>com.zerocracy</groupId>
  <artifactId>farm</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>farm</name>
  <description>Java Stakeholder API</description>
  <url>https://github.com/zerocracy/farm</url>
  <inceptionYear>2016</inceptionYear>
  <organization>
    <name>Zerocracy</name>
    <url>https://github.com/zerocracy</url>
  </organization>
  <licenses>
    <license>
      <name>private</name>
      <url>https://www.zerocracy.com/LICENSE.txt</url>
      <distribution>site</distribution>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>1</id>
      <name>Yegor Bugayenko</name>
      <email>yegor256@gmail.com</email>
      <organization>Zerocracy</organization>
      <organizationUrl>http://www.zerocracy.com</organizationUrl>
      <roles>
        <role>Architect</role>
        <role>Developer</role>
      </roles>
      <timezone>-7</timezone>
    </developer>
  </developers>
  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/zerocracy/farm/issues</url>
  </issueManagement>
  <scm>
    <connection>scm:git:git@github.com:zerocracy/farm.git</connection>
    <developerConnection>scm:git:git@github.com:zerocracy/farm.git</developerConnection>
    <url>https://github.com/zerocracy/farm</url>
  </scm>
  <ciManagement>
    <system>rultor</system>
    <url>http://www.rultor.com/s/zerocracy</url>
  </ciManagement>
  <distributionManagement>
    <site>
      <id>github-pages</id>
      <url>https://github.com/zerocracy/farm</url>
    </site>
  </distributionManagement>
  <properties>
    <mongo.version>3.8.0</mongo.version>
    <telegram.version>3.6</telegram.version>
    <branch.coverage>0.45</branch.coverage>
    <aws.version>1.11.211</aws.version>
    <argLine>-Duser.language=en -Duser.country=US</argLine>
  </properties>
  <repositories>
    <repository>
      <id>bintray-g4s8-maven</id>
      <name>bintray-g4s8-maven</name>
      <url>https://dl.bintray.com/g4s8/mvn</url>
    </repository>
  </repositories>
  <dependencies>
    <dependency>
      <groupId>org.cactoos</groupId>
      <artifactId>cactoos</artifactId>
      <version>0.29</version>
    </dependency>
    <dependency>
      <groupId>io.sentry</groupId>
      <artifactId>sentry</artifactId>
      <version>1.5.5</version>
    </dependency>
    <dependency>
      <groupId>io.sentry</groupId>
      <artifactId>sentry-log4j</artifactId>
      <version>1.5.5</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.yoti</groupId>
      <artifactId>yoti-sdk-api</artifactId>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>com.yoti</groupId>
      <artifactId>yoti-sdk-impl</artifactId>
      <version>1.3</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.github.zafarkhaja</groupId>
      <artifactId>java-semver</artifactId>
      <version>0.9.0</version>
    </dependency>
    <dependency>
      <groupId>com.stripe</groupId>
      <artifactId>stripe-java</artifactId>
      <version>5.27.0</version>
    </dependency>
    <dependency>
      <groupId>com.ullink.slack</groupId>
      <artifactId>simpleslackapi</artifactId>
      <version>1.0.0</version>
      <exclusions>
        <exclusion>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.paypal.sdk</groupId>
      <artifactId>adaptivepaymentssdk</artifactId>
      <version>2.9.117</version>
    </dependency>
    <dependency>
      <groupId>com.paypal.sdk</groupId>
      <artifactId>paypal-core</artifactId>
      <version>1.7.2</version>
    </dependency>
    <dependency>
      <groupId>org.quartz-scheduler</groupId>
      <artifactId>quartz</artifactId>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>mongodb-driver</artifactId>
      <version>${mongo.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>mongodb-driver-core</artifactId>
      <version>${mongo.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>bson</artifactId>
      <version>${mongo.version}</version>
    </dependency>
    <dependency>
      <groupId>de.flapdoodle.embed</groupId>
      <artifactId>de.flapdoodle.embed.mongo</artifactId>
      <version>2.0.3</version>
    </dependency>
    <dependency>
      <groupId>de.flapdoodle.embed</groupId>
      <artifactId>de.flapdoodle.embed.process</artifactId>
      <version>2.0.2</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>
    <dependency>
      <groupId>org.twitter4j</groupId>
      <artifactId>twitter4j-core</artifactId>
      <version>4.0.6</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
      <version>2.4.15</version>
    </dependency>
    <dependency>
      <groupId>org.takes</groupId>
      <artifactId>takes</artifactId>
      <version>1.11.2</version>
    </dependency>
    <dependency>
      <groupId>org.reflections</groupId>
      <artifactId>reflections</artifactId>
      <version>0.9.11</version>
    </dependency>
    <dependency>
      <groupId>com.github.mongobee</groupId>
      <artifactId>mongobee</artifactId>
      <version>0.13</version>
      <exclusions>
        <exclusion>
          <groupId>org.mongodb</groupId>
          <artifactId>mongo-java-driver</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk-core</artifactId>
      <version>${aws.version}</version>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk-s3</artifactId>
      <version>${aws.version}</version>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk-dynamodb</artifactId>
      <version>${aws.version}</version>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk-sqs</artifactId>
      <version>${aws.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.25</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.jcabi</groupId>
      <artifactId>jcabi-s3</artifactId>
      <version>0.18</version>
    </dependency>
    <dependency>
      <groupId>org.apache.velocity</groupId>
      <artifactId>velocity</artifactId>
      <version>1.7</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.jcabi</groupId>
      <artifactId>jcabi-dynamo</artifactId>
    </dependency>
    <dependency>
      <groupId>com.jcabi</groupId>
      <artifactId>jcabi-xml</artifactId>
      <version>0.21.4</version>
    </dependency>
    <dependency>
      <groupId>com.jcabi.incubator</groupId>
      <artifactId>xembly</artifactId>
      <version>0.22</version>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>com.jcabi</groupId>
      <artifactId>jcabi-log</artifactId>
      <version>0.17.3</version>
    </dependency>
    <dependency>
      <groupId>com.jcabi</groupId>
      <artifactId>jcabi-matchers</artifactId>
    </dependency>
    <dependency>
      <groupId>com.jcabi</groupId>
      <artifactId>jcabi-github</artifactId>
      <version>0.41</version>
    </dependency>
    <dependency>
      <groupId>com.jcabi</groupId>
      <artifactId>jcabi-http</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.json</groupId>
      <artifactId>javax.json-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>javax.json</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>net.sf.saxon</groupId>
      <artifactId>Saxon-HE</artifactId>
      <version>9.8.0-5</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.web</groupId>
      <artifactId>el-impl</artifactId>
      <version>2.2.1-b05</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>findbugs-annotations</artifactId>
      <version>3.0.1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.tyrus.bundles</groupId>
      <artifactId>tyrus-standalone-client</artifactId>
      <version>1.13.1</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.coinbase.api</groupId>
      <artifactId>coinbase-java</artifactId>
      <version>1.10.0</version>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>2.8.1</version>
    </dependency>
    <dependency>
      <groupId>org.joda</groupId>
      <artifactId>joda-money</artifactId>
      <version>0.9.1</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-server</artifactId>
      <version>2.26</version>
      <scope>runtime</scope>
      <exclusions>
        <exclusion>
          <groupId>org.glassfish.hk2.external</groupId>
          <artifactId>javax.inject</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.jcabi</groupId>
      <artifactId>jcabi-aspects</artifactId>
      <version>0.22.6</version>
    </dependency>
    <dependency>
      <groupId>com.icegreen</groupId>
      <artifactId>greenmail</artifactId>
      <version>1.5.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.telegram</groupId>
      <artifactId>telegrambots</artifactId>
      <version>${telegram.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.glassfish.hk2.external</groupId>
          <artifactId>javax.inject</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.jersey.containers</groupId>
          <artifactId>jersey-container-grizzly2-http</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.jcabi</groupId>
      <artifactId>jcabi-jdbc</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.4.193</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.telegram</groupId>
      <artifactId>telegrambots-meta</artifactId>
      <version>${telegram.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>23.1-jre</version>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>42.2.2</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.g4s8</groupId>
      <artifactId>cactoos-cache</artifactId>
      <version>0.1.3</version>
    </dependency>
    <dependency>
      <groupId>com.sun.grizzly</groupId>
      <artifactId>grizzly-servlet-webserver</artifactId>
      <version>1.9.65</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <properties>
              <property>
                <name>listener</name>
                <value>com.zerocracy.TestListener</value>
              </property>
            </properties>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.20.1</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.0</version>
          <configuration>
            <output>file</output>
            <excludes>
              <exclude>**/*.sketch</exclude>
            </excludes>
            <skip>true</skip>
          </configuration>
          <executions>
            <execution>
              <id>jacoco-initialize</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>jacoco-check</id>
              <phase>test</phase>
              <goals>
                <goal>check</goal>
              </goals>
              <configuration>
                <rules>
                  <rule>
                    <element>BUNDLE</element>
                    <limits>
                      <limit>
                        <counter>INSTRUCTION</counter>
                        <value>COVEREDRATIO</value>
                        <minimum>0.58</minimum>
                      </limit>
                      <limit>
                        <counter>LINE</counter>
                        <value>COVEREDRATIO</value>
                        <minimum>0.65</minimum>
                      </limit>
                      <!--
                         @todo #1083:30min Continue to increase the coverages to reach
                          branch coverage of 65% and class missed count of max 15.
                          Remember to increase those coverages below in jacoco configuration.
                      -->
                      <!-- 
                           @todo #1088:30min Groovy scripts are now not excluded, as a result
                            complexity coverage ration dropped from 0.57, and instruction
                            coverage dropped from 0.60. Add tests to
                            stakeholder scripts to the previous coverage of 0.57 for
                            complexity and 0.60 for instruction coverage.
                       -->
                      <limit>
                        <counter>BRANCH</counter>
                        <value>COVEREDRATIO</value>
                        <minimum>${branch.coverage}</minimum>
                      </limit>
                      <limit>
                        <counter>COMPLEXITY</counter>
                        <value>COVEREDRATIO</value>
                        <minimum>0.45</minimum>
                      </limit>
                      <limit>
                        <counter>METHOD</counter>
                        <value>COVEREDRATIO</value>
                        <minimum>0.57</minimum>
                      </limit>
                      <limit>
                        <counter>CLASS</counter>
                        <value>MISSEDCOUNT</value>
                        <maximum>68</maximum>
                      </limit>
                    </limits>
                  </rule>
                </rules>
              </configuration>
            </execution>
            <execution>
              <id>jacoco-site</id>
              <phase>install</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>codenarc</id>
      <dependencies>
        <dependency>
          <groupId>org.codenarc</groupId>
          <artifactId>CodeNarc</artifactId>
          <version>1.0</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
              <execution>
                <id>codenarc</id>
                <phase>verify</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <mainClass>org.codenarc.CodeNarc</mainClass>
                  <classpathScope>test</classpathScope>
                  <arguments>
                    <argument>-basedir=${basedir}/src</argument>
                    <argument>-rulesetfiles=file://${basedir}/src/test/resources/codenarc-rules.txt</argument>
                    <argument>-includes=**/*.groovy</argument>
                    <argument>-report=xml:${project.build.directory}/codenarc.xml</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.gmaven</groupId>
            <artifactId>groovy-maven-plugin</artifactId>
            <version>2.0</version>
            <executions>
              <execution>
                <id>codenarc-post</id>
                <phase>verify</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <classpathScope>compile</classpathScope>
                  <source><![CDATA[
                    import com.jcabi.xml.XML
                    import com.jcabi.xml.XMLDocument

                    XML xml = new XMLDocument(new File('${project.build.directory}/codenarc.xml'))
                    List<XML> pkgs = xml.nodes('//Package[@filesWithViolations > 0]')
                    if (!pkgs.isEmpty()) {
                      for (XML pkg : pkgs) {
                        for (XML file : pkg.nodes('.//File')) {
                          for (XML violation : file.nodes('.//Violation')) {
                            printf(
                                '%s/%s[%s] %s: %s\n',
                                pkg.xpath('@path').get(0),
                                file.xpath('@name').get(0),
                                violation.xpath('@lineNumber').get(0),
                                violation.xpath('@ruleName').get(0),
                                violation.xpath('Message/text()').get(0)
                            )
                          }
                        }
                      }
                      throw new Exception('CodeNarc violations see above')
                    }
                    println('All ' + xml.xpath('//PackageSummary/@totalFiles').get(0) + ' Groovy files are clean!')
                    ]]></source>
                </configuration>
              </execution>
              <execution>
                <id>groovy-regex</id>
                <phase>verify</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <classpathScope>compile</classpathScope>
                  <source><![CDATA[
                    import groovy.io.FileType

                    def dir = new File("src/main/groovy/com/zerocracy/stk")
                    dir.eachFileRecurse(FileType.FILES) { file ->
                      if (file.text.findAll('def [a-z]+ = ')) {
                        throw new Exception(
                            'Don\'t use def, explicitly specify types in ' + file
                        )
                      }
                    }
                    println('All Groovy files are clean!')
                    ]]></source>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>qulice</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.qulice</groupId>
            <artifactId>qulice-maven-plugin</artifactId>
            <version>0.17.4</version>
            <configuration>
              <excludes combine.children="append">
                <exclude>checkstyle:.*/src/main/resources/png/.*</exclude>
                <exclude>checkstyle:.*/src/main/resources/com/zerocracy/tk/project/badge.sketch</exclude>
                <exclude>checkstyle:.*/src/main/resources/com/zerocracy/tk/project/contrib-badge.sketch</exclude>
                <exclude>findbugs:.*</exclude>
                <exclude>duplicatefinder:.*</exclude>
                <exclude>pmd:.*\.tex</exclude>
              </excludes>
              <license>file:${basedir}/LICENSE.txt</license>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <configuration>
              <skip>false</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>resources</id>
      <activation>
        <file>
          <exists>pom.xml</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>nl.geodienstencentrum.maven</groupId>
            <artifactId>sass-maven-plugin</artifactId>
            <version>2.25</version>
            <executions>
              <execution>
                <id>generate-css</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>update-stylesheets</goal>
                </goals>
                <configuration>
                  <sassSourceDirectory>${basedir}/src/main/scss</sassSourceDirectory>
                  <destination>${project.build.directory}/css</destination>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.samaxes.maven</groupId>
            <artifactId>minify-maven-plugin</artifactId>
            <version>1.7.2</version>
            <configuration>
              <charset>UTF-8</charset>
              <nosuffix>true</nosuffix>
              <webappTargetDir>${project.build.outputDirectory}</webappTargetDir>
            </configuration>
            <executions>
              <execution>
                <id>minify-css</id>
                <goals>
                  <goal>minify</goal>
                </goals>
                <configuration>
                  <webappSourceDir>${project.build.directory}</webappSourceDir>
                  <cssSourceDir>css</cssSourceDir>
                  <cssSourceIncludes>
                    <include>*.css</include>
                  </cssSourceIncludes>
                  <skipMerge>true</skipMerge>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.tunyk.mvn.plugins.htmlcompressor</groupId>
            <artifactId>htmlcompressor-maven-plugin</artifactId>
            <version>1.3</version>
            <executions>
              <execution>
                <id>compress-xsl</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>xml</goal>
                </goals>
                <configuration>
                  <srcFolder>${basedir}/src/main/resources/xsl</srcFolder>
                  <targetFolder>${project.build.outputDirectory}/xsl</targetFolder>
                  <fileExt>
                    <ext>xsl</ext>
                  </fileExt>
                  <removeIntertagSpaces>false</removeIntertagSpaces>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>heroku</id>
      <activation>
        <file>
          <exists>pom.xml</exists>
        </file>
      </activation>
      <build>
        <finalName>farm</finalName>
        <plugins>
          <plugin>
            <artifactId>maven-jar-plugin</artifactId>
            <configuration>
              <archive>
                <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
              </archive>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-dependencies-for-heroku</id>
                <phase>package</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <includeScope>runtime</includeScope>
                  <outputDirectory>${project.build.directory}/deps</outputDirectory>
                  <overWriteReleases>true</overWriteReleases>
                  <overWriteSnapshots>true</overWriteSnapshots>
                  <overWriteIfNewer>true</overWriteIfNewer>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>coveralls</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.eluder.coveralls</groupId>
            <artifactId>coveralls-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>site</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <repoToken>${coveralls.token}</repoToken>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>dynamodb</id>
      <activation>
        <property>
          <name>!skipTests</name>
        </property>
      </activation>
      <properties>
        <test.dynamo.key>AAAAAAAAAAAAAAAAAAAA</test.dynamo.key>
        <test.dynamo.secret>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</test.dynamo.secret>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-dynamodb-local</id>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>com.jcabi</groupId>
                      <artifactId>DynamoDBLocal</artifactId>
                      <version>2015-07-16</version>
                      <type>zip</type>
                      <outputDirectory>
                        ${project.build.directory}/dynamodb-dist
                      </outputDirectory>
                      <overWrite>false</overWrite>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>3.0.0</version>
            <executions>
              <execution>
                <id>reserver-dynamodb-port</id>
                <goals>
                  <goal>reserve-network-port</goal>
                </goals>
                <phase>pre-integration-test</phase>
                <configuration>
                  <portNames>
                    <portName>dynamo.port</portName>
                  </portNames>
                  <minPortNumber>49152</minPortNumber>
                  <maxPortNumber>65535</maxPortNumber>
                  <randomPort>true</randomPort>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.jcabi</groupId>
            <artifactId>jcabi-dynamodb-maven-plugin</artifactId>
            <version>0.9.1</version>
            <executions>
              <execution>
                <id>dynamodb-integration-test</id>
                <goals>
                  <goal>start</goal>
                  <goal>create-tables</goal>
                  <goal>stop</goal>
                </goals>
                <configuration>
                  <port>${dynamo.port}</port>
                  <dist>${project.build.directory}/dynamodb-dist</dist>
                  <key>${test.dynamo.key}</key>
                  <secret>${test.dynamo.secret}</secret>
                  <tables>
                    <table>${basedir}/src/test/dynamodb/errors.json</table>
                  </tables>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
        <pluginManagement>
          <plugins>
            <plugin>
              <artifactId>maven-failsafe-plugin</artifactId>
              <configuration>
                <systemPropertyVariables combine.children="append">
                  <dynamo.port>${dynamo.port}</dynamo.port>
                </systemPropertyVariables>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>test-proxy</id>
      <activation>
        <property>
          <name>test.proxy.host</name>
        </property>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <artifactId>maven-surefire-plugin</artifactId>
              <configuration combine.children="append">
                <argLine>-Dhttp.proxyPort=${test.proxy.port} -Dhttp.proxyHost=${test.proxy.host}</argLine>
              </configuration>
            </plugin>
            <plugin>
              <artifactId>maven-failsafe-plugin</artifactId>
              <configuration combine.children="append">
                <argLine>-Dhttp.proxyPort=${test.proxy.port} -Dhttp.proxyHost=${test.proxy.host}</argLine>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>shutdown</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.gmaven</groupId>
            <artifactId>groovy-maven-plugin</artifactId>
            <version>2.0</version>
            <executions>
              <execution>
                <id>shutdown</id>
                <phase>initialize</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <classpathScope>compile</classpathScope>
                  <source><![CDATA[
                    def con = new URL("https://www.0crat.com/shutdown").openConnection() as HttpURLConnection
                    con.requestMethod = 'GET'
                    con.setRequestProperty('X-Auth', '${shutdown.key}')
                    def resp = con.responseCode
                    ]]></source>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <artifactId>maven-surefire-plugin</artifactId>
              <configuration>
                <excludes>
                  <exclude>com.zerocracy.farm.S3ItemTest</exclude>
                </excludes>
              </configuration>
              <!--
               @todo #1231:30min Fixing language issues of #1231 did not
                resolved problems with S3ItemTest. Discover why S3ItemTest
                is not working in windows builds and fix it. Remove
                surefire and jacoco exclusions after fixing this problem
                and update jacoco coverage values.
                See #1041 https://github.com/zerocracy/farm/pull/1178#discussion_r196476659
                for more details about windows build failure.
              -->
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <configuration>
              <skip>false</skip>
            </configuration>
            <executions>
              <execution>
                <configuration>
                  <excludes combine.children="append">
                    <exclude>com/zerocracy/farm/S3Item.java</exclude>
                  </excludes>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
