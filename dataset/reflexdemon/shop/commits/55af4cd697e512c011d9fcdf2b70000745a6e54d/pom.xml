<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>shop</groupId>
  <artifactId>shop</artifactId>
  <packaging>war</packaging>
  <version>1.0</version>
  <name>shop</name>


  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <java.version>1.8</java.version>
    <!--
  Node and NPM Version checks!
  https://nodejs.org/dist/index.json
    -->
    <nodeVersion>v7.2.1</nodeVersion>
    <yarnVersion>v0.17.10</yarnVersion>
    <npmVersion>3.10.10</npmVersion>
    <frontEndPluginVersion>1.3</frontEndPluginVersion>

    <spring.test.framework>4.3.8.RELEASE</spring.test.framework>
  </properties>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.0.0.M3</version>
  </parent>
  <repositories>
    <repository>
      <id>eap</id>
      <url>http://maven.repository.redhat.com/techpreview/all</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>spring-releases</id>
      <url>https://repo.spring.io/libs-release</url>
    </repository>
    <repository>
      <id>spring-milestones</id>
      <name>Spring Milestones</name>
      <url>https://repo.spring.io/libs-milestone</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>eap</id>
      <url>http://maven.repository.redhat.com/techpreview/all</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>spring-releases</id>
      <url>https://repo.spring.io/libs-release</url>
    </pluginRepository>
  </pluginRepositories>

  <dependencies>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.0.1</version>
      <scope>provided</scope>
    </dependency>
    <!-- Spring Boot Stuff-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-mongodb</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-aop</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-activemq</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-broker</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <!-- http://mvnrepository.com/artifact/org.springframework/spring-test -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.test.framework}</version>
      <scope>test</scope>
    </dependency>
    <!-- http://mvnrepository.com/artifact/org.springframework.security/spring-security-test -->
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <version>4.1.0.RELEASE</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.jayway.jsonpath</groupId>
      <artifactId>json-path</artifactId>
      <version>2.2.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger-ui</artifactId>
      <version>2.2.2</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>2.2.2</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>de.flapdoodle.embed</groupId>
      <artifactId>de.flapdoodle.embed.mongo</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>
  <profiles>
    <profile>
      <!-- When built in OpenShift the 'openshift' profile will be used when
                invoking mvn. -->
      <!-- Use this profile for any OpenShift specific customization your app
                will need. -->
      <!-- By default that is to put the resulting archive into the 'webapps'
                folder. -->
      <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
      <id>openshift</id>
      <build>
        <finalName>shop</finalName>
        <plugins>
          <!--<plugin>-->
            <!--<groupId>com.github.eirslett</groupId>-->
            <!--<artifactId>frontend-maven-plugin</artifactId>-->
            <!--&lt;!&ndash; NB! Set <version> to the latest released version of frontend-maven-plugin, like in README.md &ndash;&gt;-->
            <!--<version>${frontEndPluginVersion}</version>-->
            <!--<executions>-->

              <!--<execution>-->
                <!--<id>install node and npm</id>-->
                <!--<goals>-->
                  <!--<goal>install-node-and-npm</goal>-->
                <!--</goals>-->
                <!--<phase>generate-resources</phase>-->
                <!--<configuration>-->
                  <!--&lt;!&ndash; See https://nodejs.org/en/download/ for latest node and npm (lts) versions &ndash;&gt;-->
                  <!--<nodeVersion>${nodeVersion}</nodeVersion>-->
                  <!--&lt;!&ndash;<yarnVersion>${yarnVersion}</yarnVersion>&ndash;&gt;-->
                  <!--&lt;!&ndash; optional: with node version greater than 4.0.0 will use npm provided by node distribution &ndash;&gt;-->
                  <!--<npmVersion>${npmVersion}</npmVersion>-->
                <!--</configuration>-->
              <!--</execution>-->

              <!--<execution>-->
                <!--<id>npm install</id>-->
                <!--<goals>-->
                  <!--<goal>npm</goal>-->
                <!--</goals>-->
                <!--<configuration>-->
                  <!--&lt;!&ndash; optional: The default argument is actually-->
                  <!--"install", so unless you need to run some other yarn command,-->
                  <!--you can remove this whole <configuration> section.-->
                  <!--&ndash;&gt;-->
                  <!--<arguments>install</arguments>-->
                <!--</configuration>-->
              <!--</execution>-->

              <!--<execution>-->
                <!--<id>yarn run build</id>-->
                <!--<goals>-->
                  <!--<goal>npm</goal>-->
                <!--</goals>-->
                <!--<configuration>-->
                  <!--<arguments>run build</arguments>-->
                <!--</configuration>-->
              <!--</execution>-->
            <!--</executions>-->
          <!--</plugin>-->
          <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <version>2.1.1</version>
            <configuration>
              <outputDirectory>webapps</outputDirectory>
              <warName>ROOT</warName>
              <webResources>
                <resource>
                  <!-- this is relative to the pom.xml directory -->
                  <directory>src/main/resources/static</directory>
                  <targetPath>/</targetPath>
                </resource>
              </webResources>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
