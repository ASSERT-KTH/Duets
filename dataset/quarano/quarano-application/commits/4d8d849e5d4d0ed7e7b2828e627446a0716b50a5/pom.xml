<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.6.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>de.quarano</groupId>
	<artifactId>quarano-backend</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Quarano - Backend</name>

	<properties>
		<java.version>11</java.version>
		<docker.image.prefix>quarano-backend</docker.image.prefix>
		<docker.build.skip>false</docker.build.skip>
		<docker.build.userid>1001</docker.build.userid>
		<jddd.version>0.0.1-SNAPSHOT</jddd.version>
		<moduliths.version>1.0.0.BUILD-SNAPSHOT</moduliths.version>
		<spring-hateoas.version>1.1.0.BUILD-SNAPSHOT</spring-hateoas.version>
	</properties>

	<profiles>

		<profile>
			<id>inmemory</id>
			<properties>
				<docker.build.skip>true</docker.build.skip>
				<spring.profile.active>integrationtest</spring.profile.active>
			</properties>
			<dependencies>
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>develop</id>
			<properties>
				<docker.build.skip>false</docker.build.skip>
				<docker.build.userid>1001</docker.build.userid>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<docker.build.skip>false</docker.build.skip>
				<docker.build.userid>1001</docker.build.userid>
			</properties>
		</profile>

	</profiles>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.hateoas</groupId>
			<artifactId>spring-hateoas</artifactId>
		</dependency>
		<!-- Spring modelmapper for DTO transformation -->
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>2.3.5</version>
		</dependency>
		<dependency>
			<groupId>io.vavr</groupId>
			<artifactId>vavr</artifactId>
			<version>0.10.2</version>
		</dependency>
		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>4.5</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- include web security for api protection with JWT -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
		</dependency>

		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.9.1</version>
		</dependency>

		<!-- Include lombok for development convenience -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
		<groupId>org.jddd</groupId>
			<artifactId>jddd-core</artifactId>
			<version>${jddd.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jddd</groupId>
			<artifactId>jddd-events</artifactId>
			<version>${jddd.version}</version>
		</dependency>
		<dependency>
			<groupId>org.moduliths</groupId>
			<artifactId>moduliths-api</artifactId>
			<version>${moduliths.version}</version>
		</dependency>
		<dependency>
			<groupId>org.moduliths</groupId>
			<artifactId>moduliths-test</artifactId>
			<version>${moduliths.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.moduliths</groupId>
			<artifactId>moduliths-docs</artifactId>
			<version>${moduliths.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.3.4</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<profiles>
						<profile>${spring.profile.active}</profile>
					</profiles>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>2.0.0-RC.1</version>
				<dependencies>
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj</artifactId>
						<version>2.2.0</version>
					</dependency>
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj-diagram</artifactId>
						<version>2.0.1</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>reference</id>
						<phase>package</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<requires>
								<require>asciidoctor-diagram</require>
							</requires>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<doctype>book</doctype>
					<backend>html5</backend>
					<sourceHighlighter>highlight.js</sourceHighlighter>
					<resources>
						<resource>
							<directory>src/main/asciidoc</directory>
						</resource>
					</resources>
					<attributes>
						<icons>font</icons>
						<linkcss>true</linkcss>
						<numbered>true</numbered>
						<sectanchors>true</sectanchors>
						<toc>left</toc>
						<version>${project.version}</version>
					</attributes>
				</configuration>
			</plugin>

		</plugins>


	</build>

	<repositories>
	<!-- For Moduliths & jDDD -->
		<repository>
			<id>spring-libs-snapshot</id>
			<url>https://repo.spring.io/libs-snapshot</url>
		</repository>
	</repositories>

</project>
