<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.5.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>de.quarano</groupId>
	<artifactId>quarano-backend</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Quarano - Backend</name>

	<properties>
		<java.version>11</java.version>
		<docker.image.prefix>quarano-backend</docker.image.prefix>
		<docker.build.skip>false</docker.build.skip>
		<docker.build.userid>1001</docker.build.userid>
		<jmolecules.version>1.0.0</jmolecules.version>
		<moduliths.version>1.0.0</moduliths.version>
		<spring-hateoas.version>1.2.0-RC1</spring-hateoas.version>
		<greenmail.version>1.6.0</greenmail.version>
		<refdocs.version>0.2.2.RELEASE</refdocs.version>
		<xmlprojector.version>1.4.17</xmlprojector.version>
		<opencsv.version>5.3</opencsv.version>
		<refdocs.dir>${project.build.directory}/refdocs</refdocs.dir>
	</properties>

	<profiles>

		<profile>
			<id>localDev</id>
			<activation>
				<file>
					<exists>src/main/resources/application-local.properties</exists>
				</file>
			</activation>
			<properties>
				<docker.build.skip>true</docker.build.skip>
				<spring.profile.active>develop</spring.profile.active>
			</properties>
			<dependencies>
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
				</dependency>
				<dependency>
					<groupId>com.icegreen</groupId>
					<artifactId>greenmail</artifactId>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>develop</id>
			<properties>
				<docker.build.skip>false</docker.build.skip>
				<docker.build.userid>1001</docker.build.userid>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<docker.build.skip>false</docker.build.skip>
				<docker.build.userid>1001</docker.build.userid>
			</properties>
		</profile>

	</profiles>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.icegreen</groupId>
				<artifactId>greenmail</artifactId>
				<version>${greenmail.version}</version>
				<exclusions>
					<exclusion>
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.activation</groupId>
						<artifactId>activation</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.mail</groupId>
						<artifactId>javax.mail</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<exclusions>
				<!-- No Hibernate XML parsing support needed -->
				<exclusion>
					<groupId>org.glassfish.jaxb</groupId>
					<artifactId>jaxb-runtime</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.javassist</groupId>
					<artifactId>javassist</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>querydsl-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>querydsl-apt</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<version>6.5.3</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.hateoas</groupId>
			<artifactId>spring-hateoas</artifactId>
		</dependency>
		<!-- Spring modelmapper for DTO transformation -->
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>2.3.5</version>
		</dependency>
		<dependency>
			<groupId>io.vavr</groupId>
			<artifactId>vavr</artifactId>
			<version>0.10.2</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- include web security for api protection with JWT -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>be.tomcools</groupId>
			<artifactId>rickroll-security-spring-boot-starter</artifactId>
			<version>1.2.0</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
		</dependency>

		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.9.1</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jmolecules</groupId>
            <artifactId>jmolecules-ddd</artifactId>
            <version>${jmolecules.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jmolecules</groupId>
            <artifactId>jmolecules-events</artifactId>
			<version>${jmolecules.version}</version>
		</dependency>
		<dependency>
			<groupId>org.moduliths</groupId>
			<artifactId>moduliths-api</artifactId>
			<version>${moduliths.version}</version>
		</dependency>
		<dependency>
			<groupId>org.moduliths</groupId>
			<artifactId>moduliths-test</artifactId>
			<version>${moduliths.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.moduliths</groupId>
			<artifactId>moduliths-docs</artifactId>
			<version>${moduliths.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>capital.scalable</groupId>
			<artifactId>spring-auto-restdocs-core</artifactId>
			<version>2.0.8</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.3.4</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Not included in the application unless inmemory profile is active (see above) -->
		<dependency>
			<groupId>com.icegreen</groupId>
			<artifactId>greenmail</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- For XML projection of RKI PLZTool data -->
		<dependency>
			<groupId>org.xmlbeam</groupId>
			<artifactId>xmlprojector</artifactId>
			<version>${xmlprojector.version}</version>
		</dependency>

		<!-- For CSV import/export -->
        <dependency>
            <groupId>com.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>${opencsv.version}</version>
        </dependency>

		<!-- Development-only dependencies -->

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-docs-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/docs/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>*Test.java</include>
						<include>*Tests.java</include>
						<include>*Documentation.java</include>
					</includes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<configuration>
					<offline>true</offline>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.mysema.maven</groupId>
				<artifactId>apt-maven-plugin</artifactId>
				<version>1.1.3</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>process</goal>
						</goals>
						<configuration>
							<outputDirectory>target/generated-sources/annotations</outputDirectory>
							<processors>
								<processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
								<processor>lombok.launch.AnnotationProcessorHider$AnnotationProcessor</processor>
							</processors>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>build-info</goal>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<profiles>
						<profile>${spring.profile.active}</profile>
					</profiles>
					<layers>
						<enabled>true</enabled>
					</layers>
					<excludes>
						<exclude>
							<groupId>org.springframework.boot</groupId>
							<artifactId>spring-boot-configuration-processor</artifactId>
						</exclude>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- Use Spring documentation resources -->

			<plugin>
				<groupId>com.googlecode.maven-download-plugin</groupId>
				<artifactId>download-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-doc-resources</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>wget</goal>
						</goals>
						<configuration>
							<url>https://repo.spring.io/release/io/spring/docresources/spring-doc-resources/${refdocs.version}/spring-doc-resources-${refdocs.version}.zip</url>
							<unpack>true</unpack>
							<outputDirectory>${refdocs.dir}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<extensions>true</extensions>
				<executions>
					<execution>
						<id>generate-javadoc-json</id>
						<phase>compile</phase>
						<goals>
							<goal>javadoc-no-fork</goal>
						</goals>
						<configuration>
							<doclet>capital.scalable.restdocs.jsondoclet.ExtractDocumentationAsJsonDoclet</doclet>
							<docletArtifact>
								<groupId>capital.scalable</groupId>
								<artifactId>spring-auto-restdocs-json-doclet</artifactId>
								<version>2.0.8</version>
							</docletArtifact>
							<destDir>generated-javadoc-json</destDir>
							<reportOutputDirectory>${project.build.directory}</reportOutputDirectory>
							<useStandardDocletOptions>false</useStandardDocletOptions>
							<show>package</show>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>2.0.0-RC.1</version>
				<dependencies>
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj</artifactId>
						<version>2.2.0</version>
					</dependency>
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj-diagram</artifactId>
						<version>2.0.1</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>reference</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<requires>
								<require>asciidoctor-diagram</require>
							</requires>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<doctype>book</doctype>
					<backend>html5</backend>
					<sourceHighlighter>highlight.js</sourceHighlighter>
					<resources>
						<!-- Copy our own resources first to make sure they trump the others -->
						<resource>
							<directory>src/main/asciidoc</directory>
						</resource>
						<resource>
							<directory>${refdocs.dir}</directory>
						</resource>
					</resources>
					<attributes>
						<docinfo>shared</docinfo>
						<docinfodir>${refdocs.dir}</docinfodir>
						<highlightjsdir>js/highlight</highlightjsdir>
						<highlightjs-theme>github</highlightjs-theme>
						<icons>font</icons>
						<linkcss>true</linkcss>
						<numbered>true</numbered>
						<sectanchors>true</sectanchors>
						<snippets>${project.build.directory}/generated-snippets</snippets>
						<stylesdir>css/</stylesdir>
						<stylesheet>quarano.css</stylesheet>
						<toc>left</toc>
						<version>${project.version}</version>
					</attributes>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.outputDirectory}/static/docs
							</outputDirectory>
							<resources>
								<resource>
									<directory>
										${project.build.directory}/generated-docs
									</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>


	</build>

	<repositories>
		<repository>
			<id>spring-snapshot</id>
			<url>https://repo.spring.io/snapshot</url>
		</repository>
		<repository>
			<id>spring-milestone</id>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-plugin-snapshot</id>
			<url>https://repo.spring.io/plugin-snapshot</url>
		</pluginRepository>
	</pluginRepositories>

</project>
