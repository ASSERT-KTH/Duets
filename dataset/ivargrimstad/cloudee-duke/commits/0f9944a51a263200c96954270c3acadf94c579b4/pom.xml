<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>eu.agilejava</groupId>
    <artifactId>cloudee-duke</artifactId>
    <name>CloudEE Duke</name>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <failOnMissingWebXml>false</failOnMissingWebXml>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <version.docker-maven-plugin>0.28.0</version.docker-maven-plugin>
        <version.microprofile>1.4</version.microprofile>
    </properties>

    <build>
        <finalName>cloudee-duke</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <packagingExcludes>pom.xml</packagingExcludes>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <descriptors>
                        <descriptor>src/assembly/oracle-${assembly.file.postfix}.xml</descriptor>
                    </descriptors>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.eclipse.microprofile</groupId>
            <artifactId>microprofile</artifactId>
            <version>${version.microprofile}</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>thorntail</id>

            <properties>
                <version.thorntail>2.2.0.Final</version.thorntail>
                <assembly.file.postfix>thorntail</assembly.file.postfix>
            </properties>

            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>io.thorntail</groupId>
                        <artifactId>bom</artifactId>
                        <version>${version.thorntail}</version>
                        <scope>import</scope>
                        <type>pom</type>
                    </dependency>
                </dependencies>
            </dependencyManagement>

            <dependencies>
                <dependency>
                    <groupId>io.thorntail</groupId>
                    <artifactId>microprofile</artifactId>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>io.thorntail</groupId>
                        <artifactId>thorntail-maven-plugin</artifactId>
                        <version>${version.thorntail}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>package</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <hollow>true</hollow>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${version.docker-maven-plugin}</version>
                        <configuration>
                            <images>
                                <image>
                                    <alias>${project.artifactId}-thorntail</alias>
                                    <name>ivargrimstad/${project.artifactId}:thorntail</name>
                                    <build>
                                        <maintainer>Ivar Grimstad (ivar.grimstad@gmail.com)</maintainer>
                                        <from>jboss/base-jdk:8</from>
                                        <assembly>
                                            <basedir>/</basedir>
                                            <inline>
                                                <files>
                                                    <file>
                                                        <source>
                                                            ${project.build.directory}/${project.build.finalName}-hollow-thorntail.jar
                                                        </source>
                                                        <outputDirectory>/opt</outputDirectory>
                                                    </file>
                                                    <file>
                                                        <source>
                                                            ${project.build.directory}/${project.build.finalName}.war
                                                        </source>
                                                        <outputDirectory>/opt</outputDirectory>
                                                    </file>
                                                </files>
                                            </inline>
                                        </assembly>
                                        <entryPoint>
                                            <arg>java</arg>
                                            <arg>-Djava.net.preferIPv4Stack=true</arg>
                                            <arg>-jar</arg>
                                            <arg>/opt/${project.build.finalName}-hollow-swarm.jar</arg>
                                            <arg>/opt/${project.build.finalName}.war</arg>
                                        </entryPoint>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>liberty</id>

            <properties>
                <assembly.file.postfix>liberty</assembly.file.postfix>
                <testServerHttpPort>9080</testServerHttpPort>
                <testServerHttpsPort>9443</testServerHttpsPort>
                <packaging.type>runnable</packaging.type>
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>3.0.2</version>
                        <executions>
                            <execution>
                                <id>copy-app</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${project.build.directory}/liberty/wlp/usr/servers/CloudeeDukeServer/dropins
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}</directory>
                                            <includes>
                                                <include>${project.build.finalName}.war</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>net.wasdev.wlp.maven.plugins</groupId>
                        <artifactId>liberty-maven-plugin</artifactId>
                        <version>2.6.3</version>
                        <configuration>
                            <assemblyArtifact>
                                <groupId>io.openliberty</groupId>
                                <artifactId>openliberty-runtime</artifactId>
                                <version>RELEASE</version>
                                <type>zip</type>
                            </assemblyArtifact>
                            <serverName>CloudeeDukeServer</serverName>
                            <stripVersion>true</stripVersion>
                            <looseApplication>true</looseApplication>
                            <configFile>${basedir}/src/main/liberty/config/server.xml</configFile>
                            <packageFile>${project.build.directory}/${project.build.finalName}.zip</packageFile>
                        </configuration>
                        <executions>
                            <execution>
                                <id>create-server</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>install-server</goal>
                                    <goal>create-server</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>install-apps</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>install-apps</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${version.docker-maven-plugin}</version>
                        <configuration>
                            <images>
                                <image>
                                    <alias>${project.artifactId}-liberty</alias>
                                    <name>ivargrimstad/${project.artifactId}:liberty</name>
                                    <build>
                                        <maintainer>Ivar Grimstad (ivar.grimstad@gmail.com)</maintainer>
                                        <from>ibmcom/ibmjava:8-jre-alpine</from>
                                        <assembly>
                                            <permissions>ignore</permissions>
                                            <basedir>/</basedir>
                                            <inline>
                                                <files>
                                                    <file>
                                                        <source>
                                                            ${project.build.directory}/${project.build.finalName}.jar
                                                        </source>
                                                        <outputDirectory>/opt</outputDirectory>
                                                    </file>
                                                </files>
                                            </inline>
                                        </assembly>
                                        <entryPoint>
                                            <arg>java</arg>
                                            <arg>-Djava.net.preferIPv4Stack=true</arg>
                                            <arg>-jar</arg>
                                            <arg>/opt/${project.build.finalName}.jar</arg>
                                        </entryPoint>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>payara</id>

            <properties>
                <version.payara.micro>5.184</version.payara.micro>
                <assembly.file.postfix>payara</assembly.file.postfix>
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <groupId>fish.payara.maven.plugins</groupId>
                        <artifactId>payara-micro-maven-plugin</artifactId>
                        <version>1.0.1</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>bundle</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <payaraVersion>${version.payara.micro}</payaraVersion>
                            <autoDeployEmptyContextRoot>true</autoDeployEmptyContextRoot>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${version.docker-maven-plugin}</version>
                        <configuration>
                            <images>
                                <image>
                                    <alias>${project.artifactId}-payara</alias>
                                    <name>ivargrimstad/${project.artifactId}:payara</name>
                                    <build>
                                        <maintainer>Ivar Grimstad (ivar.grimstad@gmail.com)</maintainer>
                                        <from>payara/micro:5.184</from>
                                        <assembly>ls -
                                            <basedir>/opt/payara/deployments</basedir>
                                            <descriptorRef>artifact</descriptorRef>
                                        </assembly>
                                        <entryPoint>
                                            <arg>java</arg>
                                            <arg>-jar</arg>
                                            <arg>/opt/payara/payara-micro.jar</arg>
                                            <arg>--deploymentDir</arg>
                                            <arg>/opt/payara/deployments</arg>
                                        </entryPoint>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>tomee</id>

            <properties>
                <version.microprofile>1.3</version.microprofile>
            </properties>

            <build>
                <finalName>ROOT</finalName>
                <plugins>
                    <plugin>
                        <groupId>org.apache.tomee.maven</groupId>
                        <artifactId>tomee-maven-plugin</artifactId>
                        <version>8.0.0-M1</version>
                        <configuration>
                            <tomeeClassifier>microprofile</tomeeClassifier>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${version.docker-maven-plugin}</version>
                        <configuration>
                            <images>
                                <image>
                                    <alias>${project.artifactId}-tomee</alias>
                                    <name>ivargrimstad/${project.artifactId}:tomee</name>
                                    <build>
                                        <maintainer>Ivar Grimstad (ivar.grimstad@gmail.com)</maintainer>
                                        <from>ibmcom/ibmjava:8-jre-alpine</from>
                                        <assembly>
                                            <permissions>ignore</permissions>
                                            <basedir>/</basedir>
                                            <inline>
                                                <files>
                                                    <file>
                                                        <source>
                                                            ${project.build.directory}/${project.build.finalName}-exec.jar
                                                        </source>
                                                        <outputDirectory>/opt</outputDirectory>
                                                    </file>
                                                </files>
                                            </inline>
                                        </assembly>
                                        <entryPoint>
                                            <arg>java</arg>
                                            <arg>-Djava.net.preferIPv4Stack=true</arg>
                                            <arg>-jar</arg>
                                            <arg>/opt/${project.build.finalName}-exec.jar</arg>
                                        </entryPoint>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>

        </profile>

    </profiles>

</project>
