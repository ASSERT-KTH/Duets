<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>eu.michael-simons</groupId>
    <artifactId>bikingFX</artifactId>
    <version>0.0.2-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>bikingFX</name>     
    <url>http://biking.michael-simons.eu</url>
    
    <inceptionYear>2014</inceptionYear>
    
    <developers>
	<developer>
	    <name>Michael J. Simons</name>
	    <email>michael@simons.ac</email>	    
	</developer>
    </developers>

    <organization>
	<name>michael-simons.eu</name>
	<url>http://michael-simons.eu</url>
    </organization>

    <licenses>
	<license>
	    <name>Apache License, Version 2.0</name>
	    <url>http://www.apache.org/licenses/LICENSE-2.0</url>
	</license>
    </licenses>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	
	<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
	<build-date>${maven.build.timestamp}</build-date>
		
	<java.version>1.8</java.version>
	
	<maven.compiler.source>${java.version}</maven.compiler.source>
	<maven.compiler.target>${java.version}</maven.compiler.target>
	
        <mainClass>ac.simons.bikingFX.BikingFX</mainClass>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>unpack-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <excludeScope>system</excludeScope>
                            <excludeGroupIds>junit,org.mockito,org.hamcrest</excludeGroupIds>
                            <outputDirectory>${project.build.directory}/classes</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.3.2</version>
                <executions>
                    <execution>
                        <id>unpack-dependencies</id>
                        
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${java.home}/../bin/javapackager</executable>
                            <arguments>
                                <argument>-createjar</argument>
                                <argument>-nocss2bin</argument>
                                <argument>-appclass</argument>
                                <argument>${mainClass}</argument>
                                <argument>-srcdir</argument>
                                <argument>${project.build.directory}/classes</argument>
                                <argument>-outdir</argument>
                                <argument>${project.build.directory}</argument>
                                <argument>-outfile</argument>
                                <argument>${project.build.finalName}.jar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-cli</id>
                        <goals>
                            <goal>exec</goal>                            
                        </goals>
                        <configuration>
                            <executable>${java.home}/bin/java</executable>			    
                            <commandlineArgs>-Djava.util.logging.config.file="${project.build.directory}/classes/logging.dev.properties" ${runfx.args}</commandlineArgs>			    
                        </configuration>
                    </execution>		   
                </executions>  		
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
		    <target>${java.version}</target>
		    <source>${java.version}</source>
		    <encoding>${project.build.sourceEncoding}</encoding>
                    <compilerArguments>
                        <bootclasspath>${sun.boot.class.path}${path.separator}${java.home}/lib/jfxrt.jar</bootclasspath>
                    </compilerArguments>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.16</version>
                <configuration>
                    <additionalClasspathElements>
                        <additionalClasspathElement>${java.home}/lib/jfxrt.jar</additionalClasspathElement>
                    </additionalClasspathElements>
                </configuration>
            </plugin>
        </plugins>	
    </build>
    <profiles>
	<profile>
	    <id>installer</id>
	    <activation>        
		<property>
		    <name>createInstaller</name>
		</property>
	    </activation>
	    <build>
		<plugins>
		    <plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>exec-maven-plugin</artifactId>
			<version>1.3.2</version>
			<executions>                  
			    <execution>
				<id>create-native</id>
				<phase>package</phase>
				<goals>
				    <goal>exec</goal>
				</goals>
				<configuration>        
				    <executable>${java.home}/../bin/javapackager</executable>      
				    <arguments>					
					<argument>-deploy</argument>
					<argument>-native</argument>				
					<argument>installer</argument>
					<argument>-Bruntime=${java.home}</argument>
					<argument>-appclass</argument>
					<argument>${mainClass}</argument>
					<argument>-srcfiles</argument>				
					<argument>${project.build.directory}/${project.build.finalName}.jar</argument>
					<argument>-outdir</argument>
					<argument>${project.build.directory}</argument>
					<argument>-outfile</argument>
					<argument>${project.artifactId}</argument>
					<argument>-v</argument>
				    </arguments>
				</configuration>
			    </execution>
			</executions>  		
		    </plugin>
		</plugins>
	    </build>
	</profile>
    </profiles>
    
    <dependencies>
	<!-- JSONP Api -->
	<dependency>
	    <groupId>javax.json</groupId>
	    <artifactId>javax.json-api</artifactId>
	    <version>1.0</version>
	</dependency>
	<!-- Actual JSONP implementation, not needed when running on a JEE 7 server -->
	<dependency>
	    <groupId>org.glassfish</groupId>
	    <artifactId>javax.json</artifactId>
	    <version>1.0.4</version>
	</dependency>	
	
	<!-- Testing -->
	<dependency>
	    <groupId>junit</groupId>
	    <artifactId>junit</artifactId>
	    <version>4.10</version>
	    <scope>test</scope>
	</dependency>
    </dependencies>
</project>
