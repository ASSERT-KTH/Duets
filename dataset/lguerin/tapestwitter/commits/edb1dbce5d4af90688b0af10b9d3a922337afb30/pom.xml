<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com</groupId>
	<artifactId>tapestwitter</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>TapesTwitter, a twitter like application designed with Tapestry</name>
	<description>Une application &quot;Twitter like&quot; realisee avec Tapestry 5.</description>
	<developers>
		<developer>
			<id>lguerin</id>
			<name>Laurent Guerin</name>
			<email>laurent@dreamcat.fr</email>
		</developer>
		<developer>
			<id>karesti</id>
			<name>Katia Aresti</name>
			<email>katiaaresti@gmail.com</email>
		</developer>
		<developer>
			<id>ldoin</id>
			<name>Loic Doin</name>
			<email>loic.doin@gmail.com</email>
		</developer>
	</developers>
	<dependencies>
		<dependency>
			<groupId>org.apache.tapestry</groupId>
			<artifactId>tapestry-core</artifactId>
			<version>${tapestry-release-version}</version>
		</dependency>
		<!--
			A dependency on either JUnit or TestNG is required, or the surefire
			plugin (which runs the tests) will fail, preventing Maven from
			packaging the WAR. Tapestry includes a large number of testing
			facilities designed for use with TestNG (http://testng.org/), so it's
			recommended.
		-->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>5.10</version>
			<classifier>jdk15</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>2.4</version>
			<scope>test</scope>
		</dependency>

		<!--
			Dependences pour unitils et dbunit 
		 -->

		<dependency>
			<groupId>org.unitils</groupId>
			<artifactId>unitils-dbunit</artifactId>
			<version>3.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.unitils</groupId>
			<artifactId>unitils-testng</artifactId>
			<version>3.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.unitils</groupId>
			<artifactId>unitils-orm</artifactId>
			<version>3.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.unitils</groupId>
			<artifactId>unitils-dbmaintainer</artifactId>
			<version>3.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.unitils</groupId>
			<artifactId>unitils-easymock</artifactId>
			<version>3.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.unitils</groupId>
			<artifactId>unitils-inject</artifactId>
			<version>3.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>2.2</version>
			<scope>test</scope>
		</dependency>

		<!--
			tapestry-test will conflict with RunJettyRun inside Eclipse.
			tapestry-test brings in Selenium, which is based on Jetty 5.1;
			RunJettyRun uses Jetty 6. <dependency>
			<groupId>org.apache.tapestry</groupId>
			<artifactId>tapestry-test</artifactId>
			<version>${tapestry-release-version}</version> <scope>test</scope>
			</dependency>
		-->

		<!--
			Provided by the servlet container, but sometimes referenced in the
			application code.
		-->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tapestry</groupId>
			<artifactId>tapestry-test</artifactId>
			<version>${tapestry-release-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>1.8.0.10</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tapestry</groupId>
			<artifactId>tapestry-spring</artifactId>
			<version>${tapestry-release-version}</version>
		</dependency>

		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate-entitymanager-version}</version>
		</dependency>

		<!-- Spring -->
		<!-- Spring Framework -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring-version}</version>
		</dependency>
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.3</version>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.8.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-core</artifactId>
			<version>1.7.2</version>
		</dependency>
		<dependency>
		    <groupId>org.kaptcha</groupId>
		    <artifactId>katpcha</artifactId>
		    <version>2.3.0</version>
		    <scope>system</scope>
		    <systemPath>${basedir}/lib/kaptcha-2.3.jar</systemPath>
		</dependency>
	</dependencies>
	<build>
		<finalName>tapestwitter</finalName>
		<!--
			Permet de prendre en compte les fichiers XML utilises par dbunit lors
			des tests unitaires.
		-->
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>

			<testResource>
				<directory>${basedir}/src/test/java/</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
					<optimize>true</optimize>
				</configuration>
			</plugin>

			<!-- Run the application using "mvn jetty:run" -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.9</version>
				<configuration>
					<!-- Log to the console. -->
					<requestLog implementation="org.mortbay.jetty.NCSARequestLog">
						<!--
							This doesn't do anything for Jetty, but is a workaround for a
							Maven bug that prevents the requestLog from being set.
						-->
						<append>true</append>
					</requestLog>
				</configuration>
			</plugin>

			<!-- Cobertura -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<formats>
						<format>html</format>
					</formats>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>cobertura</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<reporting>

		<!--
			Adds a report detailing the components, mixins and base classes
			defined by this module.
		-->
		<plugins>
			<plugin>
				<groupId>org.apache.tapestry</groupId>
				<artifactId>tapestry-component-report</artifactId>
				<version>${tapestry-release-version}</version>
				<configuration>
					<rootPackage>com.tapestwitter</rootPackage>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<repositories>

		<!--
			This repository is only needed if the Tapestry released artifacts
			haven't made it to the central Maven repository yet.
		-->
		<repository>
			<id>tapestry</id>
			<url>http://tapestry.formos.com/maven-repository/</url>
		</repository>

		<!--
			This repository is only needed when the tapestry-release-version is a
			snapshot release.
		-->
		<repository>
			<id>tapestry-snapshots</id>
			<url>http://tapestry.formos.com/maven-snapshot-repository/</url>
		</repository>

		<repository>
			<id>codehaus.snapshots</id>
			<url>http://snapshots.repository.codehaus.org</url>
		</repository>
		<repository>
			<id>OpenQA_Release</id>
			<name>OpenQA Release Repository</name>
			<url>http://archiva.openqa.org/repository/releases/</url>
		</repository>
	</repositories>

	<pluginRepositories>

		<!--
			As above, this can be commented out when access to the snapshot
			version of a Tapestry Maven plugin is not required.
		-->
		<pluginRepository>
			<id>tapestry-snapshots</id>
			<url>http://tapestry.formos.com/maven-snapshot-repository/</url>
		</pluginRepository>


	</pluginRepositories>

	<properties>
		<tapestry-release-version>5.1.0.5</tapestry-release-version>
		<hibernate-version>3.2.6.GA</hibernate-version>
		<hibernate-annotations-version>3.3.1.GA</hibernate-annotations-version>
		<hibernate-entitymanager-version>3.3.2.GA</hibernate-entitymanager-version>
		<spring-version>3.0.0.RELEASE</spring-version>
	</properties>
</project>
