<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ $HeadURL$
  ~ $Id$
  ~
  ~ Copyright (c) 2006-2012 by Public Library of Science
  ~ http://plos.org
  ~ http://ambraproject.org
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.ambraproject</groupId>
  <artifactId>admin</artifactId>
  <name>ambra-admin-tng</name>
  <packaging>war</packaging>
  <version>1.0.0-BUILD-SNAPSHOT</version>

  <description>Administrative web application for Ambra.</description>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0</url>
      <comments>Copyright (C) 2006-2012 by Public Library of Science</comments>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <java-version>1.6</java-version>
    <org.springframework-version>3.1.0.RELEASE</org.springframework-version>
    <org.aspectj-version>1.6.9</org.aspectj-version>
    <org.slf4j-version>1.5.10</org.slf4j-version>
    <ambra.version>2.5.0</ambra.version>
    <conf-helper.version>2.2.1</conf-helper.version>
    <filestore.version>1.0.1</filestore.version>
  </properties>

  <repositories>
    <repository>
      <id>ambra</id>
      <name>Maven 2 Release Repository for Ambra</name>
      <url>http://maven.ambraproject.org/maven2/release/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>ambra.snapshot</id>
      <name>Maven 2 Snapshot Repository for Ambra</name>
      <url>http://maven.ambraproject.org/maven2/snapshot/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>central</id>
      <name>Maven Repository Switchboard</name>
      <layout>default</layout>
      <url>http://repo1.maven.org/maven2</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <scm>
    <developerConnection>scm:svn:http://ambraproject.org/svn/ambra/ambra-admin/</developerConnection>
    <connection>scm:svn:http://ambraproject.org/svn/ambra/ambra-admin/</connection>
    <url>http://www.ambraproject.org/trac/browser/ambra/ambra-admin/</url>
  </scm>

  <distributionManagement>
    <repository>
      <id>ambra</id>
      <url>scp://maven.ambraproject.org/home/maven2/repository/release</url>
    </repository>
    <snapshotRepository>
      <id>ambra.snapshot</id>
      <url>scp://maven.ambraproject.org/home/maven2/repository/snapshot</url>
      <uniqueVersion>false</uniqueVersion>
    </snapshotRepository>
    <site>
      <id>ambra.javadoc</id>
      <!-- This is where the site-deploy phase will put the documentation -->
      <url>scp://maven.ambraproject.org/home/maven2/javadoc</url>
    </site>
  </distributionManagement>

  <dependencies>

    <!-- General-use libraries -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.3.2</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>12.0.1</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.2.2</version>
      <scope>compile</scope>
    </dependency>

    <!-- ========================= Begin Ambra inclusions ========================= -->

    <dependency>
      <groupId>org.ambraproject</groupId>
      <artifactId>ambra-base</artifactId>
      <version>${ambra.version}</version>
      <exclusions>
        <!--These are some easy wins for reducing the size of the admin war, we don't need these libraries in admin-->
        <exclusion>
          <groupId>org.tuckey</groupId>
          <artifactId>urlrewritefilter</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.solr</groupId>
          <artifactId>solr-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jetty-util</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.ambraproject</groupId>
          <artifactId>ambra-js</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.ambraproject</groupId>
      <artifactId>file-store</artifactId>
      <version>${filestore.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context-support</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- ========================= End Ambra inclusions ========================= -->

    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
      <version>2.2.2</version>
    </dependency>

    <dependency>
      <groupId>net.sf.saxon</groupId>
      <artifactId>saxon</artifactId>
      <version>9.3</version>
    </dependency>
    <dependency>
      <groupId>org.ambraproject</groupId>
      <artifactId>conf-helper</artifactId>
      <version>${conf-helper.version}</version>
    </dependency>

    <!--the war dependency is necessary to overlay classes, ftls, etc. when building the admin war-->
    <dependency>
      <groupId>org.ambraproject</groupId>
      <artifactId>ambra-webapp</artifactId>
      <version>${ambra.version}</version>
      <type>war</type>
      <scope>runtime</scope>
    </dependency>

    <!--This allows us to reuse test code from ambra-->
    <dependency>
      <groupId>org.ambraproject</groupId>
      <artifactId>ambra-base</artifactId>
      <version>${ambra.version}</version>
      <!--In a future version of maven, this classifier may need to change to test-jar-->
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>1.8.0.1</version>
    </dependency>


    <!-- Spring -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${org.springframework-version}</version>
      <exclusions>
        <!-- Exclude Commons Logging in favor of SLF4j -->
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${org.springframework-version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${org.springframework-version}</version>
    </dependency>

    <!-- AspectJ -->
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
      <version>${org.aspectj-version}</version>
    </dependency>

    <!-- Logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${org.slf4j-version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${org.slf4j-version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${org.slf4j-version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.15</version>
      <exclusions>
        <exclusion>
          <groupId>javax.mail</groupId>
          <artifactId>mail</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.jms</groupId>
          <artifactId>jms</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jdmk</groupId>
          <artifactId>jmxtools</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jmx</groupId>
          <artifactId>jmxri</artifactId>
        </exclusion>
      </exclusions>
      <scope>runtime</scope>
    </dependency>

    <!-- @Inject -->
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>1</version>
    </dependency>

    <!-- Servlet -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
      <version>2.1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.7</version>
      <scope>test</scope>
    </dependency>

  </dependencies>


  <build>
    <finalName>ambra-admin</finalName>
    <plugins>
      <!--warpath plugin allows us to use warpath dependencies to get transitive dependencies from the war-->
      <plugin>
        <groupId>org.appfuse</groupId>
        <artifactId>maven-warpath-plugin</artifactId>
        <version>2.0</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>add-classes</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1.1</version>
        <configuration>
          <overlays>
            <overlay>
              <groupId>org.ambraproject</groupId>
              <artifactId>ambra-webapp</artifactId>
              <!--Specify what to include from ambra to keep the war small-->
              <includes>
                <!--classes and hibernate mappings-->
                <include>WEB-INF/classes/**/*.class</include>
                <include>WEB-INF/hibernateMappings/*</include>

                <include>WEB-INF/profaneWords.xml</include>
                <include>WEB-INF/countryList.xml</include>
                <!--templates for the struts 'theme'-->
                <include>template/**</include>
              </includes>
              <excludes>
                <!--The warpath plugin will populate WEB-INF/lib-->
                <exclude>WEB-INF/lib/*</exclude>
              </excludes>
            </overlay>
          </overlays>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
          <compilerArgument>-Xlint:all</compilerArgument>
          <showWarnings>true</showWarnings>
          <showDeprecation>true</showDeprecation>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.8</version>
        <configuration>
          <argLine>-Xms1024m -Xmx2048m -XX:MaxPermSize=1024m</argLine>
          <parallel>false</parallel>
          <systemProperties>
            <property>
              <name>log4j.configuration</name>
              <value>file:${project.basedir}/target/test-classes/log4j.xml</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.0-beta-7</version>
        <configuration>
          <goals>deploy</goals>
          <!-- disable site deploy -->
          <useReleaseProfile>false</useReleaseProfile>
          <!-- no javadoc and source jars -->
          <tagBase>http://ambraproject.org/svn/ambra/ambra-admin/tags</tagBase>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <preparationGoals>clean install</preparationGoals>
          <arguments>-Ppackages,distribution,release</arguments>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <configuration>
          <mainClass>org.test.int1.Main</mainClass>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>tomcat-maven-plugin</artifactId>
        <configuration>
          <path>/</path>
          <contextFile>/etc/ambra/context.xml</contextFile>
          <additionalConfigFilesDir>/etc/ambra/</additionalConfigFilesDir>
          <systemProperties>
            <java.util.logging.manager>org.apache.juli.ClassLoaderLogManager</java.util.logging.manager>
            <log4j.configuration>file:///etc/ambra/log4j.xml</log4j.configuration>
            <org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH>true
            </org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH>
            <java.net.preferIPv4Stack>true</java.net.preferIPv4Stack>
            <ambra.platform.appContext/>
            <struts.devMode>true</struts.devMode>
          </systemProperties>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>juli</artifactId>
            <version>6.0.29</version>
          </dependency>
          <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-jdbc</artifactId>
            <version>7.0.21</version>
          </dependency>
          <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.12</version>
          </dependency>
        </dependencies>
      </plugin>

    </plugins>

  </build>
</project>
