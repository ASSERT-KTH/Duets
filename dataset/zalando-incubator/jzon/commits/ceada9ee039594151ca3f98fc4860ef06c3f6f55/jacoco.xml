<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="Jzon"><sessioninfo id="186c2c8e0712-c1711f61" start="1596146219729" dump="1596146221778"/><package name="org/skyscreamer/jsonassert/comparator"><class name="org/skyscreamer/jsonassert/comparator/ArraySizeComparator" sourcefilename="ArraySizeComparator.java"><method name="&lt;init&gt;" desc="(Lorg/skyscreamer/jsonassert/JSONCompareMode;)V" line="61"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareJSONArray" desc="(Ljava/lang/String;Lorg/json/JSONArray;Lorg/json/JSONArray;Lorg/skyscreamer/jsonassert/JSONCompareResult;)V" line="73"><counter type="INSTRUCTION" missed="197" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="201" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="39" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/skyscreamer/jsonassert/comparator/JSONComparator" sourcefilename="JSONComparator.java"/><class name="org/skyscreamer/jsonassert/comparator/JSONCompareUtil" sourcefilename="JSONCompareUtil.java"><method name="arrayOfJsonObjectToMap" desc="(Lorg/json/JSONArray;Ljava/lang/String;)Ljava/util/Map;" line="50"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findUniqueKey" desc="(Lorg/json/JSONArray;)Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="3" covered="22"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUsableAsUniqueKey" desc="(Ljava/lang/String;Lorg/json/JSONArray;)Z" line="92"><counter type="INSTRUCTION" missed="6" covered="46"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="3" covered="12"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jsonArrayToList" desc="(Lorg/json/JSONArray;)Ljava/util/List;" line="122"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="allSimpleValues" desc="(Lorg/json/JSONArray;)Z" line="138"><counter type="INSTRUCTION" missed="4" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSimpleValue" desc="(Ljava/lang/Object;)Z" line="153"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allJSONObjects" desc="(Lorg/json/JSONArray;)Z" line="164"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allJSONArrays" desc="(Lorg/json/JSONArray;)Z" line="180"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKeys" desc="(Lorg/json/JSONObject;)Ljava/util/Set;" line="195"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="qualify" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="204"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatUniqueKey" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;" line="208"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCardinalityMap" desc="(Ljava/util/Collection;)Ljava/util/Map;" line="219"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="95" covered="193"/><counter type="BRANCH" missed="20" covered="22"/><counter type="LINE" missed="23" covered="36"/><counter type="COMPLEXITY" missed="18" covered="16"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/skyscreamer/jsonassert/comparator/CustomComparator" sourcefilename="CustomComparator.java"><method name="&lt;init&gt;" desc="(Lorg/skyscreamer/jsonassert/JSONCompareMode;[Lorg/skyscreamer/jsonassert/Customization;)V" line="31"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareValues" desc="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Lorg/skyscreamer/jsonassert/JSONCompareResult;)V" line="37"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCustomization" desc="(Ljava/lang/String;)Lorg/skyscreamer/jsonassert/Customization;" line="53"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/skyscreamer/jsonassert/comparator/DefaultComparator" sourcefilename="DefaultComparator.java"><method name="&lt;init&gt;" desc="(Lorg/skyscreamer/jsonassert/JSONCompareMode;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareJSON" desc="(Ljava/lang/String;Lorg/json/JSONObject;Lorg/json/JSONObject;Lorg/skyscreamer/jsonassert/JSONCompareResult;)V" line="42"><counter type="INSTRUCTION" missed="6" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareValues" desc="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Lorg/skyscreamer/jsonassert/JSONCompareResult;)V" line="53"><counter type="INSTRUCTION" missed="25" covered="40"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareJSONArray" desc="(Ljava/lang/String;Lorg/json/JSONArray;Lorg/json/JSONArray;Lorg/skyscreamer/jsonassert/JSONCompareResult;)V" line="73"><counter type="INSTRUCTION" missed="40" covered="26"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="6" covered="7"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="areNumbers" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="93"><counter type="INSTRUCTION" missed="5" covered="5"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="areNotSameDoubles" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="97"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="88" covered="88"/><counter type="BRANCH" missed="16" covered="14"/><counter type="LINE" missed="12" covered="22"/><counter type="COMPLEXITY" missed="14" covered="7"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/skyscreamer/jsonassert/comparator/AbstractComparator" sourcefilename="AbstractComparator.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareJSON" desc="(Lorg/json/JSONObject;Lorg/json/JSONObject;)Lorg/skyscreamer/jsonassert/JSONCompareResult;" line="41"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareJSON" desc="(Lorg/json/JSONArray;Lorg/json/JSONArray;)Lorg/skyscreamer/jsonassert/JSONCompareResult;" line="55"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkJsonObjectKeysActualInExpected" desc="(Ljava/lang/String;Lorg/json/JSONObject;Lorg/json/JSONObject;Lorg/skyscreamer/jsonassert/JSONCompareResult;)V" line="61"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkJsonObjectKeysExpectedInActual" desc="(Ljava/lang/String;Lorg/json/JSONObject;Lorg/json/JSONObject;Lorg/skyscreamer/jsonassert/JSONCompareResult;)V" line="70"><counter type="INSTRUCTION" missed="5" covered="36"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareJSONArrayOfJsonObjects" desc="(Ljava/lang/String;Lorg/json/JSONArray;Lorg/json/JSONArray;Lorg/skyscreamer/jsonassert/JSONCompareResult;)V" line="83"><counter type="INSTRUCTION" missed="28" covered="67"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="5" covered="14"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareJSONArrayOfSimpleValues" desc="(Ljava/lang/String;Lorg/json/JSONArray;Lorg/json/JSONArray;Lorg/skyscreamer/jsonassert/JSONCompareResult;)V" line="108"><counter type="INSTRUCTION" missed="99" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareJSONArrayWithStrictOrder" desc="(Ljava/lang/String;Lorg/json/JSONArray;Lorg/json/JSONArray;Lorg/skyscreamer/jsonassert/JSONCompareResult;)V" line="126"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="recursivelyCompareJSONArray" desc="(Ljava/lang/String;Lorg/json/JSONArray;Lorg/json/JSONArray;Lorg/skyscreamer/jsonassert/JSONCompareResult;)V" line="139"><counter type="INSTRUCTION" missed="112" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="314" covered="118"/><counter type="BRANCH" missed="41" covered="11"/><counter type="LINE" missed="60" covered="27"/><counter type="COMPLEXITY" missed="28" covered="7"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ArraySizeComparator.java"><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="9" ci="0" mb="0" cb="0"/><line nr="74" mi="8" ci="0" mb="4" cb="0"/><line nr="75" mi="12" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="2" cb="0"/><line nr="81" mi="12" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="13" ci="0" mb="2" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="9" ci="0" mb="4" cb="0"/><line nr="87" mi="13" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="2" cb="0"/><line nr="94" mi="12" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="10" ci="0" mb="2" cb="0"/><line nr="101" mi="3" ci="0" mb="2" cb="0"/><line nr="102" mi="12" ci="0" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="7" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="2" cb="0"/><line nr="108" mi="3" ci="0" mb="2" cb="0"/><line nr="109" mi="10" ci="0" mb="0" cb="0"/><line nr="111" mi="7" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="14" ci="0" mb="2" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="201" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="39" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CustomComparator.java"><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="2" cb="0"/><line nr="40" mi="7" ci="0" mb="2" cb="0"/><line nr="41" mi="6" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="6" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="11" ci="0" mb="2" cb="0"/><line nr="54" mi="5" ci="0" mb="2" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractComparator.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="6" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="10" ci="0" mb="2" cb="0"/><line nr="63" mi="4" ci="0" mb="2" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="10" mb="0" cb="2"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="1" cb="1"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="8" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="2" cb="2"/><line nr="86" mi="6" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="10" mb="0" cb="2"/><line nr="92" mi="0" ci="4" mb="1" cb="1"/><line nr="93" mi="10" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="9" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="10" mb="0" cb="2"/><line nr="101" mi="0" ci="4" mb="1" cb="1"/><line nr="102" mi="10" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="10" ci="0" mb="2" cb="0"/><line nr="111" mi="4" ci="0" mb="2" cb="0"/><line nr="112" mi="13" ci="0" mb="0" cb="0"/><line nr="113" mi="9" ci="0" mb="2" cb="0"/><line nr="114" mi="21" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="10" ci="0" mb="2" cb="0"/><line nr="119" mi="4" ci="0" mb="2" cb="0"/><line nr="120" mi="12" ci="0" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="8" ci="0" mb="2" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="129" mi="17" ci="0" mb="0" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="8" ci="0" mb="2" cb="0"/><line nr="141" mi="4" ci="0" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="8" ci="0" mb="2" cb="0"/><line nr="144" mi="4" ci="0" mb="0" cb="0"/><line nr="145" mi="11" ci="0" mb="4" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="2" cb="0"/><line nr="149" mi="8" ci="0" mb="2" cb="0"/><line nr="150" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="154" mi="3" ci="0" mb="2" cb="0"/><line nr="155" mi="8" ci="0" mb="2" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="2" cb="0"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="2" cb="0"/><line nr="167" mi="16" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="171" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="314" covered="118"/><counter type="BRANCH" missed="41" covered="11"/><counter type="LINE" missed="60" covered="27"/><counter type="COMPLEXITY" missed="28" covered="7"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultComparator.java"><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="1" cb="1"/><line nr="46" mi="6" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="1" cb="1"/><line nr="54" mi="5" ci="0" mb="2" cb="0"/><line nr="55" mi="7" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="1" cb="1"/><line nr="58" mi="0" ci="3" mb="0" cb="2"/><line nr="59" mi="0" ci="9" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="2"/><line nr="61" mi="0" ci="9" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="1" cb="1"/><line nr="63" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="6" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="1" cb="1"/><line nr="74" mi="18" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="1" cb="1"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="1" cb="1"/><line nr="81" mi="7" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="1" cb="1"/><line nr="83" mi="7" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="1" cb="1"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="5" ci="5" mb="3" cb="1"/><line nr="97" mi="12" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="88" covered="88"/><counter type="BRANCH" missed="16" covered="14"/><counter type="LINE" missed="12" covered="22"/><counter type="COMPLEXITY" missed="14" covered="7"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JSONCompareUtil.java"><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="2"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="11" mb="1" cb="1"/><line nr="70" mi="0" ci="6" mb="1" cb="1"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="0" cb="2"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="1" cb="1"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="1" cb="1"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="2" cb="2"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="6" ci="0" mb="0" cb="0"/><line nr="123" mi="8" ci="0" mb="2" cb="0"/><line nr="124" mi="6" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="6" mb="1" cb="1"/><line nr="139" mi="0" ci="5" mb="1" cb="1"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="10" mb="1" cb="3"/><line nr="164" mi="0" ci="8" mb="0" cb="2"/><line nr="165" mi="0" ci="5" mb="1" cb="1"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="8" ci="0" mb="2" cb="0"/><line nr="181" mi="5" ci="0" mb="2" cb="0"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="185" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="2"/><line nr="198" mi="0" ci="7" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="17" mb="0" cb="2"/><line nr="208" mi="0" ci="17" mb="0" cb="0"/><line nr="219" mi="4" ci="0" mb="0" cb="0"/><line nr="220" mi="9" ci="0" mb="2" cb="0"/><line nr="221" mi="6" ci="0" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="2" cb="0"/><line nr="223" mi="6" ci="0" mb="0" cb="0"/><line nr="225" mi="11" ci="0" mb="0" cb="0"/><line nr="227" mi="1" ci="0" mb="0" cb="0"/><line nr="228" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="193"/><counter type="BRANCH" missed="20" covered="22"/><counter type="LINE" missed="23" covered="36"/><counter type="COMPLEXITY" missed="18" covered="16"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JSONComparator.java"/><counter type="INSTRUCTION" missed="760" covered="399"/><counter type="BRANCH" missed="109" covered="47"/><counter type="LINE" missed="150" covered="85"/><counter type="COMPLEXITY" missed="81" covered="30"/><counter type="METHOD" missed="14" covered="19"/><counter type="CLASS" missed="2" covered="3"/></package><package name="org/json"><class name="org/json/JSONException" sourcefilename="JSONException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="47"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/json/JSONStringer" sourcefilename="JSONStringer.java"><method name="&lt;init&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="64"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="array" desc="()Lorg/json/JSONStringer;" line="139"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endArray" desc="()Lorg/json/JSONStringer;" line="148"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="object" desc="()Lorg/json/JSONStringer;" line="158"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endObject" desc="()Lorg/json/JSONStringer;" line="167"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="open" desc="(Lorg/json/JSONStringer$Scope;Ljava/lang/String;)Lorg/json/JSONStringer;" line="175"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="(Lorg/json/JSONStringer$Scope;Lorg/json/JSONStringer$Scope;Ljava/lang/String;)Lorg/json/JSONStringer;" line="189"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="peek" desc="()Lorg/json/JSONStringer$Scope;" line="206"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceTop" desc="(Lorg/json/JSONStringer$Scope;)V" line="216"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value" desc="(Ljava/lang/Object;)Lorg/json/JSONStringer;" line="228"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value" desc="(Z)Lorg/json/JSONStringer;" line="264"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value" desc="(D)Lorg/json/JSONStringer;" line="280"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value" desc="(J)Lorg/json/JSONStringer;" line="294"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="string" desc="(Ljava/lang/String;)V" line="303"><counter type="INSTRUCTION" missed="87" covered="0"/><counter type="BRANCH" missed="11" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newline" desc="()V" line="354"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="key" desc="(Ljava/lang/String;)Lorg/json/JSONStringer;" line="371"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="beforeKey" desc="()V" line="384"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="beforeValue" desc="()V" line="400"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="430"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="487" covered="0"/><counter type="BRANCH" missed="67" covered="0"/><counter type="LINE" missed="119" covered="0"/><counter type="COMPLEXITY" missed="56" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/json/JSONTokener" sourcefilename="JSONTokener.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="78"><counter type="INSTRUCTION" missed="4" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextValue" desc="()Ljava/lang/Object;" line="94"><counter type="INSTRUCTION" missed="13" covered="16"/><counter type="BRANCH" missed="2" covered="3"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextCleanInternal" desc="()I" line="116"><counter type="INSTRUCTION" missed="58" covered="22"/><counter type="BRANCH" missed="10" covered="3"/><counter type="LINE" missed="17" covered="5"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skipToEndOfLine" desc="()V" line="175"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nextString" desc="(C)Ljava/lang/String;" line="200"><counter type="INSTRUCTION" missed="51" covered="43"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="10" covered="9"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readEscapeCharacter" desc="()C" line="243"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="9" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readLiteral" desc="()Ljava/lang/Object;" line="282"><counter type="INSTRUCTION" missed="96" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nextToInternal" desc="(Ljava/lang/String;)Ljava/lang/String;" line="336"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readObject" desc="()Lorg/json/JSONObject;" line="351"><counter type="INSTRUCTION" missed="50" covered="56"/><counter type="BRANCH" missed="12" covered="7"/><counter type="LINE" missed="8" covered="13"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readArray" desc="()Lorg/json/JSONArray;" line="406"><counter type="INSTRUCTION" missed="23" covered="28"/><counter type="BRANCH" missed="6" covered="3"/><counter type="LINE" missed="8" covered="9"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="syntaxError" desc="(Ljava/lang/String;)Lorg/json/JSONException;" line="450"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="458"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="more" desc="()Z" line="473"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()C" line="482"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="(C)C" line="490"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nextClean" desc="()C" line="504"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="(I)Ljava/lang/String;" line="520"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nextTo" desc="(Ljava/lang/String;)Ljava/lang/String;" line="545"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nextTo" desc="(C)Ljava/lang/String;" line="555"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skipPast" desc="(Ljava/lang/String;)V" line="564"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skipTo" desc="(C)C" line="574"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="back" desc="()V" line="588"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dehexchar" desc="(C)I" line="601"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="663" covered="177"/><counter type="BRANCH" missed="114" covered="23"/><counter type="LINE" missed="135" covered="45"/><counter type="COMPLEXITY" missed="88" covered="11"/><counter type="METHOD" missed="17" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/json/JSONObject" sourcefilename="JSONObject.java"><method name="&lt;init&gt;" desc="()V" line="112"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="126"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/json/JSONTokener;)V" line="150"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="172"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/json/JSONObject;[Ljava/lang/String;)V" line="181"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="length" desc="()I" line="194"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/String;Z)Lorg/json/JSONObject;" line="204"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/String;D)Lorg/json/JSONObject;" line="217"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/String;I)Lorg/json/JSONObject;" line="228"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/String;J)Lorg/json/JSONObject;" line="239"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;" line="255"><counter type="INSTRUCTION" missed="12" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putOpt" desc="(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;" line="272"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accumulate" desc="(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;" line="291"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkName" desc="(Ljava/lang/String;)Ljava/lang/String;" line="314"><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="327"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNull" desc="(Ljava/lang/String;)Z" line="335"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="has" desc="(Ljava/lang/String;)Z" line="344"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="353"><counter type="INSTRUCTION" missed="12" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="opt" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="365"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoolean" desc="(Ljava/lang/String;)Z" line="376"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optBoolean" desc="(Ljava/lang/String;)Z" line="389"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optBoolean" desc="(Ljava/lang/String;Z)Z" line="397"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDouble" desc="(Ljava/lang/String;)D" line="410"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optDouble" desc="(Ljava/lang/String;)D" line="423"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optDouble" desc="(Ljava/lang/String;D)D" line="431"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInt" desc="(Ljava/lang/String;)I" line="444"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optInt" desc="(Ljava/lang/String;)I" line="457"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optInt" desc="(Ljava/lang/String;I)I" line="465"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLong" desc="(Ljava/lang/String;)J" line="479"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optLong" desc="(Ljava/lang/String;)J" line="493"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optLong" desc="(Ljava/lang/String;J)J" line="503"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getString" desc="(Ljava/lang/String;)Ljava/lang/String;" line="515"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optString" desc="(Ljava/lang/String;)Ljava/lang/String;" line="528"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optString" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="536"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJSONArray" desc="(Ljava/lang/String;)Lorg/json/JSONArray;" line="549"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optJSONArray" desc="(Ljava/lang/String;)Lorg/json/JSONArray;" line="562"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJSONObject" desc="(Ljava/lang/String;)Lorg/json/JSONObject;" line="574"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optJSONObject" desc="(Ljava/lang/String;)Lorg/json/JSONObject;" line="587"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toJSONArray" desc="(Lorg/json/JSONArray;)Lorg/json/JSONArray;" line="597"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keys" desc="()Ljava/util/Iterator;" line="621"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="names" desc="()Lorg/json/JSONArray;" line="629"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="640"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(I)Ljava/lang/String;" line="664"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeTo" desc="(Lorg/json/JSONStringer;)V" line="670"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="numberToString" desc="(Ljava/lang/Number;)Ljava/lang/String;" line="684"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="quote" desc="(Ljava/lang/String;)Ljava/lang/String;" line="712"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wrap" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="739"><counter type="INSTRUCTION" missed="88" covered="0"/><counter type="BRANCH" missed="34" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="81"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="725" covered="76"/><counter type="BRANCH" missed="107" covered="5"/><counter type="LINE" missed="171" covered="23"/><counter type="COMPLEXITY" missed="95" covered="9"/><counter type="METHOD" missed="39" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/json/JSONArray" sourcefilename="JSONArray.java"><method name="&lt;init&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="70"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/json/JSONTokener;)V" line="87"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="108"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="114"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="length" desc="()I" line="129"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Z)Lorg/json/JSONArray;" line="138"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(D)Lorg/json/JSONArray;" line="150"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(I)Lorg/json/JSONArray;" line="160"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(J)Lorg/json/JSONArray;" line="170"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/Object;)Lorg/json/JSONArray;" line="185"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(IZ)Lorg/json/JSONArray;" line="197"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(ID)Lorg/json/JSONArray;" line="210"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(II)Lorg/json/JSONArray;" line="221"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(IJ)Lorg/json/JSONArray;" line="232"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(ILjava/lang/Object;)Lorg/json/JSONArray;" line="247"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNull" desc="(I)Z" line="263"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)Ljava/lang/Object;" line="276"><counter type="INSTRUCTION" missed="35" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="opt" desc="(I)Ljava/lang/Object;" line="291"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(I)Ljava/lang/Object;" line="302"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoolean" desc="(I)Z" line="316"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optBoolean" desc="(I)Z" line="329"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optBoolean" desc="(IZ)Z" line="337"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDouble" desc="(I)D" line="350"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optDouble" desc="(I)D" line="363"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optDouble" desc="(ID)D" line="371"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInt" desc="(I)I" line="384"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optInt" desc="(I)I" line="397"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optInt" desc="(II)I" line="405"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLong" desc="(I)J" line="418"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optLong" desc="(I)J" line="431"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optLong" desc="(IJ)J" line="439"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getString" desc="(I)Ljava/lang/String;" line="451"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optString" desc="(I)Ljava/lang/String;" line="464"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optString" desc="(ILjava/lang/String;)Ljava/lang/String;" line="472"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJSONArray" desc="(I)Lorg/json/JSONArray;" line="485"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optJSONArray" desc="(I)Lorg/json/JSONArray;" line="498"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJSONObject" desc="(I)Lorg/json/JSONObject;" line="510"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optJSONObject" desc="(I)Lorg/json/JSONObject;" line="523"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toJSONObject" desc="(Lorg/json/JSONArray;)Lorg/json/JSONObject;" line="535"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="join" desc="(Ljava/lang/String;)Ljava/lang/String;" line="555"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="573"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(I)Ljava/lang/String;" line="594"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeTo" desc="(Lorg/json/JSONStringer;)V" line="600"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="608"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="613"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="630" covered="28"/><counter type="BRANCH" missed="69" covered="1"/><counter type="LINE" missed="139" covered="9"/><counter type="COMPLEXITY" missed="77" covered="4"/><counter type="METHOD" missed="42" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/json/JSONObject$1" sourcefilename="JSONObject.java"><method name="&lt;init&gt;" desc="()V" line="98"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="100"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="103"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="3"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/json/JSONStringer$Scope" sourcefilename="JSONStringer.java"><method name="&lt;clinit&gt;" desc="()V" line="71"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/json/JSONString" sourcefilename="JSONString.java"/><class name="org/json/JSON" sourcefilename="JSON.java"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkDouble" desc="(D)D" line="24"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBoolean" desc="(Ljava/lang/Object;)Ljava/lang/Boolean;" line="31"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDouble" desc="(Ljava/lang/Object;)Ljava/lang/Double;" line="45"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toInteger" desc="(Ljava/lang/Object;)Ljava/lang/Integer;" line="59"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLong" desc="(Ljava/lang/Object;)Ljava/lang/Long;" line="73"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeMismatch" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Lorg/json/JSONException;" line="97"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeMismatch" desc="(Ljava/lang/Object;Ljava/lang/String;)Lorg/json/JSONException;" line="108"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="211" covered="0"/><counter type="BRANCH" missed="38" covered="0"/><counter type="LINE" missed="48" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="JSON.java"><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="6" ci="0" mb="4" cb="0"/><line nr="25" mi="12" ci="0" mb="0" cb="0"/><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="2" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="2" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="4" ci="0" mb="2" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="4" ci="0" mb="2" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="2" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="2" cb="0"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="2" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="2" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="2" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="2" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="2" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="2" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="2" cb="0"/><line nr="79" mi="6" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="2" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="2" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="2" cb="0"/><line nr="98" mi="14" ci="0" mb="0" cb="0"/><line nr="100" mi="26" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="2" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="111" mi="22" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="211" covered="0"/><counter type="BRANCH" missed="38" covered="0"/><counter type="LINE" missed="48" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="JSONArray.java"><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="2" cb="0"/><line nr="72" mi="6" ci="0" mb="2" cb="0"/><line nr="73" mi="7" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="2" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="6" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="2" cb="0"/><line nr="116" mi="13" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="6" ci="0" mb="0" cb="0"/><line nr="120" mi="7" ci="0" mb="2" cb="0"/><line nr="121" mi="7" ci="0" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="6" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="7" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="6" ci="0" mb="0" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="6" ci="0" mb="0" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="6" ci="0" mb="0" cb="0"/><line nr="210" mi="6" ci="0" mb="0" cb="0"/><line nr="221" mi="6" ci="0" mb="0" cb="0"/><line nr="232" mi="6" ci="0" mb="0" cb="0"/><line nr="247" mi="3" ci="0" mb="2" cb="0"/><line nr="249" mi="5" ci="0" mb="0" cb="0"/><line nr="251" mi="5" ci="0" mb="2" cb="0"/><line nr="252" mi="6" ci="0" mb="0" cb="0"/><line nr="254" mi="6" ci="0" mb="0" cb="0"/><line nr="255" mi="2" ci="0" mb="0" cb="0"/><line nr="263" mi="4" ci="0" mb="0" cb="0"/><line nr="264" mi="9" ci="0" mb="4" cb="0"/><line nr="276" mi="0" ci="5" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="1" cb="1"/><line nr="278" mi="14" ci="0" mb="0" cb="0"/><line nr="280" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="1" ci="0" mb="0" cb="0"/><line nr="282" mi="20" ci="0" mb="0" cb="0"/><line nr="291" mi="7" ci="0" mb="4" cb="0"/><line nr="292" mi="2" ci="0" mb="0" cb="0"/><line nr="294" mi="5" ci="0" mb="0" cb="0"/><line nr="302" mi="7" ci="0" mb="4" cb="0"/><line nr="303" mi="2" ci="0" mb="0" cb="0"/><line nr="305" mi="5" ci="0" mb="0" cb="0"/><line nr="316" mi="4" ci="0" mb="0" cb="0"/><line nr="317" mi="3" ci="0" mb="0" cb="0"/><line nr="318" mi="2" ci="0" mb="2" cb="0"/><line nr="319" mi="6" ci="0" mb="0" cb="0"/><line nr="321" mi="3" ci="0" mb="0" cb="0"/><line nr="329" mi="5" ci="0" mb="0" cb="0"/><line nr="337" mi="4" ci="0" mb="0" cb="0"/><line nr="338" mi="3" ci="0" mb="0" cb="0"/><line nr="339" mi="7" ci="0" mb="2" cb="0"/><line nr="350" mi="4" ci="0" mb="0" cb="0"/><line nr="351" mi="3" ci="0" mb="0" cb="0"/><line nr="352" mi="2" ci="0" mb="2" cb="0"/><line nr="353" mi="6" ci="0" mb="0" cb="0"/><line nr="355" mi="3" ci="0" mb="0" cb="0"/><line nr="363" mi="5" ci="0" mb="0" cb="0"/><line nr="371" mi="4" ci="0" mb="0" cb="0"/><line nr="372" mi="3" ci="0" mb="0" cb="0"/><line nr="373" mi="7" ci="0" mb="2" cb="0"/><line nr="384" mi="4" ci="0" mb="0" cb="0"/><line nr="385" mi="3" ci="0" mb="0" cb="0"/><line nr="386" mi="2" ci="0" mb="2" cb="0"/><line nr="387" mi="6" ci="0" mb="0" cb="0"/><line nr="389" mi="3" ci="0" mb="0" cb="0"/><line nr="397" mi="5" ci="0" mb="0" cb="0"/><line nr="405" mi="4" ci="0" mb="0" cb="0"/><line nr="406" mi="3" ci="0" mb="0" cb="0"/><line nr="407" mi="7" ci="0" mb="2" cb="0"/><line nr="418" mi="4" ci="0" mb="0" cb="0"/><line nr="419" mi="3" ci="0" mb="0" cb="0"/><line nr="420" mi="2" ci="0" mb="2" cb="0"/><line nr="421" mi="6" ci="0" mb="0" cb="0"/><line nr="423" mi="3" ci="0" mb="0" cb="0"/><line nr="431" mi="5" ci="0" mb="0" cb="0"/><line nr="439" mi="4" ci="0" mb="0" cb="0"/><line nr="440" mi="3" ci="0" mb="0" cb="0"/><line nr="441" mi="7" ci="0" mb="2" cb="0"/><line nr="451" mi="4" ci="0" mb="0" cb="0"/><line nr="452" mi="3" ci="0" mb="0" cb="0"/><line nr="453" mi="2" ci="0" mb="2" cb="0"/><line nr="454" mi="6" ci="0" mb="0" cb="0"/><line nr="456" mi="2" ci="0" mb="0" cb="0"/><line nr="464" mi="5" ci="0" mb="0" cb="0"/><line nr="472" mi="4" ci="0" mb="0" cb="0"/><line nr="473" mi="3" ci="0" mb="0" cb="0"/><line nr="474" mi="6" ci="0" mb="2" cb="0"/><line nr="485" mi="4" ci="0" mb="0" cb="0"/><line nr="486" mi="3" ci="0" mb="2" cb="0"/><line nr="487" mi="3" ci="0" mb="0" cb="0"/><line nr="489" mi="6" ci="0" mb="0" cb="0"/><line nr="498" mi="4" ci="0" mb="0" cb="0"/><line nr="499" mi="8" ci="0" mb="2" cb="0"/><line nr="510" mi="4" ci="0" mb="0" cb="0"/><line nr="511" mi="3" ci="0" mb="2" cb="0"/><line nr="512" mi="3" ci="0" mb="0" cb="0"/><line nr="514" mi="6" ci="0" mb="0" cb="0"/><line nr="523" mi="4" ci="0" mb="0" cb="0"/><line nr="524" mi="8" ci="0" mb="2" cb="0"/><line nr="535" mi="4" ci="0" mb="0" cb="0"/><line nr="536" mi="7" ci="0" mb="0" cb="0"/><line nr="537" mi="2" ci="0" mb="2" cb="0"/><line nr="538" mi="2" ci="0" mb="0" cb="0"/><line nr="540" mi="7" ci="0" mb="2" cb="0"/><line nr="541" mi="5" ci="0" mb="0" cb="0"/><line nr="542" mi="7" ci="0" mb="0" cb="0"/><line nr="544" mi="2" ci="0" mb="0" cb="0"/><line nr="555" mi="4" ci="0" mb="0" cb="0"/><line nr="556" mi="5" ci="0" mb="0" cb="0"/><line nr="557" mi="11" ci="0" mb="2" cb="0"/><line nr="558" mi="2" ci="0" mb="2" cb="0"/><line nr="559" mi="5" ci="0" mb="0" cb="0"/><line nr="561" mi="7" ci="0" mb="0" cb="0"/><line nr="563" mi="6" ci="0" mb="0" cb="0"/><line nr="564" mi="4" ci="0" mb="0" cb="0"/><line nr="573" mi="4" ci="0" mb="0" cb="0"/><line nr="574" mi="3" ci="0" mb="0" cb="0"/><line nr="575" mi="3" ci="0" mb="0" cb="0"/><line nr="576" mi="1" ci="0" mb="0" cb="0"/><line nr="577" mi="2" ci="0" mb="0" cb="0"/><line nr="594" mi="5" ci="0" mb="0" cb="0"/><line nr="595" mi="3" ci="0" mb="0" cb="0"/><line nr="596" mi="3" ci="0" mb="0" cb="0"/><line nr="600" mi="3" ci="0" mb="0" cb="0"/><line nr="601" mi="10" ci="0" mb="2" cb="0"/><line nr="602" mi="4" ci="0" mb="0" cb="0"/><line nr="603" mi="1" ci="0" mb="0" cb="0"/><line nr="604" mi="3" ci="0" mb="0" cb="0"/><line nr="605" mi="1" ci="0" mb="0" cb="0"/><line nr="608" mi="14" ci="0" mb="4" cb="0"/><line nr="613" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="630" covered="28"/><counter type="BRANCH" missed="69" covered="1"/><counter type="LINE" missed="139" covered="9"/><counter type="COMPLEXITY" missed="77" covered="4"/><counter type="METHOD" missed="42" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JSONTokener.java"><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="2" cb="2"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="2" cb="3"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="6" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="1" cb="1"/><line nr="117" mi="0" ci="11" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="2" cb="2"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="6" ci="0" mb="2" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="6" ci="0" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="3" cb="0"/><line nr="134" mi="6" ci="0" mb="0" cb="0"/><line nr="135" mi="7" ci="0" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="2" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="139" mi="5" ci="0" mb="0" cb="0"/><line nr="140" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="6" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="13" ci="0" mb="2" cb="0"/><line nr="176" mi="6" ci="0" mb="0" cb="0"/><line nr="177" mi="6" ci="0" mb="4" cb="0"/><line nr="178" mi="6" ci="0" mb="0" cb="0"/><line nr="179" mi="1" ci="0" mb="0" cb="0"/><line nr="182" mi="1" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="6" mb="1" cb="1"/><line nr="206" mi="0" ci="11" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="2"/><line nr="208" mi="0" ci="2" mb="1" cb="1"/><line nr="210" mi="0" ci="12" mb="0" cb="0"/><line nr="212" mi="10" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="1" cb="1"/><line nr="218" mi="6" ci="0" mb="2" cb="0"/><line nr="219" mi="4" ci="0" mb="0" cb="0"/><line nr="221" mi="2" ci="0" mb="2" cb="0"/><line nr="222" mi="4" ci="0" mb="0" cb="0"/><line nr="224" mi="10" ci="0" mb="0" cb="0"/><line nr="225" mi="5" ci="0" mb="0" cb="0"/><line nr="226" mi="3" ci="0" mb="0" cb="0"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><line nr="230" mi="4" ci="0" mb="0" cb="0"/><line nr="243" mi="11" ci="0" mb="0" cb="0"/><line nr="244" mi="2" ci="0" mb="7" cb="0"/><line nr="246" mi="8" ci="0" mb="2" cb="0"/><line nr="247" mi="4" ci="0" mb="0" cb="0"/><line nr="249" mi="10" ci="0" mb="0" cb="0"/><line nr="250" mi="6" ci="0" mb="0" cb="0"/><line nr="251" mi="5" ci="0" mb="0" cb="0"/><line nr="254" mi="2" ci="0" mb="0" cb="0"/><line nr="257" mi="2" ci="0" mb="0" cb="0"/><line nr="260" mi="2" ci="0" mb="0" cb="0"/><line nr="263" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><line nr="272" mi="2" ci="0" mb="0" cb="0"/><line nr="282" mi="4" ci="0" mb="0" cb="0"/><line nr="284" mi="3" ci="0" mb="2" cb="0"/><line nr="285" mi="4" ci="0" mb="0" cb="0"/><line nr="286" mi="4" ci="0" mb="2" cb="0"/><line nr="287" mi="2" ci="0" mb="0" cb="0"/><line nr="288" mi="4" ci="0" mb="2" cb="0"/><line nr="289" mi="2" ci="0" mb="0" cb="0"/><line nr="290" mi="4" ci="0" mb="2" cb="0"/><line nr="291" mi="2" ci="0" mb="0" cb="0"/><line nr="295" mi="5" ci="0" mb="2" cb="0"/><line nr="296" mi="2" ci="0" mb="0" cb="0"/><line nr="297" mi="2" ci="0" mb="0" cb="0"/><line nr="298" mi="8" ci="0" mb="4" cb="0"/><line nr="299" mi="4" ci="0" mb="0" cb="0"/><line nr="300" mi="3" ci="0" mb="0" cb="0"/><line nr="301" mi="8" ci="0" mb="4" cb="0"/><line nr="302" mi="4" ci="0" mb="0" cb="0"/><line nr="303" mi="2" ci="0" mb="0" cb="0"/><line nr="306" mi="4" ci="0" mb="0" cb="0"/><line nr="307" mi="8" ci="0" mb="4" cb="0"/><line nr="308" mi="4" ci="0" mb="0" cb="0"/><line nr="310" mi="3" ci="0" mb="0" cb="0"/><line nr="312" mi="1" ci="0" mb="0" cb="0"/><line nr="323" mi="3" ci="0" mb="0" cb="0"/><line nr="324" mi="1" ci="0" mb="0" cb="0"/><line nr="328" mi="5" ci="0" mb="0" cb="0"/><line nr="336" mi="3" ci="0" mb="0" cb="0"/><line nr="337" mi="13" ci="0" mb="2" cb="0"/><line nr="338" mi="6" ci="0" mb="0" cb="0"/><line nr="339" mi="11" ci="0" mb="6" cb="0"/><line nr="340" mi="7" ci="0" mb="0" cb="0"/><line nr="343" mi="5" ci="0" mb="0" cb="0"/><line nr="351" mi="0" ci="4" mb="0" cb="0"/><line nr="354" mi="0" ci="3" mb="0" cb="0"/><line nr="355" mi="0" ci="3" mb="1" cb="1"/><line nr="356" mi="2" ci="0" mb="0" cb="0"/><line nr="357" mi="0" ci="3" mb="1" cb="1"/><line nr="358" mi="0" ci="6" mb="0" cb="0"/><line nr="362" mi="0" ci="3" mb="0" cb="0"/><line nr="363" mi="0" ci="3" mb="1" cb="1"/><line nr="364" mi="2" ci="0" mb="2" cb="0"/><line nr="365" mi="4" ci="0" mb="0" cb="0"/><line nr="367" mi="17" ci="0" mb="0" cb="0"/><line nr="377" mi="0" ci="3" mb="0" cb="0"/><line nr="378" mi="3" ci="3" mb="3" cb="1"/><line nr="379" mi="11" ci="0" mb="0" cb="0"/><line nr="381" mi="0" ci="13" mb="2" cb="2"/><line nr="382" mi="6" ci="0" mb="0" cb="0"/><line nr="385" mi="0" ci="7" mb="0" cb="0"/><line nr="387" mi="0" ci="3" mb="2" cb="1"/><line nr="389" mi="0" ci="2" mb="0" cb="0"/><line nr="392" mi="1" ci="0" mb="0" cb="0"/><line nr="394" mi="4" ci="0" mb="0" cb="0"/><line nr="406" mi="0" ci="4" mb="0" cb="0"/><line nr="409" mi="0" ci="2" mb="0" cb="0"/><line nr="412" mi="0" ci="3" mb="3" cb="1"/><line nr="414" mi="4" ci="0" mb="0" cb="0"/><line nr="416" mi="2" ci="0" mb="2" cb="0"/><line nr="417" mi="4" ci="0" mb="0" cb="0"/><line nr="419" mi="2" ci="0" mb="0" cb="0"/><line nr="423" mi="4" ci="0" mb="0" cb="0"/><line nr="424" mi="2" ci="0" mb="0" cb="0"/><line nr="425" mi="1" ci="0" mb="0" cb="0"/><line nr="427" mi="0" ci="6" mb="0" cb="0"/><line nr="430" mi="0" ci="5" mb="0" cb="0"/><line nr="432" mi="0" ci="3" mb="1" cb="2"/><line nr="434" mi="0" ci="2" mb="0" cb="0"/><line nr="437" mi="0" ci="2" mb="0" cb="0"/><line nr="438" mi="0" ci="1" mb="0" cb="0"/><line nr="440" mi="4" ci="0" mb="0" cb="0"/><line nr="450" mi="12" ci="0" mb="0" cb="0"/><line nr="458" mi="15" ci="0" mb="0" cb="0"/><line nr="473" mi="10" ci="0" mb="2" cb="0"/><line nr="482" mi="19" ci="0" mb="2" cb="0"/><line nr="490" mi="3" ci="0" mb="0" cb="0"/><line nr="491" mi="3" ci="0" mb="2" cb="0"/><line nr="492" mi="15" ci="0" mb="0" cb="0"/><line nr="494" mi="2" ci="0" mb="0" cb="0"/><line nr="504" mi="3" ci="0" mb="0" cb="0"/><line nr="505" mi="8" ci="0" mb="2" cb="0"/><line nr="520" mi="8" ci="0" mb="2" cb="0"/><line nr="521" mi="11" ci="0" mb="0" cb="0"/><line nr="523" mi="10" ci="0" mb="0" cb="0"/><line nr="524" mi="6" ci="0" mb="0" cb="0"/><line nr="525" mi="2" ci="0" mb="0" cb="0"/><line nr="545" mi="2" ci="0" mb="2" cb="0"/><line nr="546" mi="5" ci="0" mb="0" cb="0"/><line nr="548" mi="5" ci="0" mb="0" cb="0"/><line nr="555" mi="6" ci="0" mb="0" cb="0"/><line nr="564" mi="7" ci="0" mb="0" cb="0"/><line nr="565" mi="13" ci="0" mb="2" cb="0"/><line nr="566" mi="1" ci="0" mb="0" cb="0"/><line nr="574" mi="7" ci="0" mb="0" cb="0"/><line nr="575" mi="3" ci="0" mb="2" cb="0"/><line nr="576" mi="3" ci="0" mb="0" cb="0"/><line nr="577" mi="2" ci="0" mb="0" cb="0"/><line nr="579" mi="2" ci="0" mb="0" cb="0"/><line nr="588" mi="9" ci="0" mb="2" cb="0"/><line nr="589" mi="3" ci="0" mb="0" cb="0"/><line nr="591" mi="1" ci="0" mb="0" cb="0"/><line nr="601" mi="6" ci="0" mb="4" cb="0"/><line nr="602" mi="4" ci="0" mb="0" cb="0"/><line nr="603" mi="6" ci="0" mb="4" cb="0"/><line nr="604" mi="6" ci="0" mb="0" cb="0"/><line nr="605" mi="6" ci="0" mb="4" cb="0"/><line nr="606" mi="6" ci="0" mb="0" cb="0"/><line nr="608" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="663" covered="177"/><counter type="BRANCH" missed="114" covered="23"/><counter type="LINE" missed="135" covered="45"/><counter type="COMPLEXITY" missed="88" covered="11"/><counter type="METHOD" missed="17" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JSONStringer.java"><line nr="64" mi="10" ci="0" mb="0" cb="0"/><line nr="71" mi="28" ci="0" mb="0" cb="0"/><line nr="77" mi="6" ci="0" mb="0" cb="0"/><line nr="83" mi="6" ci="0" mb="0" cb="0"/><line nr="89" mi="6" ci="0" mb="0" cb="0"/><line nr="95" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><line nr="107" mi="6" ci="0" mb="0" cb="0"/><line nr="114" mi="10" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="124" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="6" ci="0" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="6" ci="0" mb="0" cb="0"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="167" mi="6" ci="0" mb="0" cb="0"/><line nr="175" mi="8" ci="0" mb="4" cb="0"/><line nr="176" mi="5" ci="0" mb="0" cb="0"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="5" ci="0" mb="0" cb="0"/><line nr="180" mi="5" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="3" ci="0" mb="0" cb="0"/><line nr="190" mi="6" ci="0" mb="4" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="194" mi="9" ci="0" mb="0" cb="0"/><line nr="195" mi="3" ci="0" mb="2" cb="0"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="198" mi="5" ci="0" mb="0" cb="0"/><line nr="199" mi="2" ci="0" mb="0" cb="0"/><line nr="206" mi="4" ci="0" mb="2" cb="0"/><line nr="207" mi="5" ci="0" mb="0" cb="0"/><line nr="209" mi="10" ci="0" mb="0" cb="0"/><line nr="216" mi="10" ci="0" mb="0" cb="0"/><line nr="217" mi="1" ci="0" mb="0" cb="0"/><line nr="228" mi="4" ci="0" mb="2" cb="0"/><line nr="229" mi="5" ci="0" mb="0" cb="0"/><line nr="232" mi="3" ci="0" mb="2" cb="0"/><line nr="233" mi="4" ci="0" mb="0" cb="0"/><line nr="234" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="3" ci="0" mb="2" cb="0"/><line nr="237" mi="4" ci="0" mb="0" cb="0"/><line nr="238" mi="2" ci="0" mb="0" cb="0"/><line nr="241" mi="2" ci="0" mb="0" cb="0"/><line nr="243" mi="8" ci="0" mb="6" cb="0"/><line nr="246" mi="6" ci="0" mb="0" cb="0"/><line nr="248" mi="3" ci="0" mb="2" cb="0"/><line nr="249" mi="8" ci="0" mb="0" cb="0"/><line nr="252" mi="4" ci="0" mb="0" cb="0"/><line nr="255" mi="2" ci="0" mb="0" cb="0"/><line nr="264" mi="4" ci="0" mb="2" cb="0"/><line nr="265" mi="5" ci="0" mb="0" cb="0"/><line nr="267" mi="2" ci="0" mb="0" cb="0"/><line nr="268" mi="5" ci="0" mb="0" cb="0"/><line nr="269" mi="2" ci="0" mb="0" cb="0"/><line nr="280" mi="4" ci="0" mb="2" cb="0"/><line nr="281" mi="5" ci="0" mb="0" cb="0"/><line nr="283" mi="2" ci="0" mb="0" cb="0"/><line nr="284" mi="7" ci="0" mb="0" cb="0"/><line nr="285" mi="2" ci="0" mb="0" cb="0"/><line nr="294" mi="4" ci="0" mb="2" cb="0"/><line nr="295" mi="5" ci="0" mb="0" cb="0"/><line nr="297" mi="2" ci="0" mb="0" cb="0"/><line nr="298" mi="5" ci="0" mb="0" cb="0"/><line nr="299" mi="2" ci="0" mb="0" cb="0"/><line nr="303" mi="5" ci="0" mb="0" cb="0"/><line nr="304" mi="10" ci="0" mb="2" cb="0"/><line nr="305" mi="4" ci="0" mb="0" cb="0"/><line nr="313" mi="2" ci="0" mb="7" cb="0"/><line nr="317" mi="7" ci="0" mb="0" cb="0"/><line nr="318" mi="1" ci="0" mb="0" cb="0"/><line nr="321" mi="5" ci="0" mb="0" cb="0"/><line nr="322" mi="1" ci="0" mb="0" cb="0"/><line nr="325" mi="5" ci="0" mb="0" cb="0"/><line nr="326" mi="1" ci="0" mb="0" cb="0"/><line nr="329" mi="5" ci="0" mb="0" cb="0"/><line nr="330" mi="1" ci="0" mb="0" cb="0"/><line nr="333" mi="5" ci="0" mb="0" cb="0"/><line nr="334" mi="1" ci="0" mb="0" cb="0"/><line nr="337" mi="5" ci="0" mb="0" cb="0"/><line nr="338" mi="1" ci="0" mb="0" cb="0"/><line nr="341" mi="3" ci="0" mb="2" cb="0"/><line nr="342" mi="14" ci="0" mb="0" cb="0"/><line nr="344" mi="5" ci="0" mb="0" cb="0"/><line nr="350" mi="5" ci="0" mb="0" cb="0"/><line nr="351" mi="1" ci="0" mb="0" cb="0"/><line nr="354" mi="3" ci="0" mb="2" cb="0"/><line nr="355" mi="1" ci="0" mb="0" cb="0"/><line nr="358" mi="5" ci="0" mb="0" cb="0"/><line nr="359" mi="9" ci="0" mb="2" cb="0"/><line nr="360" mi="6" ci="0" mb="0" cb="0"/><line nr="362" mi="1" ci="0" mb="0" cb="0"/><line nr="371" mi="2" ci="0" mb="2" cb="0"/><line nr="372" mi="5" ci="0" mb="0" cb="0"/><line nr="374" mi="2" ci="0" mb="0" cb="0"/><line nr="375" mi="3" ci="0" mb="0" cb="0"/><line nr="376" mi="2" ci="0" mb="0" cb="0"/><line nr="384" mi="3" ci="0" mb="0" cb="0"/><line nr="385" mi="3" ci="0" mb="2" cb="0"/><line nr="386" mi="6" ci="0" mb="0" cb="0"/><line nr="387" mi="3" ci="0" mb="2" cb="0"/><line nr="388" mi="5" ci="0" mb="0" cb="0"/><line nr="390" mi="2" ci="0" mb="0" cb="0"/><line nr="391" mi="3" ci="0" mb="0" cb="0"/><line nr="392" mi="1" ci="0" mb="0" cb="0"/><line nr="400" mi="4" ci="0" mb="2" cb="0"/><line nr="401" mi="1" ci="0" mb="0" cb="0"/><line nr="404" mi="3" ci="0" mb="0" cb="0"/><line nr="405" mi="3" ci="0" mb="2" cb="0"/><line nr="406" mi="3" ci="0" mb="0" cb="0"/><line nr="407" mi="3" ci="0" mb="0" cb="0"/><line nr="408" mi="3" ci="0" mb="2" cb="0"/><line nr="409" mi="5" ci="0" mb="0" cb="0"/><line nr="410" mi="3" ci="0" mb="0" cb="0"/><line nr="411" mi="3" ci="0" mb="2" cb="0"/><line nr="412" mi="10" ci="0" mb="2" cb="0"/><line nr="413" mi="4" ci="0" mb="0" cb="0"/><line nr="414" mi="3" ci="0" mb="2" cb="0"/><line nr="415" mi="5" ci="0" mb="0" cb="0"/><line nr="417" mi="1" ci="0" mb="0" cb="0"/><line nr="430" mi="10" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="551" covered="0"/><counter type="BRANCH" missed="67" covered="0"/><counter type="LINE" missed="126" covered="0"/><counter type="COMPLEXITY" missed="57" covered="0"/><counter type="METHOD" missed="21" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="JSONException.java"><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="JSONObject.java"><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="8" mb="0" cb="0"/><line nr="100" mi="9" ci="0" mb="4" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="11" ci="0" mb="2" cb="0"/><line nr="133" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="2" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="8" ci="0" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="1" cb="1"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="159" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="16" ci="0" mb="2" cb="0"/><line nr="183" mi="4" ci="0" mb="0" cb="0"/><line nr="184" mi="2" ci="0" mb="2" cb="0"/><line nr="185" mi="6" ci="0" mb="0" cb="0"/><line nr="188" mi="1" ci="0" mb="0" cb="0"/><line nr="194" mi="4" ci="0" mb="0" cb="0"/><line nr="204" mi="9" ci="0" mb="0" cb="0"/><line nr="205" mi="2" ci="0" mb="0" cb="0"/><line nr="217" mi="10" ci="0" mb="0" cb="0"/><line nr="218" mi="2" ci="0" mb="0" cb="0"/><line nr="228" mi="9" ci="0" mb="0" cb="0"/><line nr="229" mi="2" ci="0" mb="0" cb="0"/><line nr="239" mi="9" ci="0" mb="0" cb="0"/><line nr="240" mi="2" ci="0" mb="0" cb="0"/><line nr="255" mi="0" ci="2" mb="1" cb="1"/><line nr="256" mi="5" ci="0" mb="0" cb="0"/><line nr="257" mi="2" ci="0" mb="0" cb="0"/><line nr="259" mi="0" ci="3" mb="1" cb="1"/><line nr="261" mi="5" ci="0" mb="0" cb="0"/><line nr="263" mi="0" ci="8" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="4" ci="0" mb="4" cb="0"/><line nr="273" mi="2" ci="0" mb="0" cb="0"/><line nr="275" mi="5" ci="0" mb="0" cb="0"/><line nr="291" mi="7" ci="0" mb="0" cb="0"/><line nr="292" mi="2" ci="0" mb="2" cb="0"/><line nr="293" mi="5" ci="0" mb="0" cb="0"/><line nr="297" mi="3" ci="0" mb="2" cb="0"/><line nr="298" mi="5" ci="0" mb="0" cb="0"/><line nr="301" mi="3" ci="0" mb="2" cb="0"/><line nr="302" mi="3" ci="0" mb="0" cb="0"/><line nr="303" mi="4" ci="0" mb="0" cb="0"/><line nr="304" mi="1" ci="0" mb="0" cb="0"/><line nr="305" mi="4" ci="0" mb="0" cb="0"/><line nr="306" mi="4" ci="0" mb="0" cb="0"/><line nr="307" mi="4" ci="0" mb="0" cb="0"/><line nr="308" mi="6" ci="0" mb="0" cb="0"/><line nr="310" mi="2" ci="0" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="1" cb="1"/><line nr="315" mi="5" ci="0" mb="0" cb="0"/><line nr="317" mi="0" ci="2" mb="0" cb="0"/><line nr="327" mi="5" ci="0" mb="0" cb="0"/><line nr="335" mi="5" ci="0" mb="0" cb="0"/><line nr="336" mi="9" ci="0" mb="4" cb="0"/><line nr="344" mi="0" ci="5" mb="0" cb="0"/><line nr="353" mi="0" ci="5" mb="0" cb="0"/><line nr="354" mi="0" ci="2" mb="1" cb="1"/><line nr="355" mi="12" ci="0" mb="0" cb="0"/><line nr="357" mi="0" ci="2" mb="0" cb="0"/><line nr="365" mi="5" ci="0" mb="0" cb="0"/><line nr="376" mi="4" ci="0" mb="0" cb="0"/><line nr="377" mi="3" ci="0" mb="0" cb="0"/><line nr="378" mi="2" ci="0" mb="2" cb="0"/><line nr="379" mi="5" ci="0" mb="0" cb="0"/><line nr="381" mi="3" ci="0" mb="0" cb="0"/><line nr="389" mi="5" ci="0" mb="0" cb="0"/><line nr="397" mi="4" ci="0" mb="0" cb="0"/><line nr="398" mi="3" ci="0" mb="0" cb="0"/><line nr="399" mi="7" ci="0" mb="2" cb="0"/><line nr="410" mi="4" ci="0" mb="0" cb="0"/><line nr="411" mi="3" ci="0" mb="0" cb="0"/><line nr="412" mi="2" ci="0" mb="2" cb="0"/><line nr="413" mi="5" ci="0" mb="0" cb="0"/><line nr="415" mi="3" ci="0" mb="0" cb="0"/><line nr="423" mi="5" ci="0" mb="0" cb="0"/><line nr="431" mi="4" ci="0" mb="0" cb="0"/><line nr="432" mi="3" ci="0" mb="0" cb="0"/><line nr="433" mi="7" ci="0" mb="2" cb="0"/><line nr="444" mi="4" ci="0" mb="0" cb="0"/><line nr="445" mi="3" ci="0" mb="0" cb="0"/><line nr="446" mi="2" ci="0" mb="2" cb="0"/><line nr="447" mi="5" ci="0" mb="0" cb="0"/><line nr="449" mi="3" ci="0" mb="0" cb="0"/><line nr="457" mi="5" ci="0" mb="0" cb="0"/><line nr="465" mi="4" ci="0" mb="0" cb="0"/><line nr="466" mi="3" ci="0" mb="0" cb="0"/><line nr="467" mi="7" ci="0" mb="2" cb="0"/><line nr="479" mi="4" ci="0" mb="0" cb="0"/><line nr="480" mi="3" ci="0" mb="0" cb="0"/><line nr="481" mi="2" ci="0" mb="2" cb="0"/><line nr="482" mi="5" ci="0" mb="0" cb="0"/><line nr="484" mi="3" ci="0" mb="0" cb="0"/><line nr="493" mi="5" ci="0" mb="0" cb="0"/><line nr="503" mi="4" ci="0" mb="0" cb="0"/><line nr="504" mi="3" ci="0" mb="0" cb="0"/><line nr="505" mi="7" ci="0" mb="2" cb="0"/><line nr="515" mi="4" ci="0" mb="0" cb="0"/><line nr="516" mi="3" ci="0" mb="0" cb="0"/><line nr="517" mi="2" ci="0" mb="2" cb="0"/><line nr="518" mi="5" ci="0" mb="0" cb="0"/><line nr="520" mi="2" ci="0" mb="0" cb="0"/><line nr="528" mi="5" ci="0" mb="0" cb="0"/><line nr="536" mi="4" ci="0" mb="0" cb="0"/><line nr="537" mi="3" ci="0" mb="0" cb="0"/><line nr="538" mi="6" ci="0" mb="2" cb="0"/><line nr="549" mi="4" ci="0" mb="0" cb="0"/><line nr="550" mi="3" ci="0" mb="2" cb="0"/><line nr="551" mi="3" ci="0" mb="0" cb="0"/><line nr="553" mi="5" ci="0" mb="0" cb="0"/><line nr="562" mi="4" ci="0" mb="0" cb="0"/><line nr="563" mi="8" ci="0" mb="2" cb="0"/><line nr="574" mi="4" ci="0" mb="0" cb="0"/><line nr="575" mi="3" ci="0" mb="2" cb="0"/><line nr="576" mi="3" ci="0" mb="0" cb="0"/><line nr="578" mi="5" ci="0" mb="0" cb="0"/><line nr="587" mi="4" ci="0" mb="0" cb="0"/><line nr="588" mi="8" ci="0" mb="2" cb="0"/><line nr="597" mi="4" ci="0" mb="0" cb="0"/><line nr="598" mi="2" ci="0" mb="2" cb="0"/><line nr="599" mi="2" ci="0" mb="0" cb="0"/><line nr="601" mi="3" ci="0" mb="0" cb="0"/><line nr="602" mi="2" ci="0" mb="2" cb="0"/><line nr="603" mi="2" ci="0" mb="0" cb="0"/><line nr="605" mi="7" ci="0" mb="2" cb="0"/><line nr="606" mi="5" ci="0" mb="0" cb="0"/><line nr="607" mi="6" ci="0" mb="0" cb="0"/><line nr="609" mi="2" ci="0" mb="0" cb="0"/><line nr="621" mi="0" ci="5" mb="0" cb="0"/><line nr="629" mi="16" ci="0" mb="2" cb="0"/><line nr="640" mi="4" ci="0" mb="0" cb="0"/><line nr="641" mi="3" ci="0" mb="0" cb="0"/><line nr="642" mi="3" ci="0" mb="0" cb="0"/><line nr="643" mi="1" ci="0" mb="0" cb="0"/><line nr="644" mi="2" ci="0" mb="0" cb="0"/><line nr="664" mi="5" ci="0" mb="0" cb="0"/><line nr="665" mi="3" ci="0" mb="0" cb="0"/><line nr="666" mi="3" ci="0" mb="0" cb="0"/><line nr="670" mi="3" ci="0" mb="0" cb="0"/><line nr="671" mi="12" ci="0" mb="2" cb="0"/><line nr="672" mi="9" ci="0" mb="0" cb="0"/><line nr="673" mi="1" ci="0" mb="0" cb="0"/><line nr="674" mi="3" ci="0" mb="0" cb="0"/><line nr="675" mi="1" ci="0" mb="0" cb="0"/><line nr="684" mi="2" ci="0" mb="2" cb="0"/><line nr="685" mi="5" ci="0" mb="0" cb="0"/><line nr="688" mi="3" ci="0" mb="0" cb="0"/><line nr="689" mi="3" ci="0" mb="0" cb="0"/><line nr="692" mi="4" ci="0" mb="2" cb="0"/><line nr="693" mi="2" ci="0" mb="0" cb="0"/><line nr="696" mi="3" ci="0" mb="0" cb="0"/><line nr="697" mi="5" ci="0" mb="2" cb="0"/><line nr="698" mi="3" ci="0" mb="0" cb="0"/><line nr="701" mi="3" ci="0" mb="0" cb="0"/><line nr="712" mi="2" ci="0" mb="2" cb="0"/><line nr="713" mi="2" ci="0" mb="0" cb="0"/><line nr="716" mi="4" ci="0" mb="0" cb="0"/><line nr="717" mi="5" ci="0" mb="0" cb="0"/><line nr="718" mi="4" ci="0" mb="0" cb="0"/><line nr="719" mi="6" ci="0" mb="0" cb="0"/><line nr="720" mi="3" ci="0" mb="0" cb="0"/><line nr="721" mi="1" ci="0" mb="0" cb="0"/><line nr="722" mi="4" ci="0" mb="0" cb="0"/><line nr="739" mi="2" ci="0" mb="2" cb="0"/><line nr="740" mi="2" ci="0" mb="0" cb="0"/><line nr="742" mi="6" ci="0" mb="4" cb="0"/><line nr="743" mi="2" ci="0" mb="0" cb="0"/><line nr="745" mi="4" ci="0" mb="2" cb="0"/><line nr="746" mi="2" ci="0" mb="0" cb="0"/><line nr="749" mi="3" ci="0" mb="2" cb="0"/><line nr="750" mi="6" ci="0" mb="0" cb="0"/><line nr="751" mi="4" ci="0" mb="2" cb="0"/><line nr="752" mi="5" ci="0" mb="0" cb="0"/><line nr="754" mi="3" ci="0" mb="2" cb="0"/><line nr="755" mi="6" ci="0" mb="0" cb="0"/><line nr="757" mi="27" ci="0" mb="18" cb="0"/><line nr="766" mi="2" ci="0" mb="0" cb="0"/><line nr="768" mi="7" ci="0" mb="2" cb="0"/><line nr="769" mi="3" ci="0" mb="0" cb="0"/><line nr="771" mi="1" ci="0" mb="0" cb="0"/><line nr="772" mi="1" ci="0" mb="0" cb="0"/><line nr="773" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="736" covered="79"/><counter type="BRANCH" missed="111" covered="5"/><counter type="LINE" missed="173" covered="23"/><counter type="COMPLEXITY" missed="99" covered="10"/><counter type="METHOD" missed="41" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="JSONString.java"/><counter type="INSTRUCTION" missed="2795" covered="284"/><counter type="BRANCH" missed="399" covered="29"/><counter type="LINE" missed="623" covered="77"/><counter type="COMPLEXITY" missed="350" covered="25"/><counter type="METHOD" missed="131" covered="20"/><counter type="CLASS" missed="4" covered="4"/></package><package name="org/skyscreamer/jsonassert"><class name="org/skyscreamer/jsonassert/ValueMatcherException" sourcefilename="ValueMatcherException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="41"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/String;)V" line="59"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExpected" desc="()Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getActual" desc="()Ljava/lang/String;" line="75"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/skyscreamer/jsonassert/ArrayValueMatcher" sourcefilename="ArrayValueMatcher.java"><method name="&lt;init&gt;" desc="(Lorg/skyscreamer/jsonassert/comparator/JSONComparator;)V" line="152"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/skyscreamer/jsonassert/comparator/JSONComparator;I)V" line="165"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/skyscreamer/jsonassert/comparator/JSONComparator;II)V" line="178"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equal" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="194"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equal" desc="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Lorg/skyscreamer/jsonassert/JSONCompareResult;)Z" line="199"><counter type="INSTRUCTION" missed="88" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="138"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="171" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/skyscreamer/jsonassert/FieldComparisonFailure" sourcefilename="FieldComparisonFailure.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V" line="25"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getField" desc="()Ljava/lang/String;" line="32"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExpected" desc="()Ljava/lang/Object;" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getActual" desc="()Ljava/lang/Object;" line="40"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/skyscreamer/jsonassert/JSONParser$1" sourcefilename="JSONParser.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="49"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toJSONString" desc="()Ljava/lang/String;" line="52"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/skyscreamer/jsonassert/LocationAwareValueMatcher" sourcefilename="LocationAwareValueMatcher.java"/><class name="org/skyscreamer/jsonassert/JSONCompareResult" sourcefilename="JSONCompareResult.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ZLjava/lang/String;)V" line="33"><counter type="INSTRUCTION" missed="1" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="passed" desc="()Z" line="54"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="failed" desc="()Z" line="62"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldFailures" desc="()Ljava/util/List;" line="78"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldMissing" desc="()Ljava/util/List;" line="86"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldUnexpected" desc="()Ljava/util/List;" line="94"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getActual" desc="()Ljava/lang/Object;" line="107"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExpected" desc="()Ljava/lang/Object;" line="120"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFailureOnField" desc="()Z" line="128"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMissingOnField" desc="()Z" line="136"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUnexpectedOnField" desc="()Z" line="144"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getField" desc="()Ljava/lang/String;" line="156"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fail" desc="(Ljava/lang/String;)V" line="160"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fail" desc="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lorg/skyscreamer/jsonassert/JSONCompareResult;" line="176"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fail" desc="(Ljava/lang/String;Lorg/skyscreamer/jsonassert/ValueMatcherException;)Lorg/skyscreamer/jsonassert/JSONCompareResult;" line="191"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatFailureMessage" desc="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;" line="196"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="missing" desc="(Ljava/lang/String;Ljava/lang/Object;)Lorg/skyscreamer/jsonassert/JSONCompareResult;" line="211"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatMissing" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;" line="217"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unexpected" desc="(Ljava/lang/String;Ljava/lang/Object;)Lorg/skyscreamer/jsonassert/JSONCompareResult;" line="230"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatUnexpected" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;" line="236"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="describe" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="243"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="254"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="224" covered="40"/><counter type="BRANCH" missed="14" covered="2"/><counter type="LINE" missed="43" covered="10"/><counter type="COMPLEXITY" missed="29" covered="3"/><counter type="METHOD" missed="21" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/skyscreamer/jsonassert/ValueMatcher" sourcefilename="ValueMatcher.java"/><class name="org/skyscreamer/jsonassert/JSONParser" sourcefilename="JSONParser.java"><method name="parseJSON" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="42"><counter type="INSTRUCTION" missed="37" covered="10"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="37" covered="10"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/skyscreamer/jsonassert/JSONCompare" sourcefilename="JSONCompare.java"><method name="getComparatorForMode" desc="(Lorg/skyscreamer/jsonassert/JSONCompareMode;)Lorg/skyscreamer/jsonassert/comparator/JSONComparator;" line="34"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareJSON" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/skyscreamer/jsonassert/comparator/JSONComparator;)Lorg/skyscreamer/jsonassert/JSONCompareResult;" line="49"><counter type="INSTRUCTION" missed="44" covered="19"/><counter type="BRANCH" missed="12" covered="2"/><counter type="LINE" missed="7" covered="4"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareJSON" desc="(Lorg/json/JSONObject;Lorg/json/JSONObject;Lorg/skyscreamer/jsonassert/comparator/JSONComparator;)Lorg/skyscreamer/jsonassert/JSONCompareResult;" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareJSON" desc="(Lorg/json/JSONArray;Lorg/json/JSONArray;Lorg/skyscreamer/jsonassert/comparator/JSONComparator;)Lorg/skyscreamer/jsonassert/JSONCompareResult;" line="93"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareJson" desc="(Lorg/json/JSONString;Lorg/json/JSONString;)Lorg/skyscreamer/jsonassert/JSONCompareResult;" line="105"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareJSON" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/skyscreamer/jsonassert/JSONCompareMode;)Lorg/skyscreamer/jsonassert/JSONCompareResult;" line="125"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareJSON" desc="(Lorg/json/JSONObject;Lorg/json/JSONObject;Lorg/skyscreamer/jsonassert/JSONCompareMode;)Lorg/skyscreamer/jsonassert/JSONCompareResult;" line="139"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareJSON" desc="(Lorg/json/JSONArray;Lorg/json/JSONArray;Lorg/skyscreamer/jsonassert/JSONCompareMode;)Lorg/skyscreamer/jsonassert/JSONCompareResult;" line="154"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="80" covered="35"/><counter type="BRANCH" missed="14" covered="2"/><counter type="LINE" missed="16" covered="7"/><counter type="COMPLEXITY" missed="12" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/skyscreamer/jsonassert/JSONCompareMode" sourcefilename="JSONCompareMode.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;IZZ)V" line="69"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExtensible" desc="()Z" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasStrictOrder" desc="()Z" line="87"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withStrictOrdering" desc="(Z)Lorg/skyscreamer/jsonassert/JSONCompareMode;" line="97"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withExtensible" desc="(Z)Lorg/skyscreamer/jsonassert/JSONCompareMode;" line="111"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="69"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="6" covered="11"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/skyscreamer/jsonassert/JSONAssert" sourcefilename="JSONAssert.java"><method name="assertEquals" desc="(Ljava/lang/String;Lorg/json/JSONObject;Z)V" line="66"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertEquals" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/json/JSONObject;Z)V" line="81"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertNotEquals" desc="(Ljava/lang/String;Lorg/json/JSONObject;Z)V" line="97"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertNotEquals" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/json/JSONObject;Z)V" line="114"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertEquals" desc="(Ljava/lang/String;Lorg/json/JSONObject;Lorg/skyscreamer/jsonassert/JSONCompareMode;)V" line="128"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertEquals" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/json/JSONObject;Lorg/skyscreamer/jsonassert/JSONCompareMode;)V" line="143"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertNotEquals" desc="(Ljava/lang/String;Lorg/json/JSONObject;Lorg/skyscreamer/jsonassert/JSONCompareMode;)V" line="165"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertNotEquals" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/json/JSONObject;Lorg/skyscreamer/jsonassert/JSONCompareMode;)V" line="182"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertEquals" desc="(Ljava/lang/String;Lorg/json/JSONArray;Z)V" line="202"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertEquals" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/json/JSONArray;Z)V" line="217"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertNotEquals" desc="(Ljava/lang/String;Lorg/json/JSONArray;Z)V" line="231"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertNotEquals" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/json/JSONArray;Z)V" line="246"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertEquals" desc="(Ljava/lang/String;Lorg/json/JSONArray;Lorg/skyscreamer/jsonassert/JSONCompareMode;)V" line="260"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertEquals" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/json/JSONArray;Lorg/skyscreamer/jsonassert/JSONCompareMode;)V" line="275"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertNotEquals" desc="(Ljava/lang/String;Lorg/json/JSONArray;Lorg/skyscreamer/jsonassert/JSONCompareMode;)V" line="295"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertNotEquals" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/json/JSONArray;Lorg/skyscreamer/jsonassert/JSONCompareMode;)V" line="316"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertEquals" desc="(Ljava/lang/String;Ljava/lang/String;Z)V" line="336"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertEquals" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V" line="351"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertNotEquals" desc="(Ljava/lang/String;Ljava/lang/String;Z)V" line="365"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertNotEquals" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V" line="380"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertEquals" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/skyscreamer/jsonassert/JSONCompareMode;)V" line="394"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assertEquals" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/skyscreamer/jsonassert/JSONCompareMode;)V" line="409"><counter type="INSTRUCTION" missed="19" covered="16"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assertNotEquals" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/skyscreamer/jsonassert/JSONCompareMode;)V" line="432"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertNotEquals" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/skyscreamer/jsonassert/JSONCompareMode;)V" line="447"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertEquals" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/skyscreamer/jsonassert/comparator/JSONComparator;)V" line="464"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertEquals" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/skyscreamer/jsonassert/comparator/JSONComparator;)V" line="480"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertNotEquals" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/skyscreamer/jsonassert/comparator/JSONComparator;)V" line="497"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertNotEquals" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/skyscreamer/jsonassert/comparator/JSONComparator;)V" line="512"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertEquals" desc="(Lorg/json/JSONObject;Lorg/json/JSONObject;Z)V" line="529"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertEquals" desc="(Ljava/lang/String;Lorg/json/JSONObject;Lorg/json/JSONObject;Z)V" line="544"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertNotEquals" desc="(Lorg/json/JSONObject;Lorg/json/JSONObject;Z)V" line="558"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertNotEquals" desc="(Ljava/lang/String;Lorg/json/JSONObject;Lorg/json/JSONObject;Z)V" line="573"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertEquals" desc="(Lorg/json/JSONObject;Lorg/json/JSONObject;Lorg/skyscreamer/jsonassert/JSONCompareMode;)V" line="587"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertEquals" desc="(Ljava/lang/String;Lorg/json/JSONObject;Lorg/json/JSONObject;Lorg/skyscreamer/jsonassert/JSONCompareMode;)V" line="602"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertNotEquals" desc="(Lorg/json/JSONObject;Lorg/json/JSONObject;Lorg/skyscreamer/jsonassert/JSONCompareMode;)V" line="619"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertNotEquals" desc="(Ljava/lang/String;Lorg/json/JSONObject;Lorg/json/JSONObject;Lorg/skyscreamer/jsonassert/JSONCompareMode;)V" line="634"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertEquals" desc="(Lorg/json/JSONArray;Lorg/json/JSONArray;Z)V" line="651"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertEquals" desc="(Ljava/lang/String;Lorg/json/JSONArray;Lorg/json/JSONArray;Z)V" line="666"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertNotEquals" desc="(Lorg/json/JSONArray;Lorg/json/JSONArray;Z)V" line="680"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertNotEquals" desc="(Ljava/lang/String;Lorg/json/JSONArray;Lorg/json/JSONArray;Z)V" line="695"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertEquals" desc="(Lorg/json/JSONArray;Lorg/json/JSONArray;Lorg/skyscreamer/jsonassert/JSONCompareMode;)V" line="709"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertEquals" desc="(Ljava/lang/String;Lorg/json/JSONArray;Lorg/json/JSONArray;Lorg/skyscreamer/jsonassert/JSONCompareMode;)V" line="724"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertNotEquals" desc="(Lorg/json/JSONArray;Lorg/json/JSONArray;Lorg/skyscreamer/jsonassert/JSONCompareMode;)V" line="741"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertNotEquals" desc="(Ljava/lang/String;Lorg/json/JSONArray;Lorg/json/JSONArray;Lorg/skyscreamer/jsonassert/JSONCompareMode;)V" line="756"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCombinedMessage" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="763"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="507" covered="22"/><counter type="BRANCH" missed="72" covered="4"/><counter type="LINE" missed="121" covered="8"/><counter type="COMPLEXITY" missed="81" covered="2"/><counter type="METHOD" missed="43" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/skyscreamer/jsonassert/RegularExpressionValueMatcher" sourcefilename="RegularExpressionValueMatcher.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="63"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equal" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="74"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isStaticPattern" desc="()Z" line="90"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPatternType" desc="()Ljava/lang/String;" line="94"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="104" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/skyscreamer/jsonassert/Customization" sourcefilename="Customization.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/skyscreamer/jsonassert/ValueMatcher;)V" line="26"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildPattern" desc="(Ljava/lang/String;)Ljava/lang/String;" line="34"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildPatternLevel1" desc="(Ljava/lang/String;)Ljava/lang/String;" line="38"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildPatternLevel2" desc="(Ljava/lang/String;)Ljava/lang/String;" line="45"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildPatternLevel3" desc="(Ljava/lang/String;)Ljava/lang/String;" line="55"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildPattern" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;" line="66"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildPatternForLevel" desc="(ILjava/lang/String;)Ljava/lang/String;" line="78"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="customization" desc="(Ljava/lang/String;Lorg/skyscreamer/jsonassert/ValueMatcher;)Lorg/skyscreamer/jsonassert/Customization;" line="98"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appliesToPath" desc="(Ljava/lang/String;)Z" line="102"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matches" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="119"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matches" desc="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Lorg/skyscreamer/jsonassert/JSONCompareResult;)Z" line="146"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="173" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="39" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="JSONAssert.java"><line nr="66" mi="8" ci="0" mb="2" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="9" ci="0" mb="2" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="8" ci="0" mb="2" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="9" ci="0" mb="2" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="1" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="2" cb="0"/><line nr="145" mi="7" ci="0" mb="0" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="5" ci="0" mb="0" cb="0"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="182" mi="3" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="2" cb="0"/><line nr="184" mi="7" ci="0" mb="0" cb="0"/><line nr="187" mi="5" ci="0" mb="0" cb="0"/><line nr="189" mi="1" ci="0" mb="0" cb="0"/><line nr="202" mi="8" ci="0" mb="2" cb="0"/><line nr="203" mi="1" ci="0" mb="0" cb="0"/><line nr="217" mi="9" ci="0" mb="2" cb="0"/><line nr="218" mi="1" ci="0" mb="0" cb="0"/><line nr="231" mi="8" ci="0" mb="2" cb="0"/><line nr="232" mi="1" ci="0" mb="0" cb="0"/><line nr="246" mi="9" ci="0" mb="2" cb="0"/><line nr="247" mi="1" ci="0" mb="0" cb="0"/><line nr="260" mi="5" ci="0" mb="0" cb="0"/><line nr="261" mi="1" ci="0" mb="0" cb="0"/><line nr="275" mi="3" ci="0" mb="0" cb="0"/><line nr="276" mi="3" ci="0" mb="2" cb="0"/><line nr="277" mi="7" ci="0" mb="0" cb="0"/><line nr="280" mi="5" ci="0" mb="0" cb="0"/><line nr="282" mi="1" ci="0" mb="0" cb="0"/><line nr="295" mi="3" ci="0" mb="0" cb="0"/><line nr="296" mi="3" ci="0" mb="2" cb="0"/><line nr="297" mi="6" ci="0" mb="0" cb="0"/><line nr="300" mi="5" ci="0" mb="0" cb="0"/><line nr="302" mi="1" ci="0" mb="0" cb="0"/><line nr="316" mi="3" ci="0" mb="0" cb="0"/><line nr="317" mi="3" ci="0" mb="2" cb="0"/><line nr="318" mi="7" ci="0" mb="0" cb="0"/><line nr="321" mi="5" ci="0" mb="0" cb="0"/><line nr="323" mi="1" ci="0" mb="0" cb="0"/><line nr="336" mi="8" ci="0" mb="2" cb="0"/><line nr="337" mi="1" ci="0" mb="0" cb="0"/><line nr="351" mi="9" ci="0" mb="2" cb="0"/><line nr="352" mi="1" ci="0" mb="0" cb="0"/><line nr="365" mi="8" ci="0" mb="2" cb="0"/><line nr="366" mi="1" ci="0" mb="0" cb="0"/><line nr="380" mi="9" ci="0" mb="2" cb="0"/><line nr="381" mi="1" ci="0" mb="0" cb="0"/><line nr="394" mi="0" ci="5" mb="0" cb="0"/><line nr="395" mi="0" ci="1" mb="0" cb="0"/><line nr="409" mi="1" ci="3" mb="1" cb="1"/><line nr="410" mi="0" ci="2" mb="1" cb="1"/><line nr="411" mi="5" ci="0" mb="0" cb="0"/><line nr="412" mi="0" ci="2" mb="1" cb="1"/><line nr="413" mi="5" ci="0" mb="0" cb="0"/><line nr="415" mi="0" ci="5" mb="0" cb="0"/><line nr="416" mi="0" ci="3" mb="1" cb="1"/><line nr="417" mi="8" ci="0" mb="0" cb="0"/><line nr="419" mi="0" ci="1" mb="0" cb="0"/><line nr="432" mi="5" ci="0" mb="0" cb="0"/><line nr="433" mi="1" ci="0" mb="0" cb="0"/><line nr="447" mi="5" ci="0" mb="0" cb="0"/><line nr="448" mi="3" ci="0" mb="2" cb="0"/><line nr="449" mi="8" ci="0" mb="0" cb="0"/><line nr="451" mi="1" ci="0" mb="0" cb="0"/><line nr="464" mi="5" ci="0" mb="0" cb="0"/><line nr="466" mi="1" ci="0" mb="0" cb="0"/><line nr="480" mi="5" ci="0" mb="0" cb="0"/><line nr="481" mi="3" ci="0" mb="2" cb="0"/><line nr="482" mi="8" ci="0" mb="0" cb="0"/><line nr="484" mi="1" ci="0" mb="0" cb="0"/><line nr="497" mi="5" ci="0" mb="0" cb="0"/><line nr="498" mi="1" ci="0" mb="0" cb="0"/><line nr="512" mi="5" ci="0" mb="0" cb="0"/><line nr="513" mi="3" ci="0" mb="2" cb="0"/><line nr="514" mi="8" ci="0" mb="0" cb="0"/><line nr="516" mi="1" ci="0" mb="0" cb="0"/><line nr="529" mi="8" ci="0" mb="2" cb="0"/><line nr="530" mi="1" ci="0" mb="0" cb="0"/><line nr="544" mi="9" ci="0" mb="2" cb="0"/><line nr="545" mi="1" ci="0" mb="0" cb="0"/><line nr="558" mi="8" ci="0" mb="2" cb="0"/><line nr="559" mi="1" ci="0" mb="0" cb="0"/><line nr="573" mi="9" ci="0" mb="2" cb="0"/><line nr="574" mi="1" ci="0" mb="0" cb="0"/><line nr="587" mi="5" ci="0" mb="0" cb="0"/><line nr="588" mi="1" ci="0" mb="0" cb="0"/><line nr="602" mi="5" ci="0" mb="0" cb="0"/><line nr="603" mi="3" ci="0" mb="2" cb="0"/><line nr="604" mi="8" ci="0" mb="0" cb="0"/><line nr="606" mi="1" ci="0" mb="0" cb="0"/><line nr="619" mi="5" ci="0" mb="0" cb="0"/><line nr="620" mi="1" ci="0" mb="0" cb="0"/><line nr="634" mi="5" ci="0" mb="0" cb="0"/><line nr="635" mi="3" ci="0" mb="2" cb="0"/><line nr="636" mi="8" ci="0" mb="0" cb="0"/><line nr="638" mi="1" ci="0" mb="0" cb="0"/><line nr="651" mi="9" ci="0" mb="2" cb="0"/><line nr="652" mi="1" ci="0" mb="0" cb="0"/><line nr="666" mi="9" ci="0" mb="2" cb="0"/><line nr="667" mi="1" ci="0" mb="0" cb="0"/><line nr="680" mi="8" ci="0" mb="2" cb="0"/><line nr="681" mi="1" ci="0" mb="0" cb="0"/><line nr="695" mi="9" ci="0" mb="2" cb="0"/><line nr="696" mi="1" ci="0" mb="0" cb="0"/><line nr="709" mi="5" ci="0" mb="0" cb="0"/><line nr="710" mi="1" ci="0" mb="0" cb="0"/><line nr="724" mi="5" ci="0" mb="0" cb="0"/><line nr="725" mi="3" ci="0" mb="2" cb="0"/><line nr="726" mi="8" ci="0" mb="0" cb="0"/><line nr="728" mi="1" ci="0" mb="0" cb="0"/><line nr="741" mi="5" ci="0" mb="0" cb="0"/><line nr="742" mi="1" ci="0" mb="0" cb="0"/><line nr="756" mi="5" ci="0" mb="0" cb="0"/><line nr="757" mi="3" ci="0" mb="2" cb="0"/><line nr="758" mi="8" ci="0" mb="0" cb="0"/><line nr="760" mi="1" ci="0" mb="0" cb="0"/><line nr="763" mi="2" ci="0" mb="0" cb="0"/><line nr="765" mi="6" ci="0" mb="4" cb="0"/><line nr="766" mi="3" ci="0" mb="0" cb="0"/><line nr="768" mi="11" ci="0" mb="0" cb="0"/><line nr="770" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="507" covered="22"/><counter type="BRANCH" missed="72" covered="4"/><counter type="LINE" missed="121" covered="8"/><counter type="COMPLEXITY" missed="81" covered="2"/><counter type="METHOD" missed="43" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayValueMatcher.java"><line nr="138" mi="8" ci="0" mb="2" cb="0"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="5" ci="0" mb="0" cb="0"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="9" ci="0" mb="4" cb="0"/><line nr="180" mi="17" ci="0" mb="4" cb="0"/><line nr="181" mi="21" ci="0" mb="4" cb="0"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="184" mi="3" ci="0" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="0" cb="0"/><line nr="186" mi="1" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="2" cb="0"/><line nr="200" mi="5" ci="0" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="0" cb="0"/><line nr="204" mi="16" ci="0" mb="2" cb="0"/><line nr="205" mi="5" ci="0" mb="0" cb="0"/><line nr="206" mi="8" ci="0" mb="0" cb="0"/><line nr="207" mi="3" ci="0" mb="0" cb="0"/><line nr="208" mi="7" ci="0" mb="2" cb="0"/><line nr="209" mi="14" ci="0" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="0" cb="0"/><line nr="211" mi="8" ci="0" mb="0" cb="0"/><line nr="212" mi="7" ci="0" mb="0" cb="0"/><line nr="215" mi="2" ci="0" mb="0" cb="0"/><line nr="217" mi="1" ci="0" mb="0" cb="0"/><line nr="218" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="171" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Customization.java"><line nr="22" mi="8" ci="0" mb="2" cb="0"/><line nr="26" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="8" ci="0" mb="4" cb="0"/><line nr="28" mi="8" ci="0" mb="4" cb="0"/><line nr="29" mi="6" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="2" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="7" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="2" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="8" ci="0" mb="2" cb="0"/><line nr="69" mi="9" ci="0" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="2" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="4" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="6" ci="0" mb="0" cb="0"/><line nr="102" mi="6" ci="0" mb="0" cb="0"/><line nr="119" mi="6" ci="0" mb="0" cb="0"/><line nr="146" mi="4" ci="0" mb="2" cb="0"/><line nr="147" mi="9" ci="0" mb="0" cb="0"/><line nr="149" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="173" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="39" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LocationAwareValueMatcher.java"/><sourcefile name="ValueMatcherException.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="JSONCompareResult.java"><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="1" ci="9" mb="1" cb="1"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="5" mb="1" cb="1"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="8" ci="0" mb="2" cb="0"/><line nr="136" mi="8" ci="0" mb="2" cb="0"/><line nr="144" mi="8" ci="0" mb="2" cb="0"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="2" cb="0"/><line nr="162" mi="6" ci="0" mb="0" cb="0"/><line nr="164" mi="7" ci="0" mb="0" cb="0"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="10" ci="0" mb="0" cb="0"/><line nr="177" mi="3" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="0" cb="0"/><line nr="180" mi="7" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="191" mi="18" ci="0" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="196" mi="9" ci="0" mb="0" cb="0"/><line nr="198" mi="5" ci="0" mb="0" cb="0"/><line nr="200" mi="5" ci="0" mb="0" cb="0"/><line nr="211" mi="10" ci="0" mb="0" cb="0"/><line nr="212" mi="6" ci="0" mb="0" cb="0"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="217" mi="9" ci="0" mb="0" cb="0"/><line nr="219" mi="5" ci="0" mb="0" cb="0"/><line nr="230" mi="10" ci="0" mb="0" cb="0"/><line nr="231" mi="6" ci="0" mb="0" cb="0"/><line nr="232" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="9" ci="0" mb="0" cb="0"/><line nr="238" mi="5" ci="0" mb="0" cb="0"/><line nr="243" mi="3" ci="0" mb="2" cb="0"/><line nr="244" mi="2" ci="0" mb="0" cb="0"/><line nr="245" mi="3" ci="0" mb="2" cb="0"/><line nr="246" mi="2" ci="0" mb="0" cb="0"/><line nr="248" mi="3" ci="0" mb="0" cb="0"/><line nr="254" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="224" covered="40"/><counter type="BRANCH" missed="14" covered="2"/><counter type="LINE" missed="43" covered="10"/><counter type="COMPLEXITY" missed="29" covered="3"/><counter type="METHOD" missed="21" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ValueMatcher.java"/><sourcefile name="JSONParser.java"><line nr="42" mi="0" ci="5" mb="1" cb="1"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="2" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="6" ci="0" mb="2" cb="0"/><line nr="48" mi="4" ci="0" mb="2" cb="0"/><line nr="49" mi="11" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="46" covered="10"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="7" covered="2"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="FieldComparisonFailure.java"><line nr="25" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="JSONCompare.java"><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="2" cb="2"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="4" cb="0"/><line nr="55" mi="7" ci="0" mb="0" cb="0"/><line nr="57" mi="6" ci="0" mb="4" cb="0"/><line nr="58" mi="6" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="2" cb="0"/><line nr="61" mi="8" ci="0" mb="0" cb="0"/><line nr="64" mi="8" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="2" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="6" ci="0" mb="0" cb="0"/><line nr="154" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="80" covered="35"/><counter type="BRANCH" missed="14" covered="2"/><counter type="LINE" missed="16" covered="7"/><counter type="COMPLEXITY" missed="12" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RegularExpressionValueMatcher.java"><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="8" ci="0" mb="2" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="14" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="2" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="2" cb="0"/><line nr="80" mi="16" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="19" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="7" ci="0" mb="2" cb="0"/><line nr="94" mi="7" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="104" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="JSONCompareMode.java"><line nr="48" mi="0" ci="20" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="0"/><line nr="56" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="2" cb="0"/><line nr="98" mi="7" ci="0" mb="2" cb="0"/><line nr="100" mi="7" ci="0" mb="2" cb="0"/><line nr="111" mi="2" ci="0" mb="2" cb="0"/><line nr="112" mi="7" ci="0" mb="2" cb="0"/><line nr="114" mi="7" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="32" covered="69"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="6" covered="11"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1385" covered="176"/><counter type="BRANCH" missed="173" covered="9"/><counter type="LINE" missed="300" covered="38"/><counter type="COMPLEXITY" missed="195" covered="14"/><counter type="METHOD" missed="103" covered="14"/><counter type="CLASS" missed="6" covered="5"/></package><package name="org/zalando/jzon/service/util"><class name="org/zalando/jzon/service/util/CollectionUtil" sourcefilename="CollectionUtil.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFirst" desc="([Ljava/lang/Object;)Ljava/lang/Object;" line="24"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="firstStringValueOf" desc="([Ljava/lang/Object;)Ljava/lang/String;" line="32"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="firstStringValueOf" desc="(Ljava/util/Set;)Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirst" desc="(Ljava/util/Set;)Ljava/lang/Object;" line="45"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CollectionUtil.java"><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="2"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="2"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="3" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/zalando/jzon/service/impl"><class name="org/zalando/jzon/service/impl/PayloadKeyFactory" sourcefilename="PayloadKeyFactory.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPayloadKeyParser" desc="(Lcom/fasterxml/jackson/databind/ObjectMapper;)Lorg/zalando/jzon/service/PayloadKeyParser;" line="11"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPayloadKeyModifier" desc="()Lorg/zalando/jzon/service/PayloadKeyModifier;" line="15"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/zalando/jzon/service/impl/DefaultKeyModifier" sourcefilename="DefaultKeyModifier.java"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeKeysWithPaths" desc="(Ljava/util/Set;Ljava/util/Map;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/zalando/jzon/service/impl/DefaultPayloadKeyParser" sourcefilename="DefaultPayloadKeyParser.java"><method name="&lt;init&gt;" desc="(Lcom/fasterxml/jackson/databind/ObjectMapper;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/util/Set;Ljava/util/Map;Ljava/util/Map;Z)Ljava/util/Map;" line="78"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/util/Set;Ljava/util/Map;Ljava/lang/String;Z)Ljava/util/Map;" line="90"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/util/Set;Ljava/lang/String;Z)Ljava/util/Map;" line="96"><counter type="INSTRUCTION" missed="17" covered="63"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="3" covered="18"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseUnique" desc="(Ljava/util/Set;Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;" line="137"><counter type="INSTRUCTION" missed="14" covered="26"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseGrouped" desc="(Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;Ljava/util/Map;Ljava/util/Map;)Ljava/util/List;" line="157"><counter type="INSTRUCTION" missed="14" covered="26"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseGrouped" desc="(Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)Ljava/util/List;" line="172"><counter type="INSTRUCTION" missed="0" covered="123"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveKeyValueSameLevelAsGroupKey" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;" line="204"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPathOrValueForExactKeyAnywhereInJson" desc="(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/Object;" line="248"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPathOrValueForKeyNestedAndBrokenInJson" desc="(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/Object;" line="292"><counter type="INSTRUCTION" missed="2" covered="37"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveValue" desc="([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;" line="314"><counter type="INSTRUCTION" missed="2" covered="44"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveSecondKeyUsing" desc="(Ljava/lang/String;[Ljava/lang/String;Lnet/minidev/json/JSONArray;Lnet/minidev/json/JSONArray;)V" line="332"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolvePath" desc="([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;" line="354"><counter type="INSTRUCTION" missed="8" covered="148"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="2" covered="21"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildFullPathOf" desc="(Ljava/lang/Object;Lnet/minidev/json/JSONArray;)Ljava/lang/Object;" line="395"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$buildFullPathOf$1" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;" line="396"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$parseUnique$0" desc="(Ljava/util/Map$Entry;)Ljava/util/Set;" line="144"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="57" covered="714"/><counter type="BRANCH" missed="10" covered="58"/><counter type="LINE" missed="11" covered="142"/><counter type="COMPLEXITY" missed="10" covered="41"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/zalando/jzon/service/impl/JsonParsingException" sourcefilename="JsonParsingException.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="16"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="20"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="5"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="JsonParsingException.java"><line nr="8" mi="2" ci="0" mb="0" cb="0"/><line nr="9" mi="1" ci="0" mb="0" cb="0"/><line nr="12" mi="0" ci="4" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="1" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="5"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PayloadKeyFactory.java"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="5" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultPayloadKeyParser.java"><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="10" mb="0" cb="0"/><line nr="61" mi="0" ci="12" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="9" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="13" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="2"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="10" mb="0" cb="2"/><line nr="103" mi="0" ci="3" mb="0" cb="2"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="2"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="2"/><line nr="115" mi="0" ci="3" mb="1" cb="1"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="2"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="11" ci="0" mb="0" cb="0"/><line nr="125" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="9" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="13" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="9" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="13" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="15" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="16" mb="0" cb="2"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="10" mb="0" cb="2"/><line nr="179" mi="0" ci="8" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="2"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="0" ci="10" mb="0" cb="2"/><line nr="186" mi="0" ci="8" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="2"/><line nr="188" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="192" mi="0" ci="6" mb="0" cb="2"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="11" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="7" mb="0" cb="0"/><line nr="208" mi="0" ci="1" mb="0" cb="0"/><line nr="209" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="2"/><line nr="250" mi="0" ci="16" mb="0" cb="0"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="1" mb="0" cb="0"/><line nr="255" mi="0" ci="14" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="259" mi="0" ci="3" mb="0" cb="2"/><line nr="260" mi="0" ci="2" mb="0" cb="0"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><line nr="292" mi="0" ci="4" mb="0" cb="0"/><line nr="294" mi="0" ci="4" mb="0" cb="2"/><line nr="295" mi="0" ci="8" mb="1" cb="3"/><line nr="296" mi="0" ci="4" mb="0" cb="0"/><line nr="299" mi="0" ci="2" mb="0" cb="0"/><line nr="302" mi="0" ci="3" mb="1" cb="1"/><line nr="303" mi="0" ci="2" mb="0" cb="2"/><line nr="304" mi="0" ci="5" mb="0" cb="0"/><line nr="307" mi="0" ci="5" mb="0" cb="0"/><line nr="310" mi="2" ci="0" mb="0" cb="0"/><line nr="314" mi="0" ci="4" mb="0" cb="0"/><line nr="315" mi="0" ci="2" mb="0" cb="0"/><line nr="317" mi="0" ci="17" mb="0" cb="0"/><line nr="318" mi="0" ci="6" mb="0" cb="0"/><line nr="319" mi="0" ci="1" mb="0" cb="0"/><line nr="320" mi="0" ci="5" mb="2" cb="2"/><line nr="321" mi="2" ci="0" mb="0" cb="0"/><line nr="324" mi="0" ci="6" mb="0" cb="0"/><line nr="325" mi="0" ci="1" mb="0" cb="0"/><line nr="327" mi="0" ci="2" mb="0" cb="0"/><line nr="332" mi="0" ci="2" mb="0" cb="0"/><line nr="333" mi="0" ci="4" mb="0" cb="2"/><line nr="334" mi="0" ci="2" mb="0" cb="0"/><line nr="337" mi="0" ci="4" mb="0" cb="2"/><line nr="338" mi="0" ci="2" mb="0" cb="0"/><line nr="342" mi="0" ci="9" mb="0" cb="2"/><line nr="343" mi="0" ci="16" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="0" cb="2"/><line nr="346" mi="0" ci="6" mb="0" cb="0"/><line nr="348" mi="0" ci="4" mb="0" cb="0"/><line nr="350" mi="0" ci="1" mb="0" cb="0"/><line nr="351" mi="0" ci="1" mb="0" cb="0"/><line nr="354" mi="0" ci="4" mb="0" cb="0"/><line nr="355" mi="0" ci="2" mb="0" cb="0"/><line nr="356" mi="0" ci="2" mb="0" cb="0"/><line nr="358" mi="0" ci="17" mb="0" cb="0"/><line nr="359" mi="0" ci="19" mb="0" cb="0"/><line nr="361" mi="0" ci="8" mb="0" cb="2"/><line nr="362" mi="0" ci="21" mb="0" cb="0"/><line nr="365" mi="0" ci="7" mb="0" cb="0"/><line nr="366" mi="0" ci="3" mb="1" cb="1"/><line nr="367" mi="0" ci="6" mb="0" cb="0"/><line nr="369" mi="4" ci="0" mb="0" cb="0"/><line nr="372" mi="0" ci="1" mb="0" cb="0"/><line nr="373" mi="0" ci="8" mb="2" cb="4"/><line nr="374" mi="0" ci="2" mb="1" cb="1"/><line nr="375" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="0" ci="8" mb="0" cb="2"/><line nr="379" mi="0" ci="7" mb="0" cb="0"/><line nr="380" mi="0" ci="19" mb="0" cb="0"/><line nr="382" mi="0" ci="3" mb="1" cb="1"/><line nr="383" mi="0" ci="6" mb="0" cb="0"/><line nr="385" mi="4" ci="0" mb="0" cb="0"/><line nr="388" mi="0" ci="1" mb="0" cb="0"/><line nr="390" mi="0" ci="2" mb="0" cb="0"/><line nr="395" mi="0" ci="4" mb="0" cb="0"/><line nr="396" mi="0" ci="10" mb="0" cb="0"/><line nr="397" mi="0" ci="6" mb="0" cb="0"/><line nr="398" mi="0" ci="4" mb="0" cb="0"/><line nr="401" mi="0" ci="4" mb="0" cb="0"/><line nr="402" mi="0" ci="4" mb="0" cb="0"/><line nr="403" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="57" covered="714"/><counter type="BRANCH" missed="10" covered="58"/><counter type="LINE" missed="11" covered="142"/><counter type="COMPLEXITY" missed="10" covered="41"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultKeyModifier.java"><line nr="18" mi="0" ci="11" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="10" mb="0" cb="2"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="7" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="68" covered="769"/><counter type="BRANCH" missed="10" covered="60"/><counter type="LINE" missed="17" covered="155"/><counter type="COMPLEXITY" missed="13" covered="49"/><counter type="METHOD" missed="3" covered="24"/><counter type="CLASS" missed="0" covered="4"/></package><package name="org/zalando/jzon/service"><class name="org/zalando/jzon/service/PayloadKeyModifier" sourcefilename="PayloadKeyModifier.java"/><class name="org/zalando/jzon/service/KeyMapper" sourcefilename="KeyMapper.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mappedKeysOf" desc="(Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;" line="20"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mappedKeyOf" desc="(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mappedKnownValuesOf" desc="(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;" line="57"><counter type="INSTRUCTION" missed="2" covered="30"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mappedKnownValuesOf" desc="(Ljava/util/Map;Ljava/util/List;)Ljava/util/List;" line="82"><counter type="INSTRUCTION" missed="2" covered="49"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mappedKnownValuesFrom" desc="(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;" line="112"><counter type="INSTRUCTION" missed="2" covered="30"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKeyByMappedKnownKey" desc="(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;" line="135"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="191"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="4" covered="43"/><counter type="COMPLEXITY" missed="4" covered="15"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/zalando/jzon/service/PayloadKeyParser" sourcefilename="PayloadKeyParser.java"/><sourcefile name="PayloadKeyModifier.java"/><sourcefile name="KeyMapper.java"><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="10" mb="0" cb="2"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="2"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="1" cb="1"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="11" mb="0" cb="2"/><line nr="63" mi="0" ci="9" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="1" cb="1"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="10" mb="0" cb="2"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="11" mb="0" cb="2"/><line nr="90" mi="0" ci="9" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="1" cb="1"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="11" mb="0" cb="2"/><line nr="118" mi="0" ci="9" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="11" mb="0" cb="2"/><line nr="136" mi="0" ci="5" mb="0" cb="2"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="191"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="4" covered="43"/><counter type="COMPLEXITY" missed="4" covered="15"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PayloadKeyParser.java"/><counter type="INSTRUCTION" missed="9" covered="191"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="4" covered="43"/><counter type="COMPLEXITY" missed="4" covered="15"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></package><counter type="INSTRUCTION" missed="5020" covered="1850"/><counter type="BRANCH" missed="694" covered="168"/><counter type="LINE" missed="1095" covered="407"/><counter type="COMPLEXITY" missed="644" covered="140"/><counter type="METHOD" missed="253" covered="89"/><counter type="CLASS" missed="12" covered="18"/></report>