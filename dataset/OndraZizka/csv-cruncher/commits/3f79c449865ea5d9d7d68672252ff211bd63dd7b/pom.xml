<project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>ch.zizka.csvcruncher</groupId>
  <artifactId>csv-cruncher</artifactId>
  <version>1.13.0</version>
  <name>CsvCruncher</name>
  <description>Treats CSV files as SQL tables, and exports SQL SELECTs back to CSV or JSON.</description>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jvm.args.debug />
    <mainClass>Crunch</mainClass>
    <testRunCmd>${jvm.args.debug} -jar ${project.build.directory}/${project.build.finalName}-single.jar</testRunCmd>
    <skipE2E>true</skipE2E>
  </properties>
  <build>
    <resources>
      <resource>
        <directory>src/main/java</directory>
        <excludes>
          <exclude>*.java</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <inherited>true</inherited>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <optimize>true</optimize>
          <debug>true</debug>
          <encoding>utf-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.1.0</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.22.1</version>
        <configuration>
          <systemPropertyVariables>
            <test.cruncher.runCmd>${testRunCmd}</test.cruncher.runCmd>
            <test.data.dir>${project.build.testSourceDirectory}/../data</test.data.dir>
            <target.dir>${project.build.directory}</target.dir>
            <textdb.allow_full_path>true</textdb.allow_full_path>
          </systemPropertyVariables>
        </configuration>
        <executions>
          <execution>
            <id>it</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>ve</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>assembleDistJar</id>
            <goals>
              <goal>single</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <finalName>${project.artifactId}-${project.version}-single</finalName>
              <archive>
                <manifest>
                  <mainClass>${mainClass}</mainClass>
                  <addClasspath>false</addClasspath>
                  <classpathPrefix>lib/</classpathPrefix>
                  <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                  <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                </manifest>
                <manifestEntries>
                  <Release-Version>${project.version}</Release-Version>
                </manifestEntries>
              </archive>
              <descriptorRefs>
                <descriptorRef>jar-with-dependencies</descriptorRef>
              </descriptorRefs>
            </configuration>
          </execution>
          <execution>
            <id>assembleDistZip</id>
            <goals>
              <goal>single</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <finalName>${project.artifactId}-${project.version}-dist</finalName>
              <archive>
                <manifest>
                  <mainClass>${mainClass}</mainClass>
                  <addClasspath>false</addClasspath>
                  <classpathPrefix>lib/</classpathPrefix>
                </manifest>
              </archive>
              <descriptors>
                <descriptor>src/main/assembly-dist.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <appendAssemblyId>false</appendAssemblyId>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.6.0</version>
        <executions>
          <execution>
            <id>testCrunch-simple</id>
            <phase>integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <skip>${skipE2E}</skip>
              <executable>java</executable>
              <commandlineArgs>
                                ${testRunCmd}
                                --json=entries
                                --rowNumbers
                                -in src/test/data/eapBuilds.csv
                                -out target/results/result.csv
                                -sql 'SELECT jobName, buildNumber, config, ar, arFile, deployDur, warmupDur, scale,
                                CAST(warmupDur AS DOUBLE) / CAST(deployDur AS DOUBLE) AS warmupSlower
                                FROM eapBuilds ORDER BY deployDur'
                            </commandlineArgs>
            </configuration>
          </execution>
          <execution>
            <id>testCrunch-combineInputFile</id>
            <phase>integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <skip>${skipE2E}</skip>
              <executable>java</executable>
              <commandlineArgs>
                                ${testRunCmd}
                                --json=entries
                                --rowNumbers
                                --combineInputs
                                -in src/test/data/eapBuilds.csv
                                -out target/results/result.csv
                                -sql 'SELECT jobName, buildNumber, config, ar, arFile, deployDur, warmupDur, scale,
                                CAST(warmupDur AS DOUBLE) / CAST(deployDur AS DOUBLE) AS warmupSlower
                                FROM eapBuilds ORDER BY deployDur'
                            </commandlineArgs>
            </configuration>
          </execution>
          <execution>
            <id>testCrunch-combineInputFiles-perRootSubDir</id>
            <phase>integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <skip>${skipE2E}</skip>
              <executable>java</executable>
              <commandlineArgs>
                                ${testRunCmd}
                                --json=entries
                                --rowNumbers
                                --combineInputs=concat
                                --combineDirs=all
                                --exclude=.*/LOAD.*\.csv
                                -in src/test/data/sampleMultiFilesPerDir/apollo_session/
                                -out target/results/result.csv
                                -sql 'SELECT session_uid, name, session_type, created_time, modified_date
                                FROM concat ORDER BY session_type, created_time DESC'
                            </commandlineArgs>
            </configuration>
          </execution>
          <execution>
            <id>testCrunch-combineInputFiles-selectStar-negative</id>
            <phase>integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <skip>${skipE2E}</skip>
              <executable>java</executable>
              <commandlineArgs>
                                ${testRunCmd}
                                --json --combineInputs --rowNumbers
                                -sql 'SELECT * FROM session_telephony_pins'
                                --exclude=.*/LOAD.*\.csv
                                -in src/test/data/sampleMultiFilesPerDir/session_telephony_pins/
                                -out target/results/session_telephony_pins.csv
                            </commandlineArgs>
              <outputFile>${project.build.outputDirectory}/testOutput</outputFile>
              <successCodes>
                <code>1</code>
                <code>2</code>
              </successCodes>
            </configuration>
          </execution>
          <execution>
            <id>testCrunch-combineInputFiles-selectStar-qualified</id>
            <phase>integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <skip>${skipE2E}</skip>
              <executable>java</executable>
              <commandlineArgs>
                                ${testRunCmd}
                                --json --combineInputs --rowNumbers
                                --exclude=.*/LOAD.*\.csv
                                -sql 'SELECT session_telephony_pins.* FROM session_telephony_pins'
                                -in src/test/data/sampleMultiFilesPerDir/session_telephony_pins/
                                -out target/results/session_telephony_pins.csv
                            </commandlineArgs>
            </configuration>
          </execution>
          <execution>
            <id>testCrunch-collab-ARG</id>
            <phase>integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <skip>${skipE2E}</skip>
              <executable>java</executable>
              <commandlineArgs>
                                ${testRunCmd}
                                --json --combineInputs
                                --exclude=.*/LOAD.*\.csv
                                -sql 'SELECT * FROM apollo_recording_group'
                                -in src/test/data/sample-collab/apollo_recording_group/
                                -out target/results/apollo_recording_group.csv
                            </commandlineArgs>
            </configuration>
          </execution>
          <execution>
            <id>testCrunch-collab-STP</id>
            <phase>integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <skip>${skipE2E}</skip>
              <executable>java</executable>
              <commandlineArgs>
                                ${testRunCmd}
                                --json --combineInputs
                                --exclude=.*/LOAD.*\.csv
                                -in src/test/data/sample-collab/session_telephony_pins/
                                -out target/results/session_telephony_pins.csv
                                -sql 'SELECT * FROM session_telephony_pins'
                            </commandlineArgs>
            </configuration>
          </execution>
          <execution>
            <id>testVersion</id>
            <phase>integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <skip>${skipE2E}</skip>
              <executable>java</executable>
              <commandlineArgs>${testRunCmd} -v</commandlineArgs>
            </configuration>
          </execution>
          <execution>
            <id>testHelp</id>
            <phase>integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <skip>${skipE2E}</skip>
              <executable>java</executable>
              <commandlineArgs>${testRunCmd} -h</commandlineArgs>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.0.0-M2</version>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.6.0</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.19.1</version>
        <configuration />
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.5</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>net.sf.saxon</groupId>
        <artifactId>saxon</artifactId>
        <version>8.7</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>2.4.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.8.1</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>javax.json</groupId>
      <artifactId>javax.json-api</artifactId>
      <version>1.1.3</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>javax.json</artifactId>
      <version>1.1.3</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.4</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.25</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.3</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>1.2.3</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-csv</artifactId>
      <version>1.6</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <profiles>
    <profile>
      <id>debug</id>
      <properties>
        <jvm.args.debug>-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5050</jvm.args.debug>
      </properties>
    </profile>
    <profile>
      <id>ossrh</id>
      <activation>
        <property>
          <name>release</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-release-plugin</artifactId>
            <version>2.5.3</version>
            <configuration>
              <autoVersionSubmodules>true</autoVersionSubmodules>
              <useReleaseProfile>false</useReleaseProfile>
              <releaseProfiles>release</releaseProfiles>
              <goals>deploy</goals>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.6.8</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>false</autoReleaseAfterClose>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
                <configuration>
                  <keyname>73BA361CA92D829800730DE207838E30786B5257</keyname>
                  <passphrase>${gpg.passphrase}</passphrase>
                  <executable>${gpg.executable}</executable>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>
</project>
