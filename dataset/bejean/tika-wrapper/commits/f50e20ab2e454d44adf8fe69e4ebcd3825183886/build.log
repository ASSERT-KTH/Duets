[INFO] Error stacktraces are turned on.
[INFO] Scanning for projects...
[INFO] 
[INFO] -----------------------< fr.eolya:tika-wrapper >------------------------
[INFO] Building Multi-Format Text Extractor 0.7
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.5:prepare-agent (default) @ tika-wrapper ---
[INFO] argLine set to -javaagent:/home/jdbl/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/tmp/tmpth0soxtf/tika-wrapper/target/jacoco.exec
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ tika-wrapper ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /tmp/tmpth0soxtf/tika-wrapper/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:2.0.2:compile (default-compile) @ tika-wrapper ---
[INFO] Compiling 3 source files to /tmp/tmpth0soxtf/tika-wrapper/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ tika-wrapper ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 14 resources
[INFO] 
[INFO] --- maven-compiler-plugin:2.0.2:testCompile (default-testCompile) @ tika-wrapper ---
[INFO] Compiling 2 source files to /tmp/tmpth0soxtf/tika-wrapper/target/test-classes
[INFO] 
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ tika-wrapper ---
[INFO] Surefire report directory: /tmp/tmpth0soxtf/tika-wrapper/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running fr.eolya.extraction.tika.TikaWrapperTest
java.io.IOException: Cannot run program "/opt/tools/swf2html": error=2, No such file or directory
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1048)
	at com.developpez.adiguba.shell.ProcessConsumer.getProcess(ProcessConsumer.java:471)
	at com.developpez.adiguba.shell.ProcessConsumer.consume(ProcessConsumer.java:486)
	at com.developpez.adiguba.shell.ProcessConsumer.consumeAsString(ProcessConsumer.java:541)
	at fr.eolya.extraction.tika.TikaWrapper.processWithSwfToHtml(TikaWrapper.java:628)
	at fr.eolya.extraction.tika.TikaWrapper.process(TikaWrapper.java:288)
	at fr.eolya.extraction.tika.TikaWrapperTest.testSwfNoTika(TikaWrapperTest.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
Caused by: java.io.IOException: error=2, No such file or directory
	at java.lang.UNIXProcess.forkAndExec(Native Method)
	at java.lang.UNIXProcess.<init>(UNIXProcess.java:247)
	at java.lang.ProcessImpl.start(ProcessImpl.java:134)
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1029)
	... 26 more
========================================================
url: ../doc/reflection.swf
Title: null
Author: null
Created: null
Modified: null
Content-Type: null
CharSet: null



========================================================
url: /fr/eolya/extraction/doc/java.pdf
Title: null
Author: null
Created: 2000-03-05T11:12:31Z
Modified: 2000-03-05T10:12:33Z
Content-Type: application/pdf
CharSet: null
========================================================
date: 2000-03-05T10:12:33Z
pdf:PDFVersion: 1.3
X-Parsed-By: org.apache.tika.parser.pdf.PDFParser
meta:creation-date: 2000-03-05T11:12:31Z
created: Sun Mar 05 11:12:31 UTC 2000
xmpTPg:NPages: 3
Creation-Date: 2000-03-05T11:12:31Z
dcterms:created: 2000-03-05T11:12:31Z
Last-Modified: 2000-03-05T10:12:33Z
dcterms:modified: 2000-03-05T10:12:33Z
dc:format: application/pdf; version=1.3
Last-Save-Date: 2000-03-05T10:12:33Z
meta:save-date: 2000-03-05T10:12:33Z
pdf:encrypted: false
producer: Acrobat Distiller 4.0 for Windows
modified: 2000-03-05T10:12:33Z
Content-Type: application/pdf
========================================================

JAVA PLATE-FORME 
 

 
Les avantages de Java 
L'un des avantages évidents de ce langage est une bibliothèque d'exécution qui se veut indépendante de la plate-
forme: en théorie, il vous est possible d'utiliser le même code pour Windows 95/98/NT, Solaris UNIX 
Macintosh, etc. Cette propriété est indispensable pour une programmation sur Internet (cependant, par rapport à 
la disponibilité sur Windows et Solaris les implémentations sur d'autres plates-formes ont toujours un léger 
décalage).  

1) Architecture classique avec un bytecode différent    
pour chaque processeur . 
 
 
 

2) Architecture Java, le bytecode passe par  
l’intermédiaire d’un interpréteur. 

Apparition du langage 
Vers la fin de 1995, le langage de programmation Java surgit sur la grande scène d'Internet et obtient 
immédiatement un énorme succès. La prétention de Java est de constituer la colle universelle capable de 
connecter les utilisateurs aux informations, que celles-ci proviennent de serveurs Web de bases de 
données, de fournisseurs d'informations ou de toute autre source imaginable. Et Java se trouve en bonne 
position pour accomplir ce pari. Il s'agit d'un langage de conception très performant qui a été adopté par la 
majorité des fournisseurs. Ses caractéristiques intégrées de sécurité offrent un  sentiment de confiance au 
programmeurs comme aux utilisateurs des applications. De plus, Java incorpore des fonctionnalités qui 
facilitent grandement certaines tâches de programmation avancées comme la gestion des réseaux, la 
connectivité des bases de données ou le développement d'applications multitâches. 
La réputation de Java en tant que langage informatique est exagérée: Java est assurément un bon langage 
de programmation. Il s'agit, sans aucun doute, de Fun des meilleurs disponibles pour un programmeur 
sérieux. Java aurait, potentiellement, pu être un grand langage de programmation, mais il est probablement 
trop tard pour cela. Lorsqu'un langage commence à être exploité se pose le problème de la compatibilité 
avec le code existant. De plus, même lorsque des modifications sont possibles sans révolutionner le code 
existant, il est très difficile pour les créateurs d'un langage qui a suscité autant d'intérêt de reconnaître 
qu'un élément x pourrait être plus mauvais ou meilleur qu'un élément y. Même si nous espérons une 
amélioration de Java avec le temps, sa structure de demain restera, à la base, très proche de celle 
d'aujourd'hui. 
 
 



Un autre avantage de ce langage de programmation réside dans le fait que la syntaxe de Java est analogue 
à celle de C++ ce qui le rend économique et professionnel.  
 
Le fait de créer une autre version d'un langage C++ n'est cependant pas suffisant. Le point clé est le 
suivant : il est beaucoup plus facile d'obtenir du code sans erreur à l'aide de java qu'avec C++ 
Pourquoi ? Les concepteurs de Java ont beaucoup réfléchi à la raison pour laquelle le code C++ contenait 
autant d'erreurs. Cette réflexion les a amenés à ajouter dans Java des fonctions destinées à éliminer la 
possibilité de créer du code contenant les types d'erreurs les plus courants (selon certaines estimations, le 
code C++ contient au moins une erreur toutes les cinquante lignes). 
 
• Les concepteurs de java ont supprimé l'allocation et la libération de mémoire manuelles. La mémoire 
dans java est allouée et libérée automatiquement. Vous n'avez jamais à vous préoccuper de pertes de 
mémoire. 
• Ils ont éliminé l'arithmétique des pointeurs introduisant du même coup une vraie gestion de tableau. La 
notion de référence sur une zone mémoire remplace avantageusement celle de " pointeur", car elle 
supprime la possibilité d'écraser toute zone mémoire à cause d'un compteur erroné. 
• Ils ont éliminé toute possibilité de confusion entre une affectation et un test d'égalité ans une instruction 
conditionnelle. Une instruction if (ntries - 3) ne pourra pas franchir l'étape de la compilation  
• Ils ont supprimé l'héritage multiple en le remplaçant par une nouvelle notion d'interface dérivée 
d'Objective C. Les interfaces vous offrent tout ce que vous pouvez obtenir à partir de l'héritage multiple, 
sans la complexité de la gestion de hiérarchie d'héritage multiple. 

 
 
 
 

Caractéristiques 
Les créateurs de Java ont écrit un livre blanc qui présent les caractéristiques fondamentales de Java. Ce livre est 
articulé autour des 11 termes suivants : 
 
 

• Distribué 
Java possède une importante bibliothèque de routines permettant de gérer les protocoles TCP/IP tels que 
HTTP et FTP. Les applications Java peuvent charger et accéder à des sur Internet via des URL avec la 
même facilité qu'elles accèdent à un fichier local sur le système. 
« Nous avons trouvé que les fonctionnalités réseau de Java sont à la fois fiables et d'utilisation aisée. Toute 
personne ayant essayé de faire de la programmation pour Internet avec un autre langage se réjouira de la 
simplicité de Java lorsqu'il s'agit de mettre en oeuvre des tâches lourdes, comme l'ouverture d'une connexion 
avec un socket. De plus, Java rend plus facile l'élaboration des scripts CGI (Common Gateway Interface), et 
un mécanisme élégant, nommé servlet, augmente considérablement l'efficacité du traitement côté serveur, 
assuré par Java. De nombreux serveurs Web, parmi les plus courants, supportent les servlets. Le mécanisme 
d'invocation de méthode à distance (RMI) autorise la communication entre objets distribués. » 

 
 

• Fiabilité 
Java a été conçu pour que les programmes qui l'utilisent soient fiables sous différents aspects. Sa 
conception encourage le programmeur à traquer préventivement les éventuels problèmes, à lancer des 
vérifications dynamiques en cours d'exécution et à éliminer les situations génératrices d'erreurs... La seule 
et unique grosse différence entre C++ et Java réside dans le fait que ce dernier intègre un modèle de 
pointeur qui écarte les risques d'écrasement de la mémoire et d'endommagement des données. 

 
 

• Orienté objet 
Pour rester simples, disons que la conception orientée objet est une technique de programmation 
qui se concentre sur les données (les objets) et sur les interfaces avec ces objets. Pour faire une 
analogie avec la menuiserie, on pourrait dire qu'un menuisier "orienté objet " s'intéresse 
essentiellement à la chaise l'objet qu'il fabrique et non à sa conception (le "comment"). Par 
opposition, le menuisier "non orienté objet " penserait d'abord au "comment "... 

 
 



• Simple 
Nous avoirs voulu créer un système qui puisse être programmé simplement sans nécessiter un 
apprentissage ésotérique, et qui tire parti de l'expérience standard actuelle. En conséquence, 
même si nous pensions que C++ ne convenait pas, Java a été conçu de façon relativement 
proche de ce langage dans le dessein de faciliter la compréhension du système. De nombreuses 
fonctions compliquées, mal comprises, rarement utilisées de C++, qui nous semblaient par 
expérience apporter plus d'inconvénients que d'avantages, ont été supprimées de Java. 

 
• Sécurité 
Java a été conçu pour être exploité dans des environnements serveur et distribués. Dans ce but, la sécurité 
n’a pas été négligée. Java permet le construction de systèmes inaltérables et sans virus. 

 
• Architecture neutre 
Le compilateur génère un format de fichier objet dont l’architecture est neutre – le code compilé est 
exécutable sur de nombreux processeurs, à partir du moment où le système d’exécution de Java est présent. 
Pour ce faire, le compilateur Java génère des instructions en bytecode qui n’ont de lien avec aucune 
architecture particulière. Au contraire, ces instructions ont été conçues pour être à la fois faciles à 
interpréter et faciles à traduire en code natif. 

 
• Portable 
A la différence du C/C++, on ne trouve pas les aspects de dépendance de la mise ne œuvre dans la 
spécification. Les tailles des types de données primaires sont spécifiées, ainsi que le comportement 
arithmétique qui leur est applicable. 

 
• Interprété 
L’interpréteur Java peut exécuter les bytecode directement sur n’importe quelle machine sur laquelle il a 
été porté. Dans la mesure où la liaison est un processus plus incrémentiel et léger, le processus de 
développement peut se révéler plus rapide et exploratoire. 

 
• Performances élevées 
En général, les performances des bytecodes interprétés sont tout à fait suffisantes, il existe toutefois des 
situations dans lesquelles des performances plus élevées sont nécessaires. Les bytecodes peuvent être 
traduits à la volée en code machine pour l’unité centrale destinée à accueillir l’application. 

 
• Multithread 
Les avantages du multithread sont une meilleure interréactivité et un meilleur comportement en temps réel. 

 
 
 






java.io.IOException: Cannot run program "/usr/local/bin/pdftotext": error=2, No such file or directory
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1048)
	at com.developpez.adiguba.shell.ProcessConsumer.getProcess(ProcessConsumer.java:471)
	at com.developpez.adiguba.shell.ProcessConsumer.consume(ProcessConsumer.java:486)
	at com.developpez.adiguba.shell.ProcessConsumer.consumeAsString(ProcessConsumer.java:541)
	at fr.eolya.extraction.tika.TikaWrapper.processWithPdfToText(TikaWrapper.java:550)
	at fr.eolya.extraction.tika.TikaWrapper.process(TikaWrapper.java:286)
	at fr.eolya.extraction.tika.TikaWrapperTest.testPdfNoTika(TikaWrapperTest.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
Caused by: java.io.IOException: error=2, No such file or directory
	at java.lang.UNIXProcess.forkAndExec(Native Method)
	at java.lang.UNIXProcess.<init>(UNIXProcess.java:247)
	at java.lang.ProcessImpl.start(ProcessImpl.java:134)
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1029)
	... 26 more
========================================================
url: ../doc/java.pdf
Title: null
Author: null
Created: null
Modified: null
Content-Type: null
CharSet: null



========================================================
url: ../doc/java.pdf
Title: null
Author: null
Created: 2000-03-05T11:12:31Z
Modified: 2000-03-05T10:12:33Z
Content-Type: application/pdf
CharSet: null
========================================================
date: 2000-03-05T10:12:33Z
pdf:PDFVersion: 1.3
X-Parsed-By: org.apache.tika.parser.pdf.PDFParser
meta:creation-date: 2000-03-05T11:12:31Z
created: Sun Mar 05 11:12:31 UTC 2000
xmpTPg:NPages: 3
Creation-Date: 2000-03-05T11:12:31Z
dcterms:created: 2000-03-05T11:12:31Z
Last-Modified: 2000-03-05T10:12:33Z
dcterms:modified: 2000-03-05T10:12:33Z
dc:format: application/pdf; version=1.3
Last-Save-Date: 2000-03-05T10:12:33Z
meta:save-date: 2000-03-05T10:12:33Z
pdf:encrypted: false
producer: Acrobat Distiller 4.0 for Windows
modified: 2000-03-05T10:12:33Z
Content-Type: application/pdf
========================================================

JAVA PLATE-FORME 
 

 
Les avantages de Java 
L'un des avantages évidents de ce langage est une bibliothèque d'exécution qui se veut indépendante de la plate-
forme: en théorie, il vous est possible d'utiliser le même code pour Windows 95/98/NT, Solaris UNIX 
Macintosh, etc. Cette propriété est indispensable pour une programmation sur Internet (cependant, par rapport à 
la disponibilité sur Windows et Solaris les implémentations sur d'autres plates-formes ont toujours un léger 
décalage).  

1) Architecture classique avec un bytecode différent    
pour chaque processeur . 
 
 
 

2) Architecture Java, le bytecode passe par  
l’intermédiaire d’un interpréteur. 

Apparition du langage 
Vers la fin de 1995, le langage de programmation Java surgit sur la grande scène d'Internet et obtient 
immédiatement un énorme succès. La prétention de Java est de constituer la colle universelle capable de 
connecter les utilisateurs aux informations, que celles-ci proviennent de serveurs Web de bases de 
données, de fournisseurs d'informations ou de toute autre source imaginable. Et Java se trouve en bonne 
position pour accomplir ce pari. Il s'agit d'un langage de conception très performant qui a été adopté par la 
majorité des fournisseurs. Ses caractéristiques intégrées de sécurité offrent un  sentiment de confiance au 
programmeurs comme aux utilisateurs des applications. De plus, Java incorpore des fonctionnalités qui 
facilitent grandement certaines tâches de programmation avancées comme la gestion des réseaux, la 
connectivité des bases de données ou le développement d'applications multitâches. 
La réputation de Java en tant que langage informatique est exagérée: Java est assurément un bon langage 
de programmation. Il s'agit, sans aucun doute, de Fun des meilleurs disponibles pour un programmeur 
sérieux. Java aurait, potentiellement, pu être un grand langage de programmation, mais il est probablement 
trop tard pour cela. Lorsqu'un langage commence à être exploité se pose le problème de la compatibilité 
avec le code existant. De plus, même lorsque des modifications sont possibles sans révolutionner le code 
existant, il est très difficile pour les créateurs d'un langage qui a suscité autant d'intérêt de reconnaître 
qu'un élément x pourrait être plus mauvais ou meilleur qu'un élément y. Même si nous espérons une 
amélioration de Java avec le temps, sa structure de demain restera, à la base, très proche de celle 
d'aujourd'hui. 
 
 



Un autre avantage de ce langage de programmation réside dans le fait que la syntaxe de Java est analogue 
à celle de C++ ce qui le rend économique et professionnel.  
 
Le fait de créer une autre version d'un langage C++ n'est cependant pas suffisant. Le point clé est le 
suivant : il est beaucoup plus facile d'obtenir du code sans erreur à l'aide de java qu'avec C++ 
Pourquoi ? Les concepteurs de Java ont beaucoup réfléchi à la raison pour laquelle le code C++ contenait 
autant d'erreurs. Cette réflexion les a amenés à ajouter dans Java des fonctions destinées à éliminer la 
possibilité de créer du code contenant les types d'erreurs les plus courants (selon certaines estimations, le 
code C++ contient au moins une erreur toutes les cinquante lignes). 
 
• Les concepteurs de java ont supprimé l'allocation et la libération de mémoire manuelles. La mémoire 
dans java est allouée et libérée automatiquement. Vous n'avez jamais à vous préoccuper de pertes de 
mémoire. 
• Ils ont éliminé l'arithmétique des pointeurs introduisant du même coup une vraie gestion de tableau. La 
notion de référence sur une zone mémoire remplace avantageusement celle de " pointeur", car elle 
supprime la possibilité d'écraser toute zone mémoire à cause d'un compteur erroné. 
• Ils ont éliminé toute possibilité de confusion entre une affectation et un test d'égalité ans une instruction 
conditionnelle. Une instruction if (ntries - 3) ne pourra pas franchir l'étape de la compilation  
• Ils ont supprimé l'héritage multiple en le remplaçant par une nouvelle notion d'interface dérivée 
d'Objective C. Les interfaces vous offrent tout ce que vous pouvez obtenir à partir de l'héritage multiple, 
sans la complexité de la gestion de hiérarchie d'héritage multiple. 

 
 
 
 

Caractéristiques 
Les créateurs de Java ont écrit un livre blanc qui présent les caractéristiques fondamentales de Java. Ce livre est 
articulé autour des 11 termes suivants : 
 
 

• Distribué 
Java possède une importante bibliothèque de routines permettant de gérer les protocoles TCP/IP tels que 
HTTP et FTP. Les applications Java peuvent charger et accéder à des sur Internet via des URL avec la 
même facilité qu'elles accèdent à un fichier local sur le système. 
« Nous avons trouvé que les fonctionnalités réseau de Java sont à la fois fiables et d'utilisation aisée. Toute 
personne ayant essayé de faire de la programmation pour Internet avec un autre langage se réjouira de la 
simplicité de Java lorsqu'il s'agit de mettre en oeuvre des tâches lourdes, comme l'ouverture d'une connexion 
avec un socket. De plus, Java rend plus facile l'élaboration des scripts CGI (Common Gateway Interface), et 
un mécanisme élégant, nommé servlet, augmente considérablement l'efficacité du traitement côté serveur, 
assuré par Java. De nombreux serveurs Web, parmi les plus courants, supportent les servlets. Le mécanisme 
d'invocation de méthode à distance (RMI) autorise la communication entre objets distribués. » 

 
 

• Fiabilité 
Java a été conçu pour que les programmes qui l'utilisent soient fiables sous différents aspects. Sa 
conception encourage le programmeur à traquer préventivement les éventuels problèmes, à lancer des 
vérifications dynamiques en cours d'exécution et à éliminer les situations génératrices d'erreurs... La seule 
et unique grosse différence entre C++ et Java réside dans le fait que ce dernier intègre un modèle de 
pointeur qui écarte les risques d'écrasement de la mémoire et d'endommagement des données. 

 
 

• Orienté objet 
Pour rester simples, disons que la conception orientée objet est une technique de programmation 
qui se concentre sur les données (les objets) et sur les interfaces avec ces objets. Pour faire une 
analogie avec la menuiserie, on pourrait dire qu'un menuisier "orienté objet " s'intéresse 
essentiellement à la chaise l'objet qu'il fabrique et non à sa conception (le "comment"). Par 
opposition, le menuisier "non orienté objet " penserait d'abord au "comment "... 

 
 



• Simple 
Nous avoirs voulu créer un système qui puisse être programmé simplement sans nécessiter un 
apprentissage ésotérique, et qui tire parti de l'expérience standard actuelle. En conséquence, 
même si nous pensions que C++ ne convenait pas, Java a été conçu de façon relativement 
proche de ce langage dans le dessein de faciliter la compréhension du système. De nombreuses 
fonctions compliquées, mal comprises, rarement utilisées de C++, qui nous semblaient par 
expérience apporter plus d'inconvénients que d'avantages, ont été supprimées de Java. 

 
• Sécurité 
Java a été conçu pour être exploité dans des environnements serveur et distribués. Dans ce but, la sécurité 
n’a pas été négligée. Java permet le construction de systèmes inaltérables et sans virus. 

 
• Architecture neutre 
Le compilateur génère un format de fichier objet dont l’architecture est neutre – le code compilé est 
exécutable sur de nombreux processeurs, à partir du moment où le système d’exécution de Java est présent. 
Pour ce faire, le compilateur Java génère des instructions en bytecode qui n’ont de lien avec aucune 
architecture particulière. Au contraire, ces instructions ont été conçues pour être à la fois faciles à 
interpréter et faciles à traduire en code natif. 

 
• Portable 
A la différence du C/C++, on ne trouve pas les aspects de dépendance de la mise ne œuvre dans la 
spécification. Les tailles des types de données primaires sont spécifiées, ainsi que le comportement 
arithmétique qui leur est applicable. 

 
• Interprété 
L’interpréteur Java peut exécuter les bytecode directement sur n’importe quelle machine sur laquelle il a 
été porté. Dans la mesure où la liaison est un processus plus incrémentiel et léger, le processus de 
développement peut se révéler plus rapide et exploratoire. 

 
• Performances élevées 
En général, les performances des bytecodes interprétés sont tout à fait suffisantes, il existe toutefois des 
situations dans lesquelles des performances plus élevées sont nécessaires. Les bytecodes peuvent être 
traduits à la volée en code machine pour l’unité centrale destinée à accueillir l’application. 

 
• Multithread 
Les avantages du multithread sont une meilleure interréactivité et un meilleur comportement en temps réel. 

 
 
 






========================================================
url: ../doc/fr.pdf
Title: \376\377\000P\000r\000e\000m\000i\000e\000r\000s\000 \000p\000a\000s\000 \000e\000n\000 \000P\000H\000P
Author: Jacques Bresson
Created: 2007-06-09T12:42:20Z
Modified: null
Content-Type: application/pdf
CharSet: null
========================================================
pdf:PDFVersion: 1.4
X-Parsed-By: org.apache.tika.parser.pdf.PDFParser
creator: Jacques Bresson
xmp:CreatorTool: PDFCreator Version 0.9.3
Keywords: apprendre php jacques bresson iufm reims
meta:author: Jacques Bresson
dc:subject: apprendre php jacques bresson iufm reims
meta:creation-date: 2007-06-09T12:42:20Z
subject: 
created: Sat Jun 09 12:42:20 UTC 2007
dc:creator: Jacques Bresson
xmpTPg:NPages: 11
Creation-Date: 2007-06-09T12:42:20Z
dcterms:created: 2007-06-09T12:42:20Z
dc:format: application/pdf; version=1.4
title: \376\377\000P\000r\000e\000m\000i\000e\000r\000s\000 \000p\000a\000s\000 \000e\000n\000 \000P\000H\000P
dc:title: \376\377\000P\000r\000e\000m\000i\000e\000r\000s\000 \000p\000a\000s\000 \000e\000n\000 \000P\000H\000P
pdf:encrypted: false
meta:keyword: apprendre php jacques bresson iufm reims
Author: Jacques Bresson
producer: GPL Ghostscript 8.54
cp:subject: 
Content-Type: application/pdf
========================================================

Jacques Bresson - Iufm de Reims - Premiers pas en PHP page 1/1 

Premiers pas en PHP 
 

 

Pour faciliter la programmation et le test des pages php il est préférable de pouvoir disposer : 
� d'un éditeur de page : PHP Edit 
� d'un outil de simulation du serveur pour pouvoir tester les pages réalisées : EasyPhp 

Les pages réalisées sous PhpEdit sont copiées dans le dossier c:\program files\easyphp\www 
Depuis un navigateur on saisit l'adresse de la page à visualiser : http://localhost/page1.php 
(on s'adresse au serveur easyphp -http://localhost - qui pointe par défaut vers ce dossier) 

 

Ces logiciels sont téléchargeables gratuitement depuis Internet. 
 

 

 

PHP est un langage dédié exclusivement à la production de pages HTML. Le code Php n'est pas 
interprété par le navigateur de l'utilisateur final( à la différence de javascript), mais par le serveur qui 
renvoie au navigateur une page au format html. 

1 Ecrire une première page contenant du php 

1.1 Exemple d'une page renvoyant l'heure 

 

Le Séparateur d'instructions est constitué par un point-virgule 
L'instruction echo permet d'afficher l'information souhaitée à l'écran (elle supporte les balises html 
qui sont insérées comme du texte entre des guillemets).  
Comment faire, si l'on souhaite pouvoir afficher des guillemets dans un texte affiché à l'écran ? 
Il faut placer les caractères \"  
Ex : echo "Ce personnage est dénommé \"Maurice\""; 
 

L'intérêt du php va surtout résider dans la possibilité de rendre les pages plus dynamiques en 
augmentant l'interactivité avec les utilisateurs. 
Comme dans tout langage, on utilisera des variables pour stocker les données. 

1.2 Les variables 
Exemple : 
<? 
//affectation d'une une variable 
$salutations = "Veuillez agréer, Monsieur, l'expression de mon profond respect";  
//affiche le contenu de la variable 
echo $salutations;  
?> 

Page php stockée sur le serveur 
<html> 
<head> 
<title>Donner l'heure</title> 
</head> 
Ceci est du html 
 

<?php 
echo "premiers pas en php"; 
echo "<Br>"; 
echo date("H:i:s"); 
?> 
 

</body> 
</html> 
 

PHP qui sera 
interprété par 
le serveur 

Début de php 

fin de php 

Page php renvoyée par le serveur et lue par 
le navigateur : 
 

<html> 
<head> 
<title>Donner l'heure</title> 
</head> 
Ceci est du html 
  

premiers pas en php<br>09:50:00 
 

</body> 
</html> 

Génère un saut de 
ligne en Html 



Jacques Bresson - Iufm de Reims - Premiers pas en PHP page 2/2 

Les remarques qui servent à documenter le programme sont précédées de // afin qu'elles ne soient 
pas interprétées par le serveur. 
Les variables sont donc composées du symbole $ suivi du nom de variable. Elles peuvent contenir de 
chaînes de caractères, des entiers ou des nombres réels (attention, les décimales sont repérées par 
un point). 
 

$prixht=12; 
$prixttc=$prixht*1.196; 
// après remise prixttc peut être calculé comme suit 
$prixttc=$prixttc*0.9; 
echo "<br> $prixttc"; 
 

1.3 Quelques structures de contrôle 

1.3.1 La boucle pour… 

 

1.3.2 La boucle tant que… 
Cette boucle fait la même chose que la précédente 
while ( $j <= '6' ) // la boucle s'arrêtera lorsque la variable $i sera supérieure à 6 
{ 
echo "<font size=$j>"; 
echo "Une boucle en PHP"; 
echo "<br>"; 
$j =$j+1;// ajouter 1 à chaque tour de boucle 
} 

1.3.3 La condition si, alors, sinon… 
 

$jeu = 421; 
if($jeu = = 421) 
{  
echo"gagné"; 
}  
elseif($jeu >400 AND $jeu<430) 
{ 
echo"on en n'est pas loin"; 
}  
else 
 { 
echo "on est loin du compte"; 
}  
 

Ce programme n'a d'intérêt que si l'on pose une question à l'utilisateur et qu'on lui offre la possibilité 
de soumettre une donnée pour la variable $jeu. Il est nécessaire d'utiliser pour cela un formulaire. 

La page php 
<html> 
<Body> 
<?php 
for($i=1;$i<=6;$i=$i+1) 
{ 
echo "<font size=$i>"; 
echo "Une boucle en PHP"; 
echo "<br>"; 
} 
?> 
</Body> 
</html> 

Le résultat lu dans un navigateur La page envoyée par le serveur 
<html> 
<Body> 
<font size=1>Une boucle en PHP<br> 
<font size=2>Une boucle en PHP<br> 
<font size=3>Une boucle en PHP<br> 
<font size=4>Une boucle en PHP<br> 
<font size=5>Une boucle en PHP<br> 
<font size=6>Une boucle en PHP<br> 
</Body> 
</html> Attention accolades 

Le elseif est facultatif, il permet 
d'emboîter plusieurs conditions 

Tester cette page php et l'enregistrer sous le 
nom condition.php 



Jacques Bresson - Iufm de Reims - Premiers pas en PHP page 3/3 

2 Utilisation d'un formulaire pour acquérir une donnée saisie par 
l'utilisateur 

2.1 Un premier exemple 
Reprenons l'exemple du test précédent et construisons une page html avec Dreamweaver par 
exemple : 

 

 

Enregistrer la page sous le nom jeu.htm 
 

Visualiser le code html généré et modifier l'action associée à ce formulaire 
 

 

La page condition.php doit être modifiée : il est nécessaire de supprimer l'affectation de la variable jeu 
($jeu=421) puisque celle-ci sera fournie par le formulaire appelant (jeu.htm) 
 

Tester les échanges entre la page jeu.htm (qui envoie la valeur contenue dans la variable jeu du 
formulaire) et la page condition.php. Adresse à saisir dans le navigateur : http://localhost/jeu.htm 

Insertion d'un formulaire 

Insertion d'un champ

Insertion du bouton 
d'envoi Donner le nom à ce champ "jeu" 

La donnée contenue dans la 
variable jeu sera envoyée à la 
page condition.php 



Jacques Bresson - Iufm de Reims - Premiers pas en PHP page 4/4 

2.2 Application : Utilisation d'un formulaire pour l'envoi de courriels 

2.2.1 Le principe d'envoi d'un courriel en php 
Lorsque l'on souhaite pouvoir récupérer dans sa boîte aux lettres l'avis de nombreux utilisateurs, il faut 
leur faciliter la tâche. En effet, le recours à un logiciel de messagerie (en ligne ou hors ligne peut être 
dissuasif). 
Voici la syntaxe php pour envoyer de l'information à une adresse mél : 
<?php 
$to = 'leon.marc@reims.iufm.fr' ; //l'email du destinataire 
$sujet = 'Ceci est un mail de test'; //le sujet  
$message = 'Bonjour, ceci est un envoi de mail test'; //le message 
$from = 'From: votre@email.com'; //l'email de celui qui envoi le message 
//maintenant on envoi le mail avec la fonction php 
mail($to,$sujet,$message,$from);  
?> 
 

Mais cette syntaxe conduit à envoyer toujours le même contenu informatif ! Il convient donc de 
permettre à l'utilisateur final consultant une page sur le web de renseigner des champs de formulaires 
et de poster les informations. 
 

2.2.2 Création du formulaire avec un éditeur de pages web habituel 
Ici sous Dreamweaver 
 

Fenêtre des objets "Formulaire" 

Modification des propriétés des champs  
(notamment le nom du champ) 

Outil permettant de déposer des 
champs dans le formulaire 

Bouton d'envoi des données du 
formulaire 



Jacques Bresson - Iufm de Reims - Premiers pas en PHP page 5/5 

Voici le code généré en Html : 
<form method="post" action=" "> 
  <p><font face="Arial, Helvetica, sans-serif" size="2">Envoyer un message</font></p> 
  <p><font face="Arial, Helvetica, sans-serif" size="2">Sujet :  
    <input type="text" name="sujet" size="40"> 
    </font></p> 
  <p><font face="Arial, Helvetica, sans-serif" size="2">Message :  
    <textarea name="message" cols="100" rows="5"></textarea> 
    </font></p> 
  <p><font face="Arial, Helvetica, sans-serif" size="2">Indiquez ci dessous votre  
    adresse &eacute;lectronique  
    <input type="text" name="from" size="100"> 
    </font></p> 
  <p> <font face="Arial, Helvetica, sans-serif" size="2">  
    <input type="submit" name="submit" value="Envoyer"> 
    </font></p> 
</form> 
 

La page html est enregistrée sous le nom mail.htm 
Il faut désormais faire en sorte que les données soient envoyées à un programme qui s'exécutera sur 
le serveur et envoie ces informations au destinataire. 
 

2.2.3 Le formulaire envoie ses données à une page php 
Intéressons-nous à la première ligne de ce formulaire et modifions l'action : 
<form method="post" action="poster.php"> 
Les instructions de la page php seront exécutées sur le serveur. 
Sous le bloc-notes de Windows ou sous EasyPhp, il convient de créer cette page poster.php : 
 

<?php 
//affectation de la variable recevant le nom du destinataire 
$to='leon.marc@reims.iufm.fr'; 
$from='from:$from'; 
//envoi de mail en utilisant les paramètres envoyés par la page html 
mail($to,$sujet,$message,$from);  
//affichage du message confirmant l'envoi 
echo "Votre message a été correctement envoyé." 
?> 
 

Lorsque l'utilisateur clique sur le bouton "envoyer", les données contenues dans les champs sont 
envoyées au programme poster.php qui est exécuté sur le serveur, celui-ci génère un mél à 
l'attention de leon.marc@reims.iufm.fr et l'envoie.  
 

Par ailleurs, ce même programme php affiche une page web sur le navigateur de l'utilisateur affichant  
"Votre message a été correctement envoyé". 
 

 

Pour tester ces deux pages (html et php), il convient de les télécharger sur un site disposant 
d'un serveur php (free, freesurf…) 
 

Mais il est possible de les tester  localement après les avoir copiées dans le dossier c:\program 
files\easyphp\www 
Depuis un navigateur saisir l'adresse : http://localhost/mail.htm (on s'adresse au serveur easyphp -
http://localhost - qui pointe par défaut vers ce dossier) 
On obtient cependant un message d'erreur car le message n'a pu être envoyé depuis l'outil de 
simulation du serveur Apache local. 
 

Attention, pour éviter les problèmes de spamming, certains fournisseurs d'espace d'hébergement 
refusent ce type de mail via des formulaires. 
 



Jacques Bresson - Iufm de Reims - Premiers pas en PHP page 6/6 

3 Comment constituer un fichier stocké sur le serveur ? 
Il peut être utile de stocker dans un fichier texte, des informations saisies par l'utilisateur depuis une 
page web. 
Exemple : ouvrir la page "controle.htm" (contexte : PLC2 STI voir la fiche de travail correspondante) 

 

 

Voici la boîte à outils permettant de créer un fichier texte sur le serveur. 
 

Ecriture dans le fichier 
<?php 
$fichier = "nom du fichier texte"; 
$ouvert_ecrit = fopen($fichier,'a+'); //ouvre le fichier en lecture et écriture 
fwrite($ouvert_ecrit,"nom des champs \n"); 
// écriture des données de chaque champ dans une ligne du fichier 
//le fichier est automatiquement créé s'il n'existe pas 
fclose($ouvert_ecrit); //referme le fichier 
?> 
 

Lecture des données du fichier via le navigateur 
<? 
$fichier = 'exercice1.txt'; // déclare le nom du fichier à ouvrir 
$taille = filesize($fichier); //donne la taille du fichier 
$ouvert_lect = fopen($fichier,'r'); //ouverture du fichier en lecture seule 
while(!feof($ouvert_lect)) //balayage jusqu'à la fin du fichier 
{ 
$ligne = fgets($ouvert_lect,$taille); //lecture du fichier et stockage dans la variable ligne 
echo $ligne."<br>"; //affiche la ligne à l'écran, et passe à la ligne suivante  
} 
fclose($ouvert_lect); //fermeture fichier en lecture 
?> 
Les données affichées ne sont guère mises en forme, mais pour cet exercice, elles seront traitées 
sous Excel via un programme en visual basic. (Cf. Formation Visual Basic Application pour Excel). 

Dans cette page, le formulaire contient 6 
champs nommés  de haut vers bas : nom,  
champ1, champ2, champ3, champ4, 
champ5. 
 

Les données du formulaire doivent être 
envoyées à une page ajoutresult.php qui 
aura pour tâche de stocker les données 
dans le fichier texte exercice1.txt stocké 
sur le serveur. 

En local, l'écriture dans 
un fichier ne pose pas 
de problème particulier 
autre que celui de la 
syntaxe php. Mais à 
distance, s'ajoutent des 
problèmes de droits sur 
les fichiers. A cet égard 
consultez la remarque 
en bas de la page 11. 



Jacques Bresson - Iufm de Reims - Premiers pas en PHP page 7/7 

4 Comment renseigner une base de données à distance ? 
La manipulation des données est facilitée lorsqu'on les stocke dans une table. 
Php permet d'accéder en lecture et en écriture à des bases de données SQL (langage d'interrogation 
structuré que l'on retrouve sous MSAccess, Oracle…) 
Disons simplement qu'une base de données contient une ou plusieurs tables. 
 

Le logiciel Mysql permet de gérer des bases de données, il est installé sur les serveurs de certains 
fournisseurs d'accès (free, freesurf …) et il est installé localement sur votre machine si vous avez 
installé EasyPhp. 
 

En cliquant avec le bouton droit sur l'icône représentatif d'EasyPhp dans la barre des tâches, il 
est possible d'activer l'affichage de la page d'administration du serveur 

 

Depuis cette page, on accède à phpMyadmin qui permet de générer une base de données. 
 

4.1 Création d'une base de données et d'une table dans cette base 

4.1.1 Création de la base de données 
 

 



Jacques Bresson - Iufm de Reims - Premiers pas en PHP page 8/8 

4.1.2 Création d'une table dans la base de données 
Il est possible de la créer via une instruction sql (requête) 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

Mais il est possible également de la créer via l'interface de phpMyAdmin 

 

 

Dans ce cas il faut renseigner la structure de la table 

 

4.2 Accès à la table depuis une page php 
Nous n'évoquerons pas ici comment alimenter la table via l'interface PhpMyAdmin, qui ne pose aucun 
problème.  
L'objectif ici est de savoir comment alimenter en données cette table via une page lisible 
depuis un navigateur. 
 

Il faut se connecter à la base, l' instruction est la suivante 
 

 

include ("config.php"); 
//connexion à l'hôte 
$database = mysql_connect($mysql_hostname, $mysql_username, $mysql_password); 
//connexion à la base identifiée dans config.php 
mysql_select_db($mysql_database, $database) or die ("erreur de connexion base"); 
 

 

Plutôt que de saisir les libellés exacts de serveur hôte, login et mot de passe, je préfère utiliser des 
noms de variables, qui sont elles mêmes affectées via un fichier config.php. ce qui facilite la portabilité 
des fichiers (du serveur local au serveur distant).  
 

CREATE TABLE table_test  
( 
id int NOT NULL 
auto_increment, 
date varchar (20)  NOT 
NULL, 
champ1 varchar (50) NOT 
NULL, 
champ2 varchar(55) NOT 
NULL, 
PRIMARY KEY (id) 
); 

Le id est de type auto-incrément 
dans notre exemple, c'est un 
compteur en quelque sorte qui 
permet d'identifier de manière unique 
et certaine un et un seul 
enregistrement de la table, on parle 
de clé primaire pour la table ; elle est 
utilisée pour créer des liens entre 
tables d'une même base de données 
(Cf. Bases de données 
relationnelles). 



Jacques Bresson - Iufm de Reims - Premiers pas en PHP page 9/9 

Le fichier config.php est appelé juste avant la commande de connexion à la base de donnée, grâce à 
l'instruction "include". 
 

Voici le petit fichier de configuration config.php 
<? 
 

 $mysql_hostname = 'localhost'; 
 $mysql_username = 'login_de_connexion'; 
 $mysql_password = 'mdp_de_connexion'; 
 $mysql_database = 'nom_de_la_base'; 
 $mysql_tablename = 'nom_de_la_table'; 
 

?> 
 

Ce fichier va être dans un premier temps configuré pour que je puisse accéder à ma base en local : 
<? 
 

 $mysql_hostname = 'localhost'; 
 $mysql_username = 'root'; 
 $mysql_password = ''; 
 $mysql_database = 'tests'; 
 $mysql_tablename = 'table_test'; 
 

?> 
 

 

Il suffira ensuite de modifier ce fichier en fonction du login et du mot de passe nécessaires pour 
accéder au serveur distant (donc serveur en ligne sur lequel la base sera créée). 
 

4.3 Insertion de données dans la table 
 

La page web accueillera donc un formulaire permettant d'acquérir les données pour les champs1 et 
champ2 et qui enverra les contenus des variables champ1 et champ2 à une page insertion.php 
 

include ("config.php"); 
//connexion à l'hôte 
$database = mysql_connect($mysql_hostname, $mysql_username, $mysql_password); 
//connexion à la base identifiée dans config.php 
mysql_select_db($mysql_database, $database) or die ("erreur de connexion base"); 
$date = date("d-m-Y"); 
//on insère le contenu du formulaire 
mysql_query("INSERT INTO table_test VALUES ('','$date','$champ1','$champ2') "); 
mysql_close(); //fermer la connexion 
 

Remarques : 
Le champ id est de type auto-incrément (voir supra) et n'a pas a être renseigné depuis la page web. 
Le champ date doit être affecté automatiquement par une instruction faisant appel à une fonction : 
$date = date("d-m-Y"); 
Attention, ne pas oublier la virgule après les " et avant '$date' car elle prend en compte le champ id. 
 



Jacques Bresson - Iufm de Reims - Premiers pas en PHP page 10/10 

4.4 Lecture et affichage des données de la table 
 

<?php 
include ("config.php"); 
//connexion à l'hôte 
$database = mysql_connect($mysql_hostname, $mysql_username, $mysql_password); 
//connexion à la base identifiée dans config.php 
mysql_select_db($mysql_database, $database) or die ("erreur de connexion base"); 
 

// on sélectionne uniquement les champs utiles (donc pas id) 
$req = mysql_query("SELECT date,champ1,champ2 from table_test");  
//balayage table avec while() et stockage données dans tableau associatif avec mysql_fetch_array() 
while ( $resultat = mysql_fetch_array($req)) 
{ 
Echo "date : ".$resultat[date]."  "."Nom : ".$resultat[champ1]." "."Mél : ".$resultat[champ2]."<br>"; 
}  
mysql_close(); 
?> 
 

Mais le résultat affiché n'est pas magnifique ! 

 

 

Il serait donc souhaitable d'afficher les résultats dans un tableau 
 

On utilise les balises de tableau propres au langage html et le balayage devient alors : 
 

echo "<table border =1>"; 
// première ligne du tableau 
echo "<tr> <td> Date </td> <td> Nom </td> <td> Mél</td> </tr>"; 
//lignes suivantes 
while ( $resultat = mysql_fetch_array($req)) 
{ 
Echo "<tr> 
<td>".$resultat[date]."</td>"."<td>".$resultat[champ1]."</td>"."<td>".$resultat[champ2]."</td></tr>"; 
}  
echo "</table>"; 
  

Ce qui donne l'affichage suivant : 
 



Jacques Bresson - Iufm de Reims - Premiers pas en PHP page 11/11 

4.5 Récupération des données d'une table dans un fichier texte 
Il s'agit d'utiliser les commandes vues précédemment de lecture de table SQL et d'y associer 
l'insertion de lignes dans un fichier texte (vu au chapitre 3) 
 

Ce qui donne le code suivant : 
<?php 
include ("config.php"); 
//connexion à l'hôte 
$database = mysql_connect($mysql_hostname, $mysql_username, $mysql_password); 
//connexion à la base identifiée dans config.php 
mysql_select_db($mysql_database, $database) or die ("erreur de connexion base"); 
// on sélectionne tous les champs ordonnés selon le numéro d'identificateur' 
$res=mysql_query("select * from table_test order by id"); 
//ouverture d'un fichier texte en lecture et écriture 
$fichier = "enquete.txt"; 
$ouvert_ecrit = fopen($fichier,'a+');  
//écriture des libellés de chaque champ dans une ligne du fichier 
fwrite($ouvert_ecrit,"id,date,nom,mél \n"); 
//le fichier est automatiquement créé s'il n'existe pas 
//balayage des données de la table 
while ($ligne=mysql_fetch_object($res)) 
{ 
//stockage des données de chaque ligne avec un séparateur (la virgule) 
//Curieuse syntaxe, la variable $ligne délivre la valeur du champ situé après la flèche 
fwrite($ouvert_ecrit, "$ligne->id,$ligne->date,$ligne->champ1,$ligne->champ2\n"); 
} 
fclose($ouvert_ecrit); //referme le fichier 
mysql_close(); //clôture de la base 
?> 
 

Il resterait à mettre un hyperlien dans une page web pour pointer vers le fichier texte pour pouvoir 
récupérer les données de la table localement. 
 

Attention, ce qui fonctionne en local peut très bien ne pas fonctionner à distance du fait des 
droits sur les fichiers : 
Sur serveur Unix, les fichiers textes doivent avoir les droits pour autoriser l'accès en lecture et écriture 
par tout le monde. C'est à cela que sert la commande Unix chmod. 
 

Avec Ws_Ftp il est possible de modifier ces propriétés (commande CHMOD) pour tel ou tel fichier : 
Le 1er chiffre spécifie les droits pour le propriétaire du fichier (celui qui l'a déposé en principe). 
Le 2ème chiffre spécifie les droits pour le groupe propriétaire du fichier. 
Le 3ème chiffre spécifie les droits pour tout le monde sur le fichier (c'est à dire un visiteur Internet). 

 

 

Ces quelques pages ne constituent qu'une première approche de PHP et de MySql, la syntaxe est 
lourde lorsque l'on n'est pas aguerri à ce type d'exercice. Il existe fort heureusement de nombreux 
sites proposant des scripts déjà saisis pour répondre aux besoins les plus courants.  
Une recherche sur Internet avec un moteur vous donnera de quoi alimenter largement votre 
construction de compétences nouvelles en la matière.     

 Bon courage,  
Jacques Bresson. 

Valeur du chiffre : 
0 : aucun droit en lecture, 
écriture, exécution. 
1 : droit d'éxécution 
2 : droit d'écriture. 
4 : droit de lecture. 

Le propriétaire et le groupe propriétaire doivent avoir un droit 
d'écriture et de lecture (2+4 et 2+4 donc 66) 
Et pour tout le monde un droit de lecture seulement (4) 
Donc on parle d'un CHMOD 664 pour les fichiers qui devront 
être accédés, comme par exemple les fichiers textes des 
chapitres 3 et 4.5. 

Lorsqu'il n'y a plus de ligne 
à lire, mysql_fetch_object') 
renvoie FALSE. 






========================================================
url: ../doc/en.pdf
Title: null
Author: null
Created: null
Modified: null
Content-Type: application/pdf
CharSet: null
========================================================
pdf:PDFVersion: 1.3
X-Parsed-By: org.apache.tika.parser.pdf.PDFParser
Type: COSName{Info}
pdf:encrypted: false
xmpTPg:NPages: 35
producer: null
dc:format: application/pdf; version=1.3
Content-Type: application/pdf
========================================================

Debugging PHP using Eclipse and PDT
Use XDebug or Zend Debugger to boost your productivity when
fixing bugs in PHP applications

Skill Level: Intermediate

Nathan A. Good (mail@nathanagood.com)
Senior Information Engineer
Consultant

17 Jun 2008

The PHP Development Tools (PDT) plug-in, when installed with Eclipse Europa,
gives you that ability to quickly write and debug PHP scripts and pages. PDT
supports two debugging tools: XDebug and the Zend Debugger. Learn how to
configure PDT for debugging PHP scripts and discover which perspectives you use
when taking closer looks at your scripts.

Section 1. Before you start

About this tutorial
This tutorial demonstrates how to configure the PHP Development Tools (PDT)
plug-in for Eclipse to debug your PHP scripts. It also introduces the perspectives
you'll use (namely, PHP Debug) when taking closer looks at your PHP scripts.

Objectives
After completing this tutorial, you'll be able to set up either XDebug — an open
source project that allows you to debug executable scripts and scripts running on a
Web server — or the Zend Debugger in Eclipse using the PDT project to develop

Debugging PHP using Eclipse and PDT
© Copyright IBM Corporation 1994, 2008. All rights reserved. Page 1 of 35





PHP applications. You'll understand the various parts of the PDT project's PHP
Debug perspective and learn how to set up, view, and work with breakpoints. You
also learn how to inspect the values of variables as you are stepping through the
code, as well as how to debug PHP Web applications on your local server so you
can run through your PHP Web application with the debugger.

Prerequisites
To get the most out of this tutorial, you should have done a bit of PHP development.
But what matters more is that you've done software development in general. You'll
understand the debugging concepts better if you're familiar with debugging any other
language. I wrote this to be helpful to those who are fairly new to Eclipse, rather than
to those who have been using Eclipse for a while.

System requirements
To complete this tutorial, you need:

Computer running Microsoft® Windows®, Mac OS X, or Linux®
The examples of the php.ini file shown in this tutorial are for Mac OS X and
Linux. Because both debuggers require a configuration that tells PHP where
the debugger extensions are located, the only noticeable difference — if you're
looking for Windows examples — is the path to the debugger extension. Library
names end in .so. for Mac OS X and Linux and .dll for Windows; also, paths
use a forward slash (/) instead of a backslash (\) as a directory-separator
character.

PHP V5.x
Linux users can install PHP using the software package system included in
their distribution. OS X, and Windows users can find PHP V5.x at PHP.net.
Note: The examples in this tutorial were written using PHP V5.2.5.

Eclipse V3.3
Again, Linux users have it easy: Eclipse is usually available through the
package system included in their distribution. Everyone else can find the
Eclipse integrated development environment (IDE) at the Eclipse downloads.

Apache or Microsoft Internet Information Services (IIS) for serving Web
applications

You need a Web server installed to run the examples that demonstrate how to
debug PHP Web pages on the server. However, if you're interested only in
debugging PHP scripts that aren't Web pages, you won't need a Web server.
For this tutorial, we have Apache V2 set up as the Web server. If you're using

developerWorks® ibm.com/developerWorks

Debugging PHP using Eclipse and PDT
Page 2 of 35 © Copyright IBM Corporation 1994, 2008. All rights reserved.






Windows and would rather use IIS, that works, too. This tutorial assumes you
have the proper access to write to directories inside the document root of the
Web server.

Eclipse PHP Development Tools framework
If you don't already have PHP Development Tools (PDT) installed, you may
want to read ahead to the "Overview of the PDT project" section so you can
decide whether you want to download and install PDT already bundled with the
Zend Debugger. The Eclipse Foundation PDT/Installation wiki is brief, but
helpful.

Zend Studio Web Debugger
Download a 30-day trial version of the Zend Studio Web Debugger.

Section 2. Getting started

Debugging PHP the old way
Before being able to use a debugger inside an IDE, my main methods for debugging
PHP scripts were to:

1. Set up a bunch of echo statements that printed variable values. I'd have
to take these out or comment them out before deploying the script.

2. Use "I am here" echo statements to print the position in the scripts. I'd
also have to remove these lines of code or comment them out before
deploying the script.

3. Tweak the php.ini file to tell PHP to print verbose messaging, including
warnings. Doing this can be a security concern, as it may display things
you don't want to display. If you're doing development locally and
deploying the scripts to a different server, this is less of an issue.

4. Use a logger class, such as the Log PEAR module. This is a great option
because the logger allows you to set priorities so you can quiet debugging
messages later. However, it requires an amount of time — albeit relatively
small — to configure and to come up with a process for having different
logging levels in different environments. Typically, you might want to see
"debug" messages in development environments, but only "warning"
messages or above in production environments. Regardless of your

ibm.com/developerWorks developerWorks®

Debugging PHP using Eclipse and PDT
© Copyright IBM Corporation 1994, 2008. All rights reserved. Page 3 of 35







debugging technique, I recommend finding and using a logging
framework for your PHP applications. A drawback of debuggers is that
sometimes developers are tempted to neglect the time investment of
adding proper logging.

All these techniques, while they worked fine for me for a few years, consume much
more time than stepping through an application in a debugger. So, you can save a
great deal of time using a debugger from inside the IDE. The setup of both
debuggers — XDebug and the Zend Debugger — is covered here.

Overview of the PDT project
The PDT plug-in, when installed with Eclipse Europa, gives you that ability to quickly
write and debug PHP scripts and pages. The PDT project supports two debugging
tools: XDebug and the Zend Debugger. This tutorial demonstrates how to configure
PDT for debugging PHP scripts using either debugger.

PDT V1.0 was released in September 2007. The tools work with the Web Tools
Platform (WTP) to provide the ability to build PHP projects and PHP files with
Eclipse. The PDT project provides features you'll be used to if you're already using
Eclipse for Java™ development — like the PHP perspective and the PHP
Debugging perspective. The PHP editor has syntax highlighting, code formatting,
syntax verification, and code templates. Using PDT, you can execute PHP scripts
and run them on a Web server, and PDT also supports debugging PHP files locally
and on a server (although the debugging requires a bit of setup). This tutorial
focuses on configuring PDT to use one of the supported debuggers for PDT:
XDebug or the Zend Debugger by Zend Software (see Resources).
You don't need both debuggers installed; you can pick and use one of them. This
tutorial covers both, allowing you to make a decision about which one you would like
to use and install. When you have one installed, you can debug any PHP script. With
the PHP Debug perspective, you can view variable values and breakpoints as well
as step through the code. The next section dives into the different parts of the
perspective and how you use them.

Getting ready for this tutorial

Web server-accessible folders
The Apache Web server supports a feature called UserDir, or user
directories, where the Apache Web server looks for a folder
matching a preconfigured folder name and, when found, maps it to
a URL with a tilde (~) appended to the user name. On Mac OS X,
this folder is called Sites by default; on other operating systems, it
has names like public_html or public_www or even www. Check
your Web-server configuration because limiting your project's

developerWorks® ibm.com/developerWorks

Debugging PHP using Eclipse and PDT
Page 4 of 35 © Copyright IBM Corporation 1994, 2008. All rights reserved.




contents to your home directory can be a really good idea. If you
have IIS, it's convenient enough to create a virtual folder mapped to
a directory in which you can place your project contents. As a last
option, create a folder directly under your Web server's document
root and place the project resources in that.

After you've installed PDT, you must add a couple of projects you can use to follow
along. The first is a simple script that prints a greeting a certain number of times.
The second project is a Web application with two pages. These examples work fine
with either debugger, and you don't need to set up the debuggers before adding
these projects.
Add the simple project
The simple PHP project with a simple example script demonstrates the features of
the debuggers and PDT Debug perspective. Perform the following steps to create a
simple PHP project to use as an example if you don't already have an example
available. (Alternatively, download the code from the Download section.)

1. Choose New > Project, then select PHP Project from the list, as shown
in Figure 1, then click Next.

Figure 1. Adding a PHP project

ibm.com/developerWorks developerWorks®

Debugging PHP using Eclipse and PDT
© Copyright IBM Corporation 1994, 2008. All rights reserved. Page 5 of 35




2. Type simpleDebugExample for the project name, as shown below.
Select the Use default checkbox, then click Finish.

Figure 2. Entering the project information

developerWorks® ibm.com/developerWorks

Debugging PHP using Eclipse and PDT
Page 6 of 35 © Copyright IBM Corporation 1994, 2008. All rights reserved.




3. When the project appears in your workspace, add the file in Listing 1.
Listing 1. helloworld.php

<?php
$name = "world";
for ($i = 0; $i %gt; 100; $i++) {

print("Hello, $name ($i)!\n");
}
?>

Add the Web application sample

The Web application example has a couple of Web pages so you can see how to

ibm.com/developerWorks developerWorks®

Debugging PHP using Eclipse and PDT
© Copyright IBM Corporation 1994, 2008. All rights reserved. Page 7 of 35




use the debuggers to debug PHP Web pages on the server from page to page.
You'll be able to see how you can catch variables posted from one page to another.
To set up the Web application example:

1. Choose New > Project to add a new project, then select PHP Project
from the list, as shown in Figure 3, then click Next.

Figure 3. Adding a PHP Web project

2. Modify where the project contents reside.
Unlike the simple example, you may need to modify where the project
contents are located. To make such a modification, clear the Use default
checkbox, then click Browse to find a suitable location for your PHP Web

developerWorks® ibm.com/developerWorks

Debugging PHP using Eclipse and PDT
Page 8 of 35 © Copyright IBM Corporation 1994, 2008. All rights reserved.




pages. Because these Web pages need to be executed on the server,
you can either build your entire workspace in a location where your Web
server can reach it or tweak this setting to put certain package contents in
an accessible location. I don't like having my whole workspace accessible
by the Web server, so I use this setting to put only my Web application
contents in a folder. My setting, for example, is
/Users/nagood/Sites/webDebugExample. On my computer, that directory
is accessible at the URL http://localhost/~nagood/webDebugExample.

3. After adding the new project, add three new files. The first —
enterGreeting.php — is shown in Listing 2.

Listing 2. enterGreeting.php

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Insert title here</title>
</head>
<body>
<?php

$name = "world";

print("<b>Hello, $name</b>");

?>
<form action="results.php" method="post">
<input type="hidden" name="name" value="<?php print($name); ?>" />
<input type="text" name="greeting" value="" />
<input type="submit" value="Submit" />
</form>
</body>
</html>

4. Add the second of the three files: results.php. The contents of this file are
shown in Listing 3.

Listing 3. results.php

<html>
<head><title>Results</title>
</head>
<body>
<?php
include_once 'GreetMaster2000.php';

print ("Hello, " . $_POST['name'] . "!");
print ("<br />");

$gm = new GreetMaster2000();
$gm->setGreeting($_POST['greeting']);

ibm.com/developerWorks developerWorks®

Debugging PHP using Eclipse and PDT
© Copyright IBM Corporation 1994, 2008. All rights reserved. Page 9 of 35




print ("<b>Your greeting is: <i>" . $gm->getFormalGreeting() .
"</i></b>");

?>
</body>
</html>

5. Add the third of the three files — GreetMaster2000.php — which is shown
in Listing 4. This file contains a class to demonstrate what classes look
like when they're debugged.

Listing 4. GreetMaster2000.php

<?php
class GreetMaster2000
{

private $greeting;
private $name;

public function __construct()
{

$this->name = "The GreetMaster 2000 (model Z)";
}

public function setGreeting($message)
{

$this->greeting = $message;
}

public function getGreeting()
{

return $this->greeting;
}

public function getFormalGreeting()
{

return "I, the " . $this->name . ", say to you: \"" .
$this->getGreeting() . "\"";

}

}
?>

Section 3. The PHP Debug perspective

Before setting up the debuggers and starting to debug the projects you've just
created, familiarize yourself with the PHP Debug perspective so you feel comfortable
debugging your PHP application.

The first time you choose Debug As > PHP Script or Debug As > PHP Web Page
to debug a PHP file, Eclipse asks if you want to switch to the PHP Debug

developerWorks® ibm.com/developerWorks

Debugging PHP using Eclipse and PDT
Page 10 of 35 © Copyright IBM Corporation 1994, 2008. All rights reserved.




perspective. If you click Yes, the perspective shown in Figure 4 appears. The
different views contain most commonly used information while debugging a PHP
script.

Figure 4. The PHP Debug perspective

The Debug view
The Debug view displays information about the processes that are running. On the
tab shown in Figure 5, the code is stopped at line 5. Line 5 is inside the
sayHello() function, which is listed in the view. The {main} entry always refers to
the main body of the script, and you can tell by looking at the information in the
Debug view that sayHello() is at line 13 of the script.

Figure 5. The Debug view

ibm.com/developerWorks developerWorks®

Debugging PHP using Eclipse and PDT
© Copyright IBM Corporation 1994, 2008. All rights reserved. Page 11 of 35




The Debug view has several buttons along its top border. While debugging, you use
these buttons to step through, over, or out of parts of your PHP files. The buttons
most commonly used are:

Remove all terminated launches
This cleans up your Debug view by clearing all the terminated (completed)
launches from the view. Whenever you start debugging a PHP file, a launch is
recorded in the Debug view that has information about the process that was
executed. After the process is terminated, it still hangs around in the Debug
view. You can relaunch it by clicking Relaunch in the context menu.

Execute to the next breakpoint
The debugger runs the current debug process until the next breakpoint. If you
have no breakpoints set, the process runs through to completion.

Pause the debugger
Pause the process wherever it is currently. This can be convenient when
debugging long-running loops to find out where you are if a breakpoint wasn't
set.

Terminate the debugger
Stop debugging.

developerWorks® ibm.com/developerWorks

Debugging PHP using Eclipse and PDT
Page 12 of 35 © Copyright IBM Corporation 1994, 2008. All rights reserved.




Disconnect the debugger
If you're debugging on the server, clicking this disconnects the debugger client
from the server. The server continues processing.

Step into the code
If the current line is a function, the debugger steps into the function so you can
debug it.

Step over the code
If the current line is a function, the debugger skips over the function. The code
inside the function will still be executed, but you won't have to step through it.

Step out of the code
If you're in a function and decide you don't want to debug anymore, click this.
The function executes to completion, and your current stop point in the
debugger jumps to the caller of this function.

The Variables view
The Variables view contains information about the variables that are in scope.
Variables appear or disappear from this view as they come in and out of scope. The
example below shows the values of the variables $howManyTimes and the looping
variable $i.

Figure 6. The Variables view

ibm.com/developerWorks developerWorks®

Debugging PHP using Eclipse and PDT
© Copyright IBM Corporation 1994, 2008. All rights reserved. Page 13 of 35




The Breakpoints view
The Breakpoints view displays all breakpoints set for the entire project. From this
view, you can temporarily disable a breakpoint by clearing the checkbox next to the
breakpoint.

Figure 7. The Breakpoints view

developerWorks® ibm.com/developerWorks

Debugging PHP using Eclipse and PDT
Page 14 of 35 © Copyright IBM Corporation 1994, 2008. All rights reserved.




The Editor view
While you are stepping through the code, you can see the code in the PHP editor in
the Editor view.

Figure 8. The Editor view

ibm.com/developerWorks developerWorks®

Debugging PHP using Eclipse and PDT
© Copyright IBM Corporation 1994, 2008. All rights reserved. Page 15 of 35




The Console view
If your PHP file is a simple script that prints messages using the print() or
echo() method, those messages will appear in the Console view. For the simple
example in this tutorial, you'll see the greeting printed to the console several times.

The Debug Output view
The Debug Output view displays the output from the debugger, where applicable.
The Zend Debugger displays information in this view.

The Browser Output view
The Browser Output view shows what would be displayed to the browser if the PHP
script were a Web page. When using the Zend Debugger, the output of the Web
page while it is being drawn is printed here, in its raw HTML form. Seeing your page
in this form may be helpful for those HTML elements that aren't necessarily visible
when viewing your Web page in a browser.

Section 4. Installing and configuring the debuggers

At this point, you should have a couple of example projects set up in your workspace

developerWorks® ibm.com/developerWorks

Debugging PHP using Eclipse and PDT
Page 16 of 35 © Copyright IBM Corporation 1994, 2008. All rights reserved.




and be familiar with the different views in the PHP Debug perspective. This section
covers getting the debuggers configured and hooked into PDT so you can start
debugging the PHP files in the example projects.
Both debuggers require setup that basically includes copying an extension into a
directory, configuring the php.ini file to use the extension, configuring the extension
itself with a couple of configuration values, and restarting your Web server. After this
work is done, you're able to start debugging your PHP Web application using either
debugger.

Note: If you only want to debug PHP scripts (and not Web pages on the server) and
don't have PDT already installed, the fastest way for you to get debugging your PHP
script is to use the Eclipse update site at Zend.com to install the version of PDT
bundled with the Zend Debugger. After installing it, you will be immediately able to
debug PHP scripts inside your IDE.

Install the Zend Debugger

Make sure you're editing the correct file
Before editing php.ini, use the phpinfo() function in a script to get
more information about your PHP installation. The information
includes the full path to the configuration file, as well as the location
of the extensions directory. For more information, see the
"Troubleshooting" section.

The bundled Zend Debugger is easy to install because you can get it from Zend's
update site, just like installing PDT from the Eclipse update site. If you download the
bundled version of PDT from Zend's site, you can begin debugging scripts at once.

If you want to debug PHP Web pages on the server using the Zend Debugger, you
need to install the PHP extensions and configure them in your php.ini configuration
file. To install and configure the extensions:

1. Download the Zend Web server extension binaries from Zend's Web site.

2. Extract the ZIP file containing the binaries.

3. Copy the extension binary (called ZendDebugger.dll or
ZendDebugger.so) to a folder. You don't have to put them in your PHP
extensions folder, but it's a good place to copy them because then all your
extension binaries are in the same place. If you don't know which folder
that is, see "Troubleshooting" to find out how to determine the folder.

4. Update your php.ini file with the settings shown in Listing 5. You might
need to verify that you are editing the correct php.ini file —. Also, you

ibm.com/developerWorks developerWorks®

Debugging PHP using Eclipse and PDT
© Copyright IBM Corporation 1994, 2008. All rights reserved. Page 17 of 35




must make sure that the zend_extension directive is the correct one.
See "Troubleshooting" for more information.

Listing 5. The modified php.ini

[Zend]
zend_extension="/full/path/to/ZendDebugger.so"
zend_debugger.allow_hosts="127.0.0.1, 10.0.1.3"
zend_debugger.expose_remotely=always

5. Restart your Web server.

6. Verify that the Zend Debugger has been installed correctly by using either
the phpinfo() function in a script or the php -m command and look
under [Zend Modules].

Listing 6. Output from the php -m command

[Zend Modules]
Zend Debugger

If you don't see the module listed when trying to verify the installation, you won't be
able to run the debugger through PDT, as explained in the next section. The module
must be installed correctly before you can debug files on the server.

When you've verified that the module is successfully installed, proceed to the
"Setting up PDT" section.

Install XDebug
To use XDebug as a debugger for PDT, you need to download XDebug and install it
just like you would if you weren't using Eclipse at all. There are very good
instructions for downloading and installing XDebug in Martin Streicher's article titled
"Squash bugs in PHP applications with XDebug" (see Resources). As of this writing,
these instructions still apply, and this tutorial covers them only at a very high level:

1. Download the binary files (Windows) or source files (Linux or Mac OS X),
as appropriate.

2. If you're on Mac OS X or Linux, compile the XDebug libraries. To do so,
first run the phpize command in the directory, then run the make
command, as shown below.

developerWorks® ibm.com/developerWorks

Debugging PHP using Eclipse and PDT
Page 18 of 35 © Copyright IBM Corporation 1994, 2008. All rights reserved.




Listing 7. Commands for compiling XDebug

# cd [directory_with_source]
# phpize
# make

3. Edit the php.ini file to include the module for XDebug using the
appropriate zend_extension directive (see "Troubleshooting" for
details).

4. Restart your Web server.

5. Verify that XDebug was installed correctly by using the php -m command
or the phpinfo() function in a script on your Web server. An example of
the phpinfo() output is shown in Figure 9. The php -m output is shown
in Listing 8.

Figure 9. XDebug in the phpinfo() output

Listing 8. Example php -m output with XDebug

[Zend Modules]
Xdebug

ibm.com/developerWorks developerWorks®

Debugging PHP using Eclipse and PDT
© Copyright IBM Corporation 1994, 2008. All rights reserved. Page 19 of 35




zend_extension or zend_extension_ts?
If you don't already know which zend_extension directive to use,
finding out can be a bit tricky. I was using the wrong one for a while,
and it really threw me for a loop. See the "Troubleshooting" section
for tips on determine which directive to use.

Before you can debug using PDT and XDebug, the module must be correctly
installed. If you don't see the module information, check the "Troubleshooting"
section for tips.

Debugging takes a bit more work up front with XDebug than with the Zend Debugger
because you may have to compile the module yourself. But now you're ready to
debug both local scripts and files on the Web server.

Configure the debuggers
When you've installed either of the supported debuggers, you can configure how
PDT works with it, further using the preferences in Eclipse under PHP\Debug, as
shown below.

Figure 10. PHP Debug preferences

developerWorks® ibm.com/developerWorks

Debugging PHP using Eclipse and PDT
Page 20 of 35 © Copyright IBM Corporation 1994, 2008. All rights reserved.




Note that by default, the two debuggers are set up to listen on different ports: 10000
and 9000 for the Zend Debugger and XDebug, respectively. Depending on what you
have set up in your environment, you may have to modify the settings. If you change
the port settings, make sure the debuggers are not configured to be bound to the
same ports (if you have both installed).

Section 5. Setting up PDT

ibm.com/developerWorks developerWorks®

Debugging PHP using Eclipse and PDT
© Copyright IBM Corporation 1994, 2008. All rights reserved. Page 21 of 35




At this point, you should have XDebug or the Zend Debugger installed and
configured, and you should have verified that it is properly installed. Before you can
attach to either debugger and use it with PDT, you have to make a few configuration
changes to PDT to tell it which debugger to use.

Set up your PHP servers
When you installed PDT, you should have gotten a PHP server on which to run your
projects. If you already have a default Web server set up, you can skip this section.
But if you didn't, you can set up a server so you can debug PHP Web pages on your
local computer.

To set up the server:

1. Open the PHP server preferences, expand PHP, then click PHP Servers,
as shown below.

Figure 11. PHP server preferences

developerWorks® ibm.com/developerWorks

Debugging PHP using Eclipse and PDT
Page 22 of 35 © Copyright IBM Corporation 1994, 2008. All rights reserved.




2. Click New to add a new server to the list.

3. In Configure a PHP Server, type a name — such as PHP Server — in
the Name field, then type the base URL (for example,
http://localhost).

4. Click Next.

5. Click Add to add a new path mapping (see Figure 12). You can click
Browse to select a location from your workspace, then make sure the full
path to the resources appears in the Path on Server field. For example,
in my webDebugExample project, I have /webDebugExample in the Path

ibm.com/developerWorks developerWorks®

Debugging PHP using Eclipse and PDT
© Copyright IBM Corporation 1994, 2008. All rights reserved. Page 23 of 35




in Workspace and /Users/nagood/Sites/webDebug in the Path on
Server fields.

Figure 12. Adding a new server mapping

Set up the PHP executables
Before using the debugger, you must verify that the PHP executables are set up
properly. Open the Eclipse preferences, expand PHP, then click PHP Executables,
as shown in Figure 13. Here, you see a fresh installation of the bundled version of
the PDT project from Zend's site; the executables are already set up, and there is
nothing to do.

Figure 13. PHP Executables preferences

developerWorks® ibm.com/developerWorks

Debugging PHP using Eclipse and PDT
Page 24 of 35 © Copyright IBM Corporation 1994, 2008. All rights reserved.




To add and configure a new executable, click Add. The Add new PHP Executable
window appears, as shown in Figure 14. Type a descriptive name (the name can
include spaces) in the Name field, then click Browse to locate the PHP executable
path (that is, /usr/local/php5/bin or C:\PHP) and the php.ini file (see
"Troubleshooting" for hints on locating this file if you don't know where it is).
Figure 14. Defining a PHP executable

ibm.com/developerWorks developerWorks®

Debugging PHP using Eclipse and PDT
© Copyright IBM Corporation 1994, 2008. All rights reserved. Page 25 of 35




Finally, choose the correct PHP debugger. It matters: If you choose the incorrect
debugger, your project might not execute at all or could execute, but not stop at
breakpoints.

Section 6. Debugging your simple script or Web
application

You have a few sample projects in your workspace. You should also have some
familiarity with the PHP Debug perspective. Either or both of XDebug or the Zend
Debugger is installed, configured properly, and verified. Finally, you should have
PDT configured to use the debugger you installed. With all that complete, you're
ready to debug your first PHP script.

Set breakpoints to debug your script

developerWorks® ibm.com/developerWorks

Debugging PHP using Eclipse and PDT
Page 26 of 35 © Copyright IBM Corporation 1994, 2008. All rights reserved.




To see how debugging works, it's best to set up a breakpoint at which the debugger
will stop. When the debugger has stopped at the breakpoint, you can use the various
views in the PHP Debug perspective to inspect the variable values. You can also
step through the code using the buttons in the Debug view.

So set up a breakpoint on line 7 of your helloworld.php script. To do so, select
helloworld.php, then choose Run > Debug As > PHP Script. If this is your first time
debugging, Eclipse asks if you want to automatically switch to the PHP Debug
perspective. If you want the PHP Debug perspective to be activated whenever you
debug a PHP script, click Yes, then select Remember my decision, as shown
below.

Figure 15. Switching to the Debug PHP perspective automatically

When started, the PHP script breaks at the first line of code. This is by design in the
default configuration. From here, you can step through the code or advance to the
next breakpoint. If you advance to the breakpoint you set on line 7, the Debug view
will say you are suspended at a breakpoint.

Figure 16. Suspended at the breakpoint (line 7)

While you're still paused at the breakpoint, look at the Variables view (see Figure

ibm.com/developerWorks developerWorks®

Debugging PHP using Eclipse and PDT
© Copyright IBM Corporation 1994, 2008. All rights reserved. Page 27 of 35




17). Both of the variables, $name and $i, are now in scope and you can see their
values. The $name variable contains the string world, and the $i variable is set to
0.

Figure 17. Variables at line 7 of helloworld.php

Because the breakpoint is inside a loop, executing to the next breakpoint goes to the
next iteration in the loop. You can watch the value of $i increment in the Variables
view.

To continue execution without stopping at every iteration, open the Breakpoints
view, as show in Figure 18. Temporarily disable the breakpoint by clearing the
checkbox beside helloworld.php (line: 7). Now when you execute again to the next
breakpoint, the debugger will skip all the next iterations and run to the end.

Figure 18. Breakpoints in helloworld.php

You can add variables and modify the code to experiment and see how the
debugger behaves.

Debug your Web application
Odds are you're using PHP to build a Web application and you want to debug your
PHP scripts on the server. Debugging your PHP Web page on the server allows you
to see how server variables such as $_GET and $_POST are set, so you know their
value and can debug from page to page.

developerWorks® ibm.com/developerWorks

Debugging PHP using Eclipse and PDT
Page 28 of 35 © Copyright IBM Corporation 1994, 2008. All rights reserved.




To try debugging a PHP application, use the webDebugExample project. This is a
simple example that allows you to type a value in an input field, then submit the form
for processing by the results.php script. In completing this exercise, you can follow
how the $_POST variables are populated with the names and values of the variables
from your form.

Select enterGreeting.php, then choose Run > Debug As > PHP Web Page. If this is
your first time running the debugger, you will be prompted for the launch URL for the
file. Here, you type the full URL to your file, remembering that it will be at the location
in which your Web resources reside. For example, mine is at
http://localhost/~nagood/webDebug/enterGreeting.php. Next, set a breakpoint at line
14 in the results.php file.

Listing 9. Breakpoint at line 14

print ("<b>Your greeting is: <i>" . $gm->getFormalGreeting()
. "</i></b>");

When you launch the PHP Web application, the debugger stops at the first line in the
enterGreeting.php file. You can step through it to see the debugger in action or just
execute to the end.

Type a value in the text input box in the form, then click Submit. Now the debugger
stops at the first line of the results.php file. Execute to the breakpoint you set at line
14 of the script, and you will see that the $gm variable is populated with a value and
that the $_POST array has the values from the previous page.

Figure 19. Variables in results.php

From line 14, you can execute to the end or you can click Step Into in the Debug

ibm.com/developerWorks developerWorks®

Debugging PHP using Eclipse and PDT
© Copyright IBM Corporation 1994, 2008. All rights reserved. Page 29 of 35




view to step into the getFormalGreeting() function on the GreetMaster2000
class.

Section 7. Troubleshooting

This section provides processes and techniques for troubleshooting the debuggers
and associated files.

Finding the correct php.ini file
When configuring PHP to use the debugger extensions — either XDebug or the
Zend Debugger — it's important to make sure that you're editing the correct php.ini
file and that you have the correct zend_extension variable for the debugger. To
find the full path of the php.ini file your installation of PHP uses, use the phpinfo()
function in a simple script placed in a Web directory.

Listing 10. Simple phpinfo.php script

<?php
phpinfo();

?>

Alternatively, type the command php -i | grep "Loaded Conf" and you'll get
a result like Loaded Configuration File =>
/usr/local/php5/lib/php.ini.

Use the correct zend_extension directive
Now that you're sure which php.ini file you need to edit, it's important to get the
correct zend_extension directive to use for your installation. Use the phpinfo()
or php -i method again to find two values: Thread Safety and Debug Build.
Table 1 can help you determine which one to use. A common mistake is using
zend_extension when you need to use zend_exention_ts, and it's a difficult
mistake to catch (at first).
Table 1. Choosing the correct configuration key
Key name Thread safety Debug
zend_extension Off Off
zend_extension_ts On Off

developerWorks® ibm.com/developerWorks

Debugging PHP using Eclipse and PDT
Page 30 of 35 © Copyright IBM Corporation 1994, 2008. All rights reserved.




zend_extension_debug Off On
zend_extension_debug_ts On On

The debugger doesn't stop
If the debugger doesn't stop at all, most likely one of three issues is occurring:

• The first is that you don't have the extension module set up correctly (see
"Use the correct zend_extension directive" for the likely cause).

• If you've verified that the extension is set up correctly, you may not have
PDT set up to use the debugger you have installed. If you've selected the
Zend Debugger as the debugger for your PHP executable, but have
XDebug set up in your php.ini file, you'll get some very unexpected
behavior.

• Or it could be a firewall issue. Make sure you have the ports configured in
your PHP Debugger preferences your firewall allows (if you have a
firewall installed and running).

Determining your extension directory location
To install your XDebug or Zend Debugger extension binary in the same place as all
your other extensions, use phpinfo() or php -i to find out where you directory is.
See Listing 11 for an example from the php -i command.

Listing 11. Finding the extension directory

...

extension_dir => /usr/local/php5/lib/php/extensions/
...

Section 8. Summary

The PDT project supports two debuggers: XDebug and the Zend Debugger. Using a
combination of PDT and one of the supported debuggers, you can graphically and
easily debug PHP scripts and Web applications. Debugging PHP with an IDE is a
huge time-saver, especially when compared to debugging scripts using older
techniques or debugging with the command line.

ibm.com/developerWorks developerWorks®

Debugging PHP using Eclipse and PDT
© Copyright IBM Corporation 1994, 2008. All rights reserved. Page 31 of 35




developerWorks® ibm.com/developerWorks

Debugging PHP using Eclipse and PDT
Page 32 of 35 © Copyright IBM Corporation 1994, 2008. All rights reserved.




Downloads
Description Name Size Download method
Source code os-php-eclipse-pdt-debug_source.zip3KB HTTP

Information about download methods

ibm.com/developerWorks developerWorks®

Debugging PHP using Eclipse and PDT
© Copyright IBM Corporation 1994, 2008. All rights reserved. Page 33 of 35






Resources
Learn

• "Squash bugs in PHP applications with Zend Debugger" tells you more about
Zend Debugger and PHP.

• "Squash bugs in PHP applications with XDebug" explains XDebug and PHP.
• XDebug Support in PDT 2.0 is an overview of the features and quirks of

XDebug support in PDT.
• "Get started with Project Zero, WebSphere sMash, and PHP" provides a tour of

Project Zero, an Eclipse-based project that also enables PHP development.
• PHP.net is the central resource for PHP developers.
• Check out the "Recommended PHP reading list."
• Browse all the PHP content on developerWorks.
• Expand your PHP skills by checking out IBM developerWorks' PHP project

resources.

• To listen to interesting interviews and discussions for software developers,
check out developerWorks podcasts.

• Using a database with PHP? Check out the Zend Core for IBM, a seamless,
out-of-the-box, easy-to-install PHP development and production environment
that supports IBM DB2 V9.

• Stay current with developerWorks' Technical events and webcasts.
• Check out upcoming conferences, trade shows, webcasts, and other Events

around the world that are of interest to IBM open source developers.
• Visit the developerWorks Open source zone for extensive how-to information,

tools, and project updates to help you develop with open source technologies
and use them with IBM's products.

• Watch and learn about IBM and open source technologies and product
functions with the no-cost developerWorks On demand demos.

• Check out the "Recommended Eclipse reading list."
• Browse all the Eclipse content on developerWorks.
• New to Eclipse? Read the developerWorks article "Get started with Eclipse

Platform" to learn its origin and architecture, and how to extend Eclipse with
plug-ins.

• Expand your Eclipse skills by checking out IBM developerWorks' Eclipse project

developerWorks® ibm.com/developerWorks

Debugging PHP using Eclipse and PDT
Page 34 of 35 © Copyright IBM Corporation 1994, 2008. All rights reserved.






















resources.

Get products and technologies
• Download the Eclipse IDE and install it from the official site.
• Download XDebug and learn more about it from the official site.
• Download the PDT bundled with the Zend Debugger from Zend's site.
• Innovate your next open source development project with IBM trial software,

available for download or on DVD.
• Download IBM product evaluation versions, and get your hands on application

development tools and middleware products from DB2®, Lotus®, Rational®,
Tivoli®, and WebSphere®.

• Check out the latest Eclipse technology downloads at IBM alphaWorks.
• Download Eclipse Platform and other projects from the Eclipse Foundation.

Discuss
• Participate in developerWorks blogs and get involved in the developerWorks

community.
• Participate in the developerWorks PHP Forum: Developing PHP applications

with IBM Information Management products (DB2, IDS).

About the author
Nathan A. Good
Nathan Good lives in the Twin Cities area of Minnesota. When he isn't writing
software, he enjoys building PCs and servers, reading about and working with new
technologies, and trying to get all his friends to make the move to open source
software. When he's not at a computer (which he admits isn't often), he spends time
with his family, at his church, and at the movies. Visit his Web site.

ibm.com/developerWorks developerWorks®

Debugging PHP using Eclipse and PDT
© Copyright IBM Corporation 1994, 2008. All rights reserved. Page 35 of 35
















	Table of Contents
	Before you start
	About this tutorial
	Objectives
	Prerequisites
	System requirements

	Getting started
	Debugging PHP the old way
	Overview of the PDT project
	Getting ready for this tutorial

	The PHP Debug perspective
	The Debug view
	The Variables view
	The Breakpoints view
	The Editor view
	The Console view
	The Debug Output view
	The Browser Output view

	Installing and configuring the debuggers
	Install the Zend Debugger
	Install XDebug
	Configure the debuggers

	Setting up PDT
	Set up your PHP servers
	Set up the PHP executables

	Debugging your simple script or Web application
	Set breakpoints to debug your script
	Debug your Web application

	Troubleshooting
	Finding the correct php.ini file
	Use the correct zend_extension directive
	The debugger doesn't stop
	Determining your extension directory location

	Summary
	Downloads
	Resources
	About the author





Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 7.916 sec - in fr.eolya.extraction.tika.TikaWrapperTest
Running fr.eolya.extraction.htmlformater.HtmlFormaterTest
Formule 1 : psychodrame chez Red Bull Le Monde <> T�l�ramaLe Monde diplomatique
Le Huffington PostCourrier internationalLa Vieau Jardin 

S'abonner au Monde � partir de 1 � 
 * Services Le Monde ▾ 
 * Boutique Le Monde 
 * Accueil
 * DVD
 * CD
 * Livres
 * Hors-s�ries
 * Unes du Monde
 * S�lection du mois 
 * Partenaires Le Monde 
 * Annonces auto
 * Annonces immo
 * Annonces emploi
 * Rencontres
 * Tirages photo
 * Formation anglais
 * Boutique Vins
 * Location vacances
 * Shopping
 * Comparateur cr�dit
 * H�tels qui comptent
 * Prix de l'immobilier Fermer  <>

Le debrief Le Monde.fr <> Rechercher : 

Suivez-nous  Facebook  Twitter Suivre le Monde sur Twitter @lemondefr Suivre 
@lemondefr <http://twitter.com/lemondefr>  Google+ Affichez ici la m�t�o de 
votre ville

Recevez nos newsletters� Emploi Identifiez-vous 
 * Accueil 
 * International 
 * Politique 
 * Soci�t� 
 * �conomie 
 * Culture 
 * Id�es 
 * Sport 
 * Sciences 
 * Techno 
 * Style 
 * Vous 
 * �dition Abonn�s Sport


 * Sport <> 
 * En direct <http://lemonde.sports.fr/livescore.html> 
 * Football <> 
 * Sport et société <> 
 * Tournoi des six nations 2013 <> 
 * Ski <> 
 * Sports extrêmes / insolites <> 
 * Tennis <> 
 * Voile <> 
 * Cyclisme <> 
 * Basket <>   Athlétisme <> Auto-moto <> Equitation <> Forme <> Golf <> 
Gymnastique <> Handball <> Jeux d'esprit <> Jeux olympiques <> Natation <> 
Omnisport <> Rugby <> Sports de combat <> Sports de glisse <> Sports mécaniques 
<> Sports US <> Volley <> 

F1 : psychodrame chez Red Bull

Le Monde | 25.03.2013 à 10h53 • Mis � jour le 25.03.2013 à 11h13 



Il y a de l'eau dans le gaz chez les Red Bull 
<http://www.lemonde.fr/sujet/b2f8/red-bull.html>. L'Allemand Sebastian 
<http://www.lemonde.fr/sujet/1ef3/allemand-sebastian.html> Vettel, parti en 
pole position, a remport� dimanche unGrand Prix 
<http://www.lemonde.fr/sujet/5a39/grand-prix.html> de Malaisie 
<http://www.lemonde.fr/malaisie/> torride. Une victoire qui permet au triple 
champion entitre 
<http://conjugaison.lemonde.fr/conjugaison/troisieme-groupe/titre> d'�galer Sir 
Jackie Stewart au palmar�s des victoires enFormule 1 
<http://www.lemonde.fr/formule-1/> (27) mais n'a provoqu� aucun mouvement de 
joie collective au sein de l'�curie autrichienne. Et pour cause. L'Allemand 
s'est impos� en jouant un sale tour, pr�cis�ment au 46e, � son co�quipier Mark 
Webber <http://www.lemonde.fr/sujet/0d0c/mark-webber.html>.

Quasiment certain de l'emporter 
<http://conjugaison.lemonde.fr/conjugaison/premier-groupe/emporter> � Sepang 
apr�savoir <http://conjugaison.lemonde.fr/conjugaison/auxiliaire/avoir> men� la 
course depuis le 5e tour, l'Australien� a vu Vettel, en pneus neufs et donc 
plus rapide,fondre 
<http://conjugaison.lemonde.fr/conjugaison/troisieme-groupe/fondre> sur lui sur 
un d�passement pour le moins limite alors que l'�curie venait dedemander 
<http://conjugaison.lemonde.fr/conjugaison/premier-groupe/demander> � Webber, 
sur sa radio de bord, delever 
<http://conjugaison.lemonde.fr/conjugaison/premier-groupe/lever> le pied et de 
g�rer ses pneus jusqu'� un doubl� qui semblait certain.

 A lire <http://conjugaison.lemonde.fr/conjugaison/troisieme-groupe/lire> : 
Formule 1 : Vettel gagnant, doubl� Red Bull en Malaisie <>

Doubl�, il y a eu mais pas dans l'ordre que l'�quipe Red Bull voulait. 
<http://lemonde.sports.fr/f1/2013/directs/gp-de-malaisie/course.html> On a 
choisi la bonne strat�gie, on contr�lait la course, je pensais qu'on allait
conserver <http://conjugaison.lemonde.fr/conjugaison/premier-groupe/conserver> 
ce r�sultat, c'�tait ce qu'on avait pr�vu avec l'�quipe. Puis Seb a pris sa 
propre d�cision..., a dit Webber, d�pit� et amer, juste apr�s l'arriv�e. 
"J'�tais pr�t � mebattre 
<http://conjugaison.lemonde.fr/conjugaison/troisieme-groupe/battre> jusqu'� la 
fin, mais l'�quipe m'a dit[� la radio] de calmer 
<http://conjugaison.lemonde.fr/conjugaison/premier-groupe/calmer> le jeu. Les 
consignes de course, ce n'est pas �vident, mais �a fait partie de la F1. Je 
suis un fan desport <http://www.lemonde.fr/sport/>, on aimerait tous que tout 
soit toujours beau et pur, mais il ne faut pas �tre trop na�fs non plus", a 
reconnu Webber, apr�savoir 
<http://conjugaison.lemonde.fr/conjugaison/auxiliaire/avoir> confi� que 
"pendant les 15 derniers tours", il avait "pens� � beaucoup de choses pas 
seulement � cette course mais aussi � ce qui s'est pass� autrefois(en 2010, les 
deux pilotes s'�taient d�j� accroch�s lors du Grand Prix de Turquie 
<http://www.wat.tv/video/accrochage-entre-webber-vettel-2tdl9_2hffh_.html> et 
avaient termin� dans le d�cor)."



Veuillez installer Flash Player pour lire la vid�oFormule 1 - R�sum� du Grand 
Prix de Malaisie 
<http://www.canalplus.fr/c-sport/c-formule-1/pid5576-videos.html?vid=838693&sc_cmpid=SharePlayerEmbed>

Cette man�uvre a incit� Vettel � faire 
<http://conjugaison.lemonde.fr/conjugaison/troisieme-groupe/faire> aussit�t son 
mea culpa, en public, sur le podium, et � s'excuser 
<http://conjugaison.lemonde.fr/conjugaison/premier-groupe/excuser> platement 
aupr�s de son co�quipier de 36 ans, v�t�ran du plateau 2013."Il faisait tr�s 
chaud aujourd'hui. Je me suis rat�. J'ai fait une erreur. Je veux m'excuser 
<http://conjugaison.lemonde.fr/conjugaison/premier-groupe/excuser> aupr�s de 
Mark. Si j'ai l'occasion de merattraper 
<http://conjugaison.lemonde.fr/conjugaison/premier-groupe/rattraper> dans l'
avenir <http://conjugaison.lemonde.fr/conjugaison/troisieme-groupe/avenir>, je 
le ferai", a dit Vettel, sans toutefois indiquer 
<http://conjugaison.lemonde.fr/conjugaison/premier-groupe/indiquer> les 
modalit�s pr�cises du renvoi d'ascenseur qui pourraiteffacer 
<http://conjugaison.lemonde.fr/conjugaison/premier-groupe/effacer>, un jour, 
cette victoire entach�e d'une d�sob�issance av�r�e (lire 
<http://conjugaison.lemonde.fr/conjugaison/troisieme-groupe/lire> le tweet 
ci-dessous �mis par l'�curie Red Bull)



Horner/Race/#MalaysianGP "Unfortunately drivers' interests can sometimes come 
into conflict with the teams'."

— Red Bull Racing (@redbullracing)  
<https://twitter.com/redbullracing/status/315800186058309632> 

"L�, il y a beaucoup de nourriture sur la table pour vous 
<http://www.lemonde.fr/vous/> [les journalistes], mais notre relation est tr�s 
professionnelle, m�me si tout le monde sait que nous ne sommes pas les 
meilleurs amis du monde, a toutefois reconnu Vettel. On se respecte et je me 
souviens de gens qui l'avaient critiqu�, � tort, je sais ce qu'il a r�ussi, 
d'o� il vient. Je ne suis pasfier 
<http://conjugaison.lemonde.fr/conjugaison/premier-groupe/fier> d'avoir 
<http://conjugaison.lemonde.fr/conjugaison/auxiliaire/avoir> fait une erreur, 
et la prochaine fois je ferai les choses diff�remment. Je vaisexpliquer 
<http://conjugaison.lemonde.fr/conjugaison/premier-groupe/expliquer> tout �a � 
Mark, tranquillement. Je vais r�fl�chir poursavoir 
<http://conjugaison.lemonde.fr/conjugaison/troisieme-groupe/savoir> si je lui 
donnerai une victoire, mais je pense que je saurai mesouvenir 
<http://conjugaison.lemonde.fr/conjugaison/troisieme-groupe/souvenir> de ce qui 
s'est pass� aujourd'hui. Peut-�tre que dans l'avenir 
<http://conjugaison.lemonde.fr/conjugaison/troisieme-groupe/avenir> l'occasion 
se pr�sentera..." Mais pour l'heure, c'est bien Vettel qui pointe en t�te du 
classement des pilotes.

Nico Rosberg a, lui, joué le jeu 

Le podium a �t� compl�t� par le Britannique Lewis Hamilton, son premier dans 
une Mercedes, mais lui aussi �tait tout penaud. Il s'est m�me excus� d'�tre l�, 
car son co�quipier Nico Rosberg, finalement 4e, avait d� lever le pied en fin 
de course, � la demande de son �curie, pour ne pas compromettre un r�sultat 
tr�s satisfaisant pour l'�curie allemande. La bagarre entre les deux pilotes 
Mercedes a �t� tr�s serr�e, jusqu'au bout, puis Hamilton a estim�, lui aussi en 
public, que"Nico aurait d� �tre sur le podium � ma place, car il a fait une 
meilleure course que moi. Je saurai m'en souvenir si l'occasion se pr�sente", a 
m�me ajout� le champion du monde 2008, en suivant l'exemple de Vettel.



Formule 1 
 * Formule 1 : Vettel gagnant, doublé Red Bull en Malaisie <> 
 * F1 : Honda veut recréer le tandem gagnant avec McLaren  <> 
 * F1 : Räikkönen surprend les favoris au GP d'Australie <> Forme <> ▪ Football
 <> ▪ Sport amateur <> ▪ Pro A <> ▪ Surf <> ▪ Formule 1 <> ▪ ATP <> ▪ Jeux 
olympiques <> ▪ Jeux d'esprit <> ▪ Fed Cup <> Nous suivre

Retrouvez le meilleur de notre communaut� FacebookTwitterGoogle+MobileRSS 

Le monde abonnements Profitez du journal o� et quand vous voulez. Abonnements 
papier, offres 100 % num�riques sur Web et tablette.

S'abonner au Monde à partir de 1 € 

 <http://www.lemonde.fr/abo/> D�j� abonn� au
journal Le Monde ? 
 * Activez votre acc�s � l'�dition abonn�s du Monde.fr 
 * G�rez votre abonnement Les rubriques du Monde.fr International ▪ Politique ▪
Soci�t� ▪ �conomie ▪ Culture ▪ Sport ▪ Techno ▪ Style ▪ Vous ▪ Id�es ▪ Plan�te ▪
�ducation ▪ Disparitions ▪ Sant� Les services du Monde La boutique du Monde ▪ 
Le Monde dans les h�tels ▪ Formation anglais ▪ Annonces auto ▪ Annonces immo ▪ 
Tirages photo ▪ Rencontres ▪ Shopping ▪ Comparateur cr�dit ▪ Devis travaux ▪ 
Conjugaison ▪ Programme t�l� ▪ Jeux ▪ M�t�o ▪ Trafic ▪ Prix de l'immobilier Sur 
le web 
 * › Théâtres à Paris <http://sortir.telerama.fr/paris/theatres.php> 
 * › Hors-série <http://boutique.telerama.fr/index.php/hors-series.html> 
 * › Concerts à Paris <http://sortir.telerama.fr/paris/concerts.php> 
 * › Boutique culture <http://boutique.telerama.fr/index.php/> 
 * › Webradio <http://www.telerama.fr/teleramaradio/> 
 * › Télévision <http://television.telerama.fr/television/> 
 * › Playlist et podcast <http://www.telerama.fr/tag/playlist-audio/> 
 * › Boutiques à Paris <http://sortir.telerama.fr/paris/boutiques.php> 
 * › Séries TV <http://www.telerama.fr/tag/serie/> Les sites du Groupe 
T�l�rama.fr ▪ Talents.fr ▪ Le Huffington Post ▪ CourrierInternational.com ▪ 
Monde-Diplomatique.fr ▪ Les Rencontres professionnelles Le Monde ▪ La Soci�t� 
des lecteurs du Monde ▪ Le Prix Le Monde de la recherche Suivez-nous Facebook
TwitterGoogle+MobileRSS 

Recevez nos newsletters� 

 Index actualit� : A <> B <> C <> D <> E <> F <> G <> H <> I <> J <> K <> L <>
M <> N <> O <> P <> Q <> R <> S <> T <> U <> V <> W <> X <> Y <> Z <> 

 © Le Monde.fr | Fr�quentation certifi�e par l'OJD | CGV | Mentions l�gales | 
Qui sommes-nous ? | Charte groupe | Publicit� | Index <> | Aide : FAQ web - FAQ 
abo - FAQ journal - FAQ mobile 

Journal d'information en ligne, Le Monde.fr offre � ses visiteurs un panorama 
complet de l'actualit�. D�couvrez chaque jour toute l'info en direct (de la 
politique � l'�conomie en passant par le sport et la m�t�o) sur Le Monde.fr, le 
site de news leader de la presse fran�aise en ligne.

  En Continu <> 
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.284 sec - in fr.eolya.extraction.htmlformater.HtmlFormaterTest

Results :

Tests run: 5, Failures: 0, Errors: 0, Skipped: 0

[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.5:report (report) @ tika-wrapper ---
[INFO] Loading execution data file /tmp/tmpth0soxtf/tika-wrapper/target/jacoco.exec
[INFO] Analyzed bundle 'Multi-Format Text Extractor' with 222 classes
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  01:07 min
[INFO] Finished at: 2020-07-30T21:16:46Z
[INFO] ------------------------------------------------------------------------
