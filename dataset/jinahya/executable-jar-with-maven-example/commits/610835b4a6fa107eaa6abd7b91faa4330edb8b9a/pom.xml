<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.github.jinahya</groupId>
    <artifactId>jinahya-parent</artifactId>
    <version>0.3</version>
  </parent>

  <groupId>com.github.jinahya</groupId>
  <artifactId>executable-jar-with-maven-example</artifactId>
  <version>0.5-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>executable-jar-with-maven-example</name>
  <description>an example for generating executable jars with maven</description>
  <url>https://github.com/jinahya/executable-jar-with-maven-example</url>
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>

  <prerequisites>
    <maven>3.2.1</maven>
  </prerequisites>

  <scm>
    <connection>scm:git:git@github.com:jinahya/executable-jar-with-maven-example.git</connection>
    <developerConnection>scm:git:git@github.com:jinahya/executable-jar-with-maven-example.git</developerConnection>
    <url>https://github.com/jinahya/executable-jar-with-maven-example</url>
    <tag>HEAD</tag>
  </scm>
  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/jinahya/executable-jar-with-maven-example/issues</url>
  </issueManagement>

  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.compiler.testSource>1.8</maven.compiler.testSource>
    <maven.compiler.testTarget>1.8</maven.compiler.testTarget>
    <fully.qualified.main.class>com.github.jinahya.example.Main</fully.qualified.main.class>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>19.0-rc2</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <version>4.0</version>
      <scope>runtime</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <!--groupId>org.dstovall</groupId-->
        <groupId>com.jolira</groupId>
        <artifactId>onejar-maven-plugin</artifactId>
        <version>1.4.4</version>
        <executions>
          <execution>
            <configuration>
              <mainClass>${fully.qualified.main.class}</mainClass>
              <attachToBuild>true</attachToBuild>
              <!-- https://code.google.com/p/onejar-maven-plugin/issues/detail?id=8 -->
              <!--classifier>onejar</classifier-->
              <filename>${project.build.finalName}-onejar.${project.packaging}</filename>
            </configuration>
            <goals>
              <goal>one-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <archive>
            <manifest>
              <mainClass>${fully.qualified.main.class}</mainClass>
            </manifest>
          </archive>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.10</version>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeScope>runtime</includeScope>
              <outputDirectory>${project.build.directory}/${project.build.finalName}.lib</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <id>default-jar</id>
            <configuration>
              <archive>
                <manifest>
                  <addClasspath>true</addClasspath>
                  <classpathPrefix>${project.build.finalName}.lib/</classpathPrefix>
                  <mainClass>${fully.qualified.main.class}</mainClass>
                </manifest>
              </archive>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>antrun-archive</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <zip basedir="${project.build.directory}"
                     destfile="${project.build.directory}/${project.build.finalName}.zip"
                     includes="${project.build.finalName}.${project.packaging} ${project.build.finalName}.lib/*"/>
                <tar basedir="${project.build.directory}"
                     destfile="${project.build.directory}/${project.build.finalName}.tar"
                     includes="${project.build.finalName}.${project.packaging} ${project.build.finalName}.lib/*"/>
                <gzip src="${project.build.directory}/${project.build.finalName}.tar"
                      destfile="${project.build.directory}/${project.build.finalName}.tar.gz"/>
                <bzip2 src="${project.build.directory}/${project.build.finalName}.tar"
                       destfile="${project.build.directory}/${project.build.finalName}.tar.bz2"/>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.4.2</version>
        <configuration>
          <shadedArtifactAttached>true</shadedArtifactAttached>
          <transformers>
            <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
              <mainClass>${fully.qualified.main.class}</mainClass>
            </transformer>
          </transformers>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>1.3.0.RELEASE</version>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
            <configuration>
              <classifier>spring-boot</classifier>
              <mainClass>${fully.qualified.main.class}</mainClass>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
