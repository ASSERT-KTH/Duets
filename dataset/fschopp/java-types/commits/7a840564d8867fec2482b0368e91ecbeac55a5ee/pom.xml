<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>net.florianschoppmann.java</groupId>
    <artifactId>java-types</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>

    <name>Java Types</name>
    <description>
        Skeletal implementation of interface javax.lang.model.util.Types, plus concrete realization backed by core
        Java Reflection API, akin to JEP 119.

        This module implements those methods in interface javax.lang.model.util.Types that pertain to the Java type
        system, plus it provides several methods of its own. This includes, among others, determining the subtype
        relationship between two types or resolving actual type arguments. These methods have no equivalent in the Java
        Reflection API.

        The abstract skeletal implementation in this module is meant to be specialized for a particular javax.lang.model
        implementation. The abstraction makes this module well-suited to be used in projects that contain
        javax.lang.model as part of their domain model (for instance, implementations of alternative languages on top of
        the JVM).
    </description>
    <url>https://github.com/fschopp/java-types</url>

    <licenses>
        <license>
            <name>Revised BSD (3-Clause) License</name>
            <url>https://raw.github.com/fschopp/java-types/master/LICENSE</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <url>https://github.com/fschopp/java-types</url>
        <connection>scm:git:https://github.com/fschopp/java-types.git</connection>
        <developerConnection>scm:git:https://github.com/fschopp/java-types.git</developerConnection>
        <tag>v1.0.0</tag>
    </scm>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/fschopp/java-types/issues</url>
    </issueManagement>

    <ciManagement>
        <system>Travis</system>
        <url>https://travis-ci.org/fschopp/java-types</url>
    </ciManagement>

    <developers>
        <developer>
            <id>fschopp</id>
            <name>Florian Schoppmann</name>
            <email>mail@florian-schoppmann.net</email>
            <url>http://www.florian-schoppmann.net</url>
        </developer>
    </developers>

    <inceptionYear>2014</inceptionYear>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <codehaus.findbugs.version>3.0.0</codehaus.findbugs.version>
        <github.maven.version>0.10</github.maven.version>
        <jacoco.version>0.7.2.201409121644</jacoco.version>
        <java.version>1.7</java.version>
        <maven.compiler.version>3.2</maven.compiler.version>
        <maven.checkstyle.version>2.13</maven.checkstyle.version>
        <!-- Pending resolution of https://jira.codehaus.org/browse/MJAVADOC-414, we use an old version of the Javadoc
             plugin. -->
        <maven.javadoc.version>2.9.1</maven.javadoc.version>
        <maven.jar.version>2.5</maven.jar.version>
        <maven.jxr.version>2.5</maven.jxr.version>
        <maven.pmd.version>3.3</maven.pmd.version>
        <maven.gpg.version>1.5</maven.gpg.version>
        <maven.project-info-reports.version>2.7</maven.project-info-reports.version>
        <maven.release.version>2.5.1</maven.release.version>
        <maven.source.version>2.4</maven.source.version>
        <nexus.staging.version>1.6.5</nexus.staging.version>
        <testng.version>6.8.13</testng.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>annotations</artifactId>
            <version>${codehaus.findbugs.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <distributionManagement>
        <site>
            <url>scm:git:https://github.com/fschopp/java-types.git</url>
        </site>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven.javadoc.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jxr-plugin</artifactId>
                    <version>${maven.jxr.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${maven.pmd.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven.checkstyle.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>${codehaus.findbugs.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>analyze-only</goal>
                        </goals>
                        <configuration>
                            <failOnWarning>true</failOnWarning>
                            <outputXML>true</outputXML>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven.jar.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <!-- Prepares property "argLine" pointing to the JaCoCo runtime agent that can be
                                 passed as a VM argument to the application under test. This property needs to
                                 be used by the surefire and failsafe plugins. -->
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${maven.release.version}</version>
                <configuration>
                    <pushChanges>false</pushChanges>
                    <tagNameFormat>v@{project.version}</tagNameFormat>
                    <!-- Disable the release profile that is part of the Maven Super POM -->
                    <useReleaseProfile>false</useReleaseProfile>
                    <!-- During release:perform, enable the "release" profile -->
                    <releaseProfiles>release</releaseProfiles>
                    <goals>deploy</goals>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven.project-info-reports.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle</report>
                        </reports>
                    </reportSet>
                </reportSets>
                <configuration>
                    <consoleOutput>true</consoleOutput>
                    <configLocation>${project.basedir}/src/main/config/checkstyle.xml</configLocation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <configuration>
                    <printFailingErrors>true</printFailingErrors>
                    <targetJdk>${java.version}</targetJdk>
                    <rulesets>
                        <ruleset>${project.basedir}/src/main/config/pmd.xml</ruleset>
                    </rulesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <configuration>
                    <effort>Max</effort>
                    <xmlOutput>true</xmlOutput>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>jar</goal>
                                    <goal>test-jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>${maven.source.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                    <goal>test-jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>${nexus.staging.version}</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>false</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>${maven.gpg.version}</version>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>ghpages</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.github</groupId>
                        <artifactId>site-maven-plugin</artifactId>
                        <version>${github.maven.version}</version>
                        <configuration>
                            <message>Site for version '${project.version}'.</message>
                            <oauth2Token>${env.GH_TOKEN}</oauth2Token>
                            <!-- There is no need to keep a history of the gh-pages branch. -->
                            <force>true</force>
                            <!-- Create a .nojekyll file at the root of the site. This setting is enabled because JaCoCo
                                 creates a directory that begins with an underscore. -->
                            <noJekyll>true</noJekyll>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>site</goal>
                                </goals>
                                <phase>site</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
